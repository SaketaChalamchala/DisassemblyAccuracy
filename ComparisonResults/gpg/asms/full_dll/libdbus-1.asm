;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	B0343C2EE7C148542D5A721435B39C8F
; Input	CRC32 :	938D820C

; File Name   :	C:\compspace\compare\gpg\dlls\full\libdbus-1.dll
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	67DC0000
; Section 1. (virtual address 00001000)
; Virtual size			: 00057CD4 ( 359636.)
; Section size in file		: 00057E00 ( 359936.)
; Offset to raw	data for section: 00000400
; Flags	60500060: Text Data Executable Readable
; Alignment	: 16 bytes

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 67DC1000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_67DC1000	proc near		; DATA XREF: .CRT:67E3A00Co

Size		= dword	ptr -1Ch

		push	ebx
		sub	esp, 18h
		mov	[esp+1Ch+Size],	80h ; Size
		call	malloc
		mov	ebx, eax
		mov	[esp+1Ch+Size],	eax
		call	sub_67E178D0
		test	ebx, ebx
		mov	ds:dword_67E34DA8, eax
		mov	ds:dword_67E34DA4, eax
		mov	eax, 1
		jz	short loc_67DC1035
		mov	dword ptr [ebx], 0
		xor	al, al

loc_67DC1035:				; CODE XREF: sub_67DC1000+2Bj
		add	esp, 18h
		pop	ebx
		retn
sub_67DC1000	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC1040	proc near		; CODE XREF: sub_67DC1260+DAp
					; sub_67DC1260+128p ...

dwMilliseconds	= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 14h
		mov	edx, [esp+1Ch+arg_4]
		test	edx, edx
		jnz	short loc_67DC10C6
		mov	edx, ds:dword_67E34000
		xor	eax, eax
		test	edx, edx
		jle	short loc_67DC10BE
		sub	edx, 1
		mov	ebx, ds:Sleep
		mov	ds:dword_67E34000, edx
		jmp	short loc_67DC107C
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1070:				; CODE XREF: sub_67DC1040+5Dj
		mov	[esp+1Ch+dwMilliseconds], 3E8h ; dwMilliseconds
		call	ebx ; Sleep
		sub	esp, 4

loc_67DC107C:				; CODE XREF: sub_67DC1040+28j
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+dwMilliseconds], offset dword_67E34DAC
		call	sub_67E18A20
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_67DC1070
		mov	eax, ds:dword_67E34DB0
		cmp	eax, 2
		jz	loc_67DC1170
		mov	[esp+1Ch+dwMilliseconds], 1Fh
		call	_amsg_exit
		mov	eax, 1

loc_67DC10BE:				; CODE XREF: sub_67DC1040+17j
					; sub_67DC1040+8Ej
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	0Ch
; ---------------------------------------------------------------------------

loc_67DC10C6:				; CODE XREF: sub_67DC1040+Bj
		cmp	edx, 1
		mov	eax, 1
		jnz	short loc_67DC10BE
		mov	eax, large fs:18h
		mov	esi, ds:Sleep
		mov	ebx, [eax+4]
		jmp	short loc_67DC10F5
; ---------------------------------------------------------------------------

loc_67DC10E1:				; CODE XREF: sub_67DC1040+D2j
		cmp	eax, ebx
		jz	loc_67DC1238
		mov	[esp+1Ch+dwMilliseconds], 3E8h ; dwMilliseconds
		call	esi ; Sleep
		sub	esp, 4

loc_67DC10F5:				; CODE XREF: sub_67DC1040+9Fj
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+dwMilliseconds], offset dword_67E34DAC
		call	sub_67E18A20
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_67DC10E1
		xor	ebx, ebx

loc_67DC1116:				; CODE XREF: sub_67DC1040+1FDj
		mov	eax, ds:dword_67E34DB0
		test	eax, eax
		jz	loc_67DC11F7
		mov	[esp+1Ch+dwMilliseconds], 1Fh
		call	_amsg_exit

loc_67DC112F:				; CODE XREF: sub_67DC1040+1F3j
		test	ebx, ebx
		jz	loc_67DC1242

loc_67DC1137:				; CODE XREF: sub_67DC1040+219j
		mov	eax, ds:off_67E33354
		test	eax, eax
		jz	short loc_67DC115C
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], 2
		mov	[esp+1Ch+var_14], edx
		mov	edx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwMilliseconds], edx
		call	eax ; TlsCallback_0
		sub	esp, 0Ch

loc_67DC115C:				; CODE XREF: sub_67DC1040+FEj
		add	ds:dword_67E34000, 1
		mov	eax, 1
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	0Ch
; ---------------------------------------------------------------------------

loc_67DC1170:				; CODE XREF: sub_67DC1040+67j
		mov	eax, ds:dword_67E34DA8
		mov	[esp+1Ch+dwMilliseconds], eax
		call	sub_67E178C0
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DC11C9
		mov	eax, ds:dword_67E34DA4
		mov	[esp+1Ch+dwMilliseconds], eax
		call	sub_67E178C0
		mov	esi, eax

loc_67DC1192:				; CODE XREF: sub_67DC1040+15Dj
		sub	esi, 4
		cmp	ebx, esi
		ja	short loc_67DC11A8

loc_67DC1199:				; CODE XREF: sub_67DC1040+166j
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_67DC1192
		sub	esi, 4
		call	eax
		cmp	ebx, esi
		jbe	short loc_67DC1199

loc_67DC11A8:				; CODE XREF: sub_67DC1040+157j
		mov	[esp+1Ch+dwMilliseconds], ebx ;	Memory
		nop
		lea	esi, [esi+0]
		call	free
		mov	ds:dword_67E34DA4, 0
		mov	ds:dword_67E34DA8, 0

loc_67DC11C9:				; CODE XREF: sub_67DC1040+141j
		mov	ds:dword_67E34DB0, 0
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+dwMilliseconds], offset dword_67E34DAC
		call	sub_67E18A50
		mov	eax, 1
		sub	esp, 8
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	0Ch
; ---------------------------------------------------------------------------

loc_67DC11F7:				; CODE XREF: sub_67DC1040+DDj
		mov	ds:dword_67E34DB0, 1
		mov	[esp+1Ch+var_18], offset dword_67E3A010
		mov	[esp+1Ch+dwMilliseconds], offset dword_67E3A008
		call	_initterm
		mov	[esp+1Ch+var_18], offset dword_67E3A004
		mov	[esp+1Ch+dwMilliseconds], offset dword_67E3A000
		call	_initterm
		mov	ds:dword_67E34DB0, 2
		jmp	loc_67DC112F
; ---------------------------------------------------------------------------

loc_67DC1238:				; CODE XREF: sub_67DC1040+A3j
		mov	ebx, 1
		jmp	loc_67DC1116
; ---------------------------------------------------------------------------

loc_67DC1242:				; CODE XREF: sub_67DC1040+F1j
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+dwMilliseconds], offset dword_67E34DAC
		call	sub_67E18A50
		sub	esp, 8
		jmp	loc_67DC1137
sub_67DC1040	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC1260	proc near		; CODE XREF: DllEntryPoint+1Ep

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		test	edx, edx
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+2Ch+var_C], esi
		mov	esi, edx
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, ecx
		mov	[esp+2Ch+var_8], edi
		mov	dword_67E19048,	edx
		jnz	short loc_67DC12E0
		mov	eax, ds:dword_67E34000
		test	eax, eax
		jz	loc_67DC13B7
		call	sub_67E17A90

loc_67DC1295:				; CODE XREF: sub_67DC1260+90j
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E11910
		sub	esp, 0Ch
		cmp	esi, 3
		mov	edi, eax
		jz	loc_67DC13A0
		test	esi, esi
		jz	loc_67DC13A0

loc_67DC12BB:				; CODE XREF: sub_67DC1260+B2j
					; sub_67DC1260+F9j ...
		mov	eax, edi
		mov	ebx, [esp+2Ch+var_10]
		mov	dword_67E19048,	0FFFFFFFFh
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC12E0:				; CODE XREF: sub_67DC1260+21j
		lea	eax, [edx-1]
		cmp	eax, 1
		jbe	short loc_67DC1360

loc_67DC12E8:				; CODE XREF: sub_67DC1260+134j
		call	sub_67E17A90
		cmp	esi, 1
		jnz	short loc_67DC1295
		call	sub_67E17DA0
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 1
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E11910
		sub	esp, 0Ch
		test	eax, eax
		mov	edi, eax
		jnz	short loc_67DC12BB
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E11910
		sub	esp, 0Ch
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DC1040
		sub	esp, 0Ch
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E17DC0
		sub	esp, 0Ch
		jmp	loc_67DC12BB
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1360:				; CODE XREF: sub_67DC1260+86j
		mov	[esp+2Ch+var_24], ecx
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E17DC0
		sub	esp, 0Ch
		test	eax, eax
		mov	edi, eax
		jz	loc_67DC12BB
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DC1040
		sub	esp, 0Ch
		test	eax, eax
		mov	edi, eax
		jnz	loc_67DC12E8
		jmp	loc_67DC12BB
; ---------------------------------------------------------------------------
		align 10h

loc_67DC13A0:				; CODE XREF: sub_67DC1260+4Dj
					; sub_67DC1260+55j
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DC1040
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_67DC13C0

loc_67DC13B7:				; CODE XREF: sub_67DC1260+2Aj
		xor	edi, edi
		jmp	loc_67DC12BB
; ---------------------------------------------------------------------------
		align 10h

loc_67DC13C0:				; CODE XREF: sub_67DC1260+155j
		test	edi, edi
		jz	loc_67DC12BB
		mov	[esp+2Ch+var_24], ebp
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E17DC0
		sub	esp, 0Ch
		mov	edi, eax
		jmp	loc_67DC12BB
sub_67DC1260	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)
		public DllEntryPoint
DllEntryPoint	proc near

var_10		= dword	ptr -10h
hinstDLL	= dword	ptr  4
fdwReason	= dword	ptr  8
lpReserved	= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+fdwReason]
		mov	ds:dword_67E349E0, 0
		cmp	edx, 1
		jz	short loc_67DC1420

loc_67DC1406:				; CODE XREF: DllEntryPoint+3Dj
		mov	ecx, [esp+1Ch+lpReserved]
		mov	eax, [esp+1Ch+hinstDLL]
		call	sub_67DC1260
		add	esp, 1Ch
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1420:				; CODE XREF: DllEntryPoint+14j
		mov	[esp+1Ch+var_10], edx
		call	sub_67E17E60
		mov	edx, [esp+1Ch+var_10]
		jmp	short loc_67DC1406
DllEntryPoint	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_67DC1430	proc near		; CODE XREF: sub_67E18CA0+6p

lpModuleName	= dword	ptr -18h
lpProcName	= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, dword_67E19060
		test	eax, eax
		jz	short locret_67DC147B
		mov	[esp+18h+lpModuleName],	offset ModuleName ; "libgcj_s.dll"
		call	ds:GetModuleHandleA
		mov	edx, eax
		sub	esp, 4
		test	edx, edx
		mov	eax, 0
		jz	short loc_67DC146E
		mov	[esp+18h+lpProcName], offset ProcName ;	"_Jv_RegisterClasses"
		mov	[esp+18h+lpModuleName],	edx ; hModule
		call	ds:GetProcAddress
		sub	esp, 8

loc_67DC146E:				; CODE XREF: sub_67DC1430+28j
		test	eax, eax
		jz	short locret_67DC147B
		mov	[esp+18h+lpModuleName],	offset dword_67E19060
		call	eax

locret_67DC147B:			; CODE XREF: sub_67DC1430+Dj
					; sub_67DC1430+40j
		leave
		retn
sub_67DC1430	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_67DC1480()
sub_67DC1480	proc near		; DATA XREF: sub_67E18CA0+Bo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_67DC1480	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   2. dbus_address_entry_get_method

; =============== S U B	R O U T	I N E =======================================


		public dbus_address_entry_get_method
dbus_address_entry_get_method proc near	; CODE XREF: dbus_server_listen+345p
					; dbus_server_listen+692p ...
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	sub_67E01770
dbus_address_entry_get_method endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DC14A0(int,	char *,	char *,	char)
sub_67DC14A0	proc near		; CODE XREF: sub_67DF33B0+453p
					; sub_67DF67A0+1DCp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_4]
		mov	edx, [esp+2Ch+arg_0]
		mov	ecx, [esp+2Ch+arg_8]
		mov	ebx, dword ptr [esp+2Ch+arg_C]
		test	eax, eax
		jz	short loc_67DC14E0
		mov	[esp+2Ch+var_1C], ecx
		mov	dword ptr [esp+2Ch+var_20], eax	; char
		mov	[esp+2Ch+var_24], offset aServerAddressO ; "Server address of type %s was missing a"...
		mov	[esp+2Ch+var_28], offset aOrg_freedesk_0 ; "org.freedesktop.DBus.Error.BadAddress"
		mov	[esp+2Ch+var_2C], edx ;	int
		call	dbus_set_error
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC14E0:				; CODE XREF: sub_67DC14A0+16j
		mov	dword ptr [esp+2Ch+arg_C], ebx ; char
		mov	[esp+2Ch+arg_8], offset	aCouldNotParseS	; "Could not parse server address: %s"
		mov	[esp+2Ch+arg_4], offset	aOrg_freedesk_0	; "org.freedesktop.DBus.Error.BadAddress"
		mov	[esp+2Ch+arg_0], edx ; int
		add	esp, 28h
		pop	ebx
		jmp	dbus_set_error
sub_67DC14A0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DC1510
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC1510	proc near		; CODE XREF: .text:67DC1501j
					; dbus_address_unescape_value+68p ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= byte ptr -50h
var_4C		= dword	ptr -4Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_1F		= byte ptr -1Fh
var_1E		= byte ptr -1Eh
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		mov	esi, ecx
		push	ebx
		mov	ebx, eax
		sub	esp, 4Ch
		mov	[esp+5Ch+var_5C], edx
		call	sub_67E01770
		mov	edi, [esp+5Ch+arg_0]
		lea	esi, [eax+esi]
		add	edi, esi
		cmp	esi, edi
		jz	loc_67DC1680
		lea	ebp, [esp+5Ch+var_38]
		jmp	loc_67DC15EF
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1540:				; CODE XREF: sub_67DC1510+F8j
		cmp	al, 2Dh
		jz	loc_67DC160E
		cmp	al, 5Fh
		jz	loc_67DC160E
		cmp	al, 2Fh
		jz	loc_67DC160E
		cmp	al, 5Ch
		jz	loc_67DC160E
		cmp	al, 2Ah
		jz	loc_67DC160E
		cmp	al, 2Eh
		jz	loc_67DC160E
		cmp	al, 25h
		jnz	loc_67DC16BF
		lea	eax, [esi+3]
		cmp	edi, eax
		lea	esi, [esi+0]
		jb	loc_67DC1708
		movzx	eax, byte ptr [esi+1]
		add	esi, 2
		mov	[esp+5Ch+var_1F], al
		movzx	eax, byte ptr [esi]
		mov	[esp+5Ch+var_1D], 0
		mov	[esp+5Ch+var_5C], ebp ;	int
		mov	[esp+5Ch+var_1E], al
		lea	eax, [esp+5Ch+var_1F]
		mov	[esp+5Ch+var_58], eax ;	char *
		call	sub_67E03060
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E00CE0
		mov	dword ptr [esp+5Ch+var_50], ebx	; char
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], ebp
		mov	[esp+5Ch+var_4C], eax
		lea	eax, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_54], eax
		call	sub_67E06B70
		test	eax, eax
		jz	short loc_67DC1621
		cmp	[esp+5Ch+var_24], 2
		jnz	loc_67DC16E7

loc_67DC15E4:				; CODE XREF: sub_67DC1510+10Fj
		add	esi, 1
		cmp	edi, esi
		jz	loc_67DC1680

loc_67DC15EF:				; CODE XREF: sub_67DC1510+28j
		movzx	eax, byte ptr [esi]
		lea	edx, [eax-41h]
		cmp	dl, 19h
		jbe	short loc_67DC160E
		lea	edx, [eax-61h]
		cmp	dl, 19h
		jbe	short loc_67DC160E
		lea	edx, [eax-30h]
		cmp	dl, 9
		ja	loc_67DC1540

loc_67DC160E:				; CODE XREF: sub_67DC1510+32j
					; sub_67DC1510+3Aj ...
		movzx	eax, al
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E067A0
		test	eax, eax
		jnz	short loc_67DC15E4

loc_67DC1621:				; CODE XREF: sub_67DC1510+C7j
					; sub_67DC1510+1D2j ...
		mov	edx, [esp+5Ch+arg_4]
		test	edx, edx
		jz	short loc_67DC1639
		mov	eax, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_error_is_set
		test	eax, eax
		jz	short loc_67DC169B

loc_67DC1639:				; CODE XREF: sub_67DC1510+117j
		xor	ebx, ebx

loc_67DC163B:				; CODE XREF: sub_67DC1510+1AAj
		mov	eax, [esp+5Ch+arg_4]
		test	eax, eax
		jnz	short loc_67DC1687

loc_67DC1643:				; CODE XREF: sub_67DC1510+175j
					; sub_67DC1510+189j
		mov	edx, 1

loc_67DC1648:				; CODE XREF: sub_67DC1510+187j
		mov	[esp+5Ch+var_4C], offset aAppend_unescap ; "append_unescaped_value"
		mov	dword ptr [esp+5Ch+var_50], 155h
		mov	[esp+5Ch+var_54], offset aRBuildWin32lib ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aRetErrorNullDb ; "ret	|| error == NULL || dbus_error_is_s"...
		mov	[esp+5Ch+var_5C], edx
		call	sub_67DFAE70
		add	esp, 4Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1680:				; CODE XREF: sub_67DC1510+1Ej
					; sub_67DC1510+D9j
		mov	ebx, 1
		jmp	short loc_67DC1643
; ---------------------------------------------------------------------------

loc_67DC1687:				; CODE XREF: sub_67DC1510+131j
		mov	eax, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DC1648
		jmp	short loc_67DC1643
; ---------------------------------------------------------------------------

loc_67DC169B:				; CODE XREF: sub_67DC1510+127j
		mov	eax, off_67E19010
		xor	ebx, ebx
		mov	[esp+5Ch+var_58], offset aOrg_freedeskto ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+5Ch+var_54], eax
		mov	eax, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_set_error_const
		jmp	loc_67DC163B
; ---------------------------------------------------------------------------

loc_67DC16BF:				; CODE XREF: sub_67DC1510+62j
		movsx	eax, al
		mov	dword ptr [esp+5Ch+var_50], eax	; char
		mov	eax, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_54], offset aInDBusAddressC ; "In D-Bus address, character	'%c' should"...
		mov	[esp+5Ch+var_58], offset aOrg_freedesk_0 ; "org.freedesktop.DBus.Error.BadAddress"
		mov	[esp+5Ch+var_5C], eax ;	int
		call	dbus_set_error
		jmp	loc_67DC1621
; ---------------------------------------------------------------------------

loc_67DC16E7:				; CODE XREF: sub_67DC1510+CEj
		mov	eax, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_54], offset aInDBusAddressP ; "In D-Bus address, percent character	was"...
		mov	[esp+5Ch+var_58], offset aOrg_freedesk_0 ; "org.freedesktop.DBus.Error.BadAddress"
		mov	[esp+5Ch+var_5C], eax ;	int
		call	dbus_set_error
		jmp	loc_67DC1621
; ---------------------------------------------------------------------------

loc_67DC1708:				; CODE XREF: sub_67DC1510+70j
		mov	eax, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_54], offset aInDBusAddres_0 ; "In D-Bus address, percent character	was"...
		mov	[esp+5Ch+var_58], offset aOrg_freedesk_0 ; "org.freedesktop.DBus.Error.BadAddress"
		mov	[esp+5Ch+var_5C], eax ;	int
		call	dbus_set_error
		jmp	loc_67DC1621
sub_67DC1510	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   5. dbus_address_unescape_value

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_address_unescape_value(char *, int)
		public dbus_address_unescape_value
dbus_address_unescape_value proc near

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_38		= dword	ptr -38h
var_24		= byte ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 5Ch
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_C], ebx
		lea	ebx, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_4], edi
		lea	edi, [esp+5Ch+var_38]
		mov	[esp+5Ch+var_8], esi
		mov	esi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_58], eax ;	char *
		mov	[esp+5Ch+var_10], 0
		mov	[esp+5Ch+var_5C], edi ;	int
		call	sub_67E03060
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC1783
		mov	ebx, [esp+5Ch+var_C]
		mov	esi, [esp+5Ch+var_8]
		mov	edi, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC1783:				; CODE XREF: dbus_address_unescape_value+41j
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E00CE0
		xor	ecx, ecx
		mov	edx, edi
		mov	[esp+5Ch+var_58], esi
		mov	[esp+5Ch+var_5C], eax
		mov	eax, ebx
		call	sub_67DC1510
		test	eax, eax
		jnz	loc_67DC1832

loc_67DC17A5:				; CODE XREF: dbus_address_unescape_value+112j
		test	esi, esi
		mov	eax, [esp+5Ch+var_10]
		jnz	short loc_67DC1814

loc_67DC17AD:				; CODE XREF: dbus_address_unescape_value+FDj
		test	eax, eax
		nop
		jz	short loc_67DC1800

loc_67DC17B2:				; CODE XREF: dbus_address_unescape_value+D2j
					; dbus_address_unescape_value+E2j ...
		mov	edx, 1

loc_67DC17B7:				; CODE XREF: dbus_address_unescape_value+E0j
		mov	[esp+5Ch+var_5C], edx
		mov	[esp+5Ch+var_4C], offset aDbus_address_u ; "dbus_address_unescape_value"
		mov	[esp+5Ch+var_50], 283h
		mov	[esp+5Ch+var_54], offset aRBuildWin32lib ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aRetNullErrorNu ; "ret	!= NULL	|| error == NULL || dbus_er"...
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E02BF0
		mov	eax, [esp+5Ch+var_10]
		mov	ebx, [esp+5Ch+var_C]
		mov	esi, [esp+5Ch+var_8]
		mov	edi, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1800:				; CODE XREF: dbus_address_unescape_value+80j
		test	esi, esi
		jz	short loc_67DC17B2
		mov	[esp+5Ch+var_5C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DC17B7
		jmp	short loc_67DC17B2
; ---------------------------------------------------------------------------

loc_67DC1814:				; CODE XREF: dbus_address_unescape_value+7Bj
		test	eax, eax
		jnz	short loc_67DC17B2
		mov	[esp+5Ch+var_5C], esi
		nop
		lea	esi, [esi+0]
		call	dbus_error_is_set
		test	eax, eax
		jz	short loc_67DC1847

loc_67DC1829:				; CODE XREF: dbus_address_unescape_value+130j
		mov	eax, [esp+5Ch+var_10]
		jmp	loc_67DC17AD
; ---------------------------------------------------------------------------

loc_67DC1832:				; CODE XREF: dbus_address_unescape_value+6Fj
		lea	eax, [esp+5Ch+var_10]
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E05F70
		jmp	loc_67DC17A5
; ---------------------------------------------------------------------------

loc_67DC1847:				; CODE XREF: dbus_address_unescape_value+F7j
		mov	eax, off_67E19010
		mov	[esp+5Ch+var_58], offset aOrg_freedeskto ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+5Ch+var_5C], esi
		mov	[esp+5Ch+var_54], eax
		call	dbus_set_error_const
		jmp	short loc_67DC1829
dbus_address_unescape_value endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC1870	proc near		; CODE XREF: dbus_address_entries_free:loc_67DC1911p
					; dbus_parse_address+3C7p ...

var_1C		= dword	ptr -1Ch

		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 10h
		lea	esi, [ebx+14h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E02BF0
		mov	[esp+1Ch+var_1C], esi
		call	sub_67DFB910
		mov	edi, eax
		lea	esi, [esi+0]

loc_67DC1890:				; CODE XREF: sub_67DC1870+40j
		test	edi, edi
		jz	short loc_67DC18B2
		mov	eax, [edi+8]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E02BF0
		mov	eax, [edi+8]
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	edi, [edi+4]
		cmp	edi, [ebx+14h]
		jnz	short loc_67DC1890

loc_67DC18B2:				; CODE XREF: sub_67DC1870+22j
		mov	[esp+1Ch+var_1C], esi
		lea	esi, [ebx+18h]
		call	sub_67DFBC90
		mov	[esp+1Ch+var_1C], esi
		call	sub_67DFB910
		mov	edi, eax

loc_67DC18C7:				; CODE XREF: sub_67DC1870+77j
		test	edi, edi
		jz	short loc_67DC18E9
		mov	eax, [edi+8]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E02BF0
		mov	eax, [edi+8]
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	edi, [edi+4]
		cmp	edi, [ebx+18h]
		jnz	short loc_67DC18C7

loc_67DC18E9:				; CODE XREF: sub_67DC1870+59j
		mov	[esp+1Ch+var_1C], esi
		call	sub_67DFBC90
		mov	[esp+1Ch+var_1C], ebx
		call	dbus_free
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DC1870	endp

; Exported entry   1. dbus_address_entries_free

; =============== S U B	R O U T	I N E =======================================


		public dbus_address_entries_free
dbus_address_entries_free proc near	; CODE XREF: sub_67DD4800+29Ap
					; dbus_server_listen+36Dp ...

arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 4
		mov	esi, [esp+0Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_67DC1920
		mov	ebx, esi

loc_67DC1911:				; CODE XREF: dbus_address_entries_free+1Ej
		call	sub_67DC1870
		mov	eax, [ebx+4]
		add	ebx, 4
		test	eax, eax
		jnz	short loc_67DC1911

loc_67DC1920:				; CODE XREF: dbus_address_entries_free+Dj
		mov	[esp+0Ch+arg_0], esi
		add	esp, 4
		pop	ebx
		pop	esi
		jmp	dbus_free
dbus_address_entries_free endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 167. dbus_parse_address

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_parse_address(char *, int, int, int)
		public dbus_parse_address
dbus_parse_address proc	near		; CODE XREF: sub_67DD4800+F2p
					; dbus_server_listen+CCp ...

Size		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= byte ptr -80h
var_7C		= dword	ptr -7Ch
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	ebp, [esp+8Ch+arg_C]
		mov	esi, [esp+8Ch+arg_0]
		test	ebp, ebp
		jz	loc_67DC1C96
		mov	[esp+8Ch+Size],	ebp
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DC1C96

loc_67DC195F:				; CODE XREF: dbus_parse_address+36Bj
		lea	ebx, [esp+8Ch+var_44]
		mov	[esp+8Ch+Size],	edx
		mov	[esp+8Ch+var_7C], offset aDbus_parse_add ; "dbus_parse_address"
		mov	dword ptr [esp+8Ch+var_80], 175h ; char
		mov	[esp+8Ch+var_84], offset aRBuildWin32lib ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aErrorNullDbus_ ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+8Ch+var_88], esi ;	char *
		mov	[esp+8Ch+Size],	ebx ; int
		call	sub_67E03060
		mov	[esp+8Ch+var_24], 0
		mov	[esp+8Ch+Size],	ebx
		call	sub_67E00CE0
		cmp	eax, 0
		mov	[esp+8Ch+var_50], eax
		jz	loc_67DC1D20
		jle	loc_67DC1EAE
		lea	eax, [esp+8Ch+var_24]
		xor	edi, edi
		mov	[esp+8Ch+var_5C], eax

loc_67DC19C4:				; CODE XREF: dbus_parse_address+2DBj
		mov	[esp+8Ch+Size],	1Ch ; size_t
		call	dbus_malloc0
		test	eax, eax
		mov	esi, eax
		jz	loc_67DC1CC8
		mov	[esp+8Ch+Size],	eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC1CC0
		mov	eax, [esp+8Ch+var_5C]
		mov	[esp+8Ch+var_88], esi
		mov	[esp+8Ch+Size],	eax
		call	sub_67DFBB80
		test	eax, eax
		jz	loc_67DC1E86
		lea	edx, [esp+8Ch+var_20]
		mov	dword ptr [esp+8Ch+var_80], edx
		mov	[esp+8Ch+var_84], offset asc_67E1A2A7 ;	";"
		mov	[esp+8Ch+var_88], edi
		mov	[esp+8Ch+Size],	ebx
		call	sub_67E009F0
		test	eax, eax
		jz	loc_67DC1CB0
		mov	eax, [esp+8Ch+var_20]

loc_67DC1A2A:				; CODE XREF: dbus_parse_address+388j
		lea	edx, [esp+8Ch+var_28]
		mov	[esp+8Ch+var_7C], edx
		mov	dword ptr [esp+8Ch+var_80], offset asc_67E1A2A9	; ":"
		mov	[esp+8Ch+var_84], eax
		mov	[esp+8Ch+var_88], edi
		mov	[esp+8Ch+Size],	ebx
		call	sub_67E00630
		test	eax, eax
		jz	loc_67DC1EBB
		mov	eax, [esp+8Ch+var_28]
		mov	[esp+8Ch+var_7C], 0 ; int
		mov	dword ptr [esp+8Ch+var_80], esi	; int
		mov	[esp+8Ch+var_88], edi ;	int
		sub	eax, edi
		mov	[esp+8Ch+var_84], eax ;	size_t
		mov	[esp+8Ch+Size],	ebx ; int
		call	sub_67E05A20
		test	eax, eax
		jz	loc_67DC1CC8
		mov	eax, [esp+8Ch+var_28]
		add	eax, 1
		mov	[esp+8Ch+var_60], eax
		mov	eax, [esp+8Ch+var_20]
		cmp	[esp+8Ch+var_60], eax
		jge	loc_67DC1C04
		lea	edx, [esi+14h]
		add	esi, 18h
		mov	[esp+8Ch+var_58], edx
		mov	[esp+8Ch+var_54], esi

loc_67DC1AA3:				; CODE XREF: dbus_parse_address+2CEj
		mov	[esp+8Ch+var_84], eax
		mov	eax, [esp+8Ch+var_60]
		lea	edx, [esp+8Ch+var_2C]
		mov	[esp+8Ch+var_7C], edx
		mov	dword ptr [esp+8Ch+var_80], offset asc_67E1A2CD	; ","
		mov	[esp+8Ch+Size],	ebx
		mov	[esp+8Ch+var_88], eax
		call	sub_67E00630
		test	eax, eax
		jz	loc_67DC1CA0
		mov	eax, [esp+8Ch+var_2C]

loc_67DC1AD3:				; CODE XREF: dbus_parse_address+378j
		mov	[esp+8Ch+var_84], eax
		mov	eax, [esp+8Ch+var_60]
		lea	edx, [esp+8Ch+var_30]
		mov	[esp+8Ch+var_7C], edx
		mov	dword ptr [esp+8Ch+var_80], offset asc_67E1A2CF	; "="
		mov	[esp+8Ch+Size],	ebx
		mov	[esp+8Ch+var_88], eax
		call	sub_67E00630
		test	eax, eax
		jz	loc_67DC1D48
		mov	eax, [esp+8Ch+var_30]
		cmp	eax, [esp+8Ch+var_60]
		jz	loc_67DC1D48
		add	eax, 1
		cmp	eax, [esp+8Ch+var_2C]
		jz	loc_67DC1D48
		mov	[esp+8Ch+Size],	14h ; size_t
		call	dbus_malloc0
		test	eax, eax
		mov	esi, eax
		jz	loc_67DC1CC8
		mov	[esp+8Ch+Size],	14h ; size_t
		call	dbus_malloc0
		test	eax, eax
		mov	edi, eax
		jz	loc_67DC1DB1
		mov	[esp+8Ch+Size],	esi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC1DDA
		mov	[esp+8Ch+Size],	edi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC1DF4
		mov	eax, [esp+8Ch+var_30]
		mov	edx, [esp+8Ch+var_60]
		sub	eax, [esp+8Ch+var_60]
		mov	[esp+8Ch+var_7C], 0 ; int
		mov	dword ptr [esp+8Ch+var_80], esi	; char
		mov	[esp+8Ch+var_84], eax ;	size_t
		mov	[esp+8Ch+var_88], edx ;	int
		mov	[esp+8Ch+Size],	ebx ; int
		call	sub_67E05A20
		test	eax, eax
		jz	loc_67DC1D70
		mov	eax, [esp+8Ch+var_30]
		mov	edx, ebx
		mov	[esp+8Ch+var_88], ebp
		lea	ecx, [eax+1]
		not	eax
		add	eax, [esp+8Ch+var_2C]
		mov	[esp+8Ch+Size],	eax
		mov	eax, edi
		call	sub_67DC1510
		test	eax, eax
		jz	loc_67DC1E11
		mov	eax, [esp+8Ch+var_58]
		mov	[esp+8Ch+var_88], esi
		mov	[esp+8Ch+Size],	eax
		call	sub_67DFBB80
		test	eax, eax
		jz	loc_67DC1D70
		mov	edx, [esp+8Ch+var_54]
		mov	[esp+8Ch+var_88], edi
		mov	[esp+8Ch+Size],	edx
		call	sub_67DFBB80
		test	eax, eax
		jz	loc_67DC1E55
		mov	eax, [esp+8Ch+var_2C]
		add	eax, 1
		mov	[esp+8Ch+var_60], eax
		mov	eax, [esp+8Ch+var_20]
		cmp	eax, [esp+8Ch+var_60]
		jg	loc_67DC1AA3

loc_67DC1C04:				; CODE XREF: dbus_parse_address+15Fj
		lea	edi, [eax+1]
		cmp	[esp+8Ch+var_50], edi
		jg	loc_67DC19C4

loc_67DC1C11:				; CODE XREF: dbus_parse_address+586j
		mov	eax, [esp+8Ch+var_5C]
		mov	[esp+8Ch+Size],	eax
		call	sub_67DFB9B0
		mov	edx, [esp+8Ch+arg_8]
		mov	[edx], eax
		lea	eax, ds:4[eax*4]
		mov	[esp+8Ch+Size],	eax ; Size
		call	dbus_malloc
		test	eax, eax
		mov	ebx, eax
		jz	loc_67DC1CC8
		mov	edx, [esp+8Ch+arg_8]
		mov	eax, [edx]
		mov	dword ptr [ebx+eax*4], 0
		mov	eax, [esp+8Ch+var_5C]
		mov	[esp+8Ch+Size],	eax
		call	sub_67DFB910
		test	eax, eax
		jz	short loc_67DC1C7A
		mov	esi, [esp+8Ch+var_24]
		mov	edx, ebx
		jmp	short loc_67DC1C6E
; ---------------------------------------------------------------------------

loc_67DC1C67:				; CODE XREF: dbus_parse_address+348j
		add	edx, 4
		test	eax, eax
		jz	short loc_67DC1C7A

loc_67DC1C6E:				; CODE XREF: dbus_parse_address+335j
		mov	ecx, [eax+8]
		mov	eax, [eax+4]
		mov	[edx], ecx
		cmp	eax, esi
		jnz	short loc_67DC1C67

loc_67DC1C7A:				; CODE XREF: dbus_parse_address+32Dj
					; dbus_parse_address+33Cj
		mov	edx, [esp+8Ch+var_5C]
		mov	[esp+8Ch+Size],	edx
		call	sub_67DFBC90
		mov	eax, [esp+8Ch+arg_4]
		mov	[eax], ebx
		mov	eax, 1
		jmp	short loc_67DC1D13
; ---------------------------------------------------------------------------

loc_67DC1C96:				; CODE XREF: dbus_parse_address+17j
					; dbus_parse_address+29j
		mov	edx, 1
		jmp	loc_67DC195F
; ---------------------------------------------------------------------------

loc_67DC1CA0:				; CODE XREF: dbus_parse_address+199j
		mov	eax, [esp+8Ch+var_20]
		mov	[esp+8Ch+var_2C], eax
		jmp	loc_67DC1AD3
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1CB0:				; CODE XREF: dbus_parse_address+F0j
		mov	eax, [esp+8Ch+var_50]
		mov	[esp+8Ch+var_20], eax
		jmp	loc_67DC1A2A
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1CC0:				; CODE XREF: dbus_parse_address+B4j
		mov	[esp+8Ch+Size],	esi
		call	dbus_free

loc_67DC1CC8:				; CODE XREF: dbus_parse_address+A4j
					; dbus_parse_address+146j ...
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedeskto ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+Size],	ebp ; int
		call	dbus_set_error
		mov	eax, [esp+8Ch+var_5C]

loc_67DC1CE4:				; CODE XREF: dbus_parse_address+416j
					; dbus_parse_address+434j ...
		mov	[esp+8Ch+Size],	eax
		call	sub_67DFB910
		mov	ebx, eax
		xchg	ax, ax

loc_67DC1CF0:				; CODE XREF: dbus_parse_address+3D3j
		test	ebx, ebx
		jz	short loc_67DC1D05
		mov	eax, [ebx+8]
		call	sub_67DC1870
		mov	ebx, [ebx+4]
		cmp	ebx, [esp+8Ch+var_24]
		jnz	short loc_67DC1CF0

loc_67DC1D05:				; CODE XREF: dbus_parse_address+3C2j
		mov	edx, [esp+8Ch+var_5C]
		mov	[esp+8Ch+Size],	edx
		call	sub_67DFBC90
		xor	eax, eax

loc_67DC1D13:				; CODE XREF: dbus_parse_address+364j
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1D20:				; CODE XREF: dbus_parse_address+7Ej
		mov	dword ptr [esp+8Ch+var_80], esi	; char
		mov	[esp+8Ch+var_84], offset aEmptyAddressS	; "Empty address '%s'"
		mov	[esp+8Ch+var_88], offset aOrg_freedesk_0 ; "org.freedesktop.DBus.Error.BadAddress"
		mov	[esp+8Ch+Size],	ebp ; int
		call	dbus_set_error
		lea	edx, [esp+8Ch+var_24]
		mov	[esp+8Ch+var_5C], edx
		mov	eax, edx
		jmp	short loc_67DC1CE4
; ---------------------------------------------------------------------------

loc_67DC1D48:				; CODE XREF: dbus_parse_address+1C9j
					; dbus_parse_address+1D7j ...
		mov	[esp+8Ch+var_84], offset aCharacterNotFo ; "'=' character not found or has no value"...
		mov	[esp+8Ch+var_88], offset aOrg_freedesk_0 ; "org.freedesktop.DBus.Error.BadAddress"
		mov	[esp+8Ch+Size],	ebp ; int
		call	dbus_set_error
		mov	eax, [esp+8Ch+var_5C]
		jmp	loc_67DC1CE4
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1D70:				; CODE XREF: dbus_parse_address+260j
					; dbus_parse_address+29Dj
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedeskto ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+Size],	ebp ; int
		call	dbus_set_error

loc_67DC1D88:				; CODE XREF: dbus_parse_address+520j
		mov	[esp+8Ch+Size],	esi
		call	sub_67E02BF0
		mov	[esp+8Ch+Size],	edi

loc_67DC1D93:				; CODE XREF: dbus_parse_address+4DFj
		call	sub_67E02BF0

loc_67DC1D98:				; CODE XREF: dbus_parse_address+4C2j
		mov	[esp+8Ch+Size],	esi
		call	dbus_free
		mov	[esp+8Ch+Size],	edi
		call	dbus_free
		mov	eax, [esp+8Ch+var_5C]
		jmp	loc_67DC1CE4
; ---------------------------------------------------------------------------

loc_67DC1DB1:				; CODE XREF: dbus_parse_address+210j
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedeskto ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+Size],	ebp ; int
		call	dbus_set_error
		mov	[esp+8Ch+Size],	esi
		call	dbus_free
		mov	eax, [esp+8Ch+var_5C]
		jmp	loc_67DC1CE4
; ---------------------------------------------------------------------------

loc_67DC1DDA:				; CODE XREF: dbus_parse_address+220j
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedeskto ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+Size],	ebp ; int
		call	dbus_set_error
		jmp	short loc_67DC1D98
; ---------------------------------------------------------------------------

loc_67DC1DF4:				; CODE XREF: dbus_parse_address+230j
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedeskto ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+Size],	ebp ; int
		call	dbus_set_error
		mov	[esp+8Ch+Size],	esi
		jmp	short loc_67DC1D93
; ---------------------------------------------------------------------------

loc_67DC1E11:				; CODE XREF: dbus_parse_address+285j
		test	ebp, ebp
		jz	short loc_67DC1E23
		mov	[esp+8Ch+Size],	ebp
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DC1E28

loc_67DC1E23:				; CODE XREF: dbus_parse_address+4E3j
		mov	edx, 1

loc_67DC1E28:				; CODE XREF: dbus_parse_address+4F1j
		mov	[esp+8Ch+var_7C], offset aDbus_parse_add ; "dbus_parse_address"
		mov	dword ptr [esp+8Ch+var_80], 1F1h
		mov	[esp+8Ch+var_84], offset aRBuildWin32lib ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aErrorNullDbu_0 ; "error == NULL || dbus_error_is_set (err"...
		mov	[esp+8Ch+Size],	edx
		call	sub_67DFAE70
		jmp	loc_67DC1D88
; ---------------------------------------------------------------------------

loc_67DC1E55:				; CODE XREF: dbus_parse_address+2B5j
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedeskto ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+Size],	ebp ; int
		call	dbus_set_error
		mov	[esp+8Ch+Size],	edi
		call	sub_67E02BF0
		mov	[esp+8Ch+Size],	edi
		call	dbus_free
		mov	eax, [esp+8Ch+var_5C]
		jmp	loc_67DC1CE4
; ---------------------------------------------------------------------------

loc_67DC1E86:				; CODE XREF: dbus_parse_address+CCj
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedeskto ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+Size],	ebp ; int
		call	dbus_set_error
		mov	eax, esi
		call	sub_67DC1870
		mov	eax, [esp+8Ch+var_5C]
		jmp	loc_67DC1CE4
; ---------------------------------------------------------------------------

loc_67DC1EAE:				; CODE XREF: dbus_parse_address+84j
		lea	eax, [esp+8Ch+var_24]
		mov	[esp+8Ch+var_5C], eax
		jmp	loc_67DC1C11
; ---------------------------------------------------------------------------

loc_67DC1EBB:				; CODE XREF: dbus_parse_address+11Cj
		mov	[esp+8Ch+var_84], offset aAddressDoesNot ; "Address does not contain a colon"
		mov	[esp+8Ch+var_88], offset aOrg_freedesk_0 ; "org.freedesktop.DBus.Error.BadAddress"
		mov	[esp+8Ch+Size],	ebp ; int
		call	dbus_set_error
		mov	eax, [esp+8Ch+var_5C]
		jmp	loc_67DC1CE4
dbus_parse_address endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   3. dbus_address_entry_get_value

; =============== S U B	R O U T	I N E =======================================


		public dbus_address_entry_get_value
dbus_address_entry_get_value proc near	; CODE XREF: sub_67DD4800+313p
					; sub_67DD4800+570p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	edi, [esp+3Ch+arg_0]
		mov	ebp, [esp+3Ch+arg_4]
		lea	eax, [edi+14h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFB910
		mov	ebx, eax
		lea	eax, [edi+18h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFB910
		test	ebx, ebx
		mov	esi, eax
		jnz	short loc_67DC1F32
		jmp	short loc_67DC1F87
; ---------------------------------------------------------------------------
		align 10h

loc_67DC1F10:				; CODE XREF: dbus_address_entry_get_value+92j
		mov	ebx, [ebx+4]
		xor	eax, eax
		cmp	ebx, [edi+14h]
		mov	esi, [esi+4]
		setz	al
		xor	edx, edx
		sub	eax, 1
		cmp	esi, [edi+18h]
		setz	dl
		sub	edx, 1
		and	esi, edx
		and	ebx, eax
		jz	short loc_67DC1F87

loc_67DC1F32:				; CODE XREF: dbus_address_entry_get_value+2Bj
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset aDbus_address_e ; "dbus_address_entry_get_value"
		mov	[esp+3Ch+var_30], 0FEh
		mov	[esp+3Ch+var_34], offset aRBuildWin32lib ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aValuesNull ; "values != NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_38], ebp
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFEFF0
		test	eax, eax
		jz	short loc_67DC1F10
		mov	eax, [esi+8]
		mov	[esp+3Ch+arg_0], eax
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	sub_67E01770
; ---------------------------------------------------------------------------

loc_67DC1F87:				; CODE XREF: dbus_address_entry_get_value+2Dj
					; dbus_address_entry_get_value+50j
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
dbus_address_entry_get_value endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DC1FA0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC1FA0	proc near		; CODE XREF: .text:67DC1F91j
					; dbus_address_escape_value+4Ep ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	esi, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		mov	[esp+2Ch+var_2C], edi
		mov	ebp, eax
		call	sub_67E01770
		mov	[esp+2Ch+var_2C], edi
		mov	ebx, eax
		call	sub_67E00CE0
		lea	edi, [ebx+eax]
		cmp	ebx, edi
		jnz	short loc_67DC2027
		jmp	loc_67DC2070
; ---------------------------------------------------------------------------

loc_67DC1FD7:				; CODE XREF: sub_67DC1FA0+A0j
		cmp	al, 2Dh
		jz	short loc_67DC2042
		cmp	al, 5Fh
		lea	esi, [esi+0]
		jz	short loc_67DC2042
		cmp	al, 2Fh
		jz	short loc_67DC2042
		cmp	al, 5Ch
		jz	short loc_67DC2042
		cmp	al, 2Ah
		lea	esi, [esi+0]
		jz	short loc_67DC2042
		cmp	al, 2Eh
		jz	short loc_67DC2042
		mov	[esp+2Ch+var_28], 25h
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E067A0
		test	eax, eax
		jz	short loc_67DC2055
		movsx	eax, byte ptr [ebx]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	sub_67E07340
		test	eax, eax
		jz	short loc_67DC2055
		lea	esi, [esi+0]

loc_67DC2020:				; CODE XREF: sub_67DC1FA0+B3j
		add	ebx, 1
		cmp	edi, ebx
		jz	short loc_67DC2070

loc_67DC2027:				; CODE XREF: sub_67DC1FA0+30j
		movzx	eax, byte ptr [ebx]
		lea	edx, [eax-41h]
		cmp	dl, 19h
		jbe	short loc_67DC2042
		lea	edx, [eax-61h]
		cmp	dl, 19h
		jbe	short loc_67DC2042
		lea	edx, [eax-30h]
		cmp	dl, 9
		ja	short loc_67DC1FD7

loc_67DC2042:				; CODE XREF: sub_67DC1FA0+39j
					; sub_67DC1FA0+40j ...
		movzx	eax, al
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E067A0
		test	eax, eax
		jnz	short loc_67DC2020

loc_67DC2055:				; CODE XREF: sub_67DC1FA0+68j
					; sub_67DC1FA0+7Bj
		mov	[esp+2Ch+var_28], ebp
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E06F60
		add	esp, 1Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2070:				; CODE XREF: sub_67DC1FA0+32j
					; sub_67DC1FA0+85j
		add	esp, 1Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DC1FA0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   4. dbus_address_escape_value

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_address_escape_value(char *)
		public dbus_address_escape_value
dbus_address_escape_value proc near

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_38		= dword	ptr -38h
var_24		= byte ptr -24h
var_10		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 4Ch
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_8], ebx
		lea	ebx, [esp+4Ch+var_24]
		mov	[esp+4Ch+var_4], esi
		lea	esi, [esp+4Ch+var_38]
		mov	[esp+4Ch+var_10], 0
		mov	[esp+4Ch+var_48], eax ;	char *
		mov	[esp+4Ch+var_4C], esi ;	int
		call	sub_67E03060
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC20C7
		mov	ebx, [esp+4Ch+var_8]
		mov	esi, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC20C7:				; CODE XREF: dbus_address_escape_value+39j
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DC1FA0
		test	eax, eax
		jnz	short loc_67DC20F0

loc_67DC20D7:				; CODE XREF: dbus_address_escape_value+80j
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E02BF0
		mov	eax, [esp+4Ch+var_10]
		mov	ebx, [esp+4Ch+var_8]
		mov	esi, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC20F0:				; CODE XREF: dbus_address_escape_value+55j
		lea	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E05F70
		jmp	short loc_67DC20D7
dbus_address_escape_value endp

; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_2]
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2120	proc near		; DATA XREF: .rdata:67E1B1F8o
		mov	eax, 1
		retn
sub_67DC2120	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_3]
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_4]
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2150	proc near		; DATA XREF: .rdata:67E1B248o
		mov	eax, 1
		retn
sub_67DC2150	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_5]
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2170	proc near		; CODE XREF: sub_67DF48E0+E4p
					; sub_67DF48E0+256p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [eax+30h]
		mov	edx, [edx+4]
		test	edx, edx
		jz	short loc_67DC2180
		rep retn
; ---------------------------------------------------------------------------

loc_67DC2180:				; CODE XREF: sub_67DC2170+Cj
		mov	edx, [esp+arg_4]
		add	eax, 8
		mov	[edx], eax
		retn
sub_67DC2170	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2190	proc near		; CODE XREF: sub_67DF5CD0+11Cp

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		cmp	dword ptr [eax+30h], offset off_67E1AFA4
		jz	short loc_67DC21A0

loc_67DC219D:				; CODE XREF: sub_67DC2190+15j
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_67DC21A0:				; CODE XREF: sub_67DC2190+Bj
		mov	edx, [eax+34h]
		test	edx, edx
		jz	short loc_67DC219D
		cmp	dword ptr [eax+4], offset aClient ; "client"
		jz	short loc_67DC21C0
		xor	eax, eax
		cmp	dword ptr [edx+8], 0
		setnz	al
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC21C0:				; CODE XREF: sub_67DC2190+1Ej
		xor	eax, eax
		cmp	dword ptr [edx+1Ch], 0
		setnz	al
		retn
sub_67DC2190	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC21D0	proc near		; CODE XREF: sub_67DF48E0+6Ap
					; sub_67DF5890+B6p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		cmp	dword ptr [eax+30h], offset off_67E1AFA4
		jz	short loc_67DC21E0

loc_67DC21DD:				; CODE XREF: sub_67DC21D0+15j
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------

loc_67DC21E0:				; CODE XREF: sub_67DC21D0+Bj
		mov	edx, [eax+34h]
		test	edx, edx
		jz	short loc_67DC21DD
		cmp	dword ptr [eax+4], offset aClient ; "client"
		jz	short loc_67DC2200
		xor	eax, eax
		cmp	dword ptr [edx+0Ch], 0
		setnz	al
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2200:				; CODE XREF: sub_67DC21D0+1Ej
		xor	eax, eax
		cmp	dword ptr [edx+20h], 0
		setnz	al
		retn
sub_67DC21D0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	ecx, [esp+4]
		mov	edx, [esp+8]
		movzx	eax, byte ptr [ecx+8Ch]
		and	edx, 1
		shl	edx, 4
		and	eax, 0FFFFFFEFh
		or	eax, edx
		mov	[ecx+8Ch], al
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_67DC2240
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2240	proc near		; CODE XREF: .text:67DC2231j
					; .text:67DF3361j ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		movzx	eax, byte ptr [eax+8Ch]
		shr	al, 5
		and	eax, 1
		retn
sub_67DC2240	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	[esp+24h], ebx
		mov	ebx, [esp+34h]
		mov	[esp+28h], esi
		mov	[esp], ebx
		call	sub_67E00CE0
		mov	[esp], ebx
		mov	esi, eax
		call	sub_67E00CE0
		mov	edx, [esp+30h]
		mov	[esp+14h], esi
		mov	[esp], ebx
		mov	dword ptr [esp+10h], 0
		add	edx, 58h
		mov	[esp+0Ch], edx
		mov	[esp+8], eax
		mov	dword ptr [esp+4], 0
		call	sub_67E053E0
		mov	ebx, [esp+24h]
		mov	esi, [esp+28h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC22C0	proc near		; CODE XREF: sub_67DF6A20+35Ep

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_auth_ret ; "_dbus_auth_return_buffer"
		mov	[esp+2Ch+var_20], 9EFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [ebx+8]
		cmp	[esp+2Ch+arg_4], eax
		mov	[esp+2Ch+var_28], offset aBufferAuthInco ; "buffer == &auth->incoming"
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_auth_ret ; "_dbus_auth_return_buffer"
		mov	[esp+2Ch+var_20], 9F0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAuthBuffer_out ; "auth->buffer_outstanding"
		movzx	eax, byte ptr [ebx+8Ch]
		shr	al, 3
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		and	byte ptr [ebx+8Ch], 0F7h
		add	esp, 28h
		pop	ebx
		retn
sub_67DC22C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2340	proc near		; CODE XREF: sub_67DF6A20+320p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_auth_g_1 ; "_dbus_auth_get_buffer"
		mov	[esp+2Ch+var_20], 9DBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aAuthNull ; "auth != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_auth_g_1 ; "_dbus_auth_get_buffer"
		mov	[esp+2Ch+var_20], 9DCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAuthBuffer_o_0 ; "!auth->buffer_outstanding"
		movzx	eax, byte ptr [ebx+8Ch]
		shr	al, 3
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_4]
		lea	edx, [ebx+8]
		mov	[eax], edx
		or	byte ptr [ebx+8Ch], 8
		add	esp, 28h
		pop	ebx
		retn
sub_67DC2340	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC23D0	proc near		; CODE XREF: sub_67DF6A20+2BFp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_auth_g_2 ; "_dbus_auth_get_bytes_to_send"
		mov	[esp+2Ch+var_20], 9AEh
		test	esi, esi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAuthNull ; "auth != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		add	esi, 1Ch
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_auth_g_2 ; "_dbus_auth_get_bytes_to_send"
		mov	[esp+2Ch+var_20], 9AFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStrNull_1 ; "str != NULL"
		call	sub_67DFAE70
		mov	dword ptr [ebx], 0
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jnz	short loc_67DC245B
		mov	esi, [ebx]
		xor	al, al

loc_67DC245B:				; CODE XREF: sub_67DC23D0+85j
		mov	[ebx], esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DC23D0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_auth_ref ; "_dbus_auth_ref"
		mov	dword ptr [esp+0Ch], 91Dh
		mov	dword ptr [esp+8], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+4], offset aAuthNull ; "auth != NULL"
		call	sub_67DFAE70
		mov	eax, ebx
		add	dword ptr [ebx], 1
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_67DC24C0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC24C0	proc near		; CODE XREF: .text:67DC24B1j
					; sub_67DF3320+2Aj ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_auth_g_0 ; "_dbus_auth_get_guid_from_server"
		mov	[esp+2Ch+var_20], 0AC7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aDbus_auth_is_c ; "DBUS_AUTH_IS_CLIENT	(auth)"
		cmp	dword ptr [ebx+4], offset aClient ; "client"
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		cmp	dword ptr [ebx+30h], offset off_67E1AFA4
		jz	short loc_67DC2510
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2510:				; CODE XREF: sub_67DC24C0+43j
		add	ebx, 94h
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67E01770
sub_67DC24C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2530	proc near		; CODE XREF: sub_67DF2E60+36p
					; sub_67DF2EE0+46p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		cmp	dword ptr [ebx+30h], offset off_67E1AFA4
		jz	short loc_67DC257C
		mov	eax, [ebx+50h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5610
		mov	[esp+2Ch+var_1C], offset a_dbus_auth_get ; "_dbus_auth_get_identity"
		mov	[esp+2Ch+var_20], 0AB9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_credenti ; "_dbus_credentials_are_empty	(auth->auth"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70

loc_67DC257C:				; CODE XREF: sub_67DC2530+Fj
		mov	eax, [ebx+50h]
		add	esp, 28h
		pop	ebx
		retn
sub_67DC2530	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2590	proc near		; CODE XREF: sub_67DF6A20+1AEp

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	eax, [ebx+4Ch]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DD5780
		mov	[esp+1Ch+arg_4], esi
		mov	eax, [ebx+4Ch]
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		mov	[esp+1Ch+arg_0], eax
		add	esp, 1Ch
		jmp	sub_67DD5B80
sub_67DC2590	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC25D0	proc near		; CODE XREF: sub_67DF48E0+26Dp
					; sub_67DF5890+18Dp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		xor	eax, eax
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_auth_dec ; "_dbus_auth_decode_data"
		mov	[esp+2Ch+var_20], 0A7Fh
		cmp	ebx, esi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aPlaintextEncod ; "plaintext != encoded"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	dword ptr [edi+30h], offset off_67E1AFA4
		jz	short loc_67DC2635

loc_67DC2625:				; CODE XREF: sub_67DC25D0+CCj
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC2635:				; CODE XREF: sub_67DC25D0+53j
		mov	eax, [edi+34h]
		test	eax, eax
		jz	short loc_67DC267C
		mov	edx, [edi+4]
		cmp	edx, offset aClient ; "client"
		jz	short loc_67DC26B1
		xor	ecx, ecx
		cmp	dword ptr [eax+0Ch], 0
		setnz	cl

loc_67DC2650:				; CODE XREF: sub_67DC25D0+EAj
		test	ecx, ecx
		jz	short loc_67DC267C
		cmp	edx, offset aClient ; "client"
		jz	short loc_67DC26A0
		mov	[esp+2Ch+arg_8], ebx
		mov	[esp+2Ch+arg_4], esi
		mov	[esp+2Ch+arg_0], edi
		mov	eax, [eax+0Ch]

loc_67DC266B:				; CODE XREF: sub_67DC25D0+DFj
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_67DC267C:				; CODE XREF: sub_67DC25D0+6Aj
					; sub_67DC25D0+82j
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		mov	[esp+2Ch+var_24], ebx
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_20], eax
		call	sub_67E036F0
		jmp	short loc_67DC2625
; ---------------------------------------------------------------------------
		align 10h

loc_67DC26A0:				; CODE XREF: sub_67DC25D0+8Aj
		mov	[esp+2Ch+arg_8], ebx
		mov	[esp+2Ch+arg_4], esi
		mov	[esp+2Ch+arg_0], edi
		mov	eax, [eax+20h]
		jmp	short loc_67DC266B
; ---------------------------------------------------------------------------

loc_67DC26B1:				; CODE XREF: sub_67DC25D0+75j
		xor	ecx, ecx
		cmp	dword ptr [eax+20h], 0
		setnz	cl
		jmp	short loc_67DC2650
sub_67DC25D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC26C0	proc near		; CODE XREF: sub_67DF5CD0+355p
					; sub_67DF5CD0+378p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		xor	eax, eax
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_auth_enc ; "_dbus_auth_encode_data"
		mov	[esp+2Ch+var_20], 0A40h
		cmp	esi, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aPlaintextEncod ; "plaintext != encoded"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	dword ptr [edi+30h], offset off_67E1AFA4
		jz	short loc_67DC2725

loc_67DC2715:				; CODE XREF: sub_67DC26C0+CCj
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC2725:				; CODE XREF: sub_67DC26C0+53j
		mov	eax, [edi+34h]
		test	eax, eax
		jz	short loc_67DC276C
		mov	edx, [edi+4]
		cmp	edx, offset aClient ; "client"
		jz	short loc_67DC27A1
		xor	ecx, ecx
		cmp	dword ptr [eax+8], 0
		setnz	cl

loc_67DC2740:				; CODE XREF: sub_67DC26C0+EAj
		test	ecx, ecx
		jz	short loc_67DC276C
		cmp	edx, offset aClient ; "client"
		jz	short loc_67DC2790
		mov	[esp+2Ch+arg_8], ebx
		mov	[esp+2Ch+arg_4], esi
		mov	[esp+2Ch+arg_0], edi
		mov	eax, [eax+8]

loc_67DC275B:				; CODE XREF: sub_67DC26C0+DFj
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_67DC276C:				; CODE XREF: sub_67DC26C0+6Aj
					; sub_67DC26C0+82j
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		mov	[esp+2Ch+var_24], ebx
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_20], eax
		call	sub_67E036F0
		jmp	short loc_67DC2715
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2790:				; CODE XREF: sub_67DC26C0+8Aj
		mov	[esp+2Ch+arg_8], ebx
		mov	[esp+2Ch+arg_4], esi
		mov	[esp+2Ch+arg_0], edi
		mov	eax, [eax+1Ch]
		jmp	short loc_67DC275B
; ---------------------------------------------------------------------------

loc_67DC27A1:				; CODE XREF: sub_67DC26C0+75j
		xor	ecx, ecx
		cmp	dword ptr [eax+1Ch], 0
		setnz	cl
		jmp	short loc_67DC2740
sub_67DC26C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC27B0	proc near		; CODE XREF: sub_67DF48E0+17Ep
					; sub_67DF48E0+326p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, [eax+30h]
		mov	ecx, [edx+4]
		test	ecx, ecx
		jz	short loc_67DC27C5
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC27C5:				; CODE XREF: sub_67DC27B0+Fj
		add	eax, 8
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E06F60
		add	esp, 1Ch
		retn
sub_67DC27B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC27E0	proc near		; DATA XREF: .rdata:67E1B22Co

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	dword ptr [eax+70h], 0FFFFFFFFh
		add	eax, 74h
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E06F60
		add	esp, 1Ch
		retn
sub_67DC27E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2810	proc near		; DATA XREF: .rdata:67E1B218o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	dword ptr [eax+70h], 0FFFFFFFFh
		add	eax, 74h
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E06F60
		add	esp, 1Ch
		retn
sub_67DC2810	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2840	proc near		; CODE XREF: sub_67DC2A10+124p
					; sub_67DC2A10+142p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, eax
		mov	eax, [edx]
		mov	[esp+2Ch+var_4], esi
		mov	esi, edx
		mov	[esp+2Ch+var_14], eax
		mov	eax, [ebx+30h]
		mov	eax, [eax]
		mov	[esp+2Ch+Format], offset aSGoingFromStat ; "%s:	going from state %s to state %s\n"
		mov	[esp+2Ch+var_24], offset aGoto_state ; "goto_state"
		mov	[esp+2Ch+var_28], 856h ; int
		mov	[esp+2Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		call	sub_67DFABC0
		mov	[ebx+30h], esi
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DC2840	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC28A0	proc near		; CODE XREF: sub_67DC2A10+CDp
					; sub_67DC2C10+DCp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h

		push	ebx
		mov	ebx, eax
		sub	esp, 28h
		and	byte ptr [eax+8Ch], 0FBh
		lea	eax, [eax+38h]
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E06F60
		mov	eax, [ebx+50h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5780
		mov	eax, [ebx+54h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5780
		mov	eax, [ebx+34h]
		test	eax, eax
		jz	short loc_67DC2927
		mov	eax, [eax]
		mov	[esp+2Ch+Format], offset aSShuttingDownM ; "%s:	Shutting down mechanism	%s\n"
		mov	[esp+2Ch+var_24], offset aShutdown_mech	; "shutdown_mech"
		mov	[esp+2Ch+var_28], 1AEh ; int
		mov	[esp+2Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		call	sub_67DFABC0
		cmp	dword ptr [ebx+4], offset aClient ; "client"
		jz	short loc_67DC2930
		mov	eax, [ebx+34h]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+10h]

loc_67DC2920:				; CODE XREF: sub_67DC28A0+99j
		mov	dword ptr [ebx+34h], 0

loc_67DC2927:				; CODE XREF: sub_67DC28A0+3Bj
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2930:				; CODE XREF: sub_67DC28A0+75j
		mov	eax, [ebx+34h]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+24h]
		jmp	short loc_67DC2920
sub_67DC28A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2940	proc near		; CODE XREF: sub_67DF6A20+54Ap

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], ebx
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		lea	ebx, [edi+1Ch]
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E01770
		mov	[esp+2Ch+var_18], esi
		mov	[esp+2Ch+var_14], eax
		mov	eax, [edi+4]
		mov	[esp+2Ch+Format], offset aSSentDBytesOfS ; "%s:	Sent %d	bytes of: %s\n"
		mov	[esp+2Ch+var_24], offset a_dbus_auth_byt ; "_dbus_auth_bytes_sent"
		mov	[esp+2Ch+var_28], 9CAh ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+var_24], esi
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], 0
		call	sub_67E02D80
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DC2940	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC29C0	proc near		; CODE XREF: sub_67DF2E40+11j

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		xor	esi, esi
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		test	eax, eax
		jz	short loc_67DC29E9
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFAF20
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		jz	short loc_67DC2A02

loc_67DC29E9:				; CODE XREF: sub_67DC29C0+17j
		mov	eax, [ebx+88h]
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free_string_array
		mov	eax, 1
		mov	[ebx+88h], esi

loc_67DC2A02:				; CODE XREF: sub_67DC29C0+27j
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DC29C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2A10	proc near		; CODE XREF: sub_67DC2E90+D3j
					; sub_67DC39B0+BFp ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h

		push	ebp
		push	edi
		push	esi
		mov	esi, eax
		push	ebx
		sub	esp, 4Ch
		lea	ebx, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC2A35

loc_67DC2A2D:				; CODE XREF: sub_67DC2A10+136j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DC2A35:				; CODE XREF: sub_67DC2A10+1Bj
		mov	[esp+5Ch+var_58], offset aRejected ; "REJECTED"
		mov	[esp+5Ch+var_5C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC2A8E
		mov	edi, ds:off_67E1B1E0
		test	edi, edi
		jz	short loc_67DC2AA0
		mov	ebp, offset off_67E1B208
		jmp	short loc_67DC2A7A
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2A60:				; CODE XREF: sub_67DC2A10+7Cj
		mov	[esp+5Ch+var_58], edi ;	char *
		mov	[esp+5Ch+var_5C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC2A8E
		mov	edi, [ebp+0]
		add	ebp, 28h
		test	edi, edi
		jz	short loc_67DC2AA0

loc_67DC2A7A:				; CODE XREF: sub_67DC2A10+48j
		mov	[esp+5Ch+var_58], offset asc_67E1A547 ;	" "
		mov	[esp+5Ch+var_5C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jnz	short loc_67DC2A60

loc_67DC2A8E:				; CODE XREF: sub_67DC2A10+37j
					; sub_67DC2A10+5Ej ...
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E02BF0
		add	esp, 4Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DC2AA0:				; CODE XREF: sub_67DC2A10+41j
					; sub_67DC2A10+68j
		mov	[esp+5Ch+var_58], offset asc_67E1A549 ;	"\r\n"
		mov	[esp+5Ch+var_5C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC2A8E
		lea	edi, [esi+1Ch]
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E00CE0
		mov	[esp+5Ch+var_54], edi
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_50], eax
		call	sub_67E036F0
		test	eax, eax
		jz	short loc_67DC2A8E
		mov	eax, esi
		call	sub_67DC28A0
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset aSend_rejected	; "send_rejected"
		mov	[esp+5Ch+var_50], 5C5h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aDbus_auth_is_s ; "DBUS_AUTH_IS_SERVER	(auth)"
		cmp	dword ptr [esi+4], offset aServer ; "server"
		setz	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	eax, [esi+90h]
		add	eax, 1
		cmp	eax, [esi+94h]
		mov	[esi+90h], eax
		jl	short loc_67DC2B4B
		mov	edx, offset off_67E1B098
		mov	eax, esi
		call	sub_67DC2840

loc_67DC2B39:				; CODE XREF: sub_67DC2A10+147j
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E02BF0
		mov	eax, 1
		jmp	loc_67DC2A2D
; ---------------------------------------------------------------------------

loc_67DC2B4B:				; CODE XREF: sub_67DC2A10+11Bj
		mov	edx, offset off_67E1B2B4
		mov	eax, esi
		call	sub_67DC2840
		jmp	short loc_67DC2B39
sub_67DC2A10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2B60	proc near		; CODE XREF: sub_67DC2E90+DAp
					; sub_67DC39B0+73Ep ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		lea	esi, [eax+1Ch]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+1Ch+var_4], edi
		mov	[esp+1Ch+var_1C], esi
		call	sub_67E00CE0
		mov	[esp+1Ch+var_18], offset aOk_0 ; "OK "
		mov	[esp+1Ch+var_1C], esi ;	int
		mov	edi, eax
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC2BBC
		mov	[esp+1Ch+var_1C], esi
		call	sub_67E00CE0
		mov	[esp+1Ch+var_14], esi
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_10], eax
		lea	eax, [ebx+98h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E036F0
		test	eax, eax
		jnz	short loc_67DC2BE0

loc_67DC2BBC:				; CODE XREF: sub_67DC2B60+30j
					; sub_67DC2B60+92j
		mov	[esp+1Ch+var_18], edi
		mov	[esp+1Ch+var_1C], esi
		call	sub_67E06F60
		xor	eax, eax

loc_67DC2BCA:				; CODE XREF: sub_67DC2B60+A5j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2BE0:				; CODE XREF: sub_67DC2B60+5Aj
		mov	[esp+1Ch+var_18], offset asc_67E1A549 ;	"\r\n"
		mov	[esp+1Ch+var_1C], esi ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC2BBC
		mov	eax, ebx
		mov	edx, offset off_67E1B2F4
		call	sub_67DC2840
		mov	eax, 1
		jmp	short loc_67DC2BCA
sub_67DC2B60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2C10	proc near		; CODE XREF: sub_67DC50C0+27p
					; sub_67DC5BB0+87p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 4Ch
		mov	[esp+4Ch+var_C], esi
		lea	esi, [esp+4Ch+var_30]
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+4Ch+var_8], edi
		mov	edi, edx
		mov	[esp+4Ch+var_4], ebp
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC2C50

loc_67DC2C3B:				; CODE XREF: sub_67DC2C10+F5j
					; sub_67DC2C10+10Aj
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2C50:				; CODE XREF: sub_67DC2C10+29j
		mov	[esp+4Ch+var_48], offset aAuth ; "AUTH "
		mov	[esp+4Ch+var_4C], esi ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DC2D10
		mov	eax, [edi]
		mov	[esp+4Ch+var_4C], esi ;	int
		mov	[esp+4Ch+var_48], eax ;	char *
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DC2D10
		mov	ebp, [edi+14h]
		test	ebp, ebp
		jz	short loc_67DC2CA7
		mov	[esp+4Ch+var_48], offset asc_67E1A547 ;	" "
		mov	[esp+4Ch+var_4C], esi ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC2D10
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], ebx
		call	dword ptr [edi+14h]
		test	eax, eax
		jz	short loc_67DC2D10

loc_67DC2CA7:				; CODE XREF: sub_67DC2C10+73j
		mov	[esp+4Ch+var_48], offset asc_67E1A549 ;	"\r\n"
		mov	[esp+4Ch+var_4C], esi ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC2D10
		lea	ebp, [ebx+1Ch]
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67E00CE0
		mov	[esp+4Ch+var_44], ebp
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_40], eax
		call	sub_67E036F0
		test	eax, eax
		jz	short loc_67DC2D10
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E02BF0
		mov	eax, ebx
		call	sub_67DC28A0
		mov	eax, ebx
		mov	edx, offset off_67E1B424
		mov	[ebx+34h], edi
		call	sub_67DC2840
		mov	eax, 1
		jmp	loc_67DC2C3B
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2D10:				; CODE XREF: sub_67DC2C10+52j
					; sub_67DC2C10+68j ...
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67DC2C3B
sub_67DC2C10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2D20	proc near		; DATA XREF: .rdata:67E1B244o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	[esp+3Ch+var_8], ebx
		lea	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_4], esi
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC2D50

loc_67DC2D43:				; CODE XREF: sub_67DC2D20+91j
		mov	ebx, [esp+3Ch+var_8]
		mov	esi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2D50:				; CODE XREF: sub_67DC2D20+21j
		mov	[esp+3Ch+var_38], offset aLibdbus1_4_24	; "libdbus 1.4.24"
		mov	[esp+3Ch+var_3C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jnz	short loc_67DC2D80

loc_67DC2D64:				; CODE XREF: sub_67DC2D20+82j
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E02BF0
		xor	eax, eax
		mov	ebx, [esp+3Ch+var_8]
		mov	esi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC2D80:				; CODE XREF: sub_67DC2D20+42j
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E00CE0
		mov	[esp+3Ch+var_34], esi
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_30], eax
		call	sub_67E080C0
		test	eax, eax
		jz	short loc_67DC2D64
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E02BF0
		mov	eax, 1
		jmp	short loc_67DC2D43
sub_67DC2D20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2DC0	proc near		; CODE XREF: sub_67DC3290+5F9p
					; sub_67DC39B0+38Cp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 1Ch
		test	edx, edx
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+1Ch+var_8], esi
		mov	esi, edx
		mov	[esp+1Ch+var_4], edi
		jz	short loc_67DC2DE3
		mov	[esp+1Ch+var_1C], edx
		call	sub_67E00CE0
		test	eax, eax
		jnz	short loc_67DC2E06

loc_67DC2DE3:				; CODE XREF: sub_67DC2DC0+15j
		add	ebx, 1Ch
		mov	[esp+1Ch+var_18], offset aData_0 ; "DATA\r\n"
		mov	[esp+1Ch+var_1C], ebx ;	int
		call	sub_67E08C10

loc_67DC2DF6:				; CODE XREF: sub_67DC2DC0+A4j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC2E06:				; CODE XREF: sub_67DC2DC0+21j
		add	ebx, 1Ch
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E00CE0
		mov	[esp+1Ch+var_18], offset aData_1 ; "DATA "
		mov	[esp+1Ch+var_1C], ebx ;	int
		mov	edi, eax
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC2E66
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E00CE0
		mov	[esp+1Ch+var_14], ebx
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_10], eax
		call	sub_67E080C0
		test	eax, eax
		jz	short loc_67DC2E66
		mov	[esp+1Ch+var_18], offset asc_67E1A549 ;	"\r\n"
		mov	[esp+1Ch+var_1C], ebx ;	int
		call	sub_67E08C10
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jnz	short loc_67DC2DF6

loc_67DC2E66:				; CODE XREF: sub_67DC2DC0+65j
					; sub_67DC2DC0+89j
		mov	[esp+1Ch+var_18], edi
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E06F60
		xor	eax, eax
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DC2DC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2E90	proc near		; DATA XREF: .rdata:67E1B234o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		test	eax, eax
		jle	short loc_67DC2F00
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_24], eax
		call	sub_67E02000
		test	eax, eax
		jz	short loc_67DC2F31
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E01770
		mov	[esp+2Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSAnonymousClie ; "%s:	ANONYMOUS client sent trace string:"...
		mov	[esp+2Ch+var_24], offset aHandle_server_ ; "handle_server_data_anonymous_mech"
		mov	[esp+2Ch+var_28], 4BAh ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DC2F00:				; CODE XREF: sub_67DC2E90+17j
		mov	eax, [ebx+54h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5780
		mov	eax, [ebx+4Ch]
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+50h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5980
		test	eax, eax
		jnz	short loc_67DC2F68

loc_67DC2F29:				; CODE XREF: sub_67DC2E90+E1j
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DC2F31:				; CODE XREF: sub_67DC2E90+37j
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSReceivedInval ; "%s:	Received invalid UTF-8 trace data f"...
		mov	[esp+2Ch+var_24], offset aHandle_server_ ; "handle_server_data_anonymous_mech"
		mov	[esp+2Ch+var_28], 4B4h ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 24h
		mov	eax, ebx
		pop	ebx
		pop	esi
		jmp	sub_67DC2A10
; ---------------------------------------------------------------------------

loc_67DC2F68:				; CODE XREF: sub_67DC2E90+97j
		mov	eax, ebx
		call	sub_67DC2B60
		test	eax, eax
		jz	short loc_67DC2F29
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSAuthenticated ; "%s:	authenticated client as	anonymous\n"
		mov	[esp+2Ch+var_24], offset aHandle_server_ ; "handle_server_data_anonymous_mech"
		mov	[esp+2Ch+var_28], 4CCh ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
sub_67DC2E90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC2FB0	proc near		; CODE XREF: sub_67DC4CD0+30Ap
					; sub_67DC4FF0+7Cj ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= byte ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= byte ptr -34h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 5Ch
		mov	[esp+5Ch+var_8], edi
		lea	edi, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+5Ch+var_C], esi
		mov	esi, edx
		mov	[esp+5Ch+var_4], ebp
		mov	ebp, ecx
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC2FF1

loc_67DC2FDD:				; CODE XREF: sub_67DC2FB0+A2j
					; sub_67DC2FB0+E0j ...
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC2FF1:				; CODE XREF: sub_67DC2FB0+2Bj
		lea	eax, [esp+5Ch+var_20]
		mov	dword ptr [esp+5Ch+var_4C], 0
		mov	[esp+5Ch+Format], edi
		mov	dword ptr [esp+5Ch+var_54], eax
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E06B70
		test	eax, eax
		jz	short loc_67DC3095
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E00CE0
		cmp	eax, [esp+5Ch+var_20]
		jz	short loc_67DC3054
		add	ebx, 1Ch
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E02BF0
		mov	dword ptr [esp+5Ch+var_54], offset aInvalidHexEnco ; "Invalid hex encoding"
		mov	[esp+5Ch+var_58], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+5Ch+var_5C], ebx ;	int
		call	sub_67E090A0
		test	eax, eax
		setnz	al
		movzx	eax, al
		jmp	short loc_67DC2FDD
; ---------------------------------------------------------------------------

loc_67DC3054:				; CODE XREF: sub_67DC2FB0+75j
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E00CE0
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], edi
		mov	dword ptr [esp+5Ch+var_54], eax
		call	sub_67E023F0
		test	eax, eax
		jnz	short loc_67DC30A5

loc_67DC3074:				; CODE XREF: sub_67DC2FB0+12Cj
		mov	[esp+5Ch+var_58], edi
		mov	[esp+5Ch+var_5C], ebx
		call	ebp
		test	eax, eax
		nop
		jz	short loc_67DC3095
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E02BF0
		mov	eax, 1
		nop
		jmp	loc_67DC2FDD
; ---------------------------------------------------------------------------

loc_67DC3095:				; CODE XREF: sub_67DC2FB0+67j
					; sub_67DC2FB0+D0j
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E02BF0
		xor	eax, eax
		nop
		jmp	loc_67DC2FDD
; ---------------------------------------------------------------------------

loc_67DC30A5:				; CODE XREF: sub_67DC2FB0+C2j
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E01770
		mov	[esp+5Ch+var_48], eax
		mov	eax, [ebx+4]
		mov	[esp+5Ch+Format], offset aSDataS ; "%s:	data: '%s'\n"
		mov	dword ptr [esp+5Ch+var_54], offset aProcess_data ; "process_data"
		mov	[esp+5Ch+var_58], 658h ; int
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	short loc_67DC3074
sub_67DC2FB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC30E0	proc near		; CODE XREF: sub_67DC3290+43Fp
					; sub_67DC39B0+617p

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_30		= byte ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 7Ch
		mov	[esp+7Ch+var_10], ebx
		mov	ebx, eax
		xor	eax, eax
		mov	[esp+7Ch+var_C], esi
		mov	esi, edx
		mov	[esp+7Ch+var_8], edi
		lea	edi, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_4], ebp
		mov	ebp, ecx
		mov	[esp+7Ch+var_6C], offset aSha1_compute_h ; "sha1_compute_hash"
		mov	[esp+7Ch+var_70], 1CCh
		mov	[esp+7Ch+var_74], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aAuthKeyringNul ; "auth->keyring != NULL"
		cmp	dword ptr [ebx+6Ch], 0
		setnz	al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC3152

loc_67DC313E:				; CODE XREF: sub_67DC30E0+A3j
		mov	ebx, [esp+7Ch+var_10]
		mov	esi, [esp+7Ch+var_C]
		mov	edi, [esp+7Ch+var_8]
		mov	ebp, [esp+7Ch+var_4]
		add	esp, 7Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC3152:				; CODE XREF: sub_67DC30E0+5Cj
		mov	[esp+7Ch+var_74], edi
		mov	[esp+7Ch+var_78], esi
		mov	eax, [ebx+6Ch]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DD66D0
		test	eax, eax
		jnz	short loc_67DC3185

loc_67DC3169:				; CODE XREF: sub_67DC30E0+C6j
		xor	eax, eax

loc_67DC316B:				; CODE XREF: sub_67DC30E0+B6j
					; sub_67DC30E0+106j
		mov	[esp+7Ch+var_50], eax
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E01BC0
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E02BF0
		mov	eax, [esp+7Ch+var_50]
		jmp	short loc_67DC313E
; ---------------------------------------------------------------------------

loc_67DC3185:				; CODE XREF: sub_67DC30E0+87j
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E00CE0
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jz	short loc_67DC316B
		lea	ebx, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DC3169
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67E00CE0
		mov	[esp+7Ch+var_74], ebx
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_7C], ebp
		mov	[esp+7Ch+var_70], eax
		call	sub_67E036F0
		test	eax, eax
		jnz	short loc_67DC31E8

loc_67DC31CC:				; CODE XREF: sub_67DC30E0+11Aj
					; sub_67DC30E0+145j ...
		xor	eax, eax

loc_67DC31CE:				; CODE XREF: sub_67DC30E0+19Fj
		mov	[esp+7Ch+var_50], eax
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67E01BC0
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67E02BF0
		mov	eax, [esp+7Ch+var_50]
		jmp	short loc_67DC316B
; ---------------------------------------------------------------------------

loc_67DC31E8:				; CODE XREF: sub_67DC30E0+EAj
		mov	[esp+7Ch+var_78], offset asc_67E1A66F ;	":"
		mov	[esp+7Ch+var_7C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC31CC
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67E00CE0
		mov	[esp+7Ch+var_74], ebx
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_70], eax
		mov	eax, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E036F0
		test	eax, eax
		jz	short loc_67DC31CC
		mov	[esp+7Ch+var_78], offset asc_67E1A66F ;	":"
		mov	[esp+7Ch+var_7C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC31CC
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67E00CE0
		mov	[esp+7Ch+var_74], ebx
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_7C], edi
		mov	[esp+7Ch+var_70], eax
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DC31CC
		mov	eax, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_7C], ebx
		mov	[esp+7Ch+var_78], eax
		call	sub_67DF0D70
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jnz	loc_67DC31CE
		jmp	loc_67DC31CC
sub_67DC30E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC3290	proc near		; DATA XREF: .rdata:67E1B220o

var_EC		= dword	ptr -0ECh
dwLen		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
Format		= dword	ptr -0E0h
var_DC		= byte ptr -0DCh
var_D8		= dword	ptr -0D8h
var_C0		= dword	ptr -0C0h
var_B0		= dword	ptr -0B0h
var_9C		= byte ptr -9Ch
var_88		= byte ptr -88h
var_74		= dword	ptr -74h
var_60		= dword	ptr -60h
var_4C		= dword	ptr -4Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0ECh
		mov	[esp+0ECh+var_4], ebp
		mov	ebp, [esp+0ECh+arg_4]
		lea	eax, [esp+0ECh+var_20]
		mov	[esp+0ECh+var_C], esi
		mov	esi, [esp+0ECh+arg_0]
		mov	[esp+0ECh+var_10], ebx
		mov	[esp+0ECh+var_8], edi
		mov	[esp+0ECh+var_E4], eax
		mov	[esp+0ECh+dwLen], 0
		mov	[esp+0ECh+var_EC], ebp
		call	sub_67E003F0
		test	eax, eax
		jnz	short loc_67DC3325
		add	esi, 1Ch
		mov	[esp+0ECh+var_E4], offset aServerDidNotSe ; "Server did	not send context/ID/challeng"...
		mov	[esp+0ECh+dwLen], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+0ECh+var_EC], esi ; int
		call	sub_67E090A0
		test	eax, eax
		setnz	al
		movzx	eax, al

loc_67DC3302:				; CODE XREF: sub_67DC3290+AAj
					; sub_67DC3290+E9j
		mov	ebx, [esp+0ECh+var_10]
		mov	esi, [esp+0ECh+var_C]
		mov	edi, [esp+0ECh+var_8]
		mov	ebp, [esp+0ECh+var_4]
		add	esp, 0ECh
		retn
; ---------------------------------------------------------------------------

loc_67DC3325:				; CODE XREF: sub_67DC3290+4Dj
		lea	ebx, [esp+0ECh+var_4C]
		mov	[esp+0ECh+var_EC], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DC3302
		mov	eax, [esp+0ECh+var_20]
		mov	dword ptr [esp+0ECh+var_DC], 0 ; int
		mov	[esp+0ECh+Format], ebx ; int
		mov	[esp+0ECh+dwLen], 0 ; int
		mov	[esp+0ECh+var_E4], eax ; size_t
		mov	[esp+0ECh+var_EC], ebp ; int
		call	sub_67E05A20
		test	eax, eax
		jnz	short loc_67DC3380

loc_67DC3367:				; CODE XREF: sub_67DC3290+141j
					; sub_67DC3290+1BAj
		xor	eax, eax

loc_67DC3369:				; CODE XREF: sub_67DC3290+185j
					; sub_67DC3290+1B4j
		mov	[esp+0ECh+var_C0], eax
		mov	[esp+0ECh+var_EC], ebx
		call	sub_67E02BF0
		mov	eax, [esp+0ECh+var_C0]
		jmp	short loc_67DC3302
; ---------------------------------------------------------------------------
		align 10h

loc_67DC3380:				; CODE XREF: sub_67DC3290+D5j
		mov	eax, [esp+0ECh+var_20]
		lea	edx, [esp+0ECh+var_20]
		mov	[esp+0ECh+var_E4], edx
		mov	[esp+0ECh+var_EC], ebp
		mov	[esp+0ECh+dwLen], eax
		call	sub_67E00160
		lea	eax, [esp+0ECh+var_24]
		mov	[esp+0ECh+var_E4], eax
		mov	eax, [esp+0ECh+var_20]
		mov	[esp+0ECh+var_EC], ebp
		mov	[esp+0ECh+dwLen], eax
		call	sub_67E003F0
		test	eax, eax
		jz	short loc_67DC3420
		lea	edi, [esp+0ECh+var_60]
		mov	[esp+0ECh+var_EC], edi
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DC3367
		mov	edx, [esp+0ECh+var_20]
		mov	eax, [esp+0ECh+var_24]
		mov	dword ptr [esp+0ECh+var_DC], 0 ; int
		mov	[esp+0ECh+Format], edi ; int
		mov	[esp+0ECh+dwLen], edx ;	int
		sub	eax, edx
		mov	[esp+0ECh+var_E4], eax ; size_t
		mov	[esp+0ECh+var_EC], ebp ; int
		call	sub_67E05A20
		test	eax, eax
		jnz	short loc_67DC344F

loc_67DC3403:				; CODE XREF: sub_67DC3290+1CDj
		xor	eax, eax

loc_67DC3405:				; CODE XREF: sub_67DC3290+246j
		mov	[esp+0ECh+var_C0], eax
		mov	[esp+0ECh+var_EC], edi
		call	sub_67E02BF0
		mov	eax, [esp+0ECh+var_C0]
		jmp	loc_67DC3369
; ---------------------------------------------------------------------------
		align 10h

loc_67DC3420:				; CODE XREF: sub_67DC3290+12Ej
		add	esi, 1Ch
		mov	[esp+0ECh+var_E4], offset aServerDidNotSe ; "Server did	not send context/ID/challeng"...
		mov	[esp+0ECh+dwLen], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+0ECh+var_EC], esi ; int
		call	sub_67E090A0
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jnz	loc_67DC3369
		jmp	loc_67DC3367
; ---------------------------------------------------------------------------

loc_67DC344F:				; CODE XREF: sub_67DC3290+171j
		lea	ecx, [esp+0ECh+var_74]
		mov	[esp+0ECh+var_EC], ecx
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DC3403
		mov	eax, [esp+0ECh+var_24]
		lea	edx, [esp+0ECh+var_20]
		mov	[esp+0ECh+var_E4], edx
		mov	[esp+0ECh+var_EC], ebp
		mov	[esp+0ECh+var_20], eax
		mov	[esp+0ECh+dwLen], eax
		call	sub_67E00160
		mov	[esp+0ECh+var_EC], ebp
		call	sub_67E00CE0
		mov	edx, [esp+0ECh+var_20]
		lea	ecx, [esp+0ECh+var_74]
		mov	dword ptr [esp+0ECh+var_DC], 0 ; int
		mov	[esp+0ECh+Format], ecx ; int
		mov	[esp+0ECh+var_EC], ebp ; int
		mov	[esp+0ECh+dwLen], edx ;	int
		mov	[esp+0ECh+var_24], eax
		sub	eax, edx
		mov	[esp+0ECh+var_E4], eax ; size_t
		call	sub_67E05A20
		test	eax, eax
		jnz	short loc_67DC34DB

loc_67DC34C0:				; CODE XREF: sub_67DC3290+274j
					; sub_67DC3290+30Bj
		xor	eax, eax

loc_67DC34C2:				; CODE XREF: sub_67DC3290+27Bj
					; sub_67DC3290+33Fj ...
		lea	ecx, [esp+0ECh+var_74]
		mov	[esp+0ECh+var_C0], eax
		mov	[esp+0ECh+var_EC], ecx
		call	sub_67E02BF0
		mov	eax, [esp+0ECh+var_C0]
		jmp	loc_67DC3405
; ---------------------------------------------------------------------------

loc_67DC34DB:				; CODE XREF: sub_67DC3290+22Ej
		mov	[esp+0ECh+var_EC], ebx
		call	sub_67DD7600
		test	eax, eax
		jnz	short loc_67DC350D
		mov	[esp+0ECh+var_E4], offset aServerSentInva ; "Server sent invalid cookie	context"

loc_67DC34EF:				; CODE XREF: sub_67DC3290+2ACj
					; sub_67DC3290+34Cj
		add	esi, 1Ch
		mov	[esp+0ECh+dwLen], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+0ECh+var_EC], esi ; int
		call	sub_67E090A0
		test	eax, eax
		jz	short loc_67DC34C0
		mov	eax, 1
		jmp	short loc_67DC34C2
; ---------------------------------------------------------------------------

loc_67DC350D:				; CODE XREF: sub_67DC3290+255j
		lea	eax, [esp+0ECh+var_28]
		mov	[esp+0ECh+Format], 0
		mov	[esp+0ECh+var_E4], eax
		mov	[esp+0ECh+dwLen], 0
		mov	[esp+0ECh+var_EC], edi
		call	sub_67E09C60
		test	eax, eax
		jnz	short loc_67DC353E
		mov	[esp+0ECh+var_E4], offset aCouldNotParseC ; "Could not parse cookie ID as an integer"
		jmp	short loc_67DC34EF
; ---------------------------------------------------------------------------

loc_67DC353E:				; CODE XREF: sub_67DC3290+2A2j
		lea	eax, [esp+0ECh+var_74]
		mov	[esp+0ECh+var_EC], eax
		call	sub_67E00CE0
		test	eax, eax
		jz	loc_67DC35D4
		mov	eax, [esi+6Ch]
		test	eax, eax
		jz	loc_67DC3631

loc_67DC355D:				; CODE XREF: sub_67DC3290+40Aj
		test	eax, eax
		setnz	al
		movzx	eax, al
		lea	ebp, [esp+0ECh+var_B0]
		mov	[esp+0ECh+var_EC], eax
		mov	dword ptr [esp+0ECh+var_DC], offset aHandle_client_ ; "handle_client_data_cookie_sha1_mech"
		mov	[esp+0ECh+Format], 3ADh
		mov	[esp+0ECh+var_E4], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0ECh+dwLen], offset aAuthKeyringNul ; "auth->keyring != NULL"
		call	sub_67DFAE70
		mov	[esp+0ECh+var_EC], ebp
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC34C0
		mov	[esp+0ECh+dwLen], 10h ;	dwLen
		mov	[esp+0ECh+var_EC], ebp ; int
		call	sub_67E0C6A0
		test	eax, eax
		jnz	short loc_67DC35E1

loc_67DC35B5:				; CODE XREF: sub_67DC3290+35Fj
		xor	eax, eax

loc_67DC35B7:				; CODE XREF: sub_67DC3290+39Fj
		mov	[esp+0ECh+var_C0], eax
		mov	[esp+0ECh+var_EC], ebp
		call	sub_67E01BC0
		mov	[esp+0ECh+var_EC], ebp
		call	sub_67E02BF0
		mov	eax, [esp+0ECh+var_C0]
		jmp	loc_67DC34C2
; ---------------------------------------------------------------------------

loc_67DC35D4:				; CODE XREF: sub_67DC3290+2BCj
		mov	[esp+0ECh+var_E4], offset aEmptyServerCha ; "Empty server challenge string"
		jmp	loc_67DC34EF
; ---------------------------------------------------------------------------

loc_67DC35E1:				; CODE XREF: sub_67DC3290+323j
		lea	edx, [esp+0ECh+var_88]
		mov	[esp+0ECh+var_EC], edx
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DC35B5
		lea	ecx, [esp+0ECh+var_88]
		mov	[esp+0ECh+Format], 0
		mov	[esp+0ECh+var_E4], ecx
		mov	[esp+0ECh+dwLen], 0
		mov	[esp+0ECh+var_EC], ebp
		call	sub_67E080C0
		test	eax, eax
		jnz	loc_67DC369F

loc_67DC3619:				; CODE XREF: sub_67DC3290+41Dj
		xor	eax, eax

loc_67DC361B:				; CODE XREF: sub_67DC3290+46Aj
		lea	edx, [esp+0ECh+var_88]
		mov	[esp+0ECh+var_C0], eax
		mov	[esp+0ECh+var_EC], edx
		call	sub_67E02BF0
		mov	eax, [esp+0ECh+var_C0]
		jmp	short loc_67DC35B7
; ---------------------------------------------------------------------------

loc_67DC3631:				; CODE XREF: sub_67DC3290+2C7j
		lea	ebp, [esp+0ECh+var_38]
		mov	[esp+0ECh+var_EC], ebp
		call	dbus_error_init
		mov	[esp+0ECh+var_E4], ebp
		mov	[esp+0ECh+dwLen], ebx
		mov	[esp+0ECh+var_EC], 0
		call	sub_67DD7930
		test	eax, eax
		mov	[esi+6Ch], eax
		jz	loc_67DC36FF
		mov	[esp+0ECh+var_EC], ebp
		call	dbus_error_is_set
		mov	dword ptr [esp+0ECh+var_DC], offset aHandle_client_ ; "handle_client_data_cookie_sha1_mech"
		mov	[esp+0ECh+Format], 3A9h
		mov	[esp+0ECh+var_E4], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0ECh+dwLen], offset aDbus_error_i_0 ; "!dbus_error_is_set (&error)"
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+0ECh+var_EC], eax
		call	sub_67DFAE70
		mov	eax, [esi+6Ch]
		jmp	loc_67DC355D
; ---------------------------------------------------------------------------

loc_67DC369F:				; CODE XREF: sub_67DC3290+383j
		lea	eax, [esp+0ECh+var_9C]
		mov	[esp+0ECh+var_EC], eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC3619
		lea	edx, [esp+0ECh+var_9C]
		mov	eax, esi
		mov	[esp+0ECh+dwLen], edx
		mov	edx, [esp+0ECh+var_28]
		lea	ecx, [esp+0ECh+var_88]
		mov	[esp+0ECh+var_EC], ecx
		lea	ecx, [esp+0ECh+var_74]
		call	sub_67DC30E0
		test	eax, eax
		jnz	short loc_67DC3722

loc_67DC36D8:				; CODE XREF: sub_67DC3290+4C3j
					; sub_67DC3290+5ABj ...
		xor	eax, eax

loc_67DC36DA:				; CODE XREF: sub_67DC3290+4CAj
		lea	edx, [esp+0ECh+var_9C]
		mov	[esp+0ECh+var_C0], eax
		mov	[esp+0ECh+var_EC], edx
		call	sub_67E01BC0
		lea	ecx, [esp+0ECh+var_9C]
		mov	[esp+0ECh+var_EC], ecx
		call	sub_67E02BF0
		mov	eax, [esp+0ECh+var_C0]
		jmp	loc_67DC361B
; ---------------------------------------------------------------------------

loc_67DC36FF:				; CODE XREF: sub_67DC3290+3C9j
		mov	[esp+0ECh+dwLen], offset aOrg_freedes_25 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0ECh+var_EC], ebp ; int
		call	dbus_error_has_name
		test	eax, eax
		jz	short loc_67DC375F
		mov	[esp+0ECh+var_EC], ebp
		call	dbus_error_free
		xor	eax, eax
		jmp	loc_67DC34C2
; ---------------------------------------------------------------------------

loc_67DC3722:				; CODE XREF: sub_67DC3290+446j
		lea	eax, [esp+0ECh+var_9C]
		mov	[esp+0ECh+var_EC], eax
		call	sub_67E00CE0
		test	eax, eax
		jnz	loc_67DC3805
		add	esi, 1Ch
		mov	[esp+0ECh+var_E4], offset aDonTHaveTheReq ; "Don't have the requested cookie ID"
		mov	[esp+0ECh+dwLen], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+0ECh+var_EC], esi ; int
		call	sub_67E090A0
		test	eax, eax
		jz	short loc_67DC36D8

loc_67DC3755:				; CODE XREF: sub_67DC3290+600j
		mov	eax, 1
		jmp	loc_67DC36DA
; ---------------------------------------------------------------------------

loc_67DC375F:				; CODE XREF: sub_67DC3290+481j
		mov	[esp+0ECh+var_EC], ebp
		call	dbus_error_is_set
		mov	dword ptr [esp+0ECh+var_DC], offset aHandle_client_ ; "handle_client_data_cookie_sha1_mech"
		mov	[esp+0ECh+Format], 39Bh
		mov	[esp+0ECh+var_E4], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0ECh+dwLen], offset aErrorNullDb_27 ; "(&error) ==	NULL ||	dbus_error_is_set ("...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+0ECh+var_EC], eax
		call	sub_67DFAE70
		mov	eax, [esp+0ECh+var_34]
		mov	[esp+0ECh+var_D8], eax
		mov	eax, [esi+4]
		add	esi, 1Ch
		mov	[esp+0ECh+Format], offset aSErrorLoadingK ; "%s: Error loading keyring:	%s\n"
		mov	[esp+0ECh+var_E4], offset aHandle_client_ ; "handle_client_data_cookie_sha1_mech"
		mov	[esp+0ECh+dwLen], 39Eh ; int
		mov	dword ptr [esp+0ECh+var_DC], eax ; char
		mov	[esp+0ECh+var_EC], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+0ECh+var_E4], offset aCouldNotLoadCo ; "Could not load cookie file"
		mov	[esp+0ECh+dwLen], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+0ECh+var_EC], esi ; int
		call	sub_67E090A0
		mov	[esp+0ECh+var_EC], ebp
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+0ECh+var_C0], eax
		call	dbus_error_free
		mov	eax, [esp+0ECh+var_C0]
		jmp	loc_67DC34C2
; ---------------------------------------------------------------------------

loc_67DC3805:				; CODE XREF: sub_67DC3290+4A0j
		mov	[esp+0ECh+dwLen], 0
		mov	[esp+0ECh+var_EC], ebp
		call	sub_67E06F60
		mov	[esp+0ECh+var_EC], ebp
		call	sub_67E00CE0
		lea	edx, [esp+0ECh+var_88]
		mov	[esp+0ECh+var_E4], ebp
		mov	[esp+0ECh+dwLen], 0
		mov	[esp+0ECh+var_EC], edx
		mov	[esp+0ECh+Format], eax
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DC36D8
		mov	[esp+0ECh+dwLen], offset asc_67E1A547 ;	" "
		mov	[esp+0ECh+var_EC], ebp ; int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DC36D8
		mov	[esp+0ECh+var_EC], ebp
		call	sub_67E00CE0
		lea	ecx, [esp+0ECh+var_9C]
		mov	[esp+0ECh+var_E4], ebp
		mov	[esp+0ECh+dwLen], 0
		mov	[esp+0ECh+var_EC], ecx
		mov	[esp+0ECh+Format], eax
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DC36D8
		mov	edx, ebp
		mov	eax, esi
		call	sub_67DC2DC0
		test	eax, eax
		jnz	loc_67DC3755
		jmp	loc_67DC36D8
sub_67DC3290	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC38A0	proc near		; DATA XREF: .rdata:67E1B21Co

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= byte ptr -20h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	[esp+3Ch+var_C], ebx
		lea	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_8], esi
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_4], edi
		xor	edi, edi
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DC38D7

loc_67DC38C5:				; CODE XREF: sub_67DC38A0+4Dj
		mov	eax, edi
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC38D7:				; CODE XREF: sub_67DC38A0+23j
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E0F4D0
		test	eax, eax
		jnz	short loc_67DC38F0

loc_67DC38E3:				; CODE XREF: sub_67DC38A0+78j
		xor	edi, edi

loc_67DC38E5:				; CODE XREF: sub_67DC38A0+76j
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E02BF0
		jmp	short loc_67DC38C5
; ---------------------------------------------------------------------------
		align 10h

loc_67DC38F0:				; CODE XREF: sub_67DC38A0+41j
		mov	[esp+3Ch+var_3C], esi
		mov	di, 1
		call	sub_67E00CE0
		mov	[esp+3Ch+var_34], esi
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_30], eax
		call	sub_67E080C0
		test	eax, eax
		jnz	short loc_67DC38E5
		jmp	short loc_67DC38E3
sub_67DC38A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC3920	proc near		; DATA XREF: .rdata:67E1B1F4o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= byte ptr -20h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	[esp+3Ch+var_8], ebx
		lea	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_4], esi
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC3950

loc_67DC3943:				; CODE XREF: sub_67DC3920+83j
		mov	ebx, [esp+3Ch+var_8]
		mov	esi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC3950:				; CODE XREF: sub_67DC3920+21j
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E0F4D0
		test	eax, eax
		jnz	short loc_67DC3972

loc_67DC395C:				; CODE XREF: sub_67DC3920+74j
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E02BF0
		xor	eax, eax
		mov	ebx, [esp+3Ch+var_8]
		mov	esi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC3972:				; CODE XREF: sub_67DC3920+3Aj
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E00CE0
		mov	[esp+3Ch+var_34], esi
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_30], eax
		call	sub_67E080C0
		test	eax, eax
		jz	short loc_67DC395C
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E02BF0
		mov	eax, 1
		jmp	short loc_67DC3943
sub_67DC3920	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DC39B0(int,	char *)
sub_67DC39B0	proc near		; DATA XREF: .rdata:67E1B20Co

var_9C		= dword	ptr -9Ch
dwLen		= dword	ptr -98h
var_94		= dword	ptr -94h
Format		= dword	ptr -90h
var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 9Ch
		mov	[esp+9Ch+var_10], ebx
		mov	ebx, [esp+9Ch+arg_0]
		mov	[esp+9Ch+var_4], ebp
		mov	ebp, [esp+9Ch+arg_4]
		mov	[esp+9Ch+var_C], esi
		mov	[esp+9Ch+var_8], edi
		mov	eax, [ebx+70h]
		test	eax, eax
		js	loc_67DC3A76
		lea	eax, [esp+9Ch+var_20]
		mov	[esp+9Ch+var_94], eax
		mov	[esp+9Ch+dwLen], 0
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67E003F0
		test	eax, eax
		jz	short loc_67DC3A42
		lea	esi, [esp+9Ch+var_44]
		mov	[esp+9Ch+var_9C], esi
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	loc_67DC3AE3

loc_67DC3A1F:				; CODE XREF: sub_67DC39B0+C4j
					; sub_67DC39B0+12Ej ...
		mov	ebx, [esp+9Ch+var_10]
		mov	esi, [esp+9Ch+var_C]
		mov	edi, [esp+9Ch+var_8]
		mov	ebp, [esp+9Ch+var_4]
		add	esp, 9Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC3A42:				; CODE XREF: sub_67DC39B0+55j
		mov	eax, [ebx+4]
		mov	[esp+9Ch+Format], offset aSNoSpaceSepara ; "%s:	no space separator in client respon"...
		mov	[esp+9Ch+var_94], offset aSha1_handle_se ; "sha1_handle_second_client_response"
		mov	[esp+9Ch+dwLen], 2B1h ;	int
		mov	dword ptr [esp+9Ch+var_8C], eax	; char
		mov	[esp+9Ch+var_9C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DC2A10
		jmp	short loc_67DC3A1F
; ---------------------------------------------------------------------------

loc_67DC3A76:				; CODE XREF: sub_67DC39B0+35j
		lea	eax, [ebx+74h]
		mov	[esp+9Ch+var_70], eax
		mov	[esp+9Ch+dwLen], 0
		mov	[esp+9Ch+var_9C], eax
		call	sub_67E06F60
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67E00CE0
		test	eax, eax
		jle	loc_67DC3B30
		lea	esi, [ebx+38h]
		mov	[esp+9Ch+var_9C], esi
		call	sub_67E00CE0
		test	eax, eax
		jle	short loc_67DC3B10
		mov	eax, [ebx+4]
		mov	[esp+9Ch+Format], offset aSClientTriedTo ; "%s:	client tried to	send auth identity,"...
		mov	[esp+9Ch+var_94], offset aSha1_handle_fi ; "sha1_handle_first_client_response"
		mov	[esp+9Ch+dwLen], 21Ch ;	int
		mov	dword ptr [esp+9Ch+var_8C], eax	; char
		mov	[esp+9Ch+var_9C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DC2A10
		jmp	loc_67DC3A1F
; ---------------------------------------------------------------------------

loc_67DC3AE3:				; CODE XREF: sub_67DC39B0+69j
		lea	edi, [esp+9Ch+var_58]
		mov	[esp+9Ch+var_9C], edi
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	loc_67DC3D60

loc_67DC3AFB:				; CODE XREF: sub_67DC39B0+3F2j
		mov	[esp+9Ch+var_74], eax
		mov	[esp+9Ch+var_9C], esi
		call	sub_67E02BF0
		mov	eax, [esp+9Ch+var_74]
		jmp	loc_67DC3A1F
; ---------------------------------------------------------------------------

loc_67DC3B10:				; CODE XREF: sub_67DC39B0+FAj
		mov	[esp+9Ch+Format], 0
		mov	[esp+9Ch+var_94], esi
		mov	[esp+9Ch+dwLen], 0
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67E036F0
		test	eax, eax
		jz	short loc_67DC3B57

loc_67DC3B30:				; CODE XREF: sub_67DC39B0+E7j
		mov	[esp+9Ch+dwLen], ebp ; char *
		mov	eax, [ebx+54h]
		mov	[esp+9Ch+var_9C], eax ;	int
		call	sub_67E0C930
		test	eax, eax
		jz	loc_67DC3E50
		lea	edi, [esp+9Ch+var_58]
		mov	[esp+9Ch+var_9C], edi
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DC3B60

loc_67DC3B57:				; CODE XREF: sub_67DC39B0+17Ej
		xor	eax, eax
		jmp	loc_67DC3A1F
; ---------------------------------------------------------------------------
		align 10h

loc_67DC3B60:				; CODE XREF: sub_67DC39B0+1A5j
		lea	esi, [esp+9Ch+var_44]
		mov	[esp+9Ch+var_9C], esi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC3F16
		mov	eax, [ebx+6Ch]
		test	eax, eax
		jz	loc_67DC3F37
		mov	edx, [ebx+54h]
		mov	[esp+9Ch+var_9C], eax
		mov	[esp+9Ch+dwLen], edx
		call	sub_67DD6750
		test	eax, eax
		jz	loc_67DC3F25
		mov	eax, [ebx+6Ch]
		test	eax, eax
		jz	loc_67DC3F37
		lea	ebp, [esp+9Ch+var_30]

loc_67DC3BA5:				; CODE XREF: sub_67DC39B0+5EFj
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		mov	dword ptr [esp+9Ch+var_8C], offset aSha1_handle_fi ; "sha1_handle_first_client_response"
		mov	[esp+9Ch+Format], 263h
		mov	[esp+9Ch+var_94], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+dwLen], offset	aAuthKeyringNul	; "auth->keyring != NULL"
		call	sub_67DFAE70
		mov	[esp+9Ch+var_9C], ebp
		call	dbus_error_init
		mov	[esp+9Ch+dwLen], ebp
		mov	eax, [ebx+6Ch]
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DD7D30
		test	eax, eax
		mov	[ebx+70h], eax
		js	loc_67DC3E87
		mov	[esp+9Ch+var_9C], ebp
		call	dbus_error_is_set
		mov	dword ptr [esp+9Ch+var_8C], offset aSha1_handle_fi ; "sha1_handle_first_client_response"
		mov	[esp+9Ch+Format], 273h
		mov	[esp+9Ch+var_94], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+dwLen], offset	aDbus_error_i_0	; "!dbus_error_is_set (&error)"
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	[esp+9Ch+var_9C], esi
		call	sub_67E00CE0
		mov	[esp+9Ch+var_94], esi
		mov	[esp+9Ch+dwLen], 0
		mov	[esp+9Ch+Format], eax
		lea	eax, [ebx+58h]
		mov	[esp+9Ch+var_9C], eax
		call	sub_67E036F0
		test	eax, eax
		jnz	short loc_67DC3C85

loc_67DC3C56:				; CODE XREF: sub_67DC39B0+2E7j
					; sub_67DC39B0+2FAj ...
		xor	eax, eax

loc_67DC3C58:				; CODE XREF: sub_67DC39B0+3AAj
					; sub_67DC39B0+561j ...
		mov	[esp+9Ch+var_74], eax
		mov	[esp+9Ch+var_9C], edi
		call	sub_67E01BC0
		mov	[esp+9Ch+var_9C], edi
		call	sub_67E02BF0
		mov	[esp+9Ch+var_9C], esi
		call	sub_67E01BC0
		mov	[esp+9Ch+var_9C], esi
		call	sub_67E02BF0
		mov	eax, [esp+9Ch+var_74]
		jmp	loc_67DC3A1F
; ---------------------------------------------------------------------------

loc_67DC3C85:				; CODE XREF: sub_67DC39B0+2A4j
		mov	[esp+9Ch+dwLen], offset	asc_67E1A547 ; " "
		mov	[esp+9Ch+var_9C], esi ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC3C56
		mov	eax, [ebx+70h]
		mov	[esp+9Ch+var_9C], esi
		mov	[esp+9Ch+dwLen], eax
		call	sub_67E09740
		test	eax, eax
		jz	short loc_67DC3C56
		mov	[esp+9Ch+dwLen], offset	asc_67E1A547 ; " "
		mov	[esp+9Ch+var_9C], esi ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC3C56
		mov	[esp+9Ch+dwLen], 10h ; dwLen
		mov	[esp+9Ch+var_9C], edi ;	int
		call	sub_67E0C6A0
		test	eax, eax
		jz	short loc_67DC3C56
		mov	eax, [esp+9Ch+var_70]
		mov	[esp+9Ch+dwLen], 0
		mov	[esp+9Ch+var_9C], eax
		call	sub_67E06F60
		mov	eax, [esp+9Ch+var_70]
		mov	[esp+9Ch+Format], 0
		mov	[esp+9Ch+dwLen], 0
		mov	[esp+9Ch+var_9C], edi
		mov	[esp+9Ch+var_94], eax
		call	sub_67E080C0
		test	eax, eax
		jz	loc_67DC3C56
		mov	[esp+9Ch+var_9C], esi
		call	sub_67E00CE0
		mov	[esp+9Ch+var_94], esi
		mov	[esp+9Ch+dwLen], 0
		mov	[esp+9Ch+var_9C], edi
		mov	[esp+9Ch+Format], eax
		call	sub_67E080C0
		test	eax, eax
		jz	loc_67DC3C56
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DC2DC0
		test	eax, eax
		jz	loc_67DC3C56
		mov	eax, ebx
		mov	edx, offset off_67E1B368
		call	sub_67DC2840
		mov	eax, 1
		jmp	loc_67DC3C58
; ---------------------------------------------------------------------------
		align 10h

loc_67DC3D60:				; CODE XREF: sub_67DC39B0+145j
		mov	eax, [esp+9Ch+var_20]
		mov	dword ptr [esp+9Ch+var_8C], 0 ;	int
		mov	[esp+9Ch+Format], esi ;	int
		mov	[esp+9Ch+dwLen], 0 ; int
		mov	[esp+9Ch+var_94], eax ;	size_t
		mov	[esp+9Ch+var_9C], ebp ;	int
		call	sub_67E05A20
		test	eax, eax
		jnz	short loc_67DC3DA7

loc_67DC3D88:				; CODE XREF: sub_67DC39B0+43Bj
					; sub_67DC39B0+49Aj ...
		xor	eax, eax

loc_67DC3D8A:				; CODE XREF: sub_67DC39B0+494j
					; sub_67DC39B0+63Ej
		mov	[esp+9Ch+var_74], eax
		mov	[esp+9Ch+var_9C], edi
		call	sub_67E01BC0
		mov	[esp+9Ch+var_9C], edi
		call	sub_67E02BF0
		mov	eax, [esp+9Ch+var_74]
		jmp	loc_67DC3AFB
; ---------------------------------------------------------------------------

loc_67DC3DA7:				; CODE XREF: sub_67DC39B0+3D6j
		lea	eax, [esp+9Ch+var_20]
		mov	[esp+9Ch+var_94], eax
		mov	eax, [esp+9Ch+var_20]
		mov	[esp+9Ch+var_9C], ebp
		mov	[esp+9Ch+dwLen], eax
		call	sub_67E00160
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67E00CE0
		mov	edx, [esp+9Ch+var_20]
		mov	dword ptr [esp+9Ch+var_8C], 0 ;	int
		mov	[esp+9Ch+Format], edi ;	int
		mov	[esp+9Ch+var_9C], ebp ;	int
		mov	[esp+9Ch+dwLen], edx ; int
		sub	eax, edx
		mov	[esp+9Ch+var_94], eax ;	size_t
		call	sub_67E05A20
		test	eax, eax
		jz	short loc_67DC3D88
		mov	[esp+9Ch+var_9C], esi
		call	sub_67E00CE0
		test	eax, eax
		jz	short loc_67DC3E09
		mov	[esp+9Ch+var_9C], edi
		call	sub_67E00CE0
		test	eax, eax
		jnz	loc_67DC3FA4

loc_67DC3E09:				; CODE XREF: sub_67DC39B0+447j
		mov	eax, [ebx+4]
		mov	[esp+9Ch+Format], offset aSZeroLengthCli ; "%s:	zero-length client challenge or	has"...
		mov	[esp+9Ch+var_94], offset aSha1_handle_se ; "sha1_handle_second_client_response"
		mov	[esp+9Ch+dwLen], 2CBh ;	int
		mov	dword ptr [esp+9Ch+var_8C], eax	; char
		mov	[esp+9Ch+var_9C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DC2A10
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jnz	loc_67DC3D8A
		jmp	loc_67DC3D88
; ---------------------------------------------------------------------------
		align 10h

loc_67DC3E50:				; CODE XREF: sub_67DC39B0+191j
		mov	eax, [ebx+4]
		mov	[esp+9Ch+Format], offset aSDidNotGetAVal ; "%s:	Did not	get a valid username from c"...
		mov	[esp+9Ch+var_94], offset aSha1_handle_fi ; "sha1_handle_first_client_response"
		mov	[esp+9Ch+dwLen], 22Ah ;	int
		mov	dword ptr [esp+9Ch+var_8C], eax	; char
		mov	[esp+9Ch+var_9C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DC2A10
		jmp	loc_67DC3A1F
; ---------------------------------------------------------------------------

loc_67DC3E87:				; CODE XREF: sub_67DC39B0+241j
		mov	[esp+9Ch+var_9C], ebp
		call	dbus_error_is_set
		mov	dword ptr [esp+9Ch+var_8C], offset aSha1_handle_fi ; "sha1_handle_first_client_response"
		mov	[esp+9Ch+Format], 269h
		mov	[esp+9Ch+var_94], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+dwLen], offset	aErrorNullDb_27	; "(&error) == NULL || dbus_error_is_set ("...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	eax, [esp+9Ch+var_2C]
		mov	[esp+9Ch+var_88], eax
		mov	eax, [ebx+4]
		mov	[esp+9Ch+Format], offset aSCouldNotGetAC ; "%s:	Could not get a	cookie ID to send t"...
		mov	[esp+9Ch+var_94], offset aSha1_handle_fi ; "sha1_handle_first_client_response"
		mov	[esp+9Ch+dwLen], 26Bh ;	int
		mov	dword ptr [esp+9Ch+var_8C], eax	; char

loc_67DC3EE6:				; CODE XREF: sub_67DC39B0+6C5j
		mov	[esp+9Ch+var_9C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DC2A10
		mov	[esp+9Ch+var_9C], ebp
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+9Ch+var_74], eax
		call	dbus_error_free
		mov	eax, [esp+9Ch+var_74]
		jmp	loc_67DC3C58
; ---------------------------------------------------------------------------

loc_67DC3F16:				; CODE XREF: sub_67DC39B0+1BEj
		mov	[esp+9Ch+var_9C], edi
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67DC3A1F
; ---------------------------------------------------------------------------

loc_67DC3F25:				; CODE XREF: sub_67DC39B0+1E0j
		mov	eax, [ebx+6Ch]
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DD7890
		mov	dword ptr [ebx+6Ch], 0

loc_67DC3F37:				; CODE XREF: sub_67DC39B0+1C9j
					; sub_67DC39B0+1EBj
		lea	ebp, [esp+9Ch+var_30]
		mov	[esp+9Ch+var_9C], ebp
		call	dbus_error_init
		lea	eax, [ebx+58h]
		mov	[esp+9Ch+var_94], ebp
		mov	[esp+9Ch+dwLen], eax
		mov	eax, [ebx+54h]
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DD7930
		test	eax, eax
		mov	[ebx+6Ch], eax
		jz	loc_67DC3FF3
		mov	[esp+9Ch+var_9C], ebp
		call	dbus_error_is_set
		mov	dword ptr [esp+9Ch+var_8C], offset aSha1_handle_fi ; "sha1_handle_first_client_response"
		mov	[esp+9Ch+Format], 25Fh
		mov	[esp+9Ch+var_94], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+dwLen], offset	aDbus_error_i_0	; "!dbus_error_is_set (&error)"
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+6Ch]
		jmp	loc_67DC3BA5
; ---------------------------------------------------------------------------

loc_67DC3FA4:				; CODE XREF: sub_67DC39B0+453j
		lea	ebp, [esp+9Ch+var_6C]
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC3D88
		mov	edx, [ebx+70h]
		lea	ecx, [ebx+74h]
		mov	eax, ebx
		mov	[esp+9Ch+dwLen], ebp
		mov	[esp+9Ch+var_9C], esi
		call	sub_67DC30E0
		test	eax, eax
		jnz	loc_67DC407A

loc_67DC3FD4:				; CODE XREF: sub_67DC39B0+6F0j
					; sub_67DC39B0+714j ...
		xor	eax, eax

loc_67DC3FD6:				; CODE XREF: sub_67DC39B0+6FBj
					; sub_67DC39B0+77Bj
		mov	[esp+9Ch+var_74], eax
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67E01BC0
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67E02BF0
		mov	eax, [esp+9Ch+var_74]
		jmp	loc_67DC3D8A
; ---------------------------------------------------------------------------

loc_67DC3FF3:				; CODE XREF: sub_67DC39B0+5AEj
		mov	[esp+9Ch+dwLen], offset	aOrg_freedes_25	; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+9Ch+var_9C], ebp ;	int
		call	dbus_error_has_name
		test	eax, eax
		jz	short loc_67DC4016
		mov	[esp+9Ch+var_9C], ebp
		call	dbus_error_free
		xor	eax, eax
		jmp	loc_67DC3C58
; ---------------------------------------------------------------------------

loc_67DC4016:				; CODE XREF: sub_67DC39B0+655j
		mov	[esp+9Ch+var_9C], ebp
		call	dbus_error_is_set
		mov	dword ptr [esp+9Ch+var_8C], offset aSha1_handle_fi ; "sha1_handle_first_client_response"
		mov	[esp+9Ch+Format], 254h
		mov	[esp+9Ch+var_94], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+dwLen], offset	aErrorNullDb_27	; "(&error) == NULL || dbus_error_is_set ("...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	eax, [esp+9Ch+var_2C]
		mov	[esp+9Ch+var_88], eax
		mov	eax, [ebx+4]
		mov	[esp+9Ch+Format], offset aSErrorLoadingK ; "%s:	Error loading keyring: %s\n"
		mov	[esp+9Ch+var_94], offset aSha1_handle_fi ; "sha1_handle_first_client_response"
		mov	[esp+9Ch+dwLen], 256h
		mov	dword ptr [esp+9Ch+var_8C], eax
		jmp	loc_67DC3EE6
; ---------------------------------------------------------------------------

loc_67DC407A:				; CODE XREF: sub_67DC39B0+61Ej
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67E00CE0
		test	eax, eax
		jz	short loc_67DC4096
		mov	[esp+9Ch+dwLen], ebp
		mov	[esp+9Ch+var_9C], edi
		call	sub_67DFF980
		test	eax, eax
		jnz	short loc_67DC40B0

loc_67DC4096:				; CODE XREF: sub_67DC39B0+6D4j
		mov	eax, ebx
		call	sub_67DC2A10
		test	eax, eax
		nop
		jz	loc_67DC3FD4
		mov	eax, 1
		jmp	loc_67DC3FD6
; ---------------------------------------------------------------------------

loc_67DC40B0:				; CODE XREF: sub_67DC39B0+6E4j
		mov	eax, [ebx+54h]
		mov	[esp+9Ch+dwLen], eax
		mov	eax, [ebx+50h]
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DD5B80
		test	eax, eax
		jz	loc_67DC3FD4
		mov	eax, [ebx+4Ch]
		mov	[esp+9Ch+dwLen], 0
		mov	[esp+9Ch+var_94], eax
		mov	eax, [ebx+50h]
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DD5980
		test	eax, eax
		jz	loc_67DC3FD4
		mov	eax, ebx
		call	sub_67DC2B60
		test	eax, eax
		jz	loc_67DC3FD4
		mov	eax, [ebx+4]
		mov	[esp+9Ch+Format], offset aSAuthenticat_0 ; "%s:	authenticated client using DBUS_COO"...
		mov	[esp+9Ch+var_94], offset aSha1_handle_se ; "sha1_handle_second_client_response"
		mov	[esp+9Ch+dwLen], 2F8h ;	int
		mov	dword ptr [esp+9Ch+var_8C], eax	; char
		mov	[esp+9Ch+var_9C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		jmp	loc_67DC3FD6
sub_67DC39B0	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DC4130	proc near		; DATA XREF: .rdata:67E1B1E4o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_8], esi
		mov	eax, [ebx+4Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5640
		test	eax, eax
		jnz	loc_67DC4311
		mov	[esp+2Ch+var_2C], edi
		lea	esi, [ebx+38h]
		call	sub_67E00CE0
		test	eax, eax
		jle	short loc_67DC41D6
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		test	eax, eax
		jle	short loc_67DC41B6
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSClientTriedTo ; "%s:	client tried to	send auth identity,"...
		mov	[esp+2Ch+var_24], offset aHandle_serve_0 ; "handle_server_data_external_mech"
		mov	[esp+2Ch+var_28], 40Ch ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char

loc_67DC4194:				; CODE XREF: sub_67DC4130+200j
					; sub_67DC4130+27Fj
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DC41A0:				; CODE XREF: sub_67DC4130+25Bj
					; sub_67DC4130+2FBj
		mov	eax, ebx
		mov	esi, [esp+2Ch+var_8]
		mov	ebx, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		jmp	sub_67DC2A10
; ---------------------------------------------------------------------------

loc_67DC41B6:				; CODE XREF: sub_67DC4130+43j
		mov	[esp+2Ch+Format], 0
		mov	[esp+2Ch+var_24], esi
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], edi
		call	sub_67E036F0
		test	eax, eax
		jz	short loc_67DC41FC

loc_67DC41D6:				; CODE XREF: sub_67DC4130+37j
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		test	eax, eax
		jnz	short loc_67DC4210
		test	byte ptr [ebx+8Ch], 4
		jnz	short loc_67DC4210
		xor	edx, edx
		mov	eax, ebx
		call	sub_67DC2DC0
		test	eax, eax
		jnz	loc_67DC43B4

loc_67DC41FC:				; CODE XREF: sub_67DC4130+A4j
					; sub_67DC4130+153j ...
		xor	eax, eax

loc_67DC41FE:				; CODE XREF: sub_67DC4130+1DCj
					; sub_67DC4130+2C7j
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4210:				; CODE XREF: sub_67DC4130+B0j
					; sub_67DC4130+B9j
		mov	eax, [ebx+54h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5780
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		test	eax, eax
		jz	loc_67DC4335
		mov	[esp+2Ch+var_28], esi ;	char *
		mov	eax, [ebx+54h]
		mov	[esp+2Ch+var_2C], eax ;	int
		call	sub_67E0C930
		test	eax, eax
		jz	loc_67DC4400

loc_67DC4242:				; CODE XREF: sub_67DC4130+219j
		mov	eax, [ebx+54h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5640
		test	eax, eax
		jnz	loc_67DC4354
		mov	eax, [ebx+54h]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+4Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD57D0
		test	eax, eax
		jz	loc_67DC4390
		mov	eax, [ebx+54h]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+50h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5B80
		test	eax, eax
		jz	loc_67DC41FC
		mov	eax, [ebx+4Ch]
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+50h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5980
		test	eax, eax
		jz	loc_67DC41FC
		mov	eax, [ebx+4Ch]
		mov	[esp+2Ch+var_28], 2
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+50h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5980
		test	eax, eax
		jz	loc_67DC41FC
		mov	eax, ebx
		call	sub_67DC2B60
		test	eax, eax
		jz	loc_67DC41FC
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSAuthenticat_1 ; "%s:	authenticated client based on socke"...
		mov	[esp+2Ch+var_24], offset aHandle_serve_0 ; "handle_server_data_external_mech"
		mov	[esp+2Ch+var_28], 463h ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		jmp	loc_67DC41FE
; ---------------------------------------------------------------------------

loc_67DC4311:				; CODE XREF: sub_67DC4130+24j
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSNoCredentials ; "%s:	no credentials,	mechanism EXTERNAL "...
		mov	[esp+2Ch+var_24], offset aHandle_serve_0 ; "handle_server_data_external_mech"
		mov	[esp+2Ch+var_28], 402h
		mov	dword ptr [esp+2Ch+var_1C], eax
		jmp	loc_67DC4194
; ---------------------------------------------------------------------------

loc_67DC4335:				; CODE XREF: sub_67DC4130+F5j
		mov	eax, [ebx+4Ch]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+54h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5B80
		test	eax, eax
		jnz	loc_67DC4242
		jmp	loc_67DC41FC
; ---------------------------------------------------------------------------

loc_67DC4354:				; CODE XREF: sub_67DC4130+11Fj
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E01770
		mov	[esp+2Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSDesiredUserSI ; "%s:	desired	user %s	is no good\n"
		mov	[esp+2Ch+var_24], offset aHandle_serve_0 ; "handle_server_data_external_mech"
		mov	[esp+2Ch+var_28], 445h ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DC41A0
; ---------------------------------------------------------------------------

loc_67DC4390:				; CODE XREF: sub_67DC4130+139j
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSDesiredIdenti ; "%s:	desired	identity not found in socke"...
		mov	[esp+2Ch+var_24], offset aHandle_serve_0 ; "handle_server_data_external_mech"
		mov	[esp+2Ch+var_28], 46Ah
		mov	dword ptr [esp+2Ch+var_1C], eax
		jmp	loc_67DC4194
; ---------------------------------------------------------------------------

loc_67DC43B4:				; CODE XREF: sub_67DC4130+C6j
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSSendingEmptyC ; "%s:	sending	empty challenge	asking clie"...
		mov	[esp+2Ch+var_24], offset aHandle_serve_0 ; "handle_server_data_external_mech"
		mov	[esp+2Ch+var_28], 41Eh ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		mov	edx, offset off_67E1B368
		or	byte ptr [ebx+8Ch], 4
		call	sub_67DC2840
		mov	eax, 1
		jmp	loc_67DC41FE
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4400:				; CODE XREF: sub_67DC4130+10Cj
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSCouldNotGetCr ; "%s:	could not get credentials from uid "...
		mov	[esp+2Ch+var_24], offset aHandle_serve_0 ; "handle_server_data_external_mech"
		mov	[esp+2Ch+var_28], 43Ch ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DC41A0
sub_67DC4130	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DC4430	proc near		; CODE XREF: sub_67DC4580+49p
					; sub_67DC5BB0+35p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	[esp+3Ch+var_3C], eax ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		mov	esi, eax
		jz	loc_67DC450A
		mov	dword ptr [eax], 1
		lea	edi, [eax+8]
		mov	dword ptr [eax+6Ch], 0
		mov	dword ptr [eax+70h], 0FFFFFFFFh
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC456A
		lea	eax, [ebx+1Ch]
		mov	[esp+3Ch+var_28], eax
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC4562
		lea	eax, [ebx+38h]
		mov	[esp+3Ch+var_24], eax
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC4556
		lea	ebp, [ebx+58h]
		mov	[esp+3Ch+var_3C], ebp
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC454A
		lea	eax, [ebx+74h]
		mov	[esp+3Ch+var_20], eax
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DC4542
		mov	[esp+3Ch+var_38], offset aOrg_freedes_40 ; "org_freedesktop_general"
		mov	[esp+3Ch+var_3C], ebp ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DC4536
		call	sub_67DD5AE0
		test	eax, eax
		mov	[ebx+4Ch], eax
		jz	short loc_67DC4536
		call	sub_67DD5AE0
		test	eax, eax
		mov	[ebx+50h], eax
		jz	short loc_67DC452B
		call	sub_67DD5AE0
		test	eax, eax
		mov	[ebx+54h], eax
		jz	short loc_67DC4520

loc_67DC450A:				; CODE XREF: sub_67DC4430+21j
					; sub_67DC4430+144j
		mov	eax, esi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC4520:				; CODE XREF: sub_67DC4430+D8j
		mov	eax, [ebx+50h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DD5A30

loc_67DC452B:				; CODE XREF: sub_67DC4430+CCj
		mov	eax, [ebx+4Ch]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DD5A30

loc_67DC4536:				; CODE XREF: sub_67DC4430+B4j
					; sub_67DC4430+C0j
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E02BF0

loc_67DC4542:				; CODE XREF: sub_67DC4430+A0j
		mov	[esp+3Ch+var_3C], ebp
		call	sub_67E02BF0

loc_67DC454A:				; CODE XREF: sub_67DC4430+89j
		mov	eax, [esp+3Ch+var_24]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E02BF0

loc_67DC4556:				; CODE XREF: sub_67DC4430+76j
		mov	eax, [esp+3Ch+var_28]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E02BF0

loc_67DC4562:				; CODE XREF: sub_67DC4430+5Fj
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E02BF0

loc_67DC456A:				; CODE XREF: sub_67DC4430+48j
		mov	[esp+3Ch+var_3C], ebx
		xor	esi, esi
		call	dbus_free
		jmp	short loc_67DC450A
sub_67DC4430	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC4580	proc near		; CODE XREF: sub_67DF3BF0+2Bp

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 48h
		lea	ebx, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC45A0

loc_67DC4598:				; CODE XREF: sub_67DC4580+BAj
					; sub_67DC4580+CFj
		add	esp, 48h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC45A0:				; CODE XREF: sub_67DC4580+16j
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_40], 0
		mov	[esp+4Ch+var_44], ebx
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E036F0
		test	eax, eax
		jz	short loc_67DC4630
		mov	eax, 0ACh
		call	sub_67DC4430
		test	eax, eax
		jz	short loc_67DC463F
		mov	edx, [esp+4Ch+var_20]
		mov	dword ptr [eax+4], offset aServer ; "server"
		mov	dword ptr [eax+30h], offset off_67E1B2B4
		mov	[eax+98h], edx
		mov	edx, [esp+4Ch+var_1C]
		mov	[eax+9Ch], edx
		mov	edx, [esp+4Ch+var_18]
		mov	[eax+0A0h], edx
		mov	edx, [esp+4Ch+var_14]
		mov	[eax+0A4h], edx
		mov	edx, [esp+4Ch+var_10]
		mov	dword ptr [eax+90h], 0
		mov	dword ptr [eax+94h], 6
		mov	[eax+0A8h], edx
		add	esp, 48h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4630:				; CODE XREF: sub_67DC4580+42j
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67DC4598
; ---------------------------------------------------------------------------

loc_67DC463F:				; CODE XREF: sub_67DC4580+50j
		mov	[esp+4Ch+var_30], eax
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E02BF0
		mov	eax, [esp+4Ch+var_30]
		jmp	loc_67DC4598
sub_67DC4580	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC4660	proc near		; CODE XREF: sub_67DF4150+7Dp
					; sub_67DF48E0+1ACp ...

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
Format		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_50		= byte ptr -50h
var_3C		= dword	ptr -3Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	ebx, [esp+7Ch+arg_0]
		movzx	edx, byte ptr [ebx+8Ch]
		mov	eax, [ebx+30h]
		and	edx, 0FFFFFFFEh
		mov	[ebx+8Ch], dl
		mov	esi, [eax+4]
		test	esi, esi
		jz	short loc_67DC46E7
		lea	esi, [ebx+8]
		lea	edi, [ebx+1Ch]
		lea	ebp, [esp+7Ch+var_20]

loc_67DC4692:				; CODE XREF: sub_67DC4660+2D7j
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E00CE0
		cmp	eax, 4000h
		jg	loc_67DC47E1
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E00CE0
		cmp	eax, 4000h
		jg	loc_67DC47E1
		mov	[esp+7Ch+var_20], 0
		mov	[esp+7Ch+Format], ebp
		mov	[esp+7Ch+var_74], offset asc_67E1A549 ;	"\r\n"
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E009F0
		test	eax, eax
		jnz	short loc_67DC4700
		movzx	edx, byte ptr [ebx+8Ch]

loc_67DC46E7:				; CODE XREF: sub_67DC4660+26j
					; sub_67DC4660+17Cj ...
		and	dl, 1
		mov	eax, 1
		jz	short loc_67DC472A

loc_67DC46F1:				; CODE XREF: sub_67DC4660+C8j
					; sub_67DC4660+DEj ...
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4700:				; CODE XREF: sub_67DC4660+7Ej
		lea	eax, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DC4763

loc_67DC4710:				; CODE XREF: sub_67DC4660+15Bj
		movzx	edx, byte ptr [ebx+8Ch]
		mov	eax, 1
		or	edx, 1
		mov	[ebx+8Ch], dl
		and	edx, 1
		jnz	short loc_67DC46F1

loc_67DC472A:				; CODE XREF: sub_67DC4660+8Fj
		lea	eax, [ebx+1Ch]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E00CE0
		mov	edx, eax
		mov	eax, 2
		test	edx, edx
		jg	short loc_67DC46F1
		mov	edx, [ebx+30h]
		mov	al, 3
		cmp	edx, offset off_67E1B098
		jz	short loc_67DC46F1
		xor	eax, eax
		cmp	edx, offset off_67E1AFA4
		setz	al
		add	esp, 6Ch
		shl	eax, 2
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DC4763:				; CODE XREF: sub_67DC4660+AEj
		lea	edx, [esp+7Ch+var_50]
		mov	[esp+7Ch+var_7C], edx
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DC47C0
		lea	eax, [esp+7Ch+var_3C]
		mov	[esp+7Ch+Format], eax ;	int
		mov	eax, [esp+7Ch+var_20]
		mov	dword ptr [esp+7Ch+var_6C], 0 ;	int
		mov	[esp+7Ch+var_78], 0 ; int
		mov	[esp+7Ch+var_7C], esi ;	int
		mov	[esp+7Ch+var_74], eax ;	size_t
		call	sub_67E05A20
		test	eax, eax
		jnz	loc_67DC4860

loc_67DC47A3:				; CODE XREF: sub_67DC4660+271j
					; sub_67DC4660+387j ...
		lea	ecx, [esp+7Ch+var_50]
		mov	[esp+7Ch+var_7C], ecx
		call	sub_67E02BF0
		lea	eax, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E02BF0
		jmp	loc_67DC4710
; ---------------------------------------------------------------------------

loc_67DC47C0:				; CODE XREF: sub_67DC4660+111j
		lea	ecx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], ecx
		call	sub_67E02BF0
		movzx	edx, byte ptr [ebx+8Ch]
		or	edx, 1
		mov	[ebx+8Ch], dl
		jmp	loc_67DC46E7
; ---------------------------------------------------------------------------

loc_67DC47E1:				; CODE XREF: sub_67DC4660+3Fj
					; sub_67DC4660+52j
		mov	eax, ds:off_67E1B098
		mov	[esp+7Ch+var_64], eax
		mov	eax, [ebx+30h]
		mov	eax, [eax]
		mov	[esp+7Ch+var_68], eax
		mov	eax, [ebx+4]
		mov	[esp+7Ch+Format], offset aSGoingFromStat ; "%s:	going from state %s to state %s\n"
		mov	[esp+7Ch+var_74], offset aGoto_state ; "goto_state"
		mov	[esp+7Ch+var_78], 856h ; int
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+var_7C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	dword ptr [ebx+30h], offset off_67E1B098
		mov	[esp+7Ch+Format], offset aSDisconnecting ; "%s:	Disconnecting due to excessive data"...
		mov	[esp+7Ch+var_74], offset a_dbus_auth_do_ ; "_dbus_auth_do_work"
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+var_78], 990h ; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		movzx	edx, byte ptr [ebx+8Ch]
		jmp	loc_67DC46E7
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4860:				; CODE XREF: sub_67DC4660+13Dj
		lea	edx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], edx
		call	sub_67E00CE0
		lea	ecx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_7C], ecx
		mov	[esp+7Ch+var_74], eax
		call	sub_67E023F0
		test	eax, eax
		jnz	loc_67DC4942
		mov	eax, [ebx+4]
		mov	[esp+7Ch+Format], offset aSCommandContai ; "%s:	Command	contained non-ASCII chars o"...
		mov	[esp+7Ch+var_74], offset aProcess_comman ; "process_command"
		mov	[esp+7Ch+var_78], 882h ; int
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+var_7C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+7Ch+var_74], offset aCommandContain ; "Command contained non-ASCII"
		mov	[esp+7Ch+var_78], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+7Ch+var_7C], edi ;	int
		call	sub_67E090A0
		test	eax, eax
		jz	loc_67DC47A3

loc_67DC48D7:				; CODE XREF: sub_67DC4660+4D7j
		mov	eax, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_7C], esi
		mov	[esp+7Ch+var_74], eax
		call	sub_67E02D80
		mov	[esp+7Ch+var_74], 2
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E02D80
		lea	eax, [esp+7Ch+var_50]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E02BF0
		lea	edx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], edx
		call	sub_67E02BF0
		movzx	edx, byte ptr [ebx+8Ch]
		mov	eax, [ebx+30h]
		and	edx, 0FFFFFFFEh
		mov	[ebx+8Ch], dl
		mov	ecx, [eax+4]
		test	ecx, ecx
		jnz	loc_67DC4692
		jmp	loc_67DC46E7
; ---------------------------------------------------------------------------

loc_67DC4942:				; CODE XREF: sub_67DC4660+226j
		lea	eax, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E01770
		mov	[esp+7Ch+var_68], eax
		mov	eax, [ebx+4]
		mov	[esp+7Ch+Format], offset aSGotCommandS ; "%s: got command \"%s\"\n"
		mov	[esp+7Ch+var_74], offset aProcess_comman ; "process_command"
		mov	[esp+7Ch+var_78], 88Bh ; int
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+var_7C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	edx, [esp+7Ch+var_24]
		lea	ecx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_74], edx
		mov	[esp+7Ch+var_7C], ecx
		mov	[esp+7Ch+var_78], 0
		call	sub_67E003F0
		lea	eax, [esp+7Ch+var_28]
		mov	[esp+7Ch+var_74], eax
		mov	eax, [esp+7Ch+var_24]
		lea	edx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], edx
		mov	[esp+7Ch+var_78], eax
		call	sub_67E00160
		mov	edx, [esp+7Ch+var_28]
		mov	eax, [esp+7Ch+var_24]
		cmp	edx, eax
		jg	loc_67DC4B3C

loc_67DC49C5:				; CODE XREF: sub_67DC4660+4F6j
		lea	edx, [esp+7Ch+var_50]
		lea	ecx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+Format], 0
		mov	[esp+7Ch+var_74], edx
		mov	[esp+7Ch+var_78], eax
		mov	[esp+7Ch+var_7C], ecx
		call	sub_67E05080
		test	eax, eax
		jz	loc_67DC47A3
		mov	eax, ds:off_67E1B120
		lea	edx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], edx
		mov	[esp+7Ch+var_78], eax
		call	sub_67DFEFF0
		xor	edx, edx
		test	eax, eax
		jnz	loc_67DC4B5D
		mov	ecx, ds:off_67E1B128
		lea	eax, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_78], ecx
		call	sub_67DFEFF0
		mov	edx, 1
		test	eax, eax
		jnz	loc_67DC4B5D
		mov	edx, ds:off_67E1B130
		lea	ecx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], ecx
		mov	[esp+7Ch+var_78], edx
		call	sub_67DFEFF0
		mov	edx, 2
		test	eax, eax
		jnz	loc_67DC4B5D
		mov	eax, ds:off_67E1B138
		lea	edx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], edx
		mov	[esp+7Ch+var_78], eax
		call	sub_67DFEFF0
		mov	edx, 3
		test	eax, eax
		jnz	loc_67DC4B5D
		mov	ecx, ds:off_67E1B140
		lea	eax, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_78], ecx
		call	sub_67DFEFF0
		mov	edx, 4
		test	eax, eax
		jnz	loc_67DC4B5D
		mov	edx, ds:off_67E1B148
		lea	ecx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], ecx
		mov	[esp+7Ch+var_78], edx
		call	sub_67DFEFF0
		mov	edx, 5
		test	eax, eax
		jnz	loc_67DC4B5D
		mov	eax, ds:off_67E1B150
		lea	edx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], edx
		mov	[esp+7Ch+var_78], eax
		call	sub_67DFEFF0
		mov	edx, 6
		test	eax, eax
		jnz	loc_67DC4B5D
		mov	ecx, ds:off_67E1B158
		lea	eax, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_78], ecx
		call	sub_67DFEFF0
		mov	edx, 7
		test	eax, eax
		jnz	short loc_67DC4B5D
		mov	edx, ds:off_67E1B160
		lea	ecx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_7C], ecx
		mov	[esp+7Ch+var_78], edx
		call	sub_67DFEFF0
		mov	edx, 7
		test	eax, eax
		jnz	short loc_67DC4B5B

loc_67DC4B1A:				; CODE XREF: sub_67DC4660+504j
		mov	eax, [ebx+30h]
		lea	ecx, [esp+7Ch+var_50]
		mov	[esp+7Ch+var_74], ecx
		mov	[esp+7Ch+var_78], edx
		mov	[esp+7Ch+var_7C], ebx
		call	dword ptr [eax+4]
		test	eax, eax
		jz	loc_67DC47A3
		jmp	loc_67DC48D7
; ---------------------------------------------------------------------------

loc_67DC4B3C:				; CODE XREF: sub_67DC4660+35Fj
		sub	edx, eax
		lea	ecx, [esp+7Ch+var_3C]
		mov	[esp+7Ch+var_78], eax
		mov	[esp+7Ch+var_74], edx
		mov	[esp+7Ch+var_7C], ecx
		call	sub_67E02D80
		mov	eax, [esp+7Ch+var_24]
		jmp	loc_67DC49C5
; ---------------------------------------------------------------------------

loc_67DC4B5B:				; CODE XREF: sub_67DC4660+4B8j
		mov	dl, 8

loc_67DC4B5D:				; CODE XREF: sub_67DC4660+3A6j
					; sub_67DC4660+3C9j ...
		mov	edx, ds:dword_67E1B124[edx*8]
		jmp	short loc_67DC4B1A
sub_67DC4660	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DC4B70(int,	char *,	char)
sub_67DC4B70	proc near		; DATA XREF: .rdata:67E1B2F8o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		cmp	eax, 8		; switch 9 cases
		jbe	short loc_67DC4BA1

loc_67DC4B81:				; CODE XREF: sub_67DC4B70:loc_67DC4BA1j
					; DATA XREF: .rdata:off_67E1AC00o
		mov	dword ptr [esp+2Ch+arg_8], offset aUnknownCommand ; jumptable 67DC4BA1 default case

loc_67DC4B89:				; CODE XREF: sub_67DC4B70+D8j
					; sub_67DC4B70+F8j ...
		add	ebx, 1Ch
		mov	[esp+2Ch+arg_0], ebx ; int
		mov	[esp+2Ch+arg_4], offset	aErrorS	; "ERROR \"%s\"\r\n"
		add	esp, 28h
		pop	ebx
		jmp	sub_67E090A0
; ---------------------------------------------------------------------------

loc_67DC4BA1:				; CODE XREF: sub_67DC4B70+Fj
		jmp	ds:off_67E1AC00[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67DC4BA8:				; CODE XREF: sub_67DC4B70:loc_67DC4BA1j
					; DATA XREF: .rdata:off_67E1AC00o
		test	byte ptr [ebx+8Ch], 10h	; jumptable 67DC4BA1 case 8
		jz	loc_67DC4CC0
		mov	dword ptr [esp+2Ch+var_1C], offset aSend_agree_uni ; "send_agree_unix_fd"
		mov	[esp+2Ch+Format], 673h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAuthUnix_fd_po ; "auth->unix_fd_possible"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		or	byte ptr [ebx+8Ch], 20h
		mov	[esp+2Ch+Format], offset aAgreedToUnixFd ; "Agreed to UNIX FD passing\n"
		mov	[esp+2Ch+var_24], offset aSend_agree_uni ; "send_agree_unix_fd"
		mov	[esp+2Ch+var_28], 676h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [ebx+1Ch]
		mov	[esp+2Ch+var_28], offset aAgree_unix_f_0 ; "AGREE_UNIX_FD\r\n"
		mov	[esp+2Ch+var_2C], eax ;	int
		call	sub_67E08C10
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	loc_67DC4CB9
		mov	eax, ebx
		mov	edx, offset off_67E1B2F4
		call	sub_67DC2840
		mov	eax, 1
		jmp	short loc_67DC4CB9
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4C40:				; CODE XREF: sub_67DC4B70:loc_67DC4BA1j
					; DATA XREF: .rdata:off_67E1AC00o
		mov	dword ptr [esp+2Ch+arg_8], offset aSentAuthWhileE ; jumptable 67DC4BA1 case 0
		jmp	loc_67DC4B89
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4C50:				; CODE XREF: sub_67DC4B70:loc_67DC4BA1j
					; DATA XREF: .rdata:off_67E1AC00o
		mov	eax, ebx	; jumptable 67DC4BA1 cases 1,6
		add	esp, 28h
		pop	ebx
		jmp	sub_67DC2A10
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4C60:				; CODE XREF: sub_67DC4B70:loc_67DC4BA1j
					; DATA XREF: .rdata:off_67E1AC00o
		mov	dword ptr [esp+2Ch+arg_8], offset aSentDataWhileE ; jumptable 67DC4BA1 case 2
		jmp	loc_67DC4B89
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4C70:				; CODE XREF: sub_67DC4B70:loc_67DC4BA1j
					; DATA XREF: .rdata:off_67E1AC00o
		mov	eax, ds:off_67E1AFA4 ; jumptable 67DC4BA1 case 3
		mov	[esp+2Ch+var_14], eax
		mov	eax, [ebx+30h]
		mov	eax, [eax]
		mov	[esp+2Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSGoingFromStat ; "%s:	going from state %s to state %s\n"
		mov	[esp+2Ch+var_24], offset aGoto_state ; "goto_state"
		mov	[esp+2Ch+var_28], 856h ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		mov	dword ptr [ebx+30h], offset off_67E1AFA4

loc_67DC4CB9:				; CODE XREF: sub_67DC4B70+B5j
					; sub_67DC4B70+CCj
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4CC0:				; CODE XREF: sub_67DC4B70+3Fj
		mov	dword ptr [esp+2Ch+arg_8], offset aUnixFdPassingN ; "Unix FD passing not supported, not	auth"...
		jmp	loc_67DC4B89
sub_67DC4B70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC4CD0	proc near		; DATA XREF: .rdata:67E1B2B8o

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
Format		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_50		= dword	ptr -50h
var_48		= byte ptr -48h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 7Ch
		mov	eax, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_10], ebx
		mov	ebx, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_4], ebp
		mov	ebp, [esp+7Ch+arg_8]
		mov	[esp+7Ch+var_C], esi
		cmp	eax, 8		; switch 9 cases
		mov	[esp+7Ch+var_8], edi
		jbe	short loc_67DC4D30

loc_67DC4CFD:				; CODE XREF: sub_67DC4CD0:loc_67DC4D30j
					; DATA XREF: .rdata:off_67E1ACA0o
		add	ebx, 1Ch	; jumptable 67DC4D30 default case
		mov	[esp+7Ch+var_74], offset aUnknownCommand ; "Unknown command"
		mov	[esp+7Ch+var_78], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+7Ch+var_7C], ebx ;	int
		call	sub_67E090A0

loc_67DC4D18:				; CODE XREF: sub_67DC4CD0+82j
					; sub_67DC4CD0+A5j ...
		mov	ebx, [esp+7Ch+var_10]
		mov	esi, [esp+7Ch+var_C]
		mov	edi, [esp+7Ch+var_8]
		mov	ebp, [esp+7Ch+var_4]
		add	esp, 7Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4D30:				; CODE XREF: sub_67DC4CD0+2Bj
		jmp	ds:off_67E1ACA0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67DC4D37:				; CODE XREF: sub_67DC4CD0:loc_67DC4D30j
					; DATA XREF: .rdata:off_67E1ACA0o
		add	ebx, 1Ch	; jumptable 67DC4D30 case 8
		mov	[esp+7Ch+var_74], offset aNeedToAuthenti ; "Need to authenticate first"
		mov	[esp+7Ch+var_78], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+7Ch+var_7C], ebx ;	int
		call	sub_67E090A0
		jmp	short loc_67DC4D18
; ---------------------------------------------------------------------------

loc_67DC4D54:				; CODE XREF: sub_67DC4CD0:loc_67DC4D30j
					; DATA XREF: .rdata:off_67E1ACA0o
		mov	[esp+7Ch+var_7C], ebp ;	jumptable 67DC4D30 case	0
		call	sub_67E00CE0
		test	eax, eax
		xchg	ax, ax
		jnz	loc_67DC4DF0
		mov	eax, ebx
		call	sub_67DC2A10
		test	eax, eax
		setnz	al
		movzx	eax, al
		jmp	short loc_67DC4D18
; ---------------------------------------------------------------------------

loc_67DC4D77:				; CODE XREF: sub_67DC4CD0:loc_67DC4D30j
					; DATA XREF: .rdata:off_67E1ACA0o
		add	ebx, 1Ch	; jumptable 67DC4D30 cases 1,2
		mov	[esp+7Ch+var_74], offset aNotCurrentlyIn ; "Not	currently in an	auth conversation"
		mov	[esp+7Ch+var_78], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+7Ch+var_7C], ebx ;	int
		call	sub_67E090A0
		jmp	short loc_67DC4D18
; ---------------------------------------------------------------------------

loc_67DC4D94:				; CODE XREF: sub_67DC4CD0:loc_67DC4D30j
					; DATA XREF: .rdata:off_67E1ACA0o
		mov	eax, ds:off_67E1B098 ; jumptable 67DC4D30 case 3
		mov	[esp+7Ch+var_64], eax
		mov	eax, [ebx+30h]
		mov	eax, [eax]
		mov	[esp+7Ch+var_68], eax
		mov	eax, [ebx+4]
		mov	[esp+7Ch+Format], offset aSGoingFromStat ; "%s:	going from state %s to state %s\n"
		mov	[esp+7Ch+var_74], offset aGoto_state ; "goto_state"
		mov	[esp+7Ch+var_78], 856h ; int
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+var_7C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		mov	dword ptr [ebx+30h], offset off_67E1B098
		jmp	loc_67DC4D18
; ---------------------------------------------------------------------------

loc_67DC4DE2:				; CODE XREF: sub_67DC4CD0:loc_67DC4D30j
					; DATA XREF: .rdata:off_67E1ACA0o
		mov	eax, ebx	; jumptable 67DC4D30 case 6
		call	sub_67DC2A10
		jmp	loc_67DC4D18
; ---------------------------------------------------------------------------
		align 10h

loc_67DC4DF0:				; CODE XREF: sub_67DC4CD0+90j
		lea	eax, [esp+7Ch+var_20]
		lea	esi, [esp+7Ch+var_34]
		mov	[esp+7Ch+var_74], eax
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E003F0
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	loc_67DC4D18
		lea	edi, [esp+7Ch+var_48]
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC4EB2
		mov	eax, [esp+7Ch+var_20]
		mov	dword ptr [esp+7Ch+var_6C], 0 ;	int
		mov	[esp+7Ch+Format], esi ;	int
		mov	[esp+7Ch+var_78], 0 ; int
		mov	[esp+7Ch+var_74], eax ;	size_t
		mov	[esp+7Ch+var_7C], ebp ;	int
		call	sub_67E05A20
		test	eax, eax
		jz	short loc_67DC4E94
		lea	eax, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_74], eax
		mov	eax, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_7C], ebp
		mov	[esp+7Ch+var_78], eax
		call	sub_67E00160
		mov	eax, [esp+7Ch+var_20]
		mov	[esp+7Ch+Format], 0
		mov	[esp+7Ch+var_74], edi
		mov	[esp+7Ch+var_7C], ebp
		mov	[esp+7Ch+var_78], eax
		call	sub_67E036F0
		test	eax, eax
		jnz	short loc_67DC4EC1

loc_67DC4E94:				; CODE XREF: sub_67DC4CD0+18Aj
					; sub_67DC4CD0+25Aj ...
		mov	dword ptr [ebx+34h], 0
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E02BF0
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67DC4D18
; ---------------------------------------------------------------------------

loc_67DC4EB2:				; CODE XREF: sub_67DC4CD0+15Ej
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67DC4D18
; ---------------------------------------------------------------------------

loc_67DC4EC1:				; CODE XREF: sub_67DC4CD0+1C2j
		mov	ebp, [ebx+88h]
		test	ebp, ebp
		jz	short loc_67DC4F4A
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E01770
		mov	[esp+7Ch+var_7C], ebp ;	int
		mov	[esp+7Ch+var_78], eax ;	char *
		call	sub_67DFA9E0
		test	eax, eax
		jnz	short loc_67DC4F4A

loc_67DC4EE3:				; CODE XREF: sub_67DC4CD0+281j
					; sub_67DC4CD0+29Fj
		mov	dword ptr [ebx+34h], 0

loc_67DC4EEA:				; CODE XREF: sub_67DC4CD0+2C5j
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E01770
		mov	[esp+7Ch+var_68], eax
		mov	eax, [ebx+4]
		mov	[esp+7Ch+Format], offset aSUnsupportedMe ; "%s:	Unsupported mechanism %s\n"
		mov	[esp+7Ch+var_74], offset aHandle_auth ;	"handle_auth"
		mov	[esp+7Ch+var_78], 6B3h ; int
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+var_7C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DC2A10
		test	eax, eax
		jz	loc_67DC4E94

loc_67DC4F30:				; CODE XREF: sub_67DC4CD0+317j
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E02BF0
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E02BF0
		mov	eax, 1
		jmp	loc_67DC4D18
; ---------------------------------------------------------------------------

loc_67DC4F4A:				; CODE XREF: sub_67DC4CD0+1F9j
					; sub_67DC4CD0+211j
		mov	eax, ds:off_67E1B1E0
		test	eax, eax
		jz	short loc_67DC4EE3
		mov	ebp, offset off_67E1B208
		mov	[esp+7Ch+var_50], 0
		jmp	short loc_67DC4F75
; ---------------------------------------------------------------------------

loc_67DC4F62:				; CODE XREF: sub_67DC4CD0+2B3j
		mov	eax, [ebp+0]
		add	ebp, 28h
		add	[esp+7Ch+var_50], 1
		test	eax, eax
		jz	loc_67DC4EE3

loc_67DC4F75:				; CODE XREF: sub_67DC4CD0+290j
		mov	[esp+7Ch+var_78], eax
		mov	[esp+7Ch+var_7C], esi
		call	sub_67DFEFF0
		test	eax, eax
		jz	short loc_67DC4F62
		imul	eax, [esp+7Ch+var_50], 28h
		lea	edx, off_67E1B1E0[eax]
		test	edx, edx
		mov	[ebx+34h], edx
		jz	loc_67DC4EEA
		mov	eax, ds:off_67E1B1E0[eax]
		mov	[esp+7Ch+var_68], eax
		mov	eax, [ebx+4]
		mov	[esp+7Ch+Format], offset aSTryingMechani ; "%s:	Trying mechanism %s\n"
		mov	[esp+7Ch+var_74], offset aHandle_auth ;	"handle_auth"
		mov	[esp+7Ch+var_78], 6A8h ; int
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+var_7C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+34h]
		mov	edx, edi
		mov	ecx, [eax+4]
		mov	eax, ebx
		call	sub_67DC2FB0
		test	eax, eax
		jz	loc_67DC4E94
		jmp	loc_67DC4F30
sub_67DC4CD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DC4FF0(int,	char *,	char)
sub_67DC4FF0	proc near		; DATA XREF: .rdata:67E1B36Co

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		mov	edx, dword ptr [esp+2Ch+arg_8]
		cmp	eax, 8		; switch 9 cases
		jbe	short loc_67DC5025

loc_67DC5005:				; CODE XREF: sub_67DC4FF0:loc_67DC5025j
					; DATA XREF: .rdata:off_67E1ACF0o
		mov	dword ptr [esp+2Ch+arg_8], offset aUnknownCommand ; jumptable 67DC5025 default case

loc_67DC500D:				; CODE XREF: sub_67DC4FF0+48j
					; sub_67DC4FF0+58j
		add	ebx, 1Ch
		mov	[esp+2Ch+arg_0], ebx ; int
		mov	[esp+2Ch+arg_4], offset	aErrorS	; "ERROR \"%s\"\r\n"
		add	esp, 28h
		pop	ebx
		jmp	sub_67E090A0
; ---------------------------------------------------------------------------

loc_67DC5025:				; CODE XREF: sub_67DC4FF0+13j
		jmp	ds:off_67E1ACF0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5030:				; CODE XREF: sub_67DC4FF0:loc_67DC5025j
					; DATA XREF: .rdata:off_67E1ACF0o
		mov	dword ptr [esp+2Ch+arg_8], offset aNeedToAuthenti ; jumptable 67DC5025 case 8
		jmp	short loc_67DC500D
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5040:				; CODE XREF: sub_67DC4FF0:loc_67DC5025j
					; DATA XREF: .rdata:off_67E1ACF0o
		mov	dword ptr [esp+2Ch+arg_8], offset aSentAuthWhileA ; jumptable 67DC5025 case 0
		jmp	short loc_67DC500D
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5050:				; CODE XREF: sub_67DC4FF0:loc_67DC5025j
					; DATA XREF: .rdata:off_67E1ACF0o
		mov	eax, ebx	; jumptable 67DC5025 cases 1,6
		add	esp, 28h
		pop	ebx
		jmp	sub_67DC2A10
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5060:				; CODE XREF: sub_67DC4FF0:loc_67DC5025j
					; DATA XREF: .rdata:off_67E1ACF0o
		mov	eax, [ebx+34h]	; jumptable 67DC5025 case 2
		mov	ecx, [eax+4]
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DC2FB0
; ---------------------------------------------------------------------------

loc_67DC5071:				; CODE XREF: sub_67DC4FF0:loc_67DC5025j
					; DATA XREF: .rdata:off_67E1ACF0o
		mov	eax, ds:off_67E1B098 ; jumptable 67DC5025 case 3
		mov	[esp+2Ch+var_14], eax
		mov	eax, [ebx+30h]
		mov	eax, [eax]
		mov	[esp+2Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSGoingFromStat ; "%s:	going from state %s to state %s\n"
		mov	[esp+2Ch+var_24], offset aGoto_state ; "goto_state"
		mov	[esp+2Ch+var_28], 856h ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		mov	dword ptr [ebx+30h], offset off_67E1B098
		add	esp, 28h
		pop	ebx
		retn
sub_67DC4FF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC50C0	proc near		; CODE XREF: sub_67DC5440+154p
					; sub_67DC57C0+67j

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
Format		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 5Ch
		test	byte ptr [eax+8Ch], 2
		jz	loc_67DC51D0

loc_67DC50D6:				; CODE XREF: sub_67DC50C0+379j
		mov	eax, [ebx+90h]
		test	eax, eax
		jz	short loc_67DC5150
		mov	esi, [eax+8]
		mov	eax, ebx
		mov	edx, esi
		call	sub_67DC2C10
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC5100

loc_67DC50F4:				; CODE XREF: sub_67DC50C0+326j
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5100:				; CODE XREF: sub_67DC50C0+32j
		lea	eax, [ebx+90h]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFBFF0
		mov	eax, [esi]
		mov	[esp+6Ch+var_58], eax
		mov	eax, [ebx+4]
		mov	[esp+6Ch+Format], offset aSTryingMechani ; "%s:	Trying mechanism %s\n"
		mov	[esp+6Ch+var_64], offset aProcess_reject ; "process_rejected"
		mov	[esp+6Ch+var_68], 7A9h ; int
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 5Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5150:				; CODE XREF: sub_67DC50C0+1Ej
		mov	eax, [ebx+4]
		mov	[esp+6Ch+Format], offset aSDisconnecti_0 ; "%s:	Disconnecting because we are out of"...
		mov	[esp+6Ch+var_64], offset aProcess_reject ; "process_rejected"
		mov	[esp+6Ch+var_68], 7AFh ; int
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ds:off_67E1B098
		mov	[esp+6Ch+var_54], eax
		mov	eax, [ebx+30h]
		mov	eax, [eax]
		mov	[esp+6Ch+var_58], eax
		mov	eax, [ebx+4]
		mov	[esp+6Ch+Format], offset aSGoingFromStat ; "%s:	going from state %s to state %s\n"
		mov	[esp+6Ch+var_64], offset aGoto_state ; "goto_state"
		mov	[esp+6Ch+var_68], 856h ; int
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		mov	dword ptr [ebx+30h], offset off_67E1B098
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC51D0:				; CODE XREF: sub_67DC50C0+10j
		mov	[esp+6Ch+var_6C], edx
		mov	[esp+6Ch+var_4C], edx
		call	sub_67E00CE0
		mov	edx, [esp+6Ch+var_4C]
		mov	[esp+6Ch+var_20], 0
		test	eax, eax
		mov	[esp+6Ch+var_44], eax
		jle	loc_67DC5432
		lea	eax, [ebx+90h]
		mov	[esp+6Ch+var_48], ebx
		lea	ebp, [esp+6Ch+var_38]
		mov	ebx, edx
		mov	[esp+6Ch+var_40], eax
		jmp	loc_67DC5296
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5210:				; CODE XREF: sub_67DC50C0+220j
		mov	edx, [esp+6Ch+var_48]
		mov	esi, [edx+88h]
		test	esi, esi
		jz	loc_67DC5326

loc_67DC5222:				; CODE XREF: sub_67DC50C0+260j
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67E01770
		mov	[esp+6Ch+var_6C], esi ;	int
		mov	[esp+6Ch+var_68], eax ;	char *
		call	sub_67DFA9E0
		test	eax, eax
		jnz	loc_67DC5326

loc_67DC523E:				; CODE XREF: sub_67DC50C0+26Ej
					; sub_67DC50C0+28Cj ...
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67E01770
		mov	edx, [esp+6Ch+var_48]
		mov	[esp+6Ch+var_58], eax
		mov	eax, [edx+4]
		mov	[esp+6Ch+Format], offset aSServerOffered ; "%s:	Server offered mechanism \"%s\"	tha"...
		mov	[esp+6Ch+var_64], offset aRecord_mechani ; "record_mechanisms"
		mov	[esp+6Ch+var_68], 780h ; int
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	esi, [esi+0]

loc_67DC5280:				; CODE XREF: sub_67DC50C0+308j
					; sub_67DC50C0+369j
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67E02BF0
		mov	eax, [esp+6Ch+var_44]
		cmp	eax, [esp+6Ch+var_20]
		jle	loc_67DC542E

loc_67DC5296:				; CODE XREF: sub_67DC50C0+148j
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC53D8
		mov	eax, [esp+6Ch+var_20]
		lea	edx, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_64], edx
		mov	[esp+6Ch+var_6C], ebx
		mov	[esp+6Ch+var_68], eax
		call	sub_67E00160
		lea	eax, [esp+6Ch+var_24]
		mov	[esp+6Ch+var_64], eax
		mov	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_6C], ebx
		mov	[esp+6Ch+var_68], eax
		call	sub_67E003F0
		mov	eax, [esp+6Ch+var_20]
		mov	edx, [esp+6Ch+var_24]
		cmp	eax, edx
		jge	loc_67DC5210
		sub	edx, eax
		mov	dword ptr [esp+6Ch+var_5C], 0 ;	int
		mov	[esp+6Ch+Format], ebp ;	int
		mov	[esp+6Ch+var_64], edx ;	size_t
		mov	[esp+6Ch+var_68], eax ;	int
		mov	[esp+6Ch+var_6C], ebx ;	int
		call	sub_67E05A20
		test	eax, eax
		jz	loc_67DC53D0
		mov	edx, [esp+6Ch+var_48]
		mov	eax, [esp+6Ch+var_24]
		mov	esi, [edx+88h]
		mov	[esp+6Ch+var_20], eax
		test	esi, esi
		jnz	loc_67DC5222

loc_67DC5326:				; CODE XREF: sub_67DC50C0+15Cj
					; sub_67DC50C0+178j
		mov	edi, ds:off_67E1B1E0
		test	edi, edi
		jz	loc_67DC523E
		mov	esi, offset off_67E1B208
		mov	eax, ds:off_67E1B1E0
		xor	edi, edi
		jmp	short loc_67DC5352
; ---------------------------------------------------------------------------

loc_67DC5342:				; CODE XREF: sub_67DC50C0+2A0j
		mov	eax, [esi]
		add	edi, 1
		add	esi, 28h
		test	eax, eax
		jz	loc_67DC523E

loc_67DC5352:				; CODE XREF: sub_67DC50C0+280j
		mov	[esp+6Ch+var_68], eax
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67DFEFF0
		test	eax, eax
		jz	short loc_67DC5342
		lea	eax, [edi+edi*4]
		lea	esi, off_67E1B1E0[eax*8]
		test	esi, esi
		jz	loc_67DC523E
		cmp	esi, offset off_67E1B1E0
		jz	short loc_67DC53F0
		mov	eax, ds:off_67E1B1E0[eax*8]
		mov	edx, [esp+6Ch+var_48]
		mov	[esp+6Ch+var_58], eax
		mov	eax, [edx+4]
		mov	[esp+6Ch+Format], offset aSAddingMechani ; "%s:	Adding mechanism %s to list we will"...
		mov	[esp+6Ch+var_64], offset aRecord_mechani ; "record_mechanisms"
		mov	[esp+6Ch+var_68], 76Dh ; int
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+6Ch+var_40]
		mov	[esp+6Ch+var_68], esi
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFBB80
		test	eax, eax
		jnz	loc_67DC5280
		xchg	ax, ax

loc_67DC53D0:				; CODE XREF: sub_67DC50C0+246j
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67E02BF0

loc_67DC53D8:				; CODE XREF: sub_67DC50C0+1E0j
		mov	edx, [esp+6Ch+var_40]
		mov	[esp+6Ch+var_6C], edx
		call	sub_67DFBC90
		xor	eax, eax
		jmp	loc_67DC50F4
; ---------------------------------------------------------------------------
		align 10h

loc_67DC53F0:				; CODE XREF: sub_67DC50C0+2BAj
		mov	edx, ds:off_67E1B1E0
		mov	[esp+6Ch+var_58], edx
		mov	edx, [esp+6Ch+var_48]
		mov	eax, [edx+4]
		mov	[esp+6Ch+Format], offset aSAlreadyTriedM ; "%s:	Already	tried mechanism	%s; not	add"...
		mov	[esp+6Ch+var_64], offset aRecord_mechani ; "record_mechanisms"
		mov	[esp+6Ch+var_68], 779h ; int
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DC5280
; ---------------------------------------------------------------------------

loc_67DC542E:				; CODE XREF: sub_67DC50C0+1D0j
		mov	ebx, [esp+6Ch+var_48]

loc_67DC5432:				; CODE XREF: sub_67DC50C0+12Ej
		or	byte ptr [ebx+8Ch], 2
		jmp	loc_67DC50D6
sub_67DC50C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC5440	proc near		; DATA XREF: .rdata:67E1B428o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= byte ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		xor	eax, eax
		mov	[esp+3Ch+var_C], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], esi
		mov	esi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_4], edi
		mov	edi, [esp+3Ch+arg_4]
		mov	dword ptr [esp+3Ch+var_2C], offset aHandle_clien_0 ; "handle_client_state_waiting_for_data"
		mov	[esp+3Ch+Format], 7BCh
		mov	dword ptr [esp+3Ch+var_34], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aAuthMechNull ; "auth->mech !=	NULL"
		cmp	dword ptr [ebx+34h], 0
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		cmp	edi, 4
		jz	loc_67DC5590
		ja	short loc_67DC54D1
		cmp	edi, 2
		lea	esi, [esi+0]
		jz	loc_67DC55B0

loc_67DC54A6:				; CODE XREF: sub_67DC5440+99j
		add	ebx, 1Ch
		mov	dword ptr [esp+3Ch+var_34], offset aUnknownCommand ; "Unknown command"
		mov	[esp+3Ch+var_38], offset aErrorS ; "ERROR \"%s\"\r\n"
		mov	[esp+3Ch+var_3C], ebx ;	int
		call	sub_67E090A0

loc_67DC54C1:				; CODE XREF: sub_67DC5440+B4j
					; sub_67DC5440+C7j ...
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC54D1:				; CODE XREF: sub_67DC5440+55j
		cmp	edi, 5
		jz	short loc_67DC5510
		cmp	edi, 6
		jnz	short loc_67DC54A6
		lea	eax, [ebx+1Ch]
		mov	[esp+3Ch+var_38], offset aCancel_0 ; "CANCEL\r\n"
		mov	[esp+3Ch+var_3C], eax ;	int
		call	sub_67E08C10
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DC54C1
		mov	eax, ebx
		mov	edx, offset off_67E1B500
		call	sub_67DC2840
		mov	eax, 1
		jmp	short loc_67DC54C1
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5510:				; CODE XREF: sub_67DC5440+94j
		lea	edi, [ebx+94h]
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E00CE0
		mov	dword ptr [esp+3Ch+var_2C], offset aProcess_ok ; "process_ok"
		mov	[esp+3Ch+Format], 609h
		mov	dword ptr [esp+3Ch+var_34], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset a_dbus_strin_42 ; "_dbus_string_get_length (& DBUS_AUTH_CL"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		lea	eax, [esp+3Ch+var_10]
		mov	dword ptr [esp+3Ch+var_10], 0
		mov	dword ptr [esp+3Ch+var_2C], 0
		mov	[esp+3Ch+Format], edi
		mov	dword ptr [esp+3Ch+var_34], eax
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E06B70
		test	eax, eax
		jnz	short loc_67DC55D0

loc_67DC557E:				; CODE XREF: sub_67DC5440+230j
		xor	eax, eax
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC5590:				; CODE XREF: sub_67DC5440+4Fj
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DC50C0
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC55B0:				; CODE XREF: sub_67DC5440+60j
		mov	eax, [ebx+34h]
		mov	edx, esi
		mov	ecx, [eax+18h]
		mov	eax, ebx
		call	sub_67DC2FB0
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC55D0:				; CODE XREF: sub_67DC5440+13Cj
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E06F60
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E00CE0
		cmp	eax, dword ptr [esp+3Ch+var_10]
		jnz	loc_67DC5690
		test	eax, eax
		jz	loc_67DC5690
		mov	[esp+3Ch+Format], 0
		mov	dword ptr [esp+3Ch+var_34], edi
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DC5716
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E01770
		mov	[esp+3Ch+Format], offset aGotGuidSFromTh ; "Got	GUID '%s' from the server\n"
		mov	dword ptr [esp+3Ch+var_34], offset aProcess_ok ; "process_ok"
		mov	[esp+3Ch+var_38], 624h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_2C], eax	; char
		call	sub_67DFABC0
		test	byte ptr [ebx+8Ch], 10h
		jz	loc_67DC572D
		lea	eax, [ebx+1Ch]
		mov	[esp+3Ch+var_38], offset aNegotiate_un_0 ; "NEGOTIATE_UNIX_FD\r\n"
		mov	[esp+3Ch+var_3C], eax ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DC557E
		mov	eax, ebx
		mov	edx, offset off_67E1B4AC
		call	sub_67DC2840
		mov	eax, 1
		jmp	loc_67DC54C1
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5690:				; CODE XREF: sub_67DC5440+1ACj
					; sub_67DC5440+1B4j
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E00CE0
		mov	[esp+3Ch+Format], offset aBadGuidFromSer ; "Bad	GUID from server, parsed %d bytes a"...
		mov	dword ptr [esp+3Ch+var_34], offset aProcess_ok ; "process_ok"
		mov	[esp+3Ch+var_38], 619h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_28], eax
		mov	eax, dword ptr [esp+3Ch+var_10]
		mov	dword ptr [esp+3Ch+var_2C], eax	; char
		call	sub_67DFABC0
		mov	eax, ds:off_67E1B098
		mov	[esp+3Ch+var_24], eax
		mov	eax, [ebx+30h]
		mov	eax, [eax]
		mov	[esp+3Ch+var_28], eax
		mov	eax, [ebx+4]
		mov	[esp+3Ch+Format], offset aSGoingFromStat ; "%s:	going from state %s to state %s\n"
		mov	dword ptr [esp+3Ch+var_34], offset aGoto_state ; "goto_state"
		mov	[esp+3Ch+var_38], 856h ; int
		mov	dword ptr [esp+3Ch+var_2C], eax	; char
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		mov	dword ptr [ebx+30h], offset off_67E1B098
		jmp	loc_67DC54C1
; ---------------------------------------------------------------------------

loc_67DC5716:				; CODE XREF: sub_67DC5440+1D8j
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E06F60
		xor	eax, eax
		jmp	loc_67DC54C1
; ---------------------------------------------------------------------------

loc_67DC572D:				; CODE XREF: sub_67DC5440+215j
		mov	[esp+3Ch+Format], offset aNotNegotiating ; "Not	negotiating unix fd passing, since "...
		mov	dword ptr [esp+3Ch+var_34], offset aProcess_ok ; "process_ok"
		mov	[esp+3Ch+var_38], 629h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [ebx+1Ch]
		mov	[esp+3Ch+var_38], offset aBegin_0 ; "BEGIN\r\n"
		mov	[esp+3Ch+var_3C], eax ;	int
		call	sub_67E08C10
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	loc_67DC54C1
		mov	eax, ds:off_67E1AFA4
		mov	[esp+3Ch+var_24], eax
		mov	eax, [ebx+30h]
		mov	eax, [eax]
		mov	[esp+3Ch+var_28], eax
		mov	eax, [ebx+4]
		mov	[esp+3Ch+Format], offset aSGoingFromStat ; "%s:	going from state %s to state %s\n"
		mov	dword ptr [esp+3Ch+var_34], offset aGoto_state ; "goto_state"
		mov	[esp+3Ch+var_38], 856h ; int
		mov	dword ptr [esp+3Ch+var_2C], eax	; char
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		mov	dword ptr [ebx+30h], offset off_67E1AFA4
		jmp	loc_67DC54C1
sub_67DC5440	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC57C0	proc near		; DATA XREF: .rdata:67E1B504o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 28h
		cmp	[esp+2Ch+arg_4], 4
		mov	ebx, [esp+2Ch+arg_0]
		mov	edx, [esp+2Ch+arg_8]
		jz	short loc_67DC5821
		mov	eax, ds:off_67E1B098
		mov	[esp+2Ch+var_14], eax
		mov	eax, [ebx+30h]
		mov	eax, [eax]
		mov	[esp+2Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSGoingFromStat ; "%s:	going from state %s to state %s\n"
		mov	[esp+2Ch+var_24], offset aGoto_state ; "goto_state"
		mov	[esp+2Ch+var_28], 856h ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		mov	dword ptr [ebx+30h], offset off_67E1B098
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DC5821:				; CODE XREF: sub_67DC57C0+11j
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DC50C0
sub_67DC57C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DC5830(int,	char *,	char)
sub_67DC5830	proc near		; DATA XREF: .rdata:67E1B4B0o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		cmp	eax, 6
		jz	short loc_67DC5870
		cmp	eax, 9
		jz	loc_67DC5940
		add	ebx, 1Ch
		mov	[esp+2Ch+arg_0], ebx ; int
		mov	dword ptr [esp+2Ch+arg_8], offset aUnknownCommand ; "Unknown command"
		mov	[esp+2Ch+arg_4], offset	aErrorS	; "ERROR \"%s\"\r\n"
		add	esp, 28h
		pop	ebx
		jmp	sub_67E090A0
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5870:				; CODE XREF: sub_67DC5830+Fj
		mov	dword ptr [esp+2Ch+var_1C], offset aHandle_clien_1 ; "handle_client_state_waiting_for_agree_u"...
		mov	[esp+2Ch+Format], 81Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAuthUnix_fd_po ; "auth->unix_fd_possible"
		movzx	eax, byte ptr [ebx+8Ch]
		shr	al, 4
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		and	byte ptr [ebx+8Ch], 0DFh
		mov	[esp+2Ch+Format], offset aFailedToNegoti ; "Failed to negotiate	UNIX FD	passing\n"
		mov	[esp+2Ch+var_24], offset aHandle_clien_1 ; "handle_client_state_waiting_for_agree_u"...
		mov	[esp+2Ch+var_28], 81Ch ; int

loc_67DC58C4:				; CODE XREF: sub_67DC5830+164j
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [ebx+1Ch]
		mov	[esp+2Ch+var_28], offset aBegin_0 ; "BEGIN\r\n"
		mov	[esp+2Ch+var_2C], eax ;	int
		call	sub_67E08C10
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DC5934
		mov	eax, ds:off_67E1AFA4
		mov	[esp+2Ch+var_14], eax
		mov	eax, [ebx+30h]
		mov	eax, [eax]
		mov	[esp+2Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSGoingFromStat ; "%s:	going from state %s to state %s\n"
		mov	[esp+2Ch+var_24], offset aGoto_state ; "goto_state"
		mov	[esp+2Ch+var_28], 856h ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		mov	dword ptr [ebx+30h], offset off_67E1AFA4

loc_67DC5934:				; CODE XREF: sub_67DC5830+B9j
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5940:				; CODE XREF: sub_67DC5830+14j
		mov	dword ptr [esp+2Ch+var_1C], offset aHandle_clien_1 ; "handle_client_state_waiting_for_agree_u"...
		mov	[esp+2Ch+Format], 814h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAuthUnix_fd_po ; "auth->unix_fd_possible"
		movzx	eax, byte ptr [ebx+8Ch]
		shr	al, 4
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+8Ch], 20h
		mov	[esp+2Ch+Format], offset aSuccessfullyNe ; "Successfully negotiated UNIX FD passing"...
		mov	[esp+2Ch+var_24], offset aHandle_clien_1 ; "handle_client_state_waiting_for_agree_u"...
		mov	[esp+2Ch+var_28], 816h
		jmp	loc_67DC58C4
sub_67DC5830	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC59A0	proc near		; CODE XREF: sub_67DC5BB0+95p
					; sub_67DF3BF0+1D7p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_auth_unr ; "_dbus_auth_unref"
		mov	[esp+2Ch+Format], 92Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aAuthNull ; "auth != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_auth_unr ; "_dbus_auth_unref"
		mov	[esp+2Ch+Format], 92Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAuthRefcount0	; "auth->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DC5A20
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5A20:				; CODE XREF: sub_67DC59A0+71j
		and	byte ptr [ebx+8Ch], 0FBh
		lea	esi, [ebx+38h]
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E06F60
		mov	eax, [ebx+50h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5780
		mov	eax, [ebx+54h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5780
		mov	eax, [ebx+34h]
		test	eax, eax
		jz	short loc_67DC5AA5
		mov	eax, [eax]
		mov	[esp+2Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+Format], offset aSShuttingDownM ; "%s:	Shutting down mechanism	%s\n"
		mov	[esp+2Ch+var_24], offset aShutdown_mech	; "shutdown_mech"
		mov	[esp+2Ch+var_28], 1AEh ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	dword ptr [ebx+4], offset aClient ; "client"
		jz	loc_67DC5B95
		mov	eax, [ebx+34h]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+10h]

loc_67DC5A9E:				; CODE XREF: sub_67DC59A0+200j
		mov	dword ptr [ebx+34h], 0

loc_67DC5AA5:				; CODE XREF: sub_67DC59A0+B5j
		mov	eax, [ebx+4]
		cmp	eax, offset aClient ; "client"
		jz	loc_67DC5B74
		cmp	eax, offset aServer ; "server"
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_auth_unr ; "_dbus_auth_unref"
		mov	[esp+2Ch+Format], 93Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_17 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aDbus_auth_is_s ; "DBUS_AUTH_IS_SERVER	(auth)"
		call	sub_67DFAE70
		lea	eax, [ebx+98h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E02BF0

loc_67DC5AF4:				; CODE XREF: sub_67DC59A0+1F0j
		mov	eax, [ebx+6Ch]
		test	eax, eax
		jz	short loc_67DC5B03
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD7890

loc_67DC5B03:				; CODE XREF: sub_67DC59A0+159j
		lea	eax, [ebx+58h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E02BF0
		lea	eax, [ebx+74h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E02BF0
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E02BF0
		lea	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E02BF0
		lea	eax, [ebx+1Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E02BF0
		mov	eax, [ebx+88h]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free_string_array
		mov	eax, [ebx+4Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5A30
		mov	eax, [ebx+50h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5A30
		mov	eax, [ebx+54h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD5A30
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67DC5B74:				; CODE XREF: sub_67DC59A0+10Dj
		lea	eax, [ebx+94h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E02BF0
		lea	eax, [ebx+90h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFBC90
		jmp	loc_67DC5AF4
; ---------------------------------------------------------------------------

loc_67DC5B95:				; CODE XREF: sub_67DC59A0+EFj
		mov	eax, [ebx+34h]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+24h]
		xchg	ax, ax
		jmp	loc_67DC5A9E
sub_67DC59A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC5BB0	proc near		; CODE XREF: sub_67DF3BF0:loc_67DF3DA0p

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_4], esi
		lea	esi, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_8], ebx
		xor	ebx, ebx
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DC5BE0

loc_67DC5BCD:				; CODE XREF: sub_67DC5BB0+8Ej
					; sub_67DC5BB0+9Aj ...
		mov	eax, ebx
		mov	esi, [esp+3Ch+var_4]
		mov	ebx, [esp+3Ch+var_8]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5BE0:				; CODE XREF: sub_67DC5BB0+1Bj
		mov	eax, 0A8h
		call	sub_67DC4430
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DC5C4C
		mov	eax, [esp+3Ch+var_20]
		mov	edx, offset off_67E1B1E0
		mov	dword ptr [ebx+4], offset aClient ; "client"
		mov	dword ptr [ebx+30h], offset off_67E1B1AC
		mov	[ebx+94h], eax
		mov	eax, [esp+3Ch+var_1C]
		mov	[ebx+98h], eax
		mov	eax, [esp+3Ch+var_18]
		mov	[ebx+9Ch], eax
		mov	eax, [esp+3Ch+var_14]
		mov	[ebx+0A0h], eax
		mov	eax, [esp+3Ch+var_10]
		mov	[ebx+0A4h], eax
		mov	eax, ebx
		call	sub_67DC2C10
		test	eax, eax
		jnz	short loc_67DC5BCD
		mov	[esp+3Ch+var_3C], ebx
		xor	ebx, ebx
		call	sub_67DC59A0
		jmp	short loc_67DC5BCD
; ---------------------------------------------------------------------------

loc_67DC5C4C:				; CODE XREF: sub_67DC5BB0+3Ej
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E02BF0
		jmp	loc_67DC5BCD
sub_67DC5BB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC5C60	proc near		; CODE XREF: dbus_bus_remove_match+93p
					; dbus_bus_add_match+97p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h

		push	ebx
		mov	ebx, ecx
		sub	esp, 38h
		test	ecx, ecx
		jz	short loc_67DC5CD0
		mov	[esp+3Ch+var_30], ecx
		mov	[esp+3Ch+var_34], 0FFFFFFFFh
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_3C], eax
		call	dbus_connection_send_with_reply_and_block
		test	eax, eax
		jz	short loc_67DC5C93
		mov	[esp+3Ch+var_3C], eax
		call	dbus_message_unref
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DC5C93:				; CODE XREF: sub_67DC5C60+24j
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		mov	[esp+3Ch+var_2C], offset aSend_no_return ; "send_no_return_values"
		mov	[esp+3Ch+var_30], 58Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DC5CD0:				; CODE XREF: sub_67DC5C60+8j
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_10], eax
		mov	[esp+3Ch+var_14], edx
		mov	[esp+3Ch+var_38], 1
		call	dbus_message_set_no_reply
		mov	edx, [esp+3Ch+var_14]
		mov	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_34], 0
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_3C], eax
		call	dbus_connection_send
		add	esp, 38h
		pop	ebx
		retn
sub_67DC5C60	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  15. dbus_bus_remove_match

; =============== S U B	R O U T	I N E =======================================


		public dbus_bus_remove_match
dbus_bus_remove_match proc near

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset aDbus_bus_remov ; "dbus_bus_remove_match"
		mov	[esp+2Ch+var_20], 621h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_4]
		test	eax, eax
		jz	loc_67DC5DE0
		mov	[esp+2Ch+var_20], offset aRemovematch ;	"RemoveMatch"
		mov	[esp+2Ch+var_24], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		mov	[esp+2Ch+var_28], offset aOrgFreedesktop ; "/org/freedesktop/DBus"
		mov	[esp+2Ch+var_2C], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		call	dbus_message_new_method_call
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_28], 73h
		mov	ebx, eax
		lea	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_append_args
		test	eax, eax
		jz	short loc_67DC5DB6
		mov	eax, [esp+2Ch+arg_0]
		mov	ecx, esi
		mov	edx, ebx
		call	sub_67DC5C60
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_unref
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DC5DB6:				; CODE XREF: dbus_bus_remove_match+89j
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_unref
		mov	eax, off_67E19010
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+2Ch+var_24], eax
		call	dbus_set_error_const
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5DE0:				; CODE XREF: dbus_bus_remove_match+3Bj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 621h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aRuleNull ; "rule != NULL"
		mov	[esp+2Ch+var_28], offset aDbus_bus_remov ; "dbus_bus_remove_match"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_bus_remove_match endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   6. dbus_bus_add_match

; =============== S U B	R O U T	I N E =======================================


		public dbus_bus_add_match
dbus_bus_add_match proc	near

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset aDbus_bus_add_m ; "dbus_bus_add_match"
		mov	[esp+2Ch+var_20], 5EFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	edx, [esp+2Ch+arg_4]
		test	edx, edx
		jz	loc_67DC5EF7
		mov	[esp+2Ch+var_20], offset aAddmatch ; "AddMatch"
		mov	[esp+2Ch+var_24], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		mov	[esp+2Ch+var_28], offset aOrgFreedesktop ; "/org/freedesktop/DBus"
		mov	[esp+2Ch+var_2C], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		call	dbus_message_new_method_call
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DC5ED8
		lea	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], 73h
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_append_args
		test	eax, eax
		jz	short loc_67DC5ED0
		mov	eax, [esp+2Ch+arg_0]
		mov	ecx, esi
		mov	edx, ebx
		call	sub_67DC5C60
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_unref
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC5ED0:				; CODE XREF: dbus_bus_add_match+8Dj
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_unref

loc_67DC5ED8:				; CODE XREF: dbus_bus_add_match+69j
		mov	eax, off_67E19010
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+2Ch+var_24], eax
		call	dbus_set_error_const
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DC5EF7:				; CODE XREF: dbus_bus_add_match+3Bj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 5EFh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aRuleNull ; "rule != NULL"
		mov	[esp+2Ch+var_28], offset aDbus_bus_add_m ; "dbus_bus_add_match"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_bus_add_match endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  18. dbus_bus_start_service_by_name

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_bus_start_service_by_name(int, char *, char,	int, int)
		public dbus_bus_start_service_by_name
dbus_bus_start_service_by_name proc near

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		sub	esp, 3Ch
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_2C], offset aDbus_bus_start ; "dbus_bus_start_service_by_name"
		mov	[esp+3Ch+var_30], 54Eh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DC6186
		mov	[esp+3Ch+var_2C], offset aDbus_bus_start ; "dbus_bus_start_service_by_name"
		mov	[esp+3Ch+var_30], 54Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DDF1E0
		test	eax, eax
		jz	loc_67DC60E7
		mov	[esp+3Ch+var_30], offset aStartserviceby ; "StartServiceByName"
		mov	[esp+3Ch+var_34], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		mov	[esp+3Ch+var_38], offset aOrgFreedesktop ; "/org/freedesktop/DBus"
		mov	[esp+3Ch+var_3C], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		call	dbus_message_new_method_call
		mov	[esp+3Ch+var_28], 0
		mov	[esp+3Ch+var_30], 75h
		mov	[esp+3Ch+var_38], 73h
		mov	edi, eax
		lea	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], eax
		lea	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_34], eax
		mov	[esp+3Ch+var_3C], edi
		call	dbus_message_append_args
		test	eax, eax
		jz	loc_67DC60B0
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_30], ebx
		mov	[esp+3Ch+var_34], 0FFFFFFFFh
		mov	[esp+3Ch+var_38], edi
		call	dbus_connection_send_with_reply_and_block
		mov	[esp+3Ch+var_3C], edi
		mov	esi, eax
		call	dbus_message_unref
		test	esi, esi
		jz	loc_67DC61A3
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_set_error_from_message
		test	eax, eax
		jz	loc_67DC6118
		test	ebx, ebx
		jz	loc_67DC61F0
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67DC61F0

loc_67DC6079:				; CODE XREF: dbus_bus_start_service_by_name+2C5j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_start ; "dbus_bus_start_service_by_name"
		mov	[esp+3Ch+var_30], 56Ah

loc_67DC6089:				; CODE XREF: dbus_bus_start_service_by_name+23Fj
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_unref
		xor	eax, eax
		jmp	short loc_67DC60D3
; ---------------------------------------------------------------------------
		align 10h

loc_67DC60B0:				; CODE XREF: dbus_bus_start_service_by_name+EBj
		mov	[esp+3Ch+var_3C], edi
		call	dbus_message_unref
		mov	eax, off_67E19010
		mov	[esp+3Ch+var_38], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_34], eax
		call	dbus_set_error_const
		xor	eax, eax

loc_67DC60D3:				; CODE XREF: dbus_bus_start_service_by_name+17Bj
					; dbus_bus_start_service_by_name+1E6j ...
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC60E7:				; CODE XREF: dbus_bus_start_service_by_name+8Dj
		mov	[esp+3Ch+var_2C], 54Fh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check_is ; "_dbus_check_is_valid_bus_name (name)"

loc_67DC60FF:				; CODE XREF: dbus_bus_start_service_by_name+26Ej
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_38], offset aDbus_bus_start ; "dbus_bus_start_service_by_name"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DC60D3
; ---------------------------------------------------------------------------

loc_67DC6118:				; CODE XREF: dbus_bus_start_service_by_name+129j
		test	ebp, ebp
		jz	short loc_67DC6174
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_30], ebp
		mov	[esp+3Ch+var_34], 75h
		mov	[esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_get_args
		test	eax, eax
		jnz	short loc_67DC6174
		test	ebx, ebx
		jz	loc_67DC6200
		mov	[esp+3Ch+var_3C], ebx
		nop
		lea	esi, [esi+0]
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67DC6200

loc_67DC615F:				; CODE XREF: dbus_bus_start_service_by_name+2D5j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_start ; "dbus_bus_start_service_by_name"
		mov	[esp+3Ch+var_30], 573h
		jmp	loc_67DC6089
; ---------------------------------------------------------------------------

loc_67DC6174:				; CODE XREF: dbus_bus_start_service_by_name+1EAj
					; dbus_bus_start_service_by_name+20Ej
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_unref
		mov	eax, 1
		jmp	loc_67DC60D3
; ---------------------------------------------------------------------------

loc_67DC6186:				; CODE XREF: dbus_bus_start_service_by_name+4Dj
		mov	[esp+3Ch+var_2C], 54Eh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNull ; "connection != NULL"
		jmp	loc_67DC60FF
; ---------------------------------------------------------------------------

loc_67DC61A3:				; CODE XREF: dbus_bus_start_service_by_name+115j
		test	ebx, ebx
		jz	short loc_67DC61E4
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC61E4

loc_67DC61B5:				; CODE XREF: dbus_bus_start_service_by_name+2B9j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_start ; "dbus_bus_start_service_by_name"
		mov	[esp+3Ch+var_30], 564h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		xor	eax, eax
		jmp	loc_67DC60D3
; ---------------------------------------------------------------------------

loc_67DC61E4:				; CODE XREF: dbus_bus_start_service_by_name+275j
					; dbus_bus_start_service_by_name+283j
		mov	edx, 1
		jmp	short loc_67DC61B5
; ---------------------------------------------------------------------------
		align 10h

loc_67DC61F0:				; CODE XREF: dbus_bus_start_service_by_name+131j
					; dbus_bus_start_service_by_name+143j
		mov	edx, 1
		jmp	loc_67DC6079
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6200:				; CODE XREF: dbus_bus_start_service_by_name+212j
					; dbus_bus_start_service_by_name+229j
		mov	edx, 1
		jmp	loc_67DC615F
dbus_bus_start_service_by_name endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  12. dbus_bus_name_has_owner

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_bus_name_has_owner(int, char	*, int)
		public dbus_bus_name_has_owner
dbus_bus_name_has_owner	proc near

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		push	esi
		push	ebx
		sub	esp, 30h
		mov	esi, [esp+3Ch+arg_0]
		mov	ebx, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset aDbus_bus_name_ ; "dbus_bus_name_has_owner"
		mov	[esp+3Ch+var_30], 500h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DC64C0
		mov	[esp+3Ch+var_2C], offset aDbus_bus_name_ ; "dbus_bus_name_has_owner"
		mov	[esp+3Ch+var_30], 501h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	ecx, [esp+3Ch+arg_4]
		test	ecx, ecx
		jz	loc_67DC64E0
		mov	[esp+3Ch+var_2C], offset aDbus_bus_name_ ; "dbus_bus_name_has_owner"
		mov	[esp+3Ch+var_30], 502h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DDF1E0
		test	eax, eax
		jz	loc_67DC6410
		mov	[esp+3Ch+var_2C], offset aDbus_bus_name_ ; "dbus_bus_name_has_owner"
		mov	[esp+3Ch+var_30], 503h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DC630A
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	loc_67DC6500

loc_67DC630A:				; CODE XREF: dbus_bus_name_has_owner+E8j
		mov	[esp+3Ch+var_30], offset aNamehasowner ; "NameHasOwner"
		mov	[esp+3Ch+var_34], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		mov	[esp+3Ch+var_38], offset aOrgFreedesktop ; "/org/freedesktop/DBus"
		mov	[esp+3Ch+var_3C], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		call	dbus_message_new_method_call
		test	eax, eax
		mov	edi, eax
		jz	loc_67DC6498
		lea	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+var_34], eax
		mov	[esp+3Ch+var_38], 73h
		mov	[esp+3Ch+var_3C], edi
		call	dbus_message_append_args
		test	eax, eax
		jz	loc_67DC6490
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_30], ebx
		mov	[esp+3Ch+var_34], 0FFFFFFFFh
		mov	[esp+3Ch+var_38], edi
		call	dbus_connection_send_with_reply_and_block
		mov	[esp+3Ch+var_3C], edi
		mov	esi, eax
		call	dbus_message_unref
		test	esi, esi
		jz	loc_67DC6446
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 62h
		mov	[esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_get_args
		test	eax, eax
		jnz	loc_67DC6540
		test	ebx, ebx
		jz	loc_67DC6520
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67DC6520

loc_67DC63D0:				; CODE XREF: dbus_bus_name_has_owner+315j
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_2C], offset aDbus_bus_name_ ; "dbus_bus_name_has_owner"
		mov	[esp+3Ch+var_30], 525h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_unref
		add	esp, 30h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6410:				; CODE XREF: dbus_bus_name_has_owner+B4j
		mov	[esp+3Ch+var_2C], 502h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check_is ; "_dbus_check_is_valid_bus_name (name)"

loc_67DC6428:				; CODE XREF: dbus_bus_name_has_owner+2C8j
					; dbus_bus_name_has_owner+2E8j	...
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_38], offset aDbus_bus_name_ ; "dbus_bus_name_has_owner"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		xor	eax, eax

loc_67DC643F:				; CODE XREF: dbus_bus_name_has_owner+27Aj
					; dbus_bus_name_has_owner+33Cj
		add	esp, 30h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DC6446:				; CODE XREF: dbus_bus_name_has_owner+174j
		test	ebx, ebx
		jz	loc_67DC6530
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67DC6530

loc_67DC6460:				; CODE XREF: dbus_bus_name_has_owner+325j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_name_ ; "dbus_bus_name_has_owner"
		mov	[esp+3Ch+var_30], 51Dh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		xor	eax, eax
		jmp	short loc_67DC643F
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6490:				; CODE XREF: dbus_bus_name_has_owner+14Aj
		mov	[esp+3Ch+var_3C], edi
		call	dbus_message_unref

loc_67DC6498:				; CODE XREF: dbus_bus_name_has_owner+122j
		mov	eax, off_67E19010
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_38], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+3Ch+var_34], eax
		call	dbus_set_error_const
		add	esp, 30h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC64C0:				; CODE XREF: dbus_bus_name_has_owner+3Cj
		mov	[esp+3Ch+var_2C], 500h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNull ; "connection != NULL"
		jmp	loc_67DC6428
; ---------------------------------------------------------------------------
		align 10h

loc_67DC64E0:				; CODE XREF: dbus_bus_name_has_owner+74j
		mov	[esp+3Ch+var_2C], 501h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aNameNull ; "name != NULL"
		jmp	loc_67DC6428
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6500:				; CODE XREF: dbus_bus_name_has_owner+F4j
		mov	[esp+3Ch+var_2C], 503h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aErrorNullDbu_2 ; "(error) == NULL || !dbus_error_is_set ("...
		jmp	loc_67DC6428
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6520:				; CODE XREF: dbus_bus_name_has_owner+1A8j
					; dbus_bus_name_has_owner+1BAj
		mov	edx, 1
		jmp	loc_67DC63D0
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6530:				; CODE XREF: dbus_bus_name_has_owner+238j
					; dbus_bus_name_has_owner+24Aj
		mov	edx, 1
		jmp	loc_67DC6460
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6540:				; CODE XREF: dbus_bus_name_has_owner+1A0j
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_unref
		mov	eax, [esp+3Ch+var_10]
		jmp	loc_67DC643F
dbus_bus_name_has_owner	endp

; ---------------------------------------------------------------------------
		jmp	short dbus_bus_release_name
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  14. dbus_bus_release_name

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_bus_release_name(int, char *, int)
		public dbus_bus_release_name
dbus_bus_release_name proc near		; CODE XREF: .text:67DC6551j

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		push	esi
		push	ebx
		sub	esp, 30h
		mov	esi, [esp+3Ch+arg_0]
		mov	ebx, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset aDbus_bus_relea ; "dbus_bus_release_name"
		mov	[esp+3Ch+var_30], 4AEh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DC6766
		mov	[esp+3Ch+var_2C], offset aDbus_bus_relea ; "dbus_bus_release_name"
		mov	[esp+3Ch+var_30], 4AFh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	edi, [esp+3Ch+arg_4]
		test	edi, edi
		jz	loc_67DC6780
		mov	[esp+3Ch+var_2C], offset aDbus_bus_relea ; "dbus_bus_release_name"
		mov	[esp+3Ch+var_30], 4B0h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DDF1E0
		test	eax, eax
		jz	loc_67DC6730
		mov	[esp+3Ch+var_2C], offset aDbus_bus_relea ; "dbus_bus_release_name"
		mov	[esp+3Ch+var_30], 4B1h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DC665A
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	loc_67DC67A0

loc_67DC665A:				; CODE XREF: dbus_bus_release_name+E8j
		mov	[esp+3Ch+var_30], offset aReleasename ;	"ReleaseName"
		mov	[esp+3Ch+var_34], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		mov	[esp+3Ch+var_38], offset aOrgFreedesktop ; "/org/freedesktop/DBus"
		mov	[esp+3Ch+var_3C], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		call	dbus_message_new_method_call
		test	eax, eax
		mov	edi, eax
		jz	loc_67DC6848
		lea	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+var_34], eax
		mov	[esp+3Ch+var_38], 73h
		mov	[esp+3Ch+var_3C], edi
		call	dbus_message_append_args
		test	eax, eax
		jz	loc_67DC6840
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_30], ebx
		mov	[esp+3Ch+var_34], 0FFFFFFFFh
		mov	[esp+3Ch+var_38], edi
		call	dbus_connection_send_with_reply_and_block
		mov	[esp+3Ch+var_3C], edi
		mov	esi, eax
		call	dbus_message_unref
		test	esi, esi
		jz	loc_67DC6887
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_set_error_from_message
		test	eax, eax
		jnz	loc_67DC67C0
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 75h
		mov	[esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_get_args
		test	eax, eax
		jz	loc_67DC6814
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_unref
		mov	eax, [esp+3Ch+var_10]

loc_67DC6726:				; CODE XREF: dbus_bus_release_name+2AFj
					; dbus_bus_release_name+306j ...
		add	esp, 30h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6730:				; CODE XREF: dbus_bus_release_name+B4j
		mov	[esp+3Ch+var_2C], 4B0h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check_is ; "_dbus_check_is_valid_bus_name (name)"

loc_67DC6748:				; CODE XREF: dbus_bus_release_name+21Ej
					; dbus_bus_release_name+238j ...
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_38], offset aDbus_bus_relea ; "dbus_bus_release_name"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 30h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DC6766:				; CODE XREF: dbus_bus_release_name+3Cj
		mov	[esp+3Ch+var_2C], 4AEh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNull ; "connection != NULL"
		jmp	short loc_67DC6748
; ---------------------------------------------------------------------------

loc_67DC6780:				; CODE XREF: dbus_bus_release_name+74j
		mov	[esp+3Ch+var_2C], 4AFh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aNameNull ; "name != NULL"
		jmp	short loc_67DC6748
; ---------------------------------------------------------------------------
		align 10h

loc_67DC67A0:				; CODE XREF: dbus_bus_release_name+F4j
		mov	[esp+3Ch+var_2C], 4B1h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aErrorNullDbu_2 ; "(error) == NULL || !dbus_error_is_set ("...
		jmp	short loc_67DC6748
; ---------------------------------------------------------------------------
		align 10h

loc_67DC67C0:				; CODE XREF: dbus_bus_release_name+188j
		test	ebx, ebx
		jz	loc_67DC6870
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67DC6870

loc_67DC67DA:				; CODE XREF: dbus_bus_release_name+315j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_relea ; "dbus_bus_release_name"
		mov	[esp+3Ch+var_30], 4D4h

loc_67DC67EA:				; CODE XREF: dbus_bus_release_name+2DBj
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_unref
		mov	eax, 0FFFFFFFFh
		jmp	loc_67DC6726
; ---------------------------------------------------------------------------

loc_67DC6814:				; CODE XREF: dbus_bus_release_name+1B4j
		test	ebx, ebx
		jz	short loc_67DC6880
		mov	[esp+3Ch+var_3C], ebx
		nop
		lea	esi, [esi+0]
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC6880

loc_67DC682B:				; CODE XREF: dbus_bus_release_name+325j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_relea ; "dbus_bus_release_name"
		mov	[esp+3Ch+var_30], 4DDh
		jmp	short loc_67DC67EA
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6840:				; CODE XREF: dbus_bus_release_name+14Aj
		mov	[esp+3Ch+var_3C], edi
		call	dbus_message_unref

loc_67DC6848:				; CODE XREF: dbus_bus_release_name+122j
		mov	eax, off_67E19010
		mov	[esp+3Ch+var_38], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_34], eax
		call	dbus_set_error_const
		mov	eax, 0FFFFFFFFh
		jmp	loc_67DC6726
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6870:				; CODE XREF: dbus_bus_release_name+262j
					; dbus_bus_release_name+274j
		mov	edx, 1
		jmp	loc_67DC67DA
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6880:				; CODE XREF: dbus_bus_release_name+2B6j
					; dbus_bus_release_name+2C9j
		mov	edx, 1
		jmp	short loc_67DC682B
; ---------------------------------------------------------------------------

loc_67DC6887:				; CODE XREF: dbus_bus_release_name+174j
		test	ebx, ebx
		jz	short loc_67DC68CD
		mov	[esp+3Ch+var_3C], ebx
		xchg	ax, ax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC68CD

loc_67DC689B:				; CODE XREF: dbus_bus_release_name+372j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_relea ; "dbus_bus_release_name"
		mov	[esp+3Ch+var_30], 4CEh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		mov	eax, 0FFFFFFFFh
		jmp	loc_67DC6726
; ---------------------------------------------------------------------------

loc_67DC68CD:				; CODE XREF: dbus_bus_release_name+329j
					; dbus_bus_release_name+339j
		mov	edx, 1
		jmp	short loc_67DC689B
dbus_bus_release_name endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  16. dbus_bus_request_name

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_bus_request_name(int, char *, char, int)
		public dbus_bus_request_name
dbus_bus_request_name proc near

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch
arg_C		= dword	ptr  10h

		push	edi
		push	esi
		push	ebx
		sub	esp, 30h
		mov	esi, [esp+3Ch+arg_0]
		mov	ebx, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_2C], offset aDbus_bus_reque ; "dbus_bus_request_name"
		mov	[esp+3Ch+var_30], 459h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DC6AF6
		mov	[esp+3Ch+var_2C], offset aDbus_bus_reque ; "dbus_bus_request_name"
		mov	[esp+3Ch+var_30], 45Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_4]
		test	eax, eax
		jz	loc_67DC6B10
		mov	[esp+3Ch+var_2C], offset aDbus_bus_reque ; "dbus_bus_request_name"
		mov	[esp+3Ch+var_30], 45Bh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DDF1E0
		test	eax, eax
		jz	loc_67DC6AC0
		mov	[esp+3Ch+var_2C], offset aDbus_bus_reque ; "dbus_bus_request_name"
		mov	[esp+3Ch+var_30], 45Ch
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DC69DA
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	loc_67DC6B30

loc_67DC69DA:				; CODE XREF: dbus_bus_request_name+E8j
		mov	[esp+3Ch+var_30], offset aRequestname ;	"RequestName"
		mov	[esp+3Ch+var_34], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		mov	[esp+3Ch+var_38], offset aOrgFreedesktop ; "/org/freedesktop/DBus"
		mov	[esp+3Ch+var_3C], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		call	dbus_message_new_method_call
		test	eax, eax
		mov	edi, eax
		jz	loc_67DC6BD8
		lea	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], eax
		lea	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_28], 0
		mov	[esp+3Ch+var_30], 75h
		mov	[esp+3Ch+var_34], eax
		mov	[esp+3Ch+var_38], 73h
		mov	[esp+3Ch+var_3C], edi
		call	dbus_message_append_args
		test	eax, eax
		jz	loc_67DC6BD0
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_30], ebx
		mov	[esp+3Ch+var_34], 0FFFFFFFFh
		mov	[esp+3Ch+var_38], edi
		call	dbus_connection_send_with_reply_and_block
		mov	[esp+3Ch+var_3C], edi
		mov	esi, eax
		call	dbus_message_unref
		test	esi, esi
		jz	loc_67DC6C17
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_set_error_from_message
		test	eax, eax
		jnz	loc_67DC6B50
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 75h
		mov	[esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_get_args
		test	eax, eax
		jz	loc_67DC6BA4
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_unref
		mov	eax, [esp+3Ch+var_10]

loc_67DC6AB6:				; CODE XREF: dbus_bus_request_name+2BFj
					; dbus_bus_request_name+316j ...
		add	esp, 30h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6AC0:				; CODE XREF: dbus_bus_request_name+B4j
		mov	[esp+3Ch+var_2C], 45Bh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check_is ; "_dbus_check_is_valid_bus_name (name)"

loc_67DC6AD8:				; CODE XREF: dbus_bus_request_name+22Ej
					; dbus_bus_request_name+248j ...
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_38], offset aDbus_bus_reque ; "dbus_bus_request_name"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 30h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DC6AF6:				; CODE XREF: dbus_bus_request_name+3Cj
		mov	[esp+3Ch+var_2C], 459h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNull ; "connection != NULL"
		jmp	short loc_67DC6AD8
; ---------------------------------------------------------------------------

loc_67DC6B10:				; CODE XREF: dbus_bus_request_name+74j
		mov	[esp+3Ch+var_2C], 45Ah
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aNameNull ; "name != NULL"
		jmp	short loc_67DC6AD8
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6B30:				; CODE XREF: dbus_bus_request_name+F4j
		mov	[esp+3Ch+var_2C], 45Ch
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aErrorNullDbu_2 ; "(error) == NULL || !dbus_error_is_set ("...
		jmp	short loc_67DC6AD8
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6B50:				; CODE XREF: dbus_bus_request_name+198j
		test	ebx, ebx
		jz	loc_67DC6C00
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67DC6C00

loc_67DC6B6A:				; CODE XREF: dbus_bus_request_name+325j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_reque ; "dbus_bus_request_name"
		mov	[esp+3Ch+var_30], 480h

loc_67DC6B7A:				; CODE XREF: dbus_bus_request_name+2EBj
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_unref
		mov	eax, 0FFFFFFFFh
		jmp	loc_67DC6AB6
; ---------------------------------------------------------------------------

loc_67DC6BA4:				; CODE XREF: dbus_bus_request_name+1C4j
		test	ebx, ebx
		jz	short loc_67DC6C10
		mov	[esp+3Ch+var_3C], ebx
		nop
		lea	esi, [esi+0]
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC6C10

loc_67DC6BBB:				; CODE XREF: dbus_bus_request_name+335j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_reque ; "dbus_bus_request_name"
		mov	[esp+3Ch+var_30], 489h
		jmp	short loc_67DC6B7A
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6BD0:				; CODE XREF: dbus_bus_request_name+15Aj
		mov	[esp+3Ch+var_3C], edi
		call	dbus_message_unref

loc_67DC6BD8:				; CODE XREF: dbus_bus_request_name+122j
		mov	eax, off_67E19010
		mov	[esp+3Ch+var_38], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_34], eax
		call	dbus_set_error_const
		mov	eax, 0FFFFFFFFh
		jmp	loc_67DC6AB6
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6C00:				; CODE XREF: dbus_bus_request_name+272j
					; dbus_bus_request_name+284j
		mov	edx, 1
		jmp	loc_67DC6B6A
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6C10:				; CODE XREF: dbus_bus_request_name+2C6j
					; dbus_bus_request_name+2D9j
		mov	edx, 1
		jmp	short loc_67DC6BBB
; ---------------------------------------------------------------------------

loc_67DC6C17:				; CODE XREF: dbus_bus_request_name+184j
		test	ebx, ebx
		jz	short loc_67DC6C5D
		mov	[esp+3Ch+var_3C], ebx
		xchg	ax, ax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC6C5D

loc_67DC6C2B:				; CODE XREF: dbus_bus_request_name+382j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_reque ; "dbus_bus_request_name"
		mov	[esp+3Ch+var_30], 47Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		mov	eax, 0FFFFFFFFh
		jmp	loc_67DC6AB6
; ---------------------------------------------------------------------------

loc_67DC6C5D:				; CODE XREF: dbus_bus_request_name+339j
					; dbus_bus_request_name+349j
		mov	edx, 1
		jmp	short loc_67DC6C2B
dbus_bus_request_name endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  11. dbus_bus_get_unix_user

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_bus_get_unix_user(int, char *, int)
		public dbus_bus_get_unix_user
dbus_bus_get_unix_user proc near

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_C], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], esi
		mov	esi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_4], edi
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_u ; "dbus_bus_get_unix_user"
		mov	[esp+3Ch+var_30], 361h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC6D71
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_u ; "dbus_bus_get_unix_user"
		mov	[esp+3Ch+var_30], 362h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	edx, [esp+3Ch+arg_4]
		test	edx, edx
		jz	loc_67DC6E50
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_u ; "dbus_bus_get_unix_user"
		mov	[esp+3Ch+var_30], 363h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DDF1E0
		test	eax, eax
		jnz	short loc_67DC6D90
		mov	[esp+3Ch+var_2C], 363h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check_is ; "_dbus_check_is_valid_bus_name (name)"

loc_67DC6D47:				; CODE XREF: dbus_bus_get_unix_user+119j
					; dbus_bus_get_unix_user+1F8j ...
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_38], offset aDbus_bus_get_u ; "dbus_bus_get_unix_user"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		mov	eax, 0FFFFFFFFh

loc_67DC6D61:				; CODE XREF: dbus_bus_get_unix_user+1D4j
					; dbus_bus_get_unix_user+2A9j ...
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC6D71:				; CODE XREF: dbus_bus_get_unix_user+45j
		mov	[esp+3Ch+var_2C], 361h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNull ; "connection != NULL"
		jmp	short loc_67DC6D47
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6D90:				; CODE XREF: dbus_bus_get_unix_user+BDj
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_u ; "dbus_bus_get_unix_user"
		mov	[esp+3Ch+var_30], 364h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DC6DD0
		mov	[esp+3Ch+var_3C], esi
		call	dbus_error_is_set
		test	eax, eax
		jnz	loc_67DC6E70

loc_67DC6DD0:				; CODE XREF: dbus_bus_get_unix_user+14Ej
		mov	[esp+3Ch+var_30], offset aGetconnectionu ; "GetConnectionUnixUser"
		mov	[esp+3Ch+var_34], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		mov	[esp+3Ch+var_38], offset aOrgFreedesktop ; "/org/freedesktop/DBus"
		mov	[esp+3Ch+var_3C], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		call	dbus_message_new_method_call
		test	eax, eax
		mov	edi, eax
		jz	short loc_67DC6E26
		lea	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+var_34], eax
		mov	[esp+3Ch+var_38], 73h
		mov	[esp+3Ch+var_3C], edi
		call	dbus_message_append_args
		test	eax, eax
		jnz	short loc_67DC6E90
		mov	[esp+3Ch+var_3C], edi
		call	dbus_message_unref

loc_67DC6E26:				; CODE XREF: dbus_bus_get_unix_user+188j
		mov	eax, off_67E19010
		mov	[esp+3Ch+var_38], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_34], eax
		call	dbus_set_error_const
		mov	eax, 0FFFFFFFFh
		jmp	loc_67DC6D61
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6E50:				; CODE XREF: dbus_bus_get_unix_user+7Dj
		mov	[esp+3Ch+var_2C], 362h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aNameNull ; "name != NULL"
		jmp	loc_67DC6D47
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6E70:				; CODE XREF: dbus_bus_get_unix_user+15Aj
		mov	[esp+3Ch+var_2C], 364h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aErrorNullDbu_2 ; "(error) == NULL || !dbus_error_is_set ("...
		jmp	loc_67DC6D47
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6E90:				; CODE XREF: dbus_bus_get_unix_user+1ACj
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_30], esi
		mov	[esp+3Ch+var_34], 0FFFFFFFFh
		mov	[esp+3Ch+var_38], edi
		call	dbus_connection_send_with_reply_and_block
		mov	[esp+3Ch+var_3C], edi
		mov	ebx, eax
		call	dbus_message_unref
		test	ebx, ebx
		jz	short loc_67DC6F20
		mov	[esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], esi
		call	dbus_set_error_from_message
		test	eax, eax
		jz	loc_67DC6F75
		test	esi, esi
		jz	loc_67DC6F6B
		mov	[esp+3Ch+var_3C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67DC6F6B

loc_67DC6EE4:				; CODE XREF: dbus_bus_get_unix_user+300j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_u ; "dbus_bus_get_unix_user"
		mov	[esp+3Ch+var_30], 387h

loc_67DC6EF4:				; CODE XREF: dbus_bus_get_unix_user+34Fj
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_message_unref
		mov	eax, 0FFFFFFFFh
		jmp	loc_67DC6D61
; ---------------------------------------------------------------------------
		align 10h

loc_67DC6F20:				; CODE XREF: dbus_bus_get_unix_user+244j
		test	esi, esi
		jz	short loc_67DC6F64
		mov	[esp+3Ch+var_3C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC6F64

loc_67DC6F32:				; CODE XREF: dbus_bus_get_unix_user+2F9j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_u ; "dbus_bus_get_unix_user"
		mov	[esp+3Ch+var_30], 381h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		mov	eax, 0FFFFFFFFh
		jmp	loc_67DC6D61
; ---------------------------------------------------------------------------

loc_67DC6F64:				; CODE XREF: dbus_bus_get_unix_user+2B2j
					; dbus_bus_get_unix_user+2C0j
		mov	edx, 1
		jmp	short loc_67DC6F32
; ---------------------------------------------------------------------------

loc_67DC6F6B:				; CODE XREF: dbus_bus_get_unix_user+25Cj
					; dbus_bus_get_unix_user+26Ej
		mov	edx, 1
		jmp	loc_67DC6EE4
; ---------------------------------------------------------------------------

loc_67DC6F75:				; CODE XREF: dbus_bus_get_unix_user+254j
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 75h
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_message_get_args
		test	eax, eax
		jnz	short loc_67DC6FCB
		test	esi, esi
		jz	short loc_67DC6FC4
		mov	[esp+3Ch+var_3C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC6FC4

loc_67DC6FAF:				; CODE XREF: dbus_bus_get_unix_user+359j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_u ; "dbus_bus_get_unix_user"
		mov	[esp+3Ch+var_30], 390h
		jmp	loc_67DC6EF4
; ---------------------------------------------------------------------------

loc_67DC6FC4:				; CODE XREF: dbus_bus_get_unix_user+32Fj
					; dbus_bus_get_unix_user+33Dj
		mov	edx, 1
		jmp	short loc_67DC6FAF
; ---------------------------------------------------------------------------

loc_67DC6FCB:				; CODE XREF: dbus_bus_get_unix_user+32Bj
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_message_unref
		mov	eax, [esp+3Ch+var_10]
		jmp	loc_67DC6D61
dbus_bus_get_unix_user endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   8. dbus_bus_get_id

; =============== S U B	R O U T	I N E =======================================


		public dbus_bus_get_id
dbus_bus_get_id	proc near

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 30h
		mov	esi, [esp+3Ch+arg_0]
		mov	ebx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_i ; "dbus_bus_get_id"
		mov	[esp+3Ch+var_30], 3B4h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DC7250
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_i ; "dbus_bus_get_id"
		mov	[esp+3Ch+var_30], 3B5h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DC7062
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	loc_67DC7210

loc_67DC7062:				; CODE XREF: dbus_bus_get_id+70j
		mov	[esp+3Ch+var_30], offset aGetid	; "GetId"
		mov	[esp+3Ch+var_34], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		mov	[esp+3Ch+var_38], offset aOrgFreedesktop ; "/org/freedesktop/DBus"
		mov	[esp+3Ch+var_3C], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		call	dbus_message_new_method_call
		test	eax, eax
		mov	edi, eax
		jz	loc_67DC7121
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_30], ebx
		mov	[esp+3Ch+var_34], 0FFFFFFFFh
		mov	[esp+3Ch+var_38], eax
		call	dbus_connection_send_with_reply_and_block
		mov	[esp+3Ch+var_3C], edi
		mov	esi, eax
		call	dbus_message_unref
		test	esi, esi
		jz	loc_67DC71C7
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_set_error_from_message
		test	eax, eax
		jnz	short loc_67DC7140
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	[esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_get_args
		test	eax, eax
		jz	loc_67DC7190
		mov	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFAA60
		mov	[esp+3Ch+var_3C], esi
		mov	edi, eax
		call	dbus_message_unref
		test	edi, edi
		jz	short loc_67DC7121

loc_67DC7118:				; CODE XREF: dbus_bus_get_id+15Aj
					; dbus_bus_get_id+225j	...
		add	esp, 30h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DC7121:				; CODE XREF: dbus_bus_get_id+AAj
					; dbus_bus_get_id+136j
		mov	eax, off_67E19010
		mov	[esp+3Ch+var_38], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_34], eax
		call	dbus_set_error_const
		jmp	short loc_67DC7118
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7140:				; CODE XREF: dbus_bus_get_id+E8j
		test	ebx, ebx
		jz	short loc_67DC71B4
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC71B4

loc_67DC7152:				; CODE XREF: dbus_bus_get_id+1D9j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_i ; "dbus_bus_get_id"
		mov	[esp+3Ch+var_30], 3CFh

loc_67DC7162:				; CODE XREF: dbus_bus_get_id+1D2j
		xor	edi, edi
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], esi
		call	dbus_message_unref
		add	esp, 30h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7190:				; CODE XREF: dbus_bus_get_id+118j
		test	ebx, ebx
		jz	short loc_67DC71C0
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC71C0

loc_67DC71A2:				; CODE XREF: dbus_bus_get_id+1E5j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_i ; "dbus_bus_get_id"
		mov	[esp+3Ch+var_30], 3D9h
		jmp	short loc_67DC7162
; ---------------------------------------------------------------------------

loc_67DC71B4:				; CODE XREF: dbus_bus_get_id+162j
					; dbus_bus_get_id+170j
		mov	edx, 1
		jmp	short loc_67DC7152
; ---------------------------------------------------------------------------
		align 10h

loc_67DC71C0:				; CODE XREF: dbus_bus_get_id+1B2j
					; dbus_bus_get_id+1C0j
		mov	edx, 1
		jmp	short loc_67DC71A2
; ---------------------------------------------------------------------------

loc_67DC71C7:				; CODE XREF: dbus_bus_get_id+D4j
		test	ebx, ebx
		jz	short loc_67DC7244
		mov	[esp+3Ch+var_3C], ebx
		xchg	ax, ax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC7244

loc_67DC71DB:				; CODE XREF: dbus_bus_get_id+269j
		mov	[esp+3Ch+var_2C], offset aDbus_bus_get_i ; "dbus_bus_get_id"
		xor	edi, edi
		mov	[esp+3Ch+var_30], 3C9h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		jmp	loc_67DC7118
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7210:				; CODE XREF: dbus_bus_get_id+7Cj
		mov	[esp+3Ch+var_2C], 3B5h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aErrorNullDbu_2 ; "(error) == NULL || !dbus_error_is_set ("...

loc_67DC7228:				; CODE XREF: dbus_bus_get_id+288j
		mov	eax, off_67E19014
		xor	edi, edi
		mov	[esp+3Ch+var_38], offset aDbus_bus_get_i ; "dbus_bus_get_id"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DC7118
; ---------------------------------------------------------------------------

loc_67DC7244:				; CODE XREF: dbus_bus_get_id+1E9j
					; dbus_bus_get_id+1F9j
		mov	edx, 1
		jmp	short loc_67DC71DB
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7250:				; CODE XREF: dbus_bus_get_id+3Cj
		mov	[esp+3Ch+var_2C], 3B4h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNull ; "connection != NULL"
		jmp	short loc_67DC7228
dbus_bus_get_id	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC7270	proc near		; CODE XREF: sub_67DCE450+149p

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_67E34D68
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		cmp	ds:dword_67E34014, ebx
		jz	short loc_67DC72B0
		cmp	ds:dword_67E34018, ebx
		jz	short loc_67DC72C2

loc_67DC7295:				; CODE XREF: sub_67DC7270+50j
		cmp	ds:dword_67E3401C, ebx
		jz	short loc_67DC72D4

loc_67DC729D:				; CODE XREF: sub_67DC7270+62j
					; sub_67DC7270+6Ej
		mov	eax, ds:dword_67E34D68
		mov	[esp+1Ch+arg_0], eax
		add	esp, 18h
		pop	ebx
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------
		align 10h

loc_67DC72B0:				; CODE XREF: sub_67DC7270+1Bj
		cmp	ds:dword_67E34018, ebx
		mov	ds:dword_67E34014, 0
		jnz	short loc_67DC7295

loc_67DC72C2:				; CODE XREF: sub_67DC7270+23j
		cmp	ds:dword_67E3401C, ebx
		mov	ds:dword_67E34018, 0
		jnz	short loc_67DC729D

loc_67DC72D4:				; CODE XREF: sub_67DC7270+2Bj
		mov	ds:dword_67E3401C, 0
		jmp	short loc_67DC729D
sub_67DC7270	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DC72E0	proc near		; CODE XREF: dbus_bus_get_unique_name+49p
					; dbus_bus_set_unique_name+90p	...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		xor	ebx, ebx
		mov	[esp+1Ch+var_8], esi
		mov	esi, eax
		mov	[esp+1Ch+var_4], edi
		mov	[esp+1Ch+var_1C], offset dword_67E19000
		call	dbus_connection_allocate_data_slot
		test	eax, eax
		jnz	short loc_67DC7315

loc_67DC7303:				; CODE XREF: sub_67DC72E0+58j
					; sub_67DC72E0+97j ...
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_8]
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC7315:				; CODE XREF: sub_67DC72E0+21j
		mov	eax, dword_67E19000
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_18], eax
		call	dbus_connection_get_data
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DC7340

loc_67DC732C:				; CODE XREF: sub_67DC72E0+70j
		mov	[esp+1Ch+var_1C], offset dword_67E19000
		call	dbus_connection_free_data_slot
		jmp	short loc_67DC7303
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7340:				; CODE XREF: sub_67DC72E0+4Aj
		mov	[esp+1Ch+var_1C], 0Ch ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	edi, eax
		jz	short loc_67DC732C
		mov	[eax], esi
		mov	[esp+1Ch+var_14], eax
		mov	eax, dword_67E19000
		mov	[esp+1Ch+var_10], offset sub_67DC7590
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_18], eax
		call	dbus_connection_set_data
		test	eax, eax
		jz	short loc_67DC7379
		mov	ebx, edi
		jmp	short loc_67DC7303
; ---------------------------------------------------------------------------

loc_67DC7379:				; CODE XREF: sub_67DC72E0+93j
		mov	[esp+1Ch+var_1C], edi
		lea	esi, [esi+0]
		call	dbus_free
		mov	[esp+1Ch+var_1C], offset dword_67E19000
		call	dbus_connection_free_data_slot
		jmp	loc_67DC7303
sub_67DC72E0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  10. dbus_bus_get_unique_name

; =============== S U B	R O U T	I N E =======================================


		public dbus_bus_get_unique_name
dbus_bus_get_unique_name proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_bus_get_0 ; "dbus_bus_get_unique_name"
		mov	[esp+2Ch+var_20], 332h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DC7410
		mov	eax, ds:dword_67E34D6C
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	eax, ebx
		xor	ebx, ebx
		call	sub_67DC72E0
		test	eax, eax
		jz	short loc_67DC73F5
		mov	ebx, [eax+4]

loc_67DC73F5:				; CODE XREF: dbus_bus_get_unique_name+50j
		mov	eax, ds:dword_67E34D6C
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0

loc_67DC7402:				; CODE XREF: dbus_bus_get_unique_name+9Dj
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7410:				; CODE XREF: dbus_bus_get_unique_name+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 332h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNull ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_bus_get_0 ; "dbus_bus_get_unique_name"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DC7402
dbus_bus_get_unique_name endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  17. dbus_bus_set_unique_name

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_bus_set_unique_name(int, char *)
		public dbus_bus_set_unique_name
dbus_bus_set_unique_name proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], edi
		mov	[esp+2Ch+var_1C], offset aDbus_bus_set_u ; "dbus_bus_set_unique_name"
		mov	[esp+2Ch+var_20], 306h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC7540
		mov	[esp+2Ch+var_1C], offset aDbus_bus_set_u ; "dbus_bus_set_unique_name"
		mov	[esp+2Ch+var_20], 307h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DC7571
		mov	eax, ds:dword_67E34D6C
		xor	edi, edi
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	eax, ebx
		call	sub_67DC72E0
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DC751F
		mov	[esp+2Ch+var_1C], offset aDbus_bus_set_u ; "dbus_bus_set_unique_name"
		xor	eax, eax
		mov	[esp+2Ch+var_20], 30Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aBdUnique_nameN ; "bd->unique_name == NULL"
		cmp	dword ptr [ebx+4], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], esi ;	char *
		call	sub_67DFAA60
		test	eax, eax
		mov	[ebx+4], eax
		setnz	al
		movzx	edi, al

loc_67DC751F:				; CODE XREF: dbus_bus_set_unique_name+99j
		mov	eax, ds:dword_67E34D6C
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0

loc_67DC752C:				; CODE XREF: dbus_bus_set_unique_name+12Fj
		mov	eax, edi
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7540:				; CODE XREF: dbus_bus_set_unique_name+45j
		mov	[esp+2Ch+var_1C], 306h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNull ; "connection != NULL"

loc_67DC7558:				; CODE XREF: dbus_bus_set_unique_name+149j
		mov	eax, off_67E19014
		xor	edi, edi
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_bus_set_u ; "dbus_bus_set_unique_name"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DC752C
; ---------------------------------------------------------------------------

loc_67DC7571:				; CODE XREF: dbus_bus_set_unique_name+79j
		mov	[esp+2Ch+var_1C], 307h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aUnique_nameNul ; "unique_name	!= NULL"
		jmp	short loc_67DC7558
dbus_bus_set_unique_name endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC7590	proc near		; DATA XREF: sub_67DC72E0+7Do

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		test	byte ptr [ebx+8], 1
		jnz	short loc_67DC75C2

loc_67DC759E:				; CODE XREF: sub_67DC7590+66j
		mov	eax, [ebx+4]
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	[esp+1Ch+var_1C], ebx
		call	dbus_free
		mov	[esp+1Ch+arg_0], offset	dword_67E19000
		add	esp, 18h
		pop	ebx
		jmp	dbus_connection_free_data_slot
; ---------------------------------------------------------------------------

loc_67DC75C2:				; CODE XREF: sub_67DC7590+Cj
		mov	eax, ds:dword_67E34D68
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		mov	eax, [ebx]
		cmp	ds:dword_67E34014, eax
		jz	short loc_67DC75F8

loc_67DC75D9:				; CODE XREF: sub_67DC7590+72j
		cmp	ds:dword_67E34018, eax
		jz	short loc_67DC7610

loc_67DC75E1:				; CODE XREF: sub_67DC7590+8Aj
		cmp	ds:dword_67E3401C, eax
		jz	short loc_67DC7604

loc_67DC75E9:				; CODE XREF: sub_67DC7590+7Ej
		mov	eax, ds:dword_67E34D68
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1AD0
		jmp	short loc_67DC759E
; ---------------------------------------------------------------------------

loc_67DC75F8:				; CODE XREF: sub_67DC7590+47j
		mov	ds:dword_67E34014, 0
		jmp	short loc_67DC75D9
; ---------------------------------------------------------------------------

loc_67DC7604:				; CODE XREF: sub_67DC7590+57j
		mov	ds:dword_67E3401C, 0
		jmp	short loc_67DC75E9
; ---------------------------------------------------------------------------

loc_67DC7610:				; CODE XREF: sub_67DC7590+4Fj
		mov	ds:dword_67E34018, 0
		jmp	short loc_67DC75E1
sub_67DC7590	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC7620	proc near		; DATA XREF: sub_67DC7A30+1D7o

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	edx, ds:dword_67E34014
		test	edx, edx
		jz	short loc_67DC7639
		mov	[esp+1Ch+var_1C], offset aDbus_shutdownC ; "dbus_shutdown() called but connections "...
		call	sub_67DFB4E0

loc_67DC7639:				; CODE XREF: sub_67DC7620+Bj
		mov	eax, ds:dword_67E34004
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	eax, ds:dword_67E34018
		mov	ds:dword_67E34004, 0
		test	eax, eax
		jz	short loc_67DC7665
		mov	[esp+1Ch+var_1C], offset aDbus_shutdownC ; "dbus_shutdown() called but connections "...
		call	sub_67DFB4E0

loc_67DC7665:				; CODE XREF: sub_67DC7620+37j
		mov	eax, ds:dword_67E34008
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	ecx, ds:dword_67E3401C
		mov	ds:dword_67E34008, 0
		test	ecx, ecx
		jz	short loc_67DC7692
		mov	[esp+1Ch+var_1C], offset aDbus_shutdownC ; "dbus_shutdown() called but connections "...
		call	sub_67DFB4E0

loc_67DC7692:				; CODE XREF: sub_67DC7620+64j
		mov	eax, ds:dword_67E3400C
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	ds:dword_67E3400C, 0
		mov	dword_67E19004,	2
		mov	ds:dword_67E34010, 0
		add	esp, 1Ch
		retn
sub_67DC7620	endp

; ---------------------------------------------------------------------------
		jmp	short dbus_bus_register
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  13. dbus_bus_register

; =============== S U B	R O U T	I N E =======================================


		public dbus_bus_register
dbus_bus_register proc near		; CODE XREF: .text:67DC76C1j
					; sub_67DC7A30+288p

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 5Ch
		mov	[esp+5Ch+var_C], esi
		mov	esi, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_8], edi
		mov	[esp+5Ch+var_4], ebp
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_bus_regis ; "dbus_bus_register"
		mov	[esp+5Ch+Format], 294h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DC78A0
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_bus_regis ; "dbus_bus_register"
		mov	[esp+5Ch+Format], 295h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DC775B
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	short loc_67DC77D4

loc_67DC775B:				; CODE XREF: dbus_bus_register+7Dj
		mov	eax, ds:dword_67E34D6C
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1A90
		mov	eax, esi
		call	sub_67DC72E0
		test	eax, eax
		mov	edi, eax
		jz	loc_67DC7990
		mov	eax, [eax+4]
		test	eax, eax
		jz	loc_67DC7805
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		mov	esi, 1
		mov	[esp+5Ch+Format], offset aIgnoringAttemp ; "Ignoring attempt to	register the same D"...
		mov	[esp+5Ch+var_54], offset aDbus_bus_regis ; "dbus_bus_register"
		mov	[esp+5Ch+var_58], 2A6h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ds:dword_67E34D6C
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1AD0

loc_67DC77BE:				; CODE XREF: dbus_bus_register+133j
					; dbus_bus_register+1C6j ...
		mov	eax, esi
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_67DC77D4:				; CODE XREF: dbus_bus_register+89j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+5Ch+var_4C], 295h
		mov	[esp+5Ch+Format], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aErrorNullDbu_2 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+5Ch+var_58], offset aDbus_bus_regis ; "dbus_bus_register"
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DC77BE
; ---------------------------------------------------------------------------

loc_67DC7805:				; CODE XREF: dbus_bus_register+AEj
		mov	[esp+5Ch+Format], offset aHello	; "Hello"
		mov	[esp+5Ch+var_54], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		mov	[esp+5Ch+var_58], offset aOrgFreedesktop ; "/org/freedesktop/DBus"
		mov	[esp+5Ch+var_5C], offset aOrg_freedesk_1 ; "org.freedesktop.DBus"
		call	dbus_message_new_method_call
		test	eax, eax
		mov	ebp, eax
		jz	loc_67DC7990
		mov	[esp+5Ch+Format], ebx
		mov	[esp+5Ch+var_54], 0FFFFFFFFh
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], esi
		call	dbus_connection_send_with_reply_and_block
		mov	[esp+5Ch+var_5C], ebp
		mov	[esp+5Ch+var_30], eax
		call	dbus_message_unref
		mov	ecx, [esp+5Ch+var_30]
		test	ecx, ecx
		jz	short loc_67DC78D2
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_58], eax
		call	dbus_set_error_from_message
		test	eax, eax
		jz	loc_67DC7920

loc_67DC7877:				; CODE XREF: dbus_bus_register+27Aj
		xor	esi, esi

loc_67DC7879:				; CODE XREF: dbus_bus_register+296j
					; dbus_bus_register+2B8j
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_unref
		test	esi, esi
		jz	short loc_67DC78D4

loc_67DC7889:				; CODE XREF: dbus_bus_register+248j
		mov	eax, ds:dword_67E34D6C
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1AD0
		jmp	loc_67DC77BE
; ---------------------------------------------------------------------------
		align 10h

loc_67DC78A0:				; CODE XREF: dbus_bus_register+49j
		mov	eax, off_67E19014
		mov	dword ptr [esp+5Ch+var_4C], 294h
		mov	[esp+5Ch+Format], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aConnectionNull ; "connection != NULL"
		mov	[esp+5Ch+var_58], offset aDbus_bus_regis ; "dbus_bus_register"
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DC77BE
; ---------------------------------------------------------------------------

loc_67DC78D2:				; CODE XREF: dbus_bus_register+18Dj
		xor	esi, esi

loc_67DC78D4:				; CODE XREF: dbus_bus_register+1B7j
		test	ebx, ebx
		jz	short loc_67DC78EB
		mov	[esp+5Ch+var_5C], ebx
		nop
		lea	esi, [esi+0]
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DC78F0

loc_67DC78EB:				; CODE XREF: dbus_bus_register+206j
		mov	edx, 1

loc_67DC78F0:				; CODE XREF: dbus_bus_register+219j
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_bus_regis ; "dbus_bus_register"
		mov	[esp+5Ch+Format], 2D5h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+5Ch+var_5C], edx
		call	sub_67DFAE70
		jmp	loc_67DC7889
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7920:				; CODE XREF: dbus_bus_register+1A1j
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+Format], eax
		mov	eax, [esp+5Ch+var_30]
		mov	dword ptr [esp+5Ch+var_4C], 0
		mov	[esp+5Ch+var_54], 73h
		mov	[esp+5Ch+var_58], ebx
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_get_args
		test	eax, eax
		jz	loc_67DC7877
		mov	eax, [esp+5Ch+var_20]
		mov	esi, 1
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	sub_67DFAA60
		test	eax, eax
		mov	[edi+4], eax
		jnz	loc_67DC7879
		mov	eax, off_67E19010
		xor	si, si
		mov	[esp+5Ch+var_58], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_54], eax
		call	dbus_set_error_const
		jmp	loc_67DC7879
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7990:				; CODE XREF: dbus_bus_register+A3j
					; dbus_bus_register+15Dj
		mov	eax, off_67E19010
		xor	esi, esi
		mov	[esp+5Ch+var_58], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_54], eax
		call	dbus_set_error_const
		mov	eax, ds:dword_67E34D6C
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1AD0
		jmp	loc_67DC77BE
dbus_bus_register endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC79C0	proc near		; CODE XREF: sub_67DC7A30+443p
					; sub_67DC7A30+57Ep

VarName		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 24h
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset aGet_from_env ; "get_from_env"
		mov	[esp+2Ch+var_20], 8Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnection_pNu ; "*connection_p == NULL"
		cmp	dword ptr [ebx], 0
		setz	al
		mov	[esp+2Ch+VarName], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+VarName], esi ; VarName
		call	sub_67E09AD0
		test	eax, eax
		jz	short loc_67DC7A0A
		cmp	byte ptr [eax],	0
		jnz	short loc_67DC7A15

loc_67DC7A0A:				; CODE XREF: sub_67DC79C0+43j
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DC7A15:				; CODE XREF: sub_67DC79C0+48j
		mov	[esp+2Ch+VarName], eax ; char *
		call	sub_67DFAA60
		test	eax, eax
		mov	[ebx], eax
		setnz	al
		add	esp, 24h
		movzx	eax, al
		pop	ebx
		pop	esi
		retn
sub_67DC79C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __thiscall sub_67DC7A30(int)
sub_67DC7A30	proc near		; CODE XREF: dbus_bus_get_private+13j
					; dbus_bus_get+10j

VarName		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
Format		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_44		= byte ptr -44h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		mov	ebp, eax
		push	edi
		push	esi
		push	ebx
		mov	ebx, ecx
		sub	esp, 6Ch
		mov	[esp+7Ch+var_50], edx
		mov	dword ptr [esp+7Ch+var_6C], offset aInternal_bus_g ; "internal_bus_get"
		mov	[esp+7Ch+Format], 1B2h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+7Ch+VarName], 1
		call	sub_67DFAE70
		cmp	ebp, 2
		ja	loc_67DC7D64
		mov	dword ptr [esp+7Ch+var_6C], offset aInternal_bus_g ; "internal_bus_get"
		mov	[esp+7Ch+Format], 1B3h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConstChar_dbus ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+7Ch+VarName], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DC7AB6
		mov	[esp+7Ch+VarName], ebx
		call	dbus_error_is_set
		test	eax, eax
		xchg	ax, ax
		jnz	loc_67DC7E28

loc_67DC7AB6:				; CODE XREF: sub_67DC7A30+72j
		mov	eax, ds:dword_67E34D68
		mov	[esp+7Ch+VarName], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34010
		test	eax, eax
		jnz	loc_67DC7C21
		mov	eax, ds:dword_67E34008
		mov	ds:dword_67E34014, 0
		mov	ds:dword_67E34018, 0
		mov	ds:dword_67E3401C, 0
		test	eax, eax
		jz	loc_67DC7E45

loc_67DC7AFB:				; CODE XREF: sub_67DC7A30+457j
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+Format], offset aUsedEnvVarSyst ; "  used env var system bus \"%s\"\n"
		mov	[esp+7Ch+var_74], offset aInit_connectio ; "init_connections_unlocked"
		mov	[esp+7Ch+var_78], 0FDh ; int
		mov	[esp+7Ch+VarName], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DC7B23:				; CODE XREF: sub_67DC7A30+49Ej
		mov	edi, ds:dword_67E34004
		test	edi, edi
		jz	loc_67DC7ED3

loc_67DC7B31:				; CODE XREF: sub_67DC7A30+549j
		mov	esi, ds:dword_67E3400C
		test	esi, esi
		jz	loc_67DC7F80

loc_67DC7B3F:				; CODE XREF: sub_67DC7A30+5C8j
		mov	[esp+7Ch+VarName], offset aDbus_starter_b ; "DBUS_STARTER_BUS_TYPE"
		call	sub_67E09AD0
		test	eax, eax
		jz	short loc_67DC7B9D
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	edi, offset aSystem ; "system"
		mov	[esp+7Ch+var_54], eax
		mov	[esp+7Ch+Format], offset aBusActivationT ; "Bus	activation type	was set	to \"%s\"\n"
		mov	[esp+7Ch+var_74], offset aInit_connectio ; "init_connections_unlocked"
		mov	[esp+7Ch+var_78], 11Dh ; int
		mov	[esp+7Ch+VarName], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+7Ch+var_54]
		mov	ecx, 7
		mov	esi, eax
		repe cmpsb
		jnz	loc_67DC7DA0
		mov	dword_67E19004,	1

loc_67DC7B9D:				; CODE XREF: sub_67DC7A30+11Dj
					; sub_67DC7A30+37Ej ...
		mov	[esp+7Ch+var_78], 0 ; char *
		mov	[esp+7Ch+VarName], offset aDbus_activatio ; "DBUS_ACTIVATION_ADDRESS"
		call	sub_67E09B00
		test	eax, eax
		jnz	short loc_67DC7BE7

loc_67DC7BB5:				; CODE XREF: sub_67DC7A30+1CDj
					; sub_67DC7A30+1E5j ...
		mov	eax, ds:dword_67E34D68
		xor	esi, esi
		mov	[esp+7Ch+VarName], eax
		call	sub_67DF1AD0
		mov	eax, off_67E19010
		mov	[esp+7Ch+VarName], ebx
		mov	[esp+7Ch+var_78], offset aOrg_freedesk_2 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+7Ch+var_74], eax
		call	dbus_set_error_const
		add	esp, 6Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DC7BE7:				; CODE XREF: sub_67DC7A30+183j
		mov	[esp+7Ch+var_78], 0 ; char *
		mov	[esp+7Ch+VarName], offset aDbus_activat_0 ; "DBUS_ACTIVATION_BUS_TYPE"
		call	sub_67E09B00
		test	eax, eax
		jz	short loc_67DC7BB5
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+VarName], offset sub_67DC7620
		call	sub_67DFE730
		test	eax, eax
		jz	short loc_67DC7BB5
		mov	ds:dword_67E34010, 1

loc_67DC7C21:				; CODE XREF: sub_67DC7A30+9Aj
		cmp	ebp, 2
		jz	short loc_67DC7C60

loc_67DC7C26:				; CODE XREF: sub_67DC7A30+23Fj
		mov	eax, [esp+7Ch+var_50]
		mov	edi, ebp
		test	eax, eax
		jnz	short loc_67DC7C80

loc_67DC7C30:				; CODE XREF: sub_67DC7A30+247j
		mov	esi, ds:dword_67E34014[edi*4]
		test	esi, esi
		jz	short loc_67DC7C80
		mov	[esp+7Ch+VarName], esi
		call	dbus_connection_ref
		mov	eax, ds:dword_67E34D68
		mov	[esp+7Ch+VarName], eax
		call	sub_67DF1AD0

loc_67DC7C50:				; CODE XREF: sub_67DC7A30+3ECj
					; sub_67DC7A30+640j ...
		add	esp, 6Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7C60:				; CODE XREF: sub_67DC7A30+1F4j
		mov	edi, dword_67E19004
		mov	edx, ds:dword_67E34004[edi*4]
		test	edx, edx
		jz	short loc_67DC7C26
		mov	eax, [esp+7Ch+var_50]
		test	eax, eax
		jz	short loc_67DC7C30
		lea	esi, [esi+0]

loc_67DC7C80:				; CODE XREF: sub_67DC7A30+1FEj
					; sub_67DC7A30+209j
		mov	eax, ds:dword_67E34004[ebp*4]
		test	eax, eax
		jz	loc_67DC808F
		mov	esi, [esp+7Ch+var_50]
		test	esi, esi
		jz	loc_67DC7D51
		mov	[esp+7Ch+var_78], ebx
		mov	[esp+7Ch+VarName], eax
		call	dbus_connection_open_private
		mov	esi, eax

loc_67DC7CA9:				; CODE XREF: sub_67DC7A30+32Fj
		test	esi, esi
		jz	loc_67DC8025
		mov	[esp+7Ch+var_78], ebx
		mov	[esp+7Ch+VarName], esi
		call	dbus_bus_register
		test	eax, eax
		jz	loc_67DC7DC3
		mov	ebx, [esp+7Ch+var_50]
		test	ebx, ebx
		jnz	short loc_67DC7CD4
		mov	ds:dword_67E34014[edi*4], esi

loc_67DC7CD4:				; CODE XREF: sub_67DC7A30+29Bj
		mov	[esp+7Ch+VarName], esi
		mov	[esp+7Ch+var_78], 1
		call	dbus_connection_set_exit_on_disconnect
		mov	eax, ds:dword_67E34D6C
		mov	[esp+7Ch+VarName], eax
		call	sub_67DF1A90
		mov	eax, esi
		call	sub_67DC72E0
		mov	dword ptr [esp+7Ch+var_6C], offset aInternal_bus_g ; "internal_bus_get"
		mov	[esp+7Ch+Format], 206h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aBdNull ; "bd != NULL"
		mov	ebx, eax
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+7Ch+VarName], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+8], 1
		mov	eax, ds:dword_67E34D6C
		mov	[esp+7Ch+VarName], eax
		call	sub_67DF1AD0
		mov	eax, ds:dword_67E34D68
		mov	[esp+7Ch+VarName], eax
		call	sub_67DF1AD0
		add	esp, 6Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DC7D51:				; CODE XREF: sub_67DC7A30+265j
		mov	[esp+7Ch+var_78], ebx
		mov	[esp+7Ch+VarName], eax
		call	dbus_connection_open
		mov	esi, eax
		jmp	loc_67DC7CA9
; ---------------------------------------------------------------------------

loc_67DC7D64:				; CODE XREF: sub_67DC7A30+3Ej
		mov	dword ptr [esp+7Ch+var_6C], 1B2h
		mov	[esp+7Ch+Format], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_74], offset aType0TypeN_bus ; "type >= 0 && type <	N_BUS_TYPES"

loc_67DC7D7C:				; CODE XREF: sub_67DC7A30+410j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	[esp+7Ch+var_78], offset aInternal_bus_g ; "internal_bus_get"
		mov	[esp+7Ch+VarName], eax ; char *
		call	sub_67DFB4E0
		add	esp, 6Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7DA0:				; CODE XREF: sub_67DC7A30+15Dj
		mov	edi, offset aSession ; "session"
		mov	ecx, 8
		mov	esi, eax
		repe cmpsb
		jnz	loc_67DC7B9D
		mov	dword_67E19004,	0
		jmp	loc_67DC7B9D
; ---------------------------------------------------------------------------

loc_67DC7DC3:				; CODE XREF: sub_67DC7A30+28Fj
		test	ebx, ebx
		jz	short loc_67DC7E21
		mov	[esp+7Ch+VarName], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC7E21

loc_67DC7DD5:				; CODE XREF: sub_67DC7A30+3F6j
		mov	[esp+7Ch+VarName], edx
		mov	dword ptr [esp+7Ch+var_6C], offset aInternal_bus_g ; "internal_bus_get"
		mov	[esp+7Ch+Format], 1EDh
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		call	sub_67DFAE70
		mov	[esp+7Ch+VarName], esi
		call	sub_67DD02C0
		mov	[esp+7Ch+VarName], esi
		xor	esi, esi
		call	dbus_connection_unref
		mov	eax, ds:dword_67E34D68
		mov	[esp+7Ch+VarName], eax
		call	sub_67DF1AD0
		jmp	loc_67DC7C50
; ---------------------------------------------------------------------------

loc_67DC7E21:				; CODE XREF: sub_67DC7A30+395j
					; sub_67DC7A30+3A3j
		mov	edx, 1
		jmp	short loc_67DC7DD5
; ---------------------------------------------------------------------------

loc_67DC7E28:				; CODE XREF: sub_67DC7A30+80j
		mov	dword ptr [esp+7Ch+var_6C], 1B3h
		mov	[esp+7Ch+Format], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_74], offset aErrorNullDbu_2 ; "(error) == NULL || !dbus_error_is_set ("...
		jmp	loc_67DC7D7C
; ---------------------------------------------------------------------------

loc_67DC7E45:				; CODE XREF: sub_67DC7A30+C5j
		mov	[esp+7Ch+Format], offset aFillingInSyste ; "Filling in system bus address...\n"
		mov	[esp+7Ch+var_74], offset aInit_connectio ; "init_connections_unlocked"
		mov	[esp+7Ch+var_78], 0E7h ; int
		mov	[esp+7Ch+VarName], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, offset aDbus_system_bu ; "DBUS_SYSTEM_BUS_ADDRESS"
		mov	eax, offset dword_67E34008
		call	sub_67DC79C0
		test	eax, eax
		jz	loc_67DC7BB5
		mov	eax, ds:dword_67E34008
		test	eax, eax
		jnz	loc_67DC7AFB
		mov	[esp+7Ch+VarName], offset aNonceTcp ; "nonce-tcp:"
		call	sub_67DFAA60
		test	eax, eax
		mov	ds:dword_67E34008, eax
		jz	loc_67DC7BB5
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+Format], offset aUsedDefaultSys ; "  used default system bus \"%s\"\n"
		mov	[esp+7Ch+var_74], offset aInit_connectio ; "init_connections_unlocked"
		mov	[esp+7Ch+var_78], 0F9h ; int
		mov	[esp+7Ch+VarName], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DC7B23
; ---------------------------------------------------------------------------

loc_67DC7ED3:				; CODE XREF: sub_67DC7A30+FBj
		mov	[esp+7Ch+Format], offset aFillingInSessi ; "Filling in session bus address...\n"
		mov	[esp+7Ch+var_74], offset aInit_connectio ; "init_connections_unlocked"
		mov	[esp+7Ch+var_78], 101h ; int
		mov	[esp+7Ch+VarName], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		cmp	ds:dword_67E34004, 0
		mov	dword ptr [esp+7Ch+var_6C], offset aGet_from_env ; "get_from_env"
		mov	[esp+7Ch+Format], 8Ah
		setz	al
		mov	[esp+7Ch+VarName], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnection_pNu ; "*connection_p == NULL"
		call	sub_67DFAE70
		mov	[esp+7Ch+VarName], offset aDbus_session_b ; "DBUS_SESSION_BUS_ADDRESS"
		call	sub_67E09AD0
		test	eax, eax
		jz	short loc_67DC7F44
		cmp	byte ptr [eax],	0
		jnz	loc_67DC807C

loc_67DC7F44:				; CODE XREF: sub_67DC7A30+509j
		mov	eax, ds:dword_67E34004

loc_67DC7F49:				; CODE XREF: sub_67DC7A30+65Aj
		test	eax, eax
		jz	loc_67DC80C5

loc_67DC7F51:				; CODE XREF: sub_67DC7A30+71Dj
					; sub_67DC7A30+73Cj
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+Format], offset aS ; "	 \"%s\"\n"
		mov	[esp+7Ch+var_74], offset aInit_connectio ; "init_connections_unlocked"
		mov	[esp+7Ch+var_78], 107h ; int
		mov	[esp+7Ch+VarName], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DC7B31
; ---------------------------------------------------------------------------
		align 10h

loc_67DC7F80:				; CODE XREF: sub_67DC7A30+109j
		mov	[esp+7Ch+Format], offset aFillingInActiv ; "Filling in activation bus address...\n"
		mov	[esp+7Ch+var_74], offset aInit_connectio ; "init_connections_unlocked"
		mov	[esp+7Ch+var_78], 10Ch ; int
		mov	[esp+7Ch+VarName], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, offset aDbus_starter_a ; "DBUS_STARTER_ADDRESS"
		mov	eax, offset dword_67E3400C
		call	sub_67DC79C0
		test	eax, eax
		jz	loc_67DC7BB5
		mov	eax, ds:dword_67E3400C
		test	eax, eax
		jz	loc_67DC80BB

loc_67DC7FC8:				; CODE XREF: sub_67DC7A30+690j
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+Format], offset aS ; "	 \"%s\"\n"
		mov	[esp+7Ch+var_74], offset aInit_connectio ; "init_connections_unlocked"
		mov	[esp+7Ch+var_78], 113h ; int
		mov	[esp+7Ch+VarName], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	ecx, ds:dword_67E3400C
		test	ecx, ecx
		jnz	loc_67DC7B3F
		mov	eax, ds:dword_67E34004
		test	eax, eax
		jz	loc_67DC7B9D
		mov	[esp+7Ch+VarName], eax ; char *
		call	sub_67DFAA60
		test	eax, eax
		mov	ds:dword_67E3400C, eax
		jnz	loc_67DC7B9D
		jmp	loc_67DC7BB5
; ---------------------------------------------------------------------------

loc_67DC8025:				; CODE XREF: sub_67DC7A30+27Bj
		test	ebx, ebx
		jz	short loc_67DC8075
		mov	[esp+7Ch+VarName], ebx
		lea	esi, [esi+0]
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DC8075

loc_67DC803B:				; CODE XREF: sub_67DC7A30+64Aj
		mov	dword ptr [esp+7Ch+var_6C], offset aInternal_bus_g ; "internal_bus_get"
		mov	[esp+7Ch+Format], 1E6h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_0 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDbu_1 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+7Ch+VarName], edx
		call	sub_67DFAE70
		mov	eax, ds:dword_67E34D68
		mov	[esp+7Ch+VarName], eax
		call	sub_67DF1AD0
		jmp	loc_67DC7C50
; ---------------------------------------------------------------------------

loc_67DC8075:				; CODE XREF: sub_67DC7A30+5F7j
					; sub_67DC7A30+609j
		mov	edx, 1
		jmp	short loc_67DC803B
; ---------------------------------------------------------------------------

loc_67DC807C:				; CODE XREF: sub_67DC7A30+50Ej
		mov	[esp+7Ch+VarName], eax ; char *
		nop
		call	sub_67DFAA60
		mov	ds:dword_67E34004, eax
		jmp	loc_67DC7F49
; ---------------------------------------------------------------------------

loc_67DC808F:				; CODE XREF: sub_67DC7A30+259j
		mov	[esp+7Ch+var_74], offset aUnableToDeterm ; "Unable to determine	the address of the "...
		xor	esi, esi
		mov	[esp+7Ch+var_78], offset aOrg_freedesk_3 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+7Ch+VarName], ebx ; int
		call	dbus_set_error
		mov	eax, ds:dword_67E34D68
		mov	[esp+7Ch+VarName], eax
		call	sub_67DF1AD0
		jmp	loc_67DC7C50
; ---------------------------------------------------------------------------

loc_67DC80BB:				; CODE XREF: sub_67DC7A30+592j
		mov	eax, offset aNoneSet ; "none set"
		jmp	loc_67DC7FC8
; ---------------------------------------------------------------------------

loc_67DC80C5:				; CODE XREF: sub_67DC7A30+51Bj
		lea	esi, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_28], 0
		mov	[esp+7Ch+var_30], 0
		mov	dword ptr [esp+7Ch+var_2C], 0
		mov	[esp+7Ch+var_24], 0
		mov	byte ptr [esp+7Ch+var_28], 1
		mov	[esp+7Ch+VarName], esi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DC7BB5
		lea	eax, [esp+7Ch+var_20]
		lea	edi, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_20], 0
		mov	[esp+7Ch+var_74], edi
		mov	[esp+7Ch+var_78], esi ;	char
		mov	[esp+7Ch+VarName], eax
		call	sub_67E0ABD0
		cmp	[esp+7Ch+var_20], 0
		setnz	dl
		test	eax, eax
		jnz	short loc_67DC8171
		test	dl, dl
		jnz	short loc_67DC8187

loc_67DC812E:				; CODE XREF: sub_67DC7A30+743j
					; sub_67DC7A30+755j
		mov	[esp+7Ch+var_54], eax
		mov	[esp+7Ch+VarName], esi
		call	sub_67E02BF0
		mov	eax, [esp+7Ch+var_54]
		test	eax, eax
		jz	loc_67DC7BB5
		mov	eax, ds:dword_67E34004
		test	eax, eax
		jnz	loc_67DC7F51
		mov	[esp+7Ch+VarName], offset aAutolaunchScop ; "autolaunch:scope=install-path"
		call	sub_67DFAA60
		test	eax, eax
		mov	ds:dword_67E34004, eax
		jz	loc_67DC7BB5
		jmp	loc_67DC7F51
; ---------------------------------------------------------------------------

loc_67DC8171:				; CODE XREF: sub_67DC7A30+6F8j
		test	dl, dl
		jz	short loc_67DC812E
		mov	[esp+7Ch+var_78], offset dword_67E34004
		mov	[esp+7Ch+VarName], esi
		call	sub_67E05F70
		jmp	short loc_67DC812E
; ---------------------------------------------------------------------------

loc_67DC8187:				; CODE XREF: sub_67DC7A30+6FCj
		mov	[esp+7Ch+VarName], edi
		call	dbus_error_is_set
		test	eax, eax
		jz	short loc_67DC81B4
		mov	eax, dword ptr [esp+7Ch+var_2C]
		mov	[esp+7Ch+VarName], offset aDynamicSession ; "Dynamic session lookup supported but fa"...
		mov	[esp+7Ch+var_78], eax ;	char
		call	sub_67DFAD60

loc_67DC81A7:				; CODE XREF: sub_67DC7A30+790j
		mov	[esp+7Ch+VarName], esi
		call	sub_67E02BF0
		jmp	loc_67DC7BB5
; ---------------------------------------------------------------------------

loc_67DC81B4:				; CODE XREF: sub_67DC7A30+761j
		mov	[esp+7Ch+VarName], offset aDynamicSessi_0 ; "Dynamic session lookup supported but fa"...
		call	sub_67DFAD60
		jmp	short loc_67DC81A7
sub_67DC7A30	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   9. dbus_bus_get_private

; =============== S U B	R O U T	I N E =======================================


		public dbus_bus_get_private
dbus_bus_get_private proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	edx, 1
		mov	ecx, [esp+0Ch+arg_4] ; int
		mov	eax, [esp+0Ch+arg_0]
		add	esp, 0Ch
		jmp	sub_67DC7A30
dbus_bus_get_private endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   7. dbus_bus_get

; =============== S U B	R O U T	I N E =======================================


		public dbus_bus_get
dbus_bus_get	proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		xor	edx, edx
		mov	ecx, [esp+0Ch+arg_4] ; int
		mov	eax, [esp+0Ch+arg_0]
		add	esp, 0Ch
		jmp	sub_67DC7A30
dbus_bus_get	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  65. dbus_connection_set_change_sigpipe

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_change_sigpipe
dbus_connection_set_change_sigpipe proc	near

arg_0		= dword	ptr  4

		xor	eax, eax
		cmp	[esp+arg_0], 0
		setnz	al
		mov	dword_67E19008,	eax
		retn
dbus_connection_set_change_sigpipe endp


; =============== S U B	R O U T	I N E =======================================


sub_67DC8220	proc near		; CODE XREF: sub_67DF6110+ADp
					; sub_67DF61D0+3Fp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

; FUNCTION CHUNK AT 67DF8200 SIZE 00000126 BYTES

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aProtected_ch_1 ; "protected_change_watch"
		mov	[esp+2Ch+Format], 2A6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+34h]
		test	eax, eax
		jz	short loc_67DC8287
		mov	[esp+2Ch+arg_4], esi
		mov	ebx, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_0], eax
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		jmp	loc_67DF8200
; ---------------------------------------------------------------------------

loc_67DC8287:				; CODE XREF: sub_67DC8220+4Dj
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DC8220	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC82A0	proc near		; CODE XREF: sub_67DF5740+49p
					; sub_67DF5740+F6p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_connec_0 ; "_dbus_connection_has_messages_to_send_u"...
		mov	[esp+2Ch+var_20], 230h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		cmp	dword ptr [ebx+18h], 0
		setnz	al
		add	esp, 28h
		pop	ebx
		retn
sub_67DC82A0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  43. dbus_connection_get_unix_fd

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_unix_fd
dbus_connection_get_unix_fd proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_connectio ; "dbus_connection_get_unix_fd"
		mov	[esp+2Ch+var_20], 1399h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DC8362
		mov	[esp+2Ch+var_1C], offset aDbus_connectio ; "dbus_connection_get_unix_fd"
		mov	[esp+2Ch+var_20], 139Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		test	eax, eax
		jz	short loc_67DC8396

loc_67DC835B:				; CODE XREF: dbus_connection_get_unix_fd+D3j
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DC8362:				; CODE XREF: dbus_connection_get_unix_fd+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 1399h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connectio ; "dbus_connection_get_unix_fd"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DC8396:				; CODE XREF: dbus_connection_get_unix_fd+69j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 139Ah
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionTran ; "connection->transport != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connectio ; "dbus_connection_get_unix_fd"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DC835B
dbus_connection_get_unix_fd endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC83D0	proc near		; CODE XREF: sub_67DE9510+1EAp
					; sub_67DEA6B0+3Dp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_30 ; "_dbus_connection_lock"
		mov	[esp+2Ch+var_28], 17Dh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset a_dbus_conne_30 ; "_dbus_connection_lock"
		mov	[esp+2Ch+Format], 17Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		add	esp, 28h
		pop	ebx
		retn
sub_67DC83D0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  40. dbus_connection_get_outgoing_unix_fds

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_outgoing_unix_fds
dbus_connection_get_outgoing_unix_fds proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_0 ; "dbus_connection_get_outgoing_unix_fds"
		mov	[esp+2Ch+Format], 181Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC8580
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_0 ; "dbus_connection_get_outgoing_unix_fds"
		mov	dword ptr [esp+2Ch+var_28], 181Dh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_0 ; "dbus_connection_get_outgoing_unix_fds"
		mov	[esp+2Ch+Format], 181Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+2Ch]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DEB650
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_0 ; "dbus_connection_get_outgoing_unix_fds"
		mov	dword ptr [esp+2Ch+var_28], 181Fh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_0 ; "dbus_connection_get_outgoing_unix_fds"
		mov	[esp+2Ch+Format], 181Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC8580:				; CODE XREF: dbus_connection_get_outgoing_unix_fds+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 181Bh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connect_0 ; "dbus_connection_get_outgoing_unix_fds"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_get_outgoing_unix_fds endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  73. dbus_connection_set_route_peer_messages

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_route_peer_messages
dbus_connection_set_route_peer_messages	proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_1 ; "dbus_connection_set_route_peer_messages"
		mov	[esp+2Ch+Format], 1501h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC86E0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_1 ; "dbus_connection_set_route_peer_messages"
		mov	dword ptr [esp+2Ch+var_28], 1503h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_1 ; "dbus_connection_set_route_peer_messages"
		mov	[esp+2Ch+Format], 1503h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 24h
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_1 ; "dbus_connection_set_route_peer_messages"
		mov	dword ptr [esp+2Ch+var_28], 1505h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_1 ; "dbus_connection_set_route_peer_messages"
		mov	[esp+2Ch+Format], 1505h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+arg_0], eax
		add	esp, 28h
		pop	ebx
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------
		align 10h

loc_67DC86E0:				; CODE XREF: dbus_connection_set_route_peer_messages+36j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 1501h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connect_1 ; "dbus_connection_set_route_peer_messages"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_connection_set_route_peer_messages	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  67. dbus_connection_set_dispatch_status_function

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_dispatch_status_function
dbus_connection_set_dispatch_status_function proc near ; CODE XREF: sub_67DCDAC0+FBp

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	eax, [esp+4Ch+arg_4]
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_8], edi
		mov	edi, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_24], eax
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connect_2 ; "dbus_connection_set_dispatch_status_fun"...
		mov	[esp+4Ch+Format], 1371h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC8890
		mov	[esp+4Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connect_2 ; "dbus_connection_set_dispatch_status_fun"...
		mov	dword ptr [esp+4Ch+var_48], 1373h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connect_2 ; "dbus_connection_set_dispatch_status_fun"...
		mov	[esp+4Ch+Format], 1373h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+68h]
		or	byte ptr [ebx+88h], 20h
		mov	esi, [ebx+6Ch]
		mov	[ebx+68h], ebp
		mov	[esp+4Ch+var_20], eax
		mov	eax, [esp+4Ch+var_24]
		mov	[ebx+6Ch], edi
		mov	[ebx+64h], eax
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connect_2 ; "dbus_connection_set_dispatch_status_fun"...
		mov	dword ptr [esp+4Ch+var_48], 137Bh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connect_2 ; "dbus_connection_set_dispatch_status_fun"...
		mov	[esp+4Ch+Format], 137Bh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		test	esi, esi
		jz	short loc_67DC88BD
		mov	eax, [esp+4Ch+var_20]
		mov	ebx, [esp+4Ch+var_10]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		mov	[esp+4Ch+arg_0], eax
		mov	eax, esi
		mov	esi, [esp+4Ch+var_C]
		add	esp, 4Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_67DC8890:				; CODE XREF: dbus_connection_set_dispatch_status_function+55j
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_3C], 1371h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connect_2 ; "dbus_connection_set_dispatch_status_fun"...
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0

loc_67DC88BD:				; CODE XREF: dbus_connection_set_dispatch_status_function+14Dj
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
dbus_connection_set_dispatch_status_function endp

; ---------------------------------------------------------------------------
		jmp	short dbus_connection_set_wakeup_main_function
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  76. dbus_connection_set_wakeup_main_function

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_wakeup_main_function
dbus_connection_set_wakeup_main_function proc near ; CODE XREF:	.text:67DC88D1j
					; sub_67DCDAC0+11Bp

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	eax, [esp+4Ch+arg_4]
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_8], edi
		mov	edi, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_24], eax
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connect_3 ; "dbus_connection_set_wakeup_main_functio"...
		mov	[esp+4Ch+Format], 1343h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC8A50
		mov	[esp+4Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connect_3 ; "dbus_connection_set_wakeup_main_functio"...
		mov	dword ptr [esp+4Ch+var_48], 1345h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connect_3 ; "dbus_connection_set_wakeup_main_functio"...
		mov	[esp+4Ch+Format], 1345h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+5Ch]
		or	byte ptr [ebx+88h], 20h
		mov	esi, [ebx+60h]
		mov	[ebx+5Ch], ebp
		mov	[esp+4Ch+var_20], eax
		mov	eax, [esp+4Ch+var_24]
		mov	[ebx+60h], edi
		mov	[ebx+58h], eax
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connect_3 ; "dbus_connection_set_wakeup_main_functio"...
		mov	dword ptr [esp+4Ch+var_48], 134Dh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connect_3 ; "dbus_connection_set_wakeup_main_functio"...
		mov	[esp+4Ch+Format], 134Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		test	esi, esi
		jz	short loc_67DC8A7D
		mov	eax, [esp+4Ch+var_20]
		mov	ebx, [esp+4Ch+var_10]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		mov	[esp+4Ch+arg_0], eax
		mov	eax, esi
		mov	esi, [esp+4Ch+var_C]
		add	esp, 4Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_67DC8A50:				; CODE XREF: dbus_connection_set_wakeup_main_function+55j
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_3C], 1343h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connect_3 ; "dbus_connection_set_wakeup_main_functio"...
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0

loc_67DC8A7D:				; CODE XREF: dbus_connection_set_wakeup_main_function+14Dj
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
dbus_connection_set_wakeup_main_function endp

; ---------------------------------------------------------------------------
		jmp	short dbus_connection_set_exit_on_disconnect
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  68. dbus_connection_set_exit_on_disconnect

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_exit_on_disconnect
dbus_connection_set_exit_on_disconnect proc near ; CODE	XREF: sub_67DC7A30+2AFp
					; .text:67DC8A91j

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_4 ; "dbus_connection_set_exit_on_disconnect"
		mov	[esp+2Ch+Format], 0C12h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC8BD5
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_4 ; "dbus_connection_set_exit_on_disconnect"
		mov	dword ptr [esp+2Ch+var_28], 0C14h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_4 ; "dbus_connection_set_exit_on_disconnect"
		mov	[esp+2Ch+Format], 0C14h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		or	eax, 20h
		test	esi, esi
		setnz	dl
		and	eax, 0FFFFFFFDh
		add	edx, edx
		or	eax, edx
		mov	[ebx+88h], al
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_4 ; "dbus_connection_set_exit_on_disconnect"
		mov	dword ptr [esp+2Ch+var_28], 0C16h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_4 ; "dbus_connection_set_exit_on_disconnect"
		mov	[esp+2Ch+Format], 0C16h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------

loc_67DC8BD5:				; CODE XREF: dbus_connection_set_exit_on_disconnect+3Bj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0C12h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connect_4 ; "dbus_connection_set_exit_on_disconnect"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_set_exit_on_disconnect endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DC8C10	proc near		; CODE XREF: sub_67DE94B0+4Ap
					; sub_67DE9510+1C9p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_29 ; "_dbus_connection_unlock"
		mov	[esp+2Ch+var_28], 188h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+var_1C], offset a_dbus_conne_29 ; "_dbus_connection_unlock"
		mov	[esp+2Ch+Format], 188h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+arg_0], eax
		add	esp, 28h
		pop	ebx
		jmp	sub_67DF1AD0
sub_67DC8C10	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  39. dbus_connection_get_outgoing_size

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_outgoing_size
dbus_connection_get_outgoing_size proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_5 ; "dbus_connection_get_outgoing_size"
		mov	[esp+2Ch+Format], 1807h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC8DC0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_5 ; "dbus_connection_get_outgoing_size"
		mov	dword ptr [esp+2Ch+var_28], 1809h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_5 ; "dbus_connection_get_outgoing_size"
		mov	[esp+2Ch+Format], 1809h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+2Ch]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DEB640
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_5 ; "dbus_connection_get_outgoing_size"
		mov	dword ptr [esp+2Ch+var_28], 180Bh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_5 ; "dbus_connection_get_outgoing_size"
		mov	[esp+2Ch+Format], 180Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC8DC0:				; CODE XREF: dbus_connection_get_outgoing_size+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 1807h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connect_5 ; "dbus_connection_get_outgoing_size"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_get_outgoing_size endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  37. dbus_connection_get_max_received_unix_fds

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_max_received_unix_fds
dbus_connection_get_max_received_unix_fds proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_6 ; "dbus_connection_get_max_received_unix_f"...
		mov	[esp+2Ch+Format], 17F0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC8F30
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_6 ; "dbus_connection_get_max_received_unix_f"...
		mov	dword ptr [esp+2Ch+var_28], 17F2h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_6 ; "dbus_connection_get_max_received_unix_f"...
		mov	[esp+2Ch+Format], 17F2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2DB0
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_6 ; "dbus_connection_get_max_received_unix_f"...
		mov	dword ptr [esp+2Ch+var_28], 17F4h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_6 ; "dbus_connection_get_max_received_unix_f"...
		mov	[esp+2Ch+Format], 17F4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC8F30:				; CODE XREF: dbus_connection_get_max_received_unix_fds+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 17F0h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connect_6 ; "dbus_connection_get_max_received_unix_f"...
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_get_max_received_unix_fds endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  72. dbus_connection_set_max_received_unix_fds

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_max_received_unix_fds
dbus_connection_set_max_received_unix_fds proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_7 ; "dbus_connection_set_max_received_unix_f"...
		mov	[esp+2Ch+Format], 17DDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC90A0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_7 ; "dbus_connection_set_max_received_unix_f"...
		mov	dword ptr [esp+2Ch+var_28], 17DFh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_7 ; "dbus_connection_set_max_received_unix_f"...
		mov	[esp+2Ch+Format], 17DFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF3050
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_7 ; "dbus_connection_set_max_received_unix_f"...
		mov	dword ptr [esp+2Ch+var_28], 17E2h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_7 ; "dbus_connection_set_max_received_unix_f"...
		mov	[esp+2Ch+Format], 17E2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------
		align 10h

loc_67DC90A0:				; CODE XREF: dbus_connection_set_max_received_unix_fds+3Bj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 17DDh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connect_7 ; "dbus_connection_set_max_received_unix_f"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_set_max_received_unix_fds endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  36. dbus_connection_get_max_received_size

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_max_received_size
dbus_connection_get_max_received_size proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_8 ; "dbus_connection_get_max_received_size"
		mov	[esp+2Ch+Format], 17C6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC9210
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_8 ; "dbus_connection_get_max_received_size"
		mov	dword ptr [esp+2Ch+var_28], 17C8h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_8 ; "dbus_connection_get_max_received_size"
		mov	[esp+2Ch+Format], 17C8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2DA0
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_8 ; "dbus_connection_get_max_received_size"
		mov	dword ptr [esp+2Ch+var_28], 17CAh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_8 ; "dbus_connection_get_max_received_size"
		mov	[esp+2Ch+Format], 17CAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC9210:				; CODE XREF: dbus_connection_get_max_received_size+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 17C6h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connect_8 ; "dbus_connection_get_max_received_size"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_get_max_received_size endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  71. dbus_connection_set_max_received_size

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_max_received_size
dbus_connection_set_max_received_size proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_9 ; "dbus_connection_set_max_received_size"
		mov	[esp+2Ch+Format], 17B3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC9380
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_9 ; "dbus_connection_set_max_received_size"
		mov	dword ptr [esp+2Ch+var_28], 17B5h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_9 ; "dbus_connection_set_max_received_size"
		mov	[esp+2Ch+Format], 17B5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF3090
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connect_9 ; "dbus_connection_set_max_received_size"
		mov	dword ptr [esp+2Ch+var_28], 17B8h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connect_9 ; "dbus_connection_set_max_received_size"
		mov	[esp+2Ch+Format], 17B8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------
		align 10h

loc_67DC9380:				; CODE XREF: dbus_connection_set_max_received_size+3Bj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 17B3h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connect_9 ; "dbus_connection_set_max_received_size"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_set_max_received_size endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  35. dbus_connection_get_max_message_unix_fds

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_max_message_unix_fds
dbus_connection_get_max_message_unix_fds proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_10 ; "dbus_connection_get_max_message_unix_fd"...
		mov	[esp+2Ch+Format], 178Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC94F0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_10 ; "dbus_connection_get_max_message_unix_fd"...
		mov	dword ptr [esp+2Ch+var_28], 1790h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_10 ; "dbus_connection_get_max_message_unix_fd"...
		mov	[esp+2Ch+Format], 1790h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF30D0
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_10 ; "dbus_connection_get_max_message_unix_fd"...
		mov	dword ptr [esp+2Ch+var_28], 1792h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_10 ; "dbus_connection_get_max_message_unix_fd"...
		mov	[esp+2Ch+Format], 1792h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC94F0:				; CODE XREF: dbus_connection_get_max_message_unix_fds+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 178Eh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_10 ; "dbus_connection_get_max_message_unix_fd"...
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_get_max_message_unix_fds endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  70. dbus_connection_set_max_message_unix_fds

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_max_message_unix_fds
dbus_connection_set_max_message_unix_fds proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_11 ; "dbus_connection_set_max_message_unix_fd"...
		mov	[esp+2Ch+Format], 177Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC9660
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_11 ; "dbus_connection_set_max_message_unix_fd"...
		mov	dword ptr [esp+2Ch+var_28], 177Dh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_11 ; "dbus_connection_set_max_message_unix_fd"...
		mov	[esp+2Ch+Format], 177Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF3110
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_11 ; "dbus_connection_set_max_message_unix_fd"...
		mov	dword ptr [esp+2Ch+var_28], 1780h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_11 ; "dbus_connection_set_max_message_unix_fd"...
		mov	[esp+2Ch+Format], 1780h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------
		align 10h

loc_67DC9660:				; CODE XREF: dbus_connection_set_max_message_unix_fds+3Bj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 177Bh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_11 ; "dbus_connection_set_max_message_unix_fd"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_set_max_message_unix_fds endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  34. dbus_connection_get_max_message_size

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_max_message_size
dbus_connection_get_max_message_size proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_12 ; "dbus_connection_get_max_message_size"
		mov	[esp+2Ch+Format], 1767h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC97D0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_12 ; "dbus_connection_get_max_message_size"
		mov	dword ptr [esp+2Ch+var_28], 1769h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_12 ; "dbus_connection_get_max_message_size"
		mov	[esp+2Ch+Format], 1769h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF30F0
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_12 ; "dbus_connection_get_max_message_size"
		mov	dword ptr [esp+2Ch+var_28], 176Bh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_12 ; "dbus_connection_get_max_message_size"
		mov	[esp+2Ch+Format], 176Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC97D0:				; CODE XREF: dbus_connection_get_max_message_size+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 1767h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_12 ; "dbus_connection_get_max_message_size"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_get_max_message_size endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  69. dbus_connection_set_max_message_size

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_max_message_size
dbus_connection_set_max_message_size proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_13 ; "dbus_connection_set_max_message_size"
		mov	[esp+2Ch+Format], 1754h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC9940
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_13 ; "dbus_connection_set_max_message_size"
		mov	dword ptr [esp+2Ch+var_28], 1756h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_13 ; "dbus_connection_set_max_message_size"
		mov	[esp+2Ch+Format], 1756h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF3130
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_13 ; "dbus_connection_set_max_message_size"
		mov	dword ptr [esp+2Ch+var_28], 1759h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_13 ; "dbus_connection_set_max_message_size"
		mov	[esp+2Ch+Format], 1759h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------
		align 10h

loc_67DC9940:				; CODE XREF: dbus_connection_set_max_message_size+3Bj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 1754h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_13 ; "dbus_connection_set_max_message_size"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_set_max_message_size endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  29. dbus_connection_get_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_data
dbus_connection_get_data proc near	; CODE XREF: sub_67DC72E0+41p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_connec_14 ; "dbus_connection_get_data"
		mov	[esp+2Ch+var_20], 172Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DC99F4
		mov	eax, [ebx+40h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_2C], offset dword_67E34028
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+44h]
		mov	dword ptr [esp+2Ch+var_28], eax
		call	sub_67DF8A00
		mov	esi, eax
		mov	eax, [ebx+40h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0

loc_67DC99EC:				; CODE XREF: dbus_connection_get_data+A3j
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DC99F4:				; CODE XREF: dbus_connection_get_data+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	[esp+2Ch+var_1C], 172Fh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_14 ; "dbus_connection_get_data"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DC99EC
dbus_connection_get_data endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  66. dbus_connection_set_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_data
dbus_connection_set_data proc near	; CODE XREF: sub_67DC72E0+8Cp

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset aDbus_connec_15 ; "dbus_connection_set_data"
		mov	[esp+3Ch+var_30], 1702h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC9B47
		mov	[esp+3Ch+var_2C], offset aDbus_connec_15 ; "dbus_connection_set_data"
		mov	[esp+3Ch+var_30], 1703h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		js	short loc_67DC9B10
		mov	eax, [ebx+40h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1A90
		lea	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_24], eax
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_28], eax
		mov	eax, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_34], esi
		mov	[esp+3Ch+var_3C], offset dword_67E34028
		mov	[esp+3Ch+var_2C], eax
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_30], eax
		lea	eax, [ebx+44h]
		mov	dword ptr [esp+3Ch+var_38], eax
		call	sub_67DF8AE0
		mov	esi, eax
		mov	eax, [ebx+40h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1AD0
		test	esi, esi
		jz	short loc_67DC9B05
		mov	eax, [esp+3Ch+var_10]
		test	eax, eax
		jz	short loc_67DC9B05
		mov	edx, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DC9B05:				; CODE XREF: dbus_connection_set_data+C2j
					; dbus_connection_set_data+CAj
		mov	eax, esi
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC9B10:				; CODE XREF: dbus_connection_set_data+6Fj
		mov	[esp+3Ch+var_2C], 1703h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aSlot0	; "slot	>= 0"

loc_67DC9B28:				; CODE XREF: dbus_connection_set_data+12Fj
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_connec_15 ; "dbus_connection_set_data"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DC9B47:				; CODE XREF: dbus_connection_set_data+3Bj
		mov	[esp+3Ch+var_2C], 1702h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNu_0 ; "connection != NULL"
		jmp	short loc_67DC9B28
dbus_connection_set_data endp

; ---------------------------------------------------------------------------
		jmp	short dbus_connection_free_data_slot
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  26. dbus_connection_free_data_slot

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_free_data_slot
dbus_connection_free_data_slot proc near ; CODE	XREF: sub_67DC72E0+53p
					; sub_67DC72E0+ACp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_connec_16 ; "dbus_connection_free_data_slot"
		mov	[esp+2Ch+var_20], 16DDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		test	edx, edx
		js	short loc_67DC9BC0
		mov	dword ptr [esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], offset dword_67E34028
		call	sub_67DF8C50
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DC9BC0:				; CODE XREF: dbus_connection_free_data_slot+38j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 16DDh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aSlot_p0 ; "*slot_p >=	0"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_16 ; "dbus_connection_free_data_slot"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_connection_free_data_slot endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  20. dbus_connection_allocate_data_slot

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_allocate_data_slot
dbus_connection_allocate_data_slot proc	near ; CODE XREF: sub_67DC72E0+1Ap

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], offset dword_67E34D74
		mov	[esp+1Ch+var_1C], offset dword_67E34028
		mov	[esp+1Ch+var_14], eax
		call	sub_67DF8DC0
		add	esp, 1Ch
		retn
dbus_connection_allocate_data_slot endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  48. dbus_connection_list_registered

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_connection_list_registered(int, char	*, int)
		public dbus_connection_list_registered
dbus_connection_list_registered	proc near

Str		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		push	esi
		push	ebx
		sub	esp, 40h
		mov	esi, [esp+4Ch+arg_0]
		mov	ebx, [esp+4Ch+arg_4]
		mov	edi, [esp+4Ch+arg_8]
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_17 ; "dbus_connection_list_registered"
		mov	[esp+4Ch+Format], 16A4h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DC9E11
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_17 ; "dbus_connection_list_registered"
		mov	[esp+4Ch+Format], 16A5h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DC9E30
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_17 ; "dbus_connection_list_registered"
		mov	[esp+4Ch+Format], 16A6h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		cmp	byte ptr [ebx],	2Fh
		jz	short loc_67DC9D11
		mov	dword ptr [esp+4Ch+var_3C], 16A6h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aParent_path0 ; "parent_path[0] == '/'"

loc_67DC9CF3:				; CODE XREF: dbus_connection_list_registered+1F9j
					; dbus_connection_list_registered+218j	...
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_17 ; "dbus_connection_list_registered"
		mov	[esp+4Ch+Str], eax ; char *
		call	sub_67DFB4E0
		xor	eax, eax

loc_67DC9D0A:				; CODE XREF: dbus_connection_list_registered+13Fj
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DC9D11:				; CODE XREF: dbus_connection_list_registered+A9j
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_17 ; "dbus_connection_list_registered"
		mov	[esp+4Ch+Format], 16A7h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DC9E50
		mov	[esp+4Ch+Str], ebx ; Str
		call	strlen
		lea	edx, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_44], edx
		mov	[esp+4Ch+Format], 0
		mov	[esp+4Ch+Str], ebx
		mov	dword ptr [esp+4Ch+var_48], eax
		call	sub_67DE8A80
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DC9D0A
		mov	[esp+4Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_17 ; "dbus_connection_list_registered"
		mov	dword ptr [esp+4Ch+var_48], 16ACh ; int
		mov	[esp+4Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esi+4]
		mov	[esp+4Ch+Str], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_17 ; "dbus_connection_list_registered"
		mov	[esp+4Ch+Format], 16ACh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Str], eax
		call	sub_67DFAE70
		or	byte ptr [esi+88h], 20h
		mov	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_44], edi
		mov	dword ptr [esp+4Ch+var_48], eax
		mov	eax, [esi+78h]
		mov	[esp+4Ch+Str], eax
		call	sub_67DE94B0
		mov	edx, [esp+4Ch+var_10]
		mov	[esp+4Ch+Str], edx
		mov	[esp+4Ch+var_20], eax
		call	dbus_free_string_array
		mov	eax, [esp+4Ch+var_20]
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DC9E11:				; CODE XREF: dbus_connection_list_registered+40j
		mov	dword ptr [esp+4Ch+var_3C], 16A4h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aConnectionNu_0 ; "connection != NULL"
		jmp	loc_67DC9CF3
; ---------------------------------------------------------------------------
		align 10h

loc_67DC9E30:				; CODE XREF: dbus_connection_list_registered+74j
		mov	dword ptr [esp+4Ch+var_3C], 16A5h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aParent_pathNul ; "parent_path	!= NULL"
		jmp	loc_67DC9CF3
; ---------------------------------------------------------------------------
		align 10h

loc_67DC9E50:				; CODE XREF: dbus_connection_list_registered+10Fj
		mov	dword ptr [esp+4Ch+var_3C], 16A7h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aChild_entriesN ; "child_entries != NULL"
		jmp	loc_67DC9CF3
dbus_connection_list_registered	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  38. dbus_connection_get_object_path_data

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_connection_get_object_path_data(int,	char *,	int)
		public dbus_connection_get_object_path_data
dbus_connection_get_object_path_data proc near

Str		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		push	esi
		push	ebx
		sub	esp, 30h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	edi, [esp+3Ch+arg_8]
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_18 ; "dbus_connection_get_object_path_data"
		mov	[esp+3Ch+Format], 167Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+Str], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCA060
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_18 ; "dbus_connection_get_object_path_data"
		mov	[esp+3Ch+Format], 1680h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+Str], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCA096
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_18 ; "dbus_connection_get_object_path_data"
		mov	[esp+3Ch+Format], 1681h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+Str], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DCA0B0
		mov	dword ptr [edi], 0
		mov	[esp+3Ch+Str], esi ; Str
		call	strlen
		lea	edx, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_34], edx
		mov	[esp+3Ch+Format], 0
		mov	[esp+3Ch+Str], esi
		mov	dword ptr [esp+3Ch+var_38], eax
		call	sub_67DE8A80
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DC9F57
		add	esp, 30h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DC9F57:				; CODE XREF: dbus_connection_get_object_path_data+DEj
		mov	[esp+3Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+3Ch+var_34], offset aDbus_connec_18 ; "dbus_connection_get_object_path_data"
		mov	dword ptr [esp+3Ch+var_38], 1688h ; int
		mov	[esp+3Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+3Ch+Str], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_18 ; "dbus_connection_get_object_path_data"
		mov	[esp+3Ch+Format], 1688h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Str], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	eax, [esp+3Ch+var_10]
		mov	dword ptr [esp+3Ch+var_38], eax
		mov	eax, [ebx+78h]
		mov	[esp+3Ch+Str], eax
		call	sub_67DE9F50
		mov	[edi], eax
		mov	[esp+3Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+3Ch+var_34], offset aDbus_connec_18 ; "dbus_connection_get_object_path_data"
		mov	dword ptr [esp+3Ch+var_38], 168Ch ; int
		mov	[esp+3Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_18 ; "dbus_connection_get_object_path_data"
		mov	[esp+3Ch+Format], 168Ch
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+3Ch+Str], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+3Ch+Str], eax
		call	sub_67DF1AD0
		mov	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+Str], eax
		call	dbus_free_string_array
		add	esp, 30h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCA060:				; CODE XREF: dbus_connection_get_object_path_data+40j
		mov	dword ptr [esp+3Ch+var_2C], 167Fh
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNu_0 ; "connection != NULL"

loc_67DCA078:				; CODE XREF: dbus_connection_get_object_path_data+23Ej
					; dbus_connection_get_object_path_data+258j
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_connec_18 ; "dbus_connection_get_object_path_data"
		mov	[esp+3Ch+Str], eax ; char *
		call	sub_67DFB4E0
		add	esp, 30h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DCA096:				; CODE XREF: dbus_connection_get_object_path_data+74j
		mov	dword ptr [esp+3Ch+var_2C], 1680h
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aPathNull ; "path != NULL"
		jmp	short loc_67DCA078
; ---------------------------------------------------------------------------

loc_67DCA0B0:				; CODE XREF: dbus_connection_get_object_path_data+A8j
		mov	dword ptr [esp+3Ch+var_2C], 1681h
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aData_pNull ; "data_p != NULL"
		jmp	short loc_67DCA078
dbus_connection_get_object_path_data endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  83. dbus_connection_unregister_object_path

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_connection_unregister_object_path(int, char *)
		public dbus_connection_unregister_object_path
dbus_connection_unregister_object_path proc near

Str		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	esi, [esp+3Ch+arg_0]
		mov	ebx, [esp+3Ch+arg_4]
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_19 ; "dbus_connection_unregister_object_path"
		mov	[esp+3Ch+Format], 165Eh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+Str], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCA274
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_19 ; "dbus_connection_unregister_object_path"
		mov	[esp+3Ch+Format], 165Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+Str], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCA291
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_19 ; "dbus_connection_unregister_object_path"
		mov	[esp+3Ch+Format], 1660h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+Str], 1
		call	sub_67DFAE70
		cmp	byte ptr [ebx],	2Fh
		jz	short loc_67DCA1B0
		mov	dword ptr [esp+3Ch+var_2C], 1660h
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aPath0	; "path[0] == '/'"

loc_67DCA18E:				; CODE XREF: dbus_connection_unregister_object_path+1BCj
					; dbus_connection_unregister_object_path+1D9j
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_connec_19 ; "dbus_connection_unregister_object_path"
		mov	[esp+3Ch+Str], eax ; char *
		call	sub_67DFB4E0
		xor	eax, eax

loc_67DCA1A5:				; CODE XREF: dbus_connection_unregister_object_path+10Aj
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCA1B0:				; CODE XREF: dbus_connection_unregister_object_path+A4j
		mov	[esp+3Ch+Str], ebx ; Str
		call	strlen
		lea	edx, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_34], edx
		mov	[esp+3Ch+Format], 0
		mov	[esp+3Ch+Str], ebx
		mov	dword ptr [esp+3Ch+var_38], eax
		call	sub_67DE8A80
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DCA1A5
		mov	[esp+3Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+3Ch+var_34], offset aDbus_connec_19 ; "dbus_connection_unregister_object_path"
		mov	dword ptr [esp+3Ch+var_38], 1665h ; int
		mov	[esp+3Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esi+4]
		mov	[esp+3Ch+Str], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_19 ; "dbus_connection_unregister_object_path"
		mov	[esp+3Ch+Format], 1665h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Str], eax
		call	sub_67DFAE70
		or	byte ptr [esi+88h], 20h
		mov	eax, [esp+3Ch+var_10]
		mov	dword ptr [esp+3Ch+var_38], eax
		mov	eax, [esi+78h]
		mov	[esp+3Ch+Str], eax
		call	sub_67DE9B40
		mov	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+Str], eax
		call	dbus_free_string_array
		add	esp, 34h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCA274:				; CODE XREF: dbus_connection_unregister_object_path+3Bj
		mov	dword ptr [esp+3Ch+var_2C], 165Eh
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNu_0 ; "connection != NULL"
		jmp	loc_67DCA18E
; ---------------------------------------------------------------------------

loc_67DCA291:				; CODE XREF: dbus_connection_unregister_object_path+6Fj
		mov	dword ptr [esp+3Ch+var_2C], 165Fh
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aPathNull ; "path != NULL"
		jmp	loc_67DCA18E
dbus_connection_unregister_object_path endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  80. dbus_connection_try_register_fallback

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_connection_try_register_fallback(int, char *, int, char, int)
		public dbus_connection_try_register_fallback
dbus_connection_try_register_fallback proc near

Str		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h
arg_10		= dword	ptr  14h

		push	edi
		push	esi
		push	ebx
		sub	esp, 40h
		mov	esi, [esp+4Ch+arg_0]
		mov	ebx, [esp+4Ch+arg_4]
		mov	edi, [esp+4Ch+arg_8]
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_20 ; "dbus_connection_try_register_fallback"
		mov	[esp+4Ch+Format], 1601h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCA514
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_20 ; "dbus_connection_try_register_fallback"
		mov	[esp+4Ch+Format], 1602h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCA531
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_20 ; "dbus_connection_try_register_fallback"
		mov	[esp+4Ch+Format], 1603h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		cmp	byte ptr [ebx],	2Fh
		jz	short loc_67DCA391
		mov	dword ptr [esp+4Ch+var_3C], 1603h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aPath0	; "path[0] == '/'"

loc_67DCA373:				; CODE XREF: dbus_connection_try_register_fallback+27Cj
					; dbus_connection_try_register_fallback+299j ...
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_20 ; "dbus_connection_try_register_fallback"
		mov	[esp+4Ch+Str], eax ; char *
		call	sub_67DFB4E0
		xor	eax, eax

loc_67DCA38A:				; CODE XREF: dbus_connection_try_register_fallback+13Fj
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DCA391:				; CODE XREF: dbus_connection_try_register_fallback+A9j
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_20 ; "dbus_connection_try_register_fallback"
		mov	[esp+4Ch+Format], 1604h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DCA550
		mov	[esp+4Ch+Str], ebx ; Str
		call	strlen
		lea	edx, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_44], edx
		mov	[esp+4Ch+Format], 0
		mov	[esp+4Ch+Str], ebx
		mov	dword ptr [esp+4Ch+var_48], eax
		call	sub_67DE8A80
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DCA38A
		mov	[esp+4Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_20 ; "dbus_connection_try_register_fallback"
		mov	dword ptr [esp+4Ch+var_48], 1609h ; int
		mov	[esp+4Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esi+4]
		mov	[esp+4Ch+Str], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_20 ; "dbus_connection_try_register_fallback"
		mov	[esp+4Ch+Format], 1609h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Str], eax
		call	sub_67DFAE70
		or	byte ptr [esi+88h], 20h
		mov	eax, [esp+4Ch+arg_10]
		mov	[esp+4Ch+Format], edi
		mov	dword ptr [esp+4Ch+var_48], 1
		mov	[esp+4Ch+var_38], eax
		mov	eax, dword ptr [esp+4Ch+arg_C]
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		mov	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_44], eax
		mov	eax, [esi+78h]
		mov	[esp+4Ch+Str], eax
		call	sub_67DE9D40
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_20 ; "dbus_connection_try_register_fallback"
		mov	dword ptr [esp+4Ch+var_48], 1610h ; int
		mov	[esp+4Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_20], eax
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_20 ; "dbus_connection_try_register_fallback"
		mov	[esp+4Ch+Format], 1610h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [esi+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+4Ch+Str], edx
		call	sub_67DFAE70
		mov	edx, [esi+4]
		and	byte ptr [esi+88h], 0DFh
		mov	[esp+4Ch+Str], edx
		call	sub_67DF1AD0
		mov	edx, [esp+4Ch+var_10]
		mov	[esp+4Ch+Str], edx
		call	dbus_free_string_array
		mov	eax, [esp+4Ch+var_20]
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DCA514:				; CODE XREF: dbus_connection_try_register_fallback+40j
		mov	dword ptr [esp+4Ch+var_3C], 1601h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aConnectionNu_0 ; "connection != NULL"
		jmp	loc_67DCA373
; ---------------------------------------------------------------------------

loc_67DCA531:				; CODE XREF: dbus_connection_try_register_fallback+74j
		mov	dword ptr [esp+4Ch+var_3C], 1602h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aPathNull ; "path != NULL"
		jmp	loc_67DCA373
; ---------------------------------------------------------------------------
		align 10h

loc_67DCA550:				; CODE XREF: dbus_connection_try_register_fallback+10Fj
		mov	dword ptr [esp+4Ch+var_3C], 1604h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aVtableNull ; "vtable != NULL"
		jmp	loc_67DCA373
dbus_connection_try_register_fallback endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  81. dbus_connection_try_register_object_path

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_connection_try_register_object_path(int, char *, int, char, int)
		public dbus_connection_try_register_object_path
dbus_connection_try_register_object_path proc near

Str		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h
arg_10		= dword	ptr  14h

		push	edi
		push	esi
		push	ebx
		sub	esp, 40h
		mov	esi, [esp+4Ch+arg_0]
		mov	ebx, [esp+4Ch+arg_4]
		mov	edi, [esp+4Ch+arg_8]
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_21 ; "dbus_connection_try_register_object_pat"...
		mov	[esp+4Ch+Format], 159Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCA7D4
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_21 ; "dbus_connection_try_register_object_pat"...
		mov	[esp+4Ch+Format], 159Eh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCA7F1
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_21 ; "dbus_connection_try_register_object_pat"...
		mov	[esp+4Ch+Format], 159Fh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		cmp	byte ptr [ebx],	2Fh
		jz	short loc_67DCA651
		mov	dword ptr [esp+4Ch+var_3C], 159Fh
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aPath0	; "path[0] == '/'"

loc_67DCA633:				; CODE XREF: dbus_connection_try_register_object_path+27Cj
					; dbus_connection_try_register_object_path+299j ...
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_21 ; "dbus_connection_try_register_object_pat"...
		mov	[esp+4Ch+Str], eax ; char *
		call	sub_67DFB4E0
		xor	eax, eax

loc_67DCA64A:				; CODE XREF: dbus_connection_try_register_object_path+13Fj
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DCA651:				; CODE XREF: dbus_connection_try_register_object_path+A9j
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_21 ; "dbus_connection_try_register_object_pat"...
		mov	[esp+4Ch+Format], 15A0h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DCA810
		mov	[esp+4Ch+Str], ebx ; Str
		call	strlen
		lea	edx, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_44], edx
		mov	[esp+4Ch+Format], 0
		mov	[esp+4Ch+Str], ebx
		mov	dword ptr [esp+4Ch+var_48], eax
		call	sub_67DE8A80
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DCA64A
		mov	[esp+4Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_21 ; "dbus_connection_try_register_object_pat"...
		mov	dword ptr [esp+4Ch+var_48], 15A5h ; int
		mov	[esp+4Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esi+4]
		mov	[esp+4Ch+Str], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_21 ; "dbus_connection_try_register_object_pat"...
		mov	[esp+4Ch+Format], 15A5h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Str], eax
		call	sub_67DFAE70
		or	byte ptr [esi+88h], 20h
		mov	eax, [esp+4Ch+arg_10]
		mov	[esp+4Ch+Format], edi
		mov	dword ptr [esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_38], eax
		mov	eax, dword ptr [esp+4Ch+arg_C]
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		mov	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_44], eax
		mov	eax, [esi+78h]
		mov	[esp+4Ch+Str], eax
		call	sub_67DE9D40
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_21 ; "dbus_connection_try_register_object_pat"...
		mov	dword ptr [esp+4Ch+var_48], 15ACh ; int
		mov	[esp+4Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_20], eax
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_21 ; "dbus_connection_try_register_object_pat"...
		mov	[esp+4Ch+Format], 15ACh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [esi+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+4Ch+Str], edx
		call	sub_67DFAE70
		mov	edx, [esi+4]
		and	byte ptr [esi+88h], 0DFh
		mov	[esp+4Ch+Str], edx
		call	sub_67DF1AD0
		mov	edx, [esp+4Ch+var_10]
		mov	[esp+4Ch+Str], edx
		call	dbus_free_string_array
		mov	eax, [esp+4Ch+var_20]
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DCA7D4:				; CODE XREF: dbus_connection_try_register_object_path+40j
		mov	dword ptr [esp+4Ch+var_3C], 159Dh
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aConnectionNu_0 ; "connection != NULL"
		jmp	loc_67DCA633
; ---------------------------------------------------------------------------

loc_67DCA7F1:				; CODE XREF: dbus_connection_try_register_object_path+74j
		mov	dword ptr [esp+4Ch+var_3C], 159Eh
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aPathNull ; "path != NULL"
		jmp	loc_67DCA633
; ---------------------------------------------------------------------------
		align 10h

loc_67DCA810:				; CODE XREF: dbus_connection_try_register_object_path+10Fj
		mov	dword ptr [esp+4Ch+var_3C], 15A0h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aVtableNull ; "vtable != NULL"
		jmp	loc_67DCA633
dbus_connection_try_register_object_path endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  56. dbus_connection_register_fallback

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_connection_register_fallback(int, char *, int, char)
		public dbus_connection_register_fallback
dbus_connection_register_fallback proc near

Str		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h

		sub	esp, 5Ch
		mov	[esp+5Ch+var_C], esi
		mov	esi, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_8], edi
		mov	edi, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_28], 0
		mov	[esp+5Ch+var_4], ebp
		mov	[esp+5Ch+var_30], 0
		mov	dword ptr [esp+5Ch+var_2C], 0
		mov	[esp+5Ch+var_24], 0
		mov	byte ptr [esp+5Ch+var_28], 1
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_22 ; "dbus_connection_register_fallback"
		mov	[esp+5Ch+Format], 1632h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+Str], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCAB01
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_22 ; "dbus_connection_register_fallback"
		mov	[esp+5Ch+Format], 1633h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+Str], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCAB20
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_22 ; "dbus_connection_register_fallback"
		mov	[esp+5Ch+Format], 1634h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+Str], 1
		call	sub_67DFAE70
		cmp	byte ptr [ebx],	2Fh
		jz	short loc_67DCA952
		mov	dword ptr [esp+5Ch+var_4C], 1634h
		mov	[esp+5Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aPath0	; "path[0] == '/'"

loc_67DCA925:				; CODE XREF: dbus_connection_register_fallback+2E9j
					; dbus_connection_register_fallback+33Aj
		mov	eax, off_67E19014
		xor	ebx, ebx
		mov	[esp+5Ch+var_58], offset aDbus_connec_22 ; "dbus_connection_register_fallback"
		mov	[esp+5Ch+Str], eax ; char *
		call	sub_67DFB4E0

loc_67DCA93C:				; CODE XREF: dbus_connection_register_fallback+17Ej
					; dbus_connection_register_fallback+2A8j ...
		mov	eax, ebx
		mov	esi, [esp+5Ch+var_C]
		mov	ebx, [esp+5Ch+var_10]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_67DCA952:				; CODE XREF: dbus_connection_register_fallback+DBj
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_22 ; "dbus_connection_register_fallback"
		mov	[esp+5Ch+Format], 1635h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+Str], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DCAB52
		mov	[esp+5Ch+Str], ebx ; Str
		call	strlen
		lea	edx, [esp+5Ch+var_20]
		mov	[esp+5Ch+Str], ebx
		xor	ebx, ebx
		mov	[esp+5Ch+Format], 0
		mov	[esp+5Ch+var_54], edx
		mov	[esp+5Ch+var_58], eax
		call	sub_67DE8A80
		test	eax, eax
		jz	short loc_67DCA93C
		mov	[esp+5Ch+Format], offset aLock ; "LOCK\n"
		lea	ebp, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_54], offset aDbus_connec_22 ; "dbus_connection_register_fallback"
		mov	[esp+5Ch+var_58], 163Ah	; int
		mov	[esp+5Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esi+4]
		mov	[esp+5Ch+Str], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_22 ; "dbus_connection_register_fallback"
		mov	[esp+5Ch+Format], 163Ah
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Str], eax
		call	sub_67DFAE70
		or	byte ptr [esi+88h], 20h
		mov	eax, dword ptr [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_48], ebp
		mov	[esp+5Ch+Format], edi
		mov	[esp+5Ch+var_58], 1
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_54], eax
		mov	eax, [esi+78h]
		mov	[esp+5Ch+Str], eax
		call	sub_67DE9D40
		mov	[esp+5Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+5Ch+var_54], offset aDbus_connec_22 ; "dbus_connection_register_fallback"
		mov	[esp+5Ch+var_58], 1641h	; int
		mov	[esp+5Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	ebx, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_22 ; "dbus_connection_register_fallback"
		mov	[esp+5Ch+Format], 1641h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+5Ch+Str], eax
		call	sub_67DFAE70
		mov	eax, [esi+4]
		and	byte ptr [esi+88h], 0DFh
		mov	[esp+5Ch+Str], eax
		call	sub_67DF1AD0
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+Str], eax
		call	dbus_free_string_array
		mov	[esp+5Ch+var_58], offset aOrg_freedesk_4 ; "org.freedesktop.DBus.Error.ObjectPathIn"...
		mov	[esp+5Ch+Str], ebp ; int
		call	dbus_error_has_name
		test	eax, eax
		jz	loc_67DCA93C
		mov	eax, dword ptr [esp+5Ch+var_2C]
		xor	ebx, ebx
		mov	[esp+5Ch+Str], offset aS_0 ; "%s\n"
		mov	[esp+5Ch+var_58], eax ;	char
		call	sub_67DFAD60
		mov	[esp+5Ch+Str], ebp
		call	dbus_error_free
		jmp	loc_67DCA93C
; ---------------------------------------------------------------------------

loc_67DCAB01:				; CODE XREF: dbus_connection_register_fallback+72j
		mov	dword ptr [esp+5Ch+var_4C], 1632h
		mov	[esp+5Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aConnectionNu_0 ; "connection != NULL"
		jmp	loc_67DCA925
; ---------------------------------------------------------------------------
		align 10h

loc_67DCAB20:				; CODE XREF: dbus_connection_register_fallback+A6j
		mov	eax, off_67E19014
		mov	dword ptr [esp+5Ch+var_4C], 1633h
		mov	[esp+5Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aPathNull ; "path != NULL"
		mov	[esp+5Ch+var_58], offset aDbus_connec_22 ; "dbus_connection_register_fallback"
		mov	[esp+5Ch+Str], eax ; char *
		call	sub_67DFB4E0
		jmp	loc_67DCA93C
; ---------------------------------------------------------------------------

loc_67DCAB52:				; CODE XREF: dbus_connection_register_fallback+150j
		mov	dword ptr [esp+5Ch+var_4C], 1635h
		mov	[esp+5Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aVtableNull ; "vtable != NULL"
		jmp	loc_67DCA925
dbus_connection_register_fallback endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  57. dbus_connection_register_object_path

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_connection_register_object_path(int,	char *,	int, char)
		public dbus_connection_register_object_path
dbus_connection_register_object_path proc near

Str		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h

		sub	esp, 5Ch
		mov	[esp+5Ch+var_C], esi
		mov	esi, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_8], edi
		mov	edi, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_28], 0
		mov	[esp+5Ch+var_4], ebp
		mov	[esp+5Ch+var_30], 0
		mov	dword ptr [esp+5Ch+var_2C], 0
		mov	[esp+5Ch+var_24], 0
		mov	byte ptr [esp+5Ch+var_28], 1
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_23 ; "dbus_connection_register_object_path"
		mov	[esp+5Ch+Format], 15CCh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+Str], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCAE41
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_23 ; "dbus_connection_register_object_path"
		mov	[esp+5Ch+Format], 15CDh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+Str], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCAE60
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_23 ; "dbus_connection_register_object_path"
		mov	[esp+5Ch+Format], 15CEh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+Str], 1
		call	sub_67DFAE70
		cmp	byte ptr [ebx],	2Fh
		jz	short loc_67DCAC92
		mov	dword ptr [esp+5Ch+var_4C], 15CEh
		mov	[esp+5Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aPath0	; "path[0] == '/'"

loc_67DCAC65:				; CODE XREF: dbus_connection_register_object_path+2E9j
					; dbus_connection_register_object_path+33Aj
		mov	eax, off_67E19014
		xor	ebx, ebx
		mov	[esp+5Ch+var_58], offset aDbus_connec_23 ; "dbus_connection_register_object_path"
		mov	[esp+5Ch+Str], eax ; char *
		call	sub_67DFB4E0

loc_67DCAC7C:				; CODE XREF: dbus_connection_register_object_path+17Ej
					; dbus_connection_register_object_path+2A8j ...
		mov	eax, ebx
		mov	esi, [esp+5Ch+var_C]
		mov	ebx, [esp+5Ch+var_10]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_67DCAC92:				; CODE XREF: dbus_connection_register_object_path+DBj
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_23 ; "dbus_connection_register_object_path"
		mov	[esp+5Ch+Format], 15CFh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+Str], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DCAE92
		mov	[esp+5Ch+Str], ebx ; Str
		call	strlen
		lea	edx, [esp+5Ch+var_20]
		mov	[esp+5Ch+Str], ebx
		xor	ebx, ebx
		mov	[esp+5Ch+Format], 0
		mov	[esp+5Ch+var_54], edx
		mov	[esp+5Ch+var_58], eax
		call	sub_67DE8A80
		test	eax, eax
		jz	short loc_67DCAC7C
		mov	[esp+5Ch+Format], offset aLock ; "LOCK\n"
		lea	ebp, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_54], offset aDbus_connec_23 ; "dbus_connection_register_object_path"
		mov	[esp+5Ch+var_58], 15D4h	; int
		mov	[esp+5Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esi+4]
		mov	[esp+5Ch+Str], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_23 ; "dbus_connection_register_object_path"
		mov	[esp+5Ch+Format], 15D4h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Str], eax
		call	sub_67DFAE70
		or	byte ptr [esi+88h], 20h
		mov	eax, dword ptr [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_48], ebp
		mov	[esp+5Ch+Format], edi
		mov	[esp+5Ch+var_58], 0
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_54], eax
		mov	eax, [esi+78h]
		mov	[esp+5Ch+Str], eax
		call	sub_67DE9D40
		mov	[esp+5Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+5Ch+var_54], offset aDbus_connec_23 ; "dbus_connection_register_object_path"
		mov	[esp+5Ch+var_58], 15DBh	; int
		mov	[esp+5Ch+Str], offset aRBuildWin32l_1 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	ebx, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_connec_23 ; "dbus_connection_register_object_path"
		mov	[esp+5Ch+Format], 15DBh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+5Ch+Str], eax
		call	sub_67DFAE70
		mov	eax, [esi+4]
		and	byte ptr [esi+88h], 0DFh
		mov	[esp+5Ch+Str], eax
		call	sub_67DF1AD0
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+Str], eax
		call	dbus_free_string_array
		mov	[esp+5Ch+var_58], offset aOrg_freedesk_4 ; "org.freedesktop.DBus.Error.ObjectPathIn"...
		mov	[esp+5Ch+Str], ebp ; int
		call	dbus_error_has_name
		test	eax, eax
		jz	loc_67DCAC7C
		mov	eax, dword ptr [esp+5Ch+var_2C]
		xor	ebx, ebx
		mov	[esp+5Ch+Str], offset aS_0 ; "%s\n"
		mov	[esp+5Ch+var_58], eax ;	char
		call	sub_67DFAD60
		mov	[esp+5Ch+Str], ebp
		call	dbus_error_free
		jmp	loc_67DCAC7C
; ---------------------------------------------------------------------------

loc_67DCAE41:				; CODE XREF: dbus_connection_register_object_path+72j
		mov	dword ptr [esp+5Ch+var_4C], 15CCh
		mov	[esp+5Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aConnectionNu_0 ; "connection != NULL"
		jmp	loc_67DCAC65
; ---------------------------------------------------------------------------
		align 10h

loc_67DCAE60:				; CODE XREF: dbus_connection_register_object_path+A6j
		mov	eax, off_67E19014
		mov	dword ptr [esp+5Ch+var_4C], 15CDh
		mov	[esp+5Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aPathNull ; "path != NULL"
		mov	[esp+5Ch+var_58], offset aDbus_connec_23 ; "dbus_connection_register_object_path"
		mov	[esp+5Ch+Str], eax ; char *
		call	sub_67DFB4E0
		jmp	loc_67DCAC7C
; ---------------------------------------------------------------------------

loc_67DCAE92:				; CODE XREF: dbus_connection_register_object_path+150j
		mov	dword ptr [esp+5Ch+var_4C], 15CFh
		mov	[esp+5Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aVtableNull ; "vtable != NULL"
		jmp	loc_67DCAC65
dbus_connection_register_object_path endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCAEB0	proc near		; DATA XREF: dbus_connection_dispatch+61Do
					; dbus_connection_dispatch+BD0o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B440
		mov	[esp+2Ch+var_1C], offset a_dbus_message_ ; "_dbus_message_filter_unref"
		mov	[esp+2Ch+var_20], 16Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aOld_value0 ; "old_value > 0"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		cmp	esi, 1
		jz	short loc_67DCAF10
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCAF10:				; CODE XREF: sub_67DCAEB0+4Bj
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	short loc_67DCAF1F
		mov	edx, [ebx+8]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DCAF1F:				; CODE XREF: sub_67DCAEB0+65j
		mov	[esp+2Ch+arg_0], ebx
		mov	esi, [esp+2Ch+var_4]
		mov	ebx, [esp+2Ch+var_8]
		add	esp, 2Ch
		jmp	dbus_free
sub_67DCAEB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCAF40	proc near		; DATA XREF: dbus_connection_dispatch+AC4o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		mov	[esp+2Ch+var_1C], offset a_dbus_messa_18 ; "_dbus_message_filter_ref"
		mov	[esp+2Ch+var_20], 15Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aOld_value0 ; "old_value > 0"
		test	eax, eax
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
sub_67DCAF40	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  55. dbus_connection_ref

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_ref
dbus_connection_ref proc near		; CODE XREF: sub_67DC7A30+20Ep
					; .text:67DD0411p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_connec_24 ; "dbus_connection_ref"
		mov	[esp+2Ch+var_20], 0A44h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DCB047
		mov	[esp+2Ch+var_1C], offset aDbus_connec_24 ; "dbus_connection_ref"
		mov	[esp+2Ch+var_20], 0A45h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		jnz	short loc_67DCB011
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460

loc_67DCB00A:				; CODE XREF: dbus_connection_ref+E4j
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DCB011:				; CODE XREF: dbus_connection_ref+70j
		mov	eax, off_67E19014
		xor	ebx, ebx
		mov	[esp+2Ch+var_1C], 0A45h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_24 ; "dbus_connection_ref"
		call	sub_67DFB4E0
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DCB047:				; CODE XREF: dbus_connection_ref+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0A44h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_24 ; "dbus_connection_ref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DCB00A
dbus_connection_ref endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCB080	proc near		; CODE XREF: sub_67DE9B40+E7p
					; sub_67DE9B40+1A7p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+var_20], 580h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+var_20], 581h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+var_20], 583h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
sub_67DCB080	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  64. dbus_connection_set_allow_anonymous

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_allow_anonymous
dbus_connection_set_allow_anonymous proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_25 ; "dbus_connection_set_allow_anonymous"
		mov	[esp+2Ch+Format], 14E5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCB270
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_25 ; "dbus_connection_set_allow_anonymous"
		mov	dword ptr [esp+2Ch+var_28], 14E7h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_25 ; "dbus_connection_set_allow_anonymous"
		mov	[esp+2Ch+Format], 14E7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2E20
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_25 ; "dbus_connection_set_allow_anonymous"
		mov	dword ptr [esp+2Ch+var_28], 14E9h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_25 ; "dbus_connection_set_allow_anonymous"
		mov	[esp+2Ch+Format], 14E9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------
		align 10h

loc_67DCB270:				; CODE XREF: dbus_connection_set_allow_anonymous+3Bj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 14E5h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_25 ; "dbus_connection_set_allow_anonymous"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_set_allow_anonymous endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  78. dbus_connection_set_windows_user_function

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_windows_user_function
dbus_connection_set_windows_user_function proc near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	dword ptr [esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_14], 0
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_26 ; "dbus_connection_set_windows_user_functi"...
		mov	[esp+3Ch+Format], 14BBh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCB420
		mov	[esp+3Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+3Ch+var_34], offset aDbus_connec_26 ; "dbus_connection_set_windows_user_functi"...
		mov	dword ptr [esp+3Ch+var_38], 14BDh ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_26 ; "dbus_connection_set_windows_user_functi"...
		mov	[esp+3Ch+Format], 14BDh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		lea	eax, [esp+3Ch+var_14]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+3Ch+var_28], eax
		lea	eax, [esp+3Ch+var_10]
		mov	dword ptr [esp+3Ch+var_2C], eax	; char
		mov	eax, [esp+3Ch+arg_C]
		mov	[esp+3Ch+Format], eax
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_34], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	dword ptr [esp+3Ch+var_38], eax
		mov	eax, [ebx+30h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF2DF0
		mov	[esp+3Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+3Ch+var_34], offset aDbus_connec_26 ; "dbus_connection_set_windows_user_functi"...
		mov	dword ptr [esp+3Ch+var_38], 14C1h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_26 ; "dbus_connection_set_windows_user_functi"...
		mov	[esp+3Ch+Format], 14C1h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1AD0
		mov	eax, [esp+3Ch+var_14]
		test	eax, eax
		jz	short loc_67DCB419
		mov	edx, dword ptr [esp+3Ch+var_10]
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DCB419:				; CODE XREF: dbus_connection_set_windows_user_function+15Ej
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCB420:				; CODE XREF: dbus_connection_set_windows_user_function+46j
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_2C], 14BBh
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_connec_26 ; "dbus_connection_set_windows_user_functi"...
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 38h
		pop	ebx
		retn
dbus_connection_set_windows_user_function endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  32. dbus_connection_get_is_authenticated

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_is_authenticated
dbus_connection_get_is_authenticated proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_27 ; "dbus_connection_get_is_authenticated"
		mov	[esp+2Ch+Format], 0B7Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCB590
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_27 ; "dbus_connection_get_is_authenticated"
		mov	dword ptr [esp+2Ch+var_28], 0B7Fh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_27 ; "dbus_connection_get_is_authenticated"
		mov	[esp+2Ch+Format], 0B7Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF4150
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_27 ; "dbus_connection_get_is_authenticated"
		mov	dword ptr [esp+2Ch+var_28], 0B81h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_27 ; "dbus_connection_get_is_authenticated"
		mov	[esp+2Ch+Format], 0B81h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCB590:				; CODE XREF: dbus_connection_get_is_authenticated+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 0B7Dh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_27 ; "dbus_connection_get_is_authenticated"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_get_is_authenticated endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  46. dbus_connection_get_windows_user

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_windows_user
dbus_connection_get_windows_user proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_28 ; "dbus_connection_get_windows_user"
		mov	[esp+2Ch+Format], 1489h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCB756
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_28 ; "dbus_connection_get_windows_user"
		mov	[esp+2Ch+Format], 148Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCB790
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		xor	edi, edi
		mov	[esp+2Ch+var_24], offset aDbus_connec_28 ; "dbus_connection_get_windows_user"
		mov	dword ptr [esp+2Ch+var_28], 148Ch ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_28 ; "dbus_connection_get_windows_user"
		mov	[esp+2Ch+Format], 148Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF4150
		test	eax, eax
		jnz	short loc_67DCB740

loc_67DCB6C5:				; CODE XREF: dbus_connection_get_windows_user+181j
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_28 ; "dbus_connection_get_windows_user"
		mov	dword ptr [esp+2Ch+var_28], 1498h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_28 ; "dbus_connection_get_windows_user"
		mov	[esp+2Ch+Format], 1498h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCB740:				; CODE XREF: dbus_connection_get_windows_user+F3j
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2E60
		mov	edi, eax
		jmp	loc_67DCB6C5
; ---------------------------------------------------------------------------

loc_67DCB756:				; CODE XREF: dbus_connection_get_windows_user+3Cj
		mov	dword ptr [esp+2Ch+var_1C], 1489h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"

loc_67DCB76E:				; CODE XREF: dbus_connection_get_windows_user+1D8j
		mov	eax, off_67E19014
		xor	edi, edi
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_28 ; "dbus_connection_get_windows_user"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCB790:				; CODE XREF: dbus_connection_get_windows_user+70j
		mov	dword ptr [esp+2Ch+var_1C], 148Ah
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aWindows_sid_pN ; "windows_sid_p != NULL"
		jmp	short loc_67DCB76E
dbus_connection_get_windows_user endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  75. dbus_connection_set_unix_user_function

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_unix_user_function
dbus_connection_set_unix_user_function proc near ; CODE	XREF: sub_67DCDAC0+13Bp

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	dword ptr [esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_14], 0
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_29 ; "dbus_connection_set_unix_user_function"
		mov	[esp+3Ch+Format], 1458h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCB920
		mov	[esp+3Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+3Ch+var_34], offset aDbus_connec_29 ; "dbus_connection_set_unix_user_function"
		mov	dword ptr [esp+3Ch+var_38], 145Ah ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_29 ; "dbus_connection_set_unix_user_function"
		mov	[esp+3Ch+Format], 145Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		lea	eax, [esp+3Ch+var_14]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+3Ch+var_28], eax
		lea	eax, [esp+3Ch+var_10]
		mov	dword ptr [esp+3Ch+var_2C], eax	; char
		mov	eax, [esp+3Ch+arg_C]
		mov	[esp+3Ch+Format], eax
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_34], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	dword ptr [esp+3Ch+var_38], eax
		mov	eax, [ebx+30h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF2DC0
		mov	[esp+3Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+3Ch+var_34], offset aDbus_connec_29 ; "dbus_connection_set_unix_user_function"
		mov	dword ptr [esp+3Ch+var_38], 145Eh ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_29 ; "dbus_connection_set_unix_user_function"
		mov	[esp+3Ch+Format], 145Eh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1AD0
		mov	eax, [esp+3Ch+var_14]
		test	eax, eax
		jz	short loc_67DCB919
		mov	edx, dword ptr [esp+3Ch+var_10]
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DCB919:				; CODE XREF: dbus_connection_set_unix_user_function+15Ej
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCB920:				; CODE XREF: dbus_connection_set_unix_user_function+46j
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_2C], 1458h
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_connec_29 ; "dbus_connection_set_unix_user_function"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 38h
		pop	ebx
		retn
dbus_connection_set_unix_user_function endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  28. dbus_connection_get_adt_audit_session_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_adt_audit_session_data
dbus_connection_get_adt_audit_session_data proc	near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	edi, [esp+3Ch+arg_8]
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_30 ; "dbus_connection_get_adt_audit_session_d"...
		mov	[esp+3Ch+Format], 1428h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCBB20
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_30 ; "dbus_connection_get_adt_audit_session_d"...
		mov	[esp+3Ch+Format], 1429h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCBB60
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_30 ; "dbus_connection_get_adt_audit_session_d"...
		mov	[esp+3Ch+Format], 142Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DCBB80
		mov	[esp+3Ch+Format], offset aLock ; "LOCK\n"
		xor	ebp, ebp
		mov	[esp+3Ch+var_34], offset aDbus_connec_30 ; "dbus_connection_get_adt_audit_session_d"...
		mov	dword ptr [esp+3Ch+var_38], 142Ch ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_30 ; "dbus_connection_get_adt_audit_session_d"...
		mov	[esp+3Ch+Format], 142Ch
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF4150
		test	eax, eax
		jnz	short loc_67DCBB03

loc_67DCBA8E:				; CODE XREF: dbus_connection_get_adt_audit_session_data+1B8j
		mov	[esp+3Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+3Ch+var_34], offset aDbus_connec_30 ; "dbus_connection_get_adt_audit_session_d"...
		mov	dword ptr [esp+3Ch+var_38], 1434h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+3Ch+var_2C], offset aDbus_connec_30 ; "dbus_connection_get_adt_audit_session_d"...
		mov	[esp+3Ch+Format], 1434h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1AD0
		add	esp, 2Ch
		mov	eax, ebp
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DCBB03:				; CODE XREF: dbus_connection_get_adt_audit_session_data+12Cj
		mov	[esp+3Ch+var_34], edi
		mov	dword ptr [esp+3Ch+var_38], esi
		mov	eax, [ebx+30h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF2EE0
		mov	ebp, eax
		jmp	loc_67DCBA8E
; ---------------------------------------------------------------------------
		align 10h

loc_67DCBB20:				; CODE XREF: dbus_connection_get_adt_audit_session_data+41j
		mov	dword ptr [esp+3Ch+var_2C], 1428h
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aConnectionNu_0 ; "connection != NULL"

loc_67DCBB38:				; CODE XREF: dbus_connection_get_adt_audit_session_data+218j
					; dbus_connection_get_adt_audit_session_data+238j
		mov	eax, off_67E19014
		xor	ebp, ebp
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_connec_30 ; "dbus_connection_get_adt_audit_session_d"...
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 2Ch
		mov	eax, ebp
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCBB60:				; CODE XREF: dbus_connection_get_adt_audit_session_data+75j
		mov	dword ptr [esp+3Ch+var_2C], 1429h
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aDataNull ; "data != NULL"
		jmp	short loc_67DCBB38
; ---------------------------------------------------------------------------
		align 10h

loc_67DCBB80:				; CODE XREF: dbus_connection_get_adt_audit_session_data+A9j
		mov	dword ptr [esp+3Ch+var_2C], 142Ah
		mov	[esp+3Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aData_sizeNull	; "data_size !=	NULL"
		jmp	short loc_67DCBB38
dbus_connection_get_adt_audit_session_data endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  44. dbus_connection_get_unix_process_id

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_unix_process_id
dbus_connection_get_unix_process_id proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_31 ; "dbus_connection_get_unix_process_id"
		mov	[esp+2Ch+Format], 1407h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCBD26
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_31 ; "dbus_connection_get_unix_process_id"
		mov	[esp+2Ch+Format], 1408h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCBD60
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		xor	edi, edi
		mov	[esp+2Ch+var_24], offset aDbus_connec_31 ; "dbus_connection_get_unix_process_id"
		mov	dword ptr [esp+2Ch+var_28], 140Ah ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_31 ; "dbus_connection_get_unix_process_id"
		mov	[esp+2Ch+Format], 140Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF4150
		test	eax, eax
		jnz	short loc_67DCBD10

loc_67DCBC95:				; CODE XREF: dbus_connection_get_unix_process_id+181j
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_31 ; "dbus_connection_get_unix_process_id"
		mov	dword ptr [esp+2Ch+var_28], 1412h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_31 ; "dbus_connection_get_unix_process_id"
		mov	[esp+2Ch+Format], 1412h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCBD10:				; CODE XREF: dbus_connection_get_unix_process_id+F3j
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2F70
		mov	edi, eax
		jmp	loc_67DCBC95
; ---------------------------------------------------------------------------

loc_67DCBD26:				; CODE XREF: dbus_connection_get_unix_process_id+3Cj
		mov	dword ptr [esp+2Ch+var_1C], 1407h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"

loc_67DCBD3E:				; CODE XREF: dbus_connection_get_unix_process_id+1D8j
		mov	eax, off_67E19014
		xor	edi, edi
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_31 ; "dbus_connection_get_unix_process_id"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCBD60:				; CODE XREF: dbus_connection_get_unix_process_id+70j
		mov	dword ptr [esp+2Ch+var_1C], 1408h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPidNull ; "pid != NULL"
		jmp	short loc_67DCBD3E
dbus_connection_get_unix_process_id endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  45. dbus_connection_get_unix_user

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_unix_user
dbus_connection_get_unix_user proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_32 ; "dbus_connection_get_unix_user"
		mov	[esp+2Ch+Format], 13E3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCBF40
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_32 ; "dbus_connection_get_unix_user"
		mov	[esp+2Ch+Format], 13E4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCBF78
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		xor	edi, edi
		mov	[esp+2Ch+var_24], offset aDbus_connec_32 ; "dbus_connection_get_unix_user"
		mov	dword ptr [esp+2Ch+var_28], 13E6h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_32 ; "dbus_connection_get_unix_user"
		mov	[esp+2Ch+Format], 13E6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF4150
		mov	edx, 1
		test	eax, eax
		jnz	loc_67DCBF20

loc_67DCBE7E:				; CODE XREF: dbus_connection_get_unix_user+1B8j
		mov	[esp+2Ch+var_2C], edx
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_32 ; "dbus_connection_get_unix_user"
		mov	[esp+2Ch+Format], 13EFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aResult ; "!result"
		call	sub_67DFAE70
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_32 ; "dbus_connection_get_unix_user"
		mov	dword ptr [esp+2Ch+var_28], 13F2h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_32 ; "dbus_connection_get_unix_user"
		mov	[esp+2Ch+Format], 13F2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCBF20:				; CODE XREF: dbus_connection_get_unix_user+F8j
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2FE0
		xor	edx, edx
		test	eax, eax
		mov	edi, eax
		setz	dl
		jmp	loc_67DCBE7E
; ---------------------------------------------------------------------------
		align 10h

loc_67DCBF40:				; CODE XREF: dbus_connection_get_unix_user+3Cj
		mov	dword ptr [esp+2Ch+var_1C], 13E3h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"

loc_67DCBF58:				; CODE XREF: dbus_connection_get_unix_user+210j
		mov	eax, off_67E19014
		xor	edi, edi
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_32 ; "dbus_connection_get_unix_user"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DCBF78:				; CODE XREF: dbus_connection_get_unix_user+70j
		mov	dword ptr [esp+2Ch+var_1C], 13E4h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aUidNull ; "uid != NULL"
		jmp	short loc_67DCBF58
dbus_connection_get_unix_user endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  42. dbus_connection_get_socket

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_socket
dbus_connection_get_socket proc	near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_33 ; "dbus_connection_get_socket"
		mov	[esp+2Ch+Format], 13B9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCC110
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_33 ; "dbus_connection_get_socket"
		mov	[esp+2Ch+Format], 13BAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	ecx, [ebx+30h]
		test	ecx, ecx
		jz	loc_67DCC147
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_33 ; "dbus_connection_get_socket"
		mov	dword ptr [esp+2Ch+var_28], 13BCh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_33 ; "dbus_connection_get_socket"
		mov	[esp+2Ch+Format], 13BCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	eax, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_28], eax
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF4F40
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_33 ; "dbus_connection_get_socket"
		mov	dword ptr [esp+2Ch+var_28], 13C1h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_33 ; "dbus_connection_get_socket"
		mov	[esp+2Ch+Format], 13C1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCC110:				; CODE XREF: dbus_connection_get_socket+37j
		mov	dword ptr [esp+2Ch+var_1C], 13B9h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"

loc_67DCC128:				; CODE XREF: dbus_connection_get_socket+1BFj
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_33 ; "dbus_connection_get_socket"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCC147:				; CODE XREF: dbus_connection_get_socket+6Ej
		mov	dword ptr [esp+2Ch+var_1C], 13BAh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionTran ; "connection->transport != NULL"
		jmp	short loc_67DCC128
dbus_connection_get_socket endp

; ---------------------------------------------------------------------------
		jmp	short dbus_connection_set_timeout_functions
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  74. dbus_connection_set_timeout_functions

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_timeout_functions
dbus_connection_set_timeout_functions proc near	; CODE XREF: .text:67DCC161j

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= byte ptr  14h
arg_14		= dword	ptr  18h

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_34 ; "dbus_connection_set_timeout_functions"
		mov	[esp+2Ch+Format], 131Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCC2C3
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_34 ; "dbus_connection_set_timeout_functions"
		mov	dword ptr [esp+2Ch+var_28], 1320h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_34 ; "dbus_connection_set_timeout_functions"
		mov	[esp+2Ch+Format], 1320h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	eax, [esp+2Ch+arg_14]
		mov	[esp+2Ch+var_18], eax
		mov	eax, dword ptr [esp+2Ch+arg_10]
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+Format], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_24], eax
		mov	eax, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_28], eax
		mov	eax, [ebx+38h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1540
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_34 ; "dbus_connection_set_timeout_functions"
		mov	dword ptr [esp+2Ch+var_28], 1327h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_34 ; "dbus_connection_set_timeout_functions"
		mov	[esp+2Ch+Format], 1327h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCC2C3:				; CODE XREF: dbus_connection_set_timeout_functions+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 131Eh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_34 ; "dbus_connection_set_timeout_functions"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_set_timeout_functions endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  77. dbus_connection_set_watch_functions

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_set_watch_functions
dbus_connection_set_watch_functions proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= byte ptr  14h
arg_14		= dword	ptr  18h

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_35 ; "dbus_connection_set_watch_functions"
		mov	[esp+2Ch+Format], 12DFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCC453
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_35 ; "dbus_connection_set_watch_functions"
		mov	dword ptr [esp+2Ch+var_28], 12E1h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_35 ; "dbus_connection_set_watch_functions"
		mov	[esp+2Ch+Format], 12E1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	eax, [esp+2Ch+arg_14]
		mov	[esp+2Ch+var_18], eax
		mov	eax, dword ptr [esp+2Ch+arg_10]
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+Format], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_24], eax
		mov	eax, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_28], eax
		mov	eax, [ebx+34h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF7E20
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_35 ; "dbus_connection_set_watch_functions"
		mov	dword ptr [esp+2Ch+var_28], 12E8h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_35 ; "dbus_connection_set_watch_functions"
		mov	[esp+2Ch+Format], 12E8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCC453:				; CODE XREF: dbus_connection_set_watch_functions+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 12DFh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_35 ; "dbus_connection_set_watch_functions"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_set_watch_functions endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCC490	proc near		; CODE XREF: dbus_connection_preallocate_send+ADp
					; sub_67DD11B0+69p ...

Size		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 20h
		mov	[esp+2Ch+var_1C], offset a_dbus_connecti ; "_dbus_connection_preallocate_send_unloc"...
		mov	[esp+2Ch+var_20], 77Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+Size],	eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_connecti ; "_dbus_connection_preallocate_send_unloc"...
		mov	[esp+2Ch+var_20], 780h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+Size],	1
		call	sub_67DFAE70
		mov	[esp+2Ch+Size],	0Ch ; Size
		call	dbus_malloc
		test	eax, eax
		mov	esi, eax
		mov	edi, eax
		jz	short loc_67DCC551
		mov	edx, [ebx+74h]
		test	edx, edx
		jz	short loc_67DCC560
		lea	eax, [ebx+74h]
		mov	[esp+2Ch+Size],	eax
		call	sub_67DFB970
		mov	[esi+4], eax
		mov	dword ptr [eax+8], 0

loc_67DCC529:				; CODE XREF: sub_67DCC490+E1j
		mov	eax, [ebx+74h]
		test	eax, eax
		jz	short loc_67DCC580
		lea	eax, [ebx+74h]
		mov	[esp+2Ch+Size],	eax
		call	sub_67DFB970
		mov	edx, [ebx+2Ch]
		mov	[esi+8], eax
		mov	[eax+8], edx

loc_67DCC544:				; CODE XREF: sub_67DCC490+100j
		mov	eax, [eax+8]
		mov	[esp+2Ch+Size],	eax
		call	sub_67DEB690
		mov	[esi], ebx

loc_67DCC551:				; CODE XREF: sub_67DCC490+7Bj
					; sub_67DCC490+EDj
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCC560:				; CODE XREF: sub_67DCC490+82j
		mov	[esp+2Ch+Size],	0
		call	sub_67DFBB70
		test	eax, eax
		mov	[esi+4], eax
		jnz	short loc_67DCC529

loc_67DCC573:				; CODE XREF: sub_67DCC490+10Dj
		mov	[esp+2Ch+Size],	esi
		xor	edi, edi
		call	dbus_free
		jmp	short loc_67DCC551
; ---------------------------------------------------------------------------
		align 10h

loc_67DCC580:				; CODE XREF: sub_67DCC490+9Ej
		mov	eax, [ebx+2Ch]
		mov	[esp+2Ch+Size],	eax
		call	sub_67DFBB70
		test	eax, eax
		mov	[esi+8], eax
		jnz	short loc_67DCC544
		mov	eax, [esi+4]
		mov	[esp+2Ch+Size],	eax
		call	sub_67DFBED0
		jmp	short loc_67DCC573
sub_67DCC490	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  52. dbus_connection_preallocate_send

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_preallocate_send
dbus_connection_preallocate_send proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_36 ; "dbus_connection_preallocate_send"
		mov	[esp+2Ch+Format], 0C27h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCC6C7
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_36 ; "dbus_connection_preallocate_send"
		mov	dword ptr [esp+2Ch+var_28], 0C29h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_36 ; "dbus_connection_preallocate_send"
		mov	[esp+2Ch+Format], 0C29h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		or	byte ptr [ebx+88h], 20h
		call	sub_67DCC490
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_36 ; "dbus_connection_preallocate_send"
		mov	dword ptr [esp+2Ch+var_28], 0C2Eh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_36 ; "dbus_connection_preallocate_send"
		mov	[esp+2Ch+Format], 0C2Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0

loc_67DCC6BF:				; CODE XREF: dbus_connection_preallocate_send+156j
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCC6C7:				; CODE XREF: dbus_connection_preallocate_send+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 0C27h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_36 ; "dbus_connection_preallocate_send"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DCC6BF
dbus_connection_preallocate_send endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCC700	proc near		; CODE XREF: dbus_connection_borrow_message+252p
					; dbus_connection_pop_message+162p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch

		push	ebx
		mov	ebx, eax
		sub	esp, 28h
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_9 ; "_dbus_connection_release_dispatch"
		mov	[esp+2Ch+Format], 0FFDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+Format], offset aLockingDispatc ; "locking dispatch_mutex\n"
		mov	[esp+2Ch+var_24], offset a_dbus_connec_9 ; "_dbus_connection_release_dispatch"
		mov	[esp+2Ch+var_28], 0FFFh	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		xor	eax, eax
		cmp	dword ptr [ebx+80h], 0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_9 ; "_dbus_connection_release_dispatch"
		mov	[esp+2Ch+Format], 1002h
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionDi_0 ; "connection->dispatch_acquired"
		call	sub_67DFAE70
		mov	eax, [ebx+0Ch]
		mov	dword ptr [ebx+80h], 0
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1BC0
		mov	[esp+2Ch+Format], offset aUnlockingDispa ; "unlocking dispatch_mutex\n"
		mov	[esp+2Ch+var_24], offset a_dbus_connec_9 ; "_dbus_connection_release_dispatch"
		mov	[esp+2Ch+var_28], 1007h	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		add	esp, 28h
		pop	ebx
		retn
sub_67DCC700	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCC7F0	proc near		; CODE XREF: sub_67DD0960+1BDp
					; sub_67DD1870+103p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch

		push	ebx
		mov	ebx, eax
		sub	esp, 28h
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_20 ; "_dbus_connection_release_io_path"
		mov	[esp+2Ch+Format], 46Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+Format], offset aLockingIo_path ; "locking io_path_mutex\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_20 ; "_dbus_connection_release_io_path"
		mov	[esp+2Ch+var_28], 46Fh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		xor	eax, eax
		cmp	dword ptr [ebx+84h], 0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_20 ; "_dbus_connection_release_io_path"
		mov	[esp+2Ch+Format], 472h
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionIo_p ; "connection->io_path_acquired"
		call	sub_67DFAE70
		mov	eax, [ebx+84h]
		mov	[esp+2Ch+Format], offset aStartConnect_0 ; "start connection->io_path_acquired = %d"...
		mov	[esp+2Ch+var_24], offset a_dbus_conne_20 ; "_dbus_connection_release_io_path"
		mov	[esp+2Ch+var_28], 475h ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+14h]
		mov	dword ptr [ebx+84h], 0
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1BC0
		mov	[esp+2Ch+Format], offset aUnlockingIo_pa ; "unlocking io_path_mutex\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_20 ; "_dbus_connection_release_io_path"
		mov	[esp+2Ch+var_28], 47Ah ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		add	esp, 28h
		pop	ebx
		retn
sub_67DCC7F0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  27. dbus_connection_free_preallocated_send

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_free_preallocated_send
dbus_connection_free_preallocated_send proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_connec_37 ; "dbus_connection_free_preallocated_send"
		mov	[esp+2Ch+var_20], 0C40h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCCA20
		mov	[esp+2Ch+var_1C], offset aDbus_connec_37 ; "dbus_connection_free_preallocated_send"
		mov	[esp+2Ch+var_20], 0C41h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCCA53
		mov	[esp+2Ch+var_1C], offset aDbus_connec_37 ; "dbus_connection_free_preallocated_send"
		mov	[esp+2Ch+var_20], 0C42h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		cmp	[ebx], esi
		jz	short loc_67DCC9E8
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0C42h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionPrea ; "connection == preallocated->connection"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_37 ; "dbus_connection_free_preallocated_send"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DCC9E2:				; CODE XREF: dbus_connection_free_preallocated_send+170j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCC9E8:				; CODE XREF: dbus_connection_free_preallocated_send+A3j
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFBED0
		mov	eax, [ebx+8]
		mov	eax, [eax+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DEB6E0
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFBED0
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_free
; ---------------------------------------------------------------------------
		align 10h

loc_67DCCA20:				; CODE XREF: dbus_connection_free_preallocated_send+3Bj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0C40h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_37 ; "dbus_connection_free_preallocated_send"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCCA53:				; CODE XREF: dbus_connection_free_preallocated_send+6Fj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0C41h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPreallocatedNu ; "preallocated != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_37 ; "dbus_connection_free_preallocated_send"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DCC9E2
dbus_connection_free_preallocated_send endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  22. dbus_connection_can_send_type

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_can_send_type
dbus_connection_can_send_type proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_connec_38 ; "dbus_connection_can_send_type"
		mov	[esp+2Ch+var_20], 0BEAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	ecx, [esp+2Ch+arg_0]
		test	ecx, ecx
		jz	short loc_67DCCAF0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DFC1D0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DCCAE4
		xor	eax, eax
		cmp	ebx, 68h
		setnz	al

loc_67DCCAE4:				; CODE XREF: dbus_connection_can_send_type+4Aj
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCCAF0:				; CODE XREF: dbus_connection_can_send_type+3Aj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0BEAh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_38 ; "dbus_connection_can_send_type"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_connection_can_send_type endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  41. dbus_connection_get_server_id

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_server_id
dbus_connection_get_server_id proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_39 ; "dbus_connection_get_server_id"
		mov	[esp+2Ch+Format], 0BCCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCCC63
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_39 ; "dbus_connection_get_server_id"
		mov	dword ptr [esp+2Ch+var_28], 0BCEh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_39 ; "dbus_connection_get_server_id"
		mov	[esp+2Ch+Format], 0BCEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF3320
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFAA60
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_39 ; "dbus_connection_get_server_id"
		mov	dword ptr [esp+2Ch+var_28], 0BD0h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_39 ; "dbus_connection_get_server_id"
		mov	[esp+2Ch+Format], 0BD0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0

loc_67DCCC5B:				; CODE XREF: dbus_connection_get_server_id+162j
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCCC63:				; CODE XREF: dbus_connection_get_server_id+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 0BCCh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_39 ; "dbus_connection_get_server_id"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DCCC5B
dbus_connection_get_server_id endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  31. dbus_connection_get_is_anonymous

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_is_anonymous
dbus_connection_get_is_anonymous proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_40 ; "dbus_connection_get_is_anonymous"
		mov	[esp+2Ch+Format], 0B9Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCCDD0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_40 ; "dbus_connection_get_is_anonymous"
		mov	dword ptr [esp+2Ch+var_28], 0BA1h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_40 ; "dbus_connection_get_is_anonymous"
		mov	[esp+2Ch+Format], 0BA1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF3370
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_40 ; "dbus_connection_get_is_anonymous"
		mov	dword ptr [esp+2Ch+var_28], 0BA3h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_40 ; "dbus_connection_get_is_anonymous"
		mov	[esp+2Ch+Format], 0BA3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCCDD0:				; CODE XREF: dbus_connection_get_is_anonymous+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 0B9Fh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_40 ; "dbus_connection_get_is_anonymous"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_get_is_anonymous endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCCE10	proc near		; DATA XREF: sub_67DCDAC0+266o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], 0
		mov	eax, [eax+2Ch]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_67DE49F0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	dbus_message_unref
sub_67DCCE10	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DCCE40	proc near		; CODE XREF: sub_67DD4800+1A2p
					; sub_67DEE790+215p

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		call	sub_67DF80A0
		test	eax, eax
		mov	ebp, eax
		jz	loc_67DCD260
		call	sub_67DF1630
		xor	edi, edi
		xor	esi, esi
		test	eax, eax
		mov	[esp+5Ch+var_30], eax
		jz	loc_67DCD270
		mov	[esp+5Ch+var_54], offset loc_67DD4590
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], 2
		call	sub_67DF9F80
		test	eax, eax
		mov	edi, eax
		jz	loc_67DCD270
		mov	[esp+5Ch+var_5C], 90h ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		mov	esi, eax
		jz	loc_67DCD270
		lea	eax, [eax+4]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF2CC0
		mov	edx, [ebx+4]
		test	edx, edx
		jz	loc_67DCD270
		lea	eax, [ebx+10h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF2CC0
		mov	eax, [ebx+10h]
		test	eax, eax
		jz	loc_67DCD270
		lea	eax, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF2CC0
		mov	ecx, [ebx+8]
		test	ecx, ecx
		jz	loc_67DCD270
		lea	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1CA0
		mov	edx, [ebx+0Ch]
		test	edx, edx
		jz	loc_67DCD270
		lea	eax, [ebx+14h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1CA0
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	loc_67DCD270
		lea	eax, [ebx+40h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF2CC0
		mov	ecx, [ebx+40h]
		test	ecx, ecx
		jz	loc_67DCD270
		mov	[esp+5Ch+var_54], offset aDisconnected ; "Disconnected"
		mov	[esp+5Ch+var_58], offset aOrg_freedesk_5 ; "org.freedesktop.DBus.Local"
		mov	[esp+5Ch+var_5C], offset aOrgFreedeskt_0 ; "/org/freedesktop/DBus/Local"
		call	dbus_message_new_signal
		test	eax, eax
		mov	[esp+5Ch+var_20], eax
		jz	loc_67DCD270
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFBB70
		mov	[esp+5Ch+var_28], 0
		mov	[esp+5Ch+var_2C], 0
		test	eax, eax
		mov	[esp+5Ch+var_24], eax
		jz	loc_67DCD18B
		call	sub_67DEB740
		test	eax, eax
		mov	[esp+5Ch+var_2C], eax
		jz	loc_67DCD285
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67DE9030
		test	eax, eax
		mov	[esp+5Ch+var_28], eax
		jz	loc_67DCD18B
		mov	edx, dword_67E19008
		test	edx, edx
		jnz	loc_67DCD116

loc_67DCCFAC:				; CODE XREF: sub_67DCCE40+2DBj
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E0B460
		mov	eax, [esp+5Ch+arg_0]
		mov	[ebx+34h], ebp
		mov	[ebx+4Ch], edi
		mov	dword ptr [ebx+3Ch], 0
		mov	[ebx+30h], eax
		mov	eax, [esp+5Ch+var_30]
		mov	dword ptr [ebx+70h], 1
		mov	[ebx+38h], eax
		mov	eax, [esp+5Ch+var_2C]
		mov	[ebx+2Ch], eax
		mov	eax, [esp+5Ch+var_28]
		and	byte ptr [ebx+88h], 0E0h
		mov	[ebx+78h], eax
		mov	eax, dword_67E19028
		mov	[ebx+8Ch], eax
		lea	eax, [ebx+44h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF8990
		mov	eax, [esp+5Ch+var_24]
		mov	dword ptr [ebx+50h], 1
		mov	[ebx+54h], eax
		mov	[esp+5Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+5Ch+var_54], offset a_dbus_conne_28 ; "_dbus_connection_new_for_transport"
		mov	[esp+5Ch+var_58], 544h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+5Ch+var_4C], offset a_dbus_conne_28 ; "_dbus_connection_new_for_transport"
		mov	[esp+5Ch+Format], 544h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_58], ebx
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF3FB0
		test	eax, eax
		jz	loc_67DCD120
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF3150
		mov	[esp+5Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+5Ch+var_54], offset a_dbus_conne_28 ; "_dbus_connection_new_for_transport"
		mov	[esp+5Ch+var_58], 54Fh ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+5Ch+var_4C], offset a_dbus_conne_28 ; "_dbus_connection_new_for_transport"
		mov	[esp+5Ch+Format], 54Fh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1AD0

loc_67DCD10C:				; CODE XREF: sub_67DCCE40+401j
		add	esp, 4Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DCD116:				; CODE XREF: sub_67DCCE40+166j
		call	nullsub_1
		jmp	loc_67DCCFAC
; ---------------------------------------------------------------------------

loc_67DCD120:				; CODE XREF: sub_67DCCE40+24Fj
		mov	[esp+5Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+5Ch+var_54], offset a_dbus_conne_28 ; "_dbus_connection_new_for_transport"
		mov	[esp+5Ch+var_58], 548h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+5Ch+var_4C], offset a_dbus_conne_28 ; "_dbus_connection_new_for_transport"
		mov	[esp+5Ch+Format], 548h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1AD0

loc_67DCD18B:				; CODE XREF: sub_67DCCE40+133j
					; sub_67DCCE40+158j ...
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_unref
		mov	ebx, [esp+5Ch+var_24]
		test	ebx, ebx
		jz	short loc_67DCD1AB
		mov	eax, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFBED0

loc_67DCD1AB:				; CODE XREF: sub_67DCCE40+35Dj
					; sub_67DCCE40+440j
		test	esi, esi
		jz	short loc_67DCD1F9
		lea	eax, [esi+14h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1C50
		lea	eax, [esi+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1C50
		lea	eax, [esi+4]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF2C60
		lea	eax, [esi+10h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF2C60
		lea	eax, [esi+8]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF2C60
		lea	eax, [esi+40h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF2C60
		mov	[esp+5Ch+var_5C], esi
		call	dbus_free

loc_67DCD1F9:				; CODE XREF: sub_67DCCE40+36Dj
		test	edi, edi
		jz	short loc_67DCD205
		mov	[esp+5Ch+var_5C], edi
		call	sub_67DFA0D0

loc_67DCD205:				; CODE XREF: sub_67DCCE40+3BBj
		test	ebp, ebp
		jz	short loc_67DCD211
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67DF8150

loc_67DCD211:				; CODE XREF: sub_67DCCE40+3C7j
		mov	eax, [esp+5Ch+var_30]
		test	eax, eax
		jz	short loc_67DCD225
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1790

loc_67DCD225:				; CODE XREF: sub_67DCCE40+3D7j
		mov	ebp, [esp+5Ch+var_2C]
		test	ebp, ebp
		jz	short loc_67DCD239
		mov	eax, [esp+5Ch+var_2C]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DEB6E0

loc_67DCD239:				; CODE XREF: sub_67DCCE40+3EBj
		mov	edi, [esp+5Ch+var_28]
		xor	esi, esi
		test	edi, edi
		jz	loc_67DCD10C
		mov	eax, [esp+5Ch+var_28]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DEA440
		add	esp, 4Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCD260:				; CODE XREF: sub_67DCCE40+10j
		xor	edi, edi
		xor	esi, esi
		mov	[esp+5Ch+var_30], 0
		lea	esi, [esi+0]

loc_67DCD270:				; CODE XREF: sub_67DCCE40+25j
					; sub_67DCCE40+4Bj ...
		mov	[esp+5Ch+var_2C], 0
		mov	[esp+5Ch+var_28], 0
		jmp	loc_67DCD1AB
; ---------------------------------------------------------------------------

loc_67DCD285:				; CODE XREF: sub_67DCCE40+144j
		mov	[esp+5Ch+var_28], 0
		jmp	loc_67DCD18B
sub_67DCCE40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCD2A0	proc near		; CODE XREF: sub_67DCE450+18Cp
					; sub_67DF5CD0+21Dp

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
Format		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	esi, [esp+6Ch+arg_0]
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_connec_4 ; "_dbus_connection_message_sent"
		mov	ebx, dword ptr [esp+6Ch+arg_4]
		mov	[esp+6Ch+Format], 268h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		lea	edi, [esi+18h]
		shr	al, 5
		and	eax, 1
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_6C], edi
		call	sub_67DFB920
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_connec_4 ; "_dbus_connection_message_sent"
		mov	[esp+6Ch+Format], 270h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aLinkNull ; "link != NULL"
		test	eax, eax
		mov	[esp+6Ch+var_20], eax
		setnz	al
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+var_20]
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_connec_4 ; "_dbus_connection_message_sent"
		mov	[esp+6Ch+Format], 271h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aLinkDataMessag ; "link->data == message"
		cmp	[eax+8], ebx
		setz	al
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_6C], edi
		lea	edi, [esi+74h]
		mov	[esp+6Ch+var_68], eax
		call	sub_67DFB8B0
		mov	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_6C], edi
		mov	[esp+6Ch+var_68], eax
		call	sub_67DFB750
		mov	ebp, [esi+24h]
		sub	ebp, 1
		mov	[esi+24h], ebp
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_signature
		mov	[esp+6Ch+var_6C], ebx
		mov	[esp+6Ch+var_30], eax
		call	dbus_message_get_member
		mov	[esp+6Ch+var_34], offset aNoMember ; "no member"
		test	eax, eax
		jz	short loc_67DCD3B0
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_member
		mov	[esp+6Ch+var_34], eax

loc_67DCD3B0:				; CODE XREF: sub_67DCD2A0+102j
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_interface
		mov	[esp+6Ch+var_38], offset aNoInterface ;	"no interface"
		test	eax, eax
		jz	short loc_67DCD3D0
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_interface
		mov	[esp+6Ch+var_38], eax

loc_67DCD3D0:				; CODE XREF: sub_67DCD2A0+122j
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_path
		mov	edx, offset aNoPath ; "no path"
		test	eax, eax
		jz	short loc_67DCD3EB
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_path
		mov	edx, eax

loc_67DCD3EB:				; CODE XREF: sub_67DCD2A0+13Fj
		mov	[esp+6Ch+var_3C], edx
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_type
		mov	[esp+6Ch+var_6C], eax
		call	dbus_message_type_to_string
		mov	ecx, [esp+6Ch+var_30]
		mov	edx, [esp+6Ch+var_3C]
		mov	[esp+6Ch+var_40], ebp
		mov	[esp+6Ch+var_44], esi
		mov	[esp+6Ch+var_48], ecx
		mov	ecx, [esp+6Ch+var_34]
		mov	[esp+6Ch+var_54], edx
		mov	[esp+6Ch+var_58], eax
		mov	dword ptr [esp+6Ch+var_5C], ebx	; char
		mov	[esp+6Ch+var_4C], ecx
		mov	ecx, [esp+6Ch+var_38]
		mov	[esp+6Ch+Format], offset aMessagePSSSSSR ; "Message %p (%s %s %s %s '%s') removed f"...
		mov	[esp+6Ch+var_64], offset a_dbus_connec_4 ; "_dbus_connection_message_sent"
		mov	[esp+6Ch+var_68], 287h ; int
		mov	[esp+6Ch+var_50], ecx
		mov	[esp+6Ch+var_6C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_64], eax
		mov	eax, [esi+2Ch]
		mov	[esp+6Ch+var_6C], ebx
		mov	[esp+6Ch+var_68], eax
		call	sub_67DE49F0
		mov	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_6C], edi
		mov	[esp+6Ch+var_68], eax
		call	sub_67DFB750
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_unref
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DCD2A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCD490	proc near		; CODE XREF: sub_67DF5CD0+A0p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

; FUNCTION CHUNK AT 67DFB930 SIZE 00000013 BYTES

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_conne_35 ; "_dbus_connection_get_message_to_send"
		mov	[esp+2Ch+var_20], 255h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		add	ebx, 18h
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	loc_67DFB930
sub_67DCD490	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCD4E0	proc near		; CODE XREF: sub_67DCE450+395p
					; sub_67DEAFA0+51p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_5 ; "_dbus_connection_queue_synthesized_mess"...
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+Format], 219h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+1Ch]
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], esi
		call	sub_67DFB700
		mov	eax, [ebx+28h]
		mov	edx, [ebx+58h]
		add	eax, 1
		test	edx, edx
		mov	[ebx+28h], eax
		jz	short loc_67DCD54C
		mov	eax, [ebx+5Ch]
		mov	[esp+2Ch+var_2C], eax
		call	edx
		mov	eax, [ebx+28h]

loc_67DCD54C:				; CODE XREF: sub_67DCD4E0+5Fj
		mov	[esp+2Ch+var_18], ebx
		mov	[esp+2Ch+var_14], eax
		mov	eax, [esi+8]
		mov	[esp+2Ch+Format], offset aSynthesizedMes ; "Synthesized	message	%p added to incomin"...
		mov	[esp+2Ch+var_24], offset a_dbus_connec_5 ; "_dbus_connection_queue_synthesized_mess"...
		mov	[esp+2Ch+var_28], 222h ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DCD4E0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  47. dbus_connection_has_messages_to_send

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_has_messages_to_send
dbus_connection_has_messages_to_send proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_41 ; "dbus_connection_has_messages_to_send"
		mov	[esp+2Ch+Format], 242h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCD6F0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_41 ; "dbus_connection_has_messages_to_send"
		mov	dword ptr [esp+2Ch+var_28], 244h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_41 ; "dbus_connection_has_messages_to_send"
		mov	[esp+2Ch+Format], 244h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		or	eax, 20h
		mov	[ebx+88h], al
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_0 ; "_dbus_connection_has_messages_to_send_u"...
		mov	[esp+2Ch+Format], 230h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	ecx, [ebx+18h]
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_41 ; "dbus_connection_has_messages_to_send"
		mov	dword ptr [esp+2Ch+var_28], 246h ; int
		test	ecx, ecx
		setnz	al
		movzx	esi, al
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_41 ; "dbus_connection_has_messages_to_send"
		mov	[esp+2Ch+Format], 246h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCD6F0:				; CODE XREF: dbus_connection_has_messages_to_send+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 242h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_41 ; "dbus_connection_has_messages_to_send"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_has_messages_to_send endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCD730	proc near		; CODE XREF: dbus_connection_pop_message+124p
					; dbus_connection_dispatch+1C6p

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		mov	esi, eax
		push	ebx
		sub	esp, 4Ch
		mov	dword ptr [esp+5Ch+var_4C], offset a_dbus_conne_11 ; "_dbus_connection_pop_message_link_unloc"...
		mov	[esp+5Ch+Format], 0F44h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		xor	eax, eax
		cmp	dword ptr [esi+20h], 0
		mov	dword ptr [esp+5Ch+var_4C], offset a_dbus_conne_11 ; "_dbus_connection_pop_message_link_unloc"...
		mov	[esp+5Ch+Format], 0F46h
		setz	al
		xor	ebx, ebx
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionMess ; "connection->message_borrowed == NULL"
		call	sub_67DFAE70
		mov	eax, [esi+28h]
		test	eax, eax
		jle	loc_67DCD8E2
		lea	eax, [esi+1Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFB970
		mov	edi, [esi+28h]
		sub	edi, 1
		mov	[esi+28h], edi
		mov	ebx, eax
		mov	eax, [eax+8]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_get_signature
		mov	[esp+5Ch+var_20], eax
		mov	eax, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_get_member
		mov	[esp+5Ch+var_24], offset aNoMember ; "no member"
		test	eax, eax
		jz	short loc_67DCD7F7
		mov	eax, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_get_member
		mov	[esp+5Ch+var_24], eax

loc_67DCD7F7:				; CODE XREF: sub_67DCD730+B6j
		mov	eax, [ebx+8]
		mov	ebp, offset aNoInterface ; "no interface"
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_get_interface
		test	eax, eax
		jz	short loc_67DCD818
		mov	eax, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_get_interface
		mov	ebp, eax

loc_67DCD818:				; CODE XREF: sub_67DCD730+D9j
		mov	eax, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_get_path
		mov	edx, offset aNoPath ; "no path"
		test	eax, eax
		jz	short loc_67DCD839
		mov	eax, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_get_path
		mov	edx, eax

loc_67DCD839:				; CODE XREF: sub_67DCD730+FAj
		mov	eax, [ebx+8]
		mov	[esp+5Ch+var_28], edx
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_get_type
		mov	[esp+5Ch+var_5C], eax
		call	dbus_message_type_to_string
		mov	ecx, [esp+5Ch+var_20]
		mov	edx, [esp+5Ch+var_28]
		mov	[esp+5Ch+var_30], edi
		mov	[esp+5Ch+var_40], ebp
		mov	[esp+5Ch+var_38], ecx
		mov	ecx, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_44], edx
		mov	[esp+5Ch+var_34], esi
		mov	[esp+5Ch+var_48], eax
		mov	[esp+5Ch+var_3C], ecx
		mov	eax, [ebx+8]
		mov	[esp+5Ch+Format], offset aMessagePSSSS_0 ; "Message %p (%s %s %s %s '%s') removed f"...
		mov	[esp+5Ch+var_54], offset a_dbus_conne_11 ; "_dbus_connection_pop_message_link_unloc"...
		mov	[esp+5Ch+var_58], 0F5Ch	; int
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		mov	[esp+5Ch+var_5C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		movzx	eax, byte ptr [esi+88h]
		mov	edi, [ebx+8]
		mov	dword ptr [esp+5Ch+var_4C], offset aCheck_disconne ; "check_disconnected_message_arrived_unlo"...
		mov	[esp+5Ch+Format], 0EAEh
		shr	al, 5
		and	eax, 1
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	ebp, [esi+54h]
		test	ebp, ebp
		jz	short loc_67DCD8F0

loc_67DCD8E2:				; CODE XREF: sub_67DCD730+76j
					; sub_67DCD730+1DAj ...
		add	esp, 4Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCD8F0:				; CODE XREF: sub_67DCD730+1B0j
		mov	[esp+5Ch+var_54], offset aDisconnected ; "Disconnected"
		mov	[esp+5Ch+var_58], offset aOrg_freedesk_5 ; "org.freedesktop.DBus.Local"
		mov	[esp+5Ch+var_5C], edi
		call	dbus_message_is_signal
		test	eax, eax
		jz	short loc_67DCD8E2
		or	byte ptr [esi+88h], 8
		jmp	short loc_67DCD8E2
sub_67DCD730	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  33. dbus_connection_get_is_connected

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_is_connected
dbus_connection_get_is_connected proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_42 ; "dbus_connection_get_is_connected"
		mov	[esp+2Ch+Format], 0B67h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCDA82
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_42 ; "dbus_connection_get_is_connected"
		mov	dword ptr [esp+2Ch+var_28], 0B69h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_42 ; "dbus_connection_get_is_connected"
		mov	[esp+2Ch+Format], 0B69h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		or	eax, 20h
		mov	[ebx+88h], al
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_1 ; "_dbus_connection_get_is_connected_unloc"...
		mov	[esp+2Ch+Format], 0B51h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2D80
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_42 ; "dbus_connection_get_is_connected"
		mov	dword ptr [esp+2Ch+var_28], 0B6Bh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_42 ; "dbus_connection_get_is_connected"
		mov	[esp+2Ch+Format], 0B6Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCDA82:				; CODE XREF: dbus_connection_get_is_connected+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 0B67h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_42 ; "dbus_connection_get_is_connected"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_get_is_connected endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCDAC0	proc near		; CODE XREF: dbus_connection_unref+128j
					; sub_67DCDF20+86j ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		mov	edi, eax
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		mov	[esp+4Ch+Format], offset aFinalizingConn ; "Finalizing connection %p\n"
		mov	[esp+4Ch+var_44], offset a_dbus_connec_2 ; "_dbus_connection_last_unref"
		mov	[esp+4Ch+var_48], 0A62h	; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+var_4C], edi
		call	sub_67E0ABB0
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_connec_2 ; "_dbus_connection_last_unref"
		mov	[esp+4Ch+Format], 0A64h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset a_dbus_atomic_g ; "_dbus_atomic_get (&connection->refcount"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [edi+30h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF2D80
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_connec_2 ; "_dbus_connection_last_unref"
		mov	[esp+4Ch+Format], 0A69h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset a_dbus_transpor ; "!_dbus_transport_get_is_connected (conn"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		xor	eax, eax
		cmp	dword ptr [edi+7Ch], 0
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_connec_2 ; "_dbus_connection_last_unref"
		mov	[esp+4Ch+Format], 0A6Ah
		setz	al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionServ ; "connection->server_guid == NULL"
		call	sub_67DFAE70
		mov	eax, [edi+78h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DEA410
		mov	[esp+4Ch+Format], 0
		mov	[esp+4Ch+var_44], 0
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], edi
		call	dbus_connection_set_dispatch_status_function
		mov	[esp+4Ch+Format], 0
		mov	[esp+4Ch+var_44], 0
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], edi
		call	dbus_connection_set_wakeup_main_function
		mov	[esp+4Ch+Format], 0
		mov	[esp+4Ch+var_44], 0
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], edi
		call	dbus_connection_set_unix_user_function
		mov	eax, [edi+34h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF8150
		mov	eax, [edi+38h]
		mov	dword ptr [edi+34h], 0
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1790
		lea	eax, [edi+44h]
		mov	dword ptr [edi+38h], 0
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF9160
		lea	eax, [edi+3Ch]
		mov	[esp+4Ch+var_20], eax
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFB910
		test	eax, eax
		mov	ebx, eax
		jnz	loc_67DCDC61
		jmp	loc_67DCDCE7
; ---------------------------------------------------------------------------
		align 10h

loc_67DCDC50:				; CODE XREF: sub_67DCDAC0+1FDj
		test	esi, esi
		mov	dword ptr [ebx+8], 0
		mov	ebx, esi
		jz	loc_67DCDCE7

loc_67DCDC61:				; CODE XREF: sub_67DCDAC0+182j
					; sub_67DCDAC0+221j
		mov	esi, [ebx+4]
		xor	eax, eax
		mov	ebp, [ebx+8]
		cmp	esi, [edi+3Ch]
		setz	al
		sub	eax, 1
		mov	dword ptr [ebp+4], 0
		and	esi, eax
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67E0B440
		xor	edx, edx
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_message_ ; "_dbus_message_filter_unref"
		mov	[esp+4Ch+Format], 16Ah
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aOld_value0 ; "old_value > 0"
		test	eax, eax
		setnle	dl
		mov	[esp+4Ch+var_24], eax
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		mov	eax, [esp+4Ch+var_24]
		cmp	eax, 1
		jnz	short loc_67DCDC50
		mov	eax, [ebp+0Ch]
		test	eax, eax
		jz	short loc_67DCDCCE
		mov	edx, [ebp+8]
		mov	[esp+4Ch+var_4C], edx
		call	eax

loc_67DCDCCE:				; CODE XREF: sub_67DCDAC0+204j
		mov	[esp+4Ch+var_4C], ebp
		call	dbus_free
		test	esi, esi
		mov	dword ptr [ebx+8], 0
		mov	ebx, esi
		jnz	loc_67DCDC61

loc_67DCDCE7:				; CODE XREF: sub_67DCDAC0+188j
					; sub_67DCDAC0+19Bj
		mov	eax, [esp+4Ch+var_20]
		lea	ebx, [edi+18h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFBC90
		mov	eax, [edi+78h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DEA440
		mov	eax, [edi+4Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFA0D0
		mov	eax, [esp+4Ch+var_20]
		mov	dword ptr [edi+4Ch], 0
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFBC90
		mov	[esp+4Ch+var_4C], ebx
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_48], offset sub_67DCCE10
		call	sub_67DFB9D0
		mov	[esp+4Ch+var_4C], ebx
		lea	ebx, [edi+1Ch]
		call	sub_67DFBC90
		mov	[esp+4Ch+var_44], 0
		mov	[esp+4Ch+var_48], offset dbus_message_unref
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DFB9D0
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DFBC90
		mov	eax, [edi+2Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DEB6E0
		mov	eax, [edi+30h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF3240
		mov	eax, [edi+54h]
		test	eax, eax
		jz	short loc_67DCDD91
		mov	eax, [eax+8]
		mov	[esp+4Ch+var_4C], eax
		call	dbus_message_unref
		mov	eax, [edi+54h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFBED0

loc_67DCDD91:				; CODE XREF: sub_67DCDAC0+2B9j
		lea	eax, [edi+74h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFBC90
		lea	eax, [edi+0Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1C50
		lea	eax, [edi+14h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1C50
		lea	eax, [edi+10h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF2C60
		lea	eax, [edi+8]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF2C60
		lea	eax, [edi+40h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF2C60
		lea	eax, [edi+4]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF2C60
		mov	[esp+4Ch+var_4C], edi
		call	dbus_free
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DCDAC0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  82. dbus_connection_unref

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_unref
dbus_connection_unref proc near		; CODE XREF: sub_67DC7A30+3DAp
					; sub_67DCF230+1E1p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_connec_43 ; "dbus_connection_unref"
		mov	[esp+2Ch+var_20], 0ACEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCDEE0
		mov	[esp+2Ch+var_1C], offset aDbus_connec_43 ; "dbus_connection_unref"
		mov	[esp+2Ch+var_20], 0ACFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		jz	short loc_67DCDE98
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0ACFh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_43 ; "dbus_connection_unref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DCDE93:				; CODE XREF: dbus_connection_unref+B3j
					; dbus_connection_unref+E7j
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DCDE98:				; CODE XREF: dbus_connection_unref+74j
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B440
		cmp	eax, 1
		jnz	short loc_67DCDE93
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2D80
		test	eax, eax
		jz	short loc_67DCDF12
		test	byte ptr [ebx+88h], 1
		mov	eax, offset aMostLikelyTheA ; "Most likely, the	application called unr"...
		jnz	short loc_67DCDEC7
		mov	eax, offset aMostLikelyTh_0 ; "Most likely, the	application was	suppos"...

loc_67DCDEC7:				; CODE XREF: dbus_connection_unref+D0j
		mov	dword ptr [esp+2Ch+var_28], eax	; char
		mov	[esp+2Ch+var_2C], offset aTheLastReferen ; "The	last reference on a connection was "...
		call	sub_67DFB4E0
		jmp	short loc_67DCDE93
; ---------------------------------------------------------------------------
		align 10h

loc_67DCDEE0:				; CODE XREF: dbus_connection_unref+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0ACEh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_43 ; "dbus_connection_unref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DCDF12:				; CODE XREF: dbus_connection_unref+C2j
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DCDAC0
dbus_connection_unref endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCDF20	proc near		; CODE XREF: sub_67DF4150+6Cp
					; sub_67DF4150+639p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_connec_8 ; "_dbus_connection_unref_unlocked"
		mov	[esp+2Ch+var_20], 595h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_connec_8 ; "_dbus_connection_unref_unlocked"
		mov	[esp+2Ch+var_20], 597h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B440
		cmp	eax, 1
		jz	short loc_67DCDFA0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCDFA0:				; CODE XREF: sub_67DCDF20+74j
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DCDAC0
sub_67DCDF20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCDFB0	proc near		; CODE XREF: sub_67DF6110+59p
					; sub_67DF6110+7Dp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aProtected_ch_1 ; "protected_change_watch"
		mov	[esp+2Ch+var_20], 2A6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+34h]
		test	eax, eax
		jz	short loc_67DCE017
		mov	[esp+2Ch+arg_4], esi
		mov	ebx, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_0], eax
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		jmp	sub_67DF8330
; ---------------------------------------------------------------------------

loc_67DCE017:				; CODE XREF: sub_67DCDFB0+4Dj
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DCDFB0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	[esp+20h], ebx
		mov	ebx, [esp+30h]
		mov	[esp+24h], esi
		mov	esi, [esp+34h]
		mov	[esp+28h], edi
		mov	edi, [esp+38h]
		mov	dword ptr [esp+10h], offset aProtected_chan ; "protected_change_timeout"
		mov	dword ptr [esp+0Ch], 322h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_67DCE0A7
		mov	[esp+38h], edi
		mov	ebx, [esp+20h]
		mov	[esp+34h], esi
		mov	edi, [esp+28h]
		mov	[esp+30h], eax
		mov	esi, [esp+24h]
		add	esp, 2Ch
		jmp	sub_67DF1460
; ---------------------------------------------------------------------------

loc_67DCE0A7:				; CODE XREF: .text:67DCE085j
		mov	ebx, [esp+20h]
		mov	esi, [esp+24h]
		mov	edi, [esp+28h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCE0C0	proc near		; CODE XREF: sub_67DCE140+1BFp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aProtected_chan ; "protected_change_timeout"
		mov	[esp+2Ch+var_20], 322h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_67DCE127
		mov	[esp+2Ch+arg_4], esi
		mov	ebx, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_0], eax
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		jmp	sub_67DF1820
; ---------------------------------------------------------------------------

loc_67DCE127:				; CODE XREF: sub_67DCE0C0+4Dj
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DCE0C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCE140	proc near		; CODE XREF: sub_67DF4C20+94p

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
Format		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	esi, [esp+6Ch+arg_0]
		mov	ebx, [esp+6Ch+arg_4]
		mov	eax, [esi+30h]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DF4150
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_conne_33 ; "_dbus_connection_queue_received_message"...
		mov	[esp+6Ch+Format], 1E0h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset a_dbus_transp_9 ; "_dbus_transport_get_is_authenticated (c"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		lea	eax, [esi+1Ch]
		mov	[esp+6Ch+var_68], ebx
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFB700
		mov	ebx, [ebx+8]
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_reply_serial
		test	eax, eax
		jnz	loc_67DCE2B0

loc_67DCE1AC:				; CODE XREF: sub_67DCE140+183j
					; sub_67DCE140+1A5j
		mov	edi, [esi+28h]
		mov	eax, [esi+58h]
		add	edi, 1
		test	eax, eax
		mov	[esi+28h], edi
		jz	short loc_67DCE1C7
		mov	edx, [esi+5Ch]
		mov	[esp+6Ch+var_6C], edx
		call	eax
		mov	edi, [esi+28h]

loc_67DCE1C7:				; CODE XREF: sub_67DCE140+7Aj
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_reply_serial
		mov	[esp+6Ch+var_6C], ebx
		mov	[esp+6Ch+var_20], eax
		call	dbus_message_get_signature
		mov	[esp+6Ch+var_6C], ebx
		mov	[esp+6Ch+var_24], eax
		call	dbus_message_get_member
		mov	[esp+6Ch+var_28], offset aNoMember ; "no member"
		test	eax, eax
		jz	short loc_67DCE1FF
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_member
		mov	[esp+6Ch+var_28], eax

loc_67DCE1FF:				; CODE XREF: sub_67DCE140+B1j
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_interface
		mov	[esp+6Ch+var_2C], offset aNoInterface ;	"no interface"
		test	eax, eax
		jz	short loc_67DCE21F
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_interface
		mov	[esp+6Ch+var_2C], eax

loc_67DCE21F:				; CODE XREF: sub_67DCE140+D1j
		mov	[esp+6Ch+var_6C], ebx
		mov	ebp, offset aNoPath ; "no path"
		call	dbus_message_get_path
		test	eax, eax
		jz	short loc_67DCE23A
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_path
		mov	ebp, eax

loc_67DCE23A:				; CODE XREF: sub_67DCE140+EEj
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_get_type
		mov	[esp+6Ch+var_6C], eax
		call	dbus_message_type_to_string
		mov	edx, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_3C], edi
		mov	[esp+6Ch+var_40], esi
		mov	[esp+6Ch+var_54], ebp
		mov	[esp+6Ch+var_44], edx
		mov	edx, [esp+6Ch+var_24]
		mov	dword ptr [esp+6Ch+var_5C], ebx	; char
		mov	[esp+6Ch+var_58], eax
		mov	[esp+6Ch+Format], offset aMessagePSSSS_1 ; "Message %p (%s %s %s %s '%s' reply to %"...
		mov	[esp+6Ch+var_48], edx
		mov	edx, [esp+6Ch+var_28]
		mov	[esp+6Ch+var_64], offset a_dbus_conne_33 ; "_dbus_connection_queue_received_message"...
		mov	[esp+6Ch+var_68], 20Bh ; int
		mov	[esp+6Ch+var_6C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_4C], edx
		mov	edx, [esp+6Ch+var_2C]
		mov	[esp+6Ch+var_50], edx
		call	sub_67DFABC0
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCE2B0:				; CODE XREF: sub_67DCE140+66j
		mov	[esp+6Ch+var_68], eax
		mov	eax, [esi+4Ch]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DF9500
		test	eax, eax
		mov	edi, eax
		jz	loc_67DCE1AC
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DEA660
		test	eax, eax
		jnz	short loc_67DCE2F0

loc_67DCE2D5:				; CODE XREF: sub_67DCE140+1C4j
		mov	[esp+6Ch+var_68], 0
		mov	[esp+6Ch+var_6C], edi
		call	sub_67DEA600
		jmp	loc_67DCE1AC
; ---------------------------------------------------------------------------
		align 10h

loc_67DCE2F0:				; CODE XREF: sub_67DCE140+193j
		mov	[esp+6Ch+var_6C], edi
		call	sub_67DEA5C0
		mov	[esp+6Ch+var_6C], esi
		mov	[esp+6Ch+var_68], eax
		call	sub_67DCE0C0
		jmp	short loc_67DCE2D5
sub_67DCE140	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	[esp+24h], ebx
		mov	ebx, [esp+30h]
		mov	[esp+28h], esi
		mov	esi, [esp+34h]
		mov	dword ptr [esp+10h], offset aProtected_chan ; "protected_change_timeout"
		mov	dword ptr [esp+0Ch], 322h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_67DCE377
		mov	[esp+34h], esi
		mov	ebx, [esp+24h]
		mov	[esp+30h], eax
		mov	esi, [esp+28h]
		add	esp, 2Ch
		jmp	sub_67DF1920
; ---------------------------------------------------------------------------

loc_67DCE377:				; CODE XREF: .text:67DCE35Dj
		mov	ebx, [esp+24h]
		mov	esi, [esp+28h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCE390	proc near		; CODE XREF: sub_67DF55E0+9Fp
					; sub_67DF5740+A0p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		xor	eax, eax
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_conne_36 ; "_dbus_connection_toggle_watch_unlocked"
		test	esi, esi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 305h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWatchNull_0 ;	"watch != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset aProtected_ch_1 ; "protected_change_watch"
		mov	[esp+2Ch+var_20], 2A6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+34h]
		test	eax, eax
		jz	short loc_67DCE436
		mov	[esp+2Ch+arg_8], edi
		mov	ebx, [esp+2Ch+var_C]
		mov	[esp+2Ch+arg_4], esi
		mov	edi, [esp+2Ch+var_4]
		mov	[esp+2Ch+arg_0], eax
		mov	esi, [esp+2Ch+var_8]
		add	esp, 2Ch
		jmp	sub_67DF7D70
; ---------------------------------------------------------------------------

loc_67DCE436:				; CODE XREF: sub_67DCE390+84j
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DCE390	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCE450	proc near		; CODE XREF: dbus_connection_get_dispatch_status+D1p
					; dbus_connection_pop_message+169p ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= byte ptr -34h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 5Ch
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+5Ch+var_C], esi
		xor	esi, esi
		mov	[esp+5Ch+var_8], edi
		mov	[esp+5Ch+var_4], ebp
		mov	dword ptr [esp+5Ch+var_4C], offset a_dbus_connec_3 ; "_dbus_connection_get_dispatch_status_un"...
		mov	[esp+5Ch+Format], 1053h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	edi, [ebx+28h]
		test	edi, edi
		jle	short loc_67DCE4C0

loc_67DCE4A3:				; CODE XREF: sub_67DCE450+81j
					; sub_67DCE450+E3j ...
		mov	eax, esi
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCE4C0:				; CODE XREF: sub_67DCE450+51j
		mov	eax, [ebx+30h]
		mov	si, 2
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF4C20
		test	eax, eax
		jz	short loc_67DCE4A3
		mov	eax, [ebx+30h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF48E0
		mov	esi, eax
		mov	eax, [ebx+30h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF2D80
		cmp	esi, 1
		mov	edx, offset aComplete ;	"complete"
		mov	edi, eax
		jz	short loc_67DCE500
		test	esi, esi
		mov	edx, offset aDataRemains ; "data remains"
		jnz	short loc_67DCE550

loc_67DCE500:				; CODE XREF: sub_67DCE450+A5j
					; sub_67DCE450+108j ...
		mov	[esp+5Ch+var_48], edi
		mov	dword ptr [esp+5Ch+var_4C], edx	; char
		mov	[esp+5Ch+Format], offset aDispatchStatus ; "dispatch status = %s is_connected =	%d\"...
		mov	[esp+5Ch+var_54], offset a_dbus_connec_3 ; "_dbus_connection_get_dispatch_status_un"...
		mov	[esp+5Ch+var_58], 1062h	; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		test	edi, edi
		jz	short loc_67DCE561
		cmp	esi, 1
		jnz	loc_67DCE4A3

loc_67DCE539:				; CODE XREF: sub_67DCE450+1E0j
		mov	edx, [ebx+28h]
		test	edx, edx
		setle	al
		movzx	esi, al
		jmp	loc_67DCE4A3
; ---------------------------------------------------------------------------
		align 10h

loc_67DCE550:				; CODE XREF: sub_67DCE450+AEj
		cmp	esi, 2
		mov	edx, offset aNeedMemory	; "need	memory"
		jz	short loc_67DCE500
		mov	edx, offset a??? ; "???"
		jmp	short loc_67DCE500
; ---------------------------------------------------------------------------

loc_67DCE561:				; CODE XREF: sub_67DCE450+DEj
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+5Ch+var_4C], offset aNotify_disconn ; "notify_disconnected_unlocked"
		mov	[esp+5Ch+Format], 1018h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67DC7270
		mov	eax, [ebx+24h]
		test	eax, eax
		jle	short loc_67DCE5ED
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		lea	edi, [ebx+18h]
		mov	[esp+5Ch+Format], offset aDroppingDOutgo ; "Dropping %d	outgoing messages since	we'"...
		mov	[esp+5Ch+var_54], offset aNotify_disconn ; "notify_disconnected_unlocked"
		mov	[esp+5Ch+var_58], 102Bh	; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	short loc_67DCE5E1
; ---------------------------------------------------------------------------

loc_67DCE5D2:				; CODE XREF: sub_67DCE450+19Bj
		mov	eax, [eax+8]
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_58], eax
		call	sub_67DCD2A0

loc_67DCE5E1:				; CODE XREF: sub_67DCE450+180j
		mov	[esp+5Ch+var_5C], edi
		call	sub_67DFB920
		test	eax, eax
		jnz	short loc_67DCE5D2

loc_67DCE5ED:				; CODE XREF: sub_67DCE450+153j
		cmp	esi, 1
		jnz	loc_67DCE4A3
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+5Ch+var_4C], offset aNotify_disco_0 ; "notify_disconnected_and_dispatch_comple"...
		mov	[esp+5Ch+Format], 1038h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	ecx, [ebx+54h]
		test	ecx, ecx
		jz	loc_67DCE539
		mov	[esp+5Ch+Format], offset aSendingDisconn ; "Sending disconnect message\n"
		lea	edi, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_54], offset aNotify_disco_0 ; "notify_disconnected_and_dispatch_comple"...
		mov	[esp+5Ch+var_58], 103Ch	; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DCE6F1
; ---------------------------------------------------------------------------

loc_67DCE663:				; CODE XREF: sub_67DCE450+2F3j
					; sub_67DCE450+33Dj ...
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DEA600
		mov	[esp+5Ch+var_5C], edi
		call	sub_67DF9E20
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DEAE00
		mov	[esp+5Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+5Ch+var_54], offset aConnection_tim ; "connection_timeout_and_complete_all_pen"...
		mov	[esp+5Ch+var_58], 8F0h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1A90
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+5Ch+var_4C], offset aConnection_tim ; "connection_timeout_and_complete_all_pen"...
		mov	[esp+5Ch+Format], 8F0h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+var_58], offset aConnectionHave ; "!(connection)->have_connection_lock"
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h

loc_67DCE6F1:				; CODE XREF: sub_67DCE450+20Ej
		mov	eax, [ebx+4Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF91E0
		test	eax, eax
		jle	loc_67DCE7A4
		mov	eax, [ebx+4Ch]
		mov	[esp+5Ch+var_58], edi
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF9A90
		mov	[esp+5Ch+var_5C], edi
		call	sub_67DF9950
		mov	[esp+5Ch+var_5C], edi
		call	sub_67DF98D0
		mov	esi, eax
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DEAF00
		mov	[esp+5Ch+var_58], ebx
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DEAFA0
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DEA660
		test	eax, eax
		jz	loc_67DCE663
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DEA5C0
		movzx	edx, byte ptr [ebx+88h]
		mov	dword ptr [esp+5Ch+var_4C], offset aProtected_chan ; "protected_change_timeout"
		mov	[esp+5Ch+Format], 322h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	dl, 5
		and	edx, 1
		mov	[esp+5Ch+var_5C], edx
		mov	ebp, eax
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	edx, [ebx+38h]
		test	edx, edx
		jz	loc_67DCE663
		mov	[esp+5Ch+var_58], ebp
		mov	[esp+5Ch+var_5C], edx
		call	sub_67DF1820
		jmp	loc_67DCE663
; ---------------------------------------------------------------------------

loc_67DCE7A4:				; CODE XREF: sub_67DCE450+2AEj
		movzx	eax, byte ptr [ebx+88h]
		xor	esi, esi
		mov	dword ptr [esp+5Ch+var_4C], offset aConnection_tim ; "connection_timeout_and_complete_all_pen"...
		mov	[esp+5Ch+Format], 8F2h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_58], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+54h]
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_58], eax
		call	sub_67DCD4E0
		mov	dword ptr [ebx+54h], 0
		jmp	loc_67DCE4A3
sub_67DCE450	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  30. dbus_connection_get_dispatch_status

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_get_dispatch_status
dbus_connection_get_dispatch_status proc near
					; CODE XREF: dbus_connection_borrow_message+66p
					; dbus_connection_pop_message+32p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_44 ; "dbus_connection_get_dispatch_status"
		mov	[esp+2Ch+Format], 10D4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCE950
		mov	[esp+2Ch+Format], offset aStart	; "start\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_44 ; "dbus_connection_get_dispatch_status"
		mov	dword ptr [esp+2Ch+var_28], 10D6h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_44 ; "dbus_connection_get_dispatch_status"
		mov	dword ptr [esp+2Ch+var_28], 10D8h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_44 ; "dbus_connection_get_dispatch_status"
		mov	[esp+2Ch+Format], 10D8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		or	byte ptr [ebx+88h], 20h
		call	sub_67DCE450
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_44 ; "dbus_connection_get_dispatch_status"
		mov	dword ptr [esp+2Ch+var_28], 10DCh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_44 ; "dbus_connection_get_dispatch_status"
		mov	[esp+2Ch+Format], 10DCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCE950:				; CODE XREF: dbus_connection_get_dispatch_status+37j
		mov	eax, off_67E19014
		mov	esi, 1
		mov	dword ptr [esp+2Ch+var_1C], 10D4h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_44 ; "dbus_connection_get_dispatch_status"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_get_dispatch_status endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  58. dbus_connection_remove_filter

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_connection_remove_filter(char *, char, int)
		public dbus_connection_remove_filter
dbus_connection_remove_filter proc near

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [esp+4Ch+arg_0]
		mov	edi, dword ptr [esp+4Ch+arg_4]
		mov	ebp, [esp+4Ch+arg_8]
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_45 ; "dbus_connection_remove_filter"
		mov	[esp+4Ch+Format], 1559h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCEC3F
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_45 ; "dbus_connection_remove_filter"
		mov	[esp+4Ch+Format], 155Ah
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DCEC71
		mov	[esp+4Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_45 ; "dbus_connection_remove_filter"
		mov	dword ptr [esp+4Ch+var_48], 155Ch ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esi+4]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_45 ; "dbus_connection_remove_filter"
		mov	[esp+4Ch+Format], 155Ch
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		lea	edx, [esi+3Ch]
		or	byte ptr [esi+88h], 20h
		mov	[esp+4Ch+var_4C], edx
		mov	[esp+4Ch+var_20], edx
		call	sub_67DFB920
		mov	edx, [esp+4Ch+var_20]
		jmp	short loc_67DCEA9B
; ---------------------------------------------------------------------------
		align 10h

loc_67DCEA90:				; CODE XREF: dbus_connection_remove_filter+119j
					; dbus_connection_remove_filter+11Ej
		cmp	eax, [esi+3Ch]
		jz	loc_67DCEB95
		mov	eax, [eax]

loc_67DCEA9B:				; CODE XREF: dbus_connection_remove_filter+FCj
		test	eax, eax
		jz	loc_67DCEB95
		mov	ebx, [eax+8]
		cmp	[ebx+4], edi
		jnz	short loc_67DCEA90
		cmp	[ebx+8], ebp
		jnz	short loc_67DCEA90
		mov	[esp+4Ch+var_4C], edx
		mov	dword ptr [esp+4Ch+var_48], eax
		call	sub_67DFBE40
		mov	dword ptr [ebx+4], 0
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_45 ; "dbus_connection_remove_filter"
		mov	dword ptr [esp+4Ch+var_48], 1572h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_45 ; "dbus_connection_remove_filter"
		mov	[esp+4Ch+Format], 1572h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [esi+4]
		and	byte ptr [esi+88h], 0DFh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		mov	edx, [ebx+0Ch]
		test	edx, edx
		jz	short loc_67DCEB3D
		mov	eax, [ebx+8]
		mov	[esp+4Ch+var_4C], eax
		call	edx

loc_67DCEB3D:				; CODE XREF: dbus_connection_remove_filter+1A3j
		mov	dword ptr [ebx+0Ch], 0
		mov	dword ptr [ebx+8], 0
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E0B440
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_message_ ; "_dbus_message_filter_unref"
		mov	[esp+4Ch+Format], 16Ah
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aOld_value0 ; "old_value > 0"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnle	al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		cmp	esi, 1
		jz	loc_67DCEC20

loc_67DCEB8D:				; CODE XREF: dbus_connection_remove_filter+2DCj
					; dbus_connection_remove_filter+30Ej
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DCEB95:				; CODE XREF: dbus_connection_remove_filter+103j
					; dbus_connection_remove_filter+10Dj
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_45 ; "dbus_connection_remove_filter"
		mov	dword ptr [esp+4Ch+var_48], 1572h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_45 ; "dbus_connection_remove_filter"
		mov	[esp+4Ch+Format], 1572h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [esi+4]
		and	byte ptr [esi+88h], 0DFh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		mov	[esp+4Ch+arg_8], ebp
		mov	dword ptr [esp+4Ch+arg_4], edi ; char
		mov	[esp+4Ch+arg_0], offset	aAttemptToRemov	; "Attempt to remove filter function %p	us"...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	sub_67DFB4E0
; ---------------------------------------------------------------------------
		align 10h

loc_67DCEC20:				; CODE XREF: dbus_connection_remove_filter+1F7j
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	short loc_67DCEC2F
		mov	edx, [ebx+8]
		mov	[esp+4Ch+var_4C], edx
		call	eax

loc_67DCEC2F:				; CODE XREF: dbus_connection_remove_filter+295j
		mov	[esp+4Ch+arg_0], ebx
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67DCEC3F:				; CODE XREF: dbus_connection_remove_filter+41j
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_3C], 1559h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_45 ; "dbus_connection_remove_filter"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DCEB8D
; ---------------------------------------------------------------------------

loc_67DCEC71:				; CODE XREF: dbus_connection_remove_filter+75j
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_3C], 155Ah
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aFunctionNull ; "function != NULL"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_45 ; "dbus_connection_remove_filter"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DCEB8D
dbus_connection_remove_filter endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCECB0	proc near		; CODE XREF: dbus_connection_borrow_message+E7p
					; dbus_connection_pop_message+B3p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch

		push	ebx
		mov	ebx, eax
		sub	esp, 28h
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_6 ; "_dbus_connection_acquire_dispatch"
		mov	[esp+2Ch+Format], 0FD9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+Format], 580h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+Format], 581h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+Format], 583h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_connec_6 ; "_dbus_connection_acquire_dispatch"
		mov	[esp+2Ch+var_28], 0FDCh	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_6 ; "_dbus_connection_acquire_dispatch"
		mov	[esp+2Ch+Format], 0FDCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	[esp+2Ch+Format], offset aLockingDispatc ; "locking dispatch_mutex\n"
		mov	[esp+2Ch+var_24], offset a_dbus_connec_6 ; "_dbus_connection_acquire_dispatch"
		mov	[esp+2Ch+var_28], 0FDEh	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	edx, [ebx+80h]
		test	edx, edx
		jz	loc_67DCEE76

loc_67DCEE36:				; CODE XREF: sub_67DCECB0+1C4j
		mov	[esp+2Ch+Format], offset aWaitingForDisp ; "waiting for	dispatch to be acquirable\n"
		mov	[esp+2Ch+var_24], offset a_dbus_connec_6 ; "_dbus_connection_acquire_dispatch"
		mov	[esp+2Ch+var_28], 0FE3h	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1B60
		mov	eax, [ebx+80h]
		test	eax, eax
		jnz	short loc_67DCEE36

loc_67DCEE76:				; CODE XREF: sub_67DCECB0+180j
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_6 ; "_dbus_connection_acquire_dispatch"
		mov	[esp+2Ch+Format], 0FE8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionDisp ; "!connection->dispatch_acquired"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	dword ptr [ebx+80h], 1
		mov	[esp+2Ch+Format], offset aUnlockingDispa ; "unlocking dispatch_mutex\n"
		mov	[esp+2Ch+var_24], offset a_dbus_connec_6 ; "_dbus_connection_acquire_dispatch"
		mov	[esp+2Ch+var_28], 0FECh	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_connec_6 ; "_dbus_connection_acquire_dispatch"
		mov	[esp+2Ch+var_28], 0FEFh	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_6 ; "_dbus_connection_acquire_dispatch"
		mov	[esp+2Ch+Format], 0FEFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		or	eax, 20h
		mov	[ebx+88h], al
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_8 ; "_dbus_connection_unref_unlocked"
		mov	[esp+2Ch+Format], 595h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_8 ; "_dbus_connection_unref_unlocked"
		mov	[esp+2Ch+Format], 597h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B440
		cmp	eax, 1
		jz	short loc_67DCEFC0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCEFC0:				; CODE XREF: sub_67DCECB0+307j
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DCDAC0
sub_67DCECB0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  21. dbus_connection_borrow_message

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_borrow_message
dbus_connection_borrow_message proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_46 ; "dbus_connection_borrow_message"
		mov	[esp+2Ch+Format], 0ED3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCF1B8
		mov	[esp+2Ch+Format], offset aStart	; "start\n"
		xor	esi, esi
		mov	[esp+2Ch+var_24], offset aDbus_connec_46 ; "dbus_connection_borrow_message"
		mov	dword ptr [esp+2Ch+var_28], 0ED5h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_connection_get_dispatch_status
		test	eax, eax
		jz	short loc_67DCF047
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCF047:				; CODE XREF: dbus_connection_borrow_message+6Dj
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_46 ; "dbus_connection_borrow_message"
		mov	dword ptr [esp+2Ch+var_28], 0EDEh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_46 ; "dbus_connection_borrow_message"
		mov	[esp+2Ch+Format], 0EDEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		or	byte ptr [ebx+88h], 20h
		call	sub_67DCECB0
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_46 ; "dbus_connection_borrow_message"
		mov	[esp+2Ch+Format], 0EE3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionMess ; "connection->message_borrowed == NULL"
		cmp	dword ptr [ebx+20h], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+1Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFB950
		mov	[ebx+20h], eax
		mov	esi, eax
		mov	dword ptr [esp+2Ch+var_1C], offset aCheck_disconne ; "check_disconnected_message_arrived_unlo"...
		mov	[esp+2Ch+Format], 0EAEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	ecx, [ebx+54h]
		test	ecx, ecx
		jz	loc_67DCF1F0

loc_67DCF13D:				; CODE XREF: dbus_connection_borrow_message+23Aj
					; dbus_connection_borrow_message+247j
		test	esi, esi
		jz	loc_67DCF220

loc_67DCF145:				; CODE XREF: dbus_connection_borrow_message+257j
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_46 ; "dbus_connection_borrow_message"
		mov	dword ptr [esp+2Ch+var_28], 0EEFh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_46 ; "dbus_connection_borrow_message"
		mov	[esp+2Ch+Format], 0EEFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCF1B8:				; CODE XREF: dbus_connection_borrow_message+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_1C], 0ED3h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_46 ; "dbus_connection_borrow_message"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCF1F0:				; CODE XREF: dbus_connection_borrow_message+167j
		mov	[esp+2Ch+var_24], offset aDisconnected ; "Disconnected"
		mov	dword ptr [esp+2Ch+var_28], offset aOrg_freedesk_5 ; "org.freedesktop.DBus.Local"
		mov	[esp+2Ch+var_2C], esi
		call	dbus_message_is_signal
		test	eax, eax
		jz	loc_67DCF13D
		or	byte ptr [ebx+88h], 8
		jmp	loc_67DCF13D
; ---------------------------------------------------------------------------
		align 10h

loc_67DCF220:				; CODE XREF: dbus_connection_borrow_message+16Fj
		mov	eax, ebx
		call	sub_67DCC700
		jmp	loc_67DCF145
dbus_connection_borrow_message endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCF230	proc near		; CODE XREF: dbus_connection_pop_message+172p
					; dbus_connection_steal_borrowed_message+260j ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 3Ch
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_12 ; "_dbus_connection_update_dispatch_status"...
		mov	[esp+4Ch+Format], 1088h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+4Ch+Format], 580h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+4Ch+Format], 581h
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionGene ; "connection->generation == _dbus_current"...
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+4Ch+Format], 583h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E0B460
		mov	eax, [ebx+68h]
		mov	ebp, [ebx+70h]
		mov	edi, [ebx+64h]
		mov	[ebx+70h], esi
		mov	[esp+4Ch+var_20], eax
		movzx	eax, byte ptr [ebx+88h]
		mov	edx, eax
		and	edx, 18h
		cmp	dl, 8
		jz	loc_67DCF420

loc_67DCF338:				; CODE XREF: sub_67DCF230+238j
					; sub_67DCF230+3D2j
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset a_dbus_conne_12 ; "_dbus_connection_update_dispatch_status"...
		mov	[esp+4Ch+var_48], 10A9h	; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_12 ; "_dbus_connection_update_dispatch_status"...
		mov	[esp+4Ch+Format], 10A9h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		cmp	ebp, esi
		jz	short loc_67DCF40E
		test	edi, edi
		jz	short loc_67DCF40E
		cmp	esi, 1
		mov	eax, offset aComplete ;	"complete"
		jz	short loc_67DCF3CD
		test	esi, esi
		mov	eax, offset aDataRemains ; "data remains"
		jz	short loc_67DCF3CD
		cmp	esi, 2
		mov	eax, offset aNeedMemory	; "need	memory"
		jz	short loc_67DCF3CD
		mov	eax, offset a??? ; "???"

loc_67DCF3CD:				; CODE XREF: sub_67DCF230+183j
					; sub_67DCF230+18Cj ...
		mov	[esp+4Ch+var_34], eax
		mov	[esp+4Ch+var_38], esi
		mov	dword ptr [esp+4Ch+var_3C], ebx	; char
		mov	[esp+4Ch+Format], offset aNotifyingOfCha ; "Notifying of change	to dispatch status "...
		mov	[esp+4Ch+var_44], offset a_dbus_conne_12 ; "_dbus_connection_update_dispatch_status"...
		mov	[esp+4Ch+var_48], 10AFh	; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], ebx
		mov	[esp+4Ch+var_44], eax
		call	edi

loc_67DCF40E:				; CODE XREF: sub_67DCF230+175j
					; sub_67DCF230+179j
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_connection_unref
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCF420:				; CODE XREF: sub_67DCF230+102j
		or	eax, 10h
		mov	[ebx+88h], al
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_3C], offset aConnection_for ; "connection_forget_shared_unlocked"
		mov	[esp+4Ch+Format], 6C9h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		test	al, 1
		jnz	loc_67DCF510
		test	al, 2
		jz	loc_67DCF338

loc_67DCF46E:				; CODE XREF: sub_67DCF230+3D8j
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset a_dbus_conne_12 ; "_dbus_connection_update_dispatch_status"...
		mov	[esp+4Ch+var_48], 10A0h	; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_12 ; "_dbus_connection_update_dispatch_status"...
		mov	[esp+4Ch+Format], 10A0h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		mov	[esp+4Ch+Format], offset aExitingOnDisco ; "Exiting on Disconnected signal\n"
		mov	[esp+4Ch+var_44], offset a_dbus_conne_12 ; "_dbus_connection_update_dispatch_status"...
		mov	[esp+4Ch+var_48], 10A2h	; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+var_4C], 1
		call	sub_67E0CD80
; ---------------------------------------------------------------------------
		align 10h

loc_67DCF510:				; CODE XREF: sub_67DCF230+230j
		mov	eax, ds:dword_67E34D70
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1A90
		mov	eax, [ebx+7Ch]
		test	eax, eax
		jz	loc_67DCF620
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		mov	[esp+4Ch+Format], offset aDroppingConnec ; "dropping connection	to %s out of the sh"...
		mov	[esp+4Ch+var_44], offset aConnection_for ; "connection_forget_shared_unlocked"
		mov	[esp+4Ch+var_48], 6D3h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+7Ch]
		mov	[esp+4Ch+var_48], eax
		mov	eax, ds:dword_67E34020
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF9DA0
		test	eax, eax
		jz	loc_67DCF635
		mov	eax, [ebx+7Ch]
		mov	[esp+4Ch+var_4C], eax
		call	dbus_free
		mov	dword ptr [ebx+7Ch], 0

loc_67DCF57E:				; CODE XREF: sub_67DCF230+400j
		mov	eax, ds:dword_67E34D70
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_connec_8 ; "_dbus_connection_unref_unlocked"
		mov	[esp+4Ch+Format], 595h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_connec_8 ; "_dbus_connection_unref_unlocked"
		mov	[esp+4Ch+Format], 597h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E0B440
		cmp	eax, 1
		jz	short loc_67DCF610

loc_67DCF5F9:				; CODE XREF: sub_67DCF230+3E7j
		movzx	eax, byte ptr [ebx+88h]
		test	al, 2
		jz	loc_67DCF338
		jmp	loc_67DCF46E
; ---------------------------------------------------------------------------
		align 10h

loc_67DCF610:				; CODE XREF: sub_67DCF230+3C7j
		mov	eax, ebx
		call	sub_67DCDAC0
		jmp	short loc_67DCF5F9
; ---------------------------------------------------------------------------
		align 10h

loc_67DCF620:				; CODE XREF: sub_67DCF230+2F2j
		mov	[esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], offset dword_67E34024
		call	sub_67DFBBE0
		jmp	loc_67DCF57E
; ---------------------------------------------------------------------------

loc_67DCF635:				; CODE XREF: sub_67DCF230+336j
		mov	[esp+4Ch+var_44], 6D7h
		mov	[esp+4Ch+var_48], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_4C], offset aConnectionWasN ; "connection was not in the shared table"
		call	sub_67DFAE30
sub_67DCF230	endp

; ---------------------------------------------------------------------------
		jmp	short dbus_connection_pop_message
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  51. dbus_connection_pop_message

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_pop_message
dbus_connection_pop_message proc near	; CODE XREF: .text:67DCF651j
					; .text:67DD042Bp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		xor	esi, esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+Format], offset aStart	; "start\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_47 ; "dbus_connection_pop_message"
		mov	[esp+2Ch+var_28], 0FB6h	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_connection_get_dispatch_status
		test	eax, eax
		jz	short loc_67DCF6A3
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DCF6A3:				; CODE XREF: dbus_connection_pop_message+39j
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_47 ; "dbus_connection_pop_message"
		mov	[esp+2Ch+var_28], 0FBFh	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_47 ; "dbus_connection_pop_message"
		mov	[esp+2Ch+Format], 0FBFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		or	byte ptr [ebx+88h], 20h
		call	sub_67DCECB0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_47 ; "dbus_connection_pop_message"
		mov	[esp+2Ch+Format], 0FC1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_10 ; "_dbus_connection_pop_message_unlocked"
		mov	[esp+2Ch+Format], 0F6Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DCD730
		test	eax, eax
		jz	short loc_67DCF798
		mov	esi, [eax+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFBED0

loc_67DCF798:				; CODE XREF: dbus_connection_pop_message+12Bj
		mov	dword ptr [esp+2Ch+var_1C], esi	; char
		mov	[esp+2Ch+Format], offset aReturningPoppe ; "Returning popped message %p\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_47 ; "dbus_connection_pop_message"
		mov	[esp+2Ch+var_28], 0FC5h	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DCC700
		mov	eax, ebx
		call	sub_67DCE450
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DCF230
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_pop_message endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  79. dbus_connection_steal_borrowed_message

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_steal_borrowed_message
dbus_connection_steal_borrowed_message proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_8], esi
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+Format], 0F25h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCFA45
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+Format], 0F26h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DCFA82
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+Format], 0F27h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	esi, [ebx+20h]
		cmp	esi, edi
		jz	short loc_67DCF8D0
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0F27h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageConnect ; "message == connection->message_borrowed"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DCF8BF:				; CODE XREF: dbus_connection_steal_borrowed_message+2CFj
					; dbus_connection_steal_borrowed_message+301j
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCF8D0:				; CODE XREF: dbus_connection_steal_borrowed_message+B0j
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+Format], 0F28h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	edi, [ebx+80h]
		test	edi, edi
		jz	loc_67DCFAB4
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	dword ptr [esp+2Ch+var_28], 0F2Ah ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+Format], 0F2Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+Format], 0F2Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aMessageConnect ; "message == connection->message_borrowed"
		cmp	esi, [ebx+20h]
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+1Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFBFF0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+Format], 0F2Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aMessagePop_mes ; "message == pop_message"
		cmp	esi, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+28h]
		sub	eax, 1
		mov	[ebx+28h], eax
		mov	[esp+2Ch+var_18], eax
		mov	dword ptr [esp+2Ch+var_1C], esi	; char
		mov	[esp+2Ch+Format], offset aIncomingMessag ; "Incoming message %p	stolen from queue, "...
		mov	[esp+2Ch+var_24], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	dword ptr [esp+2Ch+var_28], 0F34h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		mov	dword ptr [ebx+20h], 0
		call	sub_67DCC700
		mov	eax, ebx
		call	sub_67DCE450
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		mov	edx, eax
		mov	eax, ebx
		mov	ebx, [esp+2Ch+var_C]
		add	esp, 2Ch
		jmp	sub_67DCF230
; ---------------------------------------------------------------------------

loc_67DCFA45:				; CODE XREF: dbus_connection_steal_borrowed_message+45j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0F25h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DCFA82:				; CODE XREF: dbus_connection_steal_borrowed_message+79j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0F26h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull ;	"message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DCF8BF
; ---------------------------------------------------------------------------

loc_67DCFAB4:				; CODE XREF: dbus_connection_steal_borrowed_message+124j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0F28h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionDi_0 ; "connection->dispatch_acquired"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_48 ; "dbus_connection_steal_borrowed_message"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DCF8BF
dbus_connection_steal_borrowed_message endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  59. dbus_connection_return_message

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_return_message
dbus_connection_return_message proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], edi
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	[esp+2Ch+Format], 0F04h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DCFCE5
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	[esp+2Ch+Format], 0F05h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DCFD22
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	[esp+2Ch+Format], 0F06h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	edi, [ebx+20h]
		cmp	edi, esi
		jz	short loc_67DCFBE0
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0F06h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageConnect ; "message == connection->message_borrowed"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DCFBCF:				; CODE XREF: dbus_connection_return_message+25Fj
					; dbus_connection_return_message+291j
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DCFBE0:				; CODE XREF: dbus_connection_return_message+B0j
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	[esp+2Ch+Format], 0F07h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [ebx+80h]
		test	eax, eax
		jz	loc_67DCFD54
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	dword ptr [esp+2Ch+var_28], 0F09h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	[esp+2Ch+Format], 0F09h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	[esp+2Ch+Format], 0F0Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aMessageConnect ; "message == connection->message_borrowed"
		cmp	edi, [ebx+20h]
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		mov	dword ptr [ebx+20h], 0
		call	sub_67DCC700
		mov	eax, ebx
		call	sub_67DCE450
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		mov	edx, eax
		mov	eax, ebx
		mov	ebx, [esp+2Ch+var_C]
		add	esp, 2Ch
		jmp	sub_67DCF230
; ---------------------------------------------------------------------------

loc_67DCFCE5:				; CODE XREF: dbus_connection_return_message+45j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0F04h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DCFD22:				; CODE XREF: dbus_connection_return_message+79j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0F05h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull ;	"message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DCFBCF
; ---------------------------------------------------------------------------

loc_67DCFD54:				; CODE XREF: dbus_connection_return_message+124j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0F07h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionDi_0 ; "connection->dispatch_acquired"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_49 ; "dbus_connection_return_message"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DCFBCF
dbus_connection_return_message endp

; ---------------------------------------------------------------------------
		align 10h

loc_67DCFD90:				; DATA XREF: dbus_connection_send_with_reply+17Ao
		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [esp+30h]
		mov	[esp], esi
		call	sub_67DEA6B0
		mov	[esp], esi
		mov	ebx, eax
		mov	[esp+4], eax
		call	sub_67DEAFA0
		mov	[esp], esi
		call	sub_67DEA5C0
		mov	dword ptr [esp+10h], offset aProtected_chan ; "protected_change_timeout"
		mov	dword ptr [esp+0Ch], 322h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		mov	edi, eax
		shr	dl, 5
		and	edx, 1
		mov	[esp], edx
		call	sub_67DFAE70
		mov	edx, [ebx+38h]
		test	edx, edx
		jz	short loc_67DCFE02
		mov	[esp+4], edi
		mov	[esp], edx
		call	sub_67DF1820

loc_67DCFE02:				; CODE XREF: .text:67DCFDF4j
		mov	[esp], esi
		mov	dword ptr [esp+4], 0
		call	sub_67DEA600
		mov	dword ptr [esp+0Ch], offset aMiddle ; "middle\n"
		mov	dword ptr [esp+8], offset aReply_handler_ ; "reply_handler_timeout"
		mov	dword ptr [esp+4], 0CD7h
		mov	dword ptr [esp], offset	aRBuildWin32l_1	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DCE450
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DCF230
		add	esp, 20h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DCFE60	proc near		; CODE XREF: dbus_connection_close+129j
					; sub_67DD0180+12Dj ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch

		push	ebx
		mov	ebx, eax
		sub	esp, 28h
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_13 ; "_dbus_connection_close_possibly_shared_"...
		mov	[esp+2Ch+Format], 0AF1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], ebx	; char
		mov	[esp+2Ch+Format], offset aDisconnectingP ; "Disconnecting %p\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_13 ; "_dbus_connection_close_possibly_shared_"...
		mov	[esp+2Ch+var_28], 0AF3h	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+Format], 580h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+Format], 581h
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionGene ; "connection->generation == _dbus_current"...
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+Format], 583h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF31A0
		mov	eax, ebx
		call	sub_67DCE450
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DCF230
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_connection_unref
		add	esp, 28h
		pop	ebx
		retn
sub_67DCFE60	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  23. dbus_connection_close

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_connection_close(char *)
		public dbus_connection_close
dbus_connection_close proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_50 ; "dbus_connection_close"
		mov	[esp+2Ch+Format], 0B3Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD0140
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_50 ; "dbus_connection_close"
		mov	[esp+2Ch+Format], 0B3Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		jz	short loc_67DD0038
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0B3Dh
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_50 ; "dbus_connection_close"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DD0038:				; CODE XREF: dbus_connection_close+74j
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_50 ; "dbus_connection_close"
		mov	dword ptr [esp+2Ch+var_28], 0B3Fh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_50 ; "dbus_connection_close"
		mov	[esp+2Ch+Format], 0B3Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		or	eax, 20h
		test	al, 1
		mov	[ebx+88h], al
		jnz	short loc_67DD00C0
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DCFE60
; ---------------------------------------------------------------------------
		align 10h

loc_67DD00C0:				; CODE XREF: dbus_connection_close+121j
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_50 ; "dbus_connection_close"
		mov	dword ptr [esp+2Ch+var_28], 0B44h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_50 ; "dbus_connection_close"
		mov	[esp+2Ch+Format], 0B44h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	[esp+2Ch+arg_0], offset	aApplicationsMu	; "Applications	must not close shared conn"...
		add	esp, 28h
		pop	ebx
		jmp	sub_67DFB4E0
; ---------------------------------------------------------------------------
		align 10h

loc_67DD0140:				; CODE XREF: dbus_connection_close+36j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0B3Ch
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_50 ; "dbus_connection_close"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_connection_close endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD0180	proc near		; CODE XREF: sub_67DEE790+29Ep

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_34 ; "_dbus_connection_close_if_only_one_ref"
		mov	[esp+2Ch+var_28], 84Ah ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_34 ; "_dbus_connection_close_if_only_one_ref"
		mov	[esp+2Ch+Format], 84Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0ABB0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_34 ; "_dbus_connection_close_if_only_one_ref"
		mov	[esp+2Ch+Format], 84Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRefcount1 ; "refcount	>= 1"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		cmp	esi, 1
		jz	short loc_67DD02A6
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_34 ; "_dbus_connection_close_if_only_one_ref"
		mov	[esp+2Ch+var_28], 853h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_34 ; "_dbus_connection_close_if_only_one_ref"
		mov	[esp+2Ch+Format], 853h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------

loc_67DD02A6:				; CODE XREF: sub_67DD0180+B3j
		add	esp, 24h
		mov	eax, ebx
		pop	ebx
		pop	esi
		jmp	sub_67DCFE60
sub_67DD0180	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD02C0	proc near		; CODE XREF: sub_67DC7A30+3D0p
					; .text:67DD0419p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_14 ; "_dbus_connection_close_possibly_shared"
		mov	[esp+2Ch+Format], 772h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_14 ; "_dbus_connection_close_possibly_shared"
		mov	[esp+2Ch+Format], 773h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_14 ; "_dbus_connection_close_possibly_shared"
		mov	[esp+2Ch+var_28], 775h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_14 ; "_dbus_connection_close_possibly_shared"
		mov	[esp+2Ch+Format], 775h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		or	byte ptr [ebx+88h], 20h
		add	esp, 28h
		pop	ebx
		jmp	sub_67DCFE60
sub_67DD02C0	endp

; ---------------------------------------------------------------------------
		align 10h

loc_67DD03B0:				; DATA XREF: sub_67DD4800+906o
		push	edi
		push	esi
		push	ebx
		sub	esp, 40h
		mov	eax, ds:dword_67E34D70
		lea	edi, [esp+28h]
		mov	[esp], eax
		call	sub_67DF1A90

loc_67DD03C7:				; CODE XREF: .text:67DD0486j
		mov	eax, ds:dword_67E34020
		mov	[esp], eax
		call	sub_67DF91E0
		test	eax, eax
		mov	esi, eax
		jle	loc_67DD048B
		mov	eax, ds:dword_67E34020
		mov	[esp+4], edi
		mov	[esp], eax
		call	sub_67DF9A90
		mov	[esp], edi
		call	sub_67DF9950
		mov	[esp], edi
		call	sub_67DF98D0
		mov	ebx, eax
		mov	eax, ds:dword_67E34D70
		mov	[esp], eax
		call	sub_67DF1AD0
		mov	[esp], ebx
		call	dbus_connection_ref
		mov	[esp], ebx
		call	sub_67DD02C0
		jmp	short loc_67DD0428
; ---------------------------------------------------------------------------

loc_67DD0420:				; CODE XREF: .text:67DD0432j
		mov	[esp], eax
		call	dbus_message_unref

loc_67DD0428:				; CODE XREF: .text:67DD041Ej
		mov	[esp], ebx
		call	dbus_connection_pop_message
		test	eax, eax
		jnz	short loc_67DD0420
		mov	[esp], ebx
		call	dbus_connection_unref
		mov	eax, ds:dword_67E34D70
		mov	[esp], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34020
		mov	[esp], eax
		call	sub_67DF91E0
		mov	dword ptr [esp+10h], offset aShared_conne_0 ; "shared_connections_shutdown"
		mov	dword ptr [esp+0Ch], 60Eh
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset a_dbus_hash_t_8 ; "_dbus_hash_table_get_n_entries (shared_"...
		cmp	esi, eax
		setnle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		jmp	loc_67DD03C7
; ---------------------------------------------------------------------------

loc_67DD048B:				; CODE XREF: .text:67DD03D8j
		mov	eax, ds:dword_67E34020
		mov	[esp], eax
		call	sub_67DF91E0
		mov	dword ptr [esp+10h], offset aShared_conne_0 ; "shared_connections_shutdown"
		mov	dword ptr [esp+0Ch], 611h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset a_dbus_hash_t_9 ; "_dbus_hash_table_get_n_entries (shared_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, ds:dword_67E34020
		mov	[esp], eax
		call	sub_67DFA0D0
		mov	edx, ds:dword_67E34024
		mov	ds:dword_67E34020, 0
		test	edx, edx
		jz	short loc_67DD054C
		lea	esi, [esi+0]

loc_67DD04F0:				; CODE XREF: .text:67DD054Aj
		mov	dword ptr [esp], offset	dword_67E34024
		call	sub_67DFBFF0
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DD054C
		mov	eax, ds:dword_67E34D70
		mov	[esp], eax
		call	sub_67DF1AD0
		mov	[esp], ebx
		call	dbus_connection_ref
		mov	[esp], ebx
		call	sub_67DD02C0
		jmp	short loc_67DD0529
; ---------------------------------------------------------------------------

loc_67DD0521:				; CODE XREF: .text:67DD0533j
		mov	[esp], eax
		call	dbus_message_unref

loc_67DD0529:				; CODE XREF: .text:67DD051Fj
		mov	[esp], ebx
		call	dbus_connection_pop_message
		test	eax, eax
		jnz	short loc_67DD0521
		mov	[esp], ebx
		call	dbus_connection_unref
		mov	eax, ds:dword_67E34D70
		mov	[esp], eax
		call	sub_67DF1A90
		jmp	short loc_67DD04F0
; ---------------------------------------------------------------------------

loc_67DD054C:				; CODE XREF: .text:67DD04E7j
					; .text:67DD0500j
		mov	eax, ds:dword_67E34D70
		mov	ds:dword_67E34024, 0
		mov	[esp], eax
		call	sub_67DF1AD0
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD0570	proc near		; CODE XREF: sub_67DD0960+8Ap
					; sub_67DD1870+A2p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h

		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 24h
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+Format], 41Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+Format], 580h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+Format], 581h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+2Ch+Format], 583h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+var_28], 424h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+Format], 424h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	[esp+2Ch+Format], offset aLockingIo_path ; "locking io_path_mutex\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+var_28], 426h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_18], esi
		mov	eax, [ebx+84h]
		mov	[esp+2Ch+Format], offset aStartConnectio ; "start connection->io_path_acquired = %d"...
		mov	[esp+2Ch+var_24], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+var_28], 42Ah ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+84h]
		test	eax, eax
		jz	loc_67DD07C0
		cmp	esi, 0FFFFFFFFh
		jz	short loc_67DD0780
		mov	dword ptr [esp+2Ch+var_1C], esi	; char
		mov	[esp+2Ch+Format], offset aWaitingDForIoP ; "waiting %d for IO path to be acquirable"...
		mov	[esp+2Ch+var_24], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+var_28], 433h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+var_24], esi
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+14h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1B90
		mov	eax, [ebx+84h]
		test	eax, eax
		jz	short loc_67DD07C0
		xor	esi, esi
		jmp	short loc_67DD07D4
; ---------------------------------------------------------------------------
		align 10h

loc_67DD0780:				; CODE XREF: sub_67DD0570+1BEj
					; sub_67DD0570+24Ej
		mov	[esp+2Ch+Format], offset aWaitingForIoPa ; "waiting for	IO path	to be acquirable\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+var_28], 447h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+14h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1B60
		mov	ecx, [ebx+84h]
		test	ecx, ecx
		jnz	short loc_67DD0780

loc_67DD07C0:				; CODE XREF: sub_67DD0570+1B5j
					; sub_67DD0570+206j
		mov	dword ptr [ebx+84h], 1
		mov	eax, 1
		mov	esi, 1

loc_67DD07D4:				; CODE XREF: sub_67DD0570+20Aj
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_18], esi
		mov	[esp+2Ch+Format], offset aEndConnectionI ; "end	connection->io_path_acquired = %d w"...
		mov	[esp+2Ch+var_24], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+var_28], 455h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+Format], offset aUnlockingIo_pa ; "unlocking io_path_mutex\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+var_28], 457h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+var_28], 45Ah ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+Format], 45Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		or	eax, 20h
		mov	[ebx+88h], al
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_18 ; "_dbus_connection_acquire_io_path"
		mov	[esp+2Ch+Format], 45Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_8 ; "_dbus_connection_unref_unlocked"
		mov	[esp+2Ch+Format], 595h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_8 ; "_dbus_connection_unref_unlocked"
		mov	[esp+2Ch+Format], 597h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B440
		cmp	eax, 1
		jz	loc_67DD0950
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD0950:				; CODE XREF: sub_67DD0570+3D0j
		mov	eax, ebx
		call	sub_67DCDAC0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DD0570	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DD0960(char	*, int,	int, char *)
sub_67DD0960	proc near		; CODE XREF: sub_67DD0BB0+1D6p
					; sub_67DD1550+C4p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	ebp, [esp+4Ch+arg_4]
		mov	esi, [esp+4Ch+arg_8]
		mov	edi, [esp+4Ch+arg_C]
		mov	[esp+4Ch+Format], offset aStart	; "start\n"
		mov	[esp+4Ch+var_44], offset a_dbus_conne_17 ; "_dbus_connection_do_iteration_unlocked"
		mov	[esp+4Ch+var_48], 4A7h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_17 ; "_dbus_connection_do_iteration_unlocked"
		mov	[esp+4Ch+Format], 4A9h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	edx, [ebx+24h]
		test	edx, edx
		jnz	short loc_67DD09DA
		and	esi, 0FFFFFFFEh

loc_67DD09DA:				; CODE XREF: sub_67DD0960+75j
		mov	eax, esi
		and	eax, 4
		cmp	eax, 1
		mov	eax, ebx
		sbb	edx, edx
		not	edx
		and	edx, edi
		call	sub_67DD0570
		test	eax, eax
		jnz	short loc_67DD0A54

loc_67DD09F3:				; CODE XREF: sub_67DD0960+1C2j
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_17 ; "_dbus_connection_do_iteration_unlocked"
		mov	[esp+4Ch+Format], 4C6h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+arg_C], offset	aEnd ; "end\n"
		mov	[esp+4Ch+arg_8], offset	a_dbus_conne_17	; "_dbus_connection_do_iteration_unlocked"
		mov	[esp+4Ch+arg_4], 4C8h ;	int
		mov	[esp+4Ch+arg_0], offset	aRBuildWin32l_1	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	sub_67DFABC0
; ---------------------------------------------------------------------------

loc_67DD0A54:				; CODE XREF: sub_67DD0960+91j
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_17 ; "_dbus_connection_do_iteration_unlocked"
		mov	[esp+4Ch+Format], 4B1h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		test	ebp, ebp
		jz	short loc_67DD0B08
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67DEA4B0
		test	eax, eax
		jnz	loc_67DD0B27
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67DEA580
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_19 ; "_dbus_connection_peek_for_reply_unlocke"...
		mov	[esp+4Ch+Format], 8A3h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		mov	[esp+4Ch+var_20], eax
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+1Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFB910
		mov	ebp, eax

loc_67DD0AEB:				; CODE XREF: sub_67DD0960+1A6j
		test	ebp, ebp
		jz	short loc_67DD0B08
		mov	eax, [ebp+8]
		mov	[esp+4Ch+var_4C], eax
		call	dbus_message_get_reply_serial
		cmp	[esp+4Ch+var_20], eax
		jz	short loc_67DD0B50
		mov	ebp, [ebp+4]
		cmp	ebp, [ebx+1Ch]
		jnz	short loc_67DD0AEB

loc_67DD0B08:				; CODE XREF: sub_67DD0960+12Bj
					; sub_67DD0960+18Dj
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_48], esi
		mov	eax, [ebx+30h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF5260

loc_67DD0B1B:				; CODE XREF: sub_67DD0960+1EBj
					; sub_67DD0960+248j
		mov	eax, ebx
		call	sub_67DCC7F0
		jmp	loc_67DD09F3
; ---------------------------------------------------------------------------

loc_67DD0B27:				; CODE XREF: sub_67DD0960+137j
		mov	[esp+4Ch+Format], offset aPendingCallCom ; "pending call completed while acquiring "...
		mov	[esp+4Ch+var_44], offset a_dbus_conne_17 ; "_dbus_connection_do_iteration_unlocked"
		mov	[esp+4Ch+var_48], 4B5h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	short loc_67DD0B1B
; ---------------------------------------------------------------------------
		align 10h

loc_67DD0B50:				; CODE XREF: sub_67DD0960+19Ej
		mov	eax, [esp+4Ch+var_20]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_19 ; "_dbus_connection_peek_for_reply_unlocke"...
		mov	[esp+4Ch+Format], offset aSReplyToDFound ; "%s reply to	%d found in queue\n"
		mov	[esp+4Ch+var_44], offset a_dbus_conne_19 ; "_dbus_connection_peek_for_reply_unlocke"...
		mov	[esp+4Ch+var_38], eax
		mov	[esp+4Ch+var_48], 8ADh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+Format], offset aPendingCallC_0 ; "pending call completed while acquiring "...
		mov	[esp+4Ch+var_44], offset a_dbus_conne_17 ; "_dbus_connection_do_iteration_unlocked"
		mov	[esp+4Ch+var_48], 4BBh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD0B1B
sub_67DD0960	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __usercall sub_67DD0BB0@<eax>(char@<cl>, int)
sub_67DD0BB0	proc near		; CODE XREF: dbus_connection_send_preallocated+266p
					; sub_67DD11B0+81p ...

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
Format		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		mov	edi, edx
		push	esi
		mov	esi, ecx
		push	ebx
		mov	ebx, eax
		sub	esp, 6Ch
		mov	eax, [edx+4]
		mov	ebp, [esp+7Ch+arg_0]
		mov	[eax+8], ecx
		mov	[esp+7Ch+var_78], eax
		lea	eax, [ebx+18h]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFB750
		mov	eax, [edi+8]
		mov	[esp+7Ch+var_7C], esi
		mov	[esp+7Ch+var_78], eax
		call	sub_67DE4AB0
		mov	[esp+7Ch+var_7C], edi
		call	dbus_free
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_ref
		mov	edi, [ebx+24h]
		add	edi, 1
		mov	[ebx+24h], edi
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_destination
		mov	[esp+7Ch+var_24], offset aNull ; "null"
		test	eax, eax
		jz	short loc_67DD0C21
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_destination
		mov	[esp+7Ch+var_24], eax

loc_67DD0C21:				; CODE XREF: sub_67DD0BB0+63j
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_signature
		mov	[esp+7Ch+var_7C], esi
		mov	[esp+7Ch+var_20], eax
		call	dbus_message_get_member
		mov	[esp+7Ch+var_28], offset aNoMember ; "no member"
		test	eax, eax
		jz	short loc_67DD0C4D
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_member
		mov	[esp+7Ch+var_28], eax

loc_67DD0C4D:				; CODE XREF: sub_67DD0BB0+8Fj
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_interface
		mov	[esp+7Ch+var_2C], offset aNoInterface ;	"no interface"
		test	eax, eax
		jz	short loc_67DD0C6D
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_interface
		mov	[esp+7Ch+var_2C], eax

loc_67DD0C6D:				; CODE XREF: sub_67DD0BB0+AFj
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_path
		mov	edx, offset aNoPath ; "no path"
		test	eax, eax
		jz	short loc_67DD0C88
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_path
		mov	edx, eax

loc_67DD0C88:				; CODE XREF: sub_67DD0BB0+CCj
		mov	[esp+7Ch+var_30], edx
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_type
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_type_to_string
		mov	ecx, [esp+7Ch+var_24]
		mov	edx, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_4C], edi
		mov	[esp+7Ch+var_50], ebx
		mov	[esp+7Ch+var_54], ecx
		mov	ecx, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_64], edx
		mov	[esp+7Ch+var_68], eax
		mov	dword ptr [esp+7Ch+var_6C], esi	; char
		mov	[esp+7Ch+var_58], ecx
		mov	ecx, [esp+7Ch+var_28]
		mov	[esp+7Ch+Format], offset aMessagePSSSSSF ; "Message %p (%s %s %s %s '%s') for %s ad"...
		mov	[esp+7Ch+var_74], offset a_dbus_conne_16 ; "_dbus_connection_send_preallocated_unlo"...
		mov	[esp+7Ch+var_78], 7D6h ; int
		mov	[esp+7Ch+var_5C], ecx
		mov	ecx, [esp+7Ch+var_2C]
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_60], ecx
		call	sub_67DFABC0
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_serial
		test	eax, eax
		jnz	loc_67DD0DB0
		mov	edi, [ebx+50h]
		lea	eax, [edi+1]
		test	eax, eax
		mov	[ebx+50h], eax
		jnz	short loc_67DD0D1C
		mov	dword ptr [ebx+50h], 1

loc_67DD0D1C:				; CODE XREF: sub_67DD0BB0+163j
		mov	[esp+7Ch+var_78], edi
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_set_serial
		test	ebp, ebp
		jz	short loc_67DD0D2F
		mov	[ebp+0], edi

loc_67DD0D2F:				; CODE XREF: sub_67DD0BB0+17Aj
					; sub_67DD0BB0+202j ...
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_serial
		mov	dword ptr [esp+7Ch+var_6C], esi	; char
		mov	[esp+7Ch+Format], offset aMessagePSerial ; "Message %p serial is %u\n"
		mov	[esp+7Ch+var_74], offset a_dbus_conne_16 ; "_dbus_connection_send_preallocated_unlo"...
		mov	[esp+7Ch+var_78], 7E6h ; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_68], eax
		call	sub_67DFABC0
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_lock
		mov	[esp+7Ch+Format], 0FFFFFFFFh ; char *
		mov	[esp+7Ch+var_74], 1 ; int
		mov	[esp+7Ch+var_78], 0 ; int
		mov	[esp+7Ch+var_7C], ebx ;	char *
		call	sub_67DD0960
		mov	ecx, [ebx+24h]
		test	ecx, ecx
		jle	short loc_67DD0DC8
		mov	eax, [ebx+58h]
		test	eax, eax
		jz	short loc_67DD0DC8
		mov	edx, [ebx+5Ch]
		mov	[esp+7Ch+arg_0], edx
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_67DD0DB0:				; CODE XREF: sub_67DD0BB0+152j
		test	ebp, ebp
		jz	loc_67DD0D2F
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_serial
		mov	[ebp+0], eax
		jmp	loc_67DD0D2F
; ---------------------------------------------------------------------------

loc_67DD0DC8:				; CODE XREF: sub_67DD0BB0+1E0j
					; sub_67DD0BB0+1E7j
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DD0BB0	endp

; Exported entry  61. dbus_connection_send_preallocated

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_send_preallocated
dbus_connection_send_preallocated proc near

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 4Ch
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_10], ebx
		mov	[esp+4Ch+var_C], esi
		mov	esi, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_8], edi
		mov	edi, dword ptr [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_20], eax
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+Format], 0C5Ch
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	ebx, [esp+4Ch+var_20]
		test	ebx, ebx
		jz	loc_67DD1082
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+Format], 0C5Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DD10B4
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+Format], 0C5Eh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DD10E6
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+Format], 0C5Fh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	ebx, [esi]
		cmp	ebx, [esp+4Ch+var_20]
		jz	short loc_67DD0F10
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_3C], 0C5Fh
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aPreallocatedCo ; "preallocated->connection ==	connection"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0

loc_67DD0EF8:				; CODE XREF: dbus_connection_send_preallocated+2DFj
					; dbus_connection_send_preallocated+311j ...
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD0F10:				; CODE XREF: dbus_connection_send_preallocated+F9j
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+Format], 0C61h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], edi
		call	dbus_message_get_type
		cmp	eax, 1
		jz	loc_67DD1118

loc_67DD0F4D:				; CODE XREF: dbus_connection_send_preallocated+352j
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+Format], 0C64h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], edi
		call	dbus_message_get_type
		cmp	eax, 4
		jz	loc_67DD1160

loc_67DD0F8A:				; CODE XREF: dbus_connection_send_preallocated+3A6j
		mov	[esp+4Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	dword ptr [esp+4Ch+var_48], 0C66h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+Format], 0C66h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_15 ; "_dbus_connection_send_preallocated_and_"...
		mov	[esp+4Ch+Format], 7FFh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	edx, esi
		mov	ecx, edi	; char
		mov	eax, ebx
		mov	[esp+4Ch+var_4C], ebp ;	int
		call	sub_67DD0BB0
		mov	[esp+4Ch+Format], offset aMiddle ; "middle\n"
		mov	[esp+4Ch+var_44], offset a_dbus_conne_15 ; "_dbus_connection_send_preallocated_and_"...
		mov	dword ptr [esp+4Ch+var_48], 805h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DCE450
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		mov	edx, eax
		mov	eax, ebx
		mov	ebx, [esp+4Ch+var_10]
		add	esp, 4Ch
		jmp	sub_67DCF230
; ---------------------------------------------------------------------------

loc_67DD1082:				; CODE XREF: dbus_connection_send_preallocated+59j
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_3C], 0C5Ch
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DD0EF8
; ---------------------------------------------------------------------------

loc_67DD10B4:				; CODE XREF: dbus_connection_send_preallocated+8Dj
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_3C], 0C5Dh
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aPreallocatedNu ; "preallocated != NULL"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DD0EF8
; ---------------------------------------------------------------------------

loc_67DD10E6:				; CODE XREF: dbus_connection_send_preallocated+C1j
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_3C], 0C5Eh
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aMessageNull ;	"message != NULL"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DD0EF8
; ---------------------------------------------------------------------------

loc_67DD1118:				; CODE XREF: dbus_connection_send_preallocated+177j
		mov	[esp+4Ch+var_4C], edi
		call	dbus_message_get_member
		test	eax, eax
		jnz	loc_67DD0F4D
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_3C], 0C61h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aDbus_message_g ; "dbus_message_get_type (message) != DBUS"...
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DD0EF8
; ---------------------------------------------------------------------------
		align 10h

loc_67DD1160:				; CODE XREF: dbus_connection_send_preallocated+1B4j
		mov	[esp+4Ch+var_4C], edi
		call	dbus_message_get_interface
		test	eax, eax
		jz	short loc_67DD117C
		mov	[esp+4Ch+var_4C], edi
		call	dbus_message_get_member
		test	eax, eax
		jnz	loc_67DD0F8A

loc_67DD117C:				; CODE XREF: dbus_connection_send_preallocated+39Aj
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_3C], 0C64h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aDbus_message_0 ; "dbus_message_get_type (message) != DBUS"...
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_51 ; "dbus_connection_send_preallocated"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DD0EF8
dbus_connection_send_preallocated endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD11B0	proc near		; CODE XREF: dbus_connection_send_with_reply+430p
					; dbus_connection_dispatch+A93p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 24h
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_conne_24 ; "_dbus_connection_send_unlocked_no_updat"...
		mov	[esp+2Ch+var_20], 0C82h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_conne_24 ; "_dbus_connection_send_unlocked_no_updat"...
		mov	[esp+2Ch+var_20], 0C83h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aMessageNull ;	"message != NULL"
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DCC490
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DD123B
		mov	edx, eax
		mov	ecx, esi	; char
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 0 ; int
		call	sub_67DD0BB0
		mov	edx, 1

loc_67DD123B:				; CODE XREF: sub_67DD11B0+72j
		add	esp, 24h
		mov	eax, edx
		pop	ebx
		pop	esi
		retn
sub_67DD11B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD1250	proc near		; CODE XREF: dbus_connection_send+10Cj
					; sub_67DE9510+5FFp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	edi, dword ptr [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_21 ; "_dbus_connection_send_and_unlock"
		mov	[esp+2Ch+Format], 81Ch
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionNu_0 ; "connection != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	edi, edi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_21 ; "_dbus_connection_send_and_unlock"
		mov	[esp+2Ch+Format], 81Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aMessageNull ;	"message != NULL"
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DCC490
		test	eax, eax
		mov	esi, eax
		jz	loc_67DD1354
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_15 ; "_dbus_connection_send_preallocated_and_"...
		mov	[esp+2Ch+Format], 7FFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_8]
		mov	ecx, edi	; char
		mov	edx, esi
		mov	[esp+2Ch+var_2C], eax ;	int
		mov	eax, ebx
		call	sub_67DD0BB0
		mov	[esp+2Ch+Format], offset aMiddle ; "middle\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_15 ; "_dbus_connection_send_preallocated_and_"...
		mov	[esp+2Ch+var_28], 805h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DCE450
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DCF230
		add	esp, 20h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DD1354:				; CODE XREF: sub_67DD1250+77j
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_21 ; "_dbus_connection_send_and_unlock"
		mov	[esp+2Ch+var_28], 822h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_21 ; "_dbus_connection_send_and_unlock"
		mov	[esp+2Ch+Format], 822h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DD1250	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  60. dbus_connection_send

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_send
dbus_connection_send proc near		; CODE XREF: sub_67DC5C60+9Fp

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_8]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_52 ; "dbus_connection_send"
		mov	[esp+2Ch+Format], 0CB0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD14E1
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_52 ; "dbus_connection_send"
		mov	[esp+2Ch+Format], 0CB1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DD1520
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_52 ; "dbus_connection_send"
		mov	dword ptr [esp+2Ch+var_28], 0CB3h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_52 ; "dbus_connection_send"
		mov	[esp+2Ch+Format], 0CB3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	[esp+2Ch+arg_8], edi
		mov	edi, [esp+2Ch+var_4]
		mov	[esp+2Ch+arg_4], esi
		mov	esi, [esp+2Ch+var_8]
		mov	[esp+2Ch+arg_0], ebx
		mov	ebx, [esp+2Ch+var_C]
		add	esp, 2Ch
		jmp	sub_67DD1250
; ---------------------------------------------------------------------------

loc_67DD14E1:				; CODE XREF: dbus_connection_send+49j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0CB0h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_52 ; "dbus_connection_send"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DD150E:				; CODE XREF: dbus_connection_send+17Dj
		xor	eax, eax
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD1520:				; CODE XREF: dbus_connection_send+7Dj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0CB1h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull ;	"message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_52 ; "dbus_connection_send"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DD150E
dbus_connection_send endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD1550	proc near		; CODE XREF: dbus_connection_flush+ADp
					; sub_67DD26C0+69p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch

		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 24h
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_22 ; "_dbus_connection_flush_unlocked"
		mov	[esp+2Ch+Format], 0DE0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+24h]
		test	eax, eax
		jg	loc_67DD1620
		jmp	loc_67DD1668
; ---------------------------------------------------------------------------
		align 10h

loc_67DD15A0:				; CODE XREF: sub_67DD1550+112j
		mov	[esp+2Ch+Format], offset aDoingIteration ; "doing iteration in\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_22 ; "_dbus_connection_flush_unlocked"
		mov	[esp+2Ch+var_28], 0DE5h	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_22 ; "_dbus_connection_flush_unlocked"
		mov	[esp+2Ch+Format], 0DE6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	[esp+2Ch+Format], 0FFFFFFFFh ; char *
		mov	[esp+2Ch+var_24], 7 ; int
		mov	[esp+2Ch+var_28], 0 ; int
		mov	[esp+2Ch+var_2C], ebx ;	char *
		call	sub_67DD0960
		mov	esi, [ebx+24h]
		test	esi, esi
		jle	short loc_67DD1668

loc_67DD1620:				; CODE XREF: sub_67DD1550+41j
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_1 ; "_dbus_connection_get_is_connected_unloc"...
		mov	[esp+2Ch+Format], 0B51h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2D80
		test	eax, eax
		jnz	loc_67DD15A0

loc_67DD1668:				; CODE XREF: sub_67DD1550+47j
					; sub_67DD1550+CEj
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_22 ; "_dbus_connection_flush_unlocked"
		mov	[esp+2Ch+Format], 0DEFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	[esp+2Ch+Format], offset aMiddle ; "middle\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_22 ; "_dbus_connection_flush_unlocked"
		mov	[esp+2Ch+var_28], 0DF0h	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DCE450
		movzx	edx, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_22 ; "_dbus_connection_flush_unlocked"
		mov	[esp+2Ch+Format], 0DF3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	dl, 5
		and	edx, 1
		mov	esi, eax
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DD1550	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  25. dbus_connection_flush

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_flush
dbus_connection_flush proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_53 ; "dbus_connection_flush"
		mov	[esp+2Ch+Format], 0E06h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD1830
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_53 ; "dbus_connection_flush"
		mov	dword ptr [esp+2Ch+var_28], 0E08h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_53 ; "dbus_connection_flush"
		mov	[esp+2Ch+Format], 0E08h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		or	byte ptr [ebx+88h], 20h
		call	sub_67DD1550
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_53 ; "dbus_connection_flush"
		mov	[esp+2Ch+Format], 0E0Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	ecx, byte ptr [ebx+88h]
		mov	esi, eax
		shr	cl, 5
		and	ecx, 1
		mov	[esp+2Ch+var_2C], ecx
		call	sub_67DFAE70
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DCF230
		mov	[esp+2Ch+Format], offset aEnd ;	"end\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_53 ; "dbus_connection_flush"
		mov	dword ptr [esp+2Ch+var_28], 0E10h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD1830:				; CODE XREF: dbus_connection_flush+37j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0E06h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_53 ; "dbus_connection_flush"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_connection_flush endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD1870	proc near		; DATA XREF: sub_67DF6110+13o
					; sub_67DF6110+35o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+Format], offset aStart	; "start\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_37 ; "_dbus_connection_handle_watch"
		mov	[esp+2Ch+var_28], 5C4h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_37 ; "_dbus_connection_handle_watch"
		mov	[esp+2Ch+var_28], 5C6h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_37 ; "_dbus_connection_handle_watch"
		mov	[esp+2Ch+Format], 5C6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	edx, 1
		mov	eax, ebx
		or	byte ptr [ebx+88h], 20h
		call	sub_67DD0570
		test	eax, eax
		jz	loc_67DD1A10
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_37 ; "_dbus_connection_handle_watch"
		mov	[esp+2Ch+Format], 5CFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_24], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF5090
		mov	esi, eax
		mov	eax, ebx
		call	sub_67DCC7F0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_37 ; "_dbus_connection_handle_watch"
		mov	[esp+2Ch+Format], 5D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+Format], offset aMiddle ; "middle\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_37 ; "_dbus_connection_handle_watch"
		mov	[esp+2Ch+var_28], 5D7h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DCE450
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DCF230
		mov	[esp+2Ch+Format], offset aEnd ;	"end\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_37 ; "_dbus_connection_handle_watch"
		mov	[esp+2Ch+var_28], 5DEh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD1A10:				; CODE XREF: sub_67DD1870+A9j
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	esi, 1
		mov	[esp+2Ch+var_24], offset a_dbus_conne_37 ; "_dbus_connection_handle_watch"
		mov	[esp+2Ch+var_28], 5CBh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_37 ; "_dbus_connection_handle_watch"
		mov	[esp+2Ch+Format], 5CBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DD1870	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD1A90	proc near		; CODE XREF: sub_67DD1B50+27p
					; sub_67DD1BA0+84j ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], esi
		mov	esi, edx
		mov	[esp+2Ch+var_2C], edx
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+2Ch+var_4], edi
		call	sub_67DEAF00
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DEA580
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+4Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF9D20
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DEA660
		test	eax, eax
		jnz	short loc_67DD1AF6

loc_67DD1ACE:				; CODE XREF: sub_67DD1A90+AAj
					; sub_67DD1A90+B8j
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], 0
		call	sub_67DEA600
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DEAE00
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD1AF6:				; CODE XREF: sub_67DD1A90+3Cj
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DEA5C0
		movzx	edx, byte ptr [ebx+88h]
		mov	[esp+2Ch+var_1C], offset aProtected_chan ; "protected_change_timeout"
		mov	[esp+2Ch+var_20], 322h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		mov	edi, eax
		mov	[esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	edx, [ebx+38h]
		test	edx, edx
		jz	short loc_67DD1ACE
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DF1820
		jmp	short loc_67DD1ACE
sub_67DD1A90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD1B50	proc near		; CODE XREF: sub_67DD26C0+3EFp
					; sub_67DD26C0+610p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, edx
		mov	[esp+1Ch+var_4], esi
		mov	esi, eax
		mov	[esp+1Ch+var_18], ecx
		mov	[esp+1Ch+var_1C], edx
		call	sub_67DEB010
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67DEAF00
		mov	edx, ebx
		mov	eax, esi
		call	sub_67DD1A90
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67DEA7B0
		mov	[esp+1Ch+var_1C], ebx
		call	dbus_pending_call_unref
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DD1B50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD1BA0	proc near		; CODE XREF: dbus_pending_call_cancel+42p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_32 ; "_dbus_connection_remove_pending_call"
		mov	[esp+2Ch+var_28], 40Bh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset a_dbus_conne_32 ; "_dbus_connection_remove_pending_call"
		mov	[esp+2Ch+Format], 40Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	edx, esi
		mov	eax, ebx
		or	byte ptr [ebx+88h], 20h
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DD1A90
sub_67DD1BA0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  62. dbus_connection_send_with_reply

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_send_with_reply
dbus_connection_send_with_reply	proc near
					; CODE XREF: dbus_connection_send_with_reply_and_block+109p

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	ebp, [esp+4Ch+arg_4]
		mov	esi, [esp+4Ch+arg_8]
		mov	edi, [esp+4Ch+arg_C]
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	[esp+4Ch+Format], 0D14h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD2091
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	[esp+4Ch+Format], 0D15h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebp, ebp
		jz	loc_67DD20C8
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	[esp+4Ch+Format], 0D16h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		cmp	edi, 0FFFFFFFFh
		jl	loc_67DD20E2
		test	esi, esi
		jz	short loc_67DD1CEE
		mov	dword ptr [esi], 0

loc_67DD1CEE:				; CODE XREF: dbus_connection_send_with_reply+B6j
		mov	[esp+4Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	dword ptr [esp+4Ch+var_48], 0D1Bh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	[esp+4Ch+Format], 0D1Bh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		or	eax, 20h
		mov	[ebx+88h], al
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_connec_1 ; "_dbus_connection_get_is_connected_unloc"...
		mov	[esp+4Ch+Format], 0B51h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF2D80
		test	eax, eax
		jz	loc_67DD1F63
		mov	dword ptr [esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_44], offset loc_67DCFD90
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DEB120
		test	eax, eax
		mov	edi, eax
		jz	loc_67DD21D1
		mov	[esp+4Ch+var_4C], ebp
		call	dbus_message_get_serial
		test	eax, eax
		jnz	short loc_67DD1DF5
		mov	eax, [ebx+50h]
		lea	edx, [eax+1]
		test	edx, edx
		mov	[ebx+50h], edx
		jz	loc_67DD1FE0

loc_67DD1DE1:				; CODE XREF: dbus_connection_send_with_reply+3B7j
		mov	dword ptr [esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_28], eax
		mov	[esp+4Ch+var_4C], ebp
		call	dbus_message_set_serial
		mov	eax, [esp+4Ch+var_28]

loc_67DD1DF5:				; CODE XREF: dbus_connection_send_with_reply+19Ej
		mov	[esp+4Ch+var_44], eax
		mov	dword ptr [esp+4Ch+var_48], ebp
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DEB250
		test	eax, eax
		jz	loc_67DD1EE6
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_23 ; "_dbus_connection_attach_pending_call_un"...
		mov	[esp+4Ch+Format], 38Eh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DEA580
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_23 ; "_dbus_connection_attach_pending_call_un"...
		mov	[esp+4Ch+Format], 392h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aReply_serial0 ; "reply_serial != 0"
		test	eax, eax
		mov	[esp+4Ch+var_20], eax
		setnz	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DEA5C0
		test	eax, eax
		mov	[esp+4Ch+var_24], eax
		jz	loc_67DD2100
		mov	dword ptr [esp+4Ch+var_3C], offset aProtected_chan ; "protected_change_timeout"
		mov	[esp+4Ch+Format], 322h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_67DD1EE6
		mov	edx, [esp+4Ch+var_24]
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_48], edx
		call	sub_67DF1920
		test	eax, eax
		jnz	loc_67DD1FF0

loc_67DD1EE6:				; CODE XREF: dbus_connection_send_with_reply+1D7j
					; dbus_connection_send_with_reply+29Cj	...
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	dword ptr [esp+4Ch+var_48], 0D6Ch ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	[esp+4Ch+Format], 0D6Ch
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0

loc_67DD1F51:				; CODE XREF: dbus_connection_send_with_reply+61Cj
		mov	[esp+4Ch+var_4C], edi
		call	dbus_pending_call_unref
		add	esp, 3Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD1F63:				; CODE XREF: dbus_connection_send_with_reply+170j
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	dword ptr [esp+4Ch+var_48], 0D2Eh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	[esp+4Ch+Format], 0D2Eh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		mov	eax, 1

loc_67DD1FD3:				; CODE XREF: dbus_connection_send_with_reply+45Cj
					; dbus_connection_send_with_reply+60Ej	...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD1FE0:				; CODE XREF: dbus_connection_send_with_reply+1ABj
		mov	dword ptr [ebx+50h], 1
		jmp	loc_67DD1DE1
; ---------------------------------------------------------------------------
		align 10h

loc_67DD1FF0:				; CODE XREF: dbus_connection_send_with_reply+2B0j
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_44], edi
		mov	dword ptr [esp+4Ch+var_48], eax
		mov	eax, [ebx+4Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF93D0
		test	eax, eax
		jz	loc_67DD2160
		mov	dword ptr [esp+4Ch+var_48], 1
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DEA600

loc_67DD201F:				; CODE XREF: dbus_connection_send_with_reply+4E9j
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DEAF00
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_23 ; "_dbus_connection_attach_pending_call_un"...
		mov	[esp+4Ch+Format], 3B5h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	edx, ebp
		mov	eax, ebx
		call	sub_67DD11B0
		test	eax, eax
		jz	loc_67DD2243
		test	esi, esi
		jz	loc_67DD2251
		mov	[esi], edi
		mov	eax, ebx
		call	sub_67DCE450
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DCF230
		mov	eax, 1
		jmp	loc_67DD1FD3
; ---------------------------------------------------------------------------

loc_67DD2091:				; CODE XREF: dbus_connection_send_with_reply+45j
		mov	dword ptr [esp+4Ch+var_3C], 0D14h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aConnectionNu_0 ; "connection != NULL"

loc_67DD20A9:				; CODE XREF: dbus_connection_send_with_reply+4B0j
					; dbus_connection_send_with_reply+4CAj
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 3Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD20C8:				; CODE XREF: dbus_connection_send_with_reply+79j
		mov	dword ptr [esp+4Ch+var_3C], 0D15h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aMessageNull ;	"message != NULL"
		jmp	short loc_67DD20A9
; ---------------------------------------------------------------------------

loc_67DD20E2:				; CODE XREF: dbus_connection_send_with_reply+AEj
		mov	dword ptr [esp+4Ch+var_3C], 0D16h
		mov	[esp+4Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aTimeout_millis ; "timeout_milliseconds >= 0 || timeout_mi"...
		jmp	short loc_67DD20A9
; ---------------------------------------------------------------------------
		align 10h

loc_67DD2100:				; CODE XREF: dbus_connection_send_with_reply+25Cj
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_44], edi
		mov	dword ptr [esp+4Ch+var_48], eax
		mov	eax, [ebx+4Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF93D0
		test	eax, eax
		jnz	loc_67DD201F
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_23 ; "_dbus_connection_attach_pending_call_un"...
		mov	[esp+4Ch+Format], 3AEh
		nop

loc_67DD2130:				; CODE XREF: dbus_connection_send_with_reply+59Cj
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		jmp	loc_67DD1EE6
; ---------------------------------------------------------------------------
		align 10h

loc_67DD2160:				; CODE XREF: dbus_connection_send_with_reply+3D9j
		mov	dword ptr [esp+4Ch+var_3C], offset aProtected_chan ; "protected_change_timeout"
		mov	[esp+4Ch+Format], 322h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_67DD21AC
		mov	edx, [esp+4Ch+var_24]
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_48], edx
		call	sub_67DF1820

loc_67DD21AC:				; CODE XREF: dbus_connection_send_with_reply+56Aj
		mov	dword ptr [esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DEA600
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_conne_23 ; "_dbus_connection_attach_pending_call_un"...
		mov	[esp+4Ch+Format], 3A2h
		jmp	loc_67DD2130
; ---------------------------------------------------------------------------

loc_67DD21D1:				; CODE XREF: dbus_connection_send_with_reply+18Ej
		mov	[esp+4Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+4Ch+var_44], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	dword ptr [esp+4Ch+var_48], 0D39h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset aDbus_connec_54 ; "dbus_connection_send_with_reply"
		mov	[esp+4Ch+Format], 0D39h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		xor	eax, eax
		jmp	loc_67DD1FD3
; ---------------------------------------------------------------------------

loc_67DD2243:				; CODE XREF: dbus_connection_send_with_reply+437j
		mov	edx, edi
		mov	eax, ebx
		call	sub_67DD1A90
		jmp	loc_67DD1F51
; ---------------------------------------------------------------------------

loc_67DD2251:				; CODE XREF: dbus_connection_send_with_reply+43Fj
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DEA580
		mov	dword ptr [esp+4Ch+var_48], eax
		mov	eax, [ebx+4Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF9D20
		mov	eax, ebx
		call	sub_67DCE450
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DCF230
		mov	[esp+4Ch+var_4C], edi
		call	dbus_pending_call_unref
		mov	eax, 1
		jmp	loc_67DD1FD3
dbus_connection_send_with_reply	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  63. dbus_connection_send_with_reply_and_block

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_send_with_reply_and_block
dbus_connection_send_with_reply_and_block proc near ; CODE XREF: sub_67DC5C60+1Dp
					; dbus_bus_start_service_by_name+104p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= byte ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	edi, [esp+4Ch+arg_4]
		mov	ebp, dword ptr [esp+4Ch+arg_8]
		mov	esi, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_3C], offset aDbus_connec_55 ; "dbus_connection_send_with_reply_and_blo"...
		mov	dword ptr [esp+4Ch+var_40], 0D9Bh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD24A0
		mov	[esp+4Ch+var_3C], offset aDbus_connec_55 ; "dbus_connection_send_with_reply_and_blo"...
		mov	dword ptr [esp+4Ch+var_40], 0D9Ch
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DD24D2
		mov	[esp+4Ch+var_3C], offset aDbus_connec_55 ; "dbus_connection_send_with_reply_and_blo"...
		mov	dword ptr [esp+4Ch+var_40], 0D9Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		cmp	ebp, 0FFFFFFFFh
		jl	loc_67DD2440
		mov	[esp+4Ch+var_3C], offset aDbus_connec_55 ; "dbus_connection_send_with_reply_and_blo"...
		mov	dword ptr [esp+4Ch+var_40], 0D9Eh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DD2386
		mov	[esp+4Ch+var_4C], esi
		call	dbus_error_is_set
		test	eax, eax
		xchg	ax, ax
		jnz	loc_67DD2480

loc_67DD2386:				; CODE XREF: dbus_connection_send_with_reply_and_block+E2j
		lea	eax, [esp+4Ch+var_20]
		mov	dword ptr [esp+4Ch+var_40], ebp	; char
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_connection_send_with_reply
		test	eax, eax
		jz	short loc_67DD2420
		mov	eax, [esp+4Ch+var_20]
		test	eax, eax
		jz	loc_67DD24F0
		mov	[esp+4Ch+var_4C], eax
		call	dbus_pending_call_block
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_4C], eax
		call	dbus_pending_call_steal_reply
		mov	ebx, eax
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_4C], eax
		call	dbus_pending_call_unref
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_3C], offset aDbus_connec_55 ; "dbus_connection_send_with_reply_and_blo"...
		mov	dword ptr [esp+4Ch+var_40], 0DC3h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aReplyNull ; "reply !=	NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], esi
		call	dbus_set_error_from_message
		test	eax, eax
		jnz	short loc_67DD2471

loc_67DD240F:				; CODE XREF: dbus_connection_send_with_reply_and_block+1ABj
					; dbus_connection_send_with_reply_and_block+1DFj ...
		add	esp, 3Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD2420:				; CODE XREF: dbus_connection_send_with_reply_and_block+110j
		mov	eax, off_67E19010
		xor	ebx, ebx
		mov	[esp+4Ch+var_48], offset aOrg_freedesk_6 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_44], eax
		call	dbus_set_error_const
		jmp	short loc_67DD240F
; ---------------------------------------------------------------------------
		align 10h

loc_67DD2440:				; CODE XREF: dbus_connection_send_with_reply_and_block+AEj
		mov	[esp+4Ch+var_3C], 0D9Dh
		mov	dword ptr [esp+4Ch+var_40], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aTimeout_millis ; "timeout_milliseconds >= 0 || timeout_mi"...

loc_67DD2458:				; CODE XREF: dbus_connection_send_with_reply_and_block+208j
					; dbus_connection_send_with_reply_and_block+25Aj
		mov	eax, off_67E19014
		xor	ebx, ebx
		mov	[esp+4Ch+var_48], offset aDbus_connec_55 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DD240F
; ---------------------------------------------------------------------------

loc_67DD2471:				; CODE XREF: dbus_connection_send_with_reply_and_block+17Dj
		mov	[esp+4Ch+var_4C], ebx
		xor	ebx, ebx
		call	dbus_message_unref
		jmp	short loc_67DD240F
; ---------------------------------------------------------------------------
		align 10h

loc_67DD2480:				; CODE XREF: dbus_connection_send_with_reply_and_block+F0j
		mov	[esp+4Ch+var_3C], 0D9Eh
		mov	dword ptr [esp+4Ch+var_40], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aErrorNullDbu_3 ; "(error) == NULL || !dbus_error_is_set ("...
		jmp	short loc_67DD2458
; ---------------------------------------------------------------------------
		align 10h

loc_67DD24A0:				; CODE XREF: dbus_connection_send_with_reply_and_block+45j
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 0D9Bh
		mov	dword ptr [esp+4Ch+var_40], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+4Ch+var_48], offset aDbus_connec_55 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DD240F
; ---------------------------------------------------------------------------

loc_67DD24D2:				; CODE XREF: dbus_connection_send_with_reply_and_block+79j
		mov	[esp+4Ch+var_3C], 0D9Ch
		mov	dword ptr [esp+4Ch+var_40], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aMessageNull ;	"message != NULL"
		jmp	loc_67DD2458
; ---------------------------------------------------------------------------
		align 10h

loc_67DD24F0:				; CODE XREF: dbus_connection_send_with_reply_and_block+118j
		mov	[esp+4Ch+var_44], offset aConnectionIsCl ; "Connection is closed"
		xor	ebx, ebx
		mov	[esp+4Ch+var_48], offset aOrg_freedesk_7 ; "org.freedesktop.DBus.Error.Disconnected"
		mov	[esp+4Ch+var_4C], esi ;	int
		call	dbus_set_error
		jmp	loc_67DD240F
dbus_connection_send_with_reply_and_block endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD2510	proc near		; CODE XREF: sub_67DD26C0+10Ap
					; sub_67DD26C0+1ADp

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		mov	edi, edx
		push	esi
		mov	esi, eax
		push	ebx
		sub	esp, 3Ch
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DEA580
		mov	dword ptr [esp+4Ch+var_3C], offset aCheck_for_repl ; "check_for_reply_unlocked"
		mov	[esp+4Ch+Format], 8BFh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		mov	[esp+4Ch+var_24], eax
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		lea	eax, [esi+1Ch]
		mov	[esp+4Ch+var_20], eax
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFB910
		mov	ebp, eax

loc_67DD256D:				; CODE XREF: sub_67DD2510+78j
		test	ebp, ebp
		jz	short loc_67DD258A
		mov	ebx, [ebp+8]
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_message_get_reply_serial
		cmp	[esp+4Ch+var_24], eax
		jz	short loc_67DD2594
		mov	ebp, [ebp+4]
		cmp	ebp, [esi+1Ch]
		jnz	short loc_67DD256D

loc_67DD258A:				; CODE XREF: sub_67DD2510+5Fj
					; sub_67DD2510+9Aj
		add	esp, 3Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD2594:				; CODE XREF: sub_67DD2510+70j
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_48], ebp
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFBE40
		sub	dword ptr [esi+28h], 1
		test	ebx, ebx
		jz	short loc_67DD258A
		mov	[esp+4Ch+Format], offset aCheckedForRepl ; "checked for	reply\n"
		mov	[esp+4Ch+var_44], offset aCheck_for_re_0 ; "check_for_reply_and_update_dispatch_unl"...
		mov	[esp+4Ch+var_48], 90Eh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+Format], offset aDbus_connec_63 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+4Ch+var_44], offset aCheck_for_re_0 ; "check_for_reply_and_update_dispatch_unl"...
		mov	[esp+4Ch+var_48], 910h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DEB010
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DEAF00
		mov	edx, edi
		mov	eax, esi
		call	sub_67DD1A90
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DEA7B0
		mov	[esp+4Ch+var_4C], edi
		call	dbus_pending_call_unref
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_message_unref
		mov	[esp+4Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+4Ch+var_44], offset aCheck_for_re_0 ; "check_for_reply_and_update_dispatch_unl"...
		mov	[esp+4Ch+var_48], 915h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esi+4]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+4Ch+var_3C], offset aCheck_for_re_0 ; "check_for_reply_and_update_dispatch_unl"...
		mov	[esp+4Ch+Format], 915h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [esi+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, esi
		or	byte ptr [esi+88h], 20h
		call	sub_67DCE450
		mov	edx, eax
		mov	eax, esi
		call	sub_67DCF230
		mov	[esp+4Ch+var_4C], edi
		call	dbus_pending_call_unref
		add	esp, 3Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DD2510	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD26C0	proc near		; CODE XREF: dbus_pending_call_block+40j

var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
Format		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= byte ptr -70h
var_68		= byte ptr -68h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 9Ch
		mov	esi, [esp+0ACh+arg_0]
		mov	dword ptr [esp+0ACh+var_9C], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+Format], 939h
		mov	[esp+0ACh+var_A4], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	esi, esi
		setnz	al
		mov	[esp+0ACh+var_AC], eax
		mov	[esp+0ACh+var_A8], offset aPendingNull_0 ; "pending != NULL"
		call	sub_67DFAE70
		mov	[esp+0ACh+var_AC], esi
		call	dbus_pending_call_get_completed
		test	eax, eax
		jz	short loc_67DD2717

loc_67DD270C:				; CODE XREF: sub_67DD26C0+111j
					; sub_67DD26C0+1B4j ...
		add	esp, 9Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD2717:				; CODE XREF: sub_67DD26C0+4Aj
		mov	[esp+0ACh+var_AC], esi
		call	dbus_pending_call_ref
		mov	[esp+0ACh+var_AC], esi
		call	sub_67DEA6B0
		mov	ebx, eax
		call	sub_67DD1550
		mov	[esp+0ACh+var_AC], esi
		call	sub_67DEA580
		mov	[esp+0ACh+var_AC], esi
		mov	dword ptr [esp+0ACh+var_70], eax
		call	sub_67DEA5C0
		mov	[esp+0ACh+var_74], eax
		lea	eax, [esp+0ACh+var_24]
		mov	[esp+0ACh+var_A8], eax
		lea	eax, [esp+0ACh+var_20]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67E0E540
		mov	eax, [esp+0ACh+var_74]
		test	eax, eax
		jz	loc_67DD2BC3
		mov	eax, [esp+0ACh+var_74]
		mov	[esp+0ACh+var_AC], eax
		call	dbus_timeout_get_interval
		mov	[esp+0ACh+Format], offset aDbus_connec_62 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 954h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0ACh+var_80], eax
		mov	eax, [esp+0ACh+var_24]
		mov	[esp+0ACh+var_90], eax
		mov	eax, [esp+0ACh+var_20]
		mov	[esp+0ACh+var_94], eax
		mov	eax, dword ptr [esp+0ACh+var_70]
		mov	[esp+0ACh+var_98], eax
		mov	eax, [esp+0ACh+var_80]
		mov	dword ptr [esp+0ACh+var_9C], eax ; char
		call	sub_67DFABC0

loc_67DD27C6:				; CODE XREF: sub_67DD26C0+537j
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DD2510
		test	eax, eax
		jnz	loc_67DD270C
		mov	eax, [esp+0ACh+var_80]

loc_67DD27DB:				; CODE XREF: sub_67DD26C0+360j
		mov	[esp+0ACh+Format], eax ; char *
		mov	[esp+0ACh+var_A4], 6 ; int
		mov	[esp+0ACh+var_A8], esi ; int
		mov	[esp+0ACh+var_AC], ebx ; char *
		call	sub_67DD0960

loc_67DD27F3:				; CODE XREF: sub_67DD26C0+2F1j
					; sub_67DD26C0+322j ...
		mov	[esp+0ACh+Format], offset aTopOfRecheck	; "top of recheck\n"
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 96Ch	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+0ACh+var_9C], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+Format], 96Eh
		mov	[esp+0ACh+var_A4], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0ACh+var_A8], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DCE450
		mov	[esp+0ACh+var_AC], esi
		mov	edi, eax
		call	sub_67DEA4B0
		test	eax, eax
		jnz	loc_67DD2C00
		test	edi, edi
		jnz	short loc_67DD287A
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DD2510
		test	eax, eax
		jnz	loc_67DD270C

loc_67DD287A:				; CODE XREF: sub_67DD26C0+1A7j
		lea	eax, [esp+0ACh+var_2C]
		mov	[esp+0ACh+var_A8], eax
		lea	eax, [esp+0ACh+var_28]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67E0E540
		mov	eax, [esp+0ACh+var_28]
		mov	dword ptr [esp+0ACh+var_9C], offset a_dbus_connec_1 ; "_dbus_connection_get_is_connected_unloc"...
		mov	ecx, [esp+0ACh+var_2C]
		mov	[esp+0ACh+Format], 0B51h
		mov	ebp, [esp+0ACh+var_20]
		mov	[esp+0ACh+var_A4], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0ACh+var_78], eax
		mov	eax, [esp+0ACh+var_24]
		mov	[esp+0ACh+var_A8], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		mov	[esp+0ACh+var_7C], eax
		movzx	eax, byte ptr [ebx+88h]
		mov	[esp+0ACh+var_84], ecx
		shr	al, 5
		and	eax, 1
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DF2D80
		mov	ecx, [esp+0ACh+var_84]
		test	eax, eax
		jz	loc_67DD2C40
		mov	eax, [esp+0ACh+var_78]
		mov	edx, 10624DD3h
		sub	ecx, [esp+0ACh+var_7C]
		sub	eax, ebp
		imul	ebp, eax, 3E8h
		mov	eax, ecx
		imul	edx
		sar	ecx, 1Fh
		sar	edx, 6
		sub	edx, ecx
		mov	ecx, [ebx+54h]
		add	ebp, edx
		test	ecx, ecx
		jz	loc_67DD2A25
		mov	edx, [esp+0ACh+var_74]
		test	edx, edx
		jz	loc_67DD2A10
		mov	eax, [esp+0ACh+var_28]
		cmp	eax, [esp+0ACh+var_20]
		jl	loc_67DD2CE2
		cmp	[esp+0ACh+var_80], ebp
		jle	loc_67DD2A49
		mov	eax, [esp+0ACh+var_80]
		mov	[esp+0ACh+Format], offset aDbus_connec_64 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 9B4h	; int
		sub	eax, ebp
		mov	ebp, eax
		mov	dword ptr [esp+0ACh+var_9C], eax ; char
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	edi, 2
		jz	short loc_67DD29B6
		mov	[esp+0ACh+Format], ebp ; char *
		mov	[esp+0ACh+var_A4], 6 ; int
		mov	[esp+0ACh+var_A8], 0 ; int
		mov	[esp+0ACh+var_AC], ebx ; char *
		call	sub_67DD0960
		jmp	loc_67DD27F3
; ---------------------------------------------------------------------------

loc_67DD29B6:				; CODE XREF: sub_67DD26C0+2D3j
		mov	[esp+0ACh+Format], offset aDbus_connec_65 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 9BCh	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	ebp, 0FFFFFFFFh
		jz	short loc_67DD29F6
		cmp	ebp, 63h
		jle	loc_67DD27F3
		cmp	ebp, 3E8h
		xchg	ax, ax
		jle	loc_67DD2B40

loc_67DD29F6:				; CODE XREF: sub_67DD26C0+31Dj
					; sub_67DD26C0+4CDj ...
		mov	[esp+0ACh+var_AC], 3E8h	; DWORD
		lea	esi, [esi+0]
		call	sub_67E0B530
		jmp	loc_67DD27F3
; ---------------------------------------------------------------------------
		align 10h

loc_67DD2A10:				; CODE XREF: sub_67DD26C0+27Cj
		cmp	edi, 2
		jz	loc_67DD2B60
		mov	eax, [esp+0ACh+var_80]
		sub	eax, ebp
		nop
		jmp	loc_67DD27DB
; ---------------------------------------------------------------------------

loc_67DD2A25:				; CODE XREF: sub_67DD26C0+270j
		mov	[esp+0ACh+Format], offset aDbus_connec_66 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 997h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DD2A49:				; CODE XREF: sub_67DD26C0+29Aj
					; sub_67DD26C0+646j
		mov	dword ptr [esp+0ACh+var_9C], ebp ; char
		mov	[esp+0ACh+Format], offset aDbus_connec_67 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 9CEh	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+0ACh+var_AC], esi
		call	sub_67DEA4B0
		mov	dword ptr [esp+0ACh+var_9C], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+Format], 9D0h
		mov	[esp+0ACh+var_A4], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0ACh+var_A8], offset a_dbus_pendin_4 ; "!_dbus_pending_call_get_completed_unloc"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DFAE70
		xor	ecx, ecx
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DD1B50
		mov	[esp+0ACh+Format], offset aLock	; "LOCK\n"
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 9D6h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+0ACh+var_9C], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+Format], 9D6h
		mov	[esp+0ACh+var_A4], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0ACh+var_A8], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DFAE70
		mov	eax, ebx
		or	byte ptr [ebx+88h], 20h
		call	sub_67DCE450
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DCF230
		mov	[esp+0ACh+var_AC], esi
		call	dbus_pending_call_unref
		jmp	loc_67DD270C
; ---------------------------------------------------------------------------
		align 10h

loc_67DD2B40:				; CODE XREF: sub_67DD26C0+330j
		mov	eax, ebp
		mov	edx, 55555556h
		imul	edx
		sar	ebp, 1Fh
		sub	edx, ebp
		mov	[esp+0ACh+var_AC], edx ; DWORD
		call	sub_67E0B530
		jmp	loc_67DD27F3
; ---------------------------------------------------------------------------
		align 10h

loc_67DD2B60:				; CODE XREF: sub_67DD26C0+353j
		mov	[esp+0ACh+Format], offset aDbus_connec_65 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 9A0h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	ecx, [esp+0ACh+var_80]
		sub	ecx, ebp
		cmp	ecx, 0FFFFFFFFh
		jz	loc_67DD29F6
		cmp	ecx, 63h
		jle	loc_67DD27F3
		cmp	ecx, 3E8h
		jg	loc_67DD29F6
		mov	eax, ecx
		mov	edx, 55555556h
		imul	edx
		sar	ecx, 1Fh
		sub	edx, ecx
		mov	[esp+0ACh+var_AC], edx ; DWORD
		call	sub_67E0B530
		jmp	loc_67DD27F3
; ---------------------------------------------------------------------------

loc_67DD2BC3:				; CODE XREF: sub_67DD26C0+A6j
		mov	eax, dword ptr [esp+0ACh+var_70]
		mov	[esp+0ACh+Format], offset aDbus_connec_68 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 95Ah	; int
		mov	dword ptr [esp+0ACh+var_9C], eax ; char
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+0ACh+var_80], 0FFFFFFFFh
		jmp	loc_67DD27C6
; ---------------------------------------------------------------------------
		align 10h

loc_67DD2C00:				; CODE XREF: sub_67DD26C0+19Fj
		mov	[esp+0ACh+Format], offset aPendingCallC_2 ; "Pending call completed by dispatch\n"
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 979h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, edi
		mov	eax, ebx
		call	sub_67DCF230
		mov	[esp+0ACh+var_AC], esi
		call	dbus_pending_call_unref
		jmp	loc_67DD270C
; ---------------------------------------------------------------------------
		align 10h

loc_67DD2C40:				; CODE XREF: sub_67DD26C0+242j
		mov	[esp+0ACh+var_30], offset aConnectionWasD ; "Connection	was disconnected before	a re"...
		mov	[esp+0ACh+var_AC], 3
		call	dbus_message_new
		test	eax, eax
		mov	edi, eax
		jz	short loc_67DD2CCA
		mov	[esp+0ACh+var_A8], offset aOrg_freedesk_7 ; "org.freedesktop.DBus.Error.Disconnected"
		mov	[esp+0ACh+var_AC], eax ; int
		call	dbus_message_set_error_name
		test	eax, eax
		jz	loc_67DD2D0B
		mov	[esp+0ACh+var_A8], 1
		mov	[esp+0ACh+var_AC], edi
		call	dbus_message_set_no_reply
		mov	eax, dword ptr [esp+0ACh+var_70]
		mov	[esp+0ACh+var_AC], edi
		mov	[esp+0ACh+var_A8], eax
		call	dbus_message_set_reply_serial
		test	eax, eax
		jz	short loc_67DD2D0B
		mov	ebp, [esp+0ACh+var_30]
		test	ebp, ebp
		jz	short loc_67DD2CCA
		lea	ebp, [esp+0ACh+var_68]
		mov	[esp+0ACh+var_A8], ebp
		mov	[esp+0ACh+var_AC], edi
		call	dbus_message_iter_init_append
		lea	eax, [esp+0ACh+var_30]
		mov	[esp+0ACh+var_A4], eax
		mov	[esp+0ACh+var_A8], 73h
		mov	[esp+0ACh+var_AC], ebp
		call	dbus_message_iter_append_basic
		test	eax, eax
		jz	short loc_67DD2D0B

loc_67DD2CCA:				; CODE XREF: sub_67DD26C0+598j
					; sub_67DD26C0+5DCj ...
		mov	ecx, edi
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DD1B50
		mov	[esp+0ACh+var_AC], esi
		call	dbus_pending_call_unref
		jmp	loc_67DD270C
; ---------------------------------------------------------------------------

loc_67DD2CE2:				; CODE XREF: sub_67DD26C0+290j
		mov	[esp+0ACh+Format], offset aDbus_connec_69 ; "dbus_connection_send_with_reply_and_blo"...
		mov	[esp+0ACh+var_A4], offset a_dbus_conne_31 ; "_dbus_connection_block_pending_call"
		mov	[esp+0ACh+var_A8], 9B1h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD2A49
; ---------------------------------------------------------------------------

loc_67DD2D0B:				; CODE XREF: sub_67DD26C0+5ACj
					; sub_67DD26C0+5D4j ...
		mov	[esp+0ACh+var_AC], edi
		xor	edi, edi
		call	dbus_message_unref
		jmp	short loc_67DD2CCA
sub_67DD26C0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  19. dbus_connection_add_filter

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_add_filter
dbus_connection_add_filter proc	near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_56 ; "dbus_connection_add_filter"
		mov	[esp+2Ch+Format], 1525h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD2F91
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_56 ; "dbus_connection_add_filter"
		mov	[esp+2Ch+Format], 1526h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DD2FC7
		mov	[esp+2Ch+var_2C], 10h ;	size_t
		call	dbus_malloc0
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		jz	loc_67DD2EBC
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E0B460
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_56 ; "dbus_connection_add_filter"
		mov	dword ptr [esp+2Ch+var_28], 152Eh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_56 ; "dbus_connection_add_filter"
		mov	[esp+2Ch+Format], 152Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+3Ch]
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFBB80
		test	eax, eax
		jz	loc_67DD2EC3
		mov	eax, [esp+2Ch+arg_8]
		mov	[esi+4], edi
		mov	[esi+8], eax
		mov	eax, [esp+2Ch+arg_C]
		mov	[esi+0Ch], eax
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_56 ; "dbus_connection_add_filter"
		mov	dword ptr [esp+2Ch+var_28], 1541h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_56 ; "dbus_connection_add_filter"
		mov	[esp+2Ch+Format], 1541h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, 1

loc_67DD2EBC:				; CODE XREF: dbus_connection_add_filter+88j
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DD2EC3:				; CODE XREF: dbus_connection_add_filter+115j
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E0B440
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_message_ ; "_dbus_message_filter_unref"
		mov	[esp+2Ch+Format], 16Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aOld_value0 ; "old_value > 0"
		mov	edi, eax
		xor	eax, eax
		test	edi, edi
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		cmp	edi, 1
		jz	short loc_67DD2F75

loc_67DD2F01:				; CODE XREF: dbus_connection_add_filter+26Cj
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset aDbus_connec_56 ; "dbus_connection_add_filter"
		mov	dword ptr [esp+2Ch+var_28], 1534h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_56 ; "dbus_connection_add_filter"
		mov	[esp+2Ch+Format], 1534h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DD2F75:				; CODE XREF: dbus_connection_add_filter+1DFj
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	short loc_67DD2F84
		mov	edx, [esi+8]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DD2F84:				; CODE XREF: dbus_connection_add_filter+25Aj
		mov	[esp+2Ch+var_2C], esi
		call	dbus_free
		jmp	loc_67DD2F01
; ---------------------------------------------------------------------------

loc_67DD2F91:				; CODE XREF: dbus_connection_add_filter+3Cj
		mov	dword ptr [esp+2Ch+var_1C], 1525h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"

loc_67DD2FA9:				; CODE XREF: dbus_connection_add_filter+2BFj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_56 ; "dbus_connection_add_filter"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DD2FC7:				; CODE XREF: dbus_connection_add_filter+70j
		mov	dword ptr [esp+2Ch+var_1C], 1526h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aFunctionNull ; "function != NULL"
		jmp	short loc_67DD2FA9
dbus_connection_add_filter endp

; ---------------------------------------------------------------------------
		jmp	short dbus_connection_dispatch
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  24. dbus_connection_dispatch

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_dispatch
dbus_connection_dispatch proc near	; CODE XREF: .text:67DD2FE1j
					; dbus_connection_read_write-1E5p ...

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= byte ptr -74h
Format		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	ebx, [esp+7Ch+arg_0]
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 1185h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD3460
		mov	[esp+7Ch+Format], offset asc_67E1CF4D ;	"\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1187h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+7Ch+Format], offset aLock ; "LOCK\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1189h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 1189h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		or	byte ptr [ebx+88h], 20h
		call	sub_67DCE450
		test	eax, eax
		mov	esi, eax
		jnz	loc_67DD3420
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+7Ch+Format], 580h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+7Ch+Format], 581h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		setz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+7Ch+Format], 583h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67E0B460
		mov	eax, ebx
		call	sub_67DCECB0
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 1198h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DCD730
		test	eax, eax
		mov	edi, eax
		jz	loc_67DD3433
		mov	esi, [eax+8]
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_signature
		mov	[esp+7Ch+var_7C], esi
		mov	[esp+7Ch+var_40], eax
		call	dbus_message_get_member
		mov	[esp+7Ch+var_44], offset aNoMember ; "no member"
		test	eax, eax
		jz	short loc_67DD31F4
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_member
		mov	[esp+7Ch+var_44], eax

loc_67DD31F4:				; CODE XREF: dbus_connection_dispatch+1F6j
		mov	[esp+7Ch+var_7C], esi
		mov	ebp, offset aNoInterface ; "no interface"
		call	dbus_message_get_interface
		test	eax, eax
		jz	short loc_67DD320F
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_interface
		mov	ebp, eax

loc_67DD320F:				; CODE XREF: dbus_connection_dispatch+213j
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_type
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_type_to_string
		mov	edx, [esp+7Ch+var_40]
		mov	[esp+7Ch+var_64], ebp
		mov	dword ptr [esp+7Ch+var_6C], esi	; char
		mov	[esp+7Ch+Format], offset aDispatchingMes ; " dispatching message %p (%s	%s %s '%s')"...
		mov	[esp+7Ch+var_5C], edx
		mov	edx, [esp+7Ch+var_44]
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_68], eax
		mov	[esp+7Ch+var_78], 11B7h	; int
		mov	[esp+7Ch+var_60], edx
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_reply_serial
		mov	[esp+7Ch+var_78], eax
		mov	eax, [ebx+4Ch]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DF9500
		test	eax, eax
		mov	ebp, eax
		jz	loc_67DD34A0
		mov	[esp+7Ch+Format], offset aDispatchingAPe ; "Dispatching	a pending reply\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 11C7h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67DEB010
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67DEAF00
		mov	edx, ebp
		mov	eax, ebx
		call	sub_67DD1A90
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67DEA7B0
		mov	[esp+7Ch+var_7C], ebp
		call	dbus_pending_call_unref
		mov	[esp+7Ch+Format], offset aLock ; "LOCK\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 11CBh	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 11CBh
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	[esp+7Ch+Format], offset aPendingCallC_1 ; "pending call completed in dispatch\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 11CCh	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DD3363:				; CODE XREF: dbus_connection_dispatch+570j
					; dbus_connection_dispatch+81Fj ...
		mov	[esp+7Ch+Format], offset a___DoneDispatc ; " ... done dispatching\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1282h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+7Ch+var_7C], edi
		call	sub_67DFBED0
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_unref

loc_67DD3397:				; CODE XREF: dbus_connection_dispatch+9DBj
		mov	eax, ebx
		call	sub_67DCC700
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 128Bh
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	[esp+7Ch+Format], offset aBeforeFinalSta ; "before final status	update\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 128Dh	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DD33F7:				; CODE XREF: dbus_connection_dispatch+46Ej
		mov	eax, ebx
		call	sub_67DCE450
		mov	edx, eax
		mov	esi, eax
		mov	eax, ebx
		call	sub_67DCF230
		mov	[esp+7Ch+var_7C], ebx
		call	dbus_connection_unref

loc_67DD3411:				; CODE XREF: dbus_connection_dispatch+609j
		add	esp, 6Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD3420:				; CODE XREF: dbus_connection_dispatch+DFj
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DCF230
		add	esp, 6Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD3433:				; CODE XREF: dbus_connection_dispatch+1CFj
		mov	[esp+7Ch+Format], offset aAnotherThreadD ; "another thread dispatched message (duri"...
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 119Fh	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DCC700
		jmp	short loc_67DD33F7
; ---------------------------------------------------------------------------

loc_67DD3460:				; CODE XREF: dbus_connection_dispatch+3Cj
		mov	eax, off_67E19014
		mov	esi, 1
		mov	dword ptr [esp+7Ch+var_6C], 1185h
		mov	[esp+7Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+7Ch+var_74], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+7Ch+var_7C], eax ;	char *
		mov	[esp+7Ch+var_78], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		call	sub_67DFB4E0
		add	esp, 6Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD34A0:				; CODE XREF: dbus_connection_dispatch+28Aj
		test	byte ptr [ebx+88h], 4
		jnz	loc_67DD3565

loc_67DD34AD:				; CODE XREF: dbus_connection_dispatch+580j
		mov	dword ptr [esp+7Ch+var_74], offset aPing ; "Ping"
		mov	[esp+7Ch+var_78], offset aOrg_freedesk_8 ; "org.freedesktop.DBus.Peer"
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_is_method_call
		test	eax, eax
		jz	loc_67DD39D0
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_new_method_return
		test	eax, eax
		mov	ebp, eax
		jz	loc_67DD3815
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_conne_24 ; "_dbus_connection_send_unlocked_no_updat"...
		mov	[esp+7Ch+Format], 0C82h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_conne_24 ; "_dbus_connection_send_unlocked_no_updat"...
		mov	[esp+7Ch+Format], 0C83h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aMessageNull ;	"message != NULL"
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DCC490
		test	eax, eax
		jz	loc_67DD3A35
		mov	edx, eax
		mov	ecx, ebp	; char
		mov	eax, ebx
		mov	[esp+7Ch+var_7C], 0 ; int
		call	sub_67DD0BB0
		mov	[esp+7Ch+var_7C], ebp
		call	dbus_message_unref
		jmp	loc_67DD3363
; ---------------------------------------------------------------------------

loc_67DD3565:				; CODE XREF: dbus_connection_dispatch+4B7j
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_destination
		test	eax, eax
		nop
		jz	loc_67DD34AD

loc_67DD3576:				; CODE XREF: dbus_connection_dispatch+A67j
		lea	eax, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_78], eax
		lea	eax, [ebx+3Ch]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFBD10
		test	eax, eax
		jnz	loc_67DD3AA5
		mov	eax, ebx
		mov	esi, 2
		call	sub_67DCC700
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 11D8h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+1Ch]
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_78], edi
		call	sub_67DFB750
		mov	edx, 2
		mov	eax, ebx
		add	dword ptr [ebx+28h], 1
		call	sub_67DCF230
		mov	[esp+7Ch+var_7C], ebx
		call	dbus_connection_unref
		jmp	loc_67DD3411
; ---------------------------------------------------------------------------

loc_67DD35FE:				; CODE XREF: dbus_connection_dispatch+B52j
		lea	edx, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_7C], edx
		mov	dword ptr [esp+7Ch+var_74], 0
		mov	[esp+7Ch+var_78], offset sub_67DCAEB0
		call	sub_67DFB9D0
		lea	eax, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFBC90
		mov	[esp+7Ch+Format], offset aLock ; "LOCK\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1208h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 1208h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h

loc_67DD3694:				; CODE XREF: dbus_connection_dispatch+C66j
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_signature
		mov	[esp+7Ch+var_7C], esi
		mov	[esp+7Ch+var_40], eax
		call	dbus_message_get_member
		mov	[esp+7Ch+var_44], offset aNoMember ; "no member"
		test	eax, eax
		jz	short loc_67DD36C0
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_member
		mov	[esp+7Ch+var_44], eax

loc_67DD36C0:				; CODE XREF: dbus_connection_dispatch+6C2j
		mov	[esp+7Ch+var_7C], esi
		mov	ebp, offset aNoInterface ; "no interface"
		call	dbus_message_get_interface
		test	eax, eax
		jz	short loc_67DD36DB
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_interface
		mov	ebp, eax

loc_67DD36DB:				; CODE XREF: dbus_connection_dispatch+6DFj
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_type
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_type_to_string
		mov	edx, [esp+7Ch+var_40]
		mov	[esp+7Ch+var_64], ebp
		mov	dword ptr [esp+7Ch+var_6C], esi	; char
		mov	[esp+7Ch+Format], offset aRunningObjectP ; "  running object path dispatch on messa"...
		mov	[esp+7Ch+var_5C], edx
		mov	edx, [esp+7Ch+var_44]
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_68], eax
		mov	[esp+7Ch+var_78], 1221h	; int
		mov	[esp+7Ch+var_60], edx
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 1223h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	[esp+7Ch+var_78], esi
		mov	eax, [ebx+78h]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DE9510
		mov	[esp+7Ch+Format], offset aLock ; "LOCK\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1227h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	ebp, eax
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 1227h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		xor	edx, 1
		and	edx, 1
		mov	[esp+7Ch+var_7C], edx
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		cmp	ebp, 1
		jz	loc_67DD3D43
		mov	[esp+7Ch+Format], offset aObjectTreeHand ; "object tree	handled	message	in dispatch"...
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 122Bh	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	ebp, 2
		jnz	loc_67DD3363

loc_67DD3815:				; CODE XREF: dbus_connection_dispatch+4E9j
					; dbus_connection_dispatch+A0Aj ...
		mov	[esp+7Ch+Format], offset aOutOfMemory ;	"out of	memory\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1277h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_conne_25 ; "_dbus_connection_putback_message_link_u"...
		mov	[esp+7Ch+Format], 0F84h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_conne_25 ; "_dbus_connection_putback_message_link_u"...
		mov	[esp+7Ch+Format], 0F86h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aMessage_linkNu ; "message_link != NULL"
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_conne_25 ; "_dbus_connection_putback_message_link_u"...
		mov	[esp+7Ch+Format], 0F88h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionMess ; "connection->message_borrowed == NULL"
		cmp	dword ptr [ebx+20h], 0
		setz	al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_conne_25 ; "_dbus_connection_putback_message_link_u"...
		mov	[esp+7Ch+Format], 0F8Ah
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionDi_0 ; "connection->dispatch_acquired"
		cmp	dword ptr [ebx+80h], 0
		setnz	al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+1Ch]
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_78], edi
		call	sub_67DFB750
		mov	esi, [ebx+28h]
		mov	eax, [edi+8]
		add	esi, 1
		mov	[ebx+28h], esi
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_get_signature
		mov	[esp+7Ch+var_40], eax
		mov	eax, [edi+8]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_get_member
		mov	[esp+7Ch+var_44], offset aNoMember ; "no member"
		test	eax, eax
		jz	short loc_67DD394C
		mov	eax, [edi+8]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_get_member
		mov	[esp+7Ch+var_44], eax

loc_67DD394C:				; CODE XREF: dbus_connection_dispatch+94Bj
		mov	eax, [edi+8]
		mov	ebp, offset aNoInterface ; "no interface"
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_get_interface
		test	eax, eax
		jz	short loc_67DD396D
		mov	eax, [edi+8]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_get_interface
		mov	ebp, eax

loc_67DD396D:				; CODE XREF: dbus_connection_dispatch+96Ej
		mov	eax, [edi+8]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_get_type
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_type_to_string
		mov	edx, [esp+7Ch+var_40]
		mov	[esp+7Ch+var_54], esi
		mov	[esp+7Ch+var_58], ebx
		mov	[esp+7Ch+var_64], ebp
		mov	[esp+7Ch+var_5C], edx
		mov	edx, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_68], eax
		mov	[esp+7Ch+var_60], edx
		mov	eax, [edi+8]
		mov	[esp+7Ch+Format], offset aMessagePSSSSPu ; "Message %p (%s %s %s '%s') put back int"...
		mov	dword ptr [esp+7Ch+var_74], offset a_dbus_conne_25 ; "_dbus_connection_putback_message_link_u"...
		mov	[esp+7Ch+var_78], 0F9Ah	; int
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD3397
; ---------------------------------------------------------------------------

loc_67DD39D0:				; CODE XREF: dbus_connection_dispatch+4D7j
		mov	dword ptr [esp+7Ch+var_74], offset aGetmachineid ; "GetMachineId"
		mov	[esp+7Ch+var_78], offset aOrg_freedesk_8 ; "org.freedesktop.DBus.Peer"
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_is_method_call
		test	eax, eax
		jz	short loc_67DD3A45
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_new_method_return
		test	eax, eax
		mov	[esp+7Ch+var_44], eax
		jz	loc_67DD3815
		lea	ebp, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E03350
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67DFB5D0
		test	eax, eax
		jnz	loc_67DD3CAE

loc_67DD3A1C:				; CODE XREF: dbus_connection_dispatch+CF0j
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E02BF0
		mov	eax, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_unref
		jmp	loc_67DD3815
; ---------------------------------------------------------------------------

loc_67DD3A35:				; CODE XREF: dbus_connection_dispatch+550j
		mov	[esp+7Ch+var_7C], ebp
		call	dbus_message_unref
		lea	esi, [esi+0]
		jmp	loc_67DD3815
; ---------------------------------------------------------------------------

loc_67DD3A45:				; CODE XREF: dbus_connection_dispatch+9FAj
		mov	[esp+7Ch+var_78], offset aOrg_freedesk_8 ; "org.freedesktop.DBus.Peer"
		mov	[esp+7Ch+var_7C], esi ;	int
		call	dbus_message_has_interface
		test	eax, eax
		jz	loc_67DD3576
		mov	dword ptr [esp+7Ch+var_74], offset aUnknownMethodI ; "Unknown method invoked on	org.freedeskt"...
		mov	[esp+7Ch+var_78], offset aOrg_freedesk_9 ; "org.freedesktop.DBus.Error.UnknownMetho"...
		mov	[esp+7Ch+var_7C], esi ;	int
		call	dbus_message_new_error
		test	eax, eax
		mov	ebp, eax
		jz	loc_67DD3815
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DD11B0
		mov	[esp+7Ch+var_7C], ebp
		mov	[esp+7Ch+var_48], eax
		call	dbus_message_unref
		mov	eax, [esp+7Ch+var_48]
		test	eax, eax
		jnz	loc_67DD3363
		jmp	loc_67DD3815
; ---------------------------------------------------------------------------

loc_67DD3AA5:				; CODE XREF: dbus_connection_dispatch+59Bj
		lea	edx, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_7C], edx
		mov	dword ptr [esp+7Ch+var_74], 0
		mov	[esp+7Ch+var_78], offset sub_67DCAF40
		call	sub_67DFB9D0
		mov	[esp+7Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 11EBh	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 11EBh
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DF1AD0
		lea	eax, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFB910
		mov	ebp, eax
		lea	esi, [esi+0]

loc_67DD3B40:				; CODE XREF: dbus_connection_dispatch+BBBj
					; dbus_connection_dispatch+CB9j
		test	ebp, ebp
		jz	loc_67DD35FE
		mov	eax, [ebp+8]
		xor	edx, edx
		mov	ebp, [ebp+4]
		cmp	ebp, [esp+7Ch+var_20]
		setz	dl
		sub	edx, 1
		and	ebp, edx
		mov	edx, [eax+4]
		test	edx, edx
		jz	loc_67DD3C85
		mov	[esp+7Ch+var_48], eax
		mov	dword ptr [esp+7Ch+var_6C], esi	; char
		mov	[esp+7Ch+Format], offset aRunningFilterO ; "  running filter on	message	%p\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 11FAh	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+7Ch+var_48]
		mov	edx, [eax+8]
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_7C], ebx
		mov	dword ptr [esp+7Ch+var_74], edx
		call	dword ptr [eax+4]
		cmp	eax, 1
		jz	short loc_67DD3B40
		lea	edx, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_48], eax
		mov	[esp+7Ch+var_7C], edx
		mov	dword ptr [esp+7Ch+var_74], 0
		mov	[esp+7Ch+var_78], offset sub_67DCAEB0
		call	sub_67DFB9D0
		lea	edx, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_7C], edx
		call	sub_67DFBC90
		mov	[esp+7Ch+Format], offset aLock ; "LOCK\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1208h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, [ebx+4]
		mov	[esp+7Ch+var_7C], edx
		call	sub_67DF1A90
		mov	dword ptr [esp+7Ch+var_6C], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+Format], 1208h
		mov	dword ptr [esp+7Ch+var_74], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		shr	dl, 5
		xor	edx, 1
		and	edx, 1
		mov	[esp+7Ch+var_7C], edx
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	eax, [esp+7Ch+var_48]
		cmp	eax, 2
		jz	loc_67DD3D1A
		test	eax, eax
		jnz	loc_67DD3694
		mov	[esp+7Ch+Format], offset aFilterHandledM ; "filter handled message in dispatch\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1211h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD3363
; ---------------------------------------------------------------------------

loc_67DD3C85:				; CODE XREF: dbus_connection_dispatch+B71j
		mov	[esp+7Ch+Format], offset aFilterWasRemov ; "  filter was removed in a callback func"...
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 11F5h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD3B40
; ---------------------------------------------------------------------------

loc_67DD3CAE:				; CODE XREF: dbus_connection_dispatch+A26j
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E01770
		mov	[esp+7Ch+Format], 0
		mov	[esp+7Ch+var_78], 73h
		mov	[esp+7Ch+var_24], eax
		lea	eax, [esp+7Ch+var_24]
		mov	dword ptr [esp+7Ch+var_74], eax
		mov	eax, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_append_args
		test	eax, eax
		jz	loc_67DD3A1C
		mov	edx, [esp+7Ch+var_44]
		mov	eax, ebx
		call	sub_67DD11B0
		mov	[esp+7Ch+var_7C], ebp
		mov	[esp+7Ch+var_48], eax
		call	sub_67E02BF0
		mov	edx, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_7C], edx
		call	dbus_message_unref
		mov	eax, [esp+7Ch+var_48]
		test	eax, eax
		jnz	loc_67DD3363
		jmp	loc_67DD3815
; ---------------------------------------------------------------------------

loc_67DD3D1A:				; CODE XREF: dbus_connection_dispatch+C5Ej
		mov	[esp+7Ch+Format], offset aNoMemory ; "No memory\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 120Ch	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD3815
; ---------------------------------------------------------------------------

loc_67DD3D43:				; CODE XREF: dbus_connection_dispatch+7F2j
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_type
		cmp	eax, 1
		xchg	ax, ax
		jz	loc_67DD3DF6

loc_67DD3D56:				; CODE XREF: dbus_connection_dispatch+F3Dj
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_signature
		mov	[esp+7Ch+var_7C], esi
		mov	[esp+7Ch+var_40], eax
		call	dbus_message_get_member
		mov	[esp+7Ch+var_44], offset aNoMember ; "no member"
		test	eax, eax
		jz	short loc_67DD3D82
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_member
		mov	[esp+7Ch+var_44], eax

loc_67DD3D82:				; CODE XREF: dbus_connection_dispatch+D84j
		mov	[esp+7Ch+var_7C], esi
		mov	ebp, offset aNoInterface ; "no interface"
		call	dbus_message_get_interface
		test	eax, eax
		jz	short loc_67DD3D9D
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_interface
		mov	ebp, eax

loc_67DD3D9D:				; CODE XREF: dbus_connection_dispatch+DA1j
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_type
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_type_to_string
		mov	edx, [esp+7Ch+var_40]
		mov	[esp+7Ch+var_58], ebx
		mov	[esp+7Ch+var_64], ebp
		mov	dword ptr [esp+7Ch+var_6C], esi	; char
		mov	[esp+7Ch+var_5C], edx
		mov	edx, [esp+7Ch+var_44]
		mov	[esp+7Ch+Format], offset aDoneDispatchin ; "  done dispatching %p (%s %s %s '%s') o"...
		mov	[esp+7Ch+var_68], eax
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_60], edx
		mov	[esp+7Ch+var_78], 1272h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD3363
; ---------------------------------------------------------------------------

loc_67DD3DF6:				; CODE XREF: dbus_connection_dispatch+D60j
		mov	dword ptr [esp+7Ch+var_6C], offset aOrg_freedesk_9 ; "org.freedesktop.DBus.Error.UnknownMetho"...
		mov	[esp+7Ch+Format], offset aSendingErrorS	; "  sending error %s\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1236h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DD3E5B
		mov	[esp+7Ch+Format], offset aNoMemoryForErr ; "no memory for error	string in dispatch\"...
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 123Bh	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD3815
; ---------------------------------------------------------------------------

loc_67DD3E5B:				; CODE XREF: dbus_connection_dispatch+E40j
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_get_interface
		mov	[esp+7Ch+var_7C], esi
		mov	ebp, eax
		call	dbus_message_get_signature
		mov	[esp+7Ch+var_7C], esi
		mov	[esp+7Ch+var_48], eax
		call	dbus_message_get_member
		mov	edx, [esp+7Ch+var_48]
		mov	dword ptr [esp+7Ch+var_6C], ebp	; char
		mov	[esp+7Ch+var_78], offset aMethodSWithSig ; "Method \"%s\" with signature \"%s\"	on "...
		mov	[esp+7Ch+Format], edx
		lea	edx, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_7C], edx ;	int
		mov	dword ptr [esp+7Ch+var_74], eax	; char
		call	sub_67E090A0
		test	eax, eax
		jnz	short loc_67DD3ED6
		lea	eax, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E02BF0
		mov	[esp+7Ch+Format], offset aNoMemoryForErr ; "no memory for error	string in dispatch\"...
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1247h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD3815
; ---------------------------------------------------------------------------

loc_67DD3ED6:				; CODE XREF: dbus_connection_dispatch+EAFj
		lea	edx, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_7C], edx
		call	sub_67E01770
		mov	[esp+7Ch+var_78], offset aOrg_freedesk_9 ; "org.freedesktop.DBus.Error.UnknownMetho"...
		mov	[esp+7Ch+var_7C], esi ;	int
		mov	dword ptr [esp+7Ch+var_74], eax	; int
		call	dbus_message_new_error
		mov	ebp, eax
		lea	eax, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E02BF0
		test	ebp, ebp
		jz	short loc_67DD3F32
		mov	eax, ebx
		call	sub_67DCC490
		test	eax, eax
		jz	short loc_67DD3F5B
		mov	edx, eax
		mov	ecx, ebp	; char
		mov	eax, ebx
		mov	[esp+7Ch+var_7C], 0 ; int
		call	sub_67DD0BB0
		mov	[esp+7Ch+var_7C], ebp
		call	dbus_message_unref
		jmp	loc_67DD3D56
; ---------------------------------------------------------------------------

loc_67DD3F32:				; CODE XREF: dbus_connection_dispatch+F16j
		mov	[esp+7Ch+Format], offset aNoMemoryForE_0 ; "no memory for error	reply in dispatch\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 1253h	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD3815
; ---------------------------------------------------------------------------

loc_67DD3F5B:				; CODE XREF: dbus_connection_dispatch+F21j
		mov	[esp+7Ch+var_7C], ebp
		call	dbus_message_unref
		mov	[esp+7Ch+Format], offset aNoMemoryForE_1 ; "no memory for error	send in	dispatch\n"
		mov	dword ptr [esp+7Ch+var_74], offset aDbus_connec_57 ; "dbus_connection_dispatch"
		mov	[esp+7Ch+var_78], 125Dh	; int
		mov	[esp+7Ch+var_7C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD3815
dbus_connection_dispatch endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR dbus_connection_read_write

loc_67DD3F90:				; CODE XREF: dbus_connection_read_write+79j
					; dbus_connection_read_write_dispatch+7Cj
		push	edi
		mov	edi, ecx
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 20h
		mov	[esp+2Ch+var_2C], eax
		call	dbus_connection_ref
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_connection_get_dispatch_status
		test	edi, edi
		setnz	dl
		mov	edi, edx
		test	eax, eax
		jz	loc_67DD4197
		cmp	eax, 2
		jz	loc_67DD42D0

loc_67DD3FC4:				; CODE XREF: dbus_connection_read_write-217j
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	dword ptr [esp+2Ch+var_28], 0E3Ah ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	[esp+2Ch+Format], 0E3Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_1 ; "_dbus_connection_get_is_connected_unloc"...
		mov	[esp+2Ch+Format], 0B51h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		or	eax, 20h
		mov	[ebx+88h], al
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2D80
		test	eax, eax
		jnz	loc_67DD4285

loc_67DD407C:				; CODE XREF: dbus_connection_read_write-EBj
		movzx	eax, byte ptr [ebx+88h]

loc_67DD4083:				; CODE XREF: dbus_connection_read_write-23j
		shr	al, 5
		and	eax, 1
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	[esp+2Ch+Format], 0E47h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	edx, edi
		test	dl, dl
		jz	loc_67DD4150
		mov	edi, [ebx+28h]
		mov	esi, 1
		test	edi, edi
		jnz	short loc_67DD40D2

loc_67DD40C7:				; CODE XREF: dbus_connection_read_write-136j
		mov	ecx, [ebx+54h]
		test	ecx, ecx
		setnz	al
		movzx	esi, al

loc_67DD40D2:				; CODE XREF: dbus_connection_read_write-2EBj
					; dbus_connection_read_write-21Ej ...
		mov	[esp+2Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	dword ptr [esp+2Ch+var_28], 0E52h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		movzx	edx, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	[esp+2Ch+Format], 0E52h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	dl, 5
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_connection_unref
		add	esp, 20h
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		retn
; END OF FUNCTION CHUNK	FOR dbus_connection_read_write
; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR dbus_connection_read_write

loc_67DD4150:				; CODE XREF: dbus_connection_read_write-2FBj
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_connec_1 ; "_dbus_connection_get_is_connected_unloc"...
		mov	[esp+2Ch+Format], 0B51h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2D80
		mov	esi, eax
		jmp	loc_67DD40D2
; ---------------------------------------------------------------------------

loc_67DD4197:				; CODE XREF: dbus_connection_read_write-3FBj
		test	dl, dl
		jz	loc_67DD3FC4
		mov	[esp+2Ch+Format], offset aDoingDispatch	; "doing dispatch\n"
		mov	esi, 1
		mov	[esp+2Ch+var_24], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	dword ptr [esp+2Ch+var_28], 0E2Eh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_connection_dispatch
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	dword ptr [esp+2Ch+var_28], 0E30h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	[esp+2Ch+Format], 0E30h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	[esp+2Ch+Format], 0E47h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		or	eax, 20h
		mov	[ebx+88h], al
		shr	al, 5
		and	eax, 1
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	edi, [ebx+28h]
		test	edi, edi
		jz	loc_67DD40C7
		jmp	loc_67DD40D2
; ---------------------------------------------------------------------------

loc_67DD4285:				; CODE XREF: dbus_connection_read_write-33Aj
		mov	[esp+2Ch+Format], offset aDoingIterati_0 ; "doing iteration\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	dword ptr [esp+2Ch+var_28], 0E3Dh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+Format], esi ;	char *
		mov	[esp+2Ch+var_24], 7 ; int
		mov	dword ptr [esp+2Ch+var_28], 0 ;	int
		mov	[esp+2Ch+var_2C], ebx ;	char *
		call	sub_67DD0960
		jmp	loc_67DD407C
; END OF FUNCTION CHUNK	FOR dbus_connection_read_write
; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR dbus_connection_read_write

loc_67DD42D0:				; CODE XREF: dbus_connection_read_write-3F2j
		mov	[esp+2Ch+Format], offset aPausingForMemo ; "pausing for	memory\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	dword ptr [esp+2Ch+var_28], 0E34h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	esi, 0FFFFFFFFh
		jz	short loc_67DD430A
		cmp	esi, 63h
		jle	short loc_67DD4316
		cmp	esi, 3E8h
		jle	loc_67DD4392

loc_67DD430A:				; CODE XREF: dbus_connection_read_write-B9j
		mov	[esp+2Ch+var_2C], 3E8h ; DWORD
		call	sub_67E0B530

loc_67DD4316:				; CODE XREF: dbus_connection_read_write-B4j
					; dbus_connection_read_write-8j
		mov	[esp+2Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+2Ch+var_24], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	dword ptr [esp+2Ch+var_28], 0E36h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		movzx	eax, byte ptr [ebx+88h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_conne_26 ; "_dbus_connection_read_write_dispatch"
		mov	[esp+2Ch+Format], 0E36h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_28], offset aConnectionHave ; "!(connection)->have_connection_lock"
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+88h]
		or	eax, 20h
		mov	[ebx+88h], al
		jmp	loc_67DD4083
; ---------------------------------------------------------------------------

loc_67DD4392:				; CODE XREF: dbus_connection_read_write-ACj
		mov	eax, esi
		mov	edx, 55555556h
		imul	edx
		sar	esi, 1Fh
		sub	edx, esi
		mov	[esp+2Ch+var_2C], edx ;	DWORD
		call	sub_67E0B530
		jmp	loc_67DD4316
; END OF FUNCTION CHUNK	FOR dbus_connection_read_write
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  53. dbus_connection_read_write

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_connection_read_write(char *, char *)
		public dbus_connection_read_write
dbus_connection_read_write proc	near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

; FUNCTION CHUNK AT 67DD3F90 SIZE 000001BE BYTES
; FUNCTION CHUNK AT 67DD4150 SIZE 0000017A BYTES
; FUNCTION CHUNK AT 67DD42D0 SIZE 000000DD BYTES

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_58 ; "dbus_connection_read_write"
		mov	[esp+2Ch+Format], 0EA0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DD4465
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_connec_58 ; "dbus_connection_read_write"
		mov	[esp+2Ch+Format], 0EA1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		cmp	esi, 0FFFFFFFFh
		jl	short loc_67DD4430
		add	esp, 24h
		mov	edx, esi
		mov	eax, ebx
		xor	ecx, ecx
		pop	ebx
		pop	esi
		jmp	loc_67DD3F90
; ---------------------------------------------------------------------------
		align 10h

loc_67DD4430:				; CODE XREF: dbus_connection_read_write+6Cj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0EA1h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aTimeout_millis ; "timeout_milliseconds >= 0 || timeout_mi"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_58 ; "dbus_connection_read_write"
		call	sub_67DFB4E0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DD4465:				; CODE XREF: dbus_connection_read_write+3Bj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 0EA0h
		mov	[esp+2Ch+Format], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_58 ; "dbus_connection_read_write"
		call	sub_67DFB4E0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
dbus_connection_read_write endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  54. dbus_connection_read_write_dispatch

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_read_write_dispatch
dbus_connection_read_write_dispatch proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_connec_59 ; "dbus_connection_read_write_dispatch"
		mov	[esp+2Ch+var_20], 0E80h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DD4556
		mov	[esp+2Ch+var_1C], offset aDbus_connec_59 ; "dbus_connection_read_write_dispatch"
		mov	[esp+2Ch+var_20], 0E81h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		cmp	esi, 0FFFFFFFFh
		jl	short loc_67DD4521
		add	esp, 24h
		mov	edx, esi
		mov	eax, ebx
		mov	ecx, 1
		pop	ebx
		pop	esi
		jmp	loc_67DD3F90
; ---------------------------------------------------------------------------

loc_67DD4521:				; CODE XREF: dbus_connection_read_write_dispatch+6Cj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0E81h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aTimeout_millis ; "timeout_milliseconds >= 0 || timeout_mi"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_59 ; "dbus_connection_read_write_dispatch"
		call	sub_67DFB4E0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DD4556:				; CODE XREF: dbus_connection_read_write_dispatch+3Bj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0E80h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_59 ; "dbus_connection_read_write_dispatch"
		call	sub_67DFB4E0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
dbus_connection_read_write_dispatch endp

; ---------------------------------------------------------------------------
		align 10h

loc_67DD4590:				; DATA XREF: sub_67DCCE40+2Bo
		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [esp+30h]
		test	esi, esi
		jz	loc_67DD477C
		mov	[esp], esi
		call	sub_67DEA4C0
		mov	dword ptr [esp+10h], offset aFree_pending_c ; "free_pending_call_on_hash_removal"
		mov	dword ptr [esp+0Ch], 3C7h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		mov	ebx, eax
		movzx	eax, byte ptr [eax+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	[esp], esi
		call	sub_67DEA660
		test	eax, eax
		jnz	loc_67DD4783

loc_67DD45F1:				; CODE XREF: .text:67DD47E5j
		mov	dword ptr [esp+10h], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	dword ptr [esp+0Ch], 580h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionNu_0 ; "connection	!= NULL"
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	dword ptr [esp+0Ch], 581h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		setz	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	dword ptr [esp+0Ch], 583h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	[esp], ebx
		call	sub_67E0B460
		mov	[esp], esi
		call	sub_67DEAE00
		mov	dword ptr [esp+0Ch], offset aLock ; "LOCK\n"
		mov	dword ptr [esp+8], offset aFree_pending_c ; "free_pending_call_on_hash_removal"
		mov	dword ptr [esp+4], 3D8h
		mov	dword ptr [esp], offset	aRBuildWin32l_1	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+10h], offset aFree_pending_c ; "free_pending_call_on_hash_removal"
		mov	dword ptr [esp+0Ch], 3D8h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+10h], offset a_dbus_connec_8 ; "_dbus_connection_unref_unlocked"
		mov	dword ptr [esp+0Ch], 595h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_connec_8 ; "_dbus_connection_unref_unlocked"
		mov	dword ptr [esp+0Ch], 597h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionNu_0 ; "connection	!= NULL"
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		mov	[esp], ebx
		call	sub_67E0B440
		cmp	eax, 1
		jz	loc_67DD47F0

loc_67DD477C:				; CODE XREF: .text:67DD459Cj
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DD4783:				; CODE XREF: .text:67DD45EBj
		mov	[esp], esi
		call	sub_67DEA5C0
		mov	dword ptr [esp+10h], offset aProtected_chan ; "protected_change_timeout"
		mov	dword ptr [esp+0Ch], 322h
		mov	dword ptr [esp+8], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	edx, byte ptr [ebx+88h]
		mov	edi, eax
		shr	dl, 5
		and	edx, 1
		mov	[esp], edx
		call	sub_67DFAE70
		mov	edx, [ebx+38h]
		test	edx, edx
		jz	short loc_67DD47D5
		mov	[esp+4], edi
		mov	[esp], edx
		call	sub_67DF1820

loc_67DD47D5:				; CODE XREF: .text:67DD47C7j
		mov	dword ptr [esp+4], 0
		mov	[esp], esi
		call	sub_67DEA600
		jmp	loc_67DD45F1
; ---------------------------------------------------------------------------
		align 10h

loc_67DD47F0:				; CODE XREF: .text:67DD4776j
		add	esp, 20h
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		jmp	sub_67DCDAC0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD4800	proc near		; CODE XREF: dbus_connection_open_private+88j
					; dbus_connection_open+8Bj

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
Format		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_78		= dword	ptr -78h
var_68		= byte ptr -68h
var_61		= byte ptr -61h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_51		= byte ptr -51h
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 7Ch
		test	ecx, ecx
		mov	[esp+8Ch+var_2C], 0
		mov	[esp+8Ch+var_3C], 0
		mov	[esp+8Ch+var_60], ecx
		mov	[esp+8Ch+var_34], 0
		mov	[esp+8Ch+var_30], 0
		mov	[esp+8Ch+var_28], 0
		mov	byte ptr [esp+8Ch+var_2C], 1
		mov	[esp+8Ch+var_44], 0
		mov	[esp+8Ch+var_40], 0
		mov	[esp+8Ch+var_38], 0
		mov	byte ptr [esp+8Ch+var_3C], 1
		jz	loc_67DD4AB0
		mov	[esp+8Ch+var_8C], ecx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DD4AB0

loc_67DD4873:				; CODE XREF: sub_67DD4800+2B5j
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		mov	[esp+8Ch+Format], 71Dh
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aErrorNullDbu_3 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+8Ch+var_8C], edx
		call	sub_67DFAE70
		test	esi, esi
		mov	eax, offset aShared ; "shared"
		jnz	short loc_67DD48A9
		mov	eax, offset aPrivate ; "private"

loc_67DD48A9:				; CODE XREF: sub_67DD4800+A2j
		mov	[esp+8Ch+var_78], ebx
		mov	dword ptr [esp+8Ch+var_7C], eax	; char
		mov	[esp+8Ch+Format], offset aOpeningSConnec ; "opening %s connection to: %s\n"
		mov	[esp+8Ch+var_84], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		mov	[esp+8Ch+var_88], 720h ; int
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+8Ch+var_60]
		mov	[esp+8Ch+var_8C], ebx ;	char *
		xor	ebx, ebx
		mov	[esp+8Ch+Format], eax ;	int
		lea	eax, [esp+8Ch+var_24]
		mov	[esp+8Ch+var_84], eax ;	int
		lea	eax, [esp+8Ch+var_20]
		mov	[esp+8Ch+var_88], eax ;	int
		call	dbus_parse_address
		test	eax, eax
		jz	loc_67DD4A9F
		mov	edi, [esp+8Ch+var_60]
		test	edi, edi
		jz	short loc_67DD4919
		mov	eax, [esp+8Ch+var_60]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DD491E

loc_67DD4919:				; CODE XREF: sub_67DD4800+105j
		mov	edx, 1

loc_67DD491E:				; CODE XREF: sub_67DD4800+117j
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		lea	ebp, [esp+8Ch+var_34]
		mov	[esp+8Ch+Format], 725h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aErrorNullDbu_3 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+8Ch+var_8C], edx
		call	sub_67DFAE70
		mov	ebx, [esp+8Ch+var_24]
		lea	eax, [esp+8Ch+var_44]
		mov	[esp+8Ch+var_5C], eax
		test	ebx, ebx
		jle	loc_67DD5073
		test	esi, esi
		setnz	[esp+8Ch+var_61]
		movzx	eax, [esp+8Ch+var_61]
		xor	edi, edi
		xor	esi, esi
		and	eax, 1
		mov	[esp+8Ch+var_51], al

loc_67DD4975:				; CODE XREF: sub_67DD4800+86Dj
		cmp	[esp+8Ch+var_61], 0
		jnz	loc_67DD4AC0

loc_67DD4980:				; CODE XREF: sub_67DD4800+552j
					; sub_67DD4800+953j ...
		mov	eax, [esp+8Ch+var_20]
		mov	[esp+8Ch+var_88], ebp
		mov	eax, [eax+edi]
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF33B0
		test	eax, eax
		jz	loc_67DD52CD
		mov	[esp+8Ch+var_8C], eax
		mov	dword ptr [esp+8Ch+var_68], eax
		call	sub_67DCCE40
		mov	edx, dword ptr [esp+8Ch+var_68]
		mov	[esp+8Ch+var_8C], edx
		mov	ebx, eax
		call	sub_67DF3240
		test	ebx, ebx
		jz	loc_67DD5355
		mov	dword ptr [esp+8Ch+var_7C], offset aConnection_try ; "connection_try_from_address_entry"
		mov	[esp+8Ch+Format], 701h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionHa_1 ; "!connection->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		cmp	[esp+8Ch+var_51], 0
		jnz	loc_67DD4D57

loc_67DD4A00:				; CODE XREF: sub_67DD4800+54Cj
					; sub_67DD4800+875j ...
		mov	eax, [esp+8Ch+var_60]
		test	eax, eax
		jz	short loc_67DD4A1A
		mov	eax, [esp+8Ch+var_60]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DD4A1F

loc_67DD4A1A:				; CODE XREF: sub_67DD4800+206j
		mov	edx, 1

loc_67DD4A1F:				; CODE XREF: sub_67DD4800+218j
		mov	[esp+8Ch+var_8C], edx
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		mov	[esp+8Ch+Format], 758h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aErrorNullDbu_3 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], ebp
		call	dbus_error_is_set
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		mov	[esp+8Ch+Format], 759h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aTmp_errorNullD ; "(&tmp_error) == NULL || !dbus_error_is_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD5190
		mov	eax, [esp+8Ch+var_5C]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_error_free

loc_67DD4A93:				; CODE XREF: sub_67DD4800+9E0j
		mov	eax, [esp+8Ch+var_20]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_address_entries_free

loc_67DD4A9F:				; CODE XREF: sub_67DD4800+F9j
		add	esp, 7Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD4AB0:				; CODE XREF: sub_67DD4800+5Bj
					; sub_67DD4800+6Dj
		mov	edx, 1
		jmp	loc_67DD4873
; ---------------------------------------------------------------------------
		align 10h

loc_67DD4AC0:				; CODE XREF: sub_67DD4800+17Aj
		mov	eax, [esp+8Ch+var_20]
		mov	ebx, [eax+edi]
		mov	[esp+8Ch+Format], offset aCheckingForExi ; "checking for existing connection\n"
		mov	[esp+8Ch+var_84], offset aConnection_loo ; "connection_lookup_shared"
		mov	[esp+8Ch+var_88], 62Ch ; int
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ds:dword_67E34D70
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1A90
		mov	ecx, ds:dword_67E34020
		test	ecx, ecx
		jz	loc_67DD50B5
		mov	[esp+8Ch+var_8C], ebx
		xor	ebx, ebx
		mov	[esp+8Ch+var_88], offset aGuid ; "guid"
		call	dbus_address_entry_get_value
		test	eax, eax
		mov	edx, eax
		jz	loc_67DD4D3D
		mov	[esp+8Ch+var_88], eax
		mov	eax, ds:dword_67E34020
		mov	dword ptr [esp+8Ch+var_68], edx
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF9570
		test	eax, eax
		mov	ebx, eax
		jz	loc_67DD4D3D
		mov	[esp+8Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+8Ch+var_84], offset aConnection_loo ; "connection_lookup_shared"
		mov	[esp+8Ch+var_88], 669h ; int
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+8Ch+var_7C], offset aConnection_loo ; "connection_lookup_shared"
		mov	[esp+8Ch+Format], 669h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_connec_1 ; "_dbus_connection_get_is_connected_unloc"...
		mov	[esp+8Ch+Format], 0B51h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+30h]
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF2D80
		mov	edx, dword ptr [esp+8Ch+var_68]
		test	eax, eax
		jz	loc_67DD5080
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+8Ch+Format], 580h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+8Ch+var_8C], 1
		call	sub_67DFAE70
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+8Ch+Format], 581h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+8Ch+Format], 583h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], ebx
		call	sub_67E0B460
		mov	edx, dword ptr [esp+8Ch+var_68]
		mov	[esp+8Ch+Format], offset aLookedUpExisti ; "looked up existing connection to server"...
		mov	[esp+8Ch+var_84], offset aConnection_loo ; "connection_lookup_shared"
		mov	[esp+8Ch+var_88], 66Fh ; int
		mov	dword ptr [esp+8Ch+var_7C], edx	; char
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+8Ch+var_58], ebx

loc_67DD4CCE:				; CODE XREF: sub_67DD4800+8B0j
		mov	[esp+8Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+8Ch+var_84], offset aConnection_loo ; "connection_lookup_shared"
		mov	[esp+8Ch+var_88], 676h ; int
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+8Ch+var_7C], offset aConnection_loo ; "connection_lookup_shared"
		mov	[esp+8Ch+Format], 676h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1AD0
		mov	ebx, [esp+8Ch+var_58]

loc_67DD4D3D:				; CODE XREF: sub_67DD4800+31Cj
					; sub_67DD4800+33Bj
		mov	eax, ds:dword_67E34D70
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1AD0
		test	ebx, ebx
		jnz	loc_67DD4A00
		jmp	loc_67DD4980
; ---------------------------------------------------------------------------

loc_67DD4D57:				; CODE XREF: sub_67DD4800+1FAj
		or	byte ptr [ebx+88h], 1
		mov	eax, [esp+8Ch+var_20]
		mov	[esp+8Ch+var_88], offset aGuid ; "guid"
		mov	eax, [eax+edi]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_address_entry_get_value
		mov	[esp+8Ch+Format], offset aLock ; "LOCK\n"
		mov	[esp+8Ch+var_84], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		mov	[esp+8Ch+var_88], 73Fh ; int
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_58], eax
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		mov	[esp+8Ch+Format], 73Fh
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionHave ; "!(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		xor	eax, 1
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+88h], 20h
		mov	dword ptr [esp+8Ch+var_7C], offset aConnection_rec ; "connection_record_shared_unlocked"
		mov	[esp+8Ch+Format], 686h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+8Ch+var_7C], offset aConnection_rec ; "connection_record_shared_unlocked"
		mov	[esp+8Ch+Format], 687h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionServ ; "connection->server_guid == NULL"
		cmp	dword ptr [ebx+7Ch], 0
		setz	al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+8Ch+var_7C], offset aConnection_rec ; "connection_record_shared_unlocked"
		mov	[esp+8Ch+Format], 688h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionShar ; "connection->shareable"
		movzx	eax, byte ptr [ebx+88h]
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+8Ch+Format], 580h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionNu_0 ; "connection != NULL"
		mov	[esp+8Ch+var_8C], 1
		call	sub_67DFAE70
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+8Ch+Format], 581h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionGene ; "connection->generation == _dbus_current"...
		mov	eax, [ebx+8Ch]
		cmp	eax, dword_67E19028
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_connec_7 ; "_dbus_connection_ref_unlocked"
		mov	[esp+8Ch+Format], 583h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], ebx
		call	sub_67E0B460
		mov	edx, [esp+8Ch+var_58]
		test	edx, edx
		jz	loc_67DD530A
		mov	eax, [esp+8Ch+var_58]
		mov	[esp+8Ch+var_8C], eax ;	char *
		call	sub_67DFAA60
		test	eax, eax
		mov	[esp+8Ch+var_50], eax
		jz	loc_67DD4FEB
		mov	eax, [esp+8Ch+var_58]
		mov	[esp+8Ch+var_8C], eax ;	char *
		call	sub_67DFAA60
		test	eax, eax
		mov	edx, eax
		jz	loc_67DD5341
		mov	eax, ds:dword_67E34D70
		mov	dword ptr [esp+8Ch+var_68], edx
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1A90
		xor	eax, eax
		cmp	ds:dword_67E34020, 0
		mov	dword ptr [esp+8Ch+var_7C], offset aConnection_rec ; "connection_record_shared_unlocked"
		mov	[esp+8Ch+Format], 6AFh
		setnz	al
		mov	[esp+8Ch+var_8C], eax
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aShared_connect ; "shared_connections != NULL"
		call	sub_67DFAE70
		mov	eax, [esp+8Ch+var_50]
		mov	[esp+8Ch+var_84], ebx
		mov	[esp+8Ch+var_88], eax
		mov	eax, ds:dword_67E34020
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF9F00
		mov	edx, dword ptr [esp+8Ch+var_68]
		test	eax, eax
		jnz	loc_67DD51E5
		mov	eax, [esp+8Ch+var_50]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_free
		mov	edx, dword ptr [esp+8Ch+var_68]
		mov	[esp+8Ch+var_8C], edx
		call	dbus_free

loc_67DD4FDE:				; CODE XREF: sub_67DD4800+B29j
		mov	eax, ds:dword_67E34D70
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1AD0

loc_67DD4FEB:				; CODE XREF: sub_67DD4800+740j
					; sub_67DD4800+B50j
		mov	eax, off_67E19010
		mov	[esp+8Ch+var_88], offset aOrg_freedesk_6 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+var_8C], ebp
		mov	[esp+8Ch+var_84], eax
		call	dbus_set_error_const
		mov	eax, ebx
		call	sub_67DCFE60
		mov	[esp+8Ch+var_8C], ebx
		call	dbus_connection_unref

loc_67DD5013:				; CODE XREF: sub_67DD4800+B05j
					; sub_67DD4800+B6Ej
		mov	[esp+8Ch+var_8C], ebp
		call	dbus_error_is_set
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		mov	[esp+8Ch+Format], 750h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aTmp_errorNul_0 ; "(&tmp_error) == NULL || dbus_error_is_s"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		test	esi, esi
		jnz	loc_67DD52C0
		mov	eax, [esp+8Ch+var_5C]
		mov	[esp+8Ch+var_8C], ebp
		mov	[esp+8Ch+var_88], eax
		call	dbus_move_error

loc_67DD5063:				; CODE XREF: sub_67DD4800+AC8j
		add	esi, 1
		add	edi, 4
		cmp	[esp+8Ch+var_24], esi
		jg	loc_67DD4975

loc_67DD5073:				; CODE XREF: sub_67DD4800+158j
		xor	ebx, ebx
		jmp	loc_67DD4A00
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5080:				; CODE XREF: sub_67DD4800+3F5j
		mov	dword ptr [esp+8Ch+var_7C], edx	; char
		mov	[esp+8Ch+Format], offset aLookedUpExis_0 ; "looked up existing connection to server"...
		mov	[esp+8Ch+var_84], offset aConnection_loo ; "connection_lookup_shared"
		mov	[esp+8Ch+var_88], 674h ; int
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+8Ch+var_58], 0
		jmp	loc_67DD4CCE
; ---------------------------------------------------------------------------

loc_67DD50B5:				; CODE XREF: sub_67DD4800+300j
		mov	[esp+8Ch+Format], offset aCreatingShared ; "creating shared_connections	hash table\"...
		mov	[esp+8Ch+var_84], offset aConnection_loo ; "connection_lookup_shared"
		mov	[esp+8Ch+var_88], 634h ; int
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+8Ch+var_84], 0
		mov	[esp+8Ch+var_88], offset dbus_free
		mov	[esp+8Ch+var_8C], 0
		call	sub_67DF9F80
		test	eax, eax
		mov	ds:dword_67E34020, eax
		jz	short loc_67DD512D
		mov	[esp+8Ch+var_88], 0
		mov	[esp+8Ch+var_8C], offset loc_67DD03B0
		call	sub_67DFE730
		test	eax, eax
		jnz	short loc_67DD5158
		mov	eax, ds:dword_67E34020
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFA0D0
		mov	ds:dword_67E34020, 0

loc_67DD512D:				; CODE XREF: sub_67DD4800+8FCj
		mov	eax, ds:dword_67E34D70
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1AD0
		mov	eax, off_67E19010
		mov	[esp+8Ch+var_88], offset aOrg_freedesk_6 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+var_8C], ebp
		mov	[esp+8Ch+var_84], eax
		call	dbus_set_error_const
		jmp	loc_67DD4980
; ---------------------------------------------------------------------------

loc_67DD5158:				; CODE XREF: sub_67DD4800+914j
		mov	[esp+8Ch+Format], offset aSuccessfullyCr ; "  successfully created shared_connectio"...
		mov	[esp+8Ch+var_84], offset aConnection_loo ; "connection_lookup_shared"
		mov	[esp+8Ch+var_88], 647h ; int
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ds:dword_67E34D70
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1AD0
		jmp	loc_67DD4980
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5190:				; CODE XREF: sub_67DD4800+281j
		mov	eax, [esp+8Ch+var_5C]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_error_is_set
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		mov	[esp+8Ch+Format], 75Dh
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aFirst_errorNul ; "(&first_error) == NULL || dbus_error_is"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	eax, [esp+8Ch+var_60]
		mov	[esp+8Ch+var_88], eax
		mov	eax, [esp+8Ch+var_5C]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_move_error
		jmp	loc_67DD4A93
; ---------------------------------------------------------------------------

loc_67DD51E5:				; CODE XREF: sub_67DD4800+7C0j
		mov	[ebx+7Ch], edx
		mov	dword ptr [esp+8Ch+var_7C], edx	; char
		mov	[esp+8Ch+Format], offset aStoredConnecti ; "stored connection to %s to be shared\n"
		mov	[esp+8Ch+var_84], offset aConnection_rec ; "connection_record_shared_unlocked"
		mov	[esp+8Ch+var_88], 6BDh ; int
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ds:dword_67E34D70
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1AD0
		xor	eax, eax
		mov	dword ptr [esp+8Ch+var_7C], offset aConnection_rec ; "connection_record_shared_unlocked"
		mov	[esp+8Ch+Format], 6C1h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionSe_0 ; "connection->server_guid != NULL"
		cmp	dword ptr [ebx+7Ch], 0
		setnz	al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70

loc_67DD524E:				; CODE XREF: sub_67DD4800+B3Cj
		mov	[esp+8Ch+Format], offset aUnlock ; "UNLOCK\n"
		mov	[esp+8Ch+var_84], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		mov	[esp+8Ch+var_88], 749h ; int
		mov	[esp+8Ch+var_8C], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+8Ch+var_7C], offset a_dbus_conne_27 ; "_dbus_connection_open_internal"
		mov	[esp+8Ch+Format], 749h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aConnectionHa_0 ; "(connection)->have_connection_lock"
		movzx	eax, byte ptr [ebx+88h]
		shr	al, 5
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		and	byte ptr [ebx+88h], 0DFh
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1AD0
		jmp	loc_67DD4A00
; ---------------------------------------------------------------------------
		align 10h

loc_67DD52C0:				; CODE XREF: sub_67DD4800+84Dj
		mov	[esp+8Ch+var_8C], ebp
		call	dbus_error_free
		jmp	loc_67DD5063
; ---------------------------------------------------------------------------

loc_67DD52CD:				; CODE XREF: sub_67DD4800+195j
		mov	[esp+8Ch+var_8C], ebp
		call	dbus_error_is_set
		mov	dword ptr [esp+8Ch+var_7C], offset aConnection_try ; "connection_try_from_address_entry"
		mov	[esp+8Ch+Format], 6F2h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aErrorNullDbu_4 ; "(error) == NULL || dbus_error_is_set (("...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		jmp	loc_67DD5013
; ---------------------------------------------------------------------------

loc_67DD530A:				; CODE XREF: sub_67DD4800+728j
		mov	eax, ds:dword_67E34D70
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1A90
		mov	[esp+8Ch+var_88], ebx
		mov	[esp+8Ch+var_8C], offset dword_67E34024
		call	sub_67DFBB10
		test	eax, eax
		jz	loc_67DD4FDE
		mov	eax, ds:dword_67E34D70
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DF1AD0
		jmp	loc_67DD524E
; ---------------------------------------------------------------------------

loc_67DD5341:				; CODE XREF: sub_67DD4800+756j
		mov	eax, [esp+8Ch+var_50]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_free
		lea	esi, [esi+0]
		jmp	loc_67DD4FEB
; ---------------------------------------------------------------------------

loc_67DD5355:				; CODE XREF: sub_67DD4800+1B7j
		mov	eax, off_67E19010
		mov	[esp+8Ch+var_88], offset aOrg_freedesk_6 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+var_8C], ebp
		mov	[esp+8Ch+var_84], eax
		call	dbus_set_error_const
		jmp	loc_67DD5013
sub_67DD4800	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  50. dbus_connection_open_private

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_open_private
dbus_connection_open_private proc near	; CODE XREF: sub_67DC7A30+272p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_connec_60 ; "dbus_connection_open_private"
		mov	[esp+2Ch+var_20], 0A31h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD5445
		mov	[esp+2Ch+var_1C], offset aDbus_connec_60 ; "dbus_connection_open_private"
		mov	[esp+2Ch+var_20], 0A32h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DD53FD
		mov	[esp+2Ch+var_2C], esi
		call	dbus_error_is_set
		test	eax, eax
		jnz	short loc_67DD5410

loc_67DD53FD:				; CODE XREF: dbus_connection_open_private+6Fj
		add	esp, 24h
		mov	ecx, esi
		mov	eax, ebx
		xor	edx, edx
		pop	ebx
		pop	esi
		jmp	sub_67DD4800
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5410:				; CODE XREF: dbus_connection_open_private+7Bj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0A32h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aErrorNullDbu_3 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_60 ; "dbus_connection_open_private"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DD543D:				; CODE XREF: dbus_connection_open_private+F2j
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DD5445:				; CODE XREF: dbus_connection_open_private+3Bj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0A31h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aAddressNull ;	"address != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_60 ; "dbus_connection_open_private"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DD543D
dbus_connection_open_private endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  49. dbus_connection_open

; =============== S U B	R O U T	I N E =======================================


		public dbus_connection_open
dbus_connection_open proc near		; CODE XREF: sub_67DC7A30+328p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_connec_61 ; "dbus_connection_open"
		mov	[esp+2Ch+var_20], 0A06h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD5545
		mov	[esp+2Ch+var_1C], offset aDbus_connec_61 ; "dbus_connection_open"
		mov	[esp+2Ch+var_20], 0A07h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_0 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DD54FD
		mov	[esp+2Ch+var_2C], esi
		call	dbus_error_is_set
		test	eax, eax
		jnz	short loc_67DD5510

loc_67DD54FD:				; CODE XREF: dbus_connection_open+6Fj
		add	esp, 24h
		mov	ecx, esi
		mov	eax, ebx
		mov	edx, 1
		pop	ebx
		pop	esi
		jmp	sub_67DD4800
; ---------------------------------------------------------------------------

loc_67DD5510:				; CODE XREF: dbus_connection_open+7Bj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0A07h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aErrorNullDbu_3 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_61 ; "dbus_connection_open"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DD553D:				; CODE XREF: dbus_connection_open+F2j
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DD5545:				; CODE XREF: dbus_connection_open+3Bj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0A06h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_1 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aAddressNull ;	"address != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_connec_61 ; "dbus_connection_open"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DD553D
dbus_connection_open endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5580	proc near		; CODE XREF: sub_67E0F7C0+4Dp
					; sub_67E0F840+226p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	[eax+8], edx
		mov	eax, 1
		retn
sub_67DD5580	endp

; ---------------------------------------------------------------------------
		jmp	short loc_67DD55A0
; ---------------------------------------------------------------------------
		align 10h

loc_67DD55A0:				; CODE XREF: .text:67DD5591j
		mov	eax, [esp+4]
		mov	edx, [esp+8]
		mov	[eax+4], edx
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_67DD55C0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD55C0	proc near		; CODE XREF: .text:67DD55B1j
					; sub_67DF2F70+54p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+8]
		retn
sub_67DD55C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD55D0	proc near		; CODE XREF: sub_67DF2FE0+54p
					; sub_67DF4150+168p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		retn
sub_67DD55D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD55E0	proc near		; CODE XREF: sub_67DF2E60+54p
					; sub_67DF4150+191p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+0Ch]
		retn
sub_67DD55E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD55F0	proc near		; CODE XREF: sub_67DF2EE0+64p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+10h]
		retn
sub_67DD55F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5600	proc near		; CODE XREF: sub_67DF2EE0+6Ep

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+14h]
		retn
sub_67DD5600	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5610	proc near		; CODE XREF: sub_67DC2530+17p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		cmp	dword ptr [eax+8], 0FFFFFFFFh
		jz	short loc_67DD5620

loc_67DD561A:				; CODE XREF: sub_67DD5610+14j
					; sub_67DD5610+1Bj
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5620:				; CODE XREF: sub_67DD5610+8j
		cmp	dword ptr [eax+4], 0FFFFFFFFh
		jnz	short loc_67DD561A
		mov	edx, [eax+0Ch]
		test	edx, edx
		jnz	short loc_67DD561A
		mov	eax, [eax+10h]
		test	eax, eax
		setz	al
		movzx	eax, al
		retn
sub_67DD5610	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5640	proc near		; CODE XREF: sub_67DC4130+1Dp
					; sub_67DC4130+118p ...

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		xor	eax, eax
		cmp	dword ptr [edx+4], 0FFFFFFFFh
		jz	short loc_67DD5650
		rep retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5650:				; CODE XREF: sub_67DD5640+Aj
		xor	eax, eax
		cmp	dword ptr [edx+0Ch], 0
		setz	al
		retn
sub_67DD5640	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		xor	edx, edx
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+20h]
		mov	esi, [esp+24h]
		mov	eax, [ebx+4]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD569C
		mov	[esp+8], eax
		mov	dword ptr [esp+4], offset aUidLu ; "uid=%lu"
		mov	[esp], esi
		call	sub_67E090A0
		test	eax, eax
		jnz	short loc_67DD5697

loc_67DD568F:				; CODE XREF: .text:67DD56C9j
		xor	eax, eax

loc_67DD5691:				; CODE XREF: .text:67DD56DAj
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DD5697:				; CODE XREF: .text:67DD568Dj
		mov	edx, 1

loc_67DD569C:				; CODE XREF: .text:67DD5675j
		mov	eax, [ebx+8]
		xor	ecx, ecx
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD56D0
		test	edx, edx
		mov	ecx, offset asc_67E1ED09 ; " "
		jz	short loc_67DD5710

loc_67DD56AF:				; CODE XREF: .text:67DD5715j
		mov	[esp+0Ch], eax
		mov	[esp+8], ecx
		mov	dword ptr [esp+4], offset aSpidLu ; "%spid=%lu"
		mov	[esp], esi
		call	sub_67E090A0
		test	eax, eax
		jz	short loc_67DD568F
		mov	ecx, 1

loc_67DD56D0:				; CODE XREF: .text:67DD56A4j
		mov	edx, [ebx+0Ch]
		mov	eax, 1
		test	edx, edx
		jz	short loc_67DD5691
		test	ecx, ecx
		mov	eax, offset asc_67E1ED09 ; " "
		jnz	short loc_67DD56EA
		mov	eax, offset byte_67E1ED08

loc_67DD56EA:				; CODE XREF: .text:67DD56E3j
		mov	[esp], esi
		mov	[esp+0Ch], edx
		mov	[esp+8], eax
		mov	dword ptr [esp+4], offset aSsidS ; "%ssid=%s"
		call	sub_67E090A0
		test	eax, eax
		setnz	al
		add	esp, 14h
		movzx	eax, al
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DD5710:				; CODE XREF: .text:67DD56ADj
		mov	ecx, offset byte_67E1ED08
		jmp	short loc_67DD56AF
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5720	proc near		; CODE XREF: sub_67DD6750+11j
					; sub_67DF4150+681p

Str1		= dword	ptr -1Ch
Str2		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_4]
		mov	ecx, [eax+4]
		cmp	ecx, [edx+4]
		jz	short loc_67DD5740

loc_67DD5733:				; CODE XREF: sub_67DD5720+2Cj
		xor	eax, eax

loc_67DD5735:				; CODE XREF: sub_67DD5720+4Fj
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5740:				; CODE XREF: sub_67DD5720+11j
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_67DD5766
		mov	edx, [edx+0Ch]
		test	edx, edx
		jz	short loc_67DD5733
		mov	[esp+1Ch+Str2],	edx ; Str2
		mov	[esp+1Ch+Str1],	eax ; Str1
		call	strcmp
		test	eax, eax
		setz	al
		add	esp, 1Ch
		movzx	eax, al
		retn
; ---------------------------------------------------------------------------

loc_67DD5766:				; CODE XREF: sub_67DD5720+25j
		xor	eax, eax
		cmp	dword ptr [edx+0Ch], 0
		setz	al
		jmp	short loc_67DD5735
sub_67DD5720	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DD5780
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5780	proc near		; CODE XREF: sub_67DC2590+19p
					; sub_67DC28A0+26p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+0Ch]
		mov	dword ptr [ebx+8], 0FFFFFFFFh
		mov	dword ptr [ebx+4], 0FFFFFFFFh
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	eax, [ebx+10h]
		mov	dword ptr [ebx+0Ch], 0
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	dword ptr [ebx+10h], 0
		mov	dword ptr [ebx+14h], 0
		add	esp, 18h
		pop	ebx
		retn
sub_67DD5780	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD57D0	proc near		; CODE XREF: sub_67DC4130+132p

Str1		= dword	ptr -1Ch
Str2		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], edi
		mov	eax, [esi+8]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD5806
		cmp	eax, [ebx+8]
		jz	short loc_67DD5806

loc_67DD57F4:				; CODE XREF: sub_67DD57D0+41j
					; sub_67DD57D0+4Fj ...
		xor	eax, eax

loc_67DD57F6:				; CODE XREF: sub_67DD57D0+6Bj
					; sub_67DD57D0+81j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD5806:				; CODE XREF: sub_67DD57D0+1Dj
					; sub_67DD57D0+22j
		mov	eax, [esi+4]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD5813
		cmp	eax, [ebx+4]
		jnz	short loc_67DD57F4

loc_67DD5813:				; CODE XREF: sub_67DD57D0+3Cj
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	short loc_67DD5831
		mov	edx, [ebx+0Ch]
		test	edx, edx
		jz	short loc_67DD57F4
		mov	[esp+1Ch+Str2],	edx ; Str2
		mov	[esp+1Ch+Str1],	eax ; Str1
		call	strcmp
		test	eax, eax
		jnz	short loc_67DD57F4

loc_67DD5831:				; CODE XREF: sub_67DD57D0+48j
		mov	esi, [esi+10h]
		mov	eax, 1
		test	esi, esi
		jz	short loc_67DD57F6
		mov	edi, [ebx+10h]
		test	edi, edi
		jz	short loc_67DD57F4
		mov	ecx, [ebx+14h]
		cmp	ecx, ecx
		repe cmpsb
		setz	al
		movzx	eax, al
		jmp	short loc_67DD57F6
sub_67DD57D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5860	proc near		; CODE XREF: sub_67DF2E60+48p
					; sub_67DF2EE0+58p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	edx, [esp+1Ch+arg_0]
		cmp	eax, 1
		jz	short loc_67DD58B3
		jnb	short loc_67DD5880
		xor	eax, eax
		cmp	dword ptr [edx+8], 0FFFFFFFFh
		setnz	al
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5880:				; CODE XREF: sub_67DD5860+10j
		cmp	eax, 2
		jz	short loc_67DD58C0
		cmp	eax, 3
		jz	short loc_67DD58A6
		mov	[esp+1Ch+var_14], 0F3h
		mov	[esp+1Ch+var_18], offset aRBuildWin32_18 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+1Ch+var_1C], offset aUnknownCredent ; "Unknown credential enum value"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DD58A6:				; CODE XREF: sub_67DD5860+28j
		xor	eax, eax
		cmp	dword ptr [edx+0Ch], 0
		setnz	al
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD58B3:				; CODE XREF: sub_67DD5860+Ej
		xor	eax, eax
		cmp	dword ptr [edx+4], 0FFFFFFFFh
		setnz	al
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD58C0:				; CODE XREF: sub_67DD5860+23j
		xor	eax, eax
		cmp	dword ptr [edx+10h], 0
		setnz	al
		add	esp, 1Ch
		retn
sub_67DD5860	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DD58D0(int,	void *,	size_t)
sub_67DD58D0	proc near		; CODE XREF: sub_67DD5980+4Cp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	eax, [esp+1Ch+arg_4]
		mov	esi, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], edi
		mov	[esp+1Ch+var_1C], eax ;	void *
		mov	[esp+1Ch+var_18], esi ;	size_t
		call	sub_67DFAA20
		mov	edi, eax
		xor	eax, eax
		test	edi, edi
		jz	short loc_67DD5915
		mov	eax, [ebx+10h]
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	eax, 1
		mov	[ebx+10h], edi
		mov	[ebx+14h], esi

loc_67DD5915:				; CODE XREF: sub_67DD58D0+2Dj
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DD58D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DD5930(int,	char *)
sub_67DD5930	proc near		; CODE XREF: sub_67DD5980+92p
					; sub_67E0C930+20j ...

var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	[esp+1Ch+var_1C], eax ;	char *
		call	sub_67DFAA60
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		jz	short loc_67DD5966
		mov	eax, [ebx+0Ch]
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	eax, 1
		mov	[ebx+0Ch], esi

loc_67DD5966:				; CODE XREF: sub_67DD5930+21j
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DD5930	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5980	proc near		; CODE XREF: sub_67DC2E90+90p
					; sub_67DC39B0+72Fp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	ecx, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_8]
		test	eax, eax
		jnz	short loc_67DD59A7
		mov	eax, [edx+8]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD59E0
		mov	[ecx+8], eax
		mov	eax, 1

loc_67DD59A3:				; CODE XREF: sub_67DD5980+59j
					; sub_67DD5980+9Fj
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD59A7:				; CODE XREF: sub_67DD5980+11j
		cmp	eax, 1
		jz	short loc_67DD59F0
		cmp	eax, 3
		nop
		jz	short loc_67DD5A04
		cmp	eax, 2
		jnz	short loc_67DD59E0
		mov	eax, [edx+10h]
		test	eax, eax
		jz	short loc_67DD59E0
		mov	edx, [edx+14h]
		mov	[esp+1Ch+var_18], eax ;	void *
		mov	[esp+1Ch+var_1C], ecx ;	int
		mov	[esp+1Ch+var_14], edx ;	size_t
		call	sub_67DD58D0
		test	eax, eax
		setnz	al
		movzx	eax, al
		jmp	short loc_67DD59A3
; ---------------------------------------------------------------------------
		align 10h

loc_67DD59E0:				; CODE XREF: sub_67DD5980+19j
					; sub_67DD5980+35j ...
		mov	eax, 1
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD59F0:				; CODE XREF: sub_67DD5980+2Aj
		mov	eax, [edx+4]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD59E0
		mov	[ecx+4], eax
		mov	eax, 1
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD5A04:				; CODE XREF: sub_67DD5980+30j
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_67DD59E0
		mov	[esp+1Ch+var_18], eax ;	char *
		mov	[esp+1Ch+var_1C], ecx ;	int
		call	sub_67DD5930
		test	eax, eax
		setnz	al
		movzx	eax, al
		jmp	short loc_67DD59A3
sub_67DD5980	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DD5A30
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5A30	proc near		; CODE XREF: sub_67DC4430+F6p
					; sub_67DC4430+101p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_creden_0 ; "_dbus_credentials_unref"
		mov	[esp+2Ch+var_20], 82h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_18 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aCredentialsRef ; "credentials->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DD5A78
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DD5A78:				; CODE XREF: sub_67DD5A30+41j
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	dbus_free
sub_67DD5A30	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_creden_2 ; "_dbus_credentials_ref"
		mov	dword ptr [esp+0Ch], 76h
		mov	dword ptr [esp+8], offset aRBuildWin32_18 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aCredentialsRef ; "credentials->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		add	dword ptr [ebx], 1
		add	esp, 28h
		pop	ebx
		retn

; =============== S U B	R O U T	I N E =======================================


sub_67DD5AE0	proc near		; CODE XREF: sub_67DC4430+B6p
					; sub_67DC4430+C2p ...

Size		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+Size],	18h ; Size
		call	dbus_malloc
		test	eax, eax
		jz	short loc_67DD5B1C
		mov	dword ptr [eax], 1
		mov	dword ptr [eax+4], 0FFFFFFFFh
		mov	dword ptr [eax+8], 0FFFFFFFFh
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0

loc_67DD5B1C:				; CODE XREF: sub_67DD5AE0+11j
		add	esp, 1Ch
		retn
sub_67DD5AE0	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DD5B20	proc near		; CODE XREF: sub_67DD7930:loc_67DD7C34p
					; sub_67DF4150+150p

Size		= dword	ptr -1Ch

		push	ebx
		sub	esp, 18h
		mov	[esp+1Ch+Size],	18h ; Size
		call	dbus_malloc
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DD5B6B
		mov	dword ptr [eax], 1
		mov	dword ptr [eax+4], 0FFFFFFFFh
		mov	dword ptr [eax+8], 0FFFFFFFFh
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	[esp+1Ch+Size],	eax
		call	sub_67E0F7C0
		test	eax, eax
		jz	short loc_67DD5B72

loc_67DD5B6B:				; CODE XREF: sub_67DD5B20+14j
					; sub_67DD5B20+5Cj
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DD5B72:				; CODE XREF: sub_67DD5B20+49j
		mov	[esp+1Ch+Size],	ebx
		xor	ebx, ebx
		call	sub_67DD5A30
		jmp	short loc_67DD5B6B
sub_67DD5B20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5B80	proc near		; CODE XREF: sub_67DC2590+34j
					; sub_67DC39B0+70Dp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	eax, [ebx+8]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD5B9E
		mov	[esi+8], eax

loc_67DD5B9E:				; CODE XREF: sub_67DD5B80+19j
		mov	eax, [ebx+4]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD5BA9
		mov	[esi+4], eax

loc_67DD5BA9:				; CODE XREF: sub_67DD5B80+24j
		mov	[esp+1Ch+var_14], ebx
		mov	[esp+1Ch+var_18], 2
		mov	[esp+1Ch+var_1C], esi
		call	sub_67DD5980
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DD5BD1

loc_67DD5BC5:				; CODE XREF: sub_67DD5B80+6Dj
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD5BD1:				; CODE XREF: sub_67DD5B80+43j
		mov	[esp+1Ch+var_14], ebx
		mov	[esp+1Ch+var_18], 3
		mov	[esp+1Ch+var_1C], esi
		call	sub_67DD5980
		test	eax, eax
		setnz	al
		movzx	eax, al
		jmp	short loc_67DD5BC5
sub_67DD5B80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5BF0	proc near		; CODE XREF: sub_67DD7930+83p

Size		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], edi
		mov	[esp+1Ch+Size],	18h ; Size
		call	dbus_malloc
		test	eax, eax
		mov	ebx, eax
		mov	edi, eax
		jz	short loc_67DD5C78
		mov	dword ptr [eax], 1
		mov	dword ptr [eax+4], 0FFFFFFFFh
		mov	dword ptr [eax+8], 0FFFFFFFFh
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	eax, [esi+8]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD5C4B
		mov	[ebx+8], eax

loc_67DD5C4B:				; CODE XREF: sub_67DD5BF0+56j
		mov	eax, [esi+4]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD5C56
		mov	[ebx+4], eax

loc_67DD5C56:				; CODE XREF: sub_67DD5BF0+61j
		mov	[esp+1Ch+var_14], esi
		mov	[esp+1Ch+var_18], 2
		mov	[esp+1Ch+Size],	ebx
		call	sub_67DD5980
		test	eax, eax
		jnz	short loc_67DD5C90

loc_67DD5C6E:				; CODE XREF: sub_67DD5BF0+B6j
		mov	[esp+1Ch+Size],	ebx
		xor	edi, edi
		call	sub_67DD5A30

loc_67DD5C78:				; CODE XREF: sub_67DD5BF0+25j
					; sub_67DD5BF0+B8j
		mov	eax, edi
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5C90:				; CODE XREF: sub_67DD5BF0+7Cj
		mov	[esp+1Ch+var_14], esi
		mov	[esp+1Ch+var_18], 3
		mov	[esp+1Ch+Size],	ebx
		call	sub_67DD5980
		test	eax, eax
		jz	short loc_67DD5C6E
		jmp	short loc_67DD5C78
sub_67DD5BF0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  87. dbus_error_is_set

; =============== S U B	R O U T	I N E =======================================


		public dbus_error_is_set
dbus_error_is_set proc near		; CODE XREF: sub_67DC1510+120p
					; sub_67DC1510+17Ep ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_error_is_ ; "dbus_error_is_set"
		mov	[esp+2Ch+var_20], 14Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_1 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DD5D30
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_67DD5D61
		xor	eax, eax
		cmp	dword ptr [ebx+4], 0
		setnz	al

loc_67DD5CF7:				; CODE XREF: dbus_error_is_set+BAj
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aDbus_error_is_ ; "dbus_error_is_set"
		mov	[esp+2Ch+var_20], 14Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aErrorNameNullE ; "(error->name != NULL && error->message "...
		call	sub_67DFAE70
		xor	eax, eax
		cmp	dword ptr [ebx], 0
		setnz	al

loc_67DD5D27:				; CODE XREF: dbus_error_is_set+AFj
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5D30:				; CODE XREF: dbus_error_is_set+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 14Bh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aErrorNull ; "error !=	NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_error_is_ ; "dbus_error_is_set"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DD5D27
; ---------------------------------------------------------------------------

loc_67DD5D61:				; CODE XREF: dbus_error_is_set+3Cj
		xor	eax, eax
		cmp	dword ptr [ebx+4], 0
		setz	al
		jmp	short loc_67DD5CF7
dbus_error_is_set endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  86. dbus_error_init

; =============== S U B	R O U T	I N E =======================================


		public dbus_error_init
dbus_error_init	proc near		; CODE XREF: sub_67DC3290+3ABp
					; sub_67DC39B0+228p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_error_ini ; "dbus_error_init"
		mov	[esp+2Ch+var_20], 0C0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_1 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DD5DF0
		mov	[esp+2Ch+var_1C], offset aDbus_error_ini ; "dbus_error_init"
		mov	[esp+2Ch+var_20], 0C2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aSizeofDbuserro ; "sizeof (DBusError) == sizeof (DBusRealE"...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		or	byte ptr [ebx+8], 1
		mov	dword ptr [ebx], 0
		mov	dword ptr [ebx+4], 0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5DF0:				; CODE XREF: dbus_error_init+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0C0h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aErrorNull ; "error !=	NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_error_ini ; "dbus_error_init"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_error_init	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  84. dbus_error_free

; =============== S U B	R O U T	I N E =======================================


		public dbus_error_free
dbus_error_free	proc near		; CODE XREF: sub_67DC3290+486p
					; sub_67DC3290+567p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_error_fre ; "dbus_error_free"
		mov	[esp+2Ch+var_20], 0D7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_1 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DD5EA2
		test	byte ptr [ebx+8], 1
		jz	short loc_67DD5E80
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	dbus_error_init
; ---------------------------------------------------------------------------
		align 10h

loc_67DD5E80:				; CODE XREF: dbus_error_free+3Cj
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	dbus_error_init
; ---------------------------------------------------------------------------

loc_67DD5EA2:				; CODE XREF: dbus_error_free+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0D7h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aErrorNull ; "error !=	NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_error_fre ; "dbus_error_free"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_error_free	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 166. dbus_move_error

; =============== S U B	R O U T	I N E =======================================


		public dbus_move_error
dbus_move_error	proc near		; CODE XREF: sub_67DD4800+85Ep
					; sub_67DD4800+9DBp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_move_erro ; "dbus_move_error"
		mov	[esp+2Ch+var_20], 11Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_1 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DD5F55
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	short loc_67DD5F63
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_error_free
		mov	eax, [esi]
		mov	[ebx], eax
		mov	eax, [esi+4]
		mov	[ebx+4], eax
		mov	eax, [esi+8]
		mov	[ebx+8], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+0Ch], eax
		mov	[esp+2Ch+arg_0], esi
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_error_init
; ---------------------------------------------------------------------------

loc_67DD5F55:				; CODE XREF: dbus_move_error+3Bj
		mov	[esp+2Ch+arg_0], esi
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_error_free
; ---------------------------------------------------------------------------

loc_67DD5F63:				; CODE XREF: dbus_move_error+47j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 11Ah
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aDestNullDbus_e ; "(dest) == NULL || !dbus_error_is_set (("...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_move_erro ; "dbus_move_error"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_move_error	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD5FA0	proc near		; CODE XREF: dbus_set_error_const+152p
					; dbus_set_error+162p

Str1		= dword	ptr -1Ch
Str2		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 1Ch
		mov	ecx, 22h
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+1Ch+var_8], esi
		mov	esi, eax
		mov	[esp+1Ch+var_4], edi
		mov	edi, offset aOrg_freedes_10 ; "org.freedesktop.DBus.Error.Failed"
		repe cmpsb
		jz	loc_67DD6127
		mov	edi, offset aOrg_freedes_11 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	ecx, 24h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6110
		mov	edi, offset aOrg_freedes_12 ; "org.freedesktop.DBus.Error.IOError"
		mov	ecx, 23h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6137
		mov	edi, offset aOrg_freedes_13 ; "org.freedesktop.DBus.Error.BadAddress"
		mov	ecx, 26h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6130
		mov	edi, offset aOrg_freedes_14 ; "org.freedesktop.DBus.Error.NotSupported"
		mov	ecx, 28h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6140
		mov	edi, offset aOrg_freedes_15 ; "org.freedesktop.DBus.Error.LimitsExceed"...
		mov	ecx, 2Ah
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6150
		mov	edi, offset aOrg_freedes_16 ; "org.freedesktop.DBus.Error.AccessDenied"
		mov	ecx, 28h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6147
		mov	edi, offset aOrg_freedes_17 ; "org.freedesktop.DBus.Error.AuthFailed"
		mov	ecx, 26h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6157
		mov	edi, offset aOrg_freedes_18 ; "org.freedesktop.DBus.Error.NoServer"
		mov	ecx, 24h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD615E
		mov	edi, offset aOrg_freedes_19 ; "org.freedesktop.DBus.Error.Timeout"
		mov	ecx, 23h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6165
		mov	edi, offset aOrg_freedes_20 ; "org.freedesktop.DBus.Error.NoNetwork"
		mov	ecx, 25h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD616C
		mov	edi, offset aOrg_freedes_21 ; "org.freedesktop.DBus.Error.AddressInUse"
		mov	ecx, 28h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6173
		mov	edi, offset aOrg_freedes_22 ; "org.freedesktop.DBus.Error.Disconnected"
		mov	ecx, 28h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD617A
		mov	edi, offset aOrg_freedes_23 ; "org.freedesktop.DBus.Error.InvalidArgs"
		mov	ecx, 27h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6181
		mov	edi, offset aOrg_freedes_24 ; "org.freedesktop.DBus.Error.NoReply"
		mov	ecx, 23h
		mov	esi, eax
		repe cmpsb
		jz	loc_67DD6188
		mov	[esp+1Ch+Str2],	offset Str2 ; "org.freedesktop.DBus.Error.FileNotFound"
		mov	[esp+1Ch+Str1],	eax ; Str1
		call	strcmp
		test	eax, eax
		jz	loc_67DD618F
		mov	[esp+1Ch+Str2],	offset aOrg_freedes_26 ; "org.freedesktop.DBus.Error.ObjectPathIn"...
		mov	[esp+1Ch+Str1],	ebx ; Str1
		call	strcmp
		test	eax, eax
		jnz	short loc_67DD6115
		mov	ebx, offset aObjectPathAlre ; "Object path already in use"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD6110:				; CODE XREF: sub_67DD5FA0+33j
		mov	ebx, offset aNotEnoughMemor ; "Not enough memory available"

loc_67DD6115:				; CODE XREF: sub_67DD5FA0+167j
					; sub_67DD5FA0+16Ej ...
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_8]
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD6127:				; CODE XREF: sub_67DD5FA0+1Fj
		mov	ebx, offset aUnknownError ; "Unknown error"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6130:				; CODE XREF: sub_67DD5FA0+5Bj
		mov	ebx, offset aCouldNotParseA ; "Could not parse address"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD6137:				; CODE XREF: sub_67DD5FA0+47j
		mov	ebx, offset aErrorReadingOr ; "Error reading or	writing	data"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6140:				; CODE XREF: sub_67DD5FA0+6Fj
		mov	ebx, offset aFeatureNotSupp ; "Feature not supported"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD6147:				; CODE XREF: sub_67DD5FA0+97j
		mov	ebx, offset aPermissionDeni ; "Permission denied"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6150:				; CODE XREF: sub_67DD5FA0+83j
		mov	ebx, offset aResourceLimits ; "Resource	limits exceeded"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD6157:				; CODE XREF: sub_67DD5FA0+ABj
		mov	ebx, offset aCouldNotAuthen ; "Could not authenticate to server"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD615E:				; CODE XREF: sub_67DD5FA0+BFj
		mov	ebx, offset aNoServerAvaila ; "No server available at address"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD6165:				; CODE XREF: sub_67DD5FA0+D3j
		mov	ebx, offset aConnectionTime ; "Connection timed	out"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD616C:				; CODE XREF: sub_67DD5FA0+E7j
		mov	ebx, offset aNetworkUnavail ; "Network unavailable"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD6173:				; CODE XREF: sub_67DD5FA0+FBj
		mov	ebx, offset aAddressAlready ; "Address already in use"
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD617A:				; CODE XREF: sub_67DD5FA0+10Fj
		mov	ebx, offset aDisconnected_ ; "Disconnected."
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD6181:				; CODE XREF: sub_67DD5FA0+123j
		mov	ebx, offset aInvalidArgumen ; "Invalid arguments."
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD6188:				; CODE XREF: sub_67DD5FA0+137j
		mov	ebx, offset aDidNotGetARepl ; "Did not get a reply message."
		jmp	short loc_67DD6115
; ---------------------------------------------------------------------------

loc_67DD618F:				; CODE XREF: sub_67DD5FA0+14Fj
		mov	ebx, offset aFileDoesnTExis ; "File doesn't exist."
		jmp	loc_67DD6115
sub_67DD5FA0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 196. dbus_set_error_const

; =============== S U B	R O U T	I N E =======================================


		public dbus_set_error_const
dbus_set_error_const proc near		; CODE XREF: sub_67DC1510+1A5p
					; dbus_address_unescape_value+12Bp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset aDbus_set_error ; "dbus_set_error_const"
		mov	[esp+2Ch+var_20], 0F9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_1 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DD61FB
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	loc_67DD62B1

loc_67DD61FB:				; CODE XREF: dbus_set_error_const+49j
		mov	[esp+2Ch+var_1C], offset aDbus_set_error ; "dbus_set_error_const"
		mov	[esp+2Ch+var_20], 0FAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_1 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DD6300
		test	ebx, ebx
		jz	short loc_67DD62A1
		mov	[esp+2Ch+var_1C], offset aDbus_set_error ; "dbus_set_error_const"
		xor	eax, eax
		mov	[esp+2Ch+var_20], 0FFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aErrorNameNull ; "error->name == NULL"
		cmp	dword ptr [ebx], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset aDbus_set_error ; "dbus_set_error_const"
		mov	[esp+2Ch+var_20], 100h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aErrorMessageNu ; "error->message ==	NULL"
		cmp	dword ptr [ebx+4], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		test	edi, edi
		jz	short loc_67DD62F0

loc_67DD6298:				; CODE XREF: dbus_set_error_const+159j
		or	byte ptr [ebx+8], 1
		mov	[ebx], esi
		mov	[ebx+4], edi

loc_67DD62A1:				; CODE XREF: dbus_set_error_const+91j
					; dbus_set_error_const+18Dj
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD62B1:				; CODE XREF: dbus_set_error_const+55j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0F9h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aErrorNullDbu_5 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_set_error ; "dbus_set_error_const"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD62F0:				; CODE XREF: dbus_set_error_const+F6j
		mov	eax, esi
		call	sub_67DD5FA0
		mov	edi, eax
		jmp	short loc_67DD6298
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6300:				; CODE XREF: dbus_set_error_const+89j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0FAh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aNameNull_0 ; "name !=	NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_set_error ; "dbus_set_error_const"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DD62A1
dbus_set_error_const endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 195. dbus_set_error

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_set_error(int, char *, char *, char)
		public dbus_set_error
dbus_set_error	proc near		; CODE XREF: sub_67DC14A0+33p
					; sub_67DC14A0+5Cj ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h

		sub	esp, 5Ch
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_8], edi
		mov	edi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4], ebp
		mov	ebp, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_C], esi
		test	ebx, ebx
		jz	loc_67DD6485
		mov	[esp+5Ch+var_4C], offset aDbus_set_err_0 ; "dbus_set_error"
		mov	[esp+5Ch+var_50], 16Fh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_1 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	loc_67DD64E6
		mov	[esp+5Ch+var_4C], offset aDbus_set_err_0 ; "dbus_set_error"
		mov	[esp+5Ch+var_50], 170h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_1 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DD6518
		mov	[esp+5Ch+var_4C], offset aDbus_set_err_0 ; "dbus_set_error"
		xor	eax, eax
		mov	[esp+5Ch+var_50], 172h
		lea	esi, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNameNull	; "error->name == NULL"
		cmp	dword ptr [ebx], 0
		setz	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset aDbus_set_err_0 ; "dbus_set_error"
		mov	[esp+5Ch+var_50], 173h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorMessageNu ; "error->message == NULL"
		cmp	dword ptr [ebx+4], 0
		setz	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DD646C
		test	ebp, ebp
		jz	short loc_67DD64A0
		lea	eax, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_54], eax ;	va_list
		mov	[esp+5Ch+var_58], ebp ;	char *
		mov	[esp+5Ch+var_5C], esi ;	int
		call	sub_67E08E70
		test	eax, eax
		jnz	short loc_67DD64B7

loc_67DD6464:				; CODE XREF: dbus_set_error+175j
					; dbus_set_error+188j
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E02BF0

loc_67DD646C:				; CODE XREF: dbus_set_error+106j
					; dbus_set_error+222j
		mov	eax, off_67E19010
		mov	[esp+5Ch+var_58], offset aOrg_freedes_11 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_54], eax
		call	dbus_set_error_const

loc_67DD6485:				; CODE XREF: dbus_set_error+21j
					; dbus_set_error+1A4j ...
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD64A0:				; CODE XREF: dbus_set_error+10Aj
		mov	eax, edi
		call	sub_67DD5FA0
		mov	[esp+5Ch+var_5C], esi ;	int
		mov	[esp+5Ch+var_58], eax ;	char *
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DD6464

loc_67DD64B7:				; CODE XREF: dbus_set_error+122j
		lea	eax, [ebx+4]
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E05F70
		test	eax, eax
		jz	short loc_67DD6464
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E02BF0
		mov	[esp+5Ch+var_5C], edi ;	char *
		call	sub_67DFAA60
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DD6550
		and	byte ptr [ebx+8], 0FEh
		jmp	short loc_67DD6485
; ---------------------------------------------------------------------------

loc_67DD64E6:				; CODE XREF: dbus_set_error+5Dj
		mov	eax, off_67E19014
		mov	[esp+5Ch+var_4C], 16Fh
		mov	[esp+5Ch+var_50], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aErrorNullDbu_5 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+5Ch+var_58], offset aDbus_set_err_0 ; "dbus_set_error"
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DD6485
; ---------------------------------------------------------------------------

loc_67DD6518:				; CODE XREF: dbus_set_error+91j
		mov	eax, off_67E19014
		mov	[esp+5Ch+var_4C], 170h
		mov	[esp+5Ch+var_50], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aNameNull_0 ; "name !=	NULL"
		mov	[esp+5Ch+var_58], offset aDbus_set_err_0 ; "dbus_set_error"
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DD6485
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6550:				; CODE XREF: dbus_set_error+19Ej
		mov	eax, [ebx+4]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_free
		mov	dword ptr [ebx+4], 0
		jmp	loc_67DD646C
dbus_set_error	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  85. dbus_error_has_name

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_error_has_name(int, char *)
		public dbus_error_has_name
dbus_error_has_name proc near		; CODE XREF: sub_67DC3290+47Ap
					; sub_67DC39B0+64Ep ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 54h
		mov	ebx, [esp+5Ch+arg_0]
		mov	esi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4C], offset aDbus_error_has ; "dbus_error_has_name"
		mov	[esp+5Ch+var_50], 131h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_1 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DD6660
		mov	[esp+5Ch+var_4C], offset aDbus_error_has ; "dbus_error_has_name"
		mov	[esp+5Ch+var_50], 132h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_1 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DD6695
		mov	edx, [ebx]
		test	edx, edx
		jz	loc_67DD66B0
		xor	eax, eax
		cmp	dword ptr [ebx+4], 0
		setnz	al

loc_67DD65F8:				; CODE XREF: dbus_error_has_name+149j
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset aDbus_error_has ; "dbus_error_has_name"
		mov	[esp+5Ch+var_50], 135h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNameNullE ; "(error->name != NULL && error->message "...
		call	sub_67DFAE70
		mov	edx, [ebx]
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DD6654
		lea	ebx, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], edx ;	char *
		mov	[esp+5Ch+var_5C], ebx ;	int
		call	sub_67E03060
		mov	[esp+5Ch+var_58], esi ;	char *
		lea	esi, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_5C], esi ;	int
		call	sub_67E03060
		mov	[esp+5Ch+var_58], esi
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67DFF980

loc_67DD6654:				; CODE XREF: dbus_error_has_name+B6j
		add	esp, 54h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6660:				; CODE XREF: dbus_error_has_name+3Bj
		mov	[esp+5Ch+var_4C], 131h
		mov	[esp+5Ch+var_50], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aErrorNull ; "error !=	NULL"

loc_67DD6678:				; CODE XREF: dbus_error_has_name+13Dj
		mov	eax, off_67E19014
		mov	[esp+5Ch+var_58], offset aDbus_error_has ; "dbus_error_has_name"
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 54h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DD6695:				; CODE XREF: dbus_error_has_name+6Fj
		mov	[esp+5Ch+var_4C], 132h
		mov	[esp+5Ch+var_50], offset aRBuildWin32l_2 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aNameNull_0 ; "name !=	NULL"
		jmp	short loc_67DD6678
; ---------------------------------------------------------------------------
		align 10h

loc_67DD66B0:				; CODE XREF: dbus_error_has_name+79j
		xor	eax, eax
		cmp	dword ptr [ebx+4], 0
		setz	al
		jmp	loc_67DD65F8
dbus_error_has_name endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		add	dword ptr [eax], 1
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD66D0	proc near		; CODE XREF: sub_67DC30E0+80p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	eax, [esp+2Ch+arg_0]
		mov	ebp, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_8]
		mov	edi, [eax+44h]
		mov	ebx, [eax+40h]
		test	edi, edi
		jle	short loc_67DD670A
		cmp	ebp, [ebx]
		jz	short loc_67DD6717
		lea	eax, [ebx+1Ch]
		xor	edx, edx
		jmp	short loc_67DD6703
; ---------------------------------------------------------------------------

loc_67DD66F8:				; CODE XREF: sub_67DD66D0+38j
		mov	ecx, [eax]
		mov	ebx, eax
		add	eax, 1Ch
		cmp	ebp, ecx
		jz	short loc_67DD6717

loc_67DD6703:				; CODE XREF: sub_67DD66D0+26j
		add	edx, 1
		cmp	edi, edx
		jg	short loc_67DD66F8

loc_67DD670A:				; CODE XREF: sub_67DD66D0+1Bj
					; sub_67DD66D0+49j
		add	esp, 1Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD6717:				; CODE XREF: sub_67DD66D0+1Fj
					; sub_67DD66D0+31j
		test	ebx, ebx
		jz	short loc_67DD670A
		mov	[esp+2Ch+var_2C], esi
		add	ebx, 8
		call	sub_67E00CE0
		mov	[esp+2Ch+var_24], esi
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_20], eax
		call	sub_67E080C0
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DD66D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD6750	proc near		; CODE XREF: sub_67DC39B0+1D9p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+48h]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_67DD5720
sub_67DD6750	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD6770	proc near		; CODE XREF: sub_67DD7930+243p
					; sub_67DD7D30+FFp

Memory		= dword	ptr -0DCh
NewSize		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
Format		= dword	ptr -0D0h
var_CC		= byte ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= byte ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_78		= byte ptr -78h
var_64		= byte ptr -64h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= byte ptr -40h
var_3C		= byte ptr -3Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= byte ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0CCh
		test	ecx, ecx
		mov	[esp+0DCh+var_A4], eax
		mov	[esp+0DCh+var_A8], edx
		mov	[esp+0DCh+var_AC], ecx
		jz	short loc_67DD67F0
		mov	[esp+0DCh+Memory], ecx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DD67F0

loc_67DD6798:				; CODE XREF: sub_67DD6770+85j
		mov	[esp+0DCh+Memory], edx
		xor	ebx, ebx
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	[esp+0DCh+Format], 198h	; char
		mov	[esp+0DCh+var_D4], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+NewSize], offset aErrorNullDb_28 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	eax, [esp+0DCh+var_AC]
		mov	[esp+0DCh+NewSize], eax
		mov	eax, [esp+0DCh+var_A4]
		add	eax, 4
		mov	[esp+0DCh+Memory], eax
		call	sub_67E0AC60
		test	eax, eax
		jnz	short loc_67DD67F7

loc_67DD67DD:				; CODE XREF: sub_67DD6770+35Bj
		add	esp, 0CCh
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD67F0:				; CODE XREF: sub_67DD6770+18j
					; sub_67DD6770+26j
		mov	edx, 1
		jmp	short loc_67DD6798
; ---------------------------------------------------------------------------

loc_67DD67F7:				; CODE XREF: sub_67DD6770+6Bj
		lea	edx, [esp+0DCh+var_64]
		mov	[esp+0DCh+Memory], edx
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DD6AD0
		lea	esi, [esp+0DCh+var_78]
		mov	[esp+0DCh+Memory], esi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DD6AA1
		lea	eax, [esp+0DCh+var_20]
		mov	[esp+0DCh+Memory], eax
		mov	[esp+0DCh+NewSize], 0
		call	sub_67E0C850
		mov	eax, [esp+0DCh+var_A8]
		mov	[esp+0DCh+var_94], 0
		test	eax, eax
		jz	loc_67DD6907
		mov	ebp, [esp+0DCh+var_A4]
		xor	ebx, ebx
		lea	edi, [esp+0DCh+var_50]
		add	ebp, 2Ch
		jmp	short loc_67DD68B7
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6860:				; CODE XREF: sub_67DD6770+189j
		mov	eax, dword ptr [esp+0DCh+var_4C]
		add	ebx, 1
		mov	dword ptr [esp+0DCh+var_CC], 0FAh ; char
		mov	[esp+0DCh+Format], offset aDidNotGetLockF ; "Did not get lock file, sleeping %d	mill"...
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_2 ; "_dbus_keyring_lock"
		mov	[esp+0DCh+var_C8], eax
		mov	[esp+0DCh+NewSize], 0D2h ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+0DCh+Memory], edi
		call	dbus_error_free
		mov	[esp+0DCh+Memory], 0FAh	; DWORD
		call	sub_67E0B530
		cmp	ebx, 20h
		jz	loc_67DD71D9

loc_67DD68B7:				; CODE XREF: sub_67DD6770+EAj
		mov	[esp+0DCh+var_48], 0
		mov	[esp+0DCh+var_50], 0
		mov	dword ptr [esp+0DCh+var_4C], 0
		mov	[esp+0DCh+var_44], 0
		mov	byte ptr [esp+0DCh+var_48], 1
		mov	[esp+0DCh+NewSize], edi
		mov	[esp+0DCh+Memory], ebp
		call	sub_67E0A090
		test	eax, eax
		jz	loc_67DD6860

loc_67DD68FF:				; CODE XREF: sub_67DD6770+AEBj
		mov	[esp+0DCh+var_94], 1

loc_67DD6907:				; CODE XREF: sub_67DD6770+D4j
		lea	ebx, [esp+0DCh+var_40]
		mov	[esp+0DCh+Memory], ebx
		call	dbus_error_init
		mov	ecx, [esp+0DCh+var_A4]
		lea	eax, [esp+0DCh+var_64]
		mov	[esp+0DCh+var_D4], ebx
		mov	[esp+0DCh+Memory], eax
		add	ecx, 18h
		mov	[esp+0DCh+var_90], ecx
		mov	[esp+0DCh+NewSize], ecx
		call	sub_67E0A6A0
		test	eax, eax
		jz	loc_67DD6F75

loc_67DD693D:				; CODE XREF: sub_67DD6770+83Cj
		lea	edx, [esp+0DCh+var_64]
		mov	[esp+0DCh+Memory], edx
		call	sub_67E00CE0
		lea	ecx, [esp+0DCh+var_64]
		mov	[esp+0DCh+NewSize], 0 ;	char
		mov	[esp+0DCh+Memory], ecx
		mov	[esp+0DCh+var_D4], eax
		call	sub_67E023F0
		test	eax, eax
		jz	loc_67DD6F50

loc_67DD6969:				; CODE XREF: sub_67DD6770+800j
		xor	ebx, ebx
		mov	[esp+0DCh+var_A0], 0
		lea	ebp, [esp+0DCh+var_24]
		lea	esi, [esi+0]

loc_67DD6980:				; CODE XREF: sub_67DD6770+32Cj
					; sub_67DD6770+3B8j ...
		lea	edx, [esp+0DCh+var_64]
		mov	[esp+0DCh+NewSize], esi
		mov	[esp+0DCh+Memory], edx
		call	sub_67E07940
		test	eax, eax
		jz	loc_67DD6CD0
		cmp	[esp+0DCh+var_A8], 1
		sbb	eax, eax
		not	eax
		add	eax, 100h
		cmp	eax, ebx
		jle	loc_67DD6CD0
		lea	edx, [esp+0DCh+var_28]
		mov	dword ptr [esp+0DCh+var_24], 0
		mov	[esp+0DCh+Format], ebp
		mov	[esp+0DCh+var_D4], edx
		mov	[esp+0DCh+NewSize], 0
		mov	[esp+0DCh+Memory], esi
		call	sub_67E09C60
		test	eax, eax
		jz	loc_67DD6B00
		mov	edx, [esp+0DCh+var_28]
		test	edx, edx
		js	loc_67DD6B30
		mov	eax, dword ptr [esp+0DCh+var_24]
		mov	[esp+0DCh+var_B4], edx
		mov	[esp+0DCh+var_D4], ebp
		mov	[esp+0DCh+Memory], esi
		mov	[esp+0DCh+NewSize], eax
		call	sub_67E00160
		mov	eax, dword ptr [esp+0DCh+var_24]
		lea	ecx, [esp+0DCh+var_30]
		mov	[esp+0DCh+Format], ebp ; char
		mov	[esp+0DCh+var_D4], ecx
		mov	[esp+0DCh+Memory], esi
		mov	[esp+0DCh+NewSize], eax
		call	sub_67E09C60
		mov	edx, [esp+0DCh+var_B4]
		test	eax, eax
		jz	loc_67DD6B60
		mov	eax, [esp+0DCh+var_30]
		test	eax, eax
		js	loc_67DD6B90
		mov	ecx, [esp+0DCh+var_20]
		lea	edi, [ecx+12Ch]
		cmp	eax, edi
		jg	short loc_67DD6A66
		lea	edi, [ecx-1A4h]
		cmp	eax, edi
		jge	loc_67DD6BA0

loc_67DD6A66:				; CODE XREF: sub_67DD6770+2E6j
					; sub_67DD6770+427j
		mov	[esp+0DCh+var_C4], ecx
		sub	ecx, eax
		mov	edi, ebx
		mov	[esp+0DCh+var_C8], eax
		mov	dword ptr [esp+0DCh+var_CC], ecx ; char
		mov	[esp+0DCh+Format], offset aDroppingIgnori ; "dropping/ignoring %ld-seconds old key w"...
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	[esp+0DCh+NewSize], 1FCh ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DD6A9A:				; CODE XREF: sub_67DD6770+515j
		mov	ebx, edi
		jmp	loc_67DD6980
; ---------------------------------------------------------------------------

loc_67DD6AA1:				; CODE XREF: sub_67DD6770+A9j
		mov	eax, [esp+0DCh+var_AC]
		xor	ebx, ebx
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], eax ; int
		call	dbus_set_error
		lea	edx, [esp+0DCh+var_64]
		mov	[esp+0DCh+Memory], edx
		call	sub_67E02BF0
		jmp	loc_67DD67DD
; ---------------------------------------------------------------------------

loc_67DD6AD0:				; CODE XREF: sub_67DD6770+95j
		mov	ecx, [esp+0DCh+var_AC]
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], ecx ; int
		call	dbus_set_error
		add	esp, 0CCh
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6B00:				; CODE XREF: sub_67DD6770+26Aj
		mov	edi, ebx
		mov	[esp+0DCh+Format], offset aCouldNotPars_0 ; "could not parse secret key	ID at start "...
		mov	ebx, edi
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	[esp+0DCh+NewSize], 1E3h ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD6980
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6B30:				; CODE XREF: sub_67DD6770+279j
		mov	edi, ebx
		mov	[esp+0DCh+Format], offset aInvalidSecretK ; "invalid secret key	ID at start of line\"...
		mov	ebx, edi
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	[esp+0DCh+NewSize], 1E9h ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD6980
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6B60:				; CODE XREF: sub_67DD6770+2C2j
		mov	edi, ebx
		mov	[esp+0DCh+Format], offset aCouldNotPars_1 ; "could not parse secret key	timestamp\n"
		mov	ebx, edi
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	[esp+0DCh+NewSize], 1F3h ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD6980
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6B90:				; CODE XREF: sub_67DD6770+2D1j
		mov	ecx, [esp+0DCh+var_20]
		jmp	loc_67DD6A66
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6BA0:				; CODE XREF: sub_67DD6770+2F0j
		mov	eax, dword ptr [esp+0DCh+var_24]
		mov	[esp+0DCh+var_B4], edx
		mov	[esp+0DCh+var_D4], ebp
		mov	[esp+0DCh+Memory], esi
		mov	[esp+0DCh+NewSize], eax
		call	sub_67E00160
		mov	[esp+0DCh+Memory], esi
		call	sub_67E00CE0
		mov	edx, [esp+0DCh+var_B4]
		cmp	eax, dword ptr [esp+0DCh+var_24]
		jz	loc_67DD6F20
		lea	edi, [ebx+1]
		imul	eax, edi, 1Ch
		mov	[esp+0DCh+var_B4], edx
		mov	[esp+0DCh+NewSize], eax	; NewSize
		mov	eax, [esp+0DCh+var_A0]
		mov	[esp+0DCh+Memory], eax ; Memory
		call	dbus_realloc
		mov	edx, [esp+0DCh+var_B4]
		test	eax, eax
		mov	[esp+0DCh+var_9C], eax
		jz	loc_67DD752B
		imul	ecx, ebx, 1Ch
		add	ecx, [esp+0DCh+var_9C]
		mov	[esp+0DCh+var_B4], edx
		lea	eax, [ecx+8]
		mov	[esp+0DCh+var_B0], ecx
		mov	dword ptr [esp+0DCh+var_98], eax
		mov	[esp+0DCh+Memory], eax
		call	sub_67E03350
		mov	edx, [esp+0DCh+var_B4]
		mov	ecx, [esp+0DCh+var_B0]
		test	eax, eax
		jz	loc_67DD7550
		mov	eax, [esp+0DCh+var_30]
		mov	[ecx], edx
		lea	edx, [esp+0DCh+var_2C]
		mov	[ecx+4], eax
		mov	eax, dword ptr [esp+0DCh+var_98]
		mov	dword ptr [esp+0DCh+var_CC], 0 ; char
		mov	[esp+0DCh+var_D4], edx
		mov	[esp+0DCh+Memory], esi
		mov	[esp+0DCh+Format], eax ; char
		mov	eax, dword ptr [esp+0DCh+var_24]
		mov	[esp+0DCh+NewSize], eax
		call	sub_67E06B70
		test	eax, eax
		jz	loc_67DD757D
		mov	[esp+0DCh+Memory], esi
		call	sub_67E00CE0
		mov	edx, [esp+0DCh+var_9C]
		cmp	eax, [esp+0DCh+var_2C]
		mov	[esp+0DCh+var_A0], edx
		jz	loc_67DD6A9A
		mov	[esp+0DCh+Format], offset aInvalidHexEn_0 ; "invalid hex encoding in keyring file\n"
		mov	edi, ebx
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	ebx, edi
		mov	[esp+0DCh+NewSize], 227h ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	ecx, dword ptr [esp+0DCh+var_98]
		mov	[esp+0DCh+Memory], ecx
		call	sub_67E02BF0
		mov	eax, [esp+0DCh+var_9C]
		mov	[esp+0DCh+var_A0], eax
		jmp	loc_67DD6980
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6CD0:				; CODE XREF: sub_67DD6770+222j
					; sub_67DD6770+238j
		mov	ecx, [esp+0DCh+var_A0]
		mov	edi, ebx
		mov	dword ptr [esp+0DCh+var_CC], ebx ; char
		mov	[esp+0DCh+Format], offset aSuccessfullyLo ; "Successfully loaded %d existing keys\n"
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	[esp+0DCh+var_9C], ecx
		mov	[esp+0DCh+NewSize], 22Fh ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	ebp, [esp+0DCh+var_A8]
		test	ebp, ebp
		jnz	loc_67DD6FB1

loc_67DD6D0E:				; CODE XREF: sub_67DD6770+D46j
		mov	edx, [esp+0DCh+var_A4]
		mov	edx, [edx+40h]
		test	edx, edx
		mov	[esp+0DCh+var_A8], edx
		jz	short loc_67DD6D57
		mov	ecx, [esp+0DCh+var_A4]
		mov	eax, [ecx+44h]
		test	eax, eax
		jle	short loc_67DD6D4B
		mov	[esp+0DCh+var_9C], edi
		mov	ebp, edx
		xor	ebx, ebx
		mov	edi, eax

loc_67DD6D32:				; CODE XREF: sub_67DD6770+5D5j
		lea	eax, [ebp+8]
		add	ebx, 1
		mov	[esp+0DCh+Memory], eax
		add	ebp, 1Ch
		call	sub_67E02BF0
		cmp	edi, ebx
		jg	short loc_67DD6D32
		mov	edi, [esp+0DCh+var_9C]

loc_67DD6D4B:				; CODE XREF: sub_67DD6770+5B6j
		mov	eax, [esp+0DCh+var_A8]
		mov	[esp+0DCh+Memory], eax
		call	dbus_free

loc_67DD6D57:				; CODE XREF: sub_67DD6770+5ABj
		mov	ecx, [esp+0DCh+var_A0]
		mov	ebx, 1
		mov	edx, [esp+0DCh+var_A4]
		mov	[esp+0DCh+var_A0], 0
		mov	[edx+44h], edi
		xor	edi, edi
		mov	[edx+40h], ecx

loc_67DD6D74:				; CODE XREF: sub_67DD6770+A19j
					; sub_67DD6770+D40j ...
		mov	eax, [esp+0DCh+var_94]
		test	eax, eax
		jnz	loc_67DD6E10

loc_67DD6D80:				; CODE XREF: sub_67DD6770+6F0j
					; sub_67DD6770+715j
		cmp	ebx, 1
		jz	loc_67DD6E90

loc_67DD6D89:				; CODE XREF: sub_67DD6770+B4Ej
		mov	ecx, [esp+0DCh+var_AC]
		test	ecx, ecx
		jz	short loc_67DD6D9F
		mov	ecx, [esp+0DCh+var_AC]
		mov	edx, [ecx]
		test	edx, edx
		jz	loc_67DD751F

loc_67DD6D9F:				; CODE XREF: sub_67DD6770+61Fj
		xor	ebx, ebx

loc_67DD6DA1:				; CODE XREF: sub_67DD6770+726j
					; sub_67DD6770+734j
		mov	eax, [esp+0DCh+var_A0]
		test	eax, eax
		jz	short loc_67DD6DEF
		test	edi, edi
		jz	short loc_67DD6DE3
		mov	eax, [esp+0DCh+var_A0]
		xor	ebp, ebp
		mov	[esp+0DCh+var_AC], edi
		mov	[esp+0DCh+var_A8], ebx
		mov	edi, eax
		lea	esi, [esi+0]

loc_67DD6DC0:				; CODE XREF: sub_67DD6770+66Dj
		lea	ebx, [edi+8]
		add	ebp, 1
		mov	[esp+0DCh+Memory], ebx
		add	edi, 1Ch
		call	sub_67E01BC0
		mov	[esp+0DCh+Memory], ebx
		call	sub_67E02BF0
		cmp	ebp, [esp+0DCh+var_AC]
		jl	short loc_67DD6DC0
		mov	ebx, [esp+0DCh+var_A8]

loc_67DD6DE3:				; CODE XREF: sub_67DD6770+63Bj
		mov	edx, [esp+0DCh+var_A0]
		mov	[esp+0DCh+Memory], edx
		call	dbus_free

loc_67DD6DEF:				; CODE XREF: sub_67DD6770+637j
		lea	ecx, [esp+0DCh+var_64]
		mov	[esp+0DCh+Memory], ecx
		call	sub_67E02BF0
		mov	[esp+0DCh+Memory], esi
		call	sub_67E02BF0
		add	esp, 0CCh
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD6E10:				; CODE XREF: sub_67DD6770+60Aj
		mov	eax, [esp+0DCh+var_A4]
		lea	ebp, [esp+0DCh+var_50]
		mov	[esp+0DCh+var_48], 0
		mov	[esp+0DCh+var_50], 0
		mov	dword ptr [esp+0DCh+var_4C], 0
		add	eax, 2Ch
		mov	[esp+0DCh+var_44], 0
		mov	byte ptr [esp+0DCh+var_48], 1
		mov	[esp+0DCh+NewSize], ebp
		mov	[esp+0DCh+Memory], eax
		call	sub_67E0C520
		test	eax, eax
		jnz	loc_67DD6D80
		mov	eax, dword ptr [esp+0DCh+var_4C]
		mov	[esp+0DCh+Memory], offset aFailedToDele_0 ; "Failed to delete lock file: %s\n"
		mov	[esp+0DCh+NewSize], eax	; char
		call	sub_67DFAD60
		mov	[esp+0DCh+Memory], ebp
		call	dbus_error_free
		jmp	loc_67DD6D80
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6E90:				; CODE XREF: sub_67DD6770+613j
		mov	ebp, [esp+0DCh+var_AC]
		test	ebp, ebp
		jz	loc_67DD6DA1
		mov	edx, [esp+0DCh+var_AC]
		mov	eax, [edx]
		test	eax, eax
		jz	loc_67DD6DA1
		mov	edx, [edx+4]
		mov	dword ptr [esp+0DCh+var_CC], eax ; char
		mov	[esp+0DCh+Format], offset aErrorIsSS ; "error is %s: %s\n"
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	[esp+0DCh+var_C8], edx
		mov	[esp+0DCh+NewSize], 273h ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, [esp+0DCh+var_AC]
		mov	eax, [edx]
		test	eax, eax
		jz	loc_67DD7521

loc_67DD6EE7:				; CODE XREF: sub_67DD6770+DB6j
		mov	[esp+0DCh+Format], eax
		mov	eax, [esp+0DCh+var_AC]
		mov	[esp+0DCh+NewSize], ebx	; char
		mov	[esp+0DCh+Memory], offset aReturningDButE ; "returning %d but error pointer %p name "...
		mov	[esp+0DCh+var_D4], eax
		call	sub_67DFAD60
		mov	[esp+0DCh+var_D4], 276h
		mov	[esp+0DCh+NewSize], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+Memory], offset aDidnTHandleErr ; "didn't handle errors properly"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6F20:				; CODE XREF: sub_67DD6770+45Ej
		mov	edi, ebx
		mov	[esp+0DCh+Format], offset aNoSecretKeyAft ; "no	secret key after ID and	timestamp\n"
		mov	ebx, edi
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	[esp+0DCh+NewSize], 206h ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD6980
; ---------------------------------------------------------------------------
		align 10h

loc_67DD6F50:				; CODE XREF: sub_67DD6770+1F3j
		mov	[esp+0DCh+Memory], offset aSecretKeyringF ; "Secret keyring file contains non-ASCII!"...
		call	sub_67DFAD60
		lea	eax, [esp+0DCh+var_64]
		mov	[esp+0DCh+NewSize], 0
		mov	[esp+0DCh+Memory], eax
		call	sub_67E06F60
		jmp	loc_67DD6969
; ---------------------------------------------------------------------------

loc_67DD6F75:				; CODE XREF: sub_67DD6770+1C7j
		mov	eax, dword ptr [esp+0DCh+var_3C]
		mov	[esp+0DCh+Format], offset aFailedToLoadKe ; "Failed to load keyring file: %s\n"
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	[esp+0DCh+NewSize], 1C3h ; int
		mov	dword ptr [esp+0DCh+var_CC], eax ; char
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+0DCh+Memory], ebx
		call	dbus_error_free
		jmp	loc_67DD693D
; ---------------------------------------------------------------------------

loc_67DD6FB1:				; CODE XREF: sub_67DD6770+598j
		mov	ecx, [esp+0DCh+var_AC]
		test	ecx, ecx
		jz	short loc_67DD6FCD
		mov	eax, [esp+0DCh+var_AC]
		mov	[esp+0DCh+Memory], eax
		call	dbus_error_is_set
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DD6FD2

loc_67DD6FCD:				; CODE XREF: sub_67DD6770+847j
		mov	eax, 1

loc_67DD6FD2:				; CODE XREF: sub_67DD6770+85Bj
		mov	[esp+0DCh+Memory], eax
		mov	dword ptr [esp+0DCh+var_CC], offset aAdd_new_key ; "add_new_key"
		mov	[esp+0DCh+Format], 124h	; char
		mov	[esp+0DCh+var_D4], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+NewSize], offset aErrorNullDb_28 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		lea	edx, [esp+0DCh+var_8C]
		mov	[esp+0DCh+Memory], edx
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DD72E4
		mov	eax, [esp+0DCh+var_A0]
		add	eax, 1Ch
		mov	[esp+0DCh+var_A8], eax
		lea	esi, [esi+0]

loc_67DD7020:				; CODE XREF: sub_67DD6770+A64j
		lea	edx, [esp+0DCh+var_8C]
		mov	[esp+0DCh+NewSize], 4 ;	dwLen
		mov	[esp+0DCh+Memory], edx ; int
		call	sub_67E0C6A0
		test	eax, eax
		jz	loc_67DD72C3
		lea	eax, [esp+0DCh+var_8C]
		mov	[esp+0DCh+Memory], eax
		call	sub_67E01770
		movzx	ebp, byte ptr [eax+1]
		movzx	edx, byte ptr [eax+2]
		shl	ebp, 8
		shl	edx, 10h
		or	ebp, edx
		movzx	edx, byte ptr [eax]
		movzx	eax, byte ptr [eax+3]
		mov	dword ptr [esp+0DCh+var_CC], offset aAdd_new_key ; "add_new_key"
		mov	[esp+0DCh+Format], 13Eh
		or	ebp, edx
		shl	eax, 18h
		or	ebp, eax
		mov	eax, ebp
		sar	eax, 1Fh
		xor	ebp, eax
		sub	ebp, eax
		mov	[esp+0DCh+var_D4], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+NewSize], offset aId0	; "id >= 0"
		mov	[esp+0DCh+Memory], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DD70C9
		mov	edi, [esp+0DCh+var_A0]
		cmp	ebp, [edi]
		jz	loc_67DD7190
		mov	eax, [esp+0DCh+var_A8]
		xor	edx, edx
		jmp	short loc_67DD70C2
; ---------------------------------------------------------------------------

loc_67DD70B3:				; CODE XREF: sub_67DD6770+957j
		mov	ecx, [eax]
		mov	edi, eax
		add	eax, 1Ch
		cmp	ebp, ecx
		jz	loc_67DD7190

loc_67DD70C2:				; CODE XREF: sub_67DD6770+941j
		add	edx, 1
		cmp	edx, ebx
		jl	short loc_67DD70B3

loc_67DD70C9:				; CODE XREF: sub_67DD6770+92Dj
					; sub_67DD6770+A22j
		mov	dword ptr [esp+0DCh+var_CC], ebp ; char
		mov	[esp+0DCh+Format], offset aCreatingKeyWit ; "Creating key with ID %d\n"
		mov	[esp+0DCh+var_D4], offset aAdd_new_key ; "add_new_key"
		mov	[esp+0DCh+NewSize], 148h ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	ecx, [esp+0DCh+var_8C]
		mov	[esp+0DCh+Memory], ecx
		mov	[esp+0DCh+NewSize], 0
		call	sub_67E06F60
		lea	eax, [esp+0DCh+var_8C]
		mov	[esp+0DCh+NewSize], 18h	; dwLen
		mov	[esp+0DCh+Memory], eax ; int
		call	sub_67E0C6A0
		test	eax, eax
		jnz	loc_67DD7305
		mov	edx, [esp+0DCh+var_AC]
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], edx ; int
		call	dbus_set_error

loc_67DD713D:				; CODE XREF: sub_67DD6770+B6Fj
					; sub_67DD6770+E5Cj ...
		lea	eax, [esp+0DCh+var_8C]
		mov	[esp+0DCh+Memory], eax
		call	sub_67E02BF0

loc_67DD7149:				; CODE XREF: sub_67DD6770+B90j
		mov	edx, [esp+0DCh+var_AC]
		mov	eax, offset aUnknown_1 ; "(unknown)"
		test	edx, edx
		jz	short loc_67DD715D
		mov	edx, [esp+0DCh+var_AC]
		mov	eax, [edx+4]

loc_67DD715D:				; CODE XREF: sub_67DD6770+9E4j
		mov	dword ptr [esp+0DCh+var_CC], eax ; char
		mov	edi, ebx
		xor	ebx, ebx
		mov	[esp+0DCh+Format], offset aFailedToGenera ; "Failed to generate	new key: %s\n"
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_1 ; "_dbus_keyring_reload"
		mov	[esp+0DCh+NewSize], 236h ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD6D74
; ---------------------------------------------------------------------------
		align 10h

loc_67DD7190:				; CODE XREF: sub_67DD6770+935j
					; sub_67DD6770+94Cj
		test	edi, edi
		jz	loc_67DD70C9
		lea	edx, [esp+0DCh+var_8C]
		mov	[esp+0DCh+NewSize], 0
		mov	[esp+0DCh+Memory], edx
		call	sub_67E06F60
		mov	dword ptr [esp+0DCh+var_CC], ebp ; char
		mov	[esp+0DCh+Format], offset aKeyIdDAlreadyE ; "Key ID %d already existed,	trying anoth"...
		mov	[esp+0DCh+var_D4], offset aAdd_new_key ; "add_new_key"
		mov	[esp+0DCh+NewSize], 144h ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD7020
; ---------------------------------------------------------------------------

loc_67DD71D9:				; CODE XREF: sub_67DD6770+141j
		mov	[esp+0DCh+var_48], 0
		mov	[esp+0DCh+var_50], 0
		mov	dword ptr [esp+0DCh+var_4C], 0
		mov	[esp+0DCh+var_44], 0
		mov	byte ptr [esp+0DCh+var_48], 1
		mov	dword ptr [esp+0DCh+var_CC], 20h ; char
		mov	[esp+0DCh+Format], offset aLockFileTimedO ; "Lock file timed out %d times, assuming "...
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_2 ; "_dbus_keyring_lock"
		mov	[esp+0DCh+NewSize], 0DFh ; int
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+0DCh+NewSize], edi
		mov	[esp+0DCh+Memory], ebp
		call	sub_67E0C520
		test	eax, eax
		jz	loc_67DD74E3
		mov	[esp+0DCh+NewSize], edi
		mov	[esp+0DCh+Memory], ebp
		call	sub_67E0A090
		test	eax, eax
		jnz	loc_67DD68FF
		mov	eax, dword ptr [esp+0DCh+var_4C]
		mov	[esp+0DCh+Format], offset aCouldnTCreateL ; "Couldn't create lock file after deletin"...
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_2 ; "_dbus_keyring_lock"
		mov	[esp+0DCh+NewSize], 0EDh ; int
		mov	dword ptr [esp+0DCh+var_CC], eax ; char
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+0DCh+Memory], edi
		call	dbus_error_free

loc_67DD7298:				; CODE XREF: sub_67DD6770+DAAj
		mov	eax, [esp+0DCh+var_AC]
		xor	edi, edi
		mov	[esp+0DCh+var_D4], offset aCouldNotLockKe ; "Could not lock keyring file to add	to i"...
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_67 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+0DCh+Memory], eax ; int
		call	dbus_set_error
		mov	[esp+0DCh+var_A0], 0
		jmp	loc_67DD6D89
; ---------------------------------------------------------------------------

loc_67DD72C3:				; CODE XREF: sub_67DD6770+8C6j
					; sub_67DD6770+BD3j
		mov	ecx, [esp+0DCh+var_AC]
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], ecx ; int
		call	dbus_set_error
		jmp	loc_67DD713D
; ---------------------------------------------------------------------------

loc_67DD72E4:				; CODE XREF: sub_67DD6770+898j
		mov	ecx, [esp+0DCh+var_AC]
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], ecx ; int
		call	dbus_set_error
		jmp	loc_67DD7149
; ---------------------------------------------------------------------------

loc_67DD7305:				; CODE XREF: sub_67DD6770+9ABj
		lea	edi, [ebx+1]
		mov	ecx, [esp+0DCh+var_A0]
		imul	eax, edi, 1Ch
		mov	[esp+0DCh+Memory], ecx ; Memory
		mov	[esp+0DCh+NewSize], eax	; NewSize
		call	dbus_realloc
		test	eax, eax
		mov	[esp+0DCh+var_A0], eax
		jz	loc_67DD75A8
		imul	eax, ebx, 1Ch
		add	eax, [esp+0DCh+var_A0]
		mov	[esp+0DCh+var_A8], eax
		add	eax, 8
		mov	[esp+0DCh+var_9C], eax
		mov	[esp+0DCh+Memory], eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DD72C3
		lea	eax, [esp+0DCh+var_30]
		mov	[esp+0DCh+Memory], eax
		mov	[esp+0DCh+NewSize], 0
		call	sub_67E0C850
		mov	eax, [esp+0DCh+var_A8]
		mov	edx, [esp+0DCh+var_A8]
		mov	ecx, [esp+0DCh+var_9C]
		mov	[eax], ebp
		mov	eax, [esp+0DCh+var_30]
		mov	[edx+4], eax
		lea	eax, [esp+0DCh+var_8C]
		mov	[esp+0DCh+Format], 0 ; char
		mov	[esp+0DCh+var_D4], ecx
		mov	[esp+0DCh+NewSize], 0
		mov	[esp+0DCh+Memory], eax
		call	sub_67E05080
		test	eax, eax
		jz	loc_67DD75D1
		lea	edx, [esp+0DCh+var_8C]
		xor	ebp, ebp
		mov	[esp+0DCh+Memory], edx
		call	sub_67E02BF0
		lea	ecx, [esp+0DCh+var_64]
		mov	[esp+0DCh+NewSize], 0
		mov	[esp+0DCh+Memory], ecx
		call	sub_67E06F60
		mov	ebx, [esp+0DCh+var_A0]

loc_67DD73C6:				; CODE XREF: sub_67DD6770+D12j
		mov	eax, [ebx]
		lea	ecx, [esp+0DCh+var_64]
		mov	[esp+0DCh+Memory], ecx
		mov	[esp+0DCh+NewSize], eax
		call	sub_67E09740
		test	eax, eax
		jz	loc_67DD74C0
		lea	eax, [esp+0DCh+var_64]
		mov	[esp+0DCh+NewSize], 20h
		mov	[esp+0DCh+Memory], eax
		call	sub_67E067A0
		test	eax, eax
		jz	loc_67DD74C0
		mov	eax, [ebx+4]
		lea	edx, [esp+0DCh+var_64]
		mov	[esp+0DCh+Memory], edx
		mov	[esp+0DCh+NewSize], eax
		call	sub_67E09740
		test	eax, eax
		jz	loc_67DD74C0
		lea	ecx, [esp+0DCh+var_64]
		mov	[esp+0DCh+NewSize], 20h
		mov	[esp+0DCh+Memory], ecx
		call	sub_67E067A0
		test	eax, eax
		jz	loc_67DD74C0
		lea	eax, [esp+0DCh+var_64]
		mov	[esp+0DCh+Memory], eax
		call	sub_67E00CE0
		lea	edx, [esp+0DCh+var_64]
		mov	[esp+0DCh+var_D4], edx
		mov	[esp+0DCh+NewSize], 0
		mov	[esp+0DCh+Format], eax
		lea	eax, [ebx+8]
		mov	[esp+0DCh+Memory], eax
		call	sub_67E080C0
		test	eax, eax
		jz	short loc_67DD74C0
		lea	ecx, [esp+0DCh+var_64]
		mov	[esp+0DCh+NewSize], 0Ah
		mov	[esp+0DCh+Memory], ecx
		call	sub_67E067A0
		test	eax, eax
		jz	short loc_67DD74C0
		add	ebp, 1
		add	ebx, 1Ch
		cmp	ebp, edi
		jl	loc_67DD73C6
		mov	edx, [esp+0DCh+var_AC]
		lea	eax, [esp+0DCh+var_64]
		xor	ebx, ebx
		mov	ecx, [esp+0DCh+var_90]
		mov	[esp+0DCh+var_D4], 0
		mov	[esp+0DCh+Memory], eax
		mov	[esp+0DCh+Format], edx
		mov	[esp+0DCh+NewSize], ecx
		call	sub_67E0A200
		test	eax, eax
		jz	loc_67DD6D74
		jmp	loc_67DD6D0E
; ---------------------------------------------------------------------------
		align 10h

loc_67DD74C0:				; CODE XREF: sub_67DD6770+C6Aj
					; sub_67DD6770+C86j ...
		mov	eax, [esp+0DCh+var_AC]
		xor	ebx, ebx
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], eax ; int
		call	dbus_set_error
		jmp	loc_67DD6D74
; ---------------------------------------------------------------------------

loc_67DD74E3:				; CODE XREF: sub_67DD6770+AD7j
		mov	eax, dword ptr [esp+0DCh+var_4C]
		mov	[esp+0DCh+Format], offset aCouldnTDeleteO ; "Couldn't delete old lock file: %s\n"
		mov	[esp+0DCh+var_D4], offset a_dbus_keyrin_2 ; "_dbus_keyring_lock"
		mov	[esp+0DCh+NewSize], 0E4h ; int
		mov	dword ptr [esp+0DCh+var_CC], eax ; char
		mov	[esp+0DCh+Memory], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+0DCh+Memory], edi
		call	dbus_error_free
		jmp	loc_67DD7298
; ---------------------------------------------------------------------------

loc_67DD751F:				; CODE XREF: sub_67DD6770+629j
		xor	ebx, ebx

loc_67DD7521:				; CODE XREF: sub_67DD6770+771j
		mov	eax, offset aNone ; "(none)"
		jmp	loc_67DD6EE7
; ---------------------------------------------------------------------------

loc_67DD752B:				; CODE XREF: sub_67DD6770+488j
		mov	edx, [esp+0DCh+var_AC]
		mov	edi, ebx
		xor	ebx, ebx
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], edx ; int
		call	dbus_set_error
		jmp	loc_67DD6D74
; ---------------------------------------------------------------------------

loc_67DD7550:				; CODE XREF: sub_67DD6770+4B6j
		mov	edx, [esp+0DCh+var_AC]
		mov	edi, ebx
		xor	ebx, ebx
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], edx ; int
		call	dbus_set_error
		mov	ecx, [esp+0DCh+var_9C]
		mov	[esp+0DCh+var_A0], ecx
		jmp	loc_67DD6D74
; ---------------------------------------------------------------------------

loc_67DD757D:				; CODE XREF: sub_67DD6770+4F8j
		mov	ecx, [esp+0DCh+var_AC]
		xor	ebx, ebx
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], ecx ; int
		call	dbus_set_error
		mov	eax, [esp+0DCh+var_9C]
		mov	[esp+0DCh+var_A0], eax
		jmp	loc_67DD6D74
; ---------------------------------------------------------------------------

loc_67DD75A8:				; CODE XREF: sub_67DD6770+BB1j
		mov	eax, [esp+0DCh+var_AC]
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], eax ; int
		call	dbus_set_error
		mov	edx, [esp+0DCh+var_9C]
		mov	[esp+0DCh+var_A0], edx
		jmp	loc_67DD713D
; ---------------------------------------------------------------------------

loc_67DD75D1:				; CODE XREF: sub_67DD6770+C2Aj
		mov	edx, [esp+0DCh+var_AC]
		mov	[esp+0DCh+var_D4], 0 ; char *
		mov	[esp+0DCh+NewSize], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+0DCh+Memory], edx ; int
		call	dbus_set_error
		mov	ecx, [esp+0DCh+var_9C]
		mov	[esp+0DCh+Memory], ecx
		call	sub_67E02BF0
		jmp	loc_67DD713D
sub_67DD6770	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD7600	proc near		; CODE XREF: sub_67DC3290+24Ep
					; sub_67DD7930+167p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
Format		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E00CE0
		test	eax, eax
		jz	loc_67DD7780
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E00CE0
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], eax
		call	sub_67E023F0
		test	eax, eax
		jz	loc_67DD7750
		mov	[esp+1Ch+Format], 0
		mov	[esp+1Ch+var_14], offset asc_67E1F8DC ;	"/"
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E009F0
		test	eax, eax
		jnz	loc_67DD77D8
		mov	[esp+1Ch+Format], 0
		mov	[esp+1Ch+var_14], offset asc_67E1F8F8 ;	"\\"
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E009F0
		test	eax, eax
		jnz	loc_67DD77B0
		mov	[esp+1Ch+Format], 0
		mov	[esp+1Ch+var_14], offset a__0 ;	"."
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E009F0
		test	eax, eax
		jnz	loc_67DD7803
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E003F0
		test	eax, eax
		jnz	loc_67DD7860
		mov	[esp+1Ch+Format], 0
		mov	[esp+1Ch+var_14], offset asc_67E1F94C ;	"\n"
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E009F0
		test	eax, eax
		jnz	loc_67DD7830
		mov	[esp+1Ch+Format], 0
		mov	[esp+1Ch+var_14], offset asc_67E1F96A ;	"\r"
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E009F0
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jz	short loc_67DD7776
		mov	[esp+1Ch+Format], offset aContextContain ; "context contains a carriage	return\n"
		mov	[esp+1Ch+var_14], offset a_dbus_keyring_ ; "_dbus_keyring_validate_context"
		mov	[esp+1Ch+var_18], 389h ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		jmp	short loc_67DD7776
; ---------------------------------------------------------------------------
		align 10h

loc_67DD7750:				; CODE XREF: sub_67DD7600+36j
		mov	[esp+1Ch+Format], offset aContextNotVali ; "context not	valid ascii\n"
		mov	[esp+1Ch+var_14], offset a_dbus_keyring_ ; "_dbus_keyring_validate_context"
		mov	[esp+1Ch+var_18], 360h ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax

loc_67DD7776:				; CODE XREF: sub_67DD7600+125j
					; sub_67DD7600+14Dj ...
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD7780:				; CODE XREF: sub_67DD7600+12j
		mov	[esp+1Ch+Format], offset aContextIsZeroL ; "context is zero-length\n"
		mov	[esp+1Ch+var_14], offset a_dbus_keyring_ ; "_dbus_keyring_validate_context"
		mov	[esp+1Ch+var_18], 359h ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD77B0:				; CODE XREF: sub_67DD7600+86j
		mov	[esp+1Ch+Format], offset aContextConta_0 ; "context contains a backslash\n"
		mov	[esp+1Ch+var_14], offset a_dbus_keyring_ ; "_dbus_keyring_validate_context"
		mov	[esp+1Ch+var_18], 36Dh ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		jmp	short loc_67DD7776
; ---------------------------------------------------------------------------

loc_67DD77D8:				; CODE XREF: sub_67DD7600+5Ej
		mov	[esp+1Ch+Format], offset aContextConta_1 ; "context contains a slash\n"
		mov	[esp+1Ch+var_14], offset a_dbus_keyring_ ; "_dbus_keyring_validate_context"
		mov	[esp+1Ch+var_18], 367h ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DD7803:				; CODE XREF: sub_67DD7600+AEj
		mov	[esp+1Ch+Format], offset aContextConta_2 ; "context contains a dot\n"
		mov	[esp+1Ch+var_14], offset a_dbus_keyring_ ; "_dbus_keyring_validate_context"
		mov	[esp+1Ch+var_18], 376h ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		jmp	loc_67DD7776
; ---------------------------------------------------------------------------
		align 10h

loc_67DD7830:				; CODE XREF: sub_67DD7600+F6j
		mov	[esp+1Ch+Format], offset aContextConta_3 ; "context contains a newline\n"
		mov	[esp+1Ch+var_14], offset a_dbus_keyring_ ; "_dbus_keyring_validate_context"
		mov	[esp+1Ch+var_18], 383h ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		jmp	loc_67DD7776
; ---------------------------------------------------------------------------
		align 10h

loc_67DD7860:				; CODE XREF: sub_67DD7600+CEj
		mov	[esp+1Ch+Format], offset aContextConta_4 ; "context contains a blank\n"
		mov	[esp+1Ch+var_14], offset a_dbus_keyring_ ; "_dbus_keyring_validate_context"
		mov	[esp+1Ch+var_18], 37Dh ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		jmp	loc_67DD7776
sub_67DD7600	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD7890	proc near		; CODE XREF: sub_67DC39B0+57Bp
					; sub_67DC59A0+15Ep ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebp, [esp+3Ch+arg_0]
		mov	eax, [ebp+0]
		sub	eax, 1
		test	eax, eax
		mov	[ebp+0], eax
		jnz	short loc_67DD7921
		mov	eax, [ebp+48h]
		test	eax, eax
		jz	short loc_67DD78B7
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DD5A30

loc_67DD78B7:				; CODE XREF: sub_67DD7890+1Dj
		lea	eax, [ebp+18h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E02BF0
		lea	eax, [ebp+2Ch]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E02BF0
		lea	eax, [ebp+4]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E02BF0
		mov	edi, [ebp+44h]
		mov	eax, [ebp+40h]
		test	edi, edi
		mov	[esp+3Ch+var_20], eax
		jle	short loc_67DD7905
		mov	esi, eax
		xor	ebx, ebx
		lea	esi, [esi+0]

loc_67DD78F0:				; CODE XREF: sub_67DD7890+73j
		lea	eax, [esi+8]
		add	ebx, 1
		mov	[esp+3Ch+var_3C], eax
		add	esi, 1Ch
		call	sub_67E02BF0
		cmp	edi, ebx
		jg	short loc_67DD78F0

loc_67DD7905:				; CODE XREF: sub_67DD7890+54j
		mov	eax, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], eax
		call	dbus_free
		mov	[esp+3Ch+arg_0], ebp
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67DD7921:				; CODE XREF: sub_67DD7890+16j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DD7890	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD7930	proc near		; CODE XREF: sub_67DC3290+3BFp
					; sub_67DC39B0+5A4p

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
Format		= dword	ptr -70h
var_6C		= byte ptr -6Ch
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_40		= byte ptr -40h
var_2C		= byte ptr -2Ch
var_28		= byte ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	ebp, [esp+7Ch+arg_8]
		mov	ebx, [esp+7Ch+arg_0]
		test	ebp, ebp
		jz	loc_67DD7BE2
		mov	[esp+7Ch+var_7C], ebp
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DD7BE2

loc_67DD795F:				; CODE XREF: sub_67DD7930+2B7j
		mov	[esp+7Ch+var_7C], edx
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_keyrin_0 ; "_dbus_keyring_new_for_credentials"
		mov	[esp+7Ch+Format], 2CFh ; char
		mov	[esp+7Ch+var_74], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDb_28 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		call	sub_67E0ABE0
		test	eax, eax
		jnz	loc_67DD7C66
		lea	esi, [esp+7Ch+var_40]
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DD7D11
		test	ebx, ebx
		jz	loc_67DD7C34
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67DD5BF0
		mov	edi, eax

loc_67DD79BA:				; CODE XREF: sub_67DD7930+30Bj
		test	edi, edi
		jz	loc_67DD7CB5
		mov	[esp+7Ch+var_7C], edi
		call	sub_67DD5640
		test	eax, eax
		jnz	loc_67DD7BF0

loc_67DD79D2:				; CODE XREF: sub_67DD7930+2CAj
		mov	[esp+7Ch+var_78], edi
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E0CA90
		test	eax, eax
		jz	loc_67DD7C00
		mov	[esp+7Ch+var_7C], 4Ch ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		mov	[esp+7Ch+var_50], eax
		jz	loc_67DD7C00
		lea	eax, [eax+4]
		mov	[esp+7Ch+var_5C], eax
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DD7C58
		lea	eax, [ebx+18h]
		mov	[esp+7Ch+var_58], eax
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DD7C4C
		lea	eax, [ebx+2Ch]
		mov	[esp+7Ch+var_54], eax
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DD7C40
		mov	dword ptr [ebx], 1
		xor	eax, eax
		mov	dword ptr [ebx+40h], 0
		mov	dword ptr [ebx+44h], 0
		mov	dword ptr [esp+7Ch+var_6C], offset a_dbus_keyrin_0 ; "_dbus_keyring_new_for_credentials"
		mov	[esp+7Ch+Format], 2FCh
		mov	[esp+7Ch+var_74], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aKeyringCredent ; "keyring->credentials == NULL"
		cmp	dword ptr [ebx+48h], 0
		setz	al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	eax, [esp+7Ch+arg_4]
		mov	[ebx+48h], edi
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DD7600
		test	eax, eax
		jz	loc_67DD7C90
		mov	eax, [esp+7Ch+var_5C]
		mov	[esp+7Ch+Format], 0
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_7C], esi
		mov	[esp+7Ch+var_74], eax
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DD7CB7
		mov	eax, [esp+7Ch+var_58]
		mov	[esp+7Ch+Format], 0
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_74], eax
		mov	eax, [esp+7Ch+var_5C]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DD7CB7
		mov	eax, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_78], eax
		mov	eax, [esp+7Ch+var_58]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E0C960
		test	eax, eax
		jz	loc_67DD7CB7
		mov	eax, [esp+7Ch+var_54]
		mov	[esp+7Ch+Format], 0
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_74], eax
		mov	eax, [esp+7Ch+var_58]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DD7CB7
		mov	eax, [esp+7Ch+var_54]
		mov	[esp+7Ch+var_78], offset a_lock	; ".lock"
		mov	[esp+7Ch+var_7C], eax ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DD7CB7
		lea	edi, [esp+7Ch+var_2C]
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_init
		mov	eax, [esp+7Ch+var_50]
		xor	edx, edx
		mov	ecx, edi
		call	sub_67DD6770
		test	eax, eax
		jz	loc_67DD7CD8

loc_67DD7B80:				; CODE XREF: sub_67DD7930+3DCj
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_init
		mov	eax, [esp+7Ch+var_5C]
		mov	[esp+7Ch+var_78], edi
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E0C790
		test	eax, eax
		jnz	short loc_67DD7BD0
		mov	eax, dword ptr [esp+7Ch+var_28]
		mov	[esp+7Ch+Format], offset aCreatingKeyrin ; "Creating keyring directory:	%s\n"
		mov	[esp+7Ch+var_74], offset a_dbus_keyrin_0 ; "_dbus_keyring_new_for_credentials"
		mov	[esp+7Ch+var_78], 332h ; int
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+var_7C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_free

loc_67DD7BD0:				; CODE XREF: sub_67DD7930+26Aj
		mov	[esp+7Ch+var_7C], esi
		call	sub_67E02BF0
		add	esp, 6Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD7BE2:				; CODE XREF: sub_67DD7930+17j
					; sub_67DD7930+29j
		mov	edx, 1
		jmp	loc_67DD795F
; ---------------------------------------------------------------------------
		align 10h

loc_67DD7BF0:				; CODE XREF: sub_67DD7930+9Cj
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E0F7C0
		test	eax, eax
		jnz	loc_67DD79D2

loc_67DD7C00:				; CODE XREF: sub_67DD7930+B0j
					; sub_67DD7930+CAj ...
		mov	[esp+7Ch+var_74], 0
		mov	[esp+7Ch+var_78], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+7Ch+var_7C], ebp
		call	dbus_set_error_const
		mov	[esp+7Ch+var_7C], edi
		call	sub_67DD5A30

loc_67DD7C20:				; CODE XREF: sub_67DD7930+380j
					; sub_67DD7930+3A3j
		mov	[esp+7Ch+var_7C], esi
		xor	ebx, ebx
		call	sub_67E02BF0

loc_67DD7C2A:				; CODE XREF: sub_67DD7930+3FBj
		add	esp, 6Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD7C34:				; CODE XREF: sub_67DD7930+7Aj
		call	sub_67DD5B20
		mov	edi, eax
		jmp	loc_67DD79BA
; ---------------------------------------------------------------------------

loc_67DD7C40:				; CODE XREF: sub_67DD7930+10Fj
		mov	eax, [esp+7Ch+var_58]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E02BF0

loc_67DD7C4C:				; CODE XREF: sub_67DD7930+F8j
		mov	eax, [esp+7Ch+var_5C]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E02BF0

loc_67DD7C58:				; CODE XREF: sub_67DD7930+E1j
		mov	eax, [esp+7Ch+var_50]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_free
		jmp	short loc_67DD7C00
; ---------------------------------------------------------------------------

loc_67DD7C66:				; CODE XREF: sub_67DD7930+5Ej
		xor	ebx, ebx
		mov	[esp+7Ch+var_7C], ebp
		mov	[esp+7Ch+var_74], offset aUnableToCreate ; "Unable to create DBus keyring when setu"...
		mov	[esp+7Ch+var_78], offset aOrg_freedes_66 ; "org.freedesktop.DBus.Error.NotSupported"
		call	dbus_set_error_const
		add	esp, 6Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD7C90:				; CODE XREF: sub_67DD7930+16Ej
		mov	[esp+7Ch+var_74], offset aInvalidContext ; "Invalid context in keyring creation"
		mov	[esp+7Ch+var_78], offset aOrg_freedes_67 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+7Ch+var_7C], ebp
		call	dbus_set_error_const

loc_67DD7CA8:				; CODE XREF: sub_67DD7930+3A1j
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67DD7890
		jmp	loc_67DD7C20
; ---------------------------------------------------------------------------

loc_67DD7CB5:				; CODE XREF: sub_67DD7930+8Cj
		xor	ebx, ebx

loc_67DD7CB7:				; CODE XREF: sub_67DD7930+196j
					; sub_67DD7930+1C2j ...
		mov	[esp+7Ch+var_74], 0
		mov	[esp+7Ch+var_78], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+7Ch+var_7C], ebp
		call	dbus_set_error_const
		test	ebx, ebx
		jnz	short loc_67DD7CA8
		jmp	loc_67DD7C20
; ---------------------------------------------------------------------------

loc_67DD7CD8:				; CODE XREF: sub_67DD7930+24Aj
		mov	eax, dword ptr [esp+7Ch+var_28]
		mov	[esp+7Ch+Format], offset aDidnTLoadAnExi ; "didn't load an existing keyring: %s\n"
		mov	[esp+7Ch+var_74], offset a_dbus_keyrin_0 ; "_dbus_keyring_new_for_credentials"
		mov	[esp+7Ch+var_78], 325h ; int
		mov	dword ptr [esp+7Ch+var_6C], eax	; char
		mov	[esp+7Ch+var_7C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_free
		jmp	loc_67DD7B80
; ---------------------------------------------------------------------------

loc_67DD7D11:				; CODE XREF: sub_67DD7930+72j
		mov	[esp+7Ch+var_74], 0 ; char *
		xor	ebx, ebx
		mov	[esp+7Ch+var_78], offset aOrg_freedes_65 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+7Ch+var_7C], ebp ;	int
		call	dbus_set_error
		jmp	loc_67DD7C2A
sub_67DD7930	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DD7D30	proc near		; CODE XREF: sub_67DC39B0+237p

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	esi, [esp+5Ch+arg_4]
		mov	ebx, [esp+5Ch+arg_0]
		test	esi, esi
		jz	loc_67DD7E10
		mov	[esp+5Ch+var_5C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DD7E10

loc_67DD7D59:				; CODE XREF: sub_67DD7D30+E5j
		mov	[esp+5Ch+var_5C], edx
		mov	dword ptr [esp+5Ch+var_4C], offset a_dbus_keyrin_3 ; "_dbus_keyring_get_best_key"
		mov	[esp+5Ch+Format], 3BAh
		mov	[esp+5Ch+var_54], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_28 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax
		lea	eax, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E0C850
		mov	edx, [ebx+44h]
		test	edx, edx
		jle	loc_67DD7E26
		xor	edx, edx
		mov	eax, [esp+5Ch+var_24]
		xor	edi, edi
		mov	[esp+5Ch+var_30], esi
		mov	esi, ebx
		mov	ebx, edx
		jmp	short loc_67DD7DBD
; ---------------------------------------------------------------------------

loc_67DD7DB2:				; CODE XREF: sub_67DD7D30+CEj
		add	edi, 1
		add	ebx, 1Ch
		cmp	edi, [esi+44h]
		jge	short loc_67DD7E20

loc_67DD7DBD:				; CODE XREF: sub_67DD7D30+80j
		mov	ebp, [esi+40h]
		add	ebp, ebx
		sub	eax, [ebp+4]
		mov	dword ptr [esp+5Ch+var_4C], edi	; char
		mov	[esp+5Ch+Format], offset aKeyDIsLdSecond ; "Key	%d is %ld seconds old\n"
		mov	[esp+5Ch+var_48], eax
		mov	[esp+5Ch+var_54], offset aFind_recent_ke ; "find_recent_key"
		mov	[esp+5Ch+var_58], 39Eh ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+5Ch+var_24]
		lea	edx, [eax-12Bh]
		cmp	edx, [ebp+4]
		jg	short loc_67DD7DB2
		mov	eax, [ebp+0]

loc_67DD7E03:				; CODE XREF: sub_67DD7D30+10Dj
					; sub_67DD7D30+18Cj ...
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD7E10:				; CODE XREF: sub_67DD7D30+11j
					; sub_67DD7D30+23j
		mov	edx, 1
		jmp	loc_67DD7D59
; ---------------------------------------------------------------------------
		align 10h

loc_67DD7E20:				; CODE XREF: sub_67DD7D30+8Bj
		mov	ebx, esi
		mov	esi, [esp+5Ch+var_30]

loc_67DD7E26:				; CODE XREF: sub_67DD7D30+6Aj
		mov	edx, 1
		mov	ecx, esi
		mov	eax, ebx
		call	sub_67DD6770
		mov	edx, eax
		mov	eax, 0FFFFFFFFh
		test	edx, edx
		jz	short loc_67DD7E03
		lea	eax, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_58], eax
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E0C850
		cmp	dword ptr [ebx+44h], 0
		jle	short loc_67DD7EC1
		mov	edx, [esp+5Ch+var_20]
		xor	eax, eax
		xor	edi, edi
		jmp	short loc_67DD7E6E
; ---------------------------------------------------------------------------

loc_67DD7E63:				; CODE XREF: sub_67DD7D30+187j
		add	edi, 1
		add	eax, 1Ch
		cmp	edi, [ebx+44h]
		jge	short loc_67DD7EC1

loc_67DD7E6E:				; CODE XREF: sub_67DD7D30+131j
		mov	ebp, [ebx+40h]
		mov	[esp+5Ch+var_34], eax
		add	ebp, eax
		sub	edx, [ebp+4]
		mov	dword ptr [esp+5Ch+var_4C], edi	; char
		mov	[esp+5Ch+Format], offset aKeyDIsLdSecond ; "Key	%d is %ld seconds old\n"
		mov	[esp+5Ch+var_48], edx
		mov	[esp+5Ch+var_54], offset aFind_recent_ke ; "find_recent_key"
		mov	[esp+5Ch+var_58], 39Eh ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_33 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, [esp+5Ch+var_20]
		mov	eax, [esp+5Ch+var_34]
		lea	ecx, [edx-12Bh]
		cmp	ecx, [ebp+4]
		jg	short loc_67DD7E63
		mov	eax, [ebp+0]
		jmp	loc_67DD7E03
; ---------------------------------------------------------------------------

loc_67DD7EC1:				; CODE XREF: sub_67DD7D30+127j
					; sub_67DD7D30+13Cj
		mov	[esp+5Ch+var_54], offset aNoRecentEnough ; "No recent-enough key found in keyring, "...
		mov	[esp+5Ch+var_58], offset aOrg_freedes_67 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+5Ch+var_5C], esi
		call	dbus_set_error_const
		or	eax, 0FFFFFFFFh
		jmp	loc_67DD7E03
sub_67DD7D30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD7EF0	proc near		; CODE XREF: sub_67DD94B0+B53p
					; dbus_message_get_type+43j

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_28], 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E00E50
		mov	[esp+2Ch+var_1C], offset a_dbus_header_3 ; "_dbus_header_get_message_type"
		mov	[esp+2Ch+var_20], 177h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTypeDbus_messa ; "type != DBUS_MESSAGE_TYPE_INVALID"
		movzx	ebx, al
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
sub_67DD7EF0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DD7F50
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD7F50	proc near		; CODE XREF: .text:67DD7F41j
					; sub_67DE2390+EFp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		movzx	eax, word ptr [ebx+3Ch]
		shr	ax, 3
		movzx	eax, al
		cmp	eax, esi
		jz	loc_67DD801A
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00E50
		mov	[esp+2Ch+var_1C], offset a_dbus_header_b ; "_dbus_header_byteswap"
		mov	[esp+2Ch+var_20], 5C5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aHeaderByte_ord ; "header->byte_order == byte_order"
		movzx	edx, word ptr [ebx+3Ch]
		shr	dx, 3
		cmp	al, dl
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_20], esi
		mov	[esp+2Ch+var_18], 0
		mov	[esp+2Ch+var_1C], ebx
		movzx	eax, word ptr [ebx+3Ch]
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], offset off_67E20898
		shr	ax, 3
		movzx	eax, al
		mov	[esp+2Ch+var_24], eax
		call	sub_67DDADE0
		mov	edx, esi
		and	si, 0FFh
		movzx	eax, dl
		mov	[esp+2Ch+var_24], eax
		shl	esi, 3
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E01030
		movzx	eax, word ptr [ebx+3Ch]
		and	ax, 0F807h
		or	eax, esi
		mov	[ebx+3Ch], ax

loc_67DD801A:				; CODE XREF: sub_67DD7F50+1Aj
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DD7F50	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DD8020	proc near		; CODE XREF: dbus_message_get_auto_start+46p
					; dbus_message_get_no_reply+46p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], 2
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E01280
		movzx	eax, byte ptr [eax]
		test	[esp+1Ch+arg_4], eax
		setnz	al
		add	esp, 1Ch
		movzx	eax, al
		retn
sub_67DD8020	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DD8050	proc near		; CODE XREF: dbus_message_set_auto_start+8Ap
					; dbus_message_set_no_reply+84p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_14], 1
		mov	[esp+1Ch+var_18], 2
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E014C0
		mov	edx, [esp+1Ch+arg_8]
		test	edx, edx
		jnz	short loc_67DD8085
		not	ebx
		and	[eax], bl
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DD8085:				; CODE XREF: sub_67DD8050+2Aj
		or	[eax], bl
		add	esp, 18h
		pop	ebx
		retn
sub_67DD8050	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame fpd=19h

sub_67DD8090	proc near		; CODE XREF: sub_67DD8410+7Dp
					; sub_67DDA470+EEp

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= byte ptr -38h
var_19		= byte ptr -19h
arg_0		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		mov	esi, ecx
		push	ebx
		mov	ebx, edx
		sub	esp, 4Ch
		mov	[esp+58h+var_44], 0Ch
		mov	edi, [esp+58h+arg_0]
		lea	ebp, [esp+3Fh]
		mov	[esp+58h+var_48], eax
		mov	[esp+58h+var_4C], 6
		mov	[esp+58h+var_50], offset off_67E20898
		movzx	eax, word ptr [eax+3Ch]
		mov	[esp+58h+var_58], edi
		shr	ax, 3
		movzx	eax, al
		mov	[esp+58h+var_54], eax
		call	sub_67DDAF50
		mov	[esp+58h+var_58], edi
		lea	edi, [esp+58h+var_38]
		mov	[esp+58h+var_54], esi
		call	sub_67DDC730
		jmp	short loc_67DD814A
; ---------------------------------------------------------------------------

loc_67DD80E8:				; CODE XREF: sub_67DD8090+C4j
		mov	[esp+58h+var_54], edi
		mov	[esp+58h+var_58], esi
		call	sub_67DDC730
		mov	[esp+58h+var_58], edi
		call	sub_67DDB560
		mov	[esp+58h+var_48], offset aFind_field_for ; "find_field_for_modification"
		mov	[esp+58h+var_4C], 4C0h
		mov	[esp+58h+var_50], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+58h+var_54], offset a_dbus_type_rea ; "_dbus_type_reader_get_current_type (&su"...
		cmp	eax, 79h
		setz	al
		movzx	eax, al
		mov	[esp+58h+var_58], eax
		call	sub_67DFAE70
		mov	[esp+58h+var_54], ebp
		mov	[esp+58h+var_58], edi
		call	sub_67DDC900
		movzx	eax, [esp+58h+var_19]
		cmp	eax, ebx
		jz	short loc_67DD8160
		mov	[esp+58h+var_58], esi
		call	sub_67DDB6A0

loc_67DD814A:				; CODE XREF: sub_67DD8090+56j
		mov	[esp+58h+var_58], esi
		call	sub_67DDB560
		test	eax, eax
		jnz	short loc_67DD80E8
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD8160:				; CODE XREF: sub_67DD8090+B0j
		mov	[esp+58h+var_58], esi
		call	sub_67DDB560
		mov	[esp+58h+var_48], offset aFind_field_for ; "find_field_for_modification"
		mov	[esp+58h+var_4C], 4C5h
		mov	[esp+58h+var_50], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+58h+var_54], offset a_dbus_type_r_4 ; "_dbus_type_reader_get_current_type (rea"...
		cmp	eax, 72h
		setz	al
		movzx	eax, al
		mov	[esp+58h+var_58], eax
		call	sub_67DFAE70
		add	esp, 4Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DD8090	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD81B0	proc near		; CODE XREF: sub_67DD8410+116p
					; sub_67DD8E90+1C7p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 24h
		mov	[esp+2Ch+var_1C], offset aCorrect_header ; "correct_header_padding"
		mov	[esp+2Ch+var_20], 6Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aHeaderPadding7 ; "header->padding == 7"
		movzx	eax, byte ptr [eax+3Ch]
		and	eax, 7
		cmp	al, 7
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+3Ch]
		mov	[esp+2Ch+var_2C], ebx
		and	eax, 7
		mov	[esp+2Ch+var_28], eax
		call	sub_67E083B0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		mov	[esp+2Ch+var_28], 8
		mov	[esp+2Ch+var_2C], ebx
		mov	esi, eax
		call	sub_67E04AA0
		test	eax, eax
		jz	short loc_67DD8240
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		mov	edx, esi
		sub	al, dl
		movzx	edx, byte ptr [ebx+3Ch]
		and	eax, 7
		and	edx, 0FFFFFFF8h
		or	edx, eax
		mov	[ebx+3Ch], dl
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DD8240:				; CODE XREF: sub_67DD81B0+6Dj
		mov	[esp+2Ch+var_24], 75h
		mov	[esp+2Ch+var_28], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_2C], offset aCouldnTPadHead ; "couldn't pad header though enough paddi"...
		call	sub_67DFAE30
sub_67DD81B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame fpd=19h

sub_67DD8260	proc near		; CODE XREF: sub_67DD8410+1D2p
					; sub_67DD9250+1A2p ...

var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_9C		= dword	ptr -9Ch
var_8C		= byte ptr -8Ch
var_70		= byte ptr -70h
var_54		= byte ptr -54h
var_38		= byte ptr -38h
var_19		= byte ptr -19h

		push	ebp
		push	edi
		mov	edi, eax
		push	esi
		push	ebx
		sub	esp, 0BCh
		mov	dword ptr [eax+14h], 0FFFFFFFEh
		lea	ebx, [esp+0C8h+var_54]
		mov	dword ptr [eax+18h], 0FFFFFFFEh
		lea	esi, [esp+0C8h+var_38]
		mov	dword ptr [eax+1Ch], 0FFFFFFFEh
		lea	ebp, [esp+0AFh]
		mov	dword ptr [eax+20h], 0FFFFFFFEh
		mov	dword ptr [eax+24h], 0FFFFFFFEh
		mov	dword ptr [eax+28h], 0FFFFFFFEh
		mov	dword ptr [eax+2Ch], 0FFFFFFFEh
		mov	dword ptr [eax+30h], 0FFFFFFFEh
		mov	dword ptr [eax+34h], 0FFFFFFFEh
		mov	dword ptr [eax+38h], 0FFFFFFFEh
		mov	[esp+0C8h+var_B4], 0Ch
		mov	[esp+0C8h+var_B8], eax
		mov	[esp+0C8h+var_BC], 6
		mov	[esp+0C8h+var_C0], offset off_67E20898
		movzx	eax, word ptr [eax+3Ch]
		mov	[esp+0C8h+var_C8], ebx
		shr	ax, 3
		movzx	eax, al
		mov	[esp+0C8h+var_C4], eax
		call	sub_67DDAF50
		mov	[esp+0C8h+var_C8], ebx
		lea	ebx, [esp+0C8h+var_70]
		mov	[esp+0C8h+var_C4], esi
		call	sub_67DDC730
		jmp	short loc_67DD8318
; ---------------------------------------------------------------------------
		align 10h

loc_67DD8310:				; CODE XREF: sub_67DD8260+121j
					; sub_67DD8260+194j
		mov	[esp+0C8h+var_C8], esi
		call	sub_67DDB6A0

loc_67DD8318:				; CODE XREF: sub_67DD8260+A7j
		mov	[esp+0C8h+var_C8], esi
		call	sub_67DDB560
		test	eax, eax
		jz	loc_67DD8400
		mov	[esp+0C8h+var_C4], ebx
		mov	[esp+0C8h+var_C8], esi
		call	sub_67DDC730
		mov	[esp+0C8h+var_C8], ebx
		call	sub_67DDB560
		mov	[esp+0C8h+var_B8], offset a_dbus_header_0 ; "_dbus_header_cache_revalidate"
		mov	[esp+0C8h+var_BC], 0CBh
		mov	[esp+0C8h+var_C0], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0C8h+var_C4], offset a_dbus_type_rea ; "_dbus_type_reader_get_current_type	(&su"...
		cmp	eax, 79h
		setz	al
		movzx	eax, al
		mov	[esp+0C8h+var_C8], eax
		call	sub_67DFAE70
		mov	[esp+0C8h+var_C4], ebp
		mov	[esp+0C8h+var_C8], ebx
		call	sub_67DDC900
		cmp	[esp+0C8h+var_19], 9
		ja	short loc_67DD8310
		mov	[esp+0C8h+var_C8], ebx
		call	sub_67DDB6A0
		mov	[esp+0C8h+var_C8], ebx
		call	sub_67DDB560
		mov	[esp+0C8h+var_B8], offset a_dbus_header_0 ; "_dbus_header_cache_revalidate"
		mov	[esp+0C8h+var_BC], 0D4h
		mov	[esp+0C8h+var_C0], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0C8h+var_C4], offset a_dbus_type_r_0 ; "_dbus_type_reader_get_current_type	(&su"...
		cmp	eax, 76h
		setz	al
		movzx	eax, al
		mov	[esp+0C8h+var_C8], eax
		call	sub_67DFAE70
		lea	eax, [esp+0C8h+var_8C]
		mov	[esp+0C8h+var_C4], eax
		mov	[esp+0C8h+var_C8], ebx
		call	sub_67DDC730
		movzx	edx, [esp+0C8h+var_19]
		lea	eax, [esp+0C8h+var_8C]
		mov	[esp+0C8h+var_C8], eax
		mov	[esp+0C8h+var_9C], edx
		call	sub_67DDAFC0
		mov	edx, [esp+0C8h+var_9C]
		mov	[edi+edx*4+14h], eax
		jmp	loc_67DD8310
; ---------------------------------------------------------------------------
		align 10h

loc_67DD8400:				; CODE XREF: sub_67DD8260+C2j
		add	esp, 0BCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DD8260	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD8410	proc near		; CODE XREF: dbus_message_set_interface+12Bp
					; dbus_message_set_sender+12Bp	...

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_60		= dword	ptr -60h
var_54		= byte ptr -54h
var_38		= byte ptr -38h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 8Ch
		mov	edx, [esp+8Ch+arg_4]
		mov	[esp+8Ch+var_8], edi
		mov	[esp+8Ch+var_10], ebx
		mov	ebx, [esp+8Ch+arg_0]
		mov	[esp+8Ch+var_C], esi
		cmp	edx, 9
		setle	al
		movzx	edi, al
		mov	[esp+8Ch+var_60], edx
		mov	[esp+8Ch+var_4], ebp
		mov	[esp+8Ch+var_7C], offset a_dbus_header_1 ; "_dbus_header_cache_known_nonexistent"
		mov	[esp+8Ch+var_80], 100h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aFieldDbus_he_0 ; "field <= DBUS_HEADER_FIELD_LAST"
		mov	[esp+8Ch+var_8C], edi
		call	sub_67DFAE70
		mov	edx, [esp+8Ch+var_60]
		lea	esi, [edx+4]
		cmp	dword ptr [ebx+esi*4+4], 0FFFFFFFEh
		jz	short loc_67DD8496
		lea	ebp, [esp+8Ch+var_54]
		mov	eax, ebx
		lea	ecx, [esp+8Ch+var_38]
		mov	[esp+8Ch+var_8C], ebp
		call	sub_67DD8090
		test	eax, eax
		jnz	short loc_67DD84C0

loc_67DD8496:				; CODE XREF: sub_67DD8410+6Ej
		mov	eax, 1

loc_67DD849B:				; CODE XREF: sub_67DD8410+10Fj
					; sub_67DD8410+1CBj
		mov	ebx, [esp+8Ch+var_10]
		mov	esi, [esp+8Ch+var_C]
		mov	edi, [esp+8Ch+var_8]
		mov	ebp, [esp+8Ch+var_4]
		add	esp, 8Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD84C0:				; CODE XREF: sub_67DD8410+84j
		mov	[esp+8Ch+var_7C], offset aReserve_header ; "reserve_header_padding"
		mov	[esp+8Ch+var_80], 61h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aHeaderPaddingM ; "header->padding <= MAX_POSSIBLE_HEADER_"...
		mov	[esp+8Ch+var_8C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+3Ch]
		mov	[esp+8Ch+var_8C], ebx
		not	eax
		and	eax, 7
		mov	[esp+8Ch+var_88], eax
		call	sub_67E087C0
		test	eax, eax
		jz	short loc_67DD851D
		or	byte ptr [ebx+3Ch], 7
		lea	eax, [esp+8Ch+var_38]
		mov	[esp+8Ch+var_88], ebp
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DDD930
		test	eax, eax
		jnz	short loc_67DD8524

loc_67DD851D:				; CODE XREF: sub_67DD8410+F3j
		xor	eax, eax
		jmp	loc_67DD849B
; ---------------------------------------------------------------------------

loc_67DD8524:				; CODE XREF: sub_67DD8410+10Bj
		mov	eax, ebx
		call	sub_67DD81B0
		mov	dword ptr [ebx+14h], 0FFFFFFFFh
		mov	dword ptr [ebx+18h], 0FFFFFFFFh
		mov	dword ptr [ebx+1Ch], 0FFFFFFFFh
		mov	dword ptr [ebx+20h], 0FFFFFFFFh
		mov	dword ptr [ebx+24h], 0FFFFFFFFh
		mov	dword ptr [ebx+28h], 0FFFFFFFFh
		mov	dword ptr [ebx+2Ch], 0FFFFFFFFh
		mov	dword ptr [ebx+30h], 0FFFFFFFFh
		mov	dword ptr [ebx+34h], 0FFFFFFFFh
		mov	dword ptr [ebx+38h], 0FFFFFFFFh
		mov	[esp+8Ch+var_7C], offset a_dbus_header_c ; "_dbus_header_cache_check"
		mov	[esp+8Ch+var_80], 0E9h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aFieldDbus_he_0 ; "field <= DBUS_HEADER_FIELD_LAST"
		mov	[esp+8Ch+var_8C], edi
		call	sub_67DFAE70
		mov	eax, [ebx+esi*4+4]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67DD85E0

loc_67DD85A2:				; CODE XREF: sub_67DD8410+1DBj
		cmp	eax, 0FFFFFFFEh
		setnz	al
		movzx	eax, al
		xor	eax, 1
		mov	[esp+8Ch+var_8C], eax
		mov	[esp+8Ch+var_7C], offset a_dbus_header_d ; "_dbus_header_delete_field"
		mov	[esp+8Ch+var_80], 587h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset a_dbus_header_2 ; "!_dbus_header_cache_check (header, fiel"...
		call	sub_67DFAE70
		mov	eax, 1
		jmp	loc_67DD849B
; ---------------------------------------------------------------------------

loc_67DD85E0:				; CODE XREF: sub_67DD8410+190j
		mov	eax, ebx
		call	sub_67DD8260
		mov	eax, [ebx+esi*4+4]
		jmp	short loc_67DD85A2
sub_67DD8410	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD85F0	proc near		; CODE XREF: sub_67DD8E90+2CDp
					; sub_67DD8E90+2FAp ...

var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_74		= byte ptr -74h
var_54		= byte ptr -54h
var_34		= byte ptr -34h
var_1F		= byte ptr -1Fh
var_1E		= byte ptr -1Eh
var_1D		= byte ptr -1Dh
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 0ACh
		mov	[esp+0ACh+var_10], ebx
		mov	ebx, eax
		mov	[esp+0ACh+var_C], esi
		mov	esi, edx
		mov	[esp+0ACh+var_8], edi
		lea	edi, [esp+0ACh+var_54]
		mov	[esp+0ACh+var_4], ebp
		mov	ebp, [eax+10h]
		mov	eax, [eax+0Ch]
		mov	[esp+0ACh+var_80], ecx
		mov	[esp+0ACh+var_AC], eax
		call	sub_67E00CE0
		mov	[esp+0ACh+var_9C], edi
		mov	[esp+0ACh+var_A0], 0
		mov	[esp+0ACh+var_A4], 0
		mov	[esp+0ACh+var_A8], 72h
		mov	[esp+0ACh+var_AC], ebx
		mov	[esp+0ACh+var_84], eax
		call	sub_67DDCB90
		test	eax, eax
		jz	short loc_67DD8680
		mov	eax, esi
		mov	[esp+0ACh+var_1D], al
		lea	eax, [esp+0ACh+var_1D]
		mov	[esp+0ACh+var_A4], eax
		mov	[esp+0ACh+var_A8], 79h
		mov	[esp+0ACh+var_AC], edi
		call	sub_67DDB9F0
		test	eax, eax
		jnz	short loc_67DD86C7

loc_67DD8680:				; CODE XREF: sub_67DD85F0+66j
					; sub_67DD85F0+138j ...
		mov	eax, [ebx+0Ch]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67E00CE0
		mov	[esp+0ACh+var_A8], ebp
		sub	eax, [esp+0ACh+var_84]
		mov	[esp+0ACh+var_A4], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67E02D80
		xor	eax, eax

loc_67DD86A4:				; CODE XREF: sub_67DD85F0+190j
		mov	ebx, [esp+0ACh+var_10]
		mov	esi, [esp+0ACh+var_C]
		mov	edi, [esp+0ACh+var_8]
		mov	ebp, [esp+0ACh+var_4]
		add	esp, 0ACh
		retn
; ---------------------------------------------------------------------------

loc_67DD86C7:				; CODE XREF: sub_67DD85F0+8Ej
		movzx	eax, byte ptr [esp+0ACh+var_80]
		lea	esi, [esp+0ACh+var_74]
		mov	[esp+0ACh+var_1E], 0
		mov	[esp+0ACh+var_A4], 1
		mov	[esp+0ACh+var_1F], al
		lea	eax, [esp+0ACh+var_1F]
		mov	[esp+0ACh+var_A8], eax
		lea	eax, [esp+0ACh+var_34]
		mov	[esp+0ACh+var_AC], eax
		mov	[esp+0ACh+var_88], eax
		call	sub_67E01AC0
		mov	eax, [esp+0ACh+var_88]
		mov	[esp+0ACh+var_9C], esi
		mov	[esp+0ACh+var_A0], 0
		mov	[esp+0ACh+var_A8], 76h
		mov	[esp+0ACh+var_A4], eax
		mov	[esp+0ACh+var_AC], edi
		call	sub_67DDCB90
		test	eax, eax
		jz	loc_67DD8680
		mov	eax, [esp+0ACh+arg_0]
		mov	[esp+0ACh+var_AC], esi
		mov	[esp+0ACh+var_A4], eax
		mov	eax, [esp+0ACh+var_80]
		mov	[esp+0ACh+var_A8], eax
		call	sub_67DDB9F0
		test	eax, eax
		jz	loc_67DD8680
		mov	[esp+0ACh+var_A8], esi
		mov	[esp+0ACh+var_AC], edi
		call	sub_67DDC490
		test	eax, eax
		jz	loc_67DD8680
		mov	[esp+0ACh+var_A8], edi
		mov	[esp+0ACh+var_AC], ebx
		call	sub_67DDC490
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jz	loc_67DD8680
		jmp	loc_67DD86A4
sub_67DD85F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD8790	proc near		; CODE XREF: dbus_message_lock+36p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		movzx	edx, word ptr [eax+3Ch]
		mov	[esp+1Ch+var_18], 4
		mov	[esp+1Ch+var_1C], eax
		shr	dx, 3
		movzx	edx, dl
		mov	[esp+1Ch+var_10], edx
		mov	edx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_14], edx
		call	sub_67DFD1D0
		add	esp, 1Ch
		retn
sub_67DD8790	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD87D0	proc near		; CODE XREF: sub_67DE0E70+204p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E06F60
		movzx	edx, [esp+1Ch+arg_4]
		movzx	eax, word ptr [ebx+3Ch]
		mov	dword ptr [ebx+14h], 0FFFFFFFFh
		mov	dword ptr [ebx+18h], 0FFFFFFFFh
		shl	edx, 3
		and	ax, 0F807h
		or	eax, edx
		mov	[ebx+3Ch], ax
		and	eax, 0FFFFFFF8h
		mov	[ebx+3Ch], al
		mov	dword ptr [ebx+1Ch], 0FFFFFFFFh
		mov	dword ptr [ebx+20h], 0FFFFFFFFh
		mov	dword ptr [ebx+24h], 0FFFFFFFFh
		mov	dword ptr [ebx+28h], 0FFFFFFFFh
		mov	dword ptr [ebx+2Ch], 0FFFFFFFFh
		mov	dword ptr [ebx+30h], 0FFFFFFFFh
		mov	dword ptr [ebx+34h], 0FFFFFFFFh
		mov	dword ptr [ebx+38h], 0FFFFFFFFh
		add	esp, 18h
		pop	ebx
		retn
sub_67DD87D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD8850	proc near		; CODE XREF: dbus_message_demarshal_bytes_needed+A4p
					; sub_67DE5570+84p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h
arg_20		= byte ptr  24h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_1C]
		mov	esi, dword ptr [esp+4Ch+arg_20]
		mov	ebp, [esp+4Ch+arg_8]
		mov	edi, [esp+4Ch+arg_18]
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		mov	[esp+4Ch+Format], 2A1h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStart0_0 ; "start >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	ebx, 3FFFFFFEh
		setle	al
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		mov	[esp+4Ch+Format], 2A2h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStart_dbus_int ; "start < _DBUS_INT32_MAX / 2"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		mov	[esp+4Ch+Format], 2A3h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aLen0_0 ; "len	>= 0"
		call	sub_67DFAE70
		lea	eax, [ebx+7]
		and	eax, 0FFFFFFF8h
		cmp	eax, ebx
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		mov	[esp+4Ch+Format], 2A5h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStartInt_dbus_ ; "start == (int) _DBUS_ALIGN_VALUE (start"...
		call	sub_67DFAE70
		mov	[esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], edi
		call	sub_67E00E50
		movzx	eax, al
		cmp	eax, 42h
		mov	[ebp+0], eax
		jz	short loc_67DD8960
		cmp	eax, 6Ch
		jz	short loc_67DD8960
		mov	eax, [esp+4Ch+arg_4]
		mov	dword ptr [eax], 0Dh
		xor	eax, eax

loc_67DD8956:				; CODE XREF: sub_67DD8850+1EAj
					; sub_67DD8850+248j ...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD8960:				; CODE XREF: sub_67DD8850+F3j
					; sub_67DD8850+F8j
		xor	eax, eax
		cmp	esi, 0Fh
		setnle	al
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		mov	[esp+4Ch+Format], 2AFh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aFields_array_l ; "FIELDS_ARRAY_LENGTH_OFFSET + 4 <= len"
		call	sub_67DFAE70
		mov	[esp+4Ch+Format], 0
		mov	eax, [ebp+0]
		mov	[esp+4Ch+var_4C], edi
		mov	[esp+4Ch+var_44], eax
		lea	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_48], eax
		call	sub_67DFD0F0
		cmp	eax, [esp+4Ch+arg_0]
		mov	edx, eax
		jbe	short loc_67DD89D0
		mov	eax, [esp+4Ch+arg_4]
		mov	dword ptr [eax], 11h
		add	esp, 3Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD89D0:				; CODE XREF: sub_67DD8850+164j
		xor	eax, eax
		cmp	esi, 8
		setnle	al
		add	ebx, 4
		mov	[esp+4Ch+var_20], edx
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		mov	[esp+4Ch+Format], 2B9h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aBody_length_of ; "BODY_LENGTH_OFFSET + 4 < len"
		call	sub_67DFAE70
		mov	[esp+4Ch+Format], 0
		mov	eax, [ebp+0]
		mov	[esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], edi
		mov	[esp+4Ch+var_44], eax
		call	sub_67DFD0F0
		mov	edx, [esp+4Ch+var_20]
		cmp	[esp+4Ch+arg_0], eax
		mov	ebx, eax
		jnb	short loc_67DD8A40
		mov	eax, [esp+4Ch+arg_4]
		mov	dword ptr [eax], 12h
		xor	eax, eax
		jmp	loc_67DD8956
; ---------------------------------------------------------------------------
		align 10h

loc_67DD8A40:				; CODE XREF: sub_67DD8850+1DCj
		lea	edi, [edx+17h]
		xor	eax, eax
		and	edi, 0FFFFFFF8h
		cmp	[esp+4Ch+arg_0], 3FFFFFFEh
		mov	[esp+4Ch+var_20], edx
		lea	ebp, [ebx+edi]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		setle	al
		mov	[esp+4Ch+Format], 2C9h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aMax_message_le ; "max_message_length < _DBUS_INT32_MAX / "...
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	edx, [esp+4Ch+var_20]
		cmp	[esp+4Ch+arg_0], ebp
		jnb	short loc_67DD8AA0
		mov	eax, [esp+4Ch+arg_4]
		mov	dword ptr [eax], 13h
		xor	eax, eax
		jmp	loc_67DD8956
; ---------------------------------------------------------------------------
		align 10h

loc_67DD8AA0:				; CODE XREF: sub_67DD8850+23Aj
		xor	eax, eax
		cmp	ebx, 7FFFFFFEh
		setbe	al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_20], edx
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		mov	[esp+4Ch+Format], 2D0h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aBody_len_unsig ; "body_len_unsigned <	(unsigned) _DBUS_IN"...
		call	sub_67DFAE70
		mov	edx, [esp+4Ch+var_20]
		xor	eax, eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		mov	[esp+4Ch+Format], 2D1h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		cmp	edx, 7FFFFFFEh
		setbe	al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], offset aFields_array_0 ; "fields_array_len_unsigned <	(unsigned) "...
		call	sub_67DFAE70
		xor	eax, eax
		cmp	edi, 7FFFFFFEh
		setbe	al
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		mov	[esp+4Ch+Format], 2D2h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aHeader_len_uns ; "header_len_unsigned	< (unsigned) _DBUS_"...
		call	sub_67DFAE70
		mov	eax, [esp+4Ch+arg_14]
		mov	edx, [esp+4Ch+var_20]
		mov	[eax], ebx
		mov	eax, [esp+4Ch+arg_C]
		mov	[eax], edx
		mov	eax, [esp+4Ch+arg_10]
		mov	[eax], edi
		mov	eax, [esp+4Ch+arg_4]
		mov	dword ptr [eax], 0
		mov	[esp+4Ch+var_30], ebp
		mov	[esp+4Ch+var_34], edi
		mov	[esp+4Ch+var_38], ebx
		mov	dword ptr [esp+4Ch+var_3C], esi	; char
		mov	[esp+4Ch+Format], offset aHaveDBytesNeed ; "have %d bytes, need	body %u	+ header %u"...
		mov	[esp+4Ch+var_44], offset a_dbus_header_h ; "_dbus_header_have_message_untrusted"
		mov	[esp+4Ch+var_48], 2DCh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		cmp	ebp, esi
		setbe	al
		jmp	loc_67DD8956
sub_67DD8850	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DD8BB0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD8BB0	proc near		; CODE XREF: .text:67DD8BA1j
					; dbus_message_get_serial+43j

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_10], 0
		movzx	edx, word ptr [eax+3Ch]
		mov	[esp+1Ch+var_18], 8
		mov	[esp+1Ch+var_1C], eax
		shr	dx, 3
		movzx	edx, dl
		mov	[esp+1Ch+var_14], edx
		call	sub_67DFD0F0
		add	esp, 1Ch
		retn
sub_67DD8BB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD8BF0	proc near		; CODE XREF: sub_67DE0E70+2E3p
					; sub_67DE35C0+6Fp ...
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	sub_67E02BF0
sub_67DD8BF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD8C00	proc near		; CODE XREF: dbus_message_copy+83p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	eax, [esi]
		mov	[ebx], eax
		mov	eax, [esi+4]
		mov	[ebx+4], eax
		mov	eax, [esi+8]
		mov	[ebx+8], eax
		mov	eax, [esi+0Ch]
		mov	[ebx+0Ch], eax
		mov	eax, [esi+10h]
		mov	[ebx+10h], eax
		mov	eax, [esi+14h]
		mov	[ebx+14h], eax
		mov	eax, [esi+18h]
		mov	[ebx+18h], eax
		mov	eax, [esi+1Ch]
		mov	[ebx+1Ch], eax
		mov	eax, [esi+20h]
		mov	[ebx+20h], eax
		mov	eax, [esi+24h]
		mov	[ebx+24h], eax
		mov	eax, [esi+28h]
		mov	[ebx+28h], eax
		mov	eax, [esi+2Ch]
		mov	[ebx+2Ch], eax
		mov	eax, [esi+30h]
		mov	[ebx+30h], eax
		mov	eax, [esi+34h]
		mov	[ebx+34h], eax
		mov	eax, [esi+38h]
		mov	[ebx+38h], eax
		mov	eax, [esi+3Ch]
		mov	[ebx+3Ch], eax
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], eax
		call	sub_67E031B0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DD8C90
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD8C90:				; CODE XREF: sub_67DD8C00+85j
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], ebx
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DD8D40
		mov	[esp+2Ch+var_20], 0
		movzx	eax, word ptr [ebx+3Ch]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], 8
		shr	ax, 3
		movzx	eax, al
		mov	[esp+2Ch+var_24], eax
		call	sub_67DFD0F0
		mov	[esp+2Ch+var_1C], offset a_dbus_header_4 ; "_dbus_header_set_serial"
		mov	[esp+2Ch+var_20], 18Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_header_5 ; "_dbus_header_get_serial (header) ==	0 |"...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		movzx	eax, word ptr [ebx+3Ch]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 8
		shr	ax, 3
		movzx	eax, al
		mov	[esp+2Ch+var_20], eax
		call	sub_67DFD1D0
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD8D40:				; CODE XREF: sub_67DD8C00+AEj
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E02BF0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
sub_67DD8C00	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR dbus_message_set_serial

loc_67DD8D50:				; CODE XREF: dbus_message_set_serial+7Fj
		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_20], 0
		mov	esi, [esp+2Ch+arg_4]
		movzx	eax, word ptr [ebx+3Ch]
		mov	dword ptr [esp+2Ch+var_28], 8
		mov	[esp+2Ch+var_2C], ebx
		shr	ax, 3
		movzx	eax, al
		mov	[esp+2Ch+var_24], eax
		call	sub_67DFD0F0
		mov	edx, 1
		test	eax, eax
		jz	short loc_67DD8D94
		xor	edx, edx
		test	esi, esi
		setz	dl

loc_67DD8D94:				; CODE XREF: dbus_message_set_serial-BD95j
		mov	[esp+2Ch+var_2C], edx
		mov	[esp+2Ch+var_1C], offset a_dbus_header_4 ; "_dbus_header_set_serial"
		mov	[esp+2Ch+var_20], 18Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset a_dbus_header_5 ; "_dbus_header_get_serial (header) == 0 |"...
		call	sub_67DFAE70
		movzx	eax, word ptr [ebx+3Ch]
		mov	[esp+2Ch+var_24], esi
		mov	[esp+2Ch+var_2C], ebx
		mov	dword ptr [esp+2Ch+var_28], 8
		shr	ax, 3
		movzx	eax, al
		mov	[esp+2Ch+var_20], eax
		call	sub_67DFD1D0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; END OF FUNCTION CHUNK	FOR dbus_message_set_serial
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD8DF0	proc near		; CODE XREF: sub_67DE0E70+2BCp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], 20h
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E031B0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DD8E87
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E06F60
		movzx	edx, [esp+1Ch+arg_4]
		movzx	eax, word ptr [ebx+3Ch]
		mov	dword ptr [ebx+14h], 0FFFFFFFFh
		mov	dword ptr [ebx+18h], 0FFFFFFFFh
		shl	edx, 3
		and	ax, 0F807h
		or	eax, edx
		mov	[ebx+3Ch], ax
		and	eax, 0FFFFFFF8h
		mov	[ebx+3Ch], al
		mov	eax, 1
		mov	dword ptr [ebx+1Ch], 0FFFFFFFFh
		mov	dword ptr [ebx+20h], 0FFFFFFFFh
		mov	dword ptr [ebx+24h], 0FFFFFFFFh
		mov	dword ptr [ebx+28h], 0FFFFFFFFh
		mov	dword ptr [ebx+2Ch], 0FFFFFFFFh
		mov	dword ptr [ebx+30h], 0FFFFFFFFh
		mov	dword ptr [ebx+34h], 0FFFFFFFFh
		mov	dword ptr [ebx+38h], 0FFFFFFFFh

loc_67DD8E87:				; CODE XREF: sub_67DD8DF0+1Ej
		add	esp, 18h
		pop	ebx
		retn
sub_67DD8DF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD8E90	proc near		; CODE XREF: dbus_message_new_signal+194p
					; dbus_message_new_method_call+1A8p ...

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_64		= byte ptr -64h
var_44		= byte ptr -44h
var_24		= dword	ptr -24h
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	edi, [esp+8Ch+arg_4]
		mov	ebx, [esp+8Ch+arg_0]
		mov	edx, [esp+8Ch+arg_10]
		cmp	edi, 4
		jnz	loc_67DD9066
		test	edx, edx
		jnz	loc_67DD9066

loc_67DD8EBD:				; CODE XREF: sub_67DD8E90+1E5j
		mov	esi, [esp+8Ch+arg_18]
		test	esi, esi
		jz	loc_67DD9080

loc_67DD8ECC:				; CODE XREF: sub_67DD8E90+1DFj
		mov	eax, 1

loc_67DD8ED1:				; CODE XREF: sub_67DD8E90+206j
		mov	[esp+8Ch+var_8C], eax
		mov	[esp+8Ch+var_7C], offset a_dbus_header_6 ; "_dbus_header_create"
		mov	[esp+8Ch+var_80], 213h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aInterfaceMessa ; "((interface	|| message_type	!= DBUS_MES"...
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], ebx
		call	sub_67E00CE0
		mov	[esp+8Ch+var_7C], offset a_dbus_header_6 ; "_dbus_header_create"
		mov	[esp+8Ch+var_80], 214h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset a_dbus_string_g ; "_dbus_string_get_length (&header->data)"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	[esp+8Ch+var_7C], offset aReserve_header ; "reserve_header_padding"
		mov	[esp+8Ch+var_80], 61h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aHeaderPaddingM ; "header->padding <= MAX_POSSIBLE_HEADER_"...
		mov	[esp+8Ch+var_8C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+3Ch]
		mov	[esp+8Ch+var_8C], ebx
		not	eax
		and	eax, 7
		mov	[esp+8Ch+var_88], eax
		call	sub_67E087C0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	loc_67DD905E
		or	byte ptr [ebx+3Ch], 7
		lea	esi, [esp+8Ch+var_44]
		mov	[esp+8Ch+var_8C], ebx
		lea	ebp, [esp+8Ch+var_1D]
		call	sub_67E00CE0
		movzx	edx, byte ptr [ebx+3Ch]
		mov	[esp+8Ch+var_7C], ebx
		mov	[esp+8Ch+var_80], 0
		mov	[esp+8Ch+var_84], offset off_67E20898
		and	edx, 7
		sub	eax, edx
		mov	[esp+8Ch+var_78], eax
		movzx	eax, word ptr [ebx+3Ch]
		mov	[esp+8Ch+var_8C], esi
		shr	ax, 3
		movzx	eax, al
		mov	[esp+8Ch+var_88], eax
		call	sub_67DDB090
		movzx	eax, word ptr [ebx+3Ch]
		mov	[esp+8Ch+var_84], ebp
		mov	[esp+8Ch+var_88], 79h
		mov	[esp+8Ch+var_8C], esi
		shr	ax, 3
		mov	[esp+8Ch+var_1D], al
		call	sub_67DDB9F0
		test	eax, eax
		jz	short loc_67DD9030
		mov	eax, edi
		mov	[esp+8Ch+var_1D], al
		mov	[esp+8Ch+var_84], ebp
		mov	[esp+8Ch+var_88], 79h
		mov	[esp+8Ch+var_8C], esi
		call	sub_67DDB9F0
		test	eax, eax
		jz	short loc_67DD9030
		mov	[esp+8Ch+var_1D], 0
		mov	[esp+8Ch+var_84], ebp
		mov	[esp+8Ch+var_88], 79h
		mov	[esp+8Ch+var_8C], esi
		call	sub_67DDB9F0
		test	eax, eax
		jnz	short loc_67DD90A0
		lea	esi, [esi+0]

loc_67DD9030:				; CODE XREF: sub_67DD8E90+15Cj
					; sub_67DD8E90+17Aj ...
		mov	[esp+8Ch+var_8C], ebx
		call	sub_67E00CE0
		movzx	edx, byte ptr [ebx+3Ch]
		mov	[esp+8Ch+var_88], 0
		mov	[esp+8Ch+var_8C], ebx
		and	edx, 7
		sub	eax, edx
		mov	[esp+8Ch+var_84], eax
		call	sub_67E02D80
		mov	eax, ebx
		call	sub_67DD81B0
		xor	eax, eax

loc_67DD905E:				; CODE XREF: sub_67DD8E90+E8j
					; sub_67DD8E90+3B0j
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD9066:				; CODE XREF: sub_67DD8E90+1Fj
					; sub_67DD8E90+27j
		mov	ebp, [esp+8Ch+arg_14]
		test	ebp, ebp
		jnz	loc_67DD8ECC
		jmp	loc_67DD8EBD
; ---------------------------------------------------------------------------
		align 10h

loc_67DD9080:				; CODE XREF: sub_67DD8E90+36j
		mov	ecx, [esp+8Ch+arg_14]
		test	ecx, ecx
		setz	al
		test	edx, edx
		setz	dl
		and	eax, edx
		movzx	eax, al
		jmp	loc_67DD8ED1
; ---------------------------------------------------------------------------
		align 10h

loc_67DD90A0:				; CODE XREF: sub_67DD8E90+197j
		mov	[esp+8Ch+var_1D], 1
		mov	[esp+8Ch+var_84], ebp
		mov	[esp+8Ch+var_88], 79h
		mov	[esp+8Ch+var_8C], esi
		call	sub_67DDB9F0
		test	eax, eax
		jz	loc_67DD9030
		lea	edi, [esp+8Ch+var_24]
		mov	[esp+8Ch+var_24], 0
		mov	[esp+8Ch+var_84], edi
		mov	[esp+8Ch+var_88], 75h
		mov	[esp+8Ch+var_8C], esi
		call	sub_67DDB9F0
		test	eax, eax
		jz	loc_67DD9030
		mov	[esp+8Ch+var_24], 0
		mov	[esp+8Ch+var_84], edi
		mov	[esp+8Ch+var_88], 75h
		mov	[esp+8Ch+var_8C], esi
		call	sub_67DDB9F0
		test	eax, eax
		jz	loc_67DD9030
		lea	edi, [esp+8Ch+var_64]
		mov	[esp+8Ch+var_7C], edi
		mov	[esp+8Ch+var_80], 6
		mov	[esp+8Ch+var_84], offset off_67E20898
		mov	[esp+8Ch+var_88], 61h
		mov	[esp+8Ch+var_8C], esi
		call	sub_67DDCB90
		test	eax, eax
		jz	loc_67DD9030
		cmp	[esp+8Ch+arg_C], 0
		jz	short loc_67DD916A
		lea	eax, [esp+8Ch+arg_C]
		mov	ecx, 6Fh
		mov	[esp+8Ch+var_8C], eax
		mov	edx, 1
		mov	eax, edi
		call	sub_67DD85F0
		test	eax, eax
		jz	loc_67DD9030

loc_67DD916A:				; CODE XREF: sub_67DD8E90+2B5j
		cmp	[esp+8Ch+arg_8], 0
		jz	short loc_67DD9197
		lea	eax, [esp+8Ch+arg_8]
		mov	ecx, 73h
		mov	[esp+8Ch+var_8C], eax
		mov	edx, 6
		mov	eax, edi
		call	sub_67DD85F0
		test	eax, eax
		jz	loc_67DD9030

loc_67DD9197:				; CODE XREF: sub_67DD8E90+2E2j
		cmp	[esp+8Ch+arg_10], 0
		jz	short loc_67DD91C4
		lea	eax, [esp+8Ch+arg_10]
		mov	ecx, 73h
		mov	[esp+8Ch+var_8C], eax
		mov	edx, 2
		mov	eax, edi
		call	sub_67DD85F0
		test	eax, eax
		jz	loc_67DD9030

loc_67DD91C4:				; CODE XREF: sub_67DD8E90+30Fj
		cmp	[esp+8Ch+arg_14], 0
		jz	short loc_67DD91F1
		lea	eax, [esp+8Ch+arg_14]
		mov	ecx, 73h
		mov	[esp+8Ch+var_8C], eax
		mov	edx, 3
		mov	eax, edi
		call	sub_67DD85F0
		test	eax, eax
		jz	loc_67DD9030

loc_67DD91F1:				; CODE XREF: sub_67DD8E90+33Cj
		cmp	[esp+8Ch+arg_18], 0
		jz	short loc_67DD921E
		lea	eax, [esp+8Ch+arg_18]
		mov	ecx, 73h
		mov	[esp+8Ch+var_8C], eax
		mov	edx, 4
		mov	eax, edi
		call	sub_67DD85F0
		test	eax, eax
		jz	loc_67DD9030

loc_67DD921E:				; CODE XREF: sub_67DD8E90+369j
		mov	[esp+8Ch+var_88], edi
		mov	[esp+8Ch+var_8C], esi
		call	sub_67DDC490
		test	eax, eax
		jz	loc_67DD9030
		mov	eax, ebx
		call	sub_67DD81B0
		mov	eax, 1
		xchg	ax, ax
		jmp	loc_67DD905E
sub_67DD8E90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DD9250	proc near		; CODE XREF: sub_67DD94B0+F5Fp
					; dbus_message_get_sender+5Ep ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+3Ch+arg_4]
		mov	ebx, [esp+3Ch+arg_0]
		mov	edi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset a_dbus_header_g ; "_dbus_header_get_field_basic"
		test	esi, esi
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_30], 530h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aFieldDbus_head ; "field != DBUS_HEADER_FIELD_INVALID"
		call	sub_67DFAE70
		cmp	esi, 9
		setle	al
		movzx	ebp, al
		mov	[esp+3Ch+var_2C], offset a_dbus_header_g ; "_dbus_header_get_field_basic"
		mov	[esp+3Ch+var_30], 531h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aFieldDbus_he_0 ; "field <= DBUS_HEADER_FIELD_LAST"
		mov	[esp+3Ch+var_3C], ebp
		call	sub_67DFAE70
		movzx	eax, ds:byte_67E20986[esi+esi]
		mov	[esp+3Ch+var_2C], offset a_dbus_header_g ; "_dbus_header_get_field_basic"
		mov	[esp+3Ch+var_30], 532h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		cmp	eax, esi
		setz	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_38], offset a_dbus_header_f ; "_dbus_header_field_types[field].code =="...
		call	sub_67DFAE70
		movzx	eax, ds:byte_67E20987[esi+esi]
		mov	[esp+3Ch+var_2C], offset a_dbus_header_g ; "_dbus_header_get_field_basic"
		mov	[esp+3Ch+var_30], 537h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		cmp	eax, edi
		setz	al
		add	esi, 4
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_38], offset aTypeExpected_t ; "type == EXPECTED_TYPE_OF_FIELD (field)"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_header_c ; "_dbus_header_cache_check"
		mov	[esp+3Ch+var_30], 0E9h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aFieldDbus_he_0 ; "field <= DBUS_HEADER_FIELD_LAST"
		mov	[esp+3Ch+var_3C], ebp
		call	sub_67DFAE70
		mov	eax, [ebx+esi*4+4]
		cmp	eax, 0FFFFFFFFh
		jz	loc_67DD93F0

loc_67DD936B:				; CODE XREF: sub_67DD9250+1ABj
		cmp	eax, 0FFFFFFFEh
		jz	short loc_67DD93E0
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_header_g ; "_dbus_header_get_field_basic"
		mov	[esp+3Ch+var_30], 53Ch
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aHeaderFieldsFi ; "header->fields[field].value_pos >= 0"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_28], 0
		movzx	eax, word ptr [ebx+3Ch]
		mov	[esp+3Ch+var_34], edi
		shr	ax, 3
		movzx	eax, al
		mov	[esp+3Ch+var_2C], eax
		mov	eax, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_30], eax
		mov	eax, [ebx+esi*4+4]
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_38], eax
		call	sub_67DFE240
		add	esp, 2Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD93E0:				; CODE XREF: sub_67DD9250+11Ej
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD93F0:				; CODE XREF: sub_67DD9250+115j
		mov	eax, ebx
		call	sub_67DD8260
		mov	eax, [ebx+esi*4+4]
		jmp	loc_67DD936B
sub_67DD9250	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DD9400	proc near		; CODE XREF: sub_67DD94B0+C2Fp
					; sub_67DE21F0+D4p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 3Ch
		xor	eax, eax
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_C]
		cmp	esi, 9
		setle	al
		add	esi, 4
		mov	[esp+3Ch+var_2C], offset a_dbus_header_c ; "_dbus_header_cache_check"
		mov	[esp+3Ch+var_30], 0E9h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aFieldDbus_he_0 ; "field <= DBUS_HEADER_FIELD_LAST"
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	edx, [ebx+esi*4+4]
		cmp	edx, 0FFFFFFFFh
		jz	short loc_67DD9495

loc_67DD945F:				; CODE XREF: sub_67DD9400+A0j
		xor	eax, eax
		cmp	edx, 0FFFFFFFEh
		jz	short loc_67DD9481
		test	edi, edi
		jz	short loc_67DD946C
		mov	[edi], ebx

loc_67DD946C:				; CODE XREF: sub_67DD9400+68j
		test	ebp, ebp
		mov	eax, 1
		jz	short loc_67DD9481
		mov	eax, [ebx+esi*4+4]
		mov	[ebp+0], eax
		mov	eax, 1

loc_67DD9481:				; CODE XREF: sub_67DD9400+64j
					; sub_67DD9400+73j
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DD9495:				; CODE XREF: sub_67DD9400+5Dj
		mov	eax, ebx
		call	sub_67DD8260
		mov	edx, [ebx+esi*4+4]
		jmp	short loc_67DD945F
sub_67DD9400	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DD94B0(int,	int, int, int, int, size_t, int, int, int, int)
sub_67DD94B0	proc near		; CODE XREF: sub_67DE5570+1BCp

var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
Format		= dword	ptr -0D0h
var_CC		= byte ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_BC		= dword	ptr -0BCh
var_B8		= byte ptr -0B8h
var_B1		= byte ptr -0B1h
var_B0		= dword	ptr -0B0h
var_A8		= byte ptr -0A8h
var_8C		= byte ptr -8Ch
var_70		= byte ptr -70h
var_54		= byte ptr -54h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_1E		= byte ptr -1Eh
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h
arg_20		= dword	ptr  24h
arg_24		= dword	ptr  28h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0CCh
		mov	ebx, [esp+0DCh+arg_20]
		mov	esi, [esp+0DCh+arg_14]
		mov	ebp, [esp+0DCh+arg_24]
		mov	edi, [esp+0DCh+arg_0]
		lea	eax, [ebx+7]
		and	eax, 0FFFFFFF8h
		cmp	eax, ebx
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 3D0h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset aStartInt_dbus_ ; "start == (int) _DBUS_ALIGN_VALUE (start"...
		call	sub_67DFAE70
		xor	eax, eax
		cmp	esi, ebp
		setle	al
		mov	[esp+0DCh+var_DC], eax
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 3D1h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset aHeader_lenLen ; "header_len <= len"
		call	sub_67DFAE70
		mov	[esp+0DCh+var_DC], edi
		call	sub_67E00CE0
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 3D2h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_string_g ; "_dbus_string_get_length (&header->data)"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	eax, [esp+0DCh+arg_1C]
		mov	dword ptr [esp+0DCh+var_CC], 0 ; char
		mov	[esp+0DCh+Format], edi ; int
		mov	[esp+0DCh+var_D4], esi ; size_t
		mov	[esp+0DCh+var_D8], ebx ; int
		mov	[esp+0DCh+var_DC], eax ; int
		call	sub_67E05A20
		test	eax, eax
		jz	loc_67DD9708
		mov	eax, [esp+0DCh+arg_4]
		test	eax, eax
		jnz	loc_67DD96B8
		mov	eax, ebp
		sub	eax, esi
		sub	eax, [esp+0DCh+arg_18]
		sub	eax, ebx
		mov	[esp+0DCh+var_24], eax

loc_67DD95C1:				; CODE XREF: sub_67DD94B0+2E7j
		cmp	ebp, eax
		mov	ebp, esi
		setnle	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		lea	esi, [ebx+esi]
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 3EDh
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset aLeftoverLen ; "leftover < len"
		call	sub_67DFAE70
		mov	ecx, [esp+0DCh+arg_10]
		sub	ebp, [esp+0DCh+arg_10]
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 3F1h
		lea	ecx, [ecx+ebx+10h]
		sub	ebp, 10h
		mov	eax, ecx
		add	eax, 7
		and	eax, 0FFFFFFF8h
		cmp	esi, eax
		setz	al
		movzx	eax, al
		mov	dword ptr [esp+0DCh+var_B8], ecx
		mov	[esp+0DCh+var_DC], eax
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset aStartHeader_le ; "start + header_len	== (int) _DBUS_ALIGN"...
		call	sub_67DFAE70
		mov	eax, dword ptr [esp+0DCh+var_B8]
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 3F2h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		add	eax, ebp
		cmp	esi, eax
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_D8], offset aStartHeader__0 ; "start + header_len	== padding_start + p"...
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	ecx, [esp+0DCh+arg_4]
		test	ecx, ecx
		jnz	loc_67DD9746
		movzx	eax, byte ptr [edi+3Ch]
		and	ebp, 7
		and	eax, 0FFFFFFF8h
		or	eax, ebp
		mov	[edi+3Ch], al
		mov	eax, [esp+0DCh+arg_8]
		mov	dword ptr [eax], 0
		mov	eax, 1

loc_67DD96AD:				; CODE XREF: sub_67DD94B0+B88j
		add	esp, 0CCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD96B8:				; CODE XREF: sub_67DD94B0+F7j
		lea	eax, [esp+0DCh+var_24]
		mov	ecx, [esp+0DCh+arg_1C]
		mov	[esp+0DCh+Format], eax
		mov	eax, [esp+0DCh+arg_C]
		mov	[esp+0DCh+var_C4], ebp
		mov	[esp+0DCh+var_C8], ebx
		mov	dword ptr [esp+0DCh+var_CC], ecx
		mov	[esp+0DCh+var_D4], eax
		mov	[esp+0DCh+var_D8], 0
		mov	[esp+0DCh+var_DC], offset off_67E20898
		call	sub_67DE01C0
		test	eax, eax
		jz	loc_67DD9790
		mov	edx, [esp+0DCh+arg_8]
		mov	[edx], eax
		jmp	short loc_67DD9772
; ---------------------------------------------------------------------------

loc_67DD9708:				; CODE XREF: sub_67DD94B0+E8j
		mov	[esp+0DCh+Format], offset aFailedToCopyBu ; "Failed to copy buffer into	new header\n"
		mov	[esp+0DCh+var_D4], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+var_D8], 3D6h	; int
		mov	[esp+0DCh+var_DC], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, [esp+0DCh+arg_8]
		xor	eax, eax
		mov	dword ptr [edx], 0FFFFFFFCh
		add	esp, 0CCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DD9746:				; CODE XREF: sub_67DD94B0+1D6j
		mov	eax, dword ptr [esp+0DCh+var_B8]
		mov	edx, [esp+0DCh+arg_1C]
		mov	[esp+0DCh+var_D4], ebp
		mov	[esp+0DCh+var_D8], eax
		mov	[esp+0DCh+var_DC], edx
		call	sub_67E01DC0
		test	eax, eax
		jnz	short loc_67DD97A0
		mov	ecx, [esp+0DCh+arg_8]
		mov	dword ptr [ecx], 9

loc_67DD9772:				; CODE XREF: sub_67DD94B0+256j
					; sub_67DD94B0+4B7j ...
		mov	[esp+0DCh+var_DC], edi
		mov	[esp+0DCh+var_D8], 0
		call	sub_67E06F60
		add	esp, 0CCh
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DD9790:				; CODE XREF: sub_67DD94B0+247j
		mov	eax, [esp+0DCh+var_24]
		jmp	loc_67DD95C1
; ---------------------------------------------------------------------------
		align 10h

loc_67DD97A0:				; CODE XREF: sub_67DD94B0+2B3j
		movzx	eax, byte ptr [edi+3Ch]
		and	ebp, 7
		lea	esi, [esp+0DCh+var_1D]
		and	eax, 0FFFFFFF8h
		or	eax, ebp
		mov	[edi+3Ch], al
		mov	ecx, [esp+0DCh+arg_1C]
		mov	eax, [esp+0DCh+arg_C]
		mov	[esp+0DCh+var_C8], ebx
		lea	ebx, [esp+0DCh+var_54]
		mov	[esp+0DCh+Format], 0
		mov	dword ptr [esp+0DCh+var_CC], ecx
		mov	[esp+0DCh+var_D8], eax
		mov	[esp+0DCh+var_D4], offset off_67E20898
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDAF50
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 40Fh
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__14 ; "_dbus_type_reader_get_current_type	(&re"...
		cmp	eax, 79h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDAFC0
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 410h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__15 ; "_dbus_type_reader_get_value_pos (&reade"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_D8], esi
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDC900
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB6A0
		movzx	eax, [esp+0DCh+var_1D]
		cmp	eax, [esp+0DCh+arg_C]
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 414h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset aV_byteByte_ord ; "v_byte == byte_order"
		call	sub_67DFAE70
		movzx	eax, word ptr [edi+3Ch]
		movzx	edx, byte ptr [esp+0DCh+arg_C]
		and	ax, 0F807h
		shl	edx, 3
		or	eax, edx
		mov	[edi+3Ch], ax
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 418h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__14 ; "_dbus_type_reader_get_current_type	(&re"...
		cmp	eax, 79h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDAFC0
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 419h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__16 ; "_dbus_type_reader_get_value_pos (&reade"...
		cmp	eax, 1
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_D8], esi
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDC900
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB6A0
		cmp	[esp+0DCh+var_1D], 0
		jnz	short loc_67DD9970
		mov	edx, [esp+0DCh+arg_8]
		mov	dword ptr [edx], 0Fh
		jmp	loc_67DD9772
; ---------------------------------------------------------------------------
		align 10h

loc_67DD9970:				; CODE XREF: sub_67DD94B0+4A8j
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 427h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__14 ; "_dbus_type_reader_get_current_type	(&re"...
		cmp	eax, 79h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDAFC0
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 428h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__17 ; "_dbus_type_reader_get_value_pos (&reade"...
		cmp	eax, 2
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_D8], esi
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDC900
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB6A0
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 42Fh
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__14 ; "_dbus_type_reader_get_current_type	(&re"...
		cmp	eax, 79h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDAFC0
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 430h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__18 ; "_dbus_type_reader_get_value_pos (&reade"...
		cmp	eax, 3
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_D8], esi
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDC900
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB6A0
		cmp	[esp+0DCh+var_1D], 1
		jz	short loc_67DD9A98
		mov	ecx, [esp+0DCh+arg_8]
		mov	dword ptr [ecx], 0Eh
		jmp	loc_67DD9772
; ---------------------------------------------------------------------------

loc_67DD9A98:				; CODE XREF: sub_67DD94B0+5D4j
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 43Bh
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__19 ; "_dbus_type_reader_get_current_type	(&re"...
		cmp	eax, 75h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDAFC0
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 43Ch
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__20 ; "_dbus_type_reader_get_value_pos (&reade"...
		cmp	eax, 4
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		lea	eax, [esp+0DCh+var_28]
		mov	[esp+0DCh+var_D8], eax
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDC900
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB6A0
		mov	eax, [esp+0DCh+arg_18]
		cmp	[esp+0DCh+var_28], eax
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 440h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset aBody_lenSigned ; "body_len == (signed) v_uint32"
		call	sub_67DFAE70
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 443h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__19 ; "_dbus_type_reader_get_current_type	(&re"...
		cmp	eax, 75h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDAFC0
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 444h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__21 ; "_dbus_type_reader_get_value_pos (&reade"...
		cmp	eax, 8
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		lea	eax, [esp+0DCh+var_2C]
		mov	[esp+0DCh+var_D8], eax
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDC900
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB6A0
		mov	edx, [esp+0DCh+var_2C]
		test	edx, edx
		jnz	short loc_67DD9C0B
		mov	edx, [esp+0DCh+arg_8]
		mov	dword ptr [edx], 10h
		jmp	loc_67DD9772
; ---------------------------------------------------------------------------

loc_67DD9C0B:				; CODE XREF: sub_67DD94B0+747j
		mov	[esp+0DCh+var_DC], ebx
		lea	esi, [esp+0DCh+var_70]
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 44Eh
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__22 ; "_dbus_type_reader_get_current_type	(&re"...
		cmp	eax, 61h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDAFC0
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 44Fh
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__23 ; "_dbus_type_reader_get_value_pos (&reade"...
		cmp	eax, 0Ch
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_DC], ebx
		lea	ebx, [esp+0DCh+var_8C]
		mov	[esp+0DCh+var_D8], esi
		call	sub_67DDC730
		mov	[esp+0DCh+var_B0], edi
		jmp	short loc_67DD9CCA
; ---------------------------------------------------------------------------

loc_67DD9C97:				; CODE XREF: sub_67DD94B0+8D5j
		movzx	eax, al
		mov	dword ptr [esp+0DCh+var_CC], eax ; char
		mov	[esp+0DCh+Format], offset aUnknownHeaderF ; "unknown header field code %d, skipping\"...
		mov	[esp+0DCh+var_D4], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+var_D8], 46Ah	; int
		mov	[esp+0DCh+var_DC], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DD9CC2:				; CODE XREF: sub_67DD94B0+CE2j
					; sub_67DD94B0+D6Ej ...
		mov	[esp+0DCh+var_DC], esi ; jumptable 67DDA192 cases 7,8
		call	sub_67DDB6A0

loc_67DD9CCA:				; CODE XREF: sub_67DD94B0+7E5j
		mov	[esp+0DCh+var_DC], esi
		call	sub_67DDB560
		test	eax, eax
		jz	loc_67DD9F91
		mov	[esp+0DCh+var_DC], esi
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 458h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__24 ; "_dbus_type_reader_get_current_type	(&ar"...
		cmp	eax, 72h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	[esp+0DCh+var_D8], ebx
		mov	[esp+0DCh+var_DC], esi
		call	sub_67DDC730
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 45Ch
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__25 ; "_dbus_type_reader_get_current_type	(&st"...
		cmp	eax, 79h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		lea	ecx, [esp+0DCh+var_1E]
		mov	[esp+0DCh+var_D8], ecx
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDC900
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB6A0
		movzx	eax, [esp+0DCh+var_1E]
		test	al, al
		jz	loc_67DD9F57
		cmp	al, 9
		ja	loc_67DD9C97
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+Format], 46Eh
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_type__26 ; "_dbus_type_reader_get_current_type	(&st"...
		cmp	eax, 76h
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		lea	edx, [esp+0DCh+var_A8]
		mov	[esp+0DCh+var_D8], edx
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDC730
		movzx	ecx, [esp+0DCh+var_1E]
		xor	eax, eax
		mov	dword ptr [esp+0DCh+var_CC], offset aLoad_and_valid ; "load_and_validate_field"
		mov	[esp+0DCh+Format], 30Eh
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		movzx	ebp, cl
		cmp	ebp, 9
		setle	al
		mov	[esp+0DCh+var_B1], cl
		mov	[esp+0DCh+var_DC], eax
		mov	[esp+0DCh+var_D8], offset aFieldDbus_he_0 ; "field <= DBUS_HEADER_FIELD_LAST"
		call	sub_67DFAE70
		xor	eax, eax
		test	ebp, ebp
		setnz	al
		mov	[esp+0DCh+var_DC], eax
		mov	dword ptr [esp+0DCh+var_CC], offset aLoad_and_valid ; "load_and_validate_field"
		mov	[esp+0DCh+Format], 30Fh
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset aFieldDbus_head ; "field != DBUS_HEADER_FIELD_INVALID"
		call	sub_67DFAE70
		lea	eax, [esp+0DCh+var_A8]
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DDB560
		mov	dword ptr [esp+0DCh+var_CC], offset aLoad_and_valid ; "load_and_validate_field"
		mov	[esp+0DCh+Format], 314h
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset a_dbus_header_f ; "_dbus_header_field_types[field].code =="...
		mov	edi, eax
		movzx	eax, ss:byte_67E20986[ebp+ebp]
		cmp	ebp, eax
		setz	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		movzx	eax, ss:byte_67E20987[ebp+ebp]
		cmp	edi, eax
		jz	short loc_67DD9F10
		mov	edx, edi
		mov	edi, [esp+0DCh+var_B0]
		mov	dword ptr [esp+0DCh+var_CC], ebp ; char
		mov	ebp, 15h
		mov	[esp+0DCh+var_C4], edx
		mov	[esp+0DCh+var_C8], eax
		mov	[esp+0DCh+Format], offset aFieldDShouldHa ; "Field %d should have type %d but has %d"...
		mov	[esp+0DCh+var_D4], offset aLoad_and_valid ; "load_and_validate_field"
		mov	[esp+0DCh+var_D8], 31Ah	; int
		mov	[esp+0DCh+var_DC], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DD9ECF:				; CODE XREF: sub_67DD94B0+AA2j
					; sub_67DD94B0+D80j ...
		movzx	eax, [esp+0DCh+var_1E]
		mov	[esp+0DCh+Format], offset aFieldDWasInval ; "Field %d was invalid\n"
		mov	[esp+0DCh+var_D4], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+var_D8], 474h	; int
		mov	dword ptr [esp+0DCh+var_CC], eax ; char
		mov	[esp+0DCh+var_DC], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+0DCh+arg_8]
		mov	[eax], ebp
		jmp	loc_67DD9772
; ---------------------------------------------------------------------------
		align 10h

loc_67DD9F10:				; CODE XREF: sub_67DD94B0+9E2j
		mov	ecx, [esp+0DCh+var_B0]
		lea	edx, [ebp+4]
		mov	eax, [ecx+edx*4+4]
		test	eax, eax
		js	loc_67DDA03D
		mov	dword ptr [esp+0DCh+var_CC], ebp ; char
		mov	edi, ecx
		mov	ebp, 18h
		mov	[esp+0DCh+Format], offset aHeaderFieldDSe ; "Header field %d seen a second time\n"
		mov	[esp+0DCh+var_D4], offset aLoad_and_valid ; "load_and_validate_field"
		mov	[esp+0DCh+var_D8], 321h	; int
		mov	[esp+0DCh+var_DC], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD9ECF
; ---------------------------------------------------------------------------

loc_67DD9F57:				; CODE XREF: sub_67DD94B0+8CDj
		mov	edi, [esp+0DCh+var_B0]
		mov	[esp+0DCh+Format], offset aInvalidHeaderF ; "invalid header field code\n"
		mov	[esp+0DCh+var_D4], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+var_D8], 462h	; int
		mov	[esp+0DCh+var_DC], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+0DCh+arg_8]
		mov	dword ptr [eax], 14h
		jmp	loc_67DD9772
; ---------------------------------------------------------------------------

loc_67DD9F91:				; CODE XREF: sub_67DD94B0+824j
		mov	edi, [esp+0DCh+var_B0]
		cmp	dword ptr [edi+14h], 0FFFFFFFFh
		jz	loc_67DDA3E5

loc_67DD9F9F:				; CODE XREF: sub_67DD94B0+F40j
		cmp	dword ptr [edi+18h], 0FFFFFFFFh
		jz	loc_67DDA3D5

loc_67DD9FA9:				; CODE XREF: sub_67DD94B0+F30j
		cmp	dword ptr [edi+1Ch], 0FFFFFFFFh
		jz	loc_67DDA3C5

loc_67DD9FB3:				; CODE XREF: sub_67DD94B0+F20j
		cmp	dword ptr [edi+20h], 0FFFFFFFFh
		jz	loc_67DDA3B5

loc_67DD9FBD:				; CODE XREF: sub_67DD94B0+F10j
		cmp	dword ptr [edi+24h], 0FFFFFFFFh
		jz	loc_67DDA3A5

loc_67DD9FC7:				; CODE XREF: sub_67DD94B0+F00j
		cmp	dword ptr [edi+28h], 0FFFFFFFFh
		nop
		lea	esi, [esi+0]
		jz	loc_67DDA395

loc_67DD9FD6:				; CODE XREF: sub_67DD94B0+EF0j
		cmp	dword ptr [edi+2Ch], 0FFFFFFFFh
		jz	loc_67DDA385

loc_67DD9FE0:				; CODE XREF: sub_67DD94B0+EE0j
		cmp	dword ptr [edi+30h], 0FFFFFFFFh
		jz	loc_67DDA378

loc_67DD9FEA:				; CODE XREF: sub_67DD94B0+ED0j
		cmp	dword ptr [edi+34h], 0FFFFFFFFh
		xchg	ax, ax
		jz	loc_67DDA36C

loc_67DD9FF6:				; CODE XREF: sub_67DD94B0+EC3j
		cmp	dword ptr [edi+38h], 0FFFFFFFFh
		jz	loc_67DDA360

loc_67DDA000:				; CODE XREF: sub_67DD94B0+EB7j
		mov	[esp+0DCh+var_DC], edi
		call	sub_67DD7EF0
		cmp	eax, 2
		jz	loc_67DDA34C
		jg	loc_67DDA124
		cmp	eax, 1
		lea	esi, [esi+0]
		jz	loc_67DDA142

loc_67DDA026:				; CODE XREF: sub_67DD94B0+C80j
					; sub_67DD94B0+CA3j ...
		mov	edx, [esp+0DCh+arg_8]
		mov	eax, 1
		mov	dword ptr [edx], 0
		jmp	loc_67DD96AD
; ---------------------------------------------------------------------------

loc_67DDA03D:				; CODE XREF: sub_67DD94B0+A6Dj
		mov	[esp+0DCh+var_BC], edx
		mov	dword ptr [esp+0DCh+var_CC], ebp ; char
		mov	[esp+0DCh+Format], offset aInitiallyCachi ; "initially caching field %d\n"
		mov	[esp+0DCh+var_D4], offset aLoad_and_valid ; "load_and_validate_field"
		mov	[esp+0DCh+var_D8], 326h	; int
		mov	[esp+0DCh+var_DC], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+0DCh+var_A8]
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DDAFC0
		mov	edx, [esp+0DCh+var_BC]
		cmp	edi, 75h
		mov	ecx, [esp+0DCh+var_B0]
		mov	[esp+0DCh+var_30], 0
		mov	[ecx+edx*4+4], eax
		mov	[esp+0DCh+var_38], 0
		mov	[esp+0DCh+var_34], 0FFFFFFFFh
		jz	loc_67DDA3F5
		cmp	edi, 6Fh
		jz	short loc_67DDA0BE
		cmp	edi, 73h
		jz	short loc_67DDA0BE
		cmp	edi, 67h
		jnz	loc_67DDA453

loc_67DDA0BE:				; CODE XREF: sub_67DD94B0+BFEj
					; sub_67DD94B0+C03j
		mov	ecx, [esp+0DCh+var_B0]
		lea	eax, [esp+0DCh+var_34]
		lea	edx, [esp+0DCh+var_30]
		mov	[esp+0DCh+Format], eax
		mov	[esp+0DCh+var_D4], edx
		mov	[esp+0DCh+var_D8], ebp
		mov	[esp+0DCh+var_DC], ecx
		call	sub_67DD9400
		mov	eax, [esp+0DCh+var_34]
		add	eax, 3
		and	eax, 0FFFFFFFCh
		add	eax, 4
		mov	dword ptr [esp+0DCh+var_B8], eax

loc_67DDA0F8:				; CODE XREF: sub_67DD94B0+F6Cj
		movzx	eax, [esp+0DCh+var_B1]
		sub	eax, 1
		cmp	al, 8		; switch 9 cases
		jbe	loc_67DDA18F
		mov	[esp+0DCh+var_D4], 387h	; jumptable 67DDA192 default case
		mov	[esp+0DCh+var_D8], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_DC], offset aUnknownFieldSh ; "unknown field shouldn't be seen here"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDA124:				; CODE XREF: sub_67DD94B0+B61j
		cmp	eax, 3
		jz	loc_67DDA33D
		cmp	eax, 4
		jnz	loc_67DDA026
		cmp	dword ptr [edi+1Ch], 0
		mov	ebx, 1Fh
		nop
		js	short loc_67DDA159

loc_67DDA142:				; CODE XREF: sub_67DD94B0+B70j
		cmp	dword ptr [edi+18h], 0
		mov	ebx, 1Eh
		js	short loc_67DDA159
		cmp	dword ptr [edi+20h], 0
		mov	bl, 20h
		jns	loc_67DDA026

loc_67DDA159:				; CODE XREF: sub_67DD94B0+C90j
					; sub_67DD94B0+C9Bj ...
		mov	dword ptr [esp+0DCh+var_CC], ebx ; char
		mov	[esp+0DCh+Format], offset aMandatoryField ; "Mandatory fields were missing, code %d\"...
		mov	[esp+0DCh+var_D4], offset a_dbus_header_l ; "_dbus_header_load"
		mov	[esp+0DCh+var_D8], 489h	; int
		mov	[esp+0DCh+var_DC], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, [esp+0DCh+arg_8]
		mov	[edx], ebx
		jmp	loc_67DD9772
; ---------------------------------------------------------------------------

loc_67DDA18F:				; CODE XREF: sub_67DD94B0+C52j
		movzx	eax, al
		jmp	ds:off_67E206DC[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67DDA199:				; CODE XREF: sub_67DD94B0+CE2j
					; DATA XREF: .rdata:off_67E206DCo
		mov	ebp, 1Dh	; jumptable 67DDA192 case 6
		mov	edi, offset sub_67DDE3A0

loc_67DDA1A3:				; CODE XREF: sub_67DD94B0+D8Fj
					; sub_67DD94B0+DBAj ...
		mov	dword ptr [esp+0DCh+var_CC], offset aLoad_and_valid ; "load_and_validate_field"
		mov	[esp+0DCh+Format], 38Fh
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset aBad_string_cod ; "bad_string_code !=	DBUS_VALID"
		mov	[esp+0DCh+var_DC], 1
		call	sub_67DFAE70
		mov	edx, [esp+0DCh+var_B0]
		mov	[esp+0DCh+Format], 0
		movzx	eax, word ptr [edx+3Ch]
		shr	ax, 3
		movzx	eax, al
		mov	[esp+0DCh+var_D4], eax
		mov	eax, [esp+0DCh+var_34]
		mov	[esp+0DCh+var_D8], eax
		mov	eax, [esp+0DCh+var_30]
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFD0F0
		mov	ecx, dword ptr [esp+0DCh+var_B8]
		mov	[esp+0DCh+var_D8], ecx
		mov	[esp+0DCh+var_D4], eax
		mov	eax, [esp+0DCh+var_30]
		mov	[esp+0DCh+var_DC], eax
		call	edi ; sub_67DDE3A0
		test	eax, eax
		jnz	loc_67DD9CC2	; jumptable 67DDA192 cases 7,8
		test	ebp, ebp
		jz	loc_67DD9CC2	; jumptable 67DDA192 cases 7,8
		mov	edi, [esp+0DCh+var_B0]
		jmp	loc_67DD9ECF
; ---------------------------------------------------------------------------

loc_67DDA235:				; CODE XREF: sub_67DD94B0+CE2j
					; DATA XREF: .rdata:off_67E206DCo
		mov	ebp, 19h	; jumptable 67DDA192 case 5
		mov	edi, offset sub_67DDE3A0
		jmp	loc_67DDA1A3
; ---------------------------------------------------------------------------

loc_67DDA244:				; CODE XREF: sub_67DD94B0+CE2j
					; DATA XREF: .rdata:off_67E206DCo
		cmp	[esp+0DCh+var_38], 0 ; jumptable 67DDA192 case 4
		jnz	loc_67DD9CC2	; jumptable 67DDA192 cases 7,8
		mov	edi, [esp+0DCh+var_B0]
		mov	ebp, 10h
		jmp	loc_67DD9ECF
; ---------------------------------------------------------------------------

loc_67DDA260:				; CODE XREF: sub_67DD94B0+CE2j
					; DATA XREF: .rdata:off_67E206DCo
		mov	ebp, 1Ch	; jumptable 67DDA192 case 3
		mov	edi, offset sub_67DDE890
		jmp	loc_67DDA1A3
; ---------------------------------------------------------------------------

loc_67DDA26F:				; CODE XREF: sub_67DD94B0+CE2j
					; DATA XREF: .rdata:off_67E206DCo
		mov	ebp, 1Bh	; jumptable 67DDA192 case 2
		mov	edi, offset loc_67DDE5A0
		jmp	loc_67DDA1A3
; ---------------------------------------------------------------------------

loc_67DDA27E:				; CODE XREF: sub_67DD94B0+CE2j
					; DATA XREF: .rdata:off_67E206DCo
		mov	edi, [esp+0DCh+var_30] ; jumptable 67DDA192 case 1
		mov	[esp+0DCh+var_DC], offset off_67E209F8
		call	sub_67E00CE0
		mov	edx, dword ptr [esp+0DCh+var_B8]
		mov	[esp+0DCh+var_D8], 0
		mov	[esp+0DCh+Format], edi
		mov	[esp+0DCh+var_DC], offset off_67E209F8
		mov	dword ptr [esp+0DCh+var_CC], edx ; char
		mov	[esp+0DCh+var_D4], eax
		call	sub_67DFF1D0
		test	eax, eax
		jnz	loc_67DDA421
		mov	ebp, 1Ah
		mov	edi, offset sub_67DDE6E0
		jmp	loc_67DDA1A3
; ---------------------------------------------------------------------------

loc_67DDA2CC:				; CODE XREF: sub_67DD94B0+CE2j
					; DATA XREF: .rdata:off_67E206DCo
		mov	edi, [esp+0DCh+var_30] ; jumptable 67DDA192 case 0
		mov	[esp+0DCh+var_DC], offset off_67E20A0C
		call	sub_67E00CE0
		mov	ecx, dword ptr [esp+0DCh+var_B8]
		mov	[esp+0DCh+var_D8], 0
		mov	[esp+0DCh+Format], edi
		mov	[esp+0DCh+var_DC], offset off_67E20A0C
		mov	dword ptr [esp+0DCh+var_CC], ecx ; char
		mov	[esp+0DCh+var_D4], eax
		call	sub_67DFF1D0
		test	eax, eax
		jz	loc_67DD9CC2	; jumptable 67DDA192 cases 7,8
		mov	edi, [esp+0DCh+var_B0]
		mov	ebp, 17h
		mov	[esp+0DCh+Format], offset aMessageIsFromT ; "Message is	from the local path\n"
		mov	[esp+0DCh+var_D4], offset aLoad_and_valid ; "load_and_validate_field"
		mov	[esp+0DCh+var_D8], 370h	; int
		mov	[esp+0DCh+var_DC], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD9ECF
; ---------------------------------------------------------------------------

loc_67DDA33D:				; CODE XREF: sub_67DD94B0+C77j
		cmp	dword ptr [edi+24h], 0
		mov	ebx, 21h
		js	loc_67DDA159

loc_67DDA34C:				; CODE XREF: sub_67DD94B0+B5Bj
		cmp	dword ptr [edi+28h], 0
		jns	loc_67DDA026
		mov	ebx, 22h
		jmp	loc_67DDA159
; ---------------------------------------------------------------------------

loc_67DDA360:				; CODE XREF: sub_67DD94B0+B4Aj
		mov	dword ptr [edi+38h], 0FFFFFFFEh
		jmp	loc_67DDA000
; ---------------------------------------------------------------------------

loc_67DDA36C:				; CODE XREF: sub_67DD94B0+B40j
		mov	dword ptr [edi+34h], 0FFFFFFFEh
		jmp	loc_67DD9FF6
; ---------------------------------------------------------------------------

loc_67DDA378:				; CODE XREF: sub_67DD94B0+B34j
		mov	dword ptr [edi+30h], 0FFFFFFFEh
		nop
		jmp	loc_67DD9FEA
; ---------------------------------------------------------------------------

loc_67DDA385:				; CODE XREF: sub_67DD94B0+B2Aj
		mov	dword ptr [edi+2Ch], 0FFFFFFFEh
		lea	esi, [esi+0]
		jmp	loc_67DD9FE0
; ---------------------------------------------------------------------------

loc_67DDA395:				; CODE XREF: sub_67DD94B0+B20j
		mov	dword ptr [edi+28h], 0FFFFFFFEh
		lea	esi, [esi+0]
		jmp	loc_67DD9FD6
; ---------------------------------------------------------------------------

loc_67DDA3A5:				; CODE XREF: sub_67DD94B0+B11j
		mov	dword ptr [edi+24h], 0FFFFFFFEh
		lea	esi, [esi+0]
		jmp	loc_67DD9FC7
; ---------------------------------------------------------------------------

loc_67DDA3B5:				; CODE XREF: sub_67DD94B0+B07j
		mov	dword ptr [edi+20h], 0FFFFFFFEh
		lea	esi, [esi+0]
		jmp	loc_67DD9FBD
; ---------------------------------------------------------------------------

loc_67DDA3C5:				; CODE XREF: sub_67DD94B0+AFDj
		mov	dword ptr [edi+1Ch], 0FFFFFFFEh
		lea	esi, [esi+0]
		jmp	loc_67DD9FB3
; ---------------------------------------------------------------------------

loc_67DDA3D5:				; CODE XREF: sub_67DD94B0+AF3j
		mov	dword ptr [edi+18h], 0FFFFFFFEh
		lea	esi, [esi+0]
		jmp	loc_67DD9FA9
; ---------------------------------------------------------------------------

loc_67DDA3E5:				; CODE XREF: sub_67DD94B0+AE9j
		mov	dword ptr [edi+14h], 0FFFFFFFEh
		lea	esi, [esi+0]
		jmp	loc_67DD9F9F
; ---------------------------------------------------------------------------

loc_67DDA3F5:				; CODE XREF: sub_67DD94B0+BF5j
		lea	eax, [esp+0DCh+var_38]
		mov	[esp+0DCh+Format], eax
		mov	[esp+0DCh+var_D4], 75h
		mov	[esp+0DCh+var_D8], ebp
		mov	[esp+0DCh+var_DC], ecx
		call	sub_67DD9250
		mov	dword ptr [esp+0DCh+var_B8], 0FFFFFFFFh
		jmp	loc_67DDA0F8
; ---------------------------------------------------------------------------

loc_67DDA421:				; CODE XREF: sub_67DD94B0+E07j
		mov	edi, [esp+0DCh+var_B0]
		mov	ebp, 16h
		mov	[esp+0DCh+Format], offset aMessageIsOnThe ; "Message is	on the local interface\n"
		mov	[esp+0DCh+var_D4], offset aLoad_and_valid ; "load_and_validate_field"
		mov	[esp+0DCh+var_D8], 353h	; int
		mov	[esp+0DCh+var_DC], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DD9ECF
; ---------------------------------------------------------------------------

loc_67DDA453:				; CODE XREF: sub_67DD94B0+C08j
		mov	[esp+0DCh+var_D4], 341h
		mov	[esp+0DCh+var_D8], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_DC], offset aNoneOfTheKnown ; "none of the known fields should have th"...
		call	sub_67DFAE30
sub_67DD94B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDA470	proc near		; CODE XREF: dbus_message_set_reply_serial+C4p
					; dbus_message_set_interface+D5p ...

var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_E0		= dword	ptr -0E0h
var_D0		= byte ptr -0D0h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B0		= byte ptr -0B0h
var_90		= byte ptr -90h
var_74		= byte ptr -74h
var_58		= byte ptr -58h
var_3C		= byte ptr -3Ch
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0FCh
		mov	esi, [esp+10Ch+arg_4]
		mov	ebx, [esp+10Ch+arg_0]
		mov	[esp+10Ch+var_FC], offset a_dbus_header_s ; "_dbus_header_set_field_basic"
		mov	[esp+10Ch+var_100], 4E2h
		cmp	esi, 9
		setle	al
		movzx	edi, al
		mov	[esp+10Ch+var_104], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_108], offset aFieldDbus_he_0 ; "field <= DBUS_HEADER_FIELD_LAST"
		mov	[esp+10Ch+var_10C], edi
		call	sub_67DFAE70
		mov	[esp+10Ch+var_FC], offset aReserve_header ; "reserve_header_padding"
		mov	[esp+10Ch+var_100], 61h
		mov	[esp+10Ch+var_104], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_108], offset aHeaderPaddingM ; "header->padding <= MAX_POSSIBLE_HEADER_"...
		mov	[esp+10Ch+var_10C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+3Ch]
		mov	[esp+10Ch+var_10C], ebx
		not	eax
		and	eax, 7
		mov	[esp+10Ch+var_108], eax
		call	sub_67E087C0
		test	eax, eax
		jz	loc_67DDA6F3
		or	byte ptr [ebx+3Ch], 7
		mov	[esp+10Ch+var_10C], edi
		lea	edi, [esi+4]
		mov	[esp+10Ch+var_FC], offset a_dbus_header_c ; "_dbus_header_cache_check"
		mov	[esp+10Ch+var_100], 0E9h
		mov	[esp+10Ch+var_104], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_108], offset aFieldDbus_he_0 ; "field <= DBUS_HEADER_FIELD_LAST"
		call	sub_67DFAE70
		mov	eax, [ebx+edi*4+4]
		cmp	eax, 0FFFFFFFFh
		jz	loc_67DDA860

loc_67DDA53E:				; CODE XREF: sub_67DDA470+3FBj
		cmp	eax, 0FFFFFFFEh
		jz	loc_67DDA700
		lea	ebp, [esp+10Ch+var_3C]
		mov	edx, esi
		lea	edi, [esp+10Ch+var_58]
		mov	ecx, ebp
		mov	eax, ebx
		mov	[esp+10Ch+var_10C], edi
		call	sub_67DD8090
		test	eax, eax
		jz	loc_67DDA88C
		lea	eax, [esp+10Ch+var_74]
		mov	[esp+10Ch+var_108], eax
		mov	[esp+10Ch+var_10C], ebp
		call	sub_67DDC730
		lea	eax, [esp+10Ch+var_74]
		mov	[esp+10Ch+var_10C], eax
		call	sub_67DDB560
		mov	[esp+10Ch+var_FC], offset aSet_basic_fiel ; "set_basic_field"
		mov	[esp+10Ch+var_100], 156h
		mov	[esp+10Ch+var_104], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_108], offset a_dbus_type_rea ; "_dbus_type_reader_get_current_type (&su"...
		cmp	eax, 79h
		setz	al
		movzx	eax, al
		mov	[esp+10Ch+var_10C], eax
		call	sub_67DFAE70
		lea	eax, [esp+10Ch+var_1D]
		mov	[esp+10Ch+var_108], eax
		lea	eax, [esp+10Ch+var_74]
		mov	[esp+10Ch+var_10C], eax
		call	sub_67DDC900
		movzx	eax, [esp+10Ch+var_1D]
		mov	[esp+10Ch+var_FC], offset aSet_basic_fiel ; "set_basic_field"
		mov	[esp+10Ch+var_100], 15Bh
		mov	[esp+10Ch+var_104], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		cmp	esi, eax
		setz	al
		movzx	eax, al
		mov	[esp+10Ch+var_10C], eax
		mov	[esp+10Ch+var_108], offset aIntV_byteField ; "((int) v_BYTE) ==	field"
		call	sub_67DFAE70
		lea	eax, [esp+10Ch+var_74]
		mov	[esp+10Ch+var_10C], eax
		call	sub_67DDB6A0
		test	eax, eax
		jz	loc_67DDA8A8
		lea	esi, [esp+10Ch+var_90]
		lea	eax, [esp+10Ch+var_74]
		mov	[esp+10Ch+var_10C], eax
		mov	[esp+10Ch+var_108], esi
		call	sub_67DDC730
		mov	[esp+10Ch+var_10C], esi
		call	sub_67DDB560
		mov	[esp+10Ch+var_FC], offset aSet_basic_fiel ; "set_basic_field"
		mov	[esp+10Ch+var_100], 163h
		cmp	[esp+10Ch+arg_8], eax
		mov	[esp+10Ch+var_104], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_108], offset a_dbus_type_r_5 ; "_dbus_type_reader_get_current_type (&va"...
		setz	al
		movzx	eax, al
		mov	[esp+10Ch+var_10C], eax
		call	sub_67DFAE70
		mov	eax, [esp+10Ch+arg_C]
		mov	[esp+10Ch+var_104], edi
		mov	[esp+10Ch+var_10C], esi
		mov	[esp+10Ch+var_108], eax
		call	sub_67DDE050
		test	eax, eax
		jz	short loc_67DDA6F3

loc_67DDA696:				; CODE XREF: sub_67DDA470+3CEj
		mov	eax, ebx
		call	sub_67DD81B0
		mov	eax, 1
		mov	dword ptr [ebx+14h], 0FFFFFFFFh
		mov	dword ptr [ebx+18h], 0FFFFFFFFh
		mov	dword ptr [ebx+1Ch], 0FFFFFFFFh
		mov	dword ptr [ebx+20h], 0FFFFFFFFh
		mov	dword ptr [ebx+24h], 0FFFFFFFFh
		mov	dword ptr [ebx+28h], 0FFFFFFFFh
		mov	dword ptr [ebx+2Ch], 0FFFFFFFFh
		mov	dword ptr [ebx+30h], 0FFFFFFFFh
		mov	dword ptr [ebx+34h], 0FFFFFFFFh
		mov	dword ptr [ebx+38h], 0FFFFFFFFh
		add	esp, 0FCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDA6F3:				; CODE XREF: sub_67DDA470+8Cj
					; sub_67DDA470+224j ...
		add	esp, 0FCh
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDA700:				; CODE XREF: sub_67DDA470+D1j
		mov	[esp+10Ch+var_F8], 0Ch
		lea	ebp, [esp+10Ch+var_B0]
		mov	[esp+10Ch+var_FC], ebx
		lea	edi, [esp+10Ch+var_D0]
		mov	[esp+10Ch+var_100], 6
		mov	[esp+10Ch+var_104], offset off_67E20898
		movzx	eax, word ptr [ebx+3Ch]
		mov	[esp+10Ch+var_10C], ebp
		shr	ax, 3
		movzx	eax, al
		mov	[esp+10Ch+var_108], eax
		call	sub_67DDB090
		mov	[esp+10Ch+var_100], edi
		mov	[esp+10Ch+var_104], 7
		mov	[esp+10Ch+var_108], offset off_67E20898
		mov	[esp+10Ch+var_10C], ebp
		call	sub_67DDCB20
		test	eax, eax
		jz	loc_67DDA870
		xor	eax, eax
		cmp	[esp+10Ch+var_B8], 0Ch
		mov	[esp+10Ch+var_FC], offset a_dbus_header_s ; "_dbus_header_set_field_basic"
		mov	[esp+10Ch+var_100], 509h
		setz	al
		mov	[esp+10Ch+var_10C], eax
		mov	[esp+10Ch+var_104], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_108], offset aArray_u_array_ ; "array.u.array.len_pos == FIELDS_ARRAY_L"...
		call	sub_67DFAE70
		xor	eax, eax
		cmp	[esp+10Ch+var_BC], 10h
		mov	[esp+10Ch+var_FC], offset a_dbus_header_s ; "_dbus_header_set_field_basic"
		mov	[esp+10Ch+var_100], 50Ah
		setz	al
		mov	[esp+10Ch+var_10C], eax
		mov	[esp+10Ch+var_104], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_108], offset aArray_u_arra_0 ; "array.u.array.start_pos == FIRST_FIELD_"...
		call	sub_67DFAE70
		mov	eax, [esp+10Ch+var_C0]
		mov	[esp+10Ch+var_10C], ebx
		mov	[esp+10Ch+var_E0], eax
		call	sub_67E00CE0
		mov	[esp+10Ch+var_FC], offset a_dbus_header_s ; "_dbus_header_set_field_basic"
		mov	[esp+10Ch+var_100], 50Bh
		mov	[esp+10Ch+var_104], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_108], offset aArray_value_po ; "array.value_pos == HEADER_END_BEFORE_PA"...
		movzx	edx, byte ptr [ebx+3Ch]
		and	edx, 7
		sub	eax, edx
		cmp	[esp+10Ch+var_E0], eax
		setz	al
		movzx	eax, al
		mov	[esp+10Ch+var_10C], eax
		call	sub_67DFAE70
		mov	eax, [esp+10Ch+arg_C]
		mov	edx, esi
		mov	ecx, [esp+10Ch+arg_8]
		mov	[esp+10Ch+var_10C], eax
		mov	eax, edi
		call	sub_67DD85F0
		test	eax, eax
		jz	loc_67DDA6F3
		mov	[esp+10Ch+var_108], edi
		mov	[esp+10Ch+var_10C], ebp
		call	sub_67DDC490
		test	eax, eax
		jnz	loc_67DDA696
		mov	[esp+10Ch+var_104], 512h
		mov	[esp+10Ch+var_108], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_10C], offset aUnrecurseFromA ; "unrecurse	from ARRAY should not have us"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDA860:				; CODE XREF: sub_67DDA470+C8j
		mov	eax, ebx
		call	sub_67DD8260
		mov	eax, [ebx+edi*4+4]
		jmp	loc_67DDA53E
; ---------------------------------------------------------------------------

loc_67DDA870:				; CODE XREF: sub_67DDA470+2E9j
		mov	[esp+10Ch+var_104], 507h
		mov	[esp+10Ch+var_108], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_10C], offset aRecurseIntoArr ; "recurse into ARRAY should	not have used"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDA88C:				; CODE XREF: sub_67DDA470+F5j
		mov	[esp+10Ch+var_104], 4EFh
		mov	[esp+10Ch+var_108], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_10C], offset aFieldWasMarked ; "field was	marked present in cache	but w"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDA8A8:				; CODE XREF: sub_67DDA470+1B1j
		mov	[esp+10Ch+var_104], 160h
		mov	[esp+10Ch+var_108], offset aRBuildWin32l_4 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10Ch+var_10C], offset aNoVariantField ; "no variant field?"
		call	sub_67DFAE30
sub_67DDA470	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDA8D0	proc near		; CODE XREF: sub_67DDA8D0+125p
					; sub_67DDA8D0+1E1p ...

var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_84		= byte ptr -84h
var_68		= byte ptr -68h
var_4C		= byte ptr -4Ch
var_30		= byte ptr -30h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 0CCh
		mov	[esp+0DCh+var_B0], ecx

loc_67DDA8E2:				; CODE XREF: sub_67DDA8D0+68j
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB560
		test	eax, eax
		mov	edi, eax
		jz	loc_67DDAC96
		lea	eax, [edi-61h]
		cmp	eax, 18h	; switch 25 cases
		jbe	short loc_67DDA918

loc_67DDA8FC:				; CODE XREF: sub_67DDA8D0:loc_67DDA918j
					; DATA XREF: .rdata:off_67E20C40o
		mov	[esp+0DCh+var_D4], 0C9h	; jumptable 67DDA918 default case
		mov	[esp+0DCh+var_D8], offset aRBuildWin32l_7 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_DC], offset aInvalidTypecod ; "invalid typecode in supposedly-validate"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDA918:				; CODE XREF: sub_67DDA8D0+2Aj
		jmp	ds:off_67E20C40[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_67DDA920:				; CODE XREF: sub_67DDA8D0:loc_67DDA918j
					; DATA XREF: .rdata:off_67E20C40o
		add	[esp+0DCh+arg_4], 1 ; jumptable	67DDA918 case 24

loc_67DDA928:				; CODE XREF: sub_67DDA8D0+12Aj
					; sub_67DDA8D0+14Bj ...
		test	esi, esi
		jz	loc_67DDAC96
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB6A0
		jmp	short loc_67DDA8E2
; ---------------------------------------------------------------------------
		align 10h

loc_67DDA940:				; CODE XREF: sub_67DDA8D0:loc_67DDA918j
					; DATA XREF: .rdata:off_67E20C40o
		mov	eax, [esp+0DCh+arg_4] ;	jumptable 67DDA918 case	21
		movzx	edi, byte ptr [eax]
		add	eax, 1
		mov	[esp+0DCh+arg_4], eax
		mov	[esp+0DCh+var_D8], eax
		lea	eax, [esp+0DCh+var_30]
		mov	[esp+0DCh+var_DC], eax
		mov	[esp+0DCh+var_D4], edi
		add	edi, 1
		call	sub_67E01AC0
		lea	edx, [esp+0DCh+var_30]
		mov	[esp+0DCh+var_DC], edx
		add	[esp+0DCh+arg_4], edi
		lea	edi, [esp+0DCh+var_30]
		mov	[esp+0DCh+var_D8], 0
		call	sub_67DFD040
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFC5E0
		mov	ecx, [esp+0DCh+arg_4]
		mov	[esp+0DCh+var_D8], edi
		mov	[esp+0DCh+var_D4], 0
		mov	edx, eax
		neg	edx
		lea	eax, [ecx+eax-1]
		and	edx, eax
		lea	eax, [esp+0DCh+var_68]
		mov	[esp+0DCh+arg_4], edx
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DDAF90
		mov	eax, [esp+0DCh+arg_4]
		lea	edx, [esp+0DCh+arg_4]
		mov	edi, [esp+0DCh+arg_0]
		mov	ecx, [esp+0DCh+var_B0]
		mov	[esp+0DCh+var_D4], edx
		xor	edx, edx
		mov	[esp+0DCh+var_D8], eax
		lea	eax, [esp+0DCh+var_68]
		mov	[esp+0DCh+var_DC], edi
		call	sub_67DDA8D0
		jmp	loc_67DDA928
; ---------------------------------------------------------------------------
		align 10h

loc_67DDAA00:				; CODE XREF: sub_67DDA8D0:loc_67DDA918j
					; DATA XREF: .rdata:off_67E20C40o
		mov	eax, [esp+0DCh+arg_4] ;	jumptable 67DDA918 cases 13,16
		add	eax, 1
		and	eax, 0FFFFFFFEh
		ror	word ptr [eax],	8
		add	eax, 2
		mov	[esp+0DCh+arg_4], eax
		jmp	loc_67DDA928
; ---------------------------------------------------------------------------

loc_67DDAA20:				; CODE XREF: sub_67DDA8D0:loc_67DDA918j
					; DATA XREF: .rdata:off_67E20C40o
		mov	[esp+0DCh+var_D4], 0C5h	; jumptable 67DDA918 case 7
		mov	[esp+0DCh+var_D8], offset aRBuildWin32l_7 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_DC], offset aAttemptedToByt ; "attempted to byteswap unix	fds which ma"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h

loc_67DDAA40:				; CODE XREF: sub_67DDA8D0:loc_67DDA918j
					; DATA XREF: .rdata:off_67E20C40o
		mov	eax, [esp+0DCh+arg_4] ;	jumptable 67DDA918 case	6
		movzx	edx, byte ptr [eax]
		lea	eax, [eax+edx+2]
		mov	[esp+0DCh+arg_4], eax
		jmp	loc_67DDA928
; ---------------------------------------------------------------------------
		align 10h

loc_67DDAA60:				; CODE XREF: sub_67DDA8D0:loc_67DDA918j
					; DATA XREF: .rdata:off_67E20C40o
		mov	eax, [esp+0DCh+arg_4] ;	jumptable 67DDA918 cases 4,17
		mov	[esp+0DCh+var_DC], ebx
		add	eax, 7
		and	eax, 0FFFFFFF8h
		mov	[esp+0DCh+arg_4], eax
		lea	eax, [esp+0DCh+var_84]
		mov	[esp+0DCh+var_D8], eax
		call	sub_67DDC730
		mov	eax, [esp+0DCh+arg_4]
		lea	edx, [esp+0DCh+arg_4]
		mov	edi, [esp+0DCh+arg_0]
		mov	ecx, [esp+0DCh+var_B0]
		mov	[esp+0DCh+var_D4], edx
		mov	edx, 1
		mov	[esp+0DCh+var_D8], eax
		lea	eax, [esp+0DCh+var_84]
		mov	[esp+0DCh+var_DC], edi
		call	sub_67DDA8D0
		jmp	loc_67DDA928
; ---------------------------------------------------------------------------
		align 10h

loc_67DDAAC0:				; CODE XREF: sub_67DDA8D0:loc_67DDA918j
					; DATA XREF: .rdata:off_67E20C40o
		mov	ecx, [esp+0DCh+arg_4] ;	jumptable 67DDA918 cases 3,19,23
		mov	[esp+0DCh+var_A8], 0
		mov	ebp, [esp+0DCh+var_A8]
		mov	[esp+0DCh+var_A0], 0
		mov	[esp+0DCh+var_9C], 0
		add	ecx, 7
		and	ecx, 0FFFFFFF8h
		mov	edi, [ecx]
		mov	eax, [ecx]
		mov	edx, [ecx+4]
		mov	[esp+0DCh+var_94], 0
		and	edi, 0FF00h
		shl	edi, 8
		shl	eax, 18h
		or	eax, edi
		mov	edi, [ecx]
		shr	edx, 18h
		and	edi, 0FF0000h
		mov	[esp+0DCh+var_AC], edi
		mov	edi, [esp+0DCh+var_AC]
		shld	ebp, edi, 18h
		shl	edi, 18h
		or	eax, ebp
		mov	ebp, [esp+0DCh+var_A0]
		or	edx, edi
		mov	edi, [ecx]
		and	edi, 0FF000000h
		mov	[esp+0DCh+var_A4], edi
		mov	edi, [esp+0DCh+var_A4]
		shld	ebp, edi, 8
		shl	edi, 8
		or	eax, ebp
		or	edx, edi
		movzx	edi, byte ptr [ecx+4]
		mov	[esp+0DCh+var_98], edi
		mov	edi, [esp+0DCh+var_9C]
		mov	ebp, [esp+0DCh+var_98]
		shrd	edi, ebp, 8
		or	edx, edi
		mov	edi, [ecx+4]
		shr	ebp, 8
		or	eax, ebp
		and	edi, 0FF00h
		mov	[esp+0DCh+var_90], edi
		mov	edi, [esp+0DCh+var_94]
		mov	ebp, [esp+0DCh+var_90]
		shrd	edi, ebp, 18h
		or	edx, edi
		mov	edi, [ecx+4]
		shr	ebp, 18h
		or	eax, ebp
		mov	[ecx+4], eax
		and	edi, 0FF0000h
		shr	edi, 8
		or	edx, edi
		mov	[ecx], edx
		add	ecx, 8
		mov	[esp+0DCh+arg_4], ecx
		jmp	loc_67DDA928
; ---------------------------------------------------------------------------

loc_67DDABA0:				; CODE XREF: sub_67DDA8D0:loc_67DDA918j
					; DATA XREF: .rdata:off_67E20C40o
		mov	edx, [esp+0DCh+arg_4] ;	jumptable 67DDA918 cases 1,8,20
		add	edx, 3
		and	edx, 0FFFFFFFCh
		mov	ecx, [edx]
		mov	eax, ecx
		mov	edi, ecx
		shl	edi, 18h
		shr	eax, 18h
		or	eax, edi
		mov	edi, ecx
		and	edi, 0FF00h
		and	ecx, 0FF0000h
		shl	edi, 8
		or	eax, edi
		shr	ecx, 8
		or	eax, ecx
		mov	[edx], eax
		add	edx, 4
		mov	[esp+0DCh+arg_4], edx
		jmp	loc_67DDA928
; ---------------------------------------------------------------------------

loc_67DDABE4:				; CODE XREF: sub_67DDA8D0:loc_67DDA918j
					; DATA XREF: .rdata:off_67E20C40o
		mov	eax, [esp+0DCh+arg_4] ;	jumptable 67DDA918 cases 0,14,18
		add	eax, 3
		and	eax, 0FFFFFFFCh
		mov	[esp+0DCh+arg_4], eax
		mov	[esp+0DCh+var_D8], eax
		mov	eax, [esp+0DCh+var_B0]
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFC500
		mov	ecx, [esp+0DCh+arg_4]
		mov	edx, [ecx]
		mov	[esp+0DCh+var_B8], eax
		mov	ebp, edx
		mov	eax, edx
		shl	ebp, 18h
		shr	eax, 18h
		or	eax, ebp
		mov	ebp, edx
		and	ebp, 0FF00h
		and	edx, 0FF0000h
		shl	ebp, 8
		or	eax, ebp
		shr	edx, 8
		or	eax, edx
		mov	[ecx], eax
		add	ecx, 4
		cmp	edi, 61h
		mov	[esp+0DCh+arg_4], ecx
		jz	short loc_67DDACC0
		cmp	edi, 6Fh
		setz	al
		cmp	edi, 73h
		setz	dl
		or	eax, edx
		and	eax, 1
		mov	[esp+0DCh+var_DC], eax
		mov	[esp+0DCh+var_CC], offset aByteswap_body_ ; "byteswap_body_helper"
		mov	[esp+0DCh+var_D0], 8Ah
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_7 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset aCurrent_typeDb ; "current_type == DBUS_TYPE_STRING || cur"...
		call	sub_67DFAE70
		mov	eax, [esp+0DCh+var_B8]
		add	eax, 1
		add	[esp+0DCh+arg_4], eax
		jmp	loc_67DDA928
; ---------------------------------------------------------------------------

loc_67DDAC96:				; CODE XREF: sub_67DDA8D0+1Ej
					; sub_67DDA8D0+5Aj
		mov	eax, [esp+0DCh+arg_8]
		test	eax, eax
		jz	short loc_67DDACB1
		mov	eax, [esp+0DCh+arg_4]
		mov	edx, [esp+0DCh+arg_8]
		mov	[edx], eax

loc_67DDACB1:				; CODE XREF: sub_67DDA8D0+3CFj
		add	esp, 0CCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDACC0:				; CODE XREF: sub_67DDA8D0+378j
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDB6E0
		mov	ebp, eax
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFC5E0
		xor	edx, edx
		mov	[esp+0DCh+var_CC], offset aByteswap_body_ ; "byteswap_body_helper"
		mov	[esp+0DCh+var_D0], 6Ah
		mov	[esp+0DCh+var_D4], offset aRBuildWin32l_7 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0DCh+var_D8], offset aArray_lenAlign ; "(array_len	/ alignment) < DBUS_MAXIMUM_"...
		mov	edi, eax
		mov	eax, [esp+0DCh+var_B8]
		div	edi
		cmp	eax, 3FFFFFFh
		mov	[esp+0DCh+var_B4], eax
		setbe	al
		movzx	eax, al
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFAE70
		mov	edx, [esp+0DCh+arg_4]
		mov	eax, edi
		neg	eax
		mov	[esp+0DCh+var_DC], ebp
		lea	edx, [edx+edi-1]
		and	eax, edx
		mov	[esp+0DCh+arg_4], eax
		call	dbus_type_is_fixed
		test	eax, eax
		jz	short loc_67DDAD67
		cmp	edi, 1
		jle	short loc_67DDAD57
		mov	edx, [esp+0DCh+var_B4]
		mov	eax, [esp+0DCh+arg_4]
		mov	[esp+0DCh+var_D4], edi
		mov	[esp+0DCh+var_D8], edx
		mov	[esp+0DCh+var_DC], eax
		call	sub_67DFC2B0

loc_67DDAD57:				; CODE XREF: sub_67DDA8D0+46Aj
		mov	edi, [esp+0DCh+var_B8]
		add	[esp+0DCh+arg_4], edi
		jmp	loc_67DDA928
; ---------------------------------------------------------------------------

loc_67DDAD67:				; CODE XREF: sub_67DDA8D0+465j
		lea	eax, [esp+0DCh+var_4C]
		mov	edi, [esp+0DCh+var_B8]
		add	edi, [esp+0DCh+arg_4]
		mov	[esp+0DCh+var_D8], eax
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDC730
		mov	eax, [esp+0DCh+arg_4]
		cmp	eax, edi
		jnb	loc_67DDA928
		mov	[esp+0DCh+var_B8], ebx
		mov	ebp, esi
		mov	ebx, [esp+0DCh+arg_0]
		mov	esi, [esp+0DCh+var_B0]

loc_67DDADA5:				; CODE XREF: sub_67DDA8D0+500j
		lea	edx, [esp+0DCh+arg_4]
		mov	ecx, esi
		mov	[esp+0DCh+var_D4], edx
		xor	edx, edx
		mov	[esp+0DCh+var_D8], eax
		lea	eax, [esp+0DCh+var_4C]
		mov	[esp+0DCh+var_DC], ebx
		call	sub_67DDA8D0
		mov	eax, [esp+0DCh+arg_4]
		cmp	edi, eax
		ja	short loc_67DDADA5
		mov	ebx, [esp+0DCh+var_B8]
		mov	esi, ebp
		jmp	loc_67DDA928
sub_67DDA8D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDADE0	proc near		; CODE XREF: sub_67DD7F50+96p
					; sub_67DE2390+DBp

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_38		= byte ptr -38h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		sub	esp, 5Ch
		mov	[esp+5Ch+var_C], esi
		mov	esi, [esp+5Ch+arg_14]
		mov	[esp+5Ch+var_8], edi
		mov	edi, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_4], ebp
		mov	ebp, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_10], ebx
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_marshal_ ; "_dbus_marshal_byteswap"
		mov	[esp+5Ch+var_50], 0EBh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_7 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aValue_pos0 ; "value_pos >= 0"
		call	sub_67DFAE70
		mov	eax, [esp+5Ch+arg_10]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		mov	[esp+5Ch+var_4C], offset a_dbus_marshal_ ; "_dbus_marshal_byteswap"
		mov	[esp+5Ch+var_50], 0ECh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_7 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aValue_pos_dbus ; "value_pos <= _dbus_string_get_length (v"...
		cmp	eax, esi
		setnl	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		cmp	edi, ebp
		jz	short loc_67DDAEBF
		mov	eax, [esp+5Ch+arg_4]
		lea	ebx, [esp+5Ch+var_38]
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_54], eax
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_58], eax
		call	sub_67DDAF90
		mov	eax, [esp+5Ch+arg_10]
		mov	[esp+5Ch+var_54], 0
		mov	[esp+5Ch+var_58], esi
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E014C0
		mov	ecx, edi
		mov	edx, 1
		mov	[esp+5Ch+var_54], 0
		mov	[esp+5Ch+var_5C], ebp
		mov	[esp+5Ch+var_58], eax
		mov	eax, ebx
		call	sub_67DDA8D0

loc_67DDAEBF:				; CODE XREF: sub_67DDADE0+8Cj
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
sub_67DDADE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDAEE0	proc near		; DATA XREF: .rdata:67E21E90o

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	edx, [esp+0Ch+arg_4]
		mov	[esp+0Ch+var_C], ebx
		mov	eax, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_8], esi
		mov	[esp+0Ch+var_4], edi
		mov	ebx, [edx+10h]
		mov	esi, [edx+0Ch]
		mov	ecx, [edx+8]
		mov	edi, [edx+4]
		movzx	edx, byte ptr [edx]
		mov	[eax+0Ch], esi
		add	ecx, 1
		mov	[eax+4], edi
		mov	[eax], dl
		movzx	edx, byte ptr [eax+1]
		mov	[eax+10h], ebx
		mov	[eax+8], ecx
		mov	dword ptr [eax+18h], 7FFFFFFFh
		and	edx, 0FFFFFFFEh
		or	edx, 0Eh
		mov	[eax+1], dl
		mov	ebx, [esp+0Ch+var_C]
		mov	esi, [esp+0Ch+var_8]
		mov	edi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
sub_67DDAEE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDAF40	proc near		; DATA XREF: .rdata:67E21E98o

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		or	byte ptr [eax+1], 1
		retn
sub_67DDAF40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDAF50	proc near		; CODE XREF: sub_67DD8090+41p
					; sub_67DD8260+92p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		and	byte ptr [eax+1], 0FEh
		mov	[eax], dl
		mov	edx, [esp+arg_8]
		mov	dword ptr [eax+14h], offset off_67E21F04
		mov	[eax+4], edx
		mov	edx, [esp+arg_C]
		mov	[eax+8], edx
		mov	edx, [esp+arg_10]
		mov	[eax+0Ch], edx
		mov	edx, [esp+arg_14]
		mov	[eax+10h], edx
		retn
sub_67DDAF50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDAF90	proc near		; CODE XREF: sub_67DDA8D0+F6p
					; sub_67DDADE0+A5p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		and	byte ptr [eax+1], 0FEh
		mov	byte ptr [eax],	6Ch
		mov	edx, [esp+arg_4]
		mov	dword ptr [eax+14h], offset off_67E21F28
		mov	dword ptr [eax+0Ch], 0
		mov	[eax+4], edx
		mov	edx, [esp+arg_8]
		mov	dword ptr [eax+10h], 7FFFFFFFh
		mov	[eax+8], edx
		retn
sub_67DDAF90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDAFC0	proc near		; CODE XREF: sub_67DD8260+187p
					; sub_67DD94B0+37Bp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+10h]
		retn
sub_67DDAFC0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	edx, [esp+8]
		mov	[eax], dl
		mov	edx, [esp+0Ch]
		mov	[eax+4], edx
		mov	edx, [esp+10h]
		mov	[eax+8], edx
		mov	edx, [esp+14h]
		mov	[eax+0Ch], edx
		mov	edx, [esp+18h]
		mov	byte ptr [eax+1], 0
		mov	[eax+10h], edx
		movzx	edx, byte ptr [eax+2]
		and	edx, 0FFFFFFFEh
		or	edx, 2
		mov	[eax+2], dl
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB010	proc near		; CODE XREF: dbus_message_iter_init_append+AAp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	dword ptr [eax+4], 0
		mov	[eax], dl
		mov	edx, [esp+arg_8]
		mov	dword ptr [eax+8], 0
		mov	[eax+0Ch], edx
		mov	edx, [esp+arg_C]
		mov	byte ptr [eax+1], 0
		mov	[eax+10h], edx
		movzx	edx, byte ptr [eax+2]
		and	edx, 0FFFFFFFEh
		or	edx, 2
		mov	[eax+2], dl
		retn
sub_67DDB010	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB050	proc near		; CODE XREF: sub_67DE21F0+117p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		mov	edx, [eax+4]
		test	edx, edx
		jz	short loc_67DDB060
		rep retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDB060:				; CODE XREF: sub_67DDB050+9j
		mov	edx, [esp+arg_4]
		mov	[eax+4], edx
		mov	edx, [esp+arg_8]
		mov	[eax+8], edx
		retn
sub_67DDB050	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB070	proc near		; CODE XREF: sub_67DE20A0+126p
					; dbus_message_iter_abandon_container+2C0p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0FFFFFFFFh
		retn
sub_67DDB070	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB090	proc near		; CODE XREF: sub_67DD8E90+135p
					; sub_67DDA470+2C6p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	[eax], dl
		mov	edx, [esp+arg_8]
		mov	[eax+4], edx
		mov	edx, [esp+arg_C]
		mov	[eax+8], edx
		mov	edx, [esp+arg_10]
		mov	[eax+0Ch], edx
		mov	edx, [esp+arg_14]
		mov	byte ptr [eax+1], 0
		or	byte ptr [eax+2], 3
		mov	[eax+10h], edx
		retn
sub_67DDB090	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+4]
		mov	ecx, [esp+8]
		movzx	eax, byte ptr [edx+2]
		test	ecx, ecx
		setnz	cl
		add	ecx, ecx
		and	eax, 0FFFFFFFDh
		or	eax, ecx
		mov	[edx+2], al
		retn
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	[esp+28h], esi
		mov	esi, [esp+30h]
		mov	[esp+24h], ebx
		mov	ebx, [esp+34h]
		mov	dword ptr [esp+10h], offset a_dbus_type_r_9 ; "_dbus_type_reader_greater_than"
		mov	dword ptr [esp+0Ch], 5A3h
		mov	dword ptr [esp+8], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLhsValue_strRh ; "lhs->value_str == rhs->value_str"
		mov	eax, [esi+0Ch]
		cmp	eax, [ebx+0Ch]
		setz	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [esi+10h]
		cmp	eax, [ebx+10h]
		mov	esi, [esp+28h]
		mov	ebx, [esp+24h]
		setnle	al
		add	esp, 2Ch
		movzx	eax, al
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB140	proc near		; CODE XREF: sub_67DDC980+37p
					; sub_67DDCB20+2Ap ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	edi, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset a_dbus_type_sig ; "_dbus_type_signature_next"
		mov	[esp+3Ch+var_30], 14Eh
		test	edi, edi
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aType_strNull ; "type_str != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_type_sig ; "_dbus_type_signature_next"
		mov	[esp+3Ch+var_30], 14Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aType_posNull ; "type_pos != NULL"
		call	sub_67DFAE70
		mov	ebx, [esi]
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_type_sig ; "_dbus_type_signature_next"
		mov	[esp+3Ch+var_30], 154h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		add	ebx, edi
		mov	[esp+3Ch+var_38], offset aPDbus_struct_e ; "*p != DBUS_STRUCT_END_CHAR"
		cmp	byte ptr [ebx],	29h
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_type_sig ; "_dbus_type_signature_next"
		mov	[esp+3Ch+var_30], 155h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPDbus_dict_ent ; "*p != DBUS_DICT_ENTRY_END_CHAR"
		cmp	byte ptr [ebx],	7Dh
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx]
		cmp	al, 61h
		jnz	short loc_67DDB222

loc_67DDB218:				; CODE XREF: sub_67DDB140+E0j
		add	ebx, 1
		movzx	eax, byte ptr [ebx]
		cmp	al, 61h
		jz	short loc_67DDB218

loc_67DDB222:				; CODE XREF: sub_67DDB140+D6j
		cmp	al, 29h
		setnz	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_type_sig ; "_dbus_type_signature_next"
		mov	[esp+3Ch+var_30], 15Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPDbus_struct_e ; "*p != DBUS_STRUCT_END_CHAR"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_type_sig ; "_dbus_type_signature_next"
		mov	[esp+3Ch+var_30], 15Bh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPDbus_dict_ent ; "*p != DBUS_DICT_ENTRY_END_CHAR"
		cmp	byte ptr [ebx],	7Dh
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx]
		cmp	al, 28h
		jz	short loc_67DDB2A0
		cmp	al, 7Bh
		jz	loc_67DDB325

loc_67DDB291:				; CODE XREF: sub_67DDB140+1D8j
					; sub_67DDB140+263j
		add	ebx, 1
		sub	ebx, edi
		mov	[esi], ebx
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDB2A0:				; CODE XREF: sub_67DDB140+147j
		mov	ebp, 1

loc_67DDB2A5:				; CODE XREF: sub_67DDB140+1D1j
					; sub_67DDB140+1D6j ...
		test	al, al
		setnz	al
		add	ebx, 1
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_type_sig ; "_dbus_type_signature_next"
		mov	[esp+3Ch+var_30], 165h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPDbus_type_inv ; "*p != DBUS_TYPE_INVALID"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_type_sig ; "_dbus_type_signature_next"
		mov	[esp+3Ch+var_30], 169h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPDbus_type_inv ; "*p != DBUS_TYPE_INVALID"
		cmp	byte ptr [ebx],	0
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx]
		cmp	al, 28h
		jz	short loc_67DDB320
		cmp	al, 29h
		jnz	short loc_67DDB2A5
		sub	ebp, 1
		jnz	short loc_67DDB2A5
		jmp	loc_67DDB291
; ---------------------------------------------------------------------------
		align 10h

loc_67DDB320:				; CODE XREF: sub_67DDB140+1CDj
		add	ebp, 1
		jmp	short loc_67DDB2A5
; ---------------------------------------------------------------------------

loc_67DDB325:				; CODE XREF: sub_67DDB140+14Bj
		mov	ebp, 1
		lea	esi, [esi+0]

loc_67DDB330:				; CODE XREF: sub_67DDB140+25Cj
					; sub_67DDB140+261j ...
		test	al, al
		setnz	al
		add	ebx, 1
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_type_sig ; "_dbus_type_signature_next"
		mov	[esp+3Ch+var_30], 180h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPDbus_type_inv ; "*p != DBUS_TYPE_INVALID"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_type_sig ; "_dbus_type_signature_next"
		mov	[esp+3Ch+var_30], 184h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPDbus_type_inv ; "*p != DBUS_TYPE_INVALID"
		cmp	byte ptr [ebx],	0
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx]
		cmp	al, 7Bh
		jz	short loc_67DDB3A8
		cmp	al, 7Dh
		jnz	short loc_67DDB330
		sub	ebp, 1
		jnz	short loc_67DDB330
		jmp	loc_67DDB291
; ---------------------------------------------------------------------------

loc_67DDB3A8:				; CODE XREF: sub_67DDB140+258j
		add	ebp, 1
		nop
		lea	esi, [esi+0]
		jmp	loc_67DDB330
sub_67DDB140	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_type__29 ; "_dbus_type_reader_read_raw"
		mov	dword ptr [esp+0Ch], 34Bh
		mov	dword ptr [esp+8], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aReaderKlassTyp ; "!reader->klass->types_only"
		mov	eax, [ebx+14h]
		mov	eax, [eax+8]
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+8], 0
		mov	eax, [ebx+10h]
		mov	[esp+4], eax
		mov	eax, [ebx+0Ch]
		mov	[esp], eax
		call	sub_67E01280
		mov	edx, [esp+34h]
		mov	[edx], eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR dbus_message_iter_get_array_len

loc_67DDB430:				; CODE XREF: dbus_message_iter_get_array_len+4Aj
		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_type__12 ; "_dbus_type_reader_get_array_length"
		mov	[esp+2Ch+var_20], 379h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aReaderKlassTyp ; "!reader->klass->types_only"
		mov	eax, [ebx+14h]
		mov	edx, [eax+8]
		test	edx, edx
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_type__12 ; "_dbus_type_reader_get_array_length"
		mov	[esp+2Ch+var_20], 37Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aReaderKlassArr ; "reader->klass == &array_reader_class"
		cmp	dword ptr [ebx+14h], offset off_67E21CE8
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+1]
		mov	esi, [ebx+18h]
		mov	[esp+2Ch+var_1C], offset aArray_reader_g ; "array_reader_get_array_len"
		mov	[esp+2Ch+var_20], 0D4h
		shr	al, 1
		and	eax, 7
		sub	esi, 4
		sub	esi, eax
		lea	eax, [esi+3]
		and	eax, 0FFFFFFFCh
		cmp	esi, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset a_dbus_align__1 ; "_DBUS_ALIGN_VALUE	(len_pos, 4) ==	(unsi"...
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_24], 4
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E01280
		mov	dword ptr [esp+2Ch+var_28], eax
		movzx	eax, byte ptr [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFC500
		mov	[esp+2Ch+var_1C], offset aArray_reader_g ; "array_reader_get_array_len"
		mov	[esp+2Ch+var_20], 0DDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aReaderU_array_ ; "reader->u.array.start_pos	- len_pos - 4"...
		mov	edx, [ebx+18h]
		mov	edi, eax
		xor	eax, eax
		sub	edx, esi
		cmp	edx, 0Bh
		setle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; END OF FUNCTION CHUNK	FOR dbus_message_iter_get_array_len
; ---------------------------------------------------------------------------
		jmp	short sub_67DDB560
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB560	proc near		; CODE XREF: sub_67DD8090+67p
					; sub_67DD8090+BDp ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		test	byte ptr [ebx+1], 1
		jnz	short loc_67DDB5D0
		mov	eax, [ebx+14h]
		mov	eax, [eax+10h]
		test	eax, eax
		jz	short loc_67DDB590
		mov	[esp+3Ch+var_3C], ebx
		call	eax
		test	eax, eax
		jnz	short loc_67DDB5D0

loc_67DDB590:				; CODE XREF: sub_67DDB560+25j
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [ebx+4]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFD040
		mov	ebx, eax
		xor	eax, eax
		cmp	ebx, 29h
		setnz	al
		cmp	ebx, 28h
		setnz	dl
		cmp	ebx, 7Dh
		movzx	ebp, dl
		setnz	dl
		cmp	ebx, 7Bh
		movzx	edi, dl
		setnz	dl
		movzx	esi, dl
		jmp	short loc_67DDB5E6
; ---------------------------------------------------------------------------
		align 10h

loc_67DDB5D0:				; CODE XREF: sub_67DDB560+1Bj
					; sub_67DDB560+2Ej
		mov	esi, 1
		mov	edi, 1
		mov	ebp, 1
		mov	eax, 1
		xor	ebx, ebx

loc_67DDB5E6:				; CODE XREF: sub_67DDB560+67j
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_type_r_1 ; "_dbus_type_reader_get_current_type"
		mov	[esp+3Ch+var_30], 311h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTDbus_struct_e ; "t != DBUS_STRUCT_END_CHAR"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], ebp
		mov	[esp+3Ch+var_2C], offset a_dbus_type_r_1 ; "_dbus_type_reader_get_current_type"
		mov	[esp+3Ch+var_30], 312h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTDbus_struct_b ; "t != DBUS_STRUCT_BEGIN_CHAR"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_2C], offset a_dbus_type_r_1 ; "_dbus_type_reader_get_current_type"
		mov	[esp+3Ch+var_30], 313h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTDbus_dict_ent ; "t != DBUS_DICT_ENTRY_END_CHAR"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_2C], offset a_dbus_type_r_1 ; "_dbus_type_reader_get_current_type"
		mov	[esp+3Ch+var_30], 314h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTDbus_dict_e_0 ; "t != DBUS_DICT_ENTRY_BEGIN_CHAR"
		call	sub_67DFAE70
		mov	eax, ebx
		mov	esi, [esp+3Ch+var_C]
		mov	ebx, [esp+3Ch+var_10]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_67DDB560	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB6A0	proc near		; CODE XREF: sub_67DD8090+B5p
					; sub_67DD8260+B3p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67DDB560
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DDB6D5
		mov	eax, [ebx+14h]
		mov	[esp+1Ch+var_18], edx
		mov	[esp+1Ch+var_1C], ebx
		call	dword ptr [eax+14h]
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67DDB560
		test	eax, eax
		setnz	al
		movzx	eax, al

loc_67DDB6D5:				; CODE XREF: sub_67DDB6A0+16j
		add	esp, 18h
		pop	ebx
		retn
sub_67DDB6A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB6E0	proc near		; CODE XREF: sub_67DDA8D0+3F3p
					; sub_67DDF930+5C4p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DDB560
		mov	[esp+2Ch+var_1C], offset a_dbus_type_r_6 ; "_dbus_type_reader_get_element_type"
		mov	[esp+2Ch+var_20], 32Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_type_r_7 ; "_dbus_type_reader_get_current_type (rea"...
		cmp	eax, 61h
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		add	eax, 1
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFD040
		add	esp, 28h
		pop	ebx
		retn
sub_67DDB6E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB740	proc near		; DATA XREF: .rdata:67E21DFCo
					; .rdata:67E21E48o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	[esp+2Ch+var_4], edi
		mov	esi, [eax+10h]
		mov	edi, [eax+0Ch]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		movzx	eax, byte ptr [eax]
		and	byte ptr [ebx+1], 0FEh
		mov	[ebx+4], edx
		mov	[ebx], al
		mov	[ebx+8], ecx
		mov	[ebx+0Ch], edi
		mov	[ebx+10h], esi
		mov	[esp+2Ch+var_28], ecx
		mov	[esp+2Ch+var_2C], edx
		call	sub_67E00E50
		cmp	al, 28h
		jz	short loc_67DDB7E0
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E00E50
		xor	edx, edx
		cmp	al, 7Bh
		jz	short loc_67DDB7E0

loc_67DDB7A0:				; CODE XREF: sub_67DDB740+A5j
		mov	[esp+2Ch+var_1C], offset aStruct_or_dict ; "struct_or_dict_entry_types_only_reader_"...
		mov	[esp+2Ch+var_20], 0AAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_strin_43 ; "_dbus_string_get_byte (sub->type_str, s"...
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		add	dword ptr [ebx+8], 1
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDB7E0:				; CODE XREF: sub_67DDB740+46j
					; sub_67DDB740+5Ej
		mov	edx, 1
		jmp	short loc_67DDB7A0
sub_67DDB740	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB7F0	proc near		; CODE XREF: sub_67DDB920+36p
					; sub_67DDB9F0+42p ...

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+4Ch+var_C], esi
		mov	esi, edx
		mov	[esp+4Ch+var_8], edi
		mov	[esp+4Ch+var_4], ebp
		mov	eax, [eax+4]
		test	eax, eax
		jz	short loc_67DDB880
		test	byte ptr [ebx+2], 1
		jz	short loc_67DDB840
		mov	edx, [ebx+8]
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_48], edx
		call	sub_67E00E50
		movzx	edi, al
		cmp	edi, esi
		jnz	short loc_67DDB887
		cmp	byte ptr [ebx+1], 61h
		jz	short loc_67DDB880
		add	dword ptr [ebx+8], 1
		mov	eax, 1
		jmp	short loc_67DDB867
; ---------------------------------------------------------------------------
		align 10h

loc_67DDB840:				; CODE XREF: sub_67DDB7F0+22j
		and	esi, 0FFh
		mov	[esp+4Ch+var_44], esi
		mov	edx, [ebx+8]
		mov	[esp+4Ch+var_4C], eax
		mov	dword ptr [esp+4Ch+var_48], edx
		call	sub_67E03BA0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DDB867
		add	dword ptr [ebx+8], 1
		mov	al, 1

loc_67DDB867:				; CODE XREF: sub_67DDB7F0+49j
					; sub_67DDB7F0+6Fj ...
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDB880:				; CODE XREF: sub_67DDB7F0+1Cj
					; sub_67DDB7F0+3Ej
		mov	eax, 1
		jmp	short loc_67DDB867
; ---------------------------------------------------------------------------

loc_67DDB887:				; CODE XREF: sub_67DDB7F0+38j
		test	edi, edi
		jz	short loc_67DDB8EB
		mov	eax, [ebx+4]
		mov	ebp, [ebx+8]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E01770
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_20], eax
		call	sub_67DFC1F0
		mov	[esp+4Ch+var_4C], edi
		mov	ebx, eax
		call	sub_67DFC1F0
		mov	edx, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_3C], ebp
		mov	[esp+4Ch+var_44], ebx
		mov	[esp+4Ch+var_4C], offset aArrayOrVariant ; "Array or variant type requires that	typ"...
		mov	[esp+4Ch+var_40], edx
		mov	dword ptr [esp+4Ch+var_48], eax	; char
		call	sub_67DFB4E0

loc_67DDB8CF:				; CODE XREF: sub_67DDB7F0+12Bj
		mov	[esp+4Ch+var_44], 6BFh
		mov	dword ptr [esp+4Ch+var_48], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_4C], offset aBadTypeInserte ; "bad	type inserted somewhere	inside an a"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDB8EB:				; CODE XREF: sub_67DDB7F0+99j
		mov	eax, [ebx+4]
		mov	edi, [ebx+8]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E01770
		mov	[esp+4Ch+var_4C], esi
		mov	ebx, eax
		call	sub_67DFC1F0
		mov	[esp+4Ch+var_40], edi
		mov	[esp+4Ch+var_44], ebx
		mov	[esp+4Ch+var_4C], offset aArrayOrVaria_0 ; "Array or variant type wasn't expecting "...
		mov	dword ptr [esp+4Ch+var_48], eax	; char
		call	sub_67DFB4E0
		jmp	short loc_67DDB8CF
sub_67DDB7F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB920	proc near		; CODE XREF: sub_67DDBB80+14Cp
					; sub_67DDBB80+17Cp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
var_10		= dword	ptr -10h
arg_8		= dword	ptr  0Ch

		push	esi
		mov	esi, eax
		push	ebx
		sub	esp, 24h
		test	byte ptr [eax+2], 2
		mov	ebx, [esp+2Ch+arg_8]
		jz	short loc_67DDB954
		mov	[esp+2Ch+var_28], 8
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_10], edx
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E08BC0
		mov	edx, [esp+2Ch+var_10]
		mov	ecx, eax
		xor	eax, eax
		test	ecx, ecx
		jz	short loc_67DDB96A

loc_67DDB954:				; CODE XREF: sub_67DDB920+Fj
		mov	eax, ebx
		call	sub_67DDB7F0
		test	eax, eax
		jz	short loc_67DDB9B2
		test	byte ptr [esi+2], 2
		mov	eax, 1
		jnz	short loc_67DDB971

loc_67DDB96A:				; CODE XREF: sub_67DDB920+32j
		add	esp, 24h
		pop	ebx
		pop	esi
		nop
		retn
; ---------------------------------------------------------------------------

loc_67DDB971:				; CODE XREF: sub_67DDB920+48j
		mov	edx, [ebx+10h]
		mov	dword ptr [esp+2Ch+var_20], 0 ;	char
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		sub	eax, edx
		mov	[esp+2Ch+var_24], eax ;	size_t
		mov	[esp+2Ch+var_28], edx ;	int
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax ;	int
		call	sub_67E050F0
		test	eax, eax
		jz	short loc_67DDB9CE
		mov	eax, [ebx+10h]
		add	eax, 7
		and	eax, 0FFFFFFF8h
		mov	[ebx+10h], eax
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DDB9B2:				; CODE XREF: sub_67DDB920+3Dj
		mov	[esp+2Ch+var_24], 6F3h
		mov	[esp+2Ch+var_28], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_2C], offset aFailedToInsert ; "failed to insert struct typecode after "...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDB9CE:				; CODE XREF: sub_67DDB920+79j
		mov	[esp+2Ch+var_24], 6FBh
		mov	[esp+2Ch+var_28], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_2C], offset aShouldNotHaveF ; "should not have failed to insert alignm"...
		call	sub_67DFAE30
sub_67DDB920	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDB9F0	proc near		; CODE XREF: sub_67DD85F0+87p
					; sub_67DD85F0+154p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	esi, [esp+2Ch+arg_4]
		movzx	eax, byte ptr [ebx+2]
		test	al, 1
		jnz	short loc_67DDBA2A
		mov	edx, [ebx+4]
		test	edx, edx
		jz	short loc_67DDBA2A
		mov	[esp+2Ch+var_28], 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67E08BC0
		test	eax, eax
		jz	short loc_67DDBA80
		movzx	eax, byte ptr [ebx+2]

loc_67DDBA2A:				; CODE XREF: sub_67DDB9F0+19j
					; sub_67DDB9F0+20j
		test	al, 2
		jnz	short loc_67DDBA50

loc_67DDBA2E:				; CODE XREF: sub_67DDB9F0+8Ej
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DDB7F0
		test	eax, eax
		jz	short loc_67DDBA8E
		mov	eax, 1
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDBA50:				; CODE XREF: sub_67DDB9F0+3Cj
		lea	eax, [ebx+10h]
		mov	[esp+2Ch+var_18], eax
		movzx	eax, byte ptr [ebx]
		mov	[esp+2Ch+var_24], esi
		mov	[esp+2Ch+var_1C], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_20], eax
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFCC80
		test	eax, eax
		jnz	short loc_67DDBA2E

loc_67DDBA80:				; CODE XREF: sub_67DDB9F0+34j
		xor	eax, eax
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DDBA8E:				; CODE XREF: sub_67DDB9F0+49j
		mov	[esp+2Ch+var_24], 90Bh
		mov	[esp+2Ch+var_28], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_2C], offset aFailedToWriteT ; "failed to write typecode after prealloc"
		call	sub_67DFAE30
sub_67DDB9F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDBAB0	proc near		; DATA XREF: .rdata:67E21CF4o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	eax, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		mov	edx, [eax+4]
		mov	esi, [eax+10h]
		mov	edi, [eax+0Ch]
		mov	ecx, [eax+8]
		movzx	eax, byte ptr [eax]
		add	esi, 3
		and	esi, 0FFFFFFFCh
		add	ecx, 1
		mov	[ebx], al
		movzx	eax, byte ptr [ebx+1]
		mov	[ebx+4], edx
		mov	[ebx+8], ecx
		mov	[ebx+0Ch], edi
		and	eax, 0FFFFFFFEh
		or	eax, 0Eh
		mov	[ebx+1], al
		lea	eax, [esi+4]
		mov	dword ptr [ebx+18h], 7FFFFFFFh
		mov	[ebx+10h], eax
		mov	[esp+2Ch+var_28], ecx
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFD040
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFC5E0
		mov	ecx, [ebx+10h]
		mov	edx, eax
		neg	edx
		lea	eax, [eax+ecx-1]
		and	edx, eax
		mov	[ebx+10h], edx
		mov	[ebx+18h], edx
		sub	edx, esi
		lea	eax, [edx-4]
		cmp	eax, 7
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aArray_reader_r ; "array_reader_recurse"
		mov	[esp+2Ch+var_20], 0F7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSubU_array_sta ; "(sub->u.array.start_pos - (len_pos + 4)"...
		call	sub_67DFAE70
		mov	eax, [ebx+18h]
		mov	edx, esi
		sub	eax, 4
		sub	al, dl
		and	eax, 7
		lea	edx, [eax+eax]
		movzx	eax, byte ptr [ebx+1]
		and	eax, 0FFFFFFF1h
		or	eax, edx
		mov	[ebx+1], al
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DDBAB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __usercall sub_67DDBB80@<eax>(int@<ecx>, int, size_t, int, int)
sub_67DDBB80	proc near		; CODE XREF: sub_67DDCB20+57p
					; sub_67DDCB90+56p ...

var_5C		= dword	ptr -5Ch
var_58		= byte ptr -58h
var_54		= dword	ptr -54h
var_50		= byte ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		mov	edi, ecx
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 4Ch
		mov	ebp, [eax+0Ch]
		mov	esi, [esp+5Ch+arg_8]
		mov	ecx, [eax+4]
		movzx	eax, byte ptr [eax]
		mov	[esi+0Ch], ebp
		mov	[esi+4], ecx
		mov	[esi], al
		mov	eax, [ebx+8]
		mov	[esi+1], dl
		mov	[esi+8], eax
		mov	eax, [ebx+10h]
		mov	[esi+10h], eax
		movzx	eax, byte ptr [esi+2]
		and	eax, 0FFFFFFFEh
		or	eax, 2
		mov	[esi+2], al
		test	byte ptr [ebx+2], 1
		jnz	short loc_67DDBBCB
		cmp	dl, 76h
		jnz	loc_67DDBC95

loc_67DDBBCB:				; CODE XREF: sub_67DDBB80+40j
					; sub_67DDBB80+118j
		or	eax, 1
		mov	[esi+2], al

loc_67DDBBD1:				; CODE XREF: sub_67DDBB80+124j
		movzx	ecx, byte ptr [ebx+2]
		and	eax, 0FFFFFFFDh
		and	ecx, 2
		or	eax, ecx
		mov	[esi+2], al
		test	byte ptr [ebx+2], 1
		jz	short loc_67DDBC12
		mov	eax, [ebx+4]
		test	eax, eax
		jz	short loc_67DDBC12
		mov	ecx, [ebx+8]
		mov	[esp+5Ch+var_30], edx
		mov	[esp+5Ch+var_5C], eax
		mov	dword ptr [esp+5Ch+var_58], ecx
		call	sub_67DFD040
		mov	edx, [esp+5Ch+var_30]
		mov	ebp, eax
		movzx	eax, byte ptr [esi+1]
		cmp	ebp, eax
		jnz	loc_67DDC02E

loc_67DDBC12:				; CODE XREF: sub_67DDBB80+64j
					; sub_67DDBB80+6Bj
		cmp	edx, 65h
		jz	loc_67DDBCE0
		jle	short loc_67DDBC70
		cmp	edx, 72h
		jz	loc_67DDBCB0
		cmp	edx, 76h
		lea	esi, [esi+0]
		jnz	short loc_67DDBC79
		test	byte ptr [ebx+2], 2
		jnz	loc_67DDBE53

loc_67DDBC3C:				; CODE XREF: sub_67DDBB80+2EBj
		mov	edx, 76h
		mov	eax, ebx
		call	sub_67DDB7F0
		test	eax, eax
		jz	loc_67DDBE71
		test	byte ptr [ebx+2], 2
		jnz	loc_67DDC0A0
		mov	dword ptr [esi+4], 0
		mov	eax, 1
		mov	dword ptr [esi+8], 0FFFFFFFFh
		jmp	short loc_67DDBCD1
; ---------------------------------------------------------------------------
		align 10h

loc_67DDBC70:				; CODE XREF: sub_67DDBB80+9Bj
		cmp	edx, 61h
		jz	loc_67DDBD10

loc_67DDBC79:				; CODE XREF: sub_67DDBB80+B0j
		mov	[esp+5Ch+var_54], 81Dh
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aTriedToRecurse ; "tried to recurse into type that doesn't"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDBC95:				; CODE XREF: sub_67DDBB80+45j
		cmp	dl, 61h
		jz	loc_67DDBBCB
		and	eax, 0FFFFFFFEh
		mov	[esi+2], al
		jmp	loc_67DDBBD1
; ---------------------------------------------------------------------------
		align 10h

loc_67DDBCB0:				; CODE XREF: sub_67DDBB80+A0j
		mov	edx, [esp+5Ch+arg_4]
		mov	ecx, edi
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_54], esi
		mov	dword ptr [esp+5Ch+var_58], edx
		mov	edx, 28h
		mov	[esp+5Ch+var_5C], eax
		mov	eax, ebx
		call	sub_67DDB920

loc_67DDBCD1:				; CODE XREF: sub_67DDBB80+EDj
					; sub_67DDBB80+607j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDBCE0:				; CODE XREF: sub_67DDBB80+95j
		mov	edx, [esp+5Ch+arg_4]
		mov	ecx, edi
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_54], esi
		mov	dword ptr [esp+5Ch+var_58], edx
		mov	edx, 7Bh
		mov	[esp+5Ch+var_5C], eax
		mov	eax, ebx
		call	sub_67DDB920
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDBD10:				; CODE XREF: sub_67DDBB80+F3j
		mov	[esp+5Ch+var_20], 0
		cmp	byte ptr [ebx+1], 61h
		jz	loc_67DDBE80

loc_67DDBD22:				; CODE XREF: sub_67DDBB80+305j
					; sub_67DDBB80+333j
		mov	ebp, [esp+5Ch+arg_C]
		test	ebp, ebp
		setz	dl
		mov	ebp, edx
		jz	loc_67DDBF80

loc_67DDBD33:				; CODE XREF: sub_67DDBB80+404j
					; sub_67DDBB80+41Fj
		mov	eax, [ebx+4]
		test	eax, eax
		jz	short loc_67DDBD46
		mov	edx, [esi+8]
		add	edx, 1
		mov	[esi+8], edx
		mov	[esi+1Ch], edx

loc_67DDBD46:				; CODE XREF: sub_67DDBB80+1B8j
		test	byte ptr [ebx+2], 1
		jz	loc_67DDBFB0

loc_67DDBD50:				; CODE XREF: sub_67DDBB80+49Ej
		test	eax, eax
		jz	short loc_67DDBD6C
		cmp	byte ptr [ebx+1], 61h
		jz	loc_67DDC233
		mov	eax, [ebx+8]
		mov	edx, [esp+5Ch+arg_4]
		lea	eax, [edx+eax+1]
		mov	[ebx+8], eax

loc_67DDBD6C:				; CODE XREF: sub_67DDBB80+1D2j
					; sub_67DDBB80+6E2j
		test	byte ptr [ebx+2], 2
		jz	loc_67DDBF00
		mov	edx, [esi+10h]
		lea	eax, [edx+3]
		and	eax, 0FFFFFFFCh
		mov	[esi+18h], eax
		mov	ecx, [esp+5Ch+arg_C]
		test	ecx, ecx
		jnz	loc_67DDC023
		test	byte ptr [esi+2], 2
		jnz	loc_67DDC2B0

loc_67DDBD98:				; CODE XREF: sub_67DDBB80+4A9j
					; sub_67DDBB80+767j
		sub	edx, 4
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset aWriter_recurse ; "writer_recurse_array"
		mov	dword ptr [esp+5Ch+var_50], 762h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+5Ch+var_58], offset aSubU_array_len ; "sub->u.array.len_pos == sub->value_pos "...
		call	sub_67DFAE70
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_5C], edi
		mov	dword ptr [esp+5Ch+var_58], eax
		call	sub_67DFD040
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFC5E0
		mov	edx, [esi+10h]
		mov	ebx, eax
		neg	ebx
		lea	eax, [edx+eax-1]
		and	ebx, eax
		cmp	edx, ebx
		jz	short loc_67DDBE01
		mov	eax, ebp
		test	al, al
		jnz	loc_67DDC267

loc_67DDBDFE:				; CODE XREF: sub_67DDBB80+708j
		mov	[esi+10h], ebx

loc_67DDBE01:				; CODE XREF: sub_67DDBB80+272j
		mov	[esi+14h], ebx
		mov	edi, [esp+5Ch+arg_C]
		test	edi, edi
		jnz	loc_67DDC190
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset aWriter_recurse ; "writer_recurse_array"
		mov	dword ptr [esp+5Ch+var_50], 790h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+5Ch+var_58], offset aSubU_array_l_0 ; "sub->u.array.len_pos < sub->u.array.sta"...
		cmp	ebx, [esi+18h]
		setnle	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70

loc_67DDBE40:				; CODE XREF: sub_67DDBB80+3C0j
		mov	edx, [esi+14h]
		xor	eax, eax
		cmp	edx, [esi+10h]
		jnz	loc_67DDBF4B
		jmp	loc_67DDBF46
; ---------------------------------------------------------------------------

loc_67DDBE53:				; CODE XREF: sub_67DDBB80+B6j
		mov	eax, [esp+5Ch+arg_4]
		add	eax, 9
		mov	dword ptr [esp+5Ch+var_58], eax
		mov	eax, [esi+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E08BC0
		test	eax, eax
		jnz	loc_67DDBC3C

loc_67DDBE71:				; CODE XREF: sub_67DDBB80+CAj
					; sub_67DDBB80+445j
		xor	eax, eax

loc_67DDBE73:				; CODE XREF: sub_67DDBB80+427j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDBE80:				; CODE XREF: sub_67DDBB80+19Cj
		mov	eax, [ebx+4]
		test	eax, eax
		jz	loc_67DDBD22
		mov	edx, [ebx+1Ch]
		mov	dword ptr [esp+5Ch+var_50], eax
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_5C], edi
		add	edx, 1
		mov	[esp+5Ch+var_4C], edx
		mov	edx, [esp+5Ch+arg_4]
		mov	dword ptr [esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_54], edx
		call	sub_67DFF1D0
		test	eax, eax
		jnz	loc_67DDBD22
		mov	edx, [esp+5Ch+arg_4]
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_5C], edi
		mov	[esp+5Ch+var_54], edx
		mov	dword ptr [esp+5Ch+var_58], eax
		call	sub_67E01280
		mov	[esp+5Ch+var_5C], offset aWritingAnArray ; "Writing an array of	'%s' but this is in"...
		mov	dword ptr [esp+5Ch+var_58], eax	; char
		call	sub_67DFB4E0
		mov	[esp+5Ch+var_54], 71Dh
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aIncompatibleTy ; "incompatible type for child	array"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h

loc_67DDBF00:				; CODE XREF: sub_67DDBB80+1F0j
		mov	eax, [esi+10h]
		mov	dword ptr [esi+18h], 0FFFFFFFFh
		mov	[esi+14h], eax
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+var_4C], offset aWriter_recurse ; "writer_recurse_array"
		mov	dword ptr [esp+5Ch+var_50], 790h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+5Ch+var_58], offset aSubU_array_l_0 ; "sub->u.array.len_pos < sub->u.array.sta"...
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	ecx, [esp+5Ch+arg_C]
		test	ecx, ecx
		jz	loc_67DDBE40

loc_67DDBF46:				; CODE XREF: sub_67DDBB80+2CEj
		mov	eax, 1

loc_67DDBF4B:				; CODE XREF: sub_67DDBB80+2C8j
					; sub_67DDBB80+6AEj
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset aWriter_recurse ; "writer_recurse_array"
		mov	dword ptr [esp+5Ch+var_50], 791h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+5Ch+var_58], offset aIs_array_appen ; "is_array_append || sub->u.array.start_p"...
		call	sub_67DFAE70
		add	esp, 4Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDBF80:				; CODE XREF: sub_67DDBB80+1ADj
		test	byte ptr [ebx+2], 2
		jz	loc_67DDBD33
		mov	dword ptr [esp+5Ch+var_58], 0Bh
		mov	eax, [esi+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E08BC0
		test	eax, eax
		jnz	loc_67DDBD33
		xor	eax, eax
		jmp	loc_67DDBE73
; ---------------------------------------------------------------------------
		align 10h

loc_67DDBFB0:				; CODE XREF: sub_67DDBB80+1CAj
		mov	edx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_5C], eax
		add	edx, 1
		mov	dword ptr [esp+5Ch+var_58], edx
		call	sub_67E08BC0
		test	eax, eax
		jz	loc_67DDBE71
		mov	[esp+5Ch+var_54], 61h
		mov	eax, [ebx+8]
		mov	dword ptr [esp+5Ch+var_58], eax
		mov	eax, [ebx+4]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E03BA0
		test	eax, eax
		jz	loc_67DDC35D
		mov	eax, [esi+1Ch]
		mov	edx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_4C], eax ;	int
		mov	eax, [esi+4]
		mov	dword ptr [esp+5Ch+var_58], edx	; int
		mov	[esp+5Ch+var_5C], edi ;	int
		mov	dword ptr [esp+5Ch+var_50], eax	; int
		mov	eax, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_54], eax ;	size_t
		call	sub_67E05A20
		test	eax, eax
		jz	loc_67DDC341
		mov	eax, [ebx+4]
		jmp	loc_67DDBD50
; ---------------------------------------------------------------------------

loc_67DDC023:				; CODE XREF: sub_67DDBB80+208j
		add	edx, 4
		mov	[esi+10h], edx
		jmp	loc_67DDBD98
; ---------------------------------------------------------------------------

loc_67DDC02E:				; CODE XREF: sub_67DDBB80+8Cj
		test	ebp, ebp
		jz	loc_67DDC2EC
		mov	eax, [ebx+4]
		mov	edi, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E01770
		mov	[esp+5Ch+var_5C], ebp
		mov	[esp+5Ch+var_30], eax
		call	sub_67DFC1F0
		mov	ebx, eax
		movzx	eax, byte ptr [esi+1]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFC1F0
		mov	edx, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_4C], edi
		mov	[esp+5Ch+var_54], ebx
		mov	[esp+5Ch+var_5C], offset aWritingAnEleme ; "Writing an element of type %s, but the "...
		mov	dword ptr [esp+5Ch+var_50], edx
		mov	dword ptr [esp+5Ch+var_58], eax	; char
		call	sub_67DFB4E0

loc_67DDC07E:				; CODE XREF: sub_67DDBB80+7A0j
		mov	[esp+5Ch+var_54], 67Fh
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aBadArrayElemen ; "bad	array element or variant content wr"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h

loc_67DDC0A0:				; CODE XREF: sub_67DDBB80+D4j
		movzx	eax, byte ptr [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_54], eax
		mov	eax, [esi+10h]
		mov	dword ptr [esp+5Ch+var_58], eax
		mov	eax, [esi+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E03BA0
		test	eax, eax
		jz	loc_67DDC3CD
		mov	eax, [esi+10h]
		mov	edx, [esi+0Ch]
		add	eax, 1
		mov	[esi+10h], eax
		mov	[esi+8], eax
		mov	[esi+4], edx
		mov	[esp+5Ch+var_4C], eax ;	int
		mov	eax, [esp+5Ch+arg_0]
		mov	dword ptr [esp+5Ch+var_50], edx	; int
		mov	edx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_5C], edi ;	int
		mov	dword ptr [esp+5Ch+var_58], eax	; int
		mov	[esp+5Ch+var_54], edx ;	size_t
		call	sub_67E05A20
		test	eax, eax
		jz	loc_67DDC3B1
		mov	eax, [esp+5Ch+arg_4]
		add	eax, [esi+10h]
		mov	[esi+10h], eax
		mov	[esp+5Ch+var_54], 0
		mov	dword ptr [esp+5Ch+var_58], eax
		mov	eax, [esi+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E03BA0
		test	eax, eax
		jz	loc_67DDC395
		add	dword ptr [esi+10h], 1
		mov	edx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_5C], edi
		mov	dword ptr [esp+5Ch+var_58], edx
		call	sub_67DFD040
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFC5E0
		mov	edx, [esi+10h]
		mov	dword ptr [esp+5Ch+var_50], 0 ;	char
		mov	dword ptr [esp+5Ch+var_58], edx	; int
		mov	edi, eax
		mov	ebx, eax
		neg	edi
		lea	eax, [edx+eax-1]
		and	eax, edi
		sub	eax, edx
		mov	[esp+5Ch+var_54], eax ;	size_t
		mov	eax, [esi+0Ch]
		mov	[esp+5Ch+var_5C], eax ;	int
		call	sub_67E050F0
		test	eax, eax
		jz	loc_67DDC379
		mov	eax, [esi+10h]
		lea	eax, [ebx+eax-1]
		and	eax, edi
		mov	[esi+10h], eax
		mov	eax, 1
		jmp	loc_67DDBCD1
; ---------------------------------------------------------------------------
		align 10h

loc_67DDC190:				; CODE XREF: sub_67DDBB80+28Aj
		mov	edx, [esi+18h]
		mov	[esp+5Ch+var_4C], offset aWriter_recurse ; "writer_recurse_array"
		mov	dword ptr [esp+5Ch+var_50], 780h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+3]
		and	eax, 0FFFFFFFCh
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		mov	dword ptr [esp+5Ch+var_58], offset a_dbus_align_va ; "_DBUS_ALIGN_VALUE	(sub->u.array.len_pos"...
		call	sub_67DFAE70
		mov	[esp+5Ch+var_54], 4
		mov	eax, [esi+18h]
		mov	dword ptr [esp+5Ch+var_58], eax
		mov	eax, [esi+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E01280
		mov	dword ptr [esp+5Ch+var_58], eax
		movzx	eax, byte ptr [esi]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFC500
		add	[esi+10h], eax
		mov	[esp+5Ch+var_4C], offset aWriter_recurse ; "writer_recurse_array"
		mov	dword ptr [esp+5Ch+var_50], 790h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+5Ch+var_58], offset aSubU_array_l_0 ; "sub->u.array.len_pos < sub->u.array.sta"...
		mov	eax, [esi+18h]
		cmp	eax, [esi+14h]
		setl	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	eax, 1
		jmp	loc_67DDBF4B
; ---------------------------------------------------------------------------

loc_67DDC233:				; CODE XREF: sub_67DDBB80+1D8j
		mov	[esp+5Ch+var_4C], offset aWriter_recurse ; "writer_recurse_array"
		mov	dword ptr [esp+5Ch+var_50], 74Fh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+5Ch+var_58], offset aWriterType_p_0 ; "writer->type_pos_is_expectation"
		movzx	eax, byte ptr [ebx+2]
		and	eax, 1
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		jmp	loc_67DDBD6C
; ---------------------------------------------------------------------------

loc_67DDC267:				; CODE XREF: sub_67DDBB80+278j
		mov	eax, ebx
		sub	eax, edx
		mov	dword ptr [esp+5Ch+var_50], 0 ;	char
		mov	[esp+5Ch+var_54], eax ;	size_t
		mov	dword ptr [esp+5Ch+var_58], edx	; int
		mov	eax, [esi+0Ch]
		mov	[esp+5Ch+var_5C], eax ;	int
		call	sub_67E050F0
		test	eax, eax
		jnz	loc_67DDBDFE
		mov	[esp+5Ch+var_54], 773h
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aShouldNotHav_0 ; "should not have failed to insert alignm"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h

loc_67DDC2B0:				; CODE XREF: sub_67DDBB80+212j
		lea	eax, [esi+10h]
		mov	[esp+5Ch+var_48], eax
		movzx	eax, byte ptr [esi]
		mov	[esp+5Ch+var_54], 75h
		mov	dword ptr [esp+5Ch+var_58], edx
		mov	[esp+5Ch+var_4C], eax
		lea	eax, [esp+5Ch+var_20]
		mov	dword ptr [esp+5Ch+var_50], eax
		mov	eax, [esi+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFCC80
		test	eax, eax
		jz	short loc_67DDC325
		mov	eax, [esi+18h]
		mov	edx, [esi+10h]
		jmp	loc_67DDBD98
; ---------------------------------------------------------------------------

loc_67DDC2EC:				; CODE XREF: sub_67DDBB80+4B0j
		mov	eax, [ebx+4]
		mov	edi, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E01770
		mov	ebx, eax
		movzx	eax, byte ptr [esi+1]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFC1F0
		mov	dword ptr [esp+5Ch+var_50], edi
		mov	[esp+5Ch+var_54], ebx
		mov	[esp+5Ch+var_5C], offset aWritingAnEle_0 ; "Writing an element of type %s, but no v"...
		mov	dword ptr [esp+5Ch+var_58], eax	; char
		call	sub_67DFB4E0
		jmp	loc_67DDC07E
; ---------------------------------------------------------------------------

loc_67DDC325:				; CODE XREF: sub_67DDBB80+75Fj
		mov	[esp+5Ch+var_54], 75Fh
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aShouldNotHav_1 ; "should not have failed to insert array "...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDC341:				; CODE XREF: sub_67DDBB80+495j
		mov	[esp+5Ch+var_54], 744h
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aShouldNotHav_2 ; "should not have failed to insert array "...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDC35D:				; CODE XREF: sub_67DDBB80+467j
		mov	[esp+5Ch+var_54], 73Eh
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aFailedToInse_0 ; "failed to insert array typecode after p"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDC379:				; CODE XREF: sub_67DDBB80+5F0j
		mov	[esp+5Ch+var_54], 7F1h
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aShouldNotHav_3 ; "should not have failed to insert alignm"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDC395:				; CODE XREF: sub_67DDBB80+5A0j
		mov	[esp+5Ch+var_54], 7E7h
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aShouldNotHav_4 ; "should not have failed to insert varian"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDC3B1:				; CODE XREF: sub_67DDBB80+577j
		mov	[esp+5Ch+var_54], 7E0h
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aShouldNotHav_5 ; "should not have failed to insert varian"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDC3CD:				; CODE XREF: sub_67DDBB80+53Dj
		mov	[esp+5Ch+var_54], 7D6h
		mov	dword ptr [esp+5Ch+var_58], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_5C], offset aShouldNotHav_6 ; "should not have failed to insert varian"...
		call	sub_67DFAE30
sub_67DDBB80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDC3F0	proc near		; DATA XREF: .rdata:67E21EB0o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	[esp+1Ch+var_4], edi
		mov	ecx, [eax+10h]
		mov	edx, [eax+0Ch]
		mov	esi, [eax+8]
		mov	edi, [eax+4]
		movzx	eax, byte ptr [eax]
		and	byte ptr [ebx+1], 0FEh
		mov	[ebx+4], edi
		mov	[ebx+8], esi
		mov	[ebx+0Ch], edx
		mov	[ebx+10h], ecx
		mov	[ebx], al
		mov	[esp+1Ch+var_18], ecx
		mov	[esp+1Ch+var_1C], edx
		call	sub_67E00E50
		mov	esi, [ebx+10h]
		mov	edx, [ebx+0Ch]
		lea	ecx, [esi+1]
		mov	[ebx+4], edx
		movzx	eax, al
		lea	eax, [esi+eax+2]
		mov	[ebx+8], ecx
		mov	[ebx+10h], eax
		mov	[esp+1Ch+var_18], ecx
		mov	[esp+1Ch+var_1C], edx
		call	sub_67DFD040
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFC5E0
		mov	ecx, [ebx+10h]
		mov	edx, eax
		neg	edx
		lea	eax, [eax+ecx-1]
		and	edx, eax
		mov	[ebx+10h], edx
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DDC3F0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DDC490
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDC490	proc near		; CODE XREF: sub_67DD85F0+168p
					; sub_67DD85F0+17Cp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		mov	eax, 1
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		test	byte ptr [esi+2], 1
		jz	short loc_67DDC4AF
		movzx	eax, byte ptr [ebx+2]
		and	eax, 1

loc_67DDC4AF:				; CODE XREF: sub_67DDC490+16j
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_type_wri ; "_dbus_type_writer_unrecurse"
		mov	[esp+2Ch+var_20], 879h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWriterType_pos ; "!writer->type_pos_is_expectation ||	(wr"...
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+1]
		cmp	al, 72h
		jz	loc_67DDC592
		cmp	al, 65h
		jz	loc_67DDC5B0
		cmp	al, 61h
		lea	esi, [esi+0]
		jz	short loc_67DDC537

loc_67DDC4F2:				; CODE XREF: sub_67DDC490+ACj
					; sub_67DDC490+FDj ...
		mov	eax, [esi+4]
		test	eax, eax
		jz	short loc_67DDC512
		movzx	eax, byte ptr [ebx+1]
		cmp	al, 65h
		jnz	short loc_67DDC523
		movzx	eax, byte ptr [esi+1]
		cmp	al, 65h
		jz	short loc_67DDC52F

loc_67DDC509:				; CODE XREF: sub_67DDC490+9Dj
		cmp	al, 72h
		jz	short loc_67DDC52F
		test	al, al
		nop
		jz	short loc_67DDC52F

loc_67DDC512:				; CODE XREF: sub_67DDC490+67j
					; sub_67DDC490+95j ...
		mov	eax, [ebx+10h]
		mov	[esi+10h], eax
		mov	eax, 1

loc_67DDC51D:				; CODE XREF: sub_67DDC490+118j
					; sub_67DDC490+136j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DDC523:				; CODE XREF: sub_67DDC490+6Fj
		cmp	al, 72h
		jnz	short loc_67DDC512
		movzx	eax, byte ptr [esi+1]
		cmp	al, 65h
		jnz	short loc_67DDC509

loc_67DDC52F:				; CODE XREF: sub_67DDC490+77j
					; sub_67DDC490+7Bj ...
		mov	eax, [ebx+8]
		mov	[esi+8], eax
		jmp	short loc_67DDC512
; ---------------------------------------------------------------------------

loc_67DDC537:				; CODE XREF: sub_67DDC490+60j
		mov	edx, [ebx+18h]
		test	edx, edx
		js	short loc_67DDC4F2
		mov	[esp+2Ch+var_1C], offset aWriter_get_arr ; "writer_get_array_len"
		mov	[esp+2Ch+var_20], 867h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWriterContaine ; "writer->container_type == DBUS_TYPE_ARR"...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx]
		mov	[esp+2Ch+var_20], eax
		mov	eax, [ebx+10h]
		sub	eax, [ebx+14h]
		mov	[esp+2Ch+var_24], eax
		mov	eax, [ebx+18h]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFD1D0
		jmp	loc_67DDC4F2
; ---------------------------------------------------------------------------

loc_67DDC592:				; CODE XREF: sub_67DDC490+4Dj
		mov	edx, 29h
		mov	eax, ebx
		call	sub_67DDB7F0
		test	eax, eax
		jnz	loc_67DDC4F2
		xor	eax, eax
		jmp	loc_67DDC51D
; ---------------------------------------------------------------------------
		align 10h

loc_67DDC5B0:				; CODE XREF: sub_67DDC490+55j
		mov	edx, 7Dh
		mov	eax, ebx
		call	sub_67DDB7F0
		test	eax, eax
		jnz	loc_67DDC4F2
		xor	eax, eax
		jmp	loc_67DDC51D
sub_67DDC490	endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR dbus_message_iter_append_fixed_array

loc_67DDC5D0:				; CODE XREF: dbus_message_iter_append_fixed_array+34Dj
		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_type_w_0 ; "_dbus_type_writer_write_fixed_multi"
		mov	edi, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_20], 92Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWriterContaine ; "writer->container_type == DBUS_TYPE_ARR"...
		cmp	byte ptr [ebx+1], 61h
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], esi
		call	dbus_type_is_fixed
		mov	[esp+2Ch+var_1C], offset a_dbus_type_w_0 ; "_dbus_type_writer_write_fixed_multi"
		mov	[esp+2Ch+var_20], 92Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aDbus_type_is_f ; "dbus_type_is_fixed (element_type)"
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_type_w_0 ; "_dbus_type_writer_write_fixed_multi"
		mov	[esp+2Ch+var_20], 92Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWriterType_p_0 ; "writer->type_pos_is_expectation"
		movzx	eax, byte ptr [ebx+2]
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_type_w_0 ; "_dbus_type_writer_write_fixed_multi"
		mov	[esp+2Ch+var_20], 930h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aN_elements0 ;	"n_elements >= 0"
		call	sub_67DFAE70
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DDB7F0
		test	eax, eax
		jz	short loc_67DDC707
		test	byte ptr [ebx+2], 2
		mov	eax, 1
		jnz	short loc_67DDC6C8
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DDC6C8:				; CODE XREF: dbus_message_iter_append_fixed_array-9C21j
		lea	eax, [ebx+10h]
		mov	[esp+2Ch+var_14], eax ;	int
		movzx	eax, byte ptr [ebx]
		mov	[esp+2Ch+var_1C], edi ;	size_t
		mov	[esp+2Ch+var_24], esi ;	int
		mov	[esp+2Ch+var_18], eax ;	int
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_20], eax ;	int
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_28], eax ;	int
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax ;	int
		call	sub_67DFC7E0
		test	eax, eax
		setnz	al
		add	esp, 20h
		movzx	eax, al
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DDC707:				; CODE XREF: dbus_message_iter_append_fixed_array-9C2Cj
		mov	[esp+2Ch+var_24], 938h
		mov	[esp+2Ch+var_28], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_2C], offset aOomShouldNotHa ; "OOM	should not happen if only verifying"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h
; END OF FUNCTION CHUNK	FOR dbus_message_iter_append_fixed_array

; =============== S U B	R O U T	I N E =======================================


sub_67DDC730	proc near		; CODE XREF: sub_67DD8090+51p
					; sub_67DD8090+5Fp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], edi
		mov	eax, [ebx+8]
		mov	dword ptr [esp+2Ch+var_28], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFD040
		cmp	eax, 65h
		mov	edi, eax
		jz	loc_67DDC860
		jle	short loc_67DDC7E5
		cmp	eax, 72h
		jz	loc_67DDC842
		cmp	eax, 76h
		jnz	short loc_67DDC7EE
		mov	eax, [ebx+14h]
		mov	ecx, [eax+8]
		test	ecx, ecx
		jnz	loc_67DDC8E4
		mov	dword ptr [esi+14h], offset off_67E21EA4
		mov	eax, offset off_67E21EA4

loc_67DDC78E:				; CODE XREF: sub_67DDC730+128j
					; sub_67DDC730+146j ...
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_type_r_2 ; "_dbus_type_reader_recurse"
		mov	[esp+2Ch+Format], 3FBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aSubKlassAll_re ; "sub->klass == all_reader_classes[sub->k"...
		mov	edx, [eax+4]
		cmp	ds:off_67E21EC0[edx*4],	eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esi+14h]
		mov	[esp+2Ch+arg_4], ebx
		mov	edi, [esp+2Ch+var_4]
		mov	[esp+2Ch+arg_0], esi
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	eax, [eax+0Ch]
		add	esp, 2Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_67DDC7E5:				; CODE XREF: sub_67DDC730+34j
		cmp	eax, 61h
		jz	loc_67DDC880

loc_67DDC7EE:				; CODE XREF: sub_67DDC730+42j
		mov	[esp+2Ch+var_2C], edi
		call	sub_67DFC1F0
		mov	[esp+2Ch+Format], offset aRecursingIntoT ; "recursing into type	%s\n"
		mov	[esp+2Ch+var_24], offset a_dbus_type_r_2 ; "_dbus_type_reader_recurse"
		mov	dword ptr [esp+2Ch+var_28], 3F2h ; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		call	sub_67DFABC0
		test	edi, edi
		jz	loc_67DDC8D3

loc_67DDC826:				; CODE XREF: sub_67DDC730+1AFj
		mov	[esp+2Ch+var_24], 3F8h
		mov	dword ptr [esp+2Ch+var_28], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_2C], offset aDonTYetHandleR ; "don't yet handle recursing into this ty"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDC842:				; CODE XREF: sub_67DDC730+39j
		mov	eax, [ebx+14h]
		mov	edx, [eax+8]
		test	edx, edx
		jz	short loc_67DDC8C2
		mov	dword ptr [esi+14h], offset off_67E21DF0
		mov	eax, offset off_67E21DF0
		jmp	loc_67DDC78E
; ---------------------------------------------------------------------------
		align 10h

loc_67DDC860:				; CODE XREF: sub_67DDC730+2Ej
		mov	eax, [ebx+14h]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_67DDC8B1
		mov	dword ptr [esi+14h], offset off_67E21E3C
		mov	eax, offset off_67E21E3C
		jmp	loc_67DDC78E
; ---------------------------------------------------------------------------
		align 10h

loc_67DDC880:				; CODE XREF: sub_67DDC730+B8j
		mov	eax, [ebx+14h]
		mov	edi, [eax+8]
		test	edi, edi
		jz	short loc_67DDC8A0
		mov	dword ptr [esi+14h], offset off_67E21E84
		mov	eax, offset off_67E21E84
		jmp	loc_67DDC78E
; ---------------------------------------------------------------------------
		align 10h

loc_67DDC8A0:				; CODE XREF: sub_67DDC730+158j
		mov	dword ptr [esi+14h], offset off_67E21CE8
		mov	eax, offset off_67E21CE8
		jmp	loc_67DDC78E
; ---------------------------------------------------------------------------

loc_67DDC8B1:				; CODE XREF: sub_67DDC730+138j
		mov	dword ptr [esi+14h], offset off_67E21E60
		mov	eax, offset off_67E21E60
		jmp	loc_67DDC78E
; ---------------------------------------------------------------------------

loc_67DDC8C2:				; CODE XREF: sub_67DDC730+11Aj
		mov	dword ptr [esi+14h], offset off_67E21E10
		mov	eax, offset off_67E21E10
		jmp	loc_67DDC78E
; ---------------------------------------------------------------------------

loc_67DDC8D3:				; CODE XREF: sub_67DDC730+F0j
		mov	[esp+2Ch+var_2C], offset aYouCanTRecurse ; "You	can't recurse into an empty array o"...
		call	sub_67DFB4E0
		jmp	loc_67DDC826
; ---------------------------------------------------------------------------

loc_67DDC8E4:				; CODE XREF: sub_67DDC730+4Cj
		mov	[esp+2Ch+var_24], 3EDh
		mov	dword ptr [esp+2Ch+var_28], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_2C], offset aCanTRecurseInt ; "can't recurse into variant typecode"
		call	sub_67DFAE30
sub_67DDC730	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DDC900	proc near		; CODE XREF: sub_67DD8090+A4p
					; sub_67DD8260+114p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_type_r_3 ; "_dbus_type_reader_read_basic"
		mov	[esp+2Ch+var_20], 35Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReaderKlassTyp ; "!reader->klass->types_only"
		mov	eax, [ebx+14h]
		mov	ecx, [eax+8]
		test	ecx, ecx
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DDB560
		mov	[esp+2Ch+var_18], 0
		movzx	edx, byte ptr [ebx]
		mov	[esp+2Ch+var_1C], edx
		mov	edx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_20], edx
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFE240
		add	esp, 28h
		pop	ebx
		retn
sub_67DDC900	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDC980	proc near		; CODE XREF: dbus_message_iter_get_signature+AEp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_0]
		mov	edx, [esp+2Ch+arg_4]
		mov	ecx, [eax+4]
		mov	[edx], ecx
		mov	ecx, [eax+8]
		mov	edx, [esp+2Ch+arg_8]
		mov	[edx], ecx
		mov	ebx, [eax+8]
		mov	eax, [eax+4]
		mov	[esp+2Ch+var_10], ebx
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E01770
		lea	edx, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DDB140
		mov	eax, [esp+2Ch+var_10]
		mov	edx, [esp+2Ch+arg_C]
		sub	eax, ebx
		mov	[edx], eax
		add	esp, 28h
		pop	ebx
		retn
sub_67DDC980	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDC9D0	proc near		; CODE XREF: sub_67DDCF20+4DBp
					; sub_67DDCF20+512p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		test	ecx, ecx
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+2Ch+var_8], esi
		mov	esi, edx
		mov	[esp+2Ch+var_4], edi
		mov	edi, ecx
		jz	short loc_67DDCA60
		test	byte ptr [eax+2], 2
		jz	loc_67DDCA70

loc_67DDC9F3:				; CODE XREF: sub_67DDC9D0+E2j
					; sub_67DDC9D0+12Cj
		mov	eax, [esi+0Ch]
		cmp	eax, [edi+0Ch]
		mov	[esp+2Ch+var_1C], offset a_dbus_type_r_9 ; "_dbus_type_reader_greater_than"
		mov	[esp+2Ch+var_20], 5A3h
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLhsValue_strRh ; "lhs->value_str == rhs->value_str"
		call	sub_67DFAE70
		mov	eax, [esi+10h]
		cmp	eax, [edi+10h]
		jle	loc_67DDCB02

loc_67DDCA33:				; CODE XREF: sub_67DDC9D0+122j
		mov	eax, 1

loc_67DDCA38:				; CODE XREF: sub_67DDC9D0+134j
		mov	[esp+2Ch+var_1C], offset aEnable_if_afte ; "enable_if_after"
		mov	[esp+2Ch+var_20], 95Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWriterEnabled_ ; "(!writer->enabled && !_dbus_type_reader"...
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70

loc_67DDCA60:				; CODE XREF: sub_67DDC9D0+17j
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DDCA70:				; CODE XREF: sub_67DDC9D0+1Dj
		mov	eax, [edx+0Ch]
		cmp	eax, [ecx+0Ch]
		mov	[esp+2Ch+var_1C], offset a_dbus_type_r_9 ; "_dbus_type_reader_greater_than"
		mov	[esp+2Ch+var_20], 5A3h
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLhsValue_strRh ; "lhs->value_str == rhs->value_str"
		call	sub_67DFAE70
		mov	eax, [esi+10h]
		cmp	eax, [edi+10h]
		jg	short loc_67DDCB10
		movzx	eax, byte ptr [ebx+2]

loc_67DDCAB0:				; CODE XREF: sub_67DDC9D0+14Aj
		test	al, 2
		jnz	loc_67DDC9F3
		mov	eax, [esi+0Ch]
		cmp	eax, [edi+0Ch]
		mov	[esp+2Ch+var_1C], offset a_dbus_type_r_9 ; "_dbus_type_reader_greater_than"
		mov	[esp+2Ch+var_20], 5A3h
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLhsValue_strRh ; "lhs->value_str == rhs->value_str"
		call	sub_67DFAE70
		mov	eax, [esi+10h]
		cmp	eax, [edi+10h]
		jle	loc_67DDCA33
		test	byte ptr [ebx+2], 2
		jnz	loc_67DDC9F3

loc_67DDCB02:				; CODE XREF: sub_67DDC9D0+5Dj
		xor	eax, eax
		jmp	loc_67DDCA38
; ---------------------------------------------------------------------------
		align 10h

loc_67DDCB10:				; CODE XREF: sub_67DDC9D0+DAj
		movzx	eax, byte ptr [ebx+2]
		or	eax, 2
		mov	[ebx+2], al
		jmp	short loc_67DDCAB0
sub_67DDC9D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDCB20	proc near		; CODE XREF: sub_67DDA470+2E2p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_8]
		test	ebx, ebx
		jz	short loc_67DDCB55
		mov	[esp+2Ch+var_10], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E01770
		lea	edx, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DDB140
		mov	eax, [esp+2Ch+var_10]
		sub	eax, esi

loc_67DDCB55:				; CODE XREF: sub_67DDCB20+11j
		mov	edx, [esp+2Ch+arg_C]
		mov	ecx, ebx	; int
		mov	[esp+2Ch+var_28], eax ;	size_t
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], esi ;	int
		mov	[esp+2Ch+var_20], 1 ; int
		mov	[esp+2Ch+var_24], edx ;	int
		mov	edx, 61h
		call	sub_67DDBB80
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DDCB20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDCB90	proc near		; CODE XREF: sub_67DD85F0+5Fp
					; sub_67DD85F0+131p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_8]
		mov	esi, [esp+2Ch+arg_C]
		test	ebx, ebx
		jz	short loc_67DDCBC5
		mov	[esp+2Ch+var_10], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E01770
		lea	edx, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DDB140
		mov	eax, [esp+2Ch+var_10]
		sub	eax, esi

loc_67DDCBC5:				; CODE XREF: sub_67DDCB90+11j
		mov	edx, [esp+2Ch+arg_10]
		mov	ecx, ebx	; int
		mov	[esp+2Ch+var_28], eax ;	size_t
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], esi ;	int
		mov	[esp+2Ch+var_20], 0 ; int
		mov	[esp+2Ch+var_24], edx ;	int
		mov	edx, [esp+2Ch+arg_4]
		call	sub_67DDBB80
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DDCB90	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DDCC00
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDCC00	proc near		; CODE XREF: .text:67DDCBF1j
					; DATA XREF: .rdata:67E21E1Co ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	[esp+2Ch+var_4], edi
		mov	esi, [eax+10h]
		mov	edi, [eax+0Ch]
		mov	ecx, [eax+8]
		mov	edx, [eax+4]
		movzx	eax, byte ptr [eax]
		and	byte ptr [ebx+1], 0FEh
		mov	[ebx+4], edx
		mov	[ebx], al
		mov	[ebx+8], ecx
		mov	[ebx+0Ch], edi
		mov	[ebx+10h], esi
		mov	[esp+2Ch+var_28], ecx
		mov	[esp+2Ch+var_2C], edx
		call	sub_67E00E50
		cmp	al, 28h
		jz	short loc_67DDCCA8
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E00E50
		xor	edx, edx
		cmp	al, 7Bh
		jz	short loc_67DDCCA8

loc_67DDCC60:				; CODE XREF: sub_67DDCC00+ADj
		mov	[esp+2Ch+var_1C], offset aStruct_or_dict ; "struct_or_dict_entry_types_only_reader_"...
		mov	[esp+2Ch+var_20], 0AAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_strin_43 ; "_dbus_string_get_byte (sub->type_str, s"...
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+10h]
		add	dword ptr [ebx+8], 1
		add	eax, 7
		and	eax, 0FFFFFFF8h
		mov	[ebx+10h], eax
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DDCCA8:				; CODE XREF: sub_67DDCC00+46j
					; sub_67DDCC00+5Ej
		mov	edx, 1
		jmp	short loc_67DDCC60
sub_67DDCC00	endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR dbus_message_iter_has_next

loc_67DDCCB0:				; CODE XREF: dbus_message_iter_has_next+BBj
		push	ebx
		sub	esp, 38h
		mov	eax, [esp+3Ch+arg_0]
		lea	ebx, [esp+3Ch+var_28]
		mov	edx, [eax]
		mov	dword ptr [esp+3Ch+var_28], edx
		mov	edx, [eax+4]
		mov	[esp+3Ch+var_24], edx
		mov	edx, [eax+8]
		mov	[esp+3Ch+var_20], edx
		mov	edx, [eax+0Ch]
		mov	[esp+3Ch+var_1C], edx
		mov	edx, [eax+10h]
		mov	[esp+3Ch+var_18], edx
		mov	edx, [eax+14h]
		mov	[esp+3Ch+var_14], edx
		mov	eax, [eax+18h]
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_10], eax
		call	sub_67DDB560
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DDCD1A
		mov	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_3C], ebx
		call	dword ptr [eax+14h]
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DDB560
		test	eax, eax
		setnz	al
		movzx	eax, al

loc_67DDCD1A:				; CODE XREF: dbus_message_iter_has_next-6226j
		add	esp, 38h
		pop	ebx
		retn
; END OF FUNCTION CHUNK	FOR dbus_message_iter_has_next
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDCD20	proc near		; CODE XREF: sub_67DDCEA0+13p
					; sub_67DDCEE0+13p
					; DATA XREF: ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_28		= byte ptr -28h
var_20		= dword	ptr -20h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], esi
		mov	[esp+3Ch+var_4], edi
		cmp	eax, 65h
		jz	short loc_67DDCD70
		jg	short loc_67DDCD65
		cmp	eax, 61h
		jz	short loc_67DDCDB0

loc_67DDCD43:				; CODE XREF: sub_67DDCD20+4Dj
		mov	edx, [ebx+14h]
		mov	esi, [edx+8]
		test	esi, esi
		jz	loc_67DDCE70

loc_67DDCD51:				; CODE XREF: sub_67DDCD20+70j
					; sub_67DDCD20+16Dj
		add	dword ptr [ebx+8], 1
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DDCD65:				; CODE XREF: sub_67DDCD20+1Cj
		cmp	eax, 72h
		jz	short loc_67DDCD70
		cmp	eax, 76h
		jnz	short loc_67DDCD43
		nop

loc_67DDCD70:				; CODE XREF: sub_67DDCD20+1Aj
					; sub_67DDCD20+48j
		cmp	eax, 76h
		setz	al
		mov	edi, eax
		jnz	loc_67DDCE16
		mov	eax, [ebx+14h]
		mov	eax, [eax+8]
		test	eax, eax
		jz	loc_67DDCE16

loc_67DDCD8C:				; CODE XREF: sub_67DDCD20+11Aj
					; sub_67DDCD20+127j
		mov	eax, edi
		test	al, al
		jnz	short loc_67DDCD51
		mov	eax, [esp+3Ch+var_20]
		mov	[ebx+8], eax
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDCDB0:				; CODE XREF: sub_67DDCD20+21j
		mov	eax, [ebx+14h]
		mov	edi, [eax+8]
		test	edi, edi
		jnz	short loc_67DDCDEC
		mov	eax, [ebx+8]
		movzx	esi, byte ptr [ebx]
		add	eax, 1
		mov	[esp+3Ch+var_38], eax
		mov	eax, [ebx+4]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFD040
		lea	edx, [ebx+10h]
		mov	[esp+3Ch+var_30], edx
		mov	[esp+3Ch+var_34], esi
		mov	[esp+3Ch+var_38], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFD720

loc_67DDCDEC:				; CODE XREF: sub_67DDCD20+98j
		mov	eax, [ebx+4]
		add	ebx, 8
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E01770
		mov	[esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DDB140
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DDCE16:				; CODE XREF: sub_67DDCD20+58j
					; sub_67DDCD20+66j
		lea	esi, [esp+3Ch+var_28]
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DDC730

loc_67DDCE26:				; CODE XREF: sub_67DDCD20+148j
		mov	[esp+3Ch+var_3C], esi
		call	sub_67DDB560
		test	eax, eax
		jnz	short loc_67DDCE50

loc_67DDCE32:				; CODE XREF: sub_67DDCD20+14Aj
		mov	eax, [ebx+14h]
		mov	eax, [eax+8]
		test	eax, eax
		jnz	loc_67DDCD8C
		mov	eax, [esp+3Ch+var_18]
		mov	[ebx+10h], eax
		jmp	loc_67DDCD8C
; ---------------------------------------------------------------------------
		align 10h

loc_67DDCE50:				; CODE XREF: sub_67DDCD20+110j
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_3C], esi
		call	dword ptr [eax+14h]
		mov	[esp+3Ch+var_3C], esi
		call	sub_67DDB560
		test	eax, eax
		jnz	short loc_67DDCE26
		jmp	short loc_67DDCE32
; ---------------------------------------------------------------------------
		align 10h

loc_67DDCE70:				; CODE XREF: sub_67DDCD20+2Bj
		lea	edx, [ebx+10h]
		mov	[esp+3Ch+var_30], edx
		movzx	edx, byte ptr [ebx]
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_34], edx
		mov	eax, [ebx+0Ch]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFE060
		jmp	loc_67DDCD51
sub_67DDCD20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDCEA0	proc near		; DATA XREF: .rdata:67E21E50o
					; .rdata:67E21E74o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_67DDCD20
		mov	eax, [ebx+8]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E00E50
		cmp	al, 7Dh
		jnz	short loc_67DDCED6
		add	dword ptr [ebx+8], 1
		or	byte ptr [ebx+1], 1

loc_67DDCED6:				; CODE XREF: sub_67DDCEA0+2Cj
		add	esp, 18h
		pop	ebx
		retn
sub_67DDCEA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDCEE0	proc near		; DATA XREF: .rdata:67E21E04o
					; .rdata:67E21E24o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_67DDCD20
		mov	eax, [ebx+8]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx+4]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E00E50
		cmp	al, 29h
		jnz	short loc_67DDCF16
		add	dword ptr [ebx+8], 1
		or	byte ptr [ebx+1], 1

loc_67DDCF16:				; CODE XREF: sub_67DDCEE0+2Cj
		add	esp, 18h
		pop	ebx
		retn
sub_67DDCEE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDCF20	proc near		; CODE XREF: sub_67DDCF20+173p
					; sub_67DDD510+A5p

Size		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_94		= byte ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_73		= byte ptr -73h
var_72		= byte ptr -72h
var_71		= byte ptr -71h
var_70		= dword	ptr -70h
var_68		= dword	ptr -68h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= byte ptr -48h
var_47		= byte ptr -47h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		mov	edi, eax
		push	esi
		push	ebx
		mov	ebx, edx
		sub	esp, 0ACh
		mov	edx, [esp+0BCh+arg_C]
		mov	[esp+0BCh+var_80], ecx
		test	edx, edx
		setz	[esp+0BCh+var_71]
		test	ecx, ecx
		movzx	eax, [esp+0BCh+var_71]
		setnz	[esp+0BCh+var_73]
		and	al, [esp+0BCh+var_73]
		lea	edx, [edi+10h]
		mov	[esp+0BCh+var_70], edx
		mov	[esp+0BCh+var_72], al
		nop
		lea	esi, [esi+0]

loc_67DDCF60:				; CODE XREF: sub_67DDCF20+37Dj
		mov	[esp+0BCh+Size], ebx
		call	sub_67DDB560
		test	eax, eax
		mov	esi, eax
		jz	loc_67DDD2CA

loc_67DDCF72:				; CODE XREF: sub_67DDCF20+3A4j
		mov	[esp+0BCh+Size], esi
		call	dbus_type_is_container
		test	eax, eax
		jz	loc_67DDD2E0
		cmp	[esp+0BCh+var_72], 0
		jz	short loc_67DDCF99
		mov	edx, [esp+0BCh+var_80]
		mov	eax, [ebx+10h]
		cmp	eax, [edx+10h]
		jz	loc_67DDD210

loc_67DDCF99:				; CODE XREF: sub_67DDCF20+67j
					; sub_67DDCF20+2F6j
		xor	ebp, ebp

loc_67DDCF9B:				; CODE XREF: sub_67DDCF20+308j
		lea	eax, [esp+0BCh+var_48]
		mov	[esp+0BCh+var_B8], eax
		mov	[esp+0BCh+Size], ebx
		call	sub_67DDC730
		cmp	esi, 61h
		mov	[esp+0BCh+var_78], 0FFFFFFFFh
		mov	[esp+0BCh+var_7C], 0FFFFFFFFh
		jz	loc_67DDD405

loc_67DDCFC4:				; CODE XREF: sub_67DDCF20+503j
		mov	edx, [esp+0BCh+var_40]
		mov	eax, [esp+0BCh+var_44]
		mov	[esp+0BCh+var_8C], edx
		mov	[esp+0BCh+var_20], edx
		mov	[esp+0BCh+var_88], eax
		mov	[esp+0BCh+Size], eax
		call	sub_67E01770
		lea	edx, [esp+0BCh+var_20]
		mov	[esp+0BCh+var_B8], edx
		mov	[esp+0BCh+Size], eax
		call	sub_67DDB140
		mov	eax, [esp+0BCh+var_20]
		mov	edx, [esp+0BCh+var_8C]
		sub	eax, edx
		or	ebp, [esp+0BCh+arg_C]
		mov	[esp+0BCh+var_90], eax
		mov	[esp+0BCh+var_84], ebp
		jz	loc_67DDD3F1

loc_67DDD018:				; CODE XREF: sub_67DDCF20+4E0j
		movzx	ebp, byte ptr [edi+2]
		lea	edx, [esp+0BCh+var_68]
		mov	[esp+0BCh+var_B4], edx ; int
		mov	edx, [esp+0BCh+var_8C]
		mov	ecx, [esp+0BCh+var_88] ; int
		mov	[esp+0BCh+var_B0], 0 ; int
		mov	eax, ebp
		shr	al, 1
		mov	ebp, eax
		mov	eax, [esp+0BCh+var_90]
		mov	[esp+0BCh+Size], edx ; int
		mov	edx, esi
		and	ebp, 1
		mov	[esp+0BCh+var_B8], eax ; size_t
		mov	eax, edi
		call	sub_67DDBB80
		test	eax, eax
		jz	loc_67DDD48A
		xor	eax, eax
		mov	edx, [esp+0BCh+arg_4]
		cmp	[esp+0BCh+var_84], 0
		mov	ecx, [esp+0BCh+var_80]
		setnz	al
		mov	[esp+0BCh+var_B0], eax
		mov	eax, [esp+0BCh+arg_8]
		mov	[esp+0BCh+var_B8], edx
		lea	edx, [esp+0BCh+var_48]
		mov	[esp+0BCh+var_B4], eax
		mov	eax, [esp+0BCh+arg_0]
		mov	[esp+0BCh+Size], eax
		lea	eax, [esp+0BCh+var_68]
		call	sub_67DDCF20
		test	eax, eax
		jz	loc_67DDD48A
		mov	eax, [esp+0BCh+var_84]
		test	eax, eax
		jz	loc_67DDD428

loc_67DDD0AC:				; CODE XREF: sub_67DDCF20+517j
		movzx	edx, byte ptr [edi+2]
		lea	eax, [esp+0BCh+var_68]
		mov	[esp+0BCh+var_B8], eax
		mov	[esp+0BCh+Size], edi
		shr	dl, 1
		and	edx, 1
		mov	[esp+0BCh+var_94], dl
		call	sub_67DDC490
		movzx	edx, [esp+0BCh+var_94]
		test	eax, eax
		jz	loc_67DDD48A
		cmp	[esp+0BCh+var_73], 0
		jz	loc_67DDD293
		mov	eax, ebp
		test	al, al
		jnz	loc_67DDD293
		cmp	esi, 61h
		xchg	ax, ax
		jnz	loc_67DDD293
		test	dl, dl
		jz	loc_67DDD293
		mov	esi, [esp+0BCh+arg_8]
		test	esi, esi
		jz	loc_67DDD293
		xor	eax, eax
		cmp	byte ptr [esp+0BCh+var_68+1], 61h
		mov	[esp+0BCh+var_AC], offset aWriter_get_arr ; "writer_get_array_len"
		mov	[esp+0BCh+var_B0], 867h
		setz	al
		mov	[esp+0BCh+Size], eax
		mov	[esp+0BCh+var_B4], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0BCh+var_B8], offset aWriterContaine ; "writer->container_type == DBUS_TYPE_ARR"...
		call	sub_67DFAE70
		mov	eax, [esp+0BCh+var_7C]
		mov	edx, [esp+0BCh+var_80]
		mov	ebp, [esp+0BCh+var_58]
		add	eax, 3
		add	ebp, [edx+10h]
		and	eax, 0FFFFFFFCh
		sub	ebp, [esp+0BCh+var_54]
		add	ebp, [esp+0BCh+arg_4]
		sub	ebp, [esp+0BCh+var_78]
		cmp	[esp+0BCh+var_7C], eax
		mov	[esp+0BCh+var_AC], offset aWriter_write_r ; "writer_write_reader_helper"
		mov	[esp+0BCh+var_B0], 0A04h
		setz	al
		movzx	eax, al
		mov	[esp+0BCh+Size], eax
		mov	[esp+0BCh+var_B4], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0BCh+var_B8], offset a_dbus_align__0 ; "_DBUS_ALIGN_VALUE (fixup.len_pos_in_rea"...
		call	sub_67DFAE70
		mov	eax, [esp+0BCh+var_7C]
		mov	[esp+0BCh+var_B4], 4
		mov	[esp+0BCh+var_B8], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+0BCh+Size], eax
		call	sub_67E01280
		mov	[esp+0BCh+var_B8], eax
		movzx	eax, byte ptr [ebx]
		mov	[esp+0BCh+Size], eax
		call	sub_67DFC500
		cmp	ebp, eax
		jz	loc_67DDD293
		mov	[esp+0BCh+Size], 8 ; Size
		call	dbus_malloc
		test	eax, eax
		mov	esi, eax
		jz	loc_67DDD497
		mov	edx, [esp+0BCh+var_7C]
		mov	[eax+4], ebp
		mov	[eax], edx
		mov	[esp+0BCh+var_B8], eax
		mov	eax, [esp+0BCh+arg_8]
		mov	[esp+0BCh+Size], eax
		call	sub_67DFBB80
		test	eax, eax
		jnz	short loc_67DDD230
		mov	[esp+0BCh+Size], esi
		call	dbus_free
		jmp	loc_67DDD497
; ---------------------------------------------------------------------------
		align 10h

loc_67DDD210:				; CODE XREF: sub_67DDCF20+73j
		mov	eax, [ebx+4]
		cmp	eax, [edx+4]
		jnz	loc_67DDCF99
		mov	eax, [ebx+8]
		cmp	eax, [edx+8]
		setz	al
		movzx	ebp, al
		jmp	loc_67DDCF9B
; ---------------------------------------------------------------------------
		align 10h

loc_67DDD230:				; CODE XREF: sub_67DDCF20+2DBj
		mov	edx, [esp+0BCh+var_7C]
		xor	eax, eax
		mov	[esp+0BCh+var_AC], offset aAppend_fixup	; "append_fixup"
		mov	[esp+0BCh+var_B0], 975h
		mov	[esp+0BCh+var_B4], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0BCh+var_B8], offset aFLen_pos_in_re ; "f->len_pos_in_reader == fixup->len_pos_"...
		cmp	edx, [esi]
		setz	al
		mov	[esp+0BCh+Size], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+0BCh+var_AC], offset aAppend_fixup	; "append_fixup"
		mov	[esp+0BCh+var_B0], 976h
		mov	[esp+0BCh+var_B4], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0BCh+var_B8], offset aFNew_lenFixupN ; "f->new_len	== fixup->new_len"
		cmp	ebp, [esi+4]
		setz	al
		mov	[esp+0BCh+Size], eax
		call	sub_67DFAE70

loc_67DDD293:				; CODE XREF: sub_67DDCF20+1BBj
					; sub_67DDCF20+1C5j ...
		mov	[esp+0BCh+Size], ebx
		call	sub_67DDB560
		test	eax, eax
		jz	loc_67DDCF60
		mov	edx, [ebx+14h]
		mov	[esp+0BCh+var_B8], eax
		mov	[esp+0BCh+Size], ebx
		call	dword ptr [edx+14h]
		mov	[esp+0BCh+Size], ebx
		call	sub_67DDB560
		mov	[esp+0BCh+Size], ebx
		call	sub_67DDB560
		test	eax, eax
		mov	esi, eax
		jnz	loc_67DDCF72

loc_67DDD2CA:				; CODE XREF: sub_67DDCF20+4Cj
		add	esp, 0ACh
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDD2E0:				; CODE XREF: sub_67DDCF20+5Cj
		mov	[esp+0BCh+Size], esi
		call	dbus_type_is_basic
		mov	[esp+0BCh+var_AC], offset aWriter_write_r ; "writer_write_reader_helper"
		mov	[esp+0BCh+var_B0], 0A1Dh
		mov	[esp+0BCh+var_B4], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0BCh+var_B8], offset aDbus_type_is_b ; "dbus_type_is_basic	(current_type)"
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+0BCh+Size], eax
		call	sub_67DFAE70
		mov	[esp+0BCh+var_AC], offset a_dbus_type_r_3 ; "_dbus_type_reader_read_basic"
		mov	[esp+0BCh+var_B0], 35Eh
		mov	[esp+0BCh+var_B4], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0BCh+var_B8], offset aReaderKlassTyp ; "!reader->klass->types_only"
		mov	eax, [ebx+14h]
		mov	ecx, [eax+8]
		test	ecx, ecx
		setz	al
		movzx	eax, al
		mov	[esp+0BCh+Size], eax
		call	sub_67DFAE70
		mov	[esp+0BCh+Size], ebx
		call	sub_67DDB560
		mov	[esp+0BCh+var_A8], 0
		movzx	edx, byte ptr [ebx]
		mov	[esp+0BCh+var_AC], edx
		lea	edx, [esp+0BCh+var_2C]
		mov	[esp+0BCh+var_B0], edx
		mov	[esp+0BCh+var_B4], eax
		mov	eax, [ebx+10h]
		mov	[esp+0BCh+var_B8], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+0BCh+Size], eax
		call	sub_67DFE240
		cmp	[esp+0BCh+var_71], 0
		jnz	loc_67DDD440

loc_67DDD391:				; CODE XREF: sub_67DDCF20+52Dj
		movzx	eax, byte ptr [edi+2]
		test	al, 1
		jnz	short loc_67DDD3BC
		mov	edx, [edi+4]
		test	edx, edx
		jz	short loc_67DDD3BC
		mov	[esp+0BCh+var_B8], 1
		mov	[esp+0BCh+Size], edx
		call	sub_67E08BC0
		test	eax, eax
		jz	loc_67DDD48A
		movzx	eax, byte ptr [edi+2]

loc_67DDD3BC:				; CODE XREF: sub_67DDCF20+477j
					; sub_67DDCF20+47Ej
		test	al, 2
		jnz	loc_67DDD452

loc_67DDD3C4:				; CODE XREF: sub_67DDCF20+564j
		mov	edx, esi
		mov	eax, edi
		call	sub_67DDB7F0
		test	eax, eax
		jnz	loc_67DDD293
		mov	[esp+0BCh+var_B4], 90Bh
		mov	[esp+0BCh+var_B8], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0BCh+Size], offset	aFailedToWriteT	; "failed to write typecode after prealloc"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDD3F1:				; CODE XREF: sub_67DDCF20+F2j
		mov	ecx, [esp+0BCh+var_80]
		lea	edx, [esp+0BCh+var_48]
		mov	eax, edi
		call	sub_67DDC9D0
		jmp	loc_67DDD018
; ---------------------------------------------------------------------------

loc_67DDD405:				; CODE XREF: sub_67DDCF20+9Ej
		movzx	eax, [esp+0BCh+var_47]
		mov	edx, [esp+0BCh+var_30]
		shr	al, 1
		mov	[esp+0BCh+var_78], edx
		and	eax, 7
		sub	edx, 4
		sub	edx, eax
		mov	[esp+0BCh+var_7C], edx
		jmp	loc_67DDCFC4
; ---------------------------------------------------------------------------

loc_67DDD428:				; CODE XREF: sub_67DDCF20+186j
		mov	ecx, [esp+0BCh+var_80]
		lea	edx, [esp+0BCh+var_48]
		mov	eax, edi
		call	sub_67DDC9D0
		jmp	loc_67DDD0AC
; ---------------------------------------------------------------------------
		align 10h

loc_67DDD440:				; CODE XREF: sub_67DDCF20+46Bj
		mov	ecx, [esp+0BCh+var_80]
		mov	edx, ebx
		mov	eax, edi
		call	sub_67DDC9D0
		jmp	loc_67DDD391
; ---------------------------------------------------------------------------

loc_67DDD452:				; CODE XREF: sub_67DDCF20+49Ej
		mov	eax, [esp+0BCh+var_70]
		lea	edx, [esp+0BCh+var_2C]
		mov	[esp+0BCh+var_A8], eax
		movzx	eax, byte ptr [edi]
		mov	[esp+0BCh+var_B0], edx
		mov	[esp+0BCh+var_B4], esi
		mov	[esp+0BCh+var_AC], eax
		mov	eax, [edi+10h]
		mov	[esp+0BCh+var_B8], eax
		mov	eax, [edi+0Ch]
		mov	[esp+0BCh+Size], eax
		call	sub_67DFCC80
		test	eax, eax
		jnz	loc_67DDD3C4

loc_67DDD48A:				; CODE XREF: sub_67DDCF20+133j
					; sub_67DDCF20+17Aj ...
		mov	edx, [esp+0BCh+arg_8]
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DDD4F7

loc_67DDD497:				; CODE XREF: sub_67DDCF20+2B7j
					; sub_67DDCF20+2E5j
		mov	eax, [esp+0BCh+arg_8]
		mov	[esp+0BCh+Size], eax
		call	sub_67DFB910
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DDD4E8
		mov	edi, [esp+0BCh+arg_8]
		jmp	short loc_67DDD4CE
; ---------------------------------------------------------------------------

loc_67DDD4B5:				; CODE XREF: sub_67DDCF20+5B3j
		mov	eax, [ebx+8]
		mov	[esp+0BCh+Size], eax
		call	dbus_free
		mov	[esp+0BCh+Size], ebx
		call	sub_67DFBED0
		test	esi, esi
		jz	short loc_67DDD4E8
		mov	ebx, esi

loc_67DDD4CE:				; CODE XREF: sub_67DDCF20+593j
		mov	esi, [ebx+4]
		cmp	esi, [edi]
		jnz	short loc_67DDD4B5
		mov	eax, [ebx+8]
		mov	[esp+0BCh+Size], eax
		call	dbus_free
		mov	[esp+0BCh+Size], ebx
		call	sub_67DFBED0

loc_67DDD4E8:				; CODE XREF: sub_67DDCF20+58Aj
					; sub_67DDCF20+5AAj
		mov	edx, [esp+0BCh+arg_8]
		xor	eax, eax
		mov	dword ptr [edx], 0

loc_67DDD4F7:				; CODE XREF: sub_67DDCF20+575j
		add	esp, 0ACh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DDCF20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDD510	proc near		; CODE XREF: .text:67DDD6A2p
					; sub_67DDD6B0+11Bp

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, [esp+5Ch+arg_0]
		mov	ecx, [esp+5Ch+arg_8]
		mov	eax, [ebx]
		mov	[esp+5Ch+var_48], ecx
		mov	[esp+5Ch+var_3C], eax
		mov	eax, [ebx+4]
		mov	[esp+5Ch+var_38], eax
		mov	edi, [ebx+8]
		mov	[esp+5Ch+var_34], edi
		mov	edx, [ebx+0Ch]
		mov	[esp+5Ch+var_30], edx
		mov	esi, [ebx+10h]
		mov	[esp+5Ch+var_2C], esi
		mov	edx, [ebx+14h]
		mov	[esp+5Ch+var_28], edx
		mov	edx, [ebx+18h]
		mov	[esp+5Ch+var_24], edx
		mov	edx, [ebx+1Ch]
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_20], edx
		call	sub_67E00CE0
		mov	[esp+5Ch+var_40], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		mov	ecx, [esp+5Ch+var_48]
		mov	[esp+5Ch+var_44], eax
		movzx	eax, byte ptr [ebx+2]
		mov	edx, eax
		shr	dl, 1
		mov	ebp, edx
		and	ebp, 1
		test	ecx, ecx
		jz	short loc_67DDD590
		and	eax, 0FFFFFFFDh
		mov	[ebx+2], al

loc_67DDD590:				; CODE XREF: sub_67DDD510+78j
		mov	eax, [esp+5Ch+arg_14]
		mov	edx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_50], 0
		mov	[esp+5Ch+var_54], eax
		mov	eax, [esp+5Ch+arg_10]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_5C], eax
		mov	eax, ebx
		call	sub_67DDCF20
		test	eax, eax
		jnz	short loc_67DDD620
		test	byte ptr [ebx+2], 1
		jz	short loc_67DDD640

loc_67DDD5C4:				; CODE XREF: sub_67DDD510+152j
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		mov	[esp+5Ch+var_58], esi
		sub	eax, [esp+5Ch+var_44]
		mov	[esp+5Ch+var_54], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E02D80
		mov	eax, [esp+5Ch+var_3C]
		mov	[ebx], eax
		mov	eax, [esp+5Ch+var_38]
		mov	[ebx+8], edi
		mov	[ebx+4], eax
		mov	eax, [esp+5Ch+var_30]
		mov	[ebx+10h], esi
		mov	[ebx+0Ch], eax
		mov	eax, [esp+5Ch+var_28]
		mov	[ebx+14h], eax
		mov	eax, [esp+5Ch+var_24]
		mov	[ebx+18h], eax
		mov	eax, [esp+5Ch+var_20]
		mov	[ebx+1Ch], eax
		add	esp, 4Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDD620:				; CODE XREF: sub_67DDD510+ACj
		movzx	eax, byte ptr [ebx+2]
		and	ebp, 1
		add	ebp, ebp
		and	eax, 0FFFFFFFDh
		or	eax, ebp
		mov	[ebx+2], al
		add	esp, 4Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDD640:				; CODE XREF: sub_67DDD510+B2j
		mov	eax, [ebx+4]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		mov	[esp+5Ch+var_58], edi
		sub	eax, [esp+5Ch+var_40]
		mov	[esp+5Ch+var_54], eax
		mov	eax, [ebx+4]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E02D80
		jmp	loc_67DDD5C4
sub_67DDD510	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	eax, [esp+34h]
		mov	dword ptr [esp+14h], 0
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	[esp+4], eax
		mov	eax, [esp+30h]
		mov	dword ptr [esp+8], 0
		mov	[esp], eax
		call	sub_67DDD510
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDD6B0	proc near		; CODE XREF: sub_67DDD930+D2p
					; sub_67DDE050+202p

var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_70		= dword	ptr -70h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_5B		= byte ptr -5Bh
var_5A		= byte ptr -5Ah
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		mov	edi, ecx
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 8Ch
		xor	eax, eax
		test	ecx, ecx
		setnz	al
		mov	[esp+9Ch+var_9C], eax
		mov	[esp+9Ch+var_8C], offset aReplacement_bl ; "replacement_block_replace"
		mov	[esp+9Ch+var_90], 486h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aRealign_rootNu ; "realign_root != NULL"
		call	sub_67DFAE70
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67E00CE0
		mov	[esp+9Ch+var_60], eax
		mov	eax, [edi]
		mov	[esp+9Ch+var_3C], eax
		mov	eax, [edi+4]
		mov	[esp+9Ch+var_38], eax
		mov	eax, [edi+8]
		mov	[esp+9Ch+var_34], eax
		mov	eax, [edi+0Ch]
		mov	[esp+9Ch+var_30], eax
		mov	eax, [edi+10h]
		mov	[esp+9Ch+var_2C], eax
		mov	eax, [edi+14h]
		mov	[esp+9Ch+var_28], eax
		mov	eax, [edi+18h]
		lea	edi, [esp+9Ch+var_20]
		mov	[esp+9Ch+var_9C], ebx
		mov	[esp+9Ch+var_24], eax
		call	sub_67E00CE0
		movzx	edx, byte ptr [esp+9Ch+var_3C]
		or	[esp+9Ch+var_5A], 3
		mov	[esp+9Ch+var_5B], 0
		mov	[esp+9Ch+var_5C], dl
		mov	edx, [esp+9Ch+var_38]
		mov	[esp+9Ch+var_8C], offset aReplacement_bl ; "replacement_block_replace"
		mov	[esp+9Ch+var_4C], eax
		mov	eax, [esp+9Ch+var_2C]
		mov	[esp+9Ch+var_90], 497h
		mov	[esp+9Ch+var_58], edx
		mov	edx, [esp+9Ch+var_34]
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aRealign_reader ; "realign_reader.value_pos <=	reader->val"...
		mov	[esp+9Ch+var_50], ebx
		mov	[esp+9Ch+var_54], edx
		cmp	eax, [esi+10h]
		setle	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	[esp+9Ch+var_20], 0
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67E00CE0
		mov	edx, [ebx+14h]
		mov	[esp+9Ch+var_88], edi
		mov	[esp+9Ch+var_94], esi
		mov	[esp+9Ch+var_90], edx
		sub	eax, edx
		mov	[esp+9Ch+var_8C], eax
		lea	eax, [esp+9Ch+var_3C]
		mov	[esp+9Ch+var_98], eax
		lea	eax, [esp+9Ch+var_5C]
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DDD510
		test	eax, eax
		jz	short loc_67DDD81E
		mov	edx, [esi+10h]
		mov	eax, [esi+0Ch]
		mov	ebp, [esp+9Ch+var_2C]
		mov	[esp+9Ch+var_9C], ebx
		mov	[esp+9Ch+var_64], edx
		mov	[esp+9Ch+var_70], eax
		sub	ebp, edx
		call	sub_67E00CE0
		mov	edx, [esp+9Ch+var_64]
		mov	[esp+9Ch+var_88], ebp ;	int
		mov	[esp+9Ch+var_8C], edx ;	int
		mov	edx, [esp+9Ch+var_70]
		mov	[esp+9Ch+var_90], edx ;	int
		sub	eax, [ebx+14h]
		mov	[esp+9Ch+var_94], eax ;	size_t
		mov	ecx, [ebx+14h]
		mov	[esp+9Ch+var_9C], ebx ;	int
		mov	[esp+9Ch+var_98], ecx ;	int
		call	sub_67E053E0
		test	eax, eax
		jnz	short loc_67DDD887

loc_67DDD81E:				; CODE XREF: sub_67DDD6B0+122j
		mov	eax, [esp+9Ch+var_60]
		mov	[esp+9Ch+var_9C], ebx
		mov	[esp+9Ch+var_98], eax
		call	sub_67E06F60
		mov	[esp+9Ch+var_9C], edi
		call	sub_67DFB910
		test	eax, eax
		mov	ebx, eax
		jnz	short loc_67DDD85E
		jmp	loc_67DDD920
; ---------------------------------------------------------------------------

loc_67DDD841:				; CODE XREF: sub_67DDD6B0+1B5j
		mov	eax, [ebx+8]
		mov	[esp+9Ch+var_9C], eax
		call	dbus_free
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67DFBED0
		test	esi, esi
		jz	loc_67DDD920
		mov	ebx, esi

loc_67DDD85E:				; CODE XREF: sub_67DDD6B0+18Aj
		mov	esi, [ebx+4]
		cmp	esi, [esp+9Ch+var_20]
		jnz	short loc_67DDD841
		mov	eax, [ebx+8]
		mov	[esp+9Ch+var_9C], eax
		call	dbus_free
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67DFBED0
		xor	eax, eax

loc_67DDD87C:				; CODE XREF: sub_67DDD6B0+272j
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDD887:				; CODE XREF: sub_67DDD6B0+16Cj
		mov	[esp+9Ch+var_9C], edi
		call	sub_67DFB910
		test	eax, eax
		mov	ebx, eax
		jnz	short loc_67DDD8D2
		jmp	short loc_67DDD910
; ---------------------------------------------------------------------------

loc_67DDD897:				; CODE XREF: sub_67DDD6B0+229j
		mov	eax, [ebx+8]
		movzx	edx, byte ptr [esi]
		mov	[esp+9Ch+var_90], edx
		mov	edx, [eax+4]
		mov	[esp+9Ch+var_94], edx
		mov	eax, [eax]
		mov	[esp+9Ch+var_98], eax
		mov	eax, [esi+0Ch]
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFD1D0
		mov	eax, [ebx+8]
		mov	[esp+9Ch+var_9C], eax
		call	dbus_free
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67DFBED0
		test	edi, edi
		jz	short loc_67DDD910
		mov	ebx, edi

loc_67DDD8D2:				; CODE XREF: sub_67DDD6B0+1E3j
		mov	edi, [ebx+4]
		cmp	edi, [esp+9Ch+var_20]
		jnz	short loc_67DDD897
		mov	eax, [ebx+8]
		movzx	edx, byte ptr [esi]
		mov	[esp+9Ch+var_90], edx
		mov	edx, [eax+4]
		mov	[esp+9Ch+var_94], edx
		mov	eax, [eax]
		mov	[esp+9Ch+var_98], eax
		mov	eax, [esi+0Ch]
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFD1D0
		mov	eax, [ebx+8]
		mov	[esp+9Ch+var_9C], eax
		call	dbus_free
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67DFBED0

loc_67DDD910:				; CODE XREF: sub_67DDD6B0+1E5j
					; sub_67DDD6B0+21Ej
		add	esp, 8Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDD920:				; CODE XREF: sub_67DDD6B0+18Cj
					; sub_67DDD6B0+1A6j
		xor	eax, eax
		jmp	loc_67DDD87C
sub_67DDD6B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDD930	proc near		; CODE XREF: sub_67DD8410+104p

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_34		= byte ptr -34h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 5Ch
		xor	eax, eax
		mov	[esp+5Ch+var_8], edi
		mov	edi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_C], esi
		mov	esi, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_10], ebx
		lea	ebx, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_4], ebp
		test	edi, edi
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_type__10 ; "_dbus_type_reader_delete"
		mov	[esp+5Ch+var_50], 583h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aRealign_rootNu ; "realign_root != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset a_dbus_type__10 ; "_dbus_type_reader_delete"
		mov	[esp+5Ch+var_50], 584h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aReaderKlassArr ; "reader->klass == &array_reader_class"
		cmp	dword ptr [esi+14h], offset off_67E21CE8
		setz	al
		xor	ebp, ebp
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DDD9D6

loc_67DDD9C0:				; CODE XREF: sub_67DDD930+E7j
					; sub_67DDD930+F8j
		mov	eax, ebp
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_67DDD9D6:				; CODE XREF: sub_67DDD930+8Ej
		mov	eax, [esi+10h]
		mov	[esp+5Ch+var_5C], ebx
		mov	edx, eax
		sar	edx, 1Fh
		shr	edx, 1Dh
		add	eax, edx
		and	eax, 7
		sub	eax, edx
		mov	[esp+5Ch+var_20], eax
		mov	[esp+5Ch+var_58], eax
		call	sub_67E087C0
		test	eax, eax
		jz	short loc_67DDDA20
		mov	ecx, edi
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DDD6B0
		mov	[esp+5Ch+var_5C], ebx
		test	eax, eax
		setnz	al
		movzx	ebp, al
		call	sub_67E02BF0
		jmp	short loc_67DDD9C0
; ---------------------------------------------------------------------------
		align 10h

loc_67DDDA20:				; CODE XREF: sub_67DDD930+CAj
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E02BF0
		jmp	short loc_67DDD9C0
sub_67DDD930	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDDA30	proc near		; CODE XREF: dbus_message_iter_get_fixed_array+105j
					; sub_67DE44A0+16Ep

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_3C], offset a_dbus_type__11 ; "_dbus_type_reader_read_fixed_multi"
		mov	edi, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_40], 399h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aReaderKlassTyp ; "!reader->klass->types_only"
		mov	eax, [ebx+14h]
		mov	ecx, [eax+8]
		test	ecx, ecx
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+4Ch+var_3C], offset a_dbus_type__11 ; "_dbus_type_reader_read_fixed_multi"
		mov	[esp+4Ch+var_40], 39Ah
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aReaderKlassArr ; "reader->klass == &array_reader_class"
		cmp	dword ptr [ebx+14h], offset off_67E21CE8
		setz	al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx+4]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFD040
		mov	[esp+4Ch+var_3C], offset a_dbus_type__11 ; "_dbus_type_reader_read_fixed_multi"
		mov	[esp+4Ch+var_40], 39Fh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aElement_typeDb ; "element_type != DBUS_TYPE_INVALID"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], esi
		call	dbus_type_is_fixed
		mov	[esp+4Ch+var_3C], offset a_dbus_type__11 ; "_dbus_type_reader_read_fixed_multi"
		mov	[esp+4Ch+var_40], 3A0h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aDbus_type_is_f ; "dbus_type_is_fixed (element_type)"
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], esi
		call	sub_67DFC5E0
		mov	[esp+4Ch+var_3C], offset a_dbus_type__11 ; "_dbus_type_reader_read_fixed_multi"
		mov	[esp+4Ch+var_40], 3A4h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aReaderValue__0 ; "reader->value_pos >= reader->u.array.st"...
		mov	ebp, eax
		mov	eax, [ebx+10h]
		cmp	eax, [ebx+18h]
		setnl	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+1]
		mov	esi, [ebx+18h]
		mov	[esp+4Ch+var_3C], offset aArray_reader_g ; "array_reader_get_array_len"
		mov	[esp+4Ch+var_40], 0D4h
		shr	al, 1
		and	eax, 7
		sub	esi, 4
		sub	esi, eax
		lea	eax, [esi+3]
		and	eax, 0FFFFFFFCh
		cmp	esi, eax
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset a_dbus_align__1 ; "_DBUS_ALIGN_VALUE (len_pos,	4) == (unsi"...
		call	sub_67DFAE70
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_44], 4
		mov	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E01280
		mov	[esp+4Ch+var_48], eax
		movzx	eax, byte ptr [ebx]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFC500
		mov	[esp+4Ch+var_3C], offset aArray_reader_g ; "array_reader_get_array_len"
		mov	[esp+4Ch+var_40], 0DDh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aReaderU_array_ ; "reader->u.array.start_pos -	len_pos	- 4"...
		mov	edx, [ebx+18h]
		mov	[esp+4Ch+var_20], eax
		sub	edx, esi
		cmp	edx, 0Bh
		setle	dl
		movzx	edx, dl
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		mov	esi, [ebx+18h]
		mov	eax, [esp+4Ch+var_20]
		add	esi, eax
		sub	esi, [ebx+10h]
		mov	[esp+4Ch+var_3C], offset a_dbus_type__11 ; "_dbus_type_reader_read_fixed_multi"
		mov	[esp+4Ch+var_40], 3AFh
		cmp	esi, eax
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aRemaining_lenT ; "remaining_len <= total_len"
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		test	esi, esi
		jnz	loc_67DDDCA0
		mov	dword ptr [edi], 0

loc_67DDDC53:				; CODE XREF: sub_67DDDA30+288j
		mov	edx, esi
		mov	eax, esi
		mov	ecx, [esp+4Ch+arg_8]
		sar	edx, 1Fh
		idiv	ebp
		mov	[ecx], eax
		xor	eax, eax
		test	edx, edx
		setz	al
		mov	[esp+4Ch+var_3C], offset a_dbus_type__11 ; "_dbus_type_reader_read_fixed_multi"
		mov	[esp+4Ch+var_40], 3BAh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aRemaining_lenA ; "(remaining_len % alignment)	== 0"
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDDCA0:				; CODE XREF: sub_67DDDA30+217j
		mov	[esp+4Ch+var_44], esi
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E01280
		mov	[edi], eax
		jmp	short loc_67DDDC53
sub_67DDDA30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDDCC0	proc near		; DATA XREF: .rdata:67E21CFCo

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_38		= byte ptr -38h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, [esp+5Ch+arg_0]
		movzx	eax, byte ptr [ebx+1]
		mov	edi, [ebx+18h]
		mov	[esp+5Ch+var_4C], offset aArray_reader_g ; "array_reader_get_array_len"
		mov	[esp+5Ch+var_50], 0D4h
		shr	al, 1
		and	eax, 7
		lea	esi, [edi-4]
		sub	esi, eax
		lea	eax, [esi+3]
		and	eax, 0FFFFFFFCh
		cmp	esi, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset a_dbus_align__1 ; "_DBUS_ALIGN_VALUE (len_pos,	4) == (unsi"...
		call	sub_67DFAE70
		mov	[esp+5Ch+var_54], 4
		mov	[esp+5Ch+var_58], esi
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E01280
		mov	[esp+5Ch+var_58], eax
		movzx	eax, byte ptr [ebx]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFC500
		mov	[esp+5Ch+var_4C], offset aArray_reader_g ; "array_reader_get_array_len"
		mov	[esp+5Ch+var_50], 0DDh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aReaderU_array_ ; "reader->u.array.start_pos -	len_pos	- 4"...
		mov	edx, [ebx+18h]
		mov	ebp, eax
		xor	eax, eax
		lea	edi, [ebp+edi+0]
		sub	edx, esi
		cmp	edx, 0Bh
		setle	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset aArray_reader_n ; "array_reader_next"
		mov	[esp+5Ch+var_50], 230h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aReaderValue__1 ; "reader->value_pos <	end_pos"
		cmp	[ebx+10h], edi
		setl	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset aArray_reader_n ; "array_reader_next"
		mov	[esp+5Ch+var_50], 231h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aReaderValue__0 ; "reader->value_pos >= reader->u.array.st"...
		mov	eax, [ebx+10h]
		cmp	eax, [ebx+18h]
		setnl	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+4]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFD040
		cmp	eax, 65h
		jz	loc_67DDDE70
		jg	short loc_67DDDE62
		cmp	eax, 61h
		jz	loc_67DDDEB2

loc_67DDDDFD:				; CODE XREF: sub_67DDDCC0+1AAj
		lea	eax, [ebx+10h]
		mov	[esp+5Ch+var_50], eax
		movzx	eax, byte ptr [ebx]
		mov	[esp+5Ch+var_54], eax
		mov	eax, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFE060
		mov	eax, [ebx+10h]

loc_67DDDE21:				; CODE XREF: sub_67DDDCC0+1D3j
					; sub_67DDDCC0+227j
		cmp	edi, eax
		setnl	al
		movzx	eax, al
		mov	[esp+5Ch+var_4C], offset aArray_reader_n ; "array_reader_next"
		mov	[esp+5Ch+var_50], 265h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aReaderValue__2 ; "reader->value_pos <= end_pos"
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		cmp	[ebx+10h], edi
		jz	loc_67DDDEF0
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDDE62:				; CODE XREF: sub_67DDDCC0+132j
		cmp	eax, 72h
		jz	short loc_67DDDE70
		cmp	eax, 76h
		jnz	short loc_67DDDDFD
		lea	esi, [esi+0]

loc_67DDDE70:				; CODE XREF: sub_67DDDCC0+12Cj
					; sub_67DDDCC0+1A5j
		lea	esi, [esp+5Ch+var_38]
		mov	[esp+5Ch+var_58], esi
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67DDC730

loc_67DDDE80:				; CODE XREF: sub_67DDDCC0+1EDj
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DDB560
		test	eax, eax
		jnz	short loc_67DDDE95

loc_67DDDE8C:				; CODE XREF: sub_67DDDCC0+1F0j
		mov	eax, [esp+5Ch+var_28]
		mov	[ebx+10h], eax
		jmp	short loc_67DDDE21
; ---------------------------------------------------------------------------

loc_67DDDE95:				; CODE XREF: sub_67DDDCC0+1CAj
		mov	[esp+5Ch+var_58], eax
		mov	eax, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_5C], esi
		call	dword ptr [eax+14h]
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DDB560
		test	eax, eax
		jnz	short loc_67DDDE80
		nop
		jmp	short loc_67DDDE8C
; ---------------------------------------------------------------------------

loc_67DDDEB2:				; CODE XREF: sub_67DDDCC0+137j
		mov	eax, [ebx+8]
		movzx	esi, byte ptr [ebx]
		add	eax, 1
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+4]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFD040
		lea	edx, [ebx+10h]
		mov	[esp+5Ch+var_50], edx
		mov	[esp+5Ch+var_54], esi
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFD720
		mov	eax, [ebx+10h]
		jmp	loc_67DDDE21
; ---------------------------------------------------------------------------
		align 10h

loc_67DDDEF0:				; CODE XREF: sub_67DDDCC0+194j
		mov	eax, [ebx+4]
		add	ebx, 8
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E01770
		mov	[esp+5Ch+var_58], ebx
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DDB140
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DDDCC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDDF20	proc near		; DATA XREF: .rdata:67E21CF8o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		movzx	eax, byte ptr [ebx+1]
		mov	edi, [ebx+18h]
		mov	[esp+3Ch+var_2C], offset aArray_reader_g ; "array_reader_get_array_len"
		mov	[esp+3Ch+var_30], 0D4h
		shr	al, 1
		and	eax, 7
		lea	esi, [edi-4]
		sub	esi, eax
		lea	eax, [esi+3]
		and	eax, 0FFFFFFFCh
		cmp	esi, eax
		setz	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset a_dbus_align__1 ; "_DBUS_ALIGN_VALUE (len_pos,	4) == (unsi"...
		call	sub_67DFAE70
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_34], 4
		mov	eax, [ebx+0Ch]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E01280
		mov	[esp+3Ch+var_38], eax
		movzx	eax, byte ptr [ebx]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFC500
		mov	[esp+3Ch+var_2C], offset aArray_reader_g ; "array_reader_get_array_len"
		mov	[esp+3Ch+var_30], 0DDh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReaderU_array_ ; "reader->u.array.start_pos -	len_pos	- 4"...
		mov	edx, [ebx+18h]
		mov	ebp, eax
		xor	eax, eax
		lea	edi, [ebp+edi+0]
		sub	edx, esi
		cmp	edx, 0Bh
		setle	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset aArray_reader_c ; "array_reader_check_finished"
		mov	[esp+3Ch+var_30], 131h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReaderValue__2 ; "reader->value_pos <= end_pos"
		cmp	[ebx+10h], edi
		setle	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset aArray_reader_c ; "array_reader_check_finished"
		mov	[esp+3Ch+var_30], 132h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReaderValue__0 ; "reader->value_pos >= reader->u.array.st"...
		mov	eax, [ebx+10h]
		cmp	eax, [ebx+18h]
		setnl	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		cmp	[ebx+10h], edi
		setz	al
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DDDF20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDE050	proc near		; CODE XREF: sub_67DDA470+21Dp

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_60		= dword	ptr -60h
var_54		= byte ptr -54h
var_53		= byte ptr -53h
var_52		= byte ptr -52h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_34		= byte ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	ebx, [esp+8Ch+arg_0]
		mov	[esp+8Ch+var_7C], offset a_dbus_type_r_8 ; "_dbus_type_reader_set_basic"
		mov	edi, [esp+8Ch+arg_8]
		mov	[esp+8Ch+var_80], 54Ah
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aReaderKlassTyp ; "!reader->klass->types_only"
		mov	eax, [ebx+14h]
		mov	esi, [eax+8]
		test	esi, esi
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	[esp+8Ch+var_7C], offset a_dbus_type_r_8 ; "_dbus_type_reader_set_basic"
		mov	[esp+8Ch+var_80], 54Bh
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aReaderValue_st ; "reader->value_str == realign_root->valu"...
		mov	eax, [ebx+0Ch]
		cmp	eax, [edi+0Ch]
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	[esp+8Ch+var_7C], offset a_dbus_type_r_8 ; "_dbus_type_reader_set_basic"
		mov	[esp+8Ch+var_80], 54Ch
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aReaderValue_po ; "reader->value_pos >= realign_root->valu"...
		mov	eax, [ebx+10h]
		cmp	eax, [edi+10h]
		setnl	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], ebx
		call	sub_67DDB560
		mov	ebp, eax
		mov	[esp+8Ch+var_8C], eax
		call	dbus_type_is_basic
		mov	[esp+8Ch+var_7C], offset a_dbus_type_r_8 ; "_dbus_type_reader_set_basic"
		mov	[esp+8Ch+var_80], 55Ch
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aDbus_type_is_b ; "dbus_type_is_basic (current_type)"
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], ebp
		call	dbus_type_is_fixed
		test	eax, eax
		jnz	loc_67DDE280
		lea	esi, [esp+8Ch+var_34]
		mov	[esp+8Ch+var_7C], offset a_dbus_type_r_8 ; "_dbus_type_reader_set_basic"
		mov	[esp+8Ch+var_80], 565h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aRealign_rootNu ; "realign_root != NULL"
		mov	[esp+8Ch+var_8C], 1
		call	sub_67DFAE70
		mov	[esp+8Ch+var_7C], offset aReader_set_bas ; "reader_set_basic_variable_length"
		mov	[esp+8Ch+var_80], 4F0h
		mov	[esp+8Ch+var_84], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aRealign_rootNu ; "realign_root != NULL"
		mov	[esp+8Ch+var_8C], 1
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], esi
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DDE1D0

loc_67DDE1C1:				; CODE XREF: sub_67DDE050+27Fj
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDE1D0:				; CODE XREF: sub_67DDE050+16Fj
		mov	eax, [ebx+10h]
		mov	[esp+8Ch+var_8C], esi
		mov	edx, eax
		sar	edx, 1Fh
		shr	edx, 1Dh
		add	eax, edx
		and	eax, 7
		sub	eax, edx
		mov	[esp+8Ch+var_20], eax
		mov	[esp+8Ch+var_88], eax
		call	sub_67E087C0
		test	eax, eax
		jz	loc_67DDE2C5
		mov	[esp+8Ch+var_8C], esi
		call	sub_67E00CE0
		movzx	edx, byte ptr [ebx]
		mov	ecx, [ebx+4]
		mov	[esp+8Ch+var_48], esi
		mov	[esp+8Ch+var_54], dl
		mov	edx, [ebx+8]
		mov	[esp+8Ch+var_50], ecx
		mov	[esp+8Ch+var_44], eax
		mov	[esp+8Ch+var_53], 0
		mov	[esp+8Ch+var_4C], edx
		movzx	edx, [esp+8Ch+var_52]
		or	edx, 3
		mov	[esp+8Ch+var_52], dl
		and	edx, 2
		jnz	loc_67DDE2D4

loc_67DDE239:				; CODE XREF: sub_67DDE050+2B2j
		lea	eax, [esp+8Ch+var_54]
		mov	edx, ebp
		call	sub_67DDB7F0
		test	eax, eax
		jz	loc_67DDE31F
		mov	edx, ebx
		mov	ecx, edi
		mov	eax, esi
		call	sub_67DDD6B0
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jz	loc_67DDE308
		mov	[esp+8Ch+var_60], eax
		mov	[esp+8Ch+var_8C], esi
		call	sub_67E02BF0
		mov	eax, [esp+8Ch+var_60]

loc_67DDE276:				; CODE XREF: sub_67DDE050+2CAj
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDE280:				; CODE XREF: sub_67DDE050+FFj
		mov	[esp+8Ch+var_74], 0
		mov	[esp+8Ch+var_78], 0
		movzx	eax, byte ptr [ebx]
		mov	[esp+8Ch+var_84], ebp
		mov	[esp+8Ch+var_7C], eax
		mov	eax, [esp+8Ch+arg_4]
		mov	[esp+8Ch+var_80], eax
		mov	eax, [ebx+10h]
		mov	[esp+8Ch+var_88], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFD880
		add	esp, 7Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDE2C5:				; CODE XREF: sub_67DDE050+1A4j
		mov	[esp+8Ch+var_8C], esi
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67DDE1C1
; ---------------------------------------------------------------------------

loc_67DDE2D4:				; CODE XREF: sub_67DDE050+1E3j
		lea	edx, [esp+8Ch+var_44]
		mov	[esp+8Ch+var_78], edx
		movzx	edx, [esp+8Ch+var_54]
		mov	[esp+8Ch+var_84], ebp
		mov	[esp+8Ch+var_88], eax
		mov	[esp+8Ch+var_8C], esi
		mov	[esp+8Ch+var_7C], edx
		mov	edx, [esp+8Ch+arg_4]
		mov	[esp+8Ch+var_80], edx
		call	sub_67DFCC80
		test	eax, eax
		jnz	loc_67DDE239

loc_67DDE308:				; CODE XREF: sub_67DDE050+210j
		xor	eax, eax
		mov	[esp+8Ch+var_60], eax
		mov	[esp+8Ch+var_8C], esi
		call	sub_67E02BF0
		mov	eax, [esp+8Ch+var_60]
		jmp	loc_67DDE276
; ---------------------------------------------------------------------------

loc_67DDE31F:				; CODE XREF: sub_67DDE050+1F6j
		mov	[esp+8Ch+var_84], 90Bh
		mov	[esp+8Ch+var_88], offset aRBuildWin32l_6 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_8C], offset aFailedToWriteT ; "failed to write typecode after prealloc"
		call	sub_67DFAE30
sub_67DDE050	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDE340	proc near		; CODE XREF: dbus_message_demarshal+296p
					; dbus_signature_validate+42p

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, offset aInvalid_0 ; "Invalid"
		add	edx, 4
		cmp	edx, 3Dh
		ja	short locret_67DDE358
		mov	eax, ds:off_67E22D00[edx*4]

locret_67DDE358:			; CODE XREF: sub_67DDE340+Fj
		rep retn
sub_67DDE340	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DDE360(char	*)
sub_67DDE360	proc near		; CODE XREF: dbus_message_iter_append_basic+230p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 38h
		mov	edx, [esp+3Ch+arg_0]
		test	edx, edx
		jz	short loc_67DDE39A
		lea	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_38], edx ;	char *
		mov	[esp+3Ch+var_3C], ebx ;	int
		call	sub_67E03060
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E00CE0
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_34], eax
		call	sub_67E02000

loc_67DDE39A:				; CODE XREF: sub_67DDE360+Cj
		add	esp, 38h
		pop	ebx
		retn
sub_67DDE360	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDE3A0	proc near		; CODE XREF: sub_67DD94B0+D6Ap
					; DATA XREF: sub_67DD94B0+CEEo	...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_8]
		mov	edi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_validate ; "_dbus_validate_bus_name"
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 454h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart0 ; "start >= 0"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_validate ; "_dbus_validate_bus_name"
		mov	[esp+2Ch+var_20], 455h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen0 ; "len >= 0"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], edi
		call	sub_67E00CE0
		mov	[esp+2Ch+var_1C], offset a_dbus_validate ; "_dbus_validate_bus_name"
		mov	[esp+2Ch+var_20], 456h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart_dbus_str ; "start <= _dbus_string_get_length (str)"
		cmp	eax, ebx
		setnl	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], edi
		call	sub_67E00CE0
		sub	eax, ebx
		cmp	esi, eax
		jg	short loc_67DDE462
		cmp	esi, 0FFh
		jg	short loc_67DDE462
		test	esi, esi
		jnz	short loc_67DDE470

loc_67DDE462:				; CODE XREF: sub_67DDE3A0+B4j
					; sub_67DDE3A0+BCj ...
		xor	eax, eax

loc_67DDE464:				; CODE XREF: sub_67DDE3A0+FFj
					; sub_67DDE3A0+1F4j
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDE470:				; CODE XREF: sub_67DDE3A0+C0j
		mov	[esp+2Ch+var_2C], edi
		call	sub_67E01770
		lea	ebx, [eax+ebx]
		movzx	edx, byte ptr [ebx]
		lea	esi, [ebx+esi]
		cmp	dl, 3Ah
		jz	loc_67DDE536
		cmp	dl, 2Eh
		jz	short loc_67DDE462
		lea	eax, [edx-61h]
		cmp	al, 19h
		ja	short loc_67DDE514

loc_67DDE496:				; CODE XREF: sub_67DDE3A0+179j
					; sub_67DDE3A0+182j ...
		add	ebx, 1
		xor	ecx, ecx
		xor	eax, eax
		cmp	esi, ebx
		jz	short loc_67DDE464

loc_67DDE4A1:				; CODE XREF: sub_67DDE3A0+12Fj
		movzx	eax, byte ptr [ebx]
		cmp	al, 2Eh
		jz	short loc_67DDE4E0
		lea	edx, [eax-41h]
		cmp	dl, 19h
		jbe	short loc_67DDE4C8
		lea	edx, [eax-30h]
		cmp	dl, 9
		jbe	short loc_67DDE4C8
		lea	edx, [eax-61h]
		cmp	dl, 19h
		jbe	short loc_67DDE4C8
		cmp	al, 5Fh
		jz	short loc_67DDE4C8
		cmp	al, 2Dh
		jnz	short loc_67DDE462

loc_67DDE4C8:				; CODE XREF: sub_67DDE3A0+10Ej
					; sub_67DDE3A0+116j ...
		mov	eax, ebx

loc_67DDE4CA:				; CODE XREF: sub_67DDE3A0+172j
		lea	ebx, [eax+1]
		cmp	esi, ebx
		jnz	short loc_67DDE4A1
		xor	eax, eax
		test	ecx, ecx
		setnz	al
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDE4E0:				; CODE XREF: sub_67DDE3A0+106j
		lea	eax, [ebx+1]
		cmp	eax, esi
		jz	loc_67DDE462
		movzx	edx, byte ptr [ebx+1]
		lea	ecx, [edx-61h]
		cmp	cl, 19h
		jbe	short loc_67DDE510
		lea	ecx, [edx-41h]
		cmp	cl, 19h
		jbe	short loc_67DDE510
		cmp	dl, 5Fh
		jz	short loc_67DDE510
		cmp	dl, 2Dh
		jnz	loc_67DDE462
		lea	esi, [esi+0]

loc_67DDE510:				; CODE XREF: sub_67DDE3A0+155j
					; sub_67DDE3A0+15Dj ...
		mov	ecx, ebx
		jmp	short loc_67DDE4CA
; ---------------------------------------------------------------------------

loc_67DDE514:				; CODE XREF: sub_67DDE3A0+F4j
		lea	eax, [edx-41h]
		cmp	al, 19h
		jbe	loc_67DDE496
		cmp	dl, 5Fh
		jz	loc_67DDE496
		cmp	dl, 2Dh
		jnz	loc_67DDE462
		jmp	loc_67DDE496
; ---------------------------------------------------------------------------

loc_67DDE536:				; CODE XREF: sub_67DDE3A0+E4j
		lea	eax, [ebx+1]
		cmp	esi, eax
		nop
		lea	esi, [esi+0]
		jnz	short loc_67DDE577
		jmp	short loc_67DDE58F
; ---------------------------------------------------------------------------

loc_67DDE544:				; CODE XREF: sub_67DDE3A0+1DDj
					; sub_67DDE3A0+1EDj
		lea	ecx, [edx-41h]
		cmp	cl, 19h
		jbe	short loc_67DDE570
		lea	ecx, [edx-30h]
		cmp	cl, 9
		jbe	short loc_67DDE570
		lea	ecx, [edx-61h]
		cmp	cl, 19h
		jbe	short loc_67DDE570
		cmp	dl, 5Fh
		jz	short loc_67DDE570
		cmp	dl, 2Dh
		jnz	loc_67DDE462
		lea	esi, [esi+0]

loc_67DDE570:				; CODE XREF: sub_67DDE3A0+1AAj
					; sub_67DDE3A0+1B2j ...
		add	eax, 1
		cmp	esi, eax
		jz	short loc_67DDE58F

loc_67DDE577:				; CODE XREF: sub_67DDE3A0+1A0j
		movzx	edx, byte ptr [eax]
		cmp	dl, 2Eh
		jnz	short loc_67DDE544
		add	eax, 1
		cmp	eax, esi
		jz	loc_67DDE462
		movzx	edx, byte ptr [eax]
		jmp	short loc_67DDE544
; ---------------------------------------------------------------------------

loc_67DDE58F:				; CODE XREF: sub_67DDE3A0+1A2j
					; sub_67DDE3A0+1D5j
		mov	eax, 1
		jmp	loc_67DDE464
sub_67DDE3A0	endp

; ---------------------------------------------------------------------------
		align 10h

loc_67DDE5A0:				; DATA XREF: sub_67DD94B0+DC4o
		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+34h]
		mov	esi, [esp+38h]
		mov	edi, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_valida_2 ; "_dbus_validate_member"
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+0Ch], 3EDh
		mov	dword ptr [esp+8], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStart0 ; "start >= 0"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_valida_2 ; "_dbus_validate_member"
		mov	dword ptr [esp+0Ch], 3EEh
		mov	dword ptr [esp+8], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLen0	; "len >= 0"
		call	sub_67DFAE70
		mov	[esp], edi
		call	sub_67E00CE0
		mov	dword ptr [esp+10h], offset a_dbus_valida_2 ; "_dbus_validate_member"
		mov	dword ptr [esp+0Ch], 3EFh
		mov	dword ptr [esp+8], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStart_dbus_str ; "start <= _dbus_string_get_length (str)"
		cmp	eax, ebx
		setnl	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	[esp], edi
		call	sub_67E00CE0
		sub	eax, ebx
		cmp	esi, eax
		jg	short loc_67DDE662
		cmp	esi, 0FFh
		jg	short loc_67DDE662
		test	esi, esi
		jnz	short loc_67DDE670

loc_67DDE662:				; CODE XREF: .text:67DDE654j
					; .text:67DDE65Cj ...
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDE670:				; CODE XREF: .text:67DDE660j
		mov	[esp], edi
		call	sub_67E01770
		lea	ebx, [eax+ebx]
		movzx	eax, byte ptr [ebx]
		lea	edx, [eax-61h]
		cmp	dl, 19h
		jbe	short loc_67DDE68E
		lea	edx, [eax-41h]
		cmp	dl, 19h
		ja	short loc_67DDE6D0

loc_67DDE68E:				; CODE XREF: .text:67DDE684j
					; .text:67DDE6D4j
		lea	esi, [ebx+esi]
		add	ebx, 1
		cmp	esi, ebx
		jz	short loc_67DDE6BE

loc_67DDE698:				; CODE XREF: .text:67DDE6BCj
		movzx	eax, byte ptr [ebx]
		lea	edx, [eax-41h]
		cmp	dl, 19h
		jbe	short loc_67DDE6B7
		lea	edx, [eax-30h]
		cmp	dl, 9
		jbe	short loc_67DDE6B7
		lea	edx, [eax-61h]
		cmp	dl, 19h
		jbe	short loc_67DDE6B7
		cmp	al, 5Fh
		jnz	short loc_67DDE662

loc_67DDE6B7:				; CODE XREF: .text:67DDE6A1j
					; .text:67DDE6A9j ...
		add	ebx, 1
		cmp	esi, ebx
		jnz	short loc_67DDE698

loc_67DDE6BE:				; CODE XREF: .text:67DDE696j
		add	esp, 20h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDE6D0:				; CODE XREF: .text:67DDE68Cj
		cmp	al, 5Fh
		jnz	short loc_67DDE662
		jmp	short loc_67DDE68E
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDE6E0	proc near		; CODE XREF: sub_67DDE850+35p
					; sub_67DDE890+6j ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_8]
		mov	edi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_valida_0 ; "_dbus_validate_interface"
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 3A2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart0 ; "start >= 0"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_valida_0 ; "_dbus_validate_interface"
		mov	[esp+2Ch+var_20], 3A3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen0 ; "len >= 0"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], edi
		call	sub_67E00CE0
		mov	[esp+2Ch+var_1C], offset a_dbus_valida_0 ; "_dbus_validate_interface"
		mov	[esp+2Ch+var_20], 3A4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart_dbus_str ; "start <= _dbus_string_get_length (str)"
		cmp	eax, ebx
		setnl	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], edi
		call	sub_67E00CE0
		sub	eax, ebx
		cmp	esi, eax
		jg	short loc_67DDE7A2
		cmp	esi, 0FFh
		jg	short loc_67DDE7A2
		test	esi, esi
		jnz	short loc_67DDE7B0

loc_67DDE7A2:				; CODE XREF: sub_67DDE6E0+B4j
					; sub_67DDE6E0+BCj ...
		xor	eax, eax

loc_67DDE7A4:				; CODE XREF: sub_67DDE6E0+FEj
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDE7B0:				; CODE XREF: sub_67DDE6E0+C0j
		mov	[esp+2Ch+var_2C], edi
		call	sub_67E01770
		lea	ebx, [eax+ebx]
		movzx	eax, byte ptr [ebx]
		cmp	al, 2Eh
		jz	short loc_67DDE7A2
		lea	edx, [eax-61h]
		cmp	dl, 19h
		jbe	short loc_67DDE7D2
		lea	edx, [eax-41h]
		cmp	dl, 19h
		ja	short loc_67DDE81A

loc_67DDE7D2:				; CODE XREF: sub_67DDE6E0+E8j
					; sub_67DDE6E0+13Ej
		lea	esi, [ebx+esi]
		xor	eax, eax
		lea	edx, [ebx+1]
		xor	ebx, ebx
		cmp	esi, edx
		jz	short loc_67DDE7A4

loc_67DDE7E0:				; CODE XREF: sub_67DDE6E0+12Aj
		movzx	eax, byte ptr [edx]
		cmp	al, 2Eh
		jz	short loc_67DDE820
		lea	ecx, [eax-41h]
		cmp	cl, 19h
		jbe	short loc_67DDE803
		lea	ecx, [eax-30h]
		cmp	cl, 9
		jbe	short loc_67DDE803
		lea	ecx, [eax-61h]
		cmp	cl, 19h
		jbe	short loc_67DDE803
		cmp	al, 5Fh
		jnz	short loc_67DDE7A2

loc_67DDE803:				; CODE XREF: sub_67DDE6E0+10Dj
					; sub_67DDE6E0+115j ...
		mov	eax, edx

loc_67DDE805:				; CODE XREF: sub_67DDE6E0+16Aj
		lea	edx, [eax+1]
		cmp	esi, edx
		jnz	short loc_67DDE7E0
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DDE81A:				; CODE XREF: sub_67DDE6E0+F0j
		cmp	al, 5Fh
		jnz	short loc_67DDE7A2
		jmp	short loc_67DDE7D2
; ---------------------------------------------------------------------------

loc_67DDE820:				; CODE XREF: sub_67DDE6E0+105j
		lea	eax, [edx+1]
		cmp	eax, esi
		jz	loc_67DDE7A2
		movzx	ecx, byte ptr [edx+1]
		lea	ebx, [ecx-61h]
		cmp	bl, 19h
		jbe	short loc_67DDE848
		lea	ebx, [ecx-41h]
		cmp	bl, 19h
		jbe	short loc_67DDE848
		cmp	cl, 5Fh
		jnz	loc_67DDE7A2

loc_67DDE848:				; CODE XREF: sub_67DDE6E0+155j
					; sub_67DDE6E0+15Dj
		mov	ebx, edx
		jmp	short loc_67DDE805
sub_67DDE6E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DDE850(char	*)
sub_67DDE850	proc near		; CODE XREF: dbus_message_set_interface+A6p
					; dbus_message_new_signal+11Ap	...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 38h
		mov	edx, [esp+3Ch+arg_0]
		test	edx, edx
		jz	short loc_67DDE88A
		lea	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_38], edx ;	char *
		mov	[esp+3Ch+var_3C], ebx ;	int
		call	sub_67E03060
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E00CE0
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_34], eax
		call	sub_67DDE6E0

loc_67DDE88A:				; CODE XREF: sub_67DDE850+Cj
		add	esp, 38h
		pop	ebx
		retn
sub_67DDE850	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDE890	proc near		; DATA XREF: sub_67DD94B0+DB5o
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	sub_67DDE6E0
sub_67DDE890	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DDE8A0(char	*)
sub_67DDE8A0	proc near		; CODE XREF: dbus_message_new_error+B8p
					; dbus_message_new_error_printf+A5p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 38h
		mov	edx, [esp+3Ch+arg_0]
		test	edx, edx
		jz	short loc_67DDE8DA
		lea	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_38], edx ;	char *
		mov	[esp+3Ch+var_3C], ebx ;	int
		call	sub_67E03060
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E00CE0
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_34], eax
		call	sub_67DDE6E0

loc_67DDE8DA:				; CODE XREF: sub_67DDE8A0+Cj
		add	esp, 38h
		pop	ebx
		retn
sub_67DDE8A0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+34h]
		mov	esi, [esp+38h]
		mov	edi, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_valida_1 ; "_dbus_validate_path"
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+0Ch], 319h
		mov	dword ptr [esp+8], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStart0 ; "start >= 0"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_valida_1 ; "_dbus_validate_path"
		mov	dword ptr [esp+0Ch], 31Ah
		mov	dword ptr [esp+8], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLen0	; "len >= 0"
		call	sub_67DFAE70
		mov	[esp], edi
		call	sub_67E00CE0
		mov	dword ptr [esp+10h], offset a_dbus_valida_1 ; "_dbus_validate_path"
		mov	dword ptr [esp+0Ch], 31Bh
		mov	dword ptr [esp+8], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStart_dbus_str ; "start <= _dbus_string_get_length (str)"
		cmp	eax, ebx
		setnl	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	[esp], edi
		call	sub_67E00CE0
		sub	eax, ebx
		cmp	esi, eax
		jg	short loc_67DDE99A
		test	esi, esi
		jnz	short loc_67DDE9A3

loc_67DDE99A:				; CODE XREF: .text:67DDE994j
					; .text:67DDE9B1j ...
		xor	eax, eax

loc_67DDE99C:				; CODE XREF: .text:67DDEA16j
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DDE9A3:				; CODE XREF: .text:67DDE998j
		mov	[esp], edi
		call	sub_67E01770
		lea	ebx, [eax+ebx]
		cmp	byte ptr [ebx],	2Fh
		jnz	short loc_67DDE99A
		lea	edi, [ebx+esi]
		lea	edx, [ebx+1]
		cmp	edi, edx
		jnz	short loc_67DDE9E7
		jmp	short loc_67DDEA00
; ---------------------------------------------------------------------------
		align 10h

loc_67DDE9C0:				; CODE XREF: .text:67DDE9ECj
		lea	ecx, [eax-41h]
		cmp	cl, 19h
		jbe	short loc_67DDE9E0
		lea	ecx, [eax-30h]
		cmp	cl, 9
		xchg	ax, ax
		jbe	short loc_67DDE9E0
		lea	ecx, [eax-61h]
		cmp	cl, 19h
		jbe	short loc_67DDE9E0
		cmp	al, 5Fh
		jnz	short loc_67DDE99A
		xchg	ax, ax

loc_67DDE9E0:				; CODE XREF: .text:67DDE9C6j
					; .text:67DDE9D0j ...
		add	edx, 1
		cmp	edi, edx
		jz	short loc_67DDEA00

loc_67DDE9E7:				; CODE XREF: .text:67DDE9BBj
		movzx	eax, byte ptr [edx]
		cmp	al, 2Fh
		jnz	short loc_67DDE9C0
		mov	eax, edx
		sub	eax, ebx
		cmp	eax, 1
		jle	short loc_67DDE99A
		mov	ebx, edx
		jmp	short loc_67DDE9E0
; ---------------------------------------------------------------------------
		align 10h

loc_67DDEA00:				; CODE XREF: .text:67DDE9BDj
					; .text:67DDE9E5j
		sub	edx, ebx
		cmp	edx, 1
		setle	al
		cmp	esi, 1
		setnle	dl
		and	eax, edx
		xor	eax, 1
		movzx	eax, al
		jmp	short loc_67DDE99C
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDEA20	proc near		; CODE XREF: .text:67DDEF03p
					; dbus_signature_validate+2Fp

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		lea	esi, [esp+5Ch+var_20]
		mov	ebp, [esp+5Ch+arg_4]
		mov	edi, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_20], 0
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBB80
		test	eax, eax
		jnz	short loc_67DDEA66

loc_67DDEA4F:				; CODE XREF: sub_67DDEA20+1B3j
					; sub_67DDEA20+2E9j
		mov	ebx, 0FFFFFFFCh

loc_67DDEA54:				; CODE XREF: sub_67DDEA20+118j
					; sub_67DDEA20+182j ...
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBC90
		add	esp, 4Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDEA66:				; CODE XREF: sub_67DDEA20+2Dj
		xor	eax, eax
		mov	ebx, 3
		cmp	[esp+5Ch+arg_0], 0
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 4Bh
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aType_strNull_0 ; "type_str !=	NULL"
		call	sub_67DFAE70
		mov	eax, 7FFFFFFFh
		sub	eax, edi
		cmp	eax, ebp
		setnle	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 4Ch
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aType_pos_dbus_ ; "type_pos < _DBUS_INT32_MAX - len"
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 4Dh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aLen0 ; "len >= 0"
		call	sub_67DFAE70
		mov	eax, ebp
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 4Eh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aType_pos0 ; "type_pos	>= 0"
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		cmp	edi, 0FFh
		jg	loc_67DDEA54
		mov	eax, [esp+5Ch+arg_0]
		add	edi, ebp
		mov	[esp+5Ch+var_54], 0
		mov	[esp+5Ch+var_58], ebp
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E01280
		mov	[esp+5Ch+var_54], 0
		mov	[esp+5Ch+var_58], edi
		mov	ebx, eax
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E01280
		cmp	ebx, eax
		mov	[esp+5Ch+var_38], eax
		jz	loc_67DDED3B
		mov	[esp+5Ch+var_30], 0
		xor	ebp, ebp
		xor	edi, edi
		mov	[esp+5Ch+var_34], 0

loc_67DDEB92:				; CODE XREF: sub_67DDEA20+1FBj
		movzx	eax, byte ptr [ebx]
		lea	edx, [eax-28h]
		cmp	dl, 55h		; switch 86 cases
		jbe	short loc_67DDEBA7

loc_67DDEB9D:				; CODE XREF: sub_67DDEA20+18Aj
					; DATA XREF: .rdata:off_67E221D8o
		mov	ebx, 1		; jumptable 67DDEBAA default case
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDEBA7:				; CODE XREF: sub_67DDEA20+17Bj
		movzx	edx, dl
		jmp	ds:off_67E221D8[edx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67DDEBB1:				; CODE XREF: sub_67DDEA20+18Aj
					; DATA XREF: .rdata:off_67E221D8o
		add	[esp+5Ch+var_34], 1 ; jumptable	67DDEBAA case 0
		cmp	[esp+5Ch+var_34], 20h
		jg	loc_67DDEE0F

loc_67DDEBC1:				; CODE XREF: sub_67DDEA20+28Aj
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBB80
		test	eax, eax
		jz	loc_67DDEA4F

loc_67DDEBD9:				; CODE XREF: sub_67DDEA20+272j
		movzx	eax, byte ptr [ebx]

loc_67DDEBDC:				; CODE XREF: sub_67DDEA20+18Aj
					; sub_67DDEA20+24Aj
					; DATA XREF: ...
		cmp	al, 7Bh		; jumptable 67DDEBAA cases 58,60,63-65,70,71,73,75-78,80,81
		jz	short loc_67DDEBEC
		cmp	al, 61h
		jz	short loc_67DDEBEC
		cmp	al, 28h
		jnz	loc_67DDECF0

loc_67DDEBEC:				; CODE XREF: sub_67DDEA20+1BEj
					; sub_67DDEA20+1C2j ...
		test	ebp, ebp
		xchg	ax, ax
		jz	short loc_67DDEC08
		cmp	al, 61h
		jnz	loc_67DDECE6

loc_67DDEBFA:				; CODE XREF: sub_67DDEA20+219j
		movzx	edx, byte ptr [ebx+1]
		cmp	dl, 7Dh
		jz	short loc_67DDEC29
		cmp	dl, 29h
		jz	short loc_67DDEC29

loc_67DDEC08:				; CODE XREF: sub_67DDEA20+1D0j
					; sub_67DDEA20+2C8j
		cmp	edi, 7Bh
		jz	loc_67DDECC0

loc_67DDEC11:				; CODE XREF: sub_67DDEA20+2C1j
		add	ebx, 1
		movzx	edi, al
		cmp	[esp+5Ch+var_38], ebx
		jnz	loc_67DDEB92
		test	ebp, ebp
		jz	loc_67DDED25

loc_67DDEC29:				; CODE XREF: sub_67DDEA20+1E1j
					; sub_67DDEA20+1E6j
		mov	ebx, 2
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDEC33:				; CODE XREF: sub_67DDEA20+18Aj
					; DATA XREF: .rdata:off_67E221D8o
		add	ebp, 1		; jumptable 67DDEBAA case 57
		cmp	ebp, 20h
		jle	short loc_67DDEBFA
		mov	ebx, 4
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDEC45:				; CODE XREF: sub_67DDEA20+18Aj
					; DATA XREF: .rdata:off_67E221D8o
		mov	ecx, [esp+5Ch+var_34] ;	jumptable 67DDEBAA case	1
		test	ecx, ecx
		jz	loc_67DDEE05
		cmp	edi, 28h
		jz	loc_67DDEE19
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBF30
		sub	[esp+5Ch+var_34], 1
		movzx	eax, byte ptr [ebx]
		jmp	loc_67DDEBDC	; jumptable 67DDEBAA cases 58,60,63-65,70,71,73,75-78,80,81
; ---------------------------------------------------------------------------
		align 10h

loc_67DDEC70:				; CODE XREF: sub_67DDEA20+18Aj
					; DATA XREF: .rdata:off_67E221D8o
		mov	edx, [esp+5Ch+var_30] ;	jumptable 67DDEBAA case	85
		test	edx, edx
		jz	loc_67DDEDF1
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBF30
		cmp	eax, 2
		jnz	loc_67DDEDD4
		sub	[esp+5Ch+var_30], 1
		jmp	loc_67DDEBD9
; ---------------------------------------------------------------------------

loc_67DDEC97:				; CODE XREF: sub_67DDEA20+18Aj
					; DATA XREF: .rdata:off_67E221D8o
		cmp	edi, 61h	; jumptable 67DDEBAA case 83
		jnz	loc_67DDEDFB
		add	[esp+5Ch+var_30], 1
		cmp	[esp+5Ch+var_30], 20h
		jle	loc_67DDEBC1
		mov	ebx, 30h
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------
		align 10h

loc_67DDECC0:				; CODE XREF: sub_67DDEA20+1EBj
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFC1D0
		test	eax, eax
		jz	short loc_67DDED17
		movzx	eax, byte ptr [ebx]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_type_is_basic
		test	eax, eax
		jz	short loc_67DDED17
		movzx	eax, byte ptr [ebx]
		jmp	loc_67DDEC11
; ---------------------------------------------------------------------------

loc_67DDECE6:				; CODE XREF: sub_67DDEA20+1D4j
		xor	ebp, ebp
		jmp	loc_67DDEC08
; ---------------------------------------------------------------------------
		align 10h

loc_67DDECF0:				; CODE XREF: sub_67DDEA20+1C6j
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBF30
		mov	[esp+5Ch+var_5C], esi
		add	eax, 1
		mov	[esp+5Ch+var_58], eax
		call	sub_67DFBB80
		test	eax, eax
		jz	loc_67DDEA4F
		movzx	eax, byte ptr [ebx]
		jmp	loc_67DDEBEC
; ---------------------------------------------------------------------------

loc_67DDED17:				; CODE XREF: sub_67DDEA20+2ADj
					; sub_67DDEA20+2BCj
		mov	ebx, 37h
		lea	esi, [esi+0]
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDED25:				; CODE XREF: sub_67DDEA20+203j
		mov	eax, [esp+5Ch+var_34]
		test	eax, eax
		jz	loc_67DDEE25
		mov	ebx, 7
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDED3B:				; CODE XREF: sub_67DDEA20+158j
		xor	edi, edi

loc_67DDED3D:				; CODE XREF: sub_67DDEA20+416j
		xor	eax, eax
		cmp	edi, 61h
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 11Bh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aLastDbus_type_ ; "last != DBUS_TYPE_ARRAY"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	edi, 28h
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 11Ch
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aLastDbus_struc ; "last != DBUS_STRUCT_BEGIN_CHAR"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	edi, 7Bh
		setnz	al
		xor	ebx, ebx
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 11Dh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aLastDbus_dict_ ; "last != DBUS_DICT_ENTRY_BEGIN_CHAR"
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDEDD4:				; CODE XREF: sub_67DDEA20+267j
		test	eax, eax
		mov	ebx, 33h
		jz	loc_67DDEA54
		xor	ebx, ebx
		cmp	eax, 1
		setnz	bl
		add	ebx, 34h
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDEDF1:				; CODE XREF: sub_67DDEA20+256j
		mov	ebx, 31h
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDEDFB:				; CODE XREF: sub_67DDEA20+27Aj
		mov	ebx, 36h
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDEE05:				; CODE XREF: sub_67DDEA20+22Bj
		mov	ebx, 6
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDEE0F:				; CODE XREF: sub_67DDEA20+19Bj
		mov	ebx, 5
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDEE19:				; CODE XREF: sub_67DDEA20+234j
		mov	ebx, 8
		xchg	ax, ax
		jmp	loc_67DDEA54
; ---------------------------------------------------------------------------

loc_67DDEE25:				; CODE XREF: sub_67DDEA20+30Bj
		cmp	[esp+5Ch+var_30], 0
		mov	ebx, 32h
		nop
		jnz	loc_67DDEA54
		jmp	loc_67DDED3D
sub_67DDEA20	endp

; ---------------------------------------------------------------------------
		align 10h
		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+34h]
		mov	esi, [esp+30h]
		mov	edi, [esp+38h]
		mov	dword ptr [esp+10h], offset a_dbus_valida_3 ; "_dbus_validate_signature"
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+0Ch], 4B2h
		mov	dword ptr [esp+8], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStart0 ; "start >= 0"
		call	sub_67DFAE70
		mov	[esp], esi
		call	sub_67E00CE0
		mov	dword ptr [esp+10h], offset a_dbus_valida_3 ; "_dbus_validate_signature"
		mov	dword ptr [esp+0Ch], 4B3h
		mov	dword ptr [esp+8], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStart_dbus_str ; "start <= _dbus_string_get_length (str)"
		cmp	eax, ebx
		setnl	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_valida_3 ; "_dbus_validate_signature"
		mov	dword ptr [esp+0Ch], 4B4h
		mov	dword ptr [esp+8], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLen0	; "len >= 0"
		call	sub_67DFAE70
		mov	[esp], esi
		call	sub_67E00CE0
		xor	edx, edx
		sub	eax, ebx
		cmp	edi, eax
		jg	short loc_67DDEF0F
		mov	[esp+8], edi
		mov	[esp+4], ebx
		mov	[esp], esi
		call	sub_67DDEA20
		xor	edx, edx
		test	eax, eax
		setz	dl

loc_67DDEF0F:				; CODE XREF: .text:67DDEEF6j
		add	esp, 20h
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDEF20	proc near		; CODE XREF: sub_67DDF050+2Ap
					; sub_67DDF930+685p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 20h
		mov	[esp+2Ch+var_1C], offset a_dbus_valida_1 ; "_dbus_validate_path"
		mov	[esp+2Ch+var_20], 319h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart0 ; "start >= 0"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_valida_1 ; "_dbus_validate_path"
		mov	[esp+2Ch+var_20], 31Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen0 ; "len >= 0"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		mov	[esp+2Ch+var_1C], offset a_dbus_valida_1 ; "_dbus_validate_path"
		mov	[esp+2Ch+var_20], 31Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart_dbus_str ; "start <= _dbus_string_get_length (str)"
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		cmp	esi, eax
		jg	loc_67DDEFCE
		test	esi, esi
		jnz	short loc_67DDEFD7

loc_67DDEFCE:				; CODE XREF: sub_67DDEF20+A4j
					; sub_67DDEF20+C2j ...
		xor	eax, eax

loc_67DDEFD0:				; CODE XREF: sub_67DDEF20+112j
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DDEFD7:				; CODE XREF: sub_67DDEF20+ACj
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E01770
		cmp	byte ptr [eax],	2Fh
		jnz	short loc_67DDEFCE
		lea	edi, [eax+esi]
		lea	edx, [eax+1]
		cmp	edi, edx
		jz	short loc_67DDF01C
		xchg	ax, ax

loc_67DDEFF0:				; CODE XREF: sub_67DDEF20+FAj
					; sub_67DDEF20+124j
		movzx	ecx, byte ptr [edx]
		cmp	cl, 2Fh
		jz	short loc_67DDF034
		lea	ebx, [ecx-41h]
		cmp	bl, 19h
		jbe	short loc_67DDF015
		lea	ebx, [ecx-30h]
		cmp	bl, 9
		jbe	short loc_67DDF015
		lea	ebx, [ecx-61h]
		cmp	bl, 19h
		jbe	short loc_67DDF015
		cmp	cl, 5Fh
		jnz	short loc_67DDEFCE

loc_67DDF015:				; CODE XREF: sub_67DDEF20+DEj
					; sub_67DDEF20+E6j ...
		add	edx, 1
		cmp	edi, edx
		jnz	short loc_67DDEFF0

loc_67DDF01C:				; CODE XREF: sub_67DDEF20+CCj
					; sub_67DDEF20+126j
		sub	edi, eax
		cmp	edi, 1
		setle	al
		cmp	esi, 1
		setnle	dl
		and	eax, edx
		xor	eax, 1
		movzx	eax, al
		jmp	short loc_67DDEFD0
; ---------------------------------------------------------------------------

loc_67DDF034:				; CODE XREF: sub_67DDEF20+D6j
		mov	ecx, edx
		sub	ecx, eax
		cmp	ecx, 1
		jle	short loc_67DDEFCE
		mov	eax, edx
		add	edx, 1
		cmp	edi, edx
		jnz	short loc_67DDEFF0
		jmp	short loc_67DDF01C
sub_67DDEF20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DDF050(char	*)
sub_67DDF050	proc near		; CODE XREF: dbus_message_new_signal+DEp
					; dbus_message_new_method_call+EEp ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 38h
		mov	edx, [esp+3Ch+arg_0]
		test	edx, edx
		jz	short loc_67DDF07F
		lea	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_38], edx ;	char *
		mov	[esp+3Ch+var_3C], ebx ;	int
		call	sub_67E03060
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E00CE0
		mov	edx, eax
		mov	eax, ebx
		call	sub_67DDEF20

loc_67DDF07F:				; CODE XREF: sub_67DDF050+Cj
		add	esp, 38h
		pop	ebx
		retn
sub_67DDF050	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DDF090(char	*)
sub_67DDF090	proc near		; CODE XREF: dbus_message_new_signal+156p
					; dbus_message_new_method_call+16Ap ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 44h
		mov	edx, [esp+4Ch+arg_0]
		test	edx, edx
		jz	loc_67DDF172
		lea	ebx, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_48], edx ;	char *
		mov	[esp+4Ch+var_4C], ebx ;	int
		call	sub_67E03060
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_3C], offset a_dbus_valida_2 ; "_dbus_validate_member"
		mov	[esp+4Ch+var_40], 3EDh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStart0 ; "start >= 0"
		mov	[esp+4Ch+var_4C], 1
		mov	esi, eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_valida_2 ; "_dbus_validate_member"
		mov	[esp+4Ch+var_40], 3EEh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aLen0 ; "len >= 0"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_3C], offset a_dbus_valida_2 ; "_dbus_validate_member"
		mov	[esp+4Ch+var_40], 3EFh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStart_dbus_str ; "start <= _dbus_string_get_length (str)"
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		cmp	esi, eax
		jg	loc_67DDF170
		cmp	esi, 0FFh
		jg	short loc_67DDF170
		test	esi, esi
		jnz	short loc_67DDF178
		lea	esi, [esi+0]

loc_67DDF170:				; CODE XREF: sub_67DDF090+C7j
					; sub_67DDF090+D3j ...
		xor	eax, eax

loc_67DDF172:				; CODE XREF: sub_67DDF090+Dj
					; sub_67DDF090+13Cj
		add	esp, 44h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DDF178:				; CODE XREF: sub_67DDF090+D7j
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E01770
		movzx	edx, byte ptr [eax]
		lea	ecx, [edx-61h]
		cmp	cl, 19h
		jbe	short loc_67DDF193
		lea	ecx, [edx-41h]
		cmp	cl, 19h
		ja	short loc_67DDF1D0

loc_67DDF193:				; CODE XREF: sub_67DDF090+F9j
					; sub_67DDF090+145j
		lea	esi, [eax+esi]
		add	eax, 1
		cmp	esi, eax
		jz	short loc_67DDF1C7
		lea	esi, [esi+0]

loc_67DDF1A0:				; CODE XREF: sub_67DDF090+135j
		movzx	edx, byte ptr [eax]
		lea	ecx, [edx-41h]
		cmp	cl, 19h
		jbe	short loc_67DDF1C0
		lea	ecx, [edx-30h]
		cmp	cl, 9
		jbe	short loc_67DDF1C0
		lea	ecx, [edx-61h]
		cmp	cl, 19h
		jbe	short loc_67DDF1C0
		cmp	dl, 5Fh
		jnz	short loc_67DDF170

loc_67DDF1C0:				; CODE XREF: sub_67DDF090+119j
					; sub_67DDF090+121j ...
		add	eax, 1
		cmp	esi, eax
		jnz	short loc_67DDF1A0

loc_67DDF1C7:				; CODE XREF: sub_67DDF090+10Bj
		mov	eax, 1
		jmp	short loc_67DDF172
; ---------------------------------------------------------------------------
		align 10h

loc_67DDF1D0:				; CODE XREF: sub_67DDF090+101j
		cmp	dl, 5Fh
		jnz	short loc_67DDF170
		jmp	short loc_67DDF193
sub_67DDF090	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DDF1E0(char	*)
sub_67DDF1E0	proc near		; CODE XREF: dbus_bus_start_service_by_name+86p
					; dbus_bus_name_has_owner+ADp ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 44h
		mov	edx, [esp+4Ch+arg_0]
		test	edx, edx
		jz	loc_67DDF2C2
		lea	ebx, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_48], edx ;	char *
		mov	[esp+4Ch+var_4C], ebx ;	int
		call	sub_67E03060
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_3C], offset a_dbus_validate ; "_dbus_validate_bus_name"
		mov	[esp+4Ch+var_40], 454h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStart0 ; "start >= 0"
		mov	[esp+4Ch+var_4C], 1
		mov	esi, eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_validate ; "_dbus_validate_bus_name"
		mov	[esp+4Ch+var_40], 455h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aLen0 ; "len >= 0"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_3C], offset a_dbus_validate ; "_dbus_validate_bus_name"
		mov	[esp+4Ch+var_40], 456h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStart_dbus_str ; "start <= _dbus_string_get_length (str)"
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		cmp	esi, eax
		jg	loc_67DDF2C0
		cmp	esi, 0FFh
		jg	short loc_67DDF2C0
		test	esi, esi
		jnz	short loc_67DDF2C8
		lea	esi, [esi+0]

loc_67DDF2C0:				; CODE XREF: sub_67DDF1E0+C7j
					; sub_67DDF1E0+D3j ...
		xor	eax, eax

loc_67DDF2C2:				; CODE XREF: sub_67DDF1E0+Dj
					; sub_67DDF1E0+11Bj ...
		add	esp, 44h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DDF2C8:				; CODE XREF: sub_67DDF1E0+D7j
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E01770
		movzx	ecx, byte ptr [eax]
		lea	esi, [eax+esi]
		cmp	cl, 3Ah
		jz	loc_67DDF372
		cmp	cl, 2Eh
		jz	short loc_67DDF2C0
		lea	edx, [ecx-61h]
		cmp	dl, 19h
		ja	loc_67DDF3CE

loc_67DDF2F0:				; CODE XREF: sub_67DDF1E0+1F4j
					; sub_67DDF1E0+1FDj ...
		lea	edx, [eax+1]
		xor	ecx, ecx
		xor	eax, eax
		cmp	esi, edx
		jnz	short loc_67DDF335
		jmp	short loc_67DDF2C2
; ---------------------------------------------------------------------------
		align 10h

loc_67DDF300:				; CODE XREF: sub_67DDF1E0+15Aj
		lea	ebx, [eax-41h]
		cmp	bl, 19h
		jbe	short loc_67DDF322
		lea	ebx, [eax-30h]
		cmp	bl, 9
		xchg	ax, ax
		jbe	short loc_67DDF322
		lea	ebx, [eax-61h]
		cmp	bl, 19h
		jbe	short loc_67DDF322
		cmp	al, 5Fh
		jz	short loc_67DDF322
		cmp	al, 2Dh
		jnz	short loc_67DDF2C0

loc_67DDF322:				; CODE XREF: sub_67DDF1E0+126j
					; sub_67DDF1E0+130j ...
		mov	eax, edx
		mov	edx, ecx

loc_67DDF326:				; CODE XREF: sub_67DDF1E0+171j
					; sub_67DDF1E0+179j ...
		add	eax, 1
		cmp	esi, eax
		jz	loc_67DDF3C2
		mov	ecx, edx
		mov	edx, eax

loc_67DDF335:				; CODE XREF: sub_67DDF1E0+119j
		movzx	eax, byte ptr [edx]
		cmp	al, 2Eh
		jnz	short loc_67DDF300
		lea	eax, [edx+1]
		cmp	esi, eax
		jz	loc_67DDF2C0
		movzx	ecx, byte ptr [edx+1]
		lea	ebx, [ecx-61h]
		cmp	bl, 19h
		jbe	short loc_67DDF326
		lea	ebx, [ecx-41h]
		cmp	bl, 19h
		jbe	short loc_67DDF326
		cmp	cl, 5Fh
		jz	short loc_67DDF326
		cmp	cl, 2Dh
		jnz	loc_67DDF2C0
		lea	esi, [esi+0]
		jmp	short loc_67DDF326
; ---------------------------------------------------------------------------

loc_67DDF372:				; CODE XREF: sub_67DDF1E0+F9j
					; sub_67DDF1E0+1A8j ...
		add	eax, 1
		cmp	esi, eax
		jz	short loc_67DDF3F5
		movzx	edx, byte ptr [eax]
		cmp	dl, 2Eh
		nop
		jz	short loc_67DDF3B0

loc_67DDF382:				; CODE XREF: sub_67DDF1E0+1E0j
		lea	ecx, [edx-41h]
		cmp	cl, 19h
		jbe	short loc_67DDF372
		lea	ecx, [edx-30h]
		cmp	cl, 9
		jbe	short loc_67DDF372
		lea	ecx, [edx-61h]
		cmp	cl, 19h
		jbe	short loc_67DDF372
		cmp	dl, 5Fh
		jz	short loc_67DDF372
		cmp	dl, 2Dh
		jnz	loc_67DDF2C0
		jmp	short loc_67DDF372
; ---------------------------------------------------------------------------
		align 10h

loc_67DDF3B0:				; CODE XREF: sub_67DDF1E0+1A0j
		add	eax, 1
		cmp	esi, eax
		jz	loc_67DDF2C0
		movzx	edx, byte ptr [eax]
		xchg	ax, ax
		jmp	short loc_67DDF382
; ---------------------------------------------------------------------------

loc_67DDF3C2:				; CODE XREF: sub_67DDF1E0+14Bj
		xor	eax, eax
		test	edx, edx
		setnz	al
		jmp	loc_67DDF2C2
; ---------------------------------------------------------------------------

loc_67DDF3CE:				; CODE XREF: sub_67DDF1E0+10Aj
		lea	edx, [ecx-41h]
		cmp	dl, 19h
		jbe	loc_67DDF2F0
		cmp	cl, 5Fh
		jz	loc_67DDF2F0
		cmp	cl, 2Dh
		jnz	loc_67DDF2C0
		lea	esi, [esi+0]
		jmp	loc_67DDF2F0
; ---------------------------------------------------------------------------

loc_67DDF3F5:				; CODE XREF: sub_67DDF1E0+197j
		mov	eax, 1
		lea	esi, [esi+0]
		jmp	loc_67DDF2C2
sub_67DDF1E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDF410	proc near		; CODE XREF: sub_67DDF840+D7p
					; sub_67DDF930+1E8p ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 5Ch
		mov	[esp+5Ch+var_C], esi
		lea	esi, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_8], edi
		mov	edi, eax
		mov	[esp+5Ch+var_4], ebp
		mov	ebp, edx
		mov	[esp+5Ch+var_10], ebx
		mov	[esp+5Ch+var_20], 0
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBB80
		test	eax, eax
		jnz	short loc_67DDF470

loc_67DDF447:				; CODE XREF: sub_67DDF410+1C6j
					; sub_67DDF410+2FCj
		mov	ebx, 0FFFFFFFCh

loc_67DDF44C:				; CODE XREF: sub_67DDF410+12Cj
					; sub_67DDF410+195j ...
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBC90
		mov	eax, ebx
		mov	esi, [esp+5Ch+var_C]
		mov	ebx, [esp+5Ch+var_10]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DDF470:				; CODE XREF: sub_67DDF410+35j
		xor	eax, eax
		test	edi, edi
		setnz	al
		mov	ebx, 3
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 4Bh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aType_strNull_0 ; "type_str !=	NULL"
		call	sub_67DFAE70
		mov	eax, 7FFFFFFFh
		sub	eax, ebp
		test	eax, eax
		setnle	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 4Ch
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aType_pos_dbus_ ; "type_pos < _DBUS_INT32_MAX - len"
		call	sub_67DFAE70
		mov	eax, ebp
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 4Dh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aLen0 ; "len >= 0"
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 4Eh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aType_pos0 ; "type_pos	>= 0"
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		cmp	ebp, 0FFh
		jg	loc_67DDF44C
		mov	[esp+5Ch+var_5C], edi
		mov	[esp+5Ch+var_54], 0
		mov	[esp+5Ch+var_58], 0
		call	sub_67E01280
		mov	[esp+5Ch+var_5C], edi
		xor	edi, edi
		mov	[esp+5Ch+var_54], 0
		mov	[esp+5Ch+var_58], ebp
		mov	ebx, eax
		call	sub_67E01280
		cmp	ebx, eax
		mov	[esp+5Ch+var_38], eax
		jz	loc_67DDF744
		mov	[esp+5Ch+var_30], 0
		xor	ebp, ebp
		mov	[esp+5Ch+var_34], 0

loc_67DDF590:				; CODE XREF: sub_67DDF410+1F8j
		movzx	eax, byte ptr [ebx]
		lea	edx, [eax-28h]
		cmp	dl, 55h		; switch 86 cases
		jbe	short loc_67DDF5AA
		nop			; jumptable 67DDF5AD default case
		lea	esi, [esi+0]

loc_67DDF5A0:				; CODE XREF: sub_67DDF410+19Dj
					; DATA XREF: .rdata:off_67E22330o
		mov	ebx, 1		; jumptable 67DDF5AD cases 2-56,59,61,62,66-69,72,74,79,82,84
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------

loc_67DDF5AA:				; CODE XREF: sub_67DDF410+189j
		movzx	edx, dl
		jmp	ds:off_67E22330[edx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67DDF5B4:				; CODE XREF: sub_67DDF410+19Dj
					; DATA XREF: .rdata:off_67E22330o
		add	[esp+5Ch+var_34], 1 ; jumptable	67DDF5AD case 0
		cmp	[esp+5Ch+var_34], 20h
		jg	loc_67DDF81C

loc_67DDF5C4:				; CODE XREF: sub_67DDF410+2D3j
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBB80
		test	eax, eax
		jz	loc_67DDF447

loc_67DDF5DC:				; CODE XREF: sub_67DDF410+2B5j
		movzx	eax, byte ptr [ebx]

loc_67DDF5DF:				; CODE XREF: sub_67DDF410+19Dj
					; DATA XREF: .rdata:off_67E22330o
		cmp	al, 7Bh		; jumptable 67DDF5AD cases 58,60,63-65,70,71,73,75-78,80,81
		jz	short loc_67DDF5EF

loc_67DDF5E3:				; CODE XREF: sub_67DDF410+28Ej
		cmp	al, 61h
		jz	short loc_67DDF5EF
		cmp	al, 28h
		jnz	loc_67DDF6F3

loc_67DDF5EF:				; CODE XREF: sub_67DDF410+1D1j
					; sub_67DDF410+1D5j ...
		test	ebp, ebp
		jz	short loc_67DDF5F9
		cmp	al, 61h
		jz	short loc_67DDF62C
		xor	ebp, ebp

loc_67DDF5F9:				; CODE XREF: sub_67DDF410+1E1j
		cmp	edi, 7Bh
		jz	short loc_67DDF642

loc_67DDF5FE:				; CODE XREF: sub_67DDF410+230j
					; sub_67DDF410+25Bj
		add	ebx, 1
		movzx	edi, al
		cmp	[esp+5Ch+var_38], ebx
		jnz	short loc_67DDF590
		test	ebp, ebp
		jz	loc_67DDF725

loc_67DDF612:				; CODE XREF: sub_67DDF410+223j
					; sub_67DDF410+228j
		mov	ebx, 2
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------
		align 10h

loc_67DDF620:				; CODE XREF: sub_67DDF410+19Dj
					; DATA XREF: .rdata:off_67E22330o
		add	ebp, 1		; jumptable 67DDF5AD case 57
		cmp	ebp, 20h
		jg	loc_67DDF7DB

loc_67DDF62C:				; CODE XREF: sub_67DDF410+1E5j
		movzx	edx, byte ptr [ebx+1]
		cmp	dl, 7Dh
		jz	short loc_67DDF612
		cmp	dl, 29h
		jz	short loc_67DDF612
		cmp	edi, 7Bh
		lea	esi, [esi+0]
		jnz	short loc_67DDF5FE

loc_67DDF642:				; CODE XREF: sub_67DDF410+1ECj
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFC1D0
		test	eax, eax
		jz	loc_67DDF71A
		movzx	eax, byte ptr [ebx]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_type_is_basic
		test	eax, eax
		jz	loc_67DDF71A
		movzx	eax, byte ptr [ebx]
		jmp	short loc_67DDF5FE
; ---------------------------------------------------------------------------
		align 10h

loc_67DDF670:				; CODE XREF: sub_67DDF410+19Dj
					; DATA XREF: .rdata:off_67E22330o
		mov	ecx, [esp+5Ch+var_34] ;	jumptable 67DDF5AD case	1
		test	ecx, ecx
		jz	loc_67DDF835
		cmp	edi, 28h
		nop
		jz	loc_67DDF826
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBF30
		sub	[esp+5Ch+var_34], 1
		movzx	eax, byte ptr [ebx]
		cmp	al, 7Bh
		jz	loc_67DDF5EF
		jmp	loc_67DDF5E3
; ---------------------------------------------------------------------------

loc_67DDF6A3:				; CODE XREF: sub_67DDF410+19Dj
					; DATA XREF: .rdata:off_67E22330o
		mov	edx, [esp+5Ch+var_30] ;	jumptable 67DDF5AD case	85
		test	edx, edx
		jz	loc_67DDF812
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBF30
		cmp	eax, 2
		jnz	loc_67DDF7F5
		sub	[esp+5Ch+var_30], 1
		jmp	loc_67DDF5DC
; ---------------------------------------------------------------------------
		align 10h

loc_67DDF6D0:				; CODE XREF: sub_67DDF410+19Dj
					; DATA XREF: .rdata:off_67E22330o
		cmp	edi, 61h	; jumptable 67DDF5AD case 83
		jnz	loc_67DDF7E5
		add	[esp+5Ch+var_30], 1
		cmp	[esp+5Ch+var_30], 20h
		jle	loc_67DDF5C4
		mov	ebx, 30h
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------

loc_67DDF6F3:				; CODE XREF: sub_67DDF410+1D9j
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DFBF30
		mov	[esp+5Ch+var_5C], esi
		add	eax, 1
		mov	[esp+5Ch+var_58], eax
		call	sub_67DFBB80
		test	eax, eax
		jz	loc_67DDF447
		movzx	eax, byte ptr [ebx]
		jmp	loc_67DDF5EF
; ---------------------------------------------------------------------------

loc_67DDF71A:				; CODE XREF: sub_67DDF410+23Fj
					; sub_67DDF410+252j
		mov	ebx, 37h
		nop
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------

loc_67DDF725:				; CODE XREF: sub_67DDF410+1FCj
		mov	eax, [esp+5Ch+var_34]
		mov	ebx, 7
		test	eax, eax
		jnz	loc_67DDF44C
		mov	ebp, [esp+5Ch+var_30]
		mov	bl, 32h
		test	ebp, ebp
		jnz	loc_67DDF44C

loc_67DDF744:				; CODE XREF: sub_67DDF410+168j
		xor	eax, eax
		cmp	edi, 61h
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 11Bh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aLastDbus_type_ ; "last != DBUS_TYPE_ARRAY"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	edi, 28h
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 11Ch
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aLastDbus_struc ; "last != DBUS_STRUCT_BEGIN_CHAR"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	edi, 7Bh
		setnz	al
		xor	ebx, ebx
		mov	[esp+5Ch+var_4C], offset a_dbus_valida_4 ; "_dbus_validate_signature_with_reason"
		mov	[esp+5Ch+var_50], 11Dh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aLastDbus_dict_ ; "last != DBUS_DICT_ENTRY_BEGIN_CHAR"
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------

loc_67DDF7DB:				; CODE XREF: sub_67DDF410+216j
		mov	ebx, 4
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------

loc_67DDF7E5:				; CODE XREF: sub_67DDF410+2C3j
		mov	ebx, 36h
		lea	esi, [esi+0]
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------

loc_67DDF7F5:				; CODE XREF: sub_67DDF410+2AAj
		test	eax, eax
		mov	ebx, 33h
		jz	loc_67DDF44C
		xor	ebx, ebx
		cmp	eax, 1
		setnz	bl
		add	ebx, 34h
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------

loc_67DDF812:				; CODE XREF: sub_67DDF410+299j
		mov	ebx, 31h
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------

loc_67DDF81C:				; CODE XREF: sub_67DDF410+1AEj
		mov	ebx, 5
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------

loc_67DDF826:				; CODE XREF: sub_67DDF410+270j
		mov	ebx, 8
		nop
		lea	esi, [esi+0]
		jmp	loc_67DDF44C
; ---------------------------------------------------------------------------

loc_67DDF835:				; CODE XREF: sub_67DDF410+266j
		mov	ebx, 6
		jmp	loc_67DDF44C
sub_67DDF410	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DDF840(char	*)
sub_67DDF840	proc near		; CODE XREF: dbus_message_iter_open_container+20Ap
					; dbus_message_iter_append_basic+292p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 44h
		mov	edx, [esp+4Ch+arg_0]
		test	edx, edx
		jz	loc_67DDF90D
		lea	ebx, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_48], edx ;	char *
		mov	[esp+4Ch+var_4C], ebx ;	int
		call	sub_67E03060
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_3C], offset a_dbus_valida_3 ; "_dbus_validate_signature"
		mov	[esp+4Ch+var_40], 4B2h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStart0 ; "start >= 0"
		mov	[esp+4Ch+var_4C], 1
		mov	esi, eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_3C], offset a_dbus_valida_3 ; "_dbus_validate_signature"
		mov	[esp+4Ch+var_40], 4B3h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStart_dbus_str ; "start <= _dbus_string_get_length (str)"
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_valida_3 ; "_dbus_validate_signature"
		mov	[esp+4Ch+var_40], 4B4h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aLen0 ; "len >= 0"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		mov	edx, eax
		xor	eax, eax
		cmp	esi, edx
		jle	short loc_67DDF913

loc_67DDF90D:				; CODE XREF: sub_67DDF840+Dj
		add	esp, 44h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DDF913:				; CODE XREF: sub_67DDF840+CBj
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DDF410
		test	eax, eax
		setz	al
		add	esp, 44h
		movzx	eax, al
		pop	ebx
		pop	esi
		retn
sub_67DDF840	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DDF930	proc near		; CODE XREF: sub_67DDF930+47Ep
					; sub_67DDF930+516p ...

var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
Format		= dword	ptr -0C0h
var_BC		= byte ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_84		= byte ptr -84h
var_68		= byte ptr -68h
var_4C		= byte ptr -4Ch
var_30		= byte ptr -30h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 0BCh
		mov	eax, 39h
		mov	[esp+0CCh+var_9C], edx
		mov	edx, [esp+0CCh+arg_0]
		mov	[esp+0CCh+var_A0], ecx
		mov	esi, [esp+0CCh+arg_8]
		cmp	edx, 40h
		jg	loc_67DDFA98
		add	edx, 1
		mov	[esp+0CCh+var_94], edx
		lea	edi, [esp+0CCh+var_30]

loc_67DDF96E:				; CODE XREF: sub_67DDF930+1A6j
		mov	[esp+0CCh+var_CC], ebx
		call	sub_67DDB560
		test	eax, eax
		mov	ebp, eax
		jz	loc_67DDFF30
		mov	edx, [esp+0CCh+arg_4]
		cmp	edx, esi
		jz	loc_67DDFF26
		lea	eax, [ebp-61h]
		cmp	eax, 18h	; switch 25 cases
		jbe	loc_67DDFAA3

loc_67DDF99B:				; CODE XREF: sub_67DDF930:loc_67DDFAA3j
					; DATA XREF: .rdata:off_67E225A0o
		mov	[esp+0CCh+var_C4], 28Dh	; jumptable 67DDFAA3 default case
		mov	[esp+0CCh+var_C8], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0CCh+var_CC], offset aInvalidTypec_0 ; "invalid typecode in supposedly-validate"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DDF9B7:				; CODE XREF: sub_67DDF930+29Cj
					; sub_67DDF930+2ADj
		mov	edx, [esp+0CCh+var_9C]
		mov	[esp+0CCh+var_C8], eax
		mov	[esp+0CCh+var_CC], edx
		call	sub_67DFC500
		mov	dword ptr [esp+0CCh+var_BC], offset aValidate_body_ ; "validate_body_helper"
		mov	[esp+0CCh+Format], 186h
		mov	[esp+0CCh+var_C4], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0CCh+var_C8], offset aPEnd	; "p <=	end"
		mov	[esp+0CCh+var_98], eax
		mov	eax, [esp+0CCh+arg_4]
		add	eax, 4
		cmp	esi, eax
		mov	[esp+0CCh+arg_4], eax
		setnb	al
		movzx	eax, al
		mov	[esp+0CCh+var_CC], eax
		call	sub_67DFAE70
		cmp	ebp, 61h
		jz	loc_67DE0056
		mov	ecx, [esp+0CCh+arg_4]

loc_67DDFA1C:				; CODE XREF: sub_67DDF930+76Dj
					; sub_67DDF930+77Ej
		mov	eax, esi
		sub	eax, ecx
		cmp	[esp+0CCh+var_98], eax
		ja	loc_67DE011F
		cmp	ebp, 6Fh
		jz	loc_67DDFF95
		cmp	ebp, 73h
		jnz	loc_67DDFEB0
		mov	edx, [esp+0CCh+var_98]
		mov	[esp+0CCh+var_C8], ecx
		mov	[esp+0CCh+var_CC], edi
		mov	[esp+0CCh+var_C4], edx
		call	sub_67E01AC0
		mov	[esp+0CCh+var_CC], edi
		call	sub_67E00CE0
		mov	[esp+0CCh+var_C8], 0
		mov	[esp+0CCh+var_CC], edi
		mov	[esp+0CCh+var_C4], eax
		call	sub_67E02000
		test	eax, eax
		jz	loc_67DE01AA

loc_67DDFA74:				; CODE XREF: sub_67DDF930+68Cj
		mov	edx, [esp+0CCh+var_98]
		add	edx, [esp+0CCh+arg_4]
		mov	[esp+0CCh+arg_4], edx

loc_67DDFA86:				; CODE XREF: sub_67DDF930+638j
		cmp	esi, edx
		jz	loc_67DDFF26
		cmp	byte ptr [edx],	0
		jz	short loc_67DDFAB0 ; jumptable 67DDFAA3	case 24
		mov	eax, 2Eh

loc_67DDFA98:				; CODE XREF: sub_67DDF930+2Aj
					; sub_67DDF930+382j ...
		add	esp, 0BCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDFAA3:				; CODE XREF: sub_67DDF930+65j
		jmp	ds:off_67E225A0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_67DDFAB0:				; CODE XREF: sub_67DDF930+161j
					; sub_67DDF930:loc_67DDFAA3j
					; DATA XREF: ...
		add	edx, 1		; jumptable 67DDFAA3 case 24
		mov	[esp+0CCh+arg_4], edx

loc_67DDFABA:				; CODE XREF: sub_67DDF930+419j
					; sub_67DDF930+434j ...
		cmp	esi, edx
		jb	loc_67DE0018
		mov	ebp, [esp+0CCh+var_A0]
		test	ebp, ebp
		jz	loc_67DDFF30
		mov	[esp+0CCh+var_CC], ebx
		call	sub_67DDB6A0
		jmp	loc_67DDF96E
; ---------------------------------------------------------------------------
		align 10h

loc_67DDFAE0:				; CODE XREF: sub_67DDF930:loc_67DDFAA3j
					; DATA XREF: .rdata:off_67E225A0o
		movzx	ebp, byte ptr [edx] ; jumptable	67DDFAA3 case 21
		mov	eax, esi
		add	edx, 1
		sub	eax, edx
		lea	ecx, [ebp+1]
		cmp	ecx, eax
		ja	loc_67DE00F6
		mov	[esp+0CCh+arg_4], edx
		mov	[esp+0CCh+var_C8], edx
		mov	[esp+0CCh+var_C4], ebp
		mov	[esp+0CCh+var_CC], edi
		call	sub_67E01AC0
		mov	[esp+0CCh+var_CC], edi
		call	sub_67E00CE0
		mov	edx, eax
		mov	eax, edi
		call	sub_67DDF410
		test	eax, eax
		jnz	loc_67DE00DF
		add	ebp, [esp+0CCh+arg_4]
		mov	[esp+0CCh+arg_4], ebp
		cmp	byte ptr [ebp+0], 0
		jnz	loc_67DE0107
		add	ebp, 1
		mov	[esp+0CCh+arg_4], ebp
		mov	[esp+0CCh+var_C8], 0
		mov	[esp+0CCh+var_CC], edi
		call	sub_67DFD040
		test	eax, eax
		jz	loc_67DE0100
		mov	[esp+0CCh+var_CC], eax
		call	sub_67DFC5E0
		mov	edx, [esp+0CCh+arg_4]
		mov	ecx, eax
		neg	ecx
		lea	eax, [edx+eax-1]
		and	ecx, eax
		cmp	esi, ecx
		jb	loc_67DDFF26
		cmp	edx, ecx
		jnz	short loc_67DDFBA2
		jmp	loc_67DDFDC7
; ---------------------------------------------------------------------------
		align 10h

loc_67DDFB90:				; CODE XREF: sub_67DDF930+275j
		add	edx, 1
		cmp	ecx, edx
		mov	[esp+0CCh+arg_4], edx
		jz	loc_67DDFDC7

loc_67DDFBA2:				; CODE XREF: sub_67DDF930+252j
		cmp	byte ptr [edx],	0
		jz	short loc_67DDFB90

loc_67DDFBA7:				; CODE XREF: sub_67DDF930+2B8j
					; sub_67DDF930+30Bj ...
		add	esp, 0BCh
		mov	eax, 9
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DDFBB7:				; CODE XREF: sub_67DDF930:loc_67DDFAA3j
					; DATA XREF: .rdata:off_67E225A0o
		lea	eax, [edx+3]	; jumptable 67DDFAA3 cases 0,14,18
		and	eax, 0FFFFFFFCh
		lea	ecx, [eax+4]
		cmp	esi, ecx
		jb	loc_67DDFF26
		cmp	edx, eax
		jnz	short loc_67DDFBE3
		jmp	loc_67DDF9B7
; ---------------------------------------------------------------------------

loc_67DDFBD1:				; CODE XREF: sub_67DDF930+2B6j
		add	edx, 1
		cmp	eax, edx
		mov	[esp+0CCh+arg_4], edx
		jz	loc_67DDF9B7

loc_67DDFBE3:				; CODE XREF: sub_67DDF930+29Aj
		cmp	byte ptr [edx],	0
		jz	short loc_67DDFBD1
		jmp	short loc_67DDFBA7
; ---------------------------------------------------------------------------
		align 10h

loc_67DDFBF0:				; CODE XREF: sub_67DDF930:loc_67DDFAA3j
					; DATA XREF: .rdata:off_67E225A0o
		mov	[esp+0CCh+var_CC], ebp ; jumptable 67DDFAA3 cases 1,3,7,8,13,16,19,20,23
		call	sub_67DFC5E0
		mov	[esp+0CCh+var_98], eax
		mov	eax, [esp+0CCh+arg_4]
		mov	edx, [esp+0CCh+var_98]
		mov	ecx, [esp+0CCh+var_98]
		neg	edx
		lea	ecx, [eax+ecx-1]
		and	edx, ecx
		cmp	esi, edx
		jbe	loc_67DDFF26
		cmp	eax, edx
		jnz	short loc_67DDFC36
		jmp	loc_67DDFD50
; ---------------------------------------------------------------------------

loc_67DDFC24:				; CODE XREF: sub_67DDF930+309j
		add	eax, 1
		cmp	edx, eax
		mov	[esp+0CCh+arg_4], eax
		jz	loc_67DDFD50

loc_67DDFC36:				; CODE XREF: sub_67DDF930+2EDj
		cmp	byte ptr [eax],	0
		jz	short loc_67DDFC24
		jmp	loc_67DDFBA7
; ---------------------------------------------------------------------------

loc_67DDFC40:				; CODE XREF: sub_67DDF930:loc_67DDFAA3j
					; DATA XREF: .rdata:off_67E225A0o
		lea	eax, [edx+7]	; jumptable 67DDFAA3 cases 4,17
		and	eax, 0FFFFFFF8h
		cmp	esi, eax
		jb	loc_67DDFF26
		cmp	edx, eax
		jnz	short loc_67DDFC69
		jmp	loc_67DDFD70
; ---------------------------------------------------------------------------

loc_67DDFC57:				; CODE XREF: sub_67DDF930+33Cj
		add	edx, 1
		cmp	eax, edx
		mov	[esp+0CCh+arg_4], edx
		jz	loc_67DDFD70

loc_67DDFC69:				; CODE XREF: sub_67DDF930+320j
		cmp	byte ptr [edx],	0
		jz	short loc_67DDFC57
		jmp	loc_67DDFBA7
; ---------------------------------------------------------------------------

loc_67DDFC73:				; CODE XREF: sub_67DDF930:loc_67DDFAA3j
					; DATA XREF: .rdata:off_67E225A0o
		movzx	ebp, byte ptr [edx] ; jumptable	67DDFAA3 case 6
		mov	eax, esi
		add	edx, 1
		sub	eax, edx
		lea	ecx, [ebp+1]
		cmp	ecx, eax
		ja	loc_67DE00D5
		mov	[esp+0CCh+arg_4], edx
		mov	[esp+0CCh+var_C8], edx
		mov	[esp+0CCh+var_C4], ebp
		mov	[esp+0CCh+var_CC], edi
		call	sub_67E01AC0
		mov	[esp+0CCh+var_CC], edi
		call	sub_67E00CE0
		mov	edx, eax
		mov	eax, edi
		call	sub_67DDF410
		test	eax, eax
		jnz	loc_67DDFA98
		mov	eax, [esp+0CCh+arg_4]
		mov	dword ptr [esp+0CCh+var_BC], offset aValidate_body_ ; "validate_body_helper"
		mov	[esp+0CCh+Format], 21Eh
		mov	[esp+0CCh+var_C4], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		add	eax, ebp
		cmp	esi, eax
		mov	[esp+0CCh+arg_4], eax
		setnbe	al
		movzx	eax, al
		mov	[esp+0CCh+var_CC], eax
		mov	[esp+0CCh+var_C8], offset aPEnd_0 ; "p < end"
		call	sub_67DFAE70
		mov	eax, [esp+0CCh+arg_4]
		cmp	byte ptr [eax],	0
		jnz	loc_67DE0115
		add	eax, 1
		mov	[esp+0CCh+arg_4], eax
		mov	[esp+0CCh+var_B4], ebp
		mov	[esp+0CCh+var_B8], esi
		mov	dword ptr [esp+0CCh+var_BC], eax ; char
		mov	[esp+0CCh+Format], offset aPPEndPClaimed_ ; "p = %p end	= %p claimed_len %u\n"
		mov	[esp+0CCh+var_C4], offset aValidate_body_ ; "validate_body_helper"
		mov	[esp+0CCh+var_C8], 224h	; int
		mov	[esp+0CCh+var_CC], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, [esp+0CCh+arg_4]
		jmp	loc_67DDFABA
; ---------------------------------------------------------------------------
		align 10h

loc_67DDFD50:				; CODE XREF: sub_67DDF930+2EFj
					; sub_67DDF930+300j
		cmp	ebp, 62h
		jz	loc_67DDFF70

loc_67DDFD59:				; CODE XREF: sub_67DDF930+660j
		add	edx, [esp+0CCh+var_98]
		mov	[esp+0CCh+arg_4], edx
		jmp	loc_67DDFABA
; ---------------------------------------------------------------------------
		align 10h

loc_67DDFD70:				; CODE XREF: sub_67DDF930+322j
					; sub_67DDF930+333j
		lea	ecx, [esp+0CCh+var_84]
		mov	[esp+0CCh+var_C8], ecx
		mov	[esp+0CCh+var_CC], ebx
		call	sub_67DDC730
		mov	edx, [esp+0CCh+var_94]
		lea	eax, [esp+0CCh+arg_4]
		mov	[esp+0CCh+Format], eax
		mov	eax, [esp+0CCh+arg_4]
		mov	ecx, 1
		mov	[esp+0CCh+var_C4], esi
		mov	[esp+0CCh+var_CC], edx
		mov	edx, [esp+0CCh+var_9C]
		mov	[esp+0CCh+var_C8], eax
		lea	eax, [esp+0CCh+var_84]
		call	sub_67DDF930
		test	eax, eax
		jnz	loc_67DDFA98

loc_67DDFDBB:				; CODE XREF: sub_67DDF930+5F1j
					; sub_67DDF930+62Bj ...
		mov	edx, [esp+0CCh+arg_4]
		jmp	loc_67DDFABA
; ---------------------------------------------------------------------------

loc_67DDFDC7:				; CODE XREF: sub_67DDF930+254j
					; sub_67DDF930+26Cj
		lea	ecx, [esp+0CCh+var_68]
		mov	[esp+0CCh+var_CC], ecx
		mov	[esp+0CCh+var_C4], 0
		mov	[esp+0CCh+var_C8], edi
		call	sub_67DDAF90
		lea	eax, [esp+0CCh+var_68]
		mov	[esp+0CCh+var_CC], eax
		call	sub_67DDB560
		mov	dword ptr [esp+0CCh+var_BC], offset aValidate_body_ ; "validate_body_helper"
		mov	[esp+0CCh+Format], 263h
		mov	[esp+0CCh+var_C4], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0CCh+var_C8], offset a_dbus_type__27 ; "_dbus_type_reader_get_current_type	(&su"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+0CCh+var_CC], eax
		call	sub_67DFAE70
		mov	eax, [esp+0CCh+arg_4]
		lea	edx, [esp+0CCh+arg_4]
		mov	ecx, [esp+0CCh+var_94]
		mov	[esp+0CCh+Format], edx
		mov	edx, [esp+0CCh+var_9C]
		mov	[esp+0CCh+var_C4], esi
		mov	[esp+0CCh+var_C8], eax
		lea	eax, [esp+0CCh+var_68]
		mov	[esp+0CCh+var_CC], ecx
		xor	ecx, ecx
		call	sub_67DDF930
		test	eax, eax
		jnz	loc_67DDFA98
		lea	eax, [esp+0CCh+var_68]
		mov	[esp+0CCh+var_CC], eax
		call	sub_67DDB6A0
		test	eax, eax
		jnz	loc_67DE0129
		lea	edx, [esp+0CCh+var_68]
		mov	[esp+0CCh+var_CC], edx
		call	sub_67DDB560
		mov	dword ptr [esp+0CCh+var_BC], offset aValidate_body_ ; "validate_body_helper"
		mov	[esp+0CCh+Format], 26Eh
		mov	[esp+0CCh+var_C4], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0CCh+var_C8], offset a_dbus_type__28 ; "_dbus_type_reader_get_current_type	(&su"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+0CCh+var_CC], eax
		call	sub_67DFAE70
		mov	edx, [esp+0CCh+arg_4]
		jmp	loc_67DDFABA
; ---------------------------------------------------------------------------
		align 10h

loc_67DDFEB0:				; CODE XREF: sub_67DDF930+106j
		mov	eax, [esp+0CCh+var_98]
		test	eax, eax
		jz	loc_67DDFF58
		cmp	ebp, 61h
		jnz	loc_67DDFF61
		cmp	[esp+0CCh+var_98], 4000000h
		ja	loc_67DE0195
		lea	ecx, [esp+0CCh+var_4C]
		mov	[esp+0CCh+var_C8], ecx
		mov	[esp+0CCh+var_CC], ebx
		call	sub_67DDC730
		mov	ebp, [esp+0CCh+var_98]
		add	ebp, [esp+0CCh+arg_4]
		mov	[esp+0CCh+var_CC], ebx
		call	sub_67DDB6E0
		mov	[esp+0CCh+var_CC], eax
		mov	[esp+0CCh+var_A4], eax
		call	dbus_type_is_fixed
		mov	edx, [esp+0CCh+var_A4]
		test	eax, eax
		jz	loc_67DDFFD0
		cmp	edx, 62h
		jz	loc_67DE0135
		mov	[esp+0CCh+arg_4], ebp
		jmp	loc_67DDFDBB
; ---------------------------------------------------------------------------

loc_67DDFF26:				; CODE XREF: sub_67DDF930+59j
					; sub_67DDF930+158j ...
		mov	eax, 0Bh
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DDFF30:				; CODE XREF: sub_67DDF930+4Aj
					; sub_67DDF930+198j
		mov	ebx, [esp+0CCh+arg_C]
		xor	eax, eax
		test	ebx, ebx
		jz	loc_67DDFA98
		mov	eax, [esp+0CCh+arg_4]
		mov	ecx, [esp+0CCh+arg_C]
		mov	[ecx], eax
		xor	eax, eax
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DDFF58:				; CODE XREF: sub_67DDF930+586j
		cmp	ebp, 61h
		jz	loc_67DDFDBB

loc_67DDFF61:				; CODE XREF: sub_67DDF930+58Fj
		mov	edx, [esp+0CCh+arg_4]
		jmp	loc_67DDFA86
; ---------------------------------------------------------------------------
		align 10h

loc_67DDFF70:				; CODE XREF: sub_67DDF930+423j
		mov	eax, [esp+0CCh+var_9C]
		mov	[esp+0CCh+var_C8], edx
		mov	[esp+0CCh+var_CC], eax
		call	sub_67DFC500
		cmp	eax, 1
		ja	loc_67DE018B
		mov	edx, [esp+0CCh+arg_4]
		jmp	loc_67DDFD59
; ---------------------------------------------------------------------------

loc_67DDFF95:				; CODE XREF: sub_67DDF930+FDj
		mov	eax, [esp+0CCh+var_98]
		mov	[esp+0CCh+var_C8], ecx
		mov	[esp+0CCh+var_CC], edi
		mov	[esp+0CCh+var_C4], eax
		call	sub_67E01AC0
		mov	[esp+0CCh+var_CC], edi
		call	sub_67E00CE0
		mov	edx, eax
		mov	eax, edi
		call	sub_67DDEF20
		test	eax, eax
		jnz	loc_67DDFA74
		mov	al, 25h
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------
		align 10h

loc_67DDFFD0:				; CODE XREF: sub_67DDF930+5DBj
		mov	[esp+0CCh+var_98], ebx
		mov	ebx, [esp+0CCh+var_94]

loc_67DDFFD8:				; CODE XREF: sub_67DDF930+6E1j
		mov	eax, [esp+0CCh+arg_4]
		cmp	ebp, eax
		jbe	loc_67DE00BE
		lea	edx, [esp+0CCh+arg_4]
		xor	ecx, ecx
		mov	[esp+0CCh+Format], edx
		mov	edx, [esp+0CCh+var_9C]
		mov	[esp+0CCh+var_C8], eax
		lea	eax, [esp+0CCh+var_4C]
		mov	[esp+0CCh+var_C4], esi
		mov	[esp+0CCh+var_CC], ebx
		call	sub_67DDF930
		test	eax, eax
		jz	short loc_67DDFFD8
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE0018:				; CODE XREF: sub_67DDF930+18Cj
		mov	eax, esi
		sub	eax, edx
		mov	[esp+0CCh+var_B4], eax
		mov	[esp+0CCh+var_B8], esi
		mov	dword ptr [esp+0CCh+var_BC], edx ; char
		mov	[esp+0CCh+Format], offset aNotEnoughDataP ; "not enough	data!!!	p = %p end = %p	end-"...
		mov	[esp+0CCh+var_C4], offset aValidate_body_ ; "validate_body_helper"
		mov	[esp+0CCh+var_C8], 29Ah	; int
		mov	[esp+0CCh+var_CC], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 0Bh
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE0056:				; CODE XREF: sub_67DDF930+DFj
		mov	[esp+0CCh+var_CC], ebx
		call	sub_67DDB6E0
		mov	[esp+0CCh+var_CC], eax
		mov	[esp+0CCh+var_A4], eax
		call	sub_67DFC1D0
		mov	edx, [esp+0CCh+var_A4]
		test	eax, eax
		jz	loc_67DE01B1
		mov	[esp+0CCh+var_CC], edx
		call	sub_67DFC5E0
		mov	edx, eax
		mov	eax, [esp+0CCh+arg_4]
		mov	ecx, edx
		neg	ecx
		lea	edx, [eax+edx-1]
		and	ecx, edx
		cmp	esi, ecx
		jb	loc_67DDFF26
		cmp	eax, ecx
		jnz	short loc_67DE00B4
		jmp	loc_67DDFA1C
; ---------------------------------------------------------------------------

loc_67DE00A2:				; CODE XREF: sub_67DDF930+787j
		add	eax, 1
		cmp	ecx, eax
		mov	[esp+0CCh+arg_4], eax
		jz	loc_67DDFA1C

loc_67DE00B4:				; CODE XREF: sub_67DDF930+76Bj
		cmp	byte ptr [eax],	0
		jz	short loc_67DE00A2
		jmp	loc_67DDFBA7
; ---------------------------------------------------------------------------

loc_67DE00BE:				; CODE XREF: sub_67DDF930+6B1j
		mov	ebx, [esp+0CCh+var_98]

loc_67DE00C2:				; CODE XREF: sub_67DDF930+822j
					; sub_67DDF930+875j
		cmp	ebp, eax
		jz	loc_67DDFDBB
		mov	eax, 28h
		nop
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE00D5:				; CODE XREF: sub_67DDF930+352j
		mov	eax, 26h
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE00DF:				; CODE XREF: sub_67DDF930+1EFj
		cmp	eax, 0FFFFFFFCh
		setnz	al
		movzx	eax, al
		sub	eax, 1
		and	eax, 0FFFFFFD2h
		add	eax, 2Ah
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE00F6:				; CODE XREF: sub_67DDF930+1BFj
		mov	eax, 29h
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE0100:				; CODE XREF: sub_67DDF930+229j
		mov	al, 2Bh
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE0107:				; CODE XREF: sub_67DDF930+207j
		mov	eax, 2Dh
		lea	esi, [esi+0]
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE0115:				; CODE XREF: sub_67DDF930+3D2j
		mov	eax, 2Fh
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE011F:				; CODE XREF: sub_67DDF930+F4j
		mov	eax, 23h
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE0129:				; CODE XREF: sub_67DDF930+531j
		mov	eax, 2Ch
		xchg	ax, ax
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE0135:				; CODE XREF: sub_67DDF930+5E4j
		mov	[esp+0CCh+var_CC], 62h
		lea	esi, [esi+0]
		call	sub_67DFC5E0
		mov	[esp+0CCh+var_98], eax
		mov	eax, [esp+0CCh+arg_4]
		cmp	ebp, eax
		jbe	loc_67DE00C2
		mov	[esp+0CCh+var_90], esi
		mov	esi, ebx
		mov	ebx, [esp+0CCh+var_9C]
		jmp	short loc_67DE017A
; ---------------------------------------------------------------------------

loc_67DE0164:				; CODE XREF: sub_67DDF930+859j
		mov	eax, [esp+0CCh+var_98]
		add	eax, [esp+0CCh+arg_4]
		cmp	ebp, eax
		mov	[esp+0CCh+arg_4], eax
		jbe	short loc_67DE019F

loc_67DE017A:				; CODE XREF: sub_67DDF930+832j
		mov	[esp+0CCh+var_C8], eax
		mov	[esp+0CCh+var_CC], ebx
		call	sub_67DFC500
		cmp	eax, 1
		jbe	short loc_67DE0164

loc_67DE018B:				; CODE XREF: sub_67DDF930+653j
		mov	eax, 0Ah
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE0195:				; CODE XREF: sub_67DDF930+59Dj
		mov	eax, 24h
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE019F:				; CODE XREF: sub_67DDF930+848j
		mov	ebx, esi
		mov	esi, [esp+0CCh+var_90]
		jmp	loc_67DE00C2
; ---------------------------------------------------------------------------

loc_67DE01AA:				; CODE XREF: sub_67DDF930+13Ej
		mov	al, 27h
		jmp	loc_67DDFA98
; ---------------------------------------------------------------------------

loc_67DE01B1:				; CODE XREF: sub_67DDF930+740j
		mov	al, 1
		jmp	loc_67DDFA98
sub_67DDF930	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE01C0	proc near		; CODE XREF: sub_67DD94B0+240p
					; sub_67DE5570+354p

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
Format		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= byte ptr  18h
arg_18		= dword	ptr  1Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	esi, [esp+6Ch+arg_18]
		mov	edi, dword ptr [esp+6Ch+arg_14]
		mov	ebp, [esp+6Ch+arg_10]
		mov	ebx, [esp+6Ch+arg_0]
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+var_6C], eax
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_valida_5 ; "_dbus_validate_body_with_reason"
		mov	[esp+6Ch+Format], 2CCh
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aLen0 ; "len >= 0"
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+var_6C], eax
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_valida_5 ; "_dbus_validate_body_with_reason"
		mov	[esp+6Ch+Format], 2CDh
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aValue_pos0_0 ; "value_pos >= 0"
		call	sub_67DFAE70
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67E00CE0
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_valida_5 ; "_dbus_validate_body_with_reason"
		mov	[esp+6Ch+Format], 2CEh
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aValue_pos_db_0 ; "value_pos <= _dbus_string_get_length (v"...
		sub	eax, esi
		cmp	eax, edi
		setnl	al
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_6C], ebx
		mov	[esp+6Ch+var_64], 0
		mov	[esp+6Ch+var_68], eax
		call	sub_67E01280
		mov	[esp+6Ch+var_58], esi
		mov	dword ptr [esp+6Ch+var_5C], edi	; char
		mov	[esp+6Ch+Format], offset aValidatingBody ; "validating body from pos %d	len %d sig "...
		mov	[esp+6Ch+var_64], offset a_dbus_valida_5 ; "_dbus_validate_body_with_reason"
		mov	[esp+6Ch+var_68], 2D3h ; int
		mov	[esp+6Ch+var_54], eax
		mov	[esp+6Ch+var_6C], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_68], ebx
		lea	ebx, [esp+6Ch+var_3C]
		mov	[esp+6Ch+var_6C], ebx
		mov	[esp+6Ch+var_64], edx
		call	sub_67DDAF90
		mov	[esp+6Ch+var_64], esi
		mov	[esp+6Ch+var_68], edi
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67E01280
		lea	edx, [esp+6Ch+var_20]
		mov	ecx, 1
		mov	[esp+6Ch+Format], edx
		mov	edx, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_6C], 0
		mov	[esp+6Ch+var_20], eax
		lea	esi, [eax+esi]
		mov	[esp+6Ch+var_68], eax
		mov	eax, ebx
		mov	[esp+6Ch+var_64], esi
		call	sub_67DDF930
		test	eax, eax
		jnz	short loc_67DE032C
		mov	edx, [esp+6Ch+arg_C]
		test	edx, edx
		jz	short loc_67DE0334
		mov	edx, [esp+6Ch+arg_C]
		sub	esi, [esp+6Ch+var_20]
		mov	[edx], esi

loc_67DE032C:				; CODE XREF: sub_67DE01C0+158j
					; sub_67DE01C0+17Fj ...
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE0334:				; CODE XREF: sub_67DE01C0+160j
		cmp	esi, [esp+6Ch+var_20]
		jbe	short loc_67DE0341
		mov	eax, 0Ch
		jmp	short loc_67DE032C
; ---------------------------------------------------------------------------

loc_67DE0341:				; CODE XREF: sub_67DE01C0+178j
		setz	dl
		movzx	edx, dl
		mov	[esp+6Ch+var_40], eax
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_valida_5 ; "_dbus_validate_body_with_reason"
		mov	[esp+6Ch+Format], 2E8h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_3 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aPEnd_1 ; "p == end"
		mov	[esp+6Ch+var_6C], edx
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+var_40]
		jmp	short loc_67DE032C
sub_67DE01C0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  97. dbus_message_contains_unix_fds

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_contains_unix_fds
dbus_message_contains_unix_fds proc near
		xor	eax, eax
		retn
dbus_message_contains_unix_fds endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		add	dword ptr [eax], 1
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE03A0	proc near		; CODE XREF: sub_67DF48E0+1D6p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax+18h]
		xor	eax, eax
		test	edx, edx
		jz	short locret_67DE03B0
		mov	eax, [edx+8]

locret_67DE03B0:			; CODE XREF: sub_67DE03A0+Bj
		rep retn
sub_67DE03A0	endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_67DF30F0

loc_67DE03C0:				; CODE XREF: sub_67DF30F0+11j
		mov	eax, [esp+arg_0]
		mov	eax, [eax+1Ch]
		retn
; END OF FUNCTION CHUNK	FOR sub_67DF30F0
; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_67DF30D0

loc_67DE03D0:				; CODE XREF: sub_67DF30D0+11j
		mov	eax, [esp+arg_0]
		mov	eax, [eax+20h]
		retn
; END OF FUNCTION CHUNK	FOR sub_67DF30D0
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 164. dbus_message_type_to_string

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_type_to_string
dbus_message_type_to_string proc near	; CODE XREF: sub_67DCD2A0+15Ap
					; sub_67DCD730+11Bp ...

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, offset aInvalid ; "invalid"
		sub	edx, 1
		cmp	edx, 3
		ja	short locret_67DE03F8
		mov	eax, ds:off_67E25008[edx*4]

locret_67DE03F8:			; CODE XREF: dbus_message_type_to_string+Fj
		rep retn
dbus_message_type_to_string endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 100. dbus_message_demarshal_bytes_needed

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_demarshal_bytes_needed
dbus_message_demarshal_bytes_needed proc near

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_34		= byte ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= byte ptr -14h
var_10		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 6Ch
		mov	[esp+6Ch+var_C], ebx
		mov	ebx, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_8], esi
		mov	eax, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_4], edi
		cmp	ebx, 0Fh
		jg	short loc_67DE0430

loc_67DE041C:				; CODE XREF: dbus_message_demarshal_bytes_needed+32j
		xor	eax, eax

loc_67DE041E:				; CODE XREF: dbus_message_demarshal_bytes_needed+BEj
					; dbus_message_demarshal_bytes_needed+10Dj
		mov	ebx, [esp+6Ch+var_C]
		mov	esi, [esp+6Ch+var_8]
		mov	edi, [esp+6Ch+var_4]
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE0430:				; CODE XREF: dbus_message_demarshal_bytes_needed+1Aj
		test	eax, eax
		jz	short loc_67DE041C
		cmp	ebx, 8000000h
		jle	short loc_67DE0441
		mov	ebx, 8000000h

loc_67DE0441:				; CODE XREF: dbus_message_demarshal_bytes_needed+3Aj
		lea	esi, [esp+6Ch+var_34]
		mov	[esp+6Ch+var_68], eax
		mov	[esp+6Ch+var_20], 0
		mov	[esp+6Ch+var_64], ebx
		mov	[esp+6Ch+var_6C], esi
		call	sub_67E01AC0
		lea	eax, [esp+6Ch+var_1C]
		mov	[esp+6Ch+var_58], eax
		lea	eax, [esp+6Ch+var_18]
		mov	[esp+6Ch+var_5C], eax
		lea	eax, [esp+6Ch+var_14]
		mov	[esp+6Ch+var_60], eax
		lea	eax, [esp+6Ch+var_10]
		mov	[esp+6Ch+var_64], eax
		lea	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_20], 0
		mov	[esp+6Ch+var_4C], ebx
		mov	[esp+6Ch+var_50], 0
		mov	[esp+6Ch+var_54], esi
		mov	[esp+6Ch+var_68], eax
		mov	[esp+6Ch+var_6C], 8000000h
		call	sub_67DD8850
		mov	[esp+6Ch+var_6C], esi
		mov	edi, eax
		call	sub_67E02BF0
		mov	edx, [esp+6Ch+var_20]
		mov	eax, 0FFFFFFFFh
		test	edx, edx
		jnz	loc_67DE041E
		test	edi, edi
		mov	eax, 1
		jnz	short loc_67DE04DD
		mov	eax, [esp+6Ch+var_1C]
		add	eax, [esp+6Ch+var_18]
		cmp	eax, ebx
		setnle	al
		movzx	eax, al

loc_67DE04DD:				; CODE XREF: dbus_message_demarshal_bytes_needed+CBj
		mov	[esp+6Ch+var_6C], eax
		mov	[esp+6Ch+var_5C], offset aDbus_message_d ; "dbus_message_demarshal_bytes_needed"
		mov	[esp+6Ch+var_60], 1253h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aHave_messageHe ; "have_message || (header_len	+ body_len)"...
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+var_1C]
		add	eax, [esp+6Ch+var_18]
		jmp	loc_67DE041E
dbus_message_demarshal_bytes_needed endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+30h]
		test	byte ptr [ebx+28h], 1
		jnz	short loc_67DE0567
		xor	eax, eax
		cmp	dword ptr [ebx+24h], 0
		setz	al

loc_67DE0537:				; CODE XREF: .text:67DE0570j
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_messa_19 ; "_dbus_message_loader_get_corruption_rea"...
		mov	dword ptr [esp+0Ch], 10C7h
		mov	dword ptr [esp+8], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLoaderCorrup_1 ; "(loader->corrupted	&& loader->corruptio"...
		call	sub_67DFAE70
		mov	eax, [ebx+24h]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE0567:				; CODE XREF: .text:67DE052Cj
		xor	eax, eax
		cmp	dword ptr [ebx+24h], 0
		setnz	al
		jmp	short loc_67DE0537
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE0580	proc near		; CODE XREF: sub_67DF4C20+B8p
					; sub_67DF4C20+E7p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		test	byte ptr [ebx+28h], 1
		jnz	short loc_67DE05D0
		xor	eax, eax
		cmp	dword ptr [ebx+24h], 0
		setz	al

loc_67DE0597:				; CODE XREF: sub_67DE0580+59j
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_messa_15 ; "_dbus_message_loader_get_is_corrupted"
		mov	[esp+2Ch+var_20], 10B9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLoaderCorrup_1 ; "(loader->corrupted && loader->corruptio"...
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+28h]
		add	esp, 28h
		pop	ebx
		and	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE05D0:				; CODE XREF: sub_67DE0580+Cj
		xor	eax, eax
		cmp	dword ptr [ebx+24h], 0
		setnz	al
		jmp	short loc_67DE0597
sub_67DE0580	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE05E0	proc near		; CODE XREF: sub_67DF48E0+173p
					; sub_67DF48E0+23Ep ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_messa_13 ; "_dbus_message_loader_return_buffer"
		mov	[esp+2Ch+var_20], 0F03h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLoaderBuffer_0 ; "loader->buffer_outstanding"
		movzx	eax, byte ptr [ebx+28h]
		shr	al, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+4]
		cmp	[esp+2Ch+arg_4], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_messa_13 ; "_dbus_message_loader_return_buffer"
		mov	[esp+2Ch+var_20], 0F04h
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aBufferLoaderDa ; "buffer == &loader->data"
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		and	byte ptr [ebx+28h], 0FDh
		add	esp, 28h
		pop	ebx
		retn
sub_67DE05E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE0660	proc near		; CODE XREF: sub_67DF48E0+C3p
					; sub_67DF48E0+284p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_messa_12 ; "_dbus_message_loader_get_buffer"
		mov	[esp+2Ch+var_20], 0EEDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLoaderBuffer_o ; "!loader->buffer_outstanding"
		movzx	eax, byte ptr [ebx+28h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_4]
		lea	edx, [ebx+4]
		mov	[eax], edx
		or	byte ptr [ebx+28h], 2
		add	esp, 28h
		pop	ebx
		retn
sub_67DE0660	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	eax, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_messa_20 ; "_dbus_message_get_unix_fds"
		mov	dword ptr [esp+0Ch], 0B4h
		mov	dword ptr [esp+8], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aMessageLocke_0 ; "message->locked"
		movzx	eax, byte ptr [eax+59h]
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [esp+34h]
		mov	dword ptr [eax], 0
		mov	eax, [esp+38h]
		mov	dword ptr [eax], 0
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE0700	proc near		; CODE XREF: sub_67DF5CD0+F1p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_messa_21 ; "_dbus_message_get_network_data"
		mov	[esp+2Ch+var_20], 0A1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aMessageLocke_0 ; "message->locked"
		movzx	eax, byte ptr [ebx+59h]
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_4]
		lea	edx, [ebx+4]
		add	ebx, 44h
		mov	[eax], edx
		mov	eax, [esp+2Ch+arg_8]
		mov	[eax], ebx
		add	esp, 28h
		pop	ebx
		retn
sub_67DE0700	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE0750	proc near		; CODE XREF: dbus_message_iter_get_arg_type+36p
					; dbus_message_iter_get_fixed_array+5Ep ...

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h

		push	ebx
		sub	esp, 38h
		test	eax, eax
		jz	loc_67DE0862
		movzx	edx, byte ptr [eax+6]
		and	edx, 0FFFFFFE0h
		cmp	dl, 60h
		jz	short loc_67DE07A8
		cmp	dl, 0E0h
		jnz	short loc_67DE0795
		mov	ecx, [eax]
		movzx	edx, byte ptr [eax+8]
		movsx	ecx, byte ptr [ecx+58h]
		movzx	ebx, dl
		cmp	ebx, ecx
		jz	loc_67DE0840
		mov	[esp+3Ch+var_3C], offset aDbusMessageCha ; "dbus message changed byte order since a"...
		call	sub_67DFB4E0
		xor	eax, eax

loc_67DE0790:				; CODE XREF: sub_67DE0750+D4j
					; sub_67DE0750+120j
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE0795:				; CODE XREF: sub_67DE0750+1Bj
		mov	[esp+3Ch+var_3C], offset aDbusMessageIte ; "dbus message iterator looks	uninitializ"...
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE07A8:				; CODE XREF: sub_67DE0750+16j
		mov	ecx, [eax]
		movzx	edx, byte ptr [eax+8]
		movsx	ecx, byte ptr [ecx+58h]
		movzx	ebx, dl
		cmp	ebx, ecx
		jz	short loc_67DE07D0
		mov	[esp+3Ch+var_3C], offset aDbusMessageC_0 ; "dbus message changed byte order since i"...
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE07D0:				; CODE XREF: sub_67DE0750+67j
		mov	[esp+3Ch+var_2C], offset a_dbus_messag_2 ; "_dbus_message_iter_check"
		mov	[esp+3Ch+var_30], 2A7h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aIterU_reader_b ; "iter->u.reader.byte_order	== DBUS_COMPI"...

loc_67DE07F0:				; CODE XREF: sub_67DE0750+110j
		cmp	dl, 6Ch
		setz	dl
		movzx	edx, dl
		mov	[esp+3Ch+var_3C], edx
		mov	[esp+3Ch+var_10], eax
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+var_10]
		mov	ecx, [eax+4]
		mov	eax, [eax]
		and	ecx, 1FFFFFh
		mov	edx, [eax+64h]
		mov	eax, 1
		and	edx, 1FFFFFh
		cmp	ecx, edx
		jz	loc_67DE0790
		mov	[esp+3Ch+var_3C], offset aDbusMessageI_0 ; "dbus message iterator invalid because t"...
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE0840:				; CODE XREF: sub_67DE0750+2Cj
		mov	[esp+3Ch+var_2C], offset a_dbus_messag_2 ; "_dbus_message_iter_check"
		mov	[esp+3Ch+var_30], 2B1h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aIterU_writer_b ; "iter->u.writer.byte_order	== DBUS_COMPI"...
		jmp	short loc_67DE07F0
; ---------------------------------------------------------------------------

loc_67DE0862:				; CODE XREF: sub_67DE0750+6j
		mov	[esp+3Ch+var_3C], offset aDbusMessageI_1 ; "dbus message iterator is NULL\n"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	loc_67DE0790
sub_67DE0750	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 163. dbus_message_type_from_string

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_type_from_string
dbus_message_type_from_string proc near

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	ecx, 0Ch
		mov	edx, [esp+0Ch+arg_0]
		mov	eax, 1
		mov	[esp+0Ch+var_C], ebx
		mov	[esp+0Ch+var_8], esi
		mov	[esp+0Ch+var_4], edi
		mov	edi, offset aMethod_call ; "method_call"
		mov	esi, edx
		repe cmpsb
		setnbe	bl
		setb	cl
		cmp	bl, cl
		jz	short loc_67DE0904
		mov	ecx, 0Eh
		mov	edi, offset aMethod_return ; "method_return"
		mov	esi, edx
		mov	al, 2
		repe cmpsb
		setnbe	bl
		setb	cl
		cmp	bl, cl
		jz	short loc_67DE0904
		mov	ecx, 7
		mov	edi, offset aSignal ; "signal"
		mov	esi, edx
		mov	al, 4
		repe cmpsb
		setnbe	bl
		setb	cl
		cmp	bl, cl
		jz	short loc_67DE0904
		mov	esi, edx
		mov	edi, offset aError ; "error"
		mov	ecx, 6
		repe cmpsb
		setnbe	al
		setb	dl
		sub	al, dl
		movsx	eax, al
		cmp	eax, 1
		sbb	eax, eax
		and	eax, 3

loc_67DE0904:				; CODE XREF: dbus_message_type_from_string+2Dj
					; dbus_message_type_from_string+47j ...
		mov	ebx, [esp+0Ch+var_C]
		mov	esi, [esp+0Ch+var_8]
		mov	edi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
dbus_message_type_from_string endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 105. dbus_message_get_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_data
dbus_message_get_data proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_message_1 ; "dbus_message_get_data"
		mov	[esp+2Ch+var_20], 116Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE0978
		mov	eax, [esp+2Ch+arg_4]
		add	ebx, 68h
		mov	dword ptr [esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], offset dword_67E34054
		mov	[esp+2Ch+var_24], eax
		call	sub_67DF8A00

loc_67DE0973:				; CODE XREF: dbus_message_get_data+87j
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE0978:				; CODE XREF: dbus_message_get_data+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 116Dh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_message_1 ; "dbus_message_get_data"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DE0973
dbus_message_get_data endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 153. dbus_message_set_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_set_data
dbus_message_set_data proc near

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	ebx
		sub	esp, 44h
		mov	ebx, [esp+4Ch+arg_0]
		mov	esi, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_3C], offset aDbus_message_s ; "dbus_message_set_data"
		mov	[esp+4Ch+var_40], 114Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE0AB5
		mov	[esp+4Ch+var_3C], offset aDbus_message_s ; "dbus_message_set_data"
		mov	[esp+4Ch+var_40], 114Eh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	esi, esi
		js	short loc_67DE0A80
		lea	eax, [esp+4Ch+var_14]
		add	ebx, 68h
		mov	[esp+4Ch+var_34], eax
		lea	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_38], eax
		mov	eax, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_44], esi
		mov	dword ptr [esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], offset dword_67E34054
		mov	[esp+4Ch+var_3C], eax
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_40], eax
		call	sub_67DF8AE0
		test	eax, eax
		jz	short loc_67DE0A75
		mov	edx, [esp+4Ch+var_10]
		test	edx, edx
		jz	short loc_67DE0A75
		mov	ecx, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_20], eax
		mov	[esp+4Ch+var_4C], ecx
		call	edx
		mov	eax, [esp+4Ch+var_20]

loc_67DE0A75:				; CODE XREF: dbus_message_set_data+AAj
					; dbus_message_set_data+B2j
		add	esp, 44h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE0A80:				; CODE XREF: dbus_message_set_data+6Fj
		mov	[esp+4Ch+var_3C], 114Eh
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aSlot0_0 ; "slot >= 0"

loc_67DE0A98:				; CODE XREF: dbus_message_set_data+11Dj
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_message_s ; "dbus_message_set_data"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 44h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE0AB5:				; CODE XREF: dbus_message_set_data+3Bj
		mov	[esp+4Ch+var_3C], 114Dh
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aMessageNull_0	; "message != NULL"
		jmp	short loc_67DE0A98
dbus_message_set_data endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 101. dbus_message_free_data_slot

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_free_data_slot
dbus_message_free_data_slot proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_message_f ; "dbus_message_free_data_slot"
		mov	[esp+2Ch+var_20], 1131h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	ecx, [ebx]
		test	ecx, ecx
		js	short loc_67DE0B20
		mov	dword ptr [esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], offset dword_67E34054
		call	sub_67DF8C50
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE0B20:				; CODE XREF: dbus_message_free_data_slot+38j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 1131h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aSlot_p0_0 ; "*slot_p >= 0"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_message_f ; "dbus_message_free_data_slot"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_message_free_data_slot endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  94. dbus_message_allocate_data_slot

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_allocate_data_slot
dbus_message_allocate_data_slot	proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], offset dword_67E34D7C
		mov	[esp+1Ch+var_1C], offset dword_67E34054
		mov	[esp+1Ch+var_14], eax
		call	sub_67DF8DC0
		add	esp, 1Ch
		retn
dbus_message_allocate_data_slot	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE0B90	proc near		; CODE XREF: sub_67DF3110+11j

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		sub	esp, 2Ch
		mov	eax, dword ptr [esp+2Ch+arg_4]
		cmp	eax, 2000000h
		jle	short loc_67DE0BD3
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_18], 2000000h
		mov	[esp+2Ch+Format], offset aClampingReques ; "clamping requested max message unix_fds"...
		mov	[esp+2Ch+var_24], offset a_dbus_messa_16 ; "_dbus_message_loader_set_max_message_un"...
		mov	[esp+2Ch+var_28], 10F8h	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 2000000h

loc_67DE0BD3:				; CODE XREF: sub_67DE0B90+Cj
		mov	edx, [esp+2Ch+arg_0]
		mov	[edx+20h], eax
		add	esp, 2Ch
		retn
sub_67DE0B90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE0BE0	proc near		; CODE XREF: sub_67DF3130+11j

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		sub	esp, 2Ch
		mov	eax, dword ptr [esp+2Ch+arg_4]
		cmp	eax, 8000000h
		jle	short loc_67DE0C23
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_18], 8000000h
		mov	[esp+2Ch+Format], offset aClampingRequ_0 ; "clamping requested max message size	%ld"...
		mov	[esp+2Ch+var_24], offset a_dbus_messa_17 ; "_dbus_message_loader_set_max_message_si"...
		mov	[esp+2Ch+var_28], 10D9h	; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 8000000h

loc_67DE0C23:				; CODE XREF: sub_67DE0BE0+Cj
		mov	edx, [esp+2Ch+arg_0]
		mov	[edx+1Ch], eax
		add	esp, 2Ch
		retn
sub_67DE0BE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE0C30	proc near		; CODE XREF: sub_67DF4C20+DCp

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		add	eax, 18h
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_67DFB750
sub_67DE0C30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE0C50	proc near		; CODE XREF: sub_67DF4C20+16p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		add	[esp+0Ch+arg_0], 18h
		add	esp, 0Ch
		jmp	sub_67DFB970
sub_67DE0C50	endp

; ---------------------------------------------------------------------------
		sub	esp, 0Ch
		add	dword ptr [esp+10h], 18h
		add	esp, 0Ch
		jmp	sub_67DFBFF0
; Exported entry 151. dbus_message_ref

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_ref
dbus_message_ref proc near		; CODE XREF: sub_67DD0BB0+43p
					; sub_67DEB010+19p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_message_r ; "dbus_message_ref"
		mov	[esp+2Ch+var_20], 5F8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE0DB0
		mov	[esp+2Ch+var_1C], offset aDbus_message_r ; "dbus_message_ref"
		mov	[esp+2Ch+var_20], 5F9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [ebx+70h]
		cmp	eax, dword_67E19028
		jnz	short loc_67DE0D54
		mov	[esp+2Ch+var_1C], offset aDbus_message_r ; "dbus_message_ref"
		mov	[esp+2Ch+var_20], 5FAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 2
		jnz	short loc_67DE0D90
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		mov	[esp+2Ch+var_1C], offset aDbus_message_r ; "dbus_message_ref"
		mov	[esp+2Ch+var_20], 600h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aOld_refcount1 ; "old_refcount >= 1"
		test	eax, eax
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70

loc_67DE0D4D:				; CODE XREF: dbus_message_ref+16Dj
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE0D54:				; CODE XREF: dbus_message_ref+71j
		mov	[esp+2Ch+var_1C], 5F9h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageGenerat ; "message->generation	== _dbus_current_ge"...

loc_67DE0D6C:				; CODE XREF: dbus_message_ref+138j
		mov	eax, off_67E19014
		xor	ebx, ebx
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_message_r ; "dbus_message_ref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE0D90:				; CODE XREF: dbus_message_ref+A3j
		mov	[esp+2Ch+var_1C], 5FAh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageIn_cach ; "!message->in_cache"
		jmp	short loc_67DE0D6C
; ---------------------------------------------------------------------------
		align 10h

loc_67DE0DB0:				; CODE XREF: dbus_message_ref+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 5F8h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_message_r ; "dbus_message_ref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DE0D4D
dbus_message_ref endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE0DF0	proc near		; CODE XREF: sub_67DF3BF0+Fp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h

		push	esi
		push	ebx
		sub	esp, 14h
		mov	[esp+1Ch+var_1C], 2Ch ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DE0E55
		and	byte ptr [eax+28h], 0FEh
		lea	esi, [eax+4]
		mov	dword ptr [eax], 1
		mov	dword ptr [eax+24h], 0
		mov	dword ptr [eax+1Ch], 8000000h
		mov	dword ptr [eax+20h], 400h
		mov	[esp+1Ch+var_1C], esi
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DE0E60
		mov	[esp+1Ch+var_18], 20h
		mov	[esp+1Ch+var_1C], esi
		call	sub_67E06F60
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], esi
		call	sub_67E06F60

loc_67DE0E55:				; CODE XREF: sub_67DE0DF0+15j
					; sub_67DE0DF0+7Aj
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE0E60:				; CODE XREF: sub_67DE0DF0+43j
		mov	[esp+1Ch+var_1C], ebx
		xor	ebx, ebx
		call	dbus_free
		jmp	short loc_67DE0E55
sub_67DE0DF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE0E70	proc near		; CODE XREF: dbus_message_new_signal+15Fp
					; dbus_message_new_method_call+173p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	eax, ds:dword_67E34D78
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34038
		mov	[esp+2Ch+var_1C], offset aDbus_messag_33 ; "dbus_message_get_cached"
		mov	[esp+2Ch+var_20], 1F3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_28], offset aMessage_cach_0 ; "message_cache_count	>= 0"
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	ebx, ds:dword_67E34038
		test	ebx, ebx
		jz	loc_67DE10C7
		xor	eax, eax
		cmp	ds:dword_67E3403C, 0
		mov	[esp+2Ch+var_1C], offset aDbus_messag_33 ; "dbus_message_get_cached"
		mov	[esp+2Ch+var_20], 1FFh
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aMessage_cach_1 ; "message_cache_shutdown_registered"
		call	sub_67DFAE70
		mov	ebx, ds:dword_67E34040
		xor	eax, eax
		test	ebx, ebx
		jnz	loc_67DE10A0
		mov	ebx, ds:dword_67E34044
		mov	al, 1
		test	ebx, ebx
		jnz	loc_67DE10A0
		mov	ebx, ds:dword_67E34048
		mov	al, 2
		test	ebx, ebx
		jnz	loc_67DE10A0
		mov	ebx, ds:dword_67E3404C
		mov	al, 3
		test	ebx, ebx
		jnz	loc_67DE10A0
		mov	ebx, ds:dword_67E34050
		test	ebx, ebx
		jnz	loc_67DE1095
		mov	eax, ds:dword_67E34038
		xor	esi, esi
		xor	edi, edi

loc_67DE0F4E:				; CODE XREF: sub_67DE0E70+252j
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aDbus_messag_33 ; "dbus_message_get_cached"
		mov	[esp+2Ch+var_20], 20Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aMessage_cach_0 ; "message_cache_count	>= 0"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset aDbus_messag_33 ; "dbus_message_get_cached"
		mov	[esp+2Ch+var_20], 20Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aIMax_message_c ; "i <	MAX_MESSAGE_CACHE_SIZE"
		mov	[esp+2Ch+var_2C], edi
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset aDbus_messag_33 ; "dbus_message_get_cached"
		mov	[esp+2Ch+var_20], 20Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aMessageNull_0	; "message != NULL"
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0ABB0
		mov	[esp+2Ch+var_1C], offset aDbus_messag_33 ; "dbus_message_get_cached"
		mov	[esp+2Ch+var_20], 211h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_atomic_0 ; "_dbus_atomic_get (&message->refcount) ="...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset aDbus_messag_33 ; "dbus_message_get_cached"
		mov	[esp+2Ch+var_20], 213h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aMessageCounter ; "message->counters == NULL"
		cmp	dword ptr [ebx+5Ch], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ds:dword_67E34D78
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		lea	eax, [ebx+4]
		and	byte ptr [ebx+59h], 0FCh
		and	dword ptr [ebx+64h], 0FFE00000h
		mov	byte ptr [ebx+58h], 6Ch
		mov	dword ptr [ebx+5Ch], 0
		mov	dword ptr [ebx+60h], 0
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], 6Ch
		call	sub_67DD87D0
		lea	eax, [ebx+44h]
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E06F60

loc_67DE108C:				; CODE XREF: sub_67DE0E70+274j
					; sub_67DE0E70+2DAj ...
		add	esp, 20h
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DE1095:				; CODE XREF: sub_67DE0E70+CFj
		mov	eax, 4
		lea	esi, [esi+0]

loc_67DE10A0:				; CODE XREF: sub_67DE0E70+91j
					; sub_67DE0E70+A1j ...
		mov	ds:dword_67E34040[eax*4], 0
		mov	eax, ds:dword_67E34038
		mov	esi, 1
		mov	edi, 1
		sub	eax, 1
		mov	ds:dword_67E34038, eax
		jmp	loc_67DE0F4E
; ---------------------------------------------------------------------------

loc_67DE10C7:				; CODE XREF: sub_67DE0E70+4Dj
		mov	eax, ds:dword_67E34D78
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	[esp+2Ch+var_2C], 74h ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DE108C
		mov	eax, dword_67E19028
		lea	esi, [ebx+4]
		mov	[ebx+70h], eax
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		lea	eax, [ebx+68h]
		and	byte ptr [ebx+59h], 0FCh
		and	dword ptr [ebx+64h], 0FFE00000h
		mov	byte ptr [ebx+58h], 6Ch
		mov	dword ptr [ebx+5Ch], 0
		mov	dword ptr [ebx+60h], 0
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF8990
		movsx	eax, byte ptr [ebx+58h]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], eax
		call	sub_67DD8DF0
		test	eax, eax
		jz	short loc_67DE1158
		lea	eax, [ebx+44h]
		mov	[esp+2Ch+var_28], 20h
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E031B0
		test	eax, eax
		jnz	loc_67DE108C
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DD8BF0

loc_67DE1158:				; CODE XREF: sub_67DE0E70+2C3j
		mov	[esp+2Ch+var_2C], ebx
		xor	ebx, ebx
		call	dbus_free
		jmp	loc_67DE108C
sub_67DE0E70	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 114. dbus_message_get_sender

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_sender
dbus_message_get_sender	proc near	; CODE XREF: dbus_message_has_sender+70p
					; dbus_message_new_method_return+4Ap ...

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_message_2 ; "dbus_message_get_sender"
		mov	[esp+3Ch+var_30], 0D2Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE11E0
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	dword ptr [esp+3Ch+var_38], 7
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD9250
		mov	eax, [esp+3Ch+var_10]

loc_67DE11D7:				; CODE XREF: dbus_message_get_sender+9Fj
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE11E0:				; CODE XREF: dbus_message_get_sender+36j
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_2C], 0D2Ah
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_message_2 ; "dbus_message_get_sender"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DE11D7
dbus_message_get_sender	endp

; ---------------------------------------------------------------------------
		jmp	short dbus_message_has_sender
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 122. dbus_message_has_sender

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_has_sender(int, char	*)
		public dbus_message_has_sender
dbus_message_has_sender	proc near	; CODE XREF: .text:67DE1211j

Str1		= dword	ptr -2Ch
Str2		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_message_h ; "dbus_message_has_sender"
		mov	[esp+2Ch+var_20], 0E02h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Str2],	offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+Str1],	1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE12B7
		mov	[esp+2Ch+var_1C], offset aDbus_message_h ; "dbus_message_has_sender"
		mov	[esp+2Ch+var_20], 0E03h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Str2],	offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+Str1],	1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE12F0
		mov	[esp+2Ch+Str1],	esi
		call	dbus_message_get_sender
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DE12B1
		mov	[esp+2Ch+Str2],	ebx ; Str2
		mov	[esp+2Ch+Str1],	edx ; Str1
		call	strcmp
		test	eax, eax
		setz	al
		movzx	eax, al

loc_67DE12B1:				; CODE XREF: dbus_message_has_sender+7Bj
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE12B7:				; CODE XREF: dbus_message_has_sender+3Bj
		mov	[esp+2Ch+var_1C], 0E02h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"

loc_67DE12CF:				; CODE XREF: dbus_message_has_sender+E8j
		mov	eax, off_67E19014
		mov	[esp+2Ch+Str2],	offset aDbus_message_h ; "dbus_message_has_sender"
		mov	[esp+2Ch+Str1],	eax ; char *
		call	sub_67DFB4E0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE12F0:				; CODE XREF: dbus_message_has_sender+6Bj
		mov	[esp+2Ch+var_1C], 0E03h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aNameNull_1 ; "name !=	NULL"
		jmp	short loc_67DE12CF
dbus_message_has_sender	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 106. dbus_message_get_destination

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_destination
dbus_message_get_destination proc near	; CODE XREF: sub_67DD0BB0+54p
					; sub_67DD0BB0+68p ...

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_message_3 ; "dbus_message_get_destination"
		mov	[esp+3Ch+var_30], 0CEEh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE1380
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	dword ptr [esp+3Ch+var_38], 6
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD9250
		mov	eax, [esp+3Ch+var_10]

loc_67DE1377:				; CODE XREF: dbus_message_get_destination+9Fj
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE1380:				; CODE XREF: dbus_message_get_destination+36j
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_2C], 0CEEh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_message_3 ; "dbus_message_get_destination"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DE1377
dbus_message_get_destination endp

; ---------------------------------------------------------------------------
		jmp	short dbus_message_has_destination
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 118. dbus_message_has_destination

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_has_destination(int,	char *)
		public dbus_message_has_destination
dbus_message_has_destination proc near	; CODE XREF: .text:67DE13B1j

Str1		= dword	ptr -2Ch
Str2		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_message_4 ; "dbus_message_has_destination"
		mov	[esp+2Ch+var_20], 0DDFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Str2],	offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+Str1],	1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE1457
		mov	[esp+2Ch+var_1C], offset aDbus_message_4 ; "dbus_message_has_destination"
		mov	[esp+2Ch+var_20], 0DE0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Str2],	offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+Str1],	1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE1490
		mov	[esp+2Ch+Str1],	esi
		call	dbus_message_get_destination
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DE1451
		mov	[esp+2Ch+Str2],	ebx ; Str2
		mov	[esp+2Ch+Str1],	edx ; Str1
		call	strcmp
		test	eax, eax
		setz	al
		movzx	eax, al

loc_67DE1451:				; CODE XREF: dbus_message_has_destination+7Bj
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE1457:				; CODE XREF: dbus_message_has_destination+3Bj
		mov	[esp+2Ch+var_1C], 0DDFh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"

loc_67DE146F:				; CODE XREF: dbus_message_has_destination+E8j
		mov	eax, off_67E19014
		mov	[esp+2Ch+Str2],	offset aDbus_message_4 ; "dbus_message_has_destination"
		mov	[esp+2Ch+Str1],	eax ; char *
		call	sub_67DFB4E0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE1490:				; CODE XREF: dbus_message_has_destination+6Bj
		mov	[esp+2Ch+var_1C], 0DE0h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aNameNull_1 ; "name !=	NULL"
		jmp	short loc_67DE146F
dbus_message_has_destination endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 107. dbus_message_get_error_name

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_error_name
dbus_message_get_error_name proc near	; CODE XREF: dbus_message_is_error+85p
					; dbus_set_error_from_message+11Dp

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_message_5 ; "dbus_message_get_error_name"
		mov	[esp+3Ch+var_30], 0CB9h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE1520
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	dword ptr [esp+3Ch+var_38], 4
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD9250
		mov	eax, [esp+3Ch+var_10]

loc_67DE1517:				; CODE XREF: dbus_message_get_error_name+9Fj
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE1520:				; CODE XREF: dbus_message_get_error_name+36j
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_2C], 0CB9h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_message_5 ; "dbus_message_get_error_name"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DE1517
dbus_message_get_error_name endp

; ---------------------------------------------------------------------------
		jmp	short dbus_message_get_member
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 109. dbus_message_get_member

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_member
dbus_message_get_member	proc near	; CODE XREF: sub_67DCD2A0+F3p
					; sub_67DCD2A0+107p ...

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_message_6 ; "dbus_message_get_member"
		mov	[esp+3Ch+var_30], 0C65h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE15D0
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	dword ptr [esp+3Ch+var_38], 3
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD9250
		mov	eax, [esp+3Ch+var_10]

loc_67DE15C7:				; CODE XREF: dbus_message_get_member+9Fj
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE15D0:				; CODE XREF: dbus_message_get_member+36j
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_2C], 0C65h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_message_6 ; "dbus_message_get_member"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DE15C7
dbus_message_get_member	endp

; ---------------------------------------------------------------------------
		jmp	short dbus_message_has_member
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 120. dbus_message_has_member

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_has_member(int, char	*)
		public dbus_message_has_member
dbus_message_has_member	proc near	; CODE XREF: .text:67DE1601j

Str1		= dword	ptr -1Ch
Str2		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+Str1],	eax
		call	dbus_message_get_member
		test	eax, eax
		mov	edx, eax
		jz	short loc_67DE1650
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_67DE1644
		mov	[esp+1Ch+Str2],	ebx ; Str2
		mov	[esp+1Ch+Str1],	edx ; Str1
		call	strcmp
		test	eax, eax
		setz	al
		movzx	eax, al

loc_67DE1644:				; CODE XREF: dbus_message_has_member+1Ej
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE1650:				; CODE XREF: dbus_message_has_member+18j
		xor	eax, eax
		test	ebx, ebx
		setz	al
		add	esp, 18h
		pop	ebx
		retn
dbus_message_has_member	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 108. dbus_message_get_interface

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_interface
dbus_message_get_interface proc	near	; CODE XREF: sub_67DCD2A0+113p
					; sub_67DCD2A0+127p ...

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_message_7 ; "dbus_message_get_interface"
		mov	[esp+3Ch+var_30], 0C0Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE16D0
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	dword ptr [esp+3Ch+var_38], 2
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD9250
		mov	eax, [esp+3Ch+var_10]

loc_67DE16C7:				; CODE XREF: dbus_message_get_interface+9Fj
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE16D0:				; CODE XREF: dbus_message_get_interface+36j
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_2C], 0C0Fh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_message_7 ; "dbus_message_get_interface"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DE16C7
dbus_message_get_interface endp

; ---------------------------------------------------------------------------
		jmp	short dbus_message_has_interface
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 119. dbus_message_has_interface

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_has_interface(int, char *)
		public dbus_message_has_interface
dbus_message_has_interface proc	near	; CODE XREF: dbus_connection_dispatch+A60p
					; .text:67DE1701j

Str1		= dword	ptr -1Ch
Str2		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+Str1],	eax
		call	dbus_message_get_interface
		test	eax, eax
		mov	edx, eax
		jz	short loc_67DE1750
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_67DE1744
		mov	[esp+1Ch+Str2],	ebx ; Str2
		mov	[esp+1Ch+Str1],	edx ; Str1
		call	strcmp
		test	eax, eax
		setz	al
		movzx	eax, al

loc_67DE1744:				; CODE XREF: dbus_message_has_interface+1Ej
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE1750:				; CODE XREF: dbus_message_has_interface+18j
		xor	eax, eax
		test	ebx, ebx
		setz	al
		add	esp, 18h
		pop	ebx
		retn
dbus_message_has_interface endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 111. dbus_message_get_path

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_path
dbus_message_get_path proc near		; CODE XREF: sub_67DCD2A0+133p
					; sub_67DCD2A0+144p ...

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_message_8 ; "dbus_message_get_path"
		mov	[esp+3Ch+var_30], 0B8Ch
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE17D0
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 6Fh
		mov	dword ptr [esp+3Ch+var_38], 1
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD9250
		mov	eax, [esp+3Ch+var_10]

loc_67DE17C7:				; CODE XREF: dbus_message_get_path+9Fj
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE17D0:				; CODE XREF: dbus_message_get_path+36j
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_2C], 0B8Ch
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_message_8 ; "dbus_message_get_path"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DE17C7
dbus_message_get_path endp

; ---------------------------------------------------------------------------
		jmp	short dbus_message_has_path
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 121. dbus_message_has_path

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_has_path(int, char *)
		public dbus_message_has_path
dbus_message_has_path proc near		; CODE XREF: .text:67DE1801j

Str1		= dword	ptr -1Ch
Str2		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+Str1],	eax
		call	dbus_message_get_path
		test	eax, eax
		mov	edx, eax
		jz	short loc_67DE1850
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_67DE1844
		mov	[esp+1Ch+Str2],	ebx ; Str2
		mov	[esp+1Ch+Str1],	edx ; Str1
		call	strcmp
		test	eax, eax
		setz	al
		movzx	eax, al

loc_67DE1844:				; CODE XREF: dbus_message_has_path+1Ej
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE1850:				; CODE XREF: dbus_message_has_path+18j
		xor	eax, eax
		test	ebx, ebx
		setz	al
		add	esp, 18h
		pop	ebx
		retn
dbus_message_has_path endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 113. dbus_message_get_reply_serial

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_reply_serial
dbus_message_get_reply_serial proc near	; CODE XREF: sub_67DCE140+5Fp
					; sub_67DCE140+8Ap ...

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_message_9 ; "dbus_message_get_reply_serial"
		mov	[esp+3Ch+var_30], 405h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE18D0
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 75h
		mov	dword ptr [esp+3Ch+var_38], 5
		call	sub_67DD9250
		cmp	eax, 1
		sbb	eax, eax
		not	eax
		and	eax, [esp+3Ch+var_10]
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE18D0:				; CODE XREF: dbus_message_get_reply_serial+36j
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_2C], 405h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_message_9 ; "dbus_message_get_reply_serial"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 38h
		pop	ebx
		retn
dbus_message_get_reply_serial endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	dword ptr [esp+8], 0F51h
		mov	dword ptr [esp+4], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp], offset	aPlatformDoesnT	; "Platform doesn't support unix fd passin"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	dword ptr [esp+8], 0F35h
		mov	dword ptr [esp+4], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp], offset	aPlatformDoesnT	; "Platform doesn't support unix fd passin"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE1950	proc near		; CODE XREF: dbus_message_demarshal+273p
					; dbus_message_demarshal+2BAp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DE1976
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE1976:				; CODE XREF: sub_67DE1950+18j
		lea	esi, [ebx+18h]
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], offset dbus_message_unref
		call	sub_67DFB9D0
		mov	[esp+1Ch+var_1C], esi
		call	sub_67DFBC90
		lea	eax, [ebx+4]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E02BF0
		mov	esi, [esp+1Ch+var_4]
		mov	[esp+1Ch+arg_0], ebx
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		jmp	dbus_free
sub_67DE1950	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 160. dbus_message_set_reply_serial

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_set_reply_serial
dbus_message_set_reply_serial proc near	; CODE XREF: sub_67DD26C0+5CDp
					; dbus_message_new_method_return+B6p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_10 ; "dbus_message_set_reply_serial"
		mov	[esp+2Ch+var_20], 3F0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE1AE0
		mov	[esp+2Ch+var_1C], offset aDbus_messag_10 ; "dbus_message_set_reply_serial"
		mov	[esp+2Ch+var_20], 3F1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 1
		jnz	loc_67DE1AC4
		mov	[esp+2Ch+var_1C], offset aDbus_messag_10 ; "dbus_message_set_reply_serial"
		mov	[esp+2Ch+var_20], 3F2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_4]
		test	eax, eax
		jz	short loc_67DE1A90
		lea	eax, [esp+2Ch+arg_4]
		add	ebx, 4
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_20], eax
		mov	[esp+2Ch+var_24], 75h
		mov	dword ptr [esp+2Ch+var_28], 5
		call	sub_67DDA470
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE1A90:				; CODE XREF: dbus_message_set_reply_serial+A4j
		mov	[esp+2Ch+var_1C], 3F2h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aReply_serial_0 ; "reply_serial != 0"

loc_67DE1AA8:				; CODE XREF: dbus_message_set_reply_serial+11Cj
					; dbus_message_set_reply_serial+138j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_10 ; "dbus_message_set_reply_serial"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE1AC4:				; CODE XREF: dbus_message_set_reply_serial+6Cj
		mov	[esp+2Ch+var_1C], 3F1h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageLocked	; "!message->locked"
		jmp	short loc_67DE1AA8
; ---------------------------------------------------------------------------
		align 10h

loc_67DE1AE0:				; CODE XREF: dbus_message_set_reply_serial+36j
		mov	[esp+2Ch+var_1C], 3F0h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		jmp	short loc_67DE1AA8
dbus_message_set_reply_serial endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 156. dbus_message_set_interface

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_set_interface(int, char *)
		public dbus_message_set_interface
dbus_message_set_interface proc	near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset aDbus_messag_11 ; "dbus_message_set_interface"
		mov	[esp+3Ch+var_30], 0BF1h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE1C32
		mov	[esp+3Ch+var_2C], offset aDbus_messag_11 ; "dbus_message_set_interface"
		mov	[esp+3Ch+var_30], 0BF2h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 1
		jnz	short loc_67DE1BE0
		mov	[esp+3Ch+var_2C], offset aDbus_messag_11 ; "dbus_message_set_interface"
		mov	[esp+3Ch+var_30], 0BF5h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE1C15
		mov	[esp+3Ch+var_3C], esi ;	char *
		call	sub_67DDE850
		test	eax, eax
		jz	loc_67DE1C50
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], esi
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	dword ptr [esp+3Ch+var_38], 2
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DDA470

loc_67DE1BDA:				; CODE XREF: dbus_message_set_interface+130j
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE1BE0:				; CODE XREF: dbus_message_set_interface+71j
		mov	[esp+3Ch+var_2C], 0BF2h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageLocked	; "!message->locked"

loc_67DE1BF8:				; CODE XREF: dbus_message_set_interface+14Aj
					; dbus_message_set_interface+168j
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_messag_11 ; "dbus_message_set_interface"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 34h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE1C15:				; CODE XREF: dbus_message_set_interface+A1j
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	dword ptr [esp+3Ch+var_38], 2
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD8410
		jmp	short loc_67DE1BDA
; ---------------------------------------------------------------------------

loc_67DE1C32:				; CODE XREF: dbus_message_set_interface+3Bj
		mov	[esp+3Ch+var_2C], 0BF1h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		jmp	short loc_67DE1BF8
; ---------------------------------------------------------------------------
		align 10h

loc_67DE1C50:				; CODE XREF: dbus_message_set_interface+ADj
		mov	[esp+3Ch+var_2C], 0BF5h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aInterfaceNull_ ; "interface == NULL || _dbus_check_is_val"...
		jmp	short loc_67DE1BF8
dbus_message_set_interface endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 112. dbus_message_get_path_decomposed

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_path_decomposed
dbus_message_get_path_decomposed proc near ; CODE XREF:	sub_67DE9510+31p

Str		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_12 ; "dbus_message_get_path_decomposed"
		mov	[esp+2Ch+var_20], 0BD1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+Str], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE1D28
		mov	[esp+2Ch+var_1C], offset aDbus_messag_12 ; "dbus_message_get_path_decomposed"
		mov	[esp+2Ch+var_20], 0BD2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+Str], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE1D60
		mov	dword ptr [ebx], 0
		mov	[esp+2Ch+Str], esi
		call	dbus_message_get_path
		mov	esi, eax
		mov	eax, 1
		test	esi, esi
		jz	short loc_67DE1D22
		mov	[esp+2Ch+Str], esi ; Str
		call	strlen
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], ebx
		mov	[esp+2Ch+Str], esi
		mov	dword ptr [esp+2Ch+var_28], eax
		call	sub_67DE8A80
		test	eax, eax
		setnz	al
		movzx	eax, al

loc_67DE1D22:				; CODE XREF: dbus_message_get_path_decomposed+88j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE1D28:				; CODE XREF: dbus_message_get_path_decomposed+3Bj
		mov	[esp+2Ch+var_1C], 0BD1h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"

loc_67DE1D40:				; CODE XREF: dbus_message_get_path_decomposed+108j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_12 ; "dbus_message_get_path_decomposed"
		mov	[esp+2Ch+Str], eax ; char *
		call	sub_67DFB4E0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE1D60:				; CODE XREF: dbus_message_get_path_decomposed+6Bj
		mov	[esp+2Ch+var_1C], 0BD2h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPathNull_0 ; "path !=	NULL"
		jmp	short loc_67DE1D40
dbus_message_get_path_decomposed endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 104. dbus_message_get_auto_start

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_auto_start
dbus_message_get_auto_start proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_13 ; "dbus_message_get_auto_start"
		mov	[esp+2Ch+var_20], 0B57h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE1DD8
		add	ebx, 4
		mov	[esp+2Ch+var_2C], ebx
		mov	dword ptr [esp+2Ch+var_28], 2
		call	sub_67DD8020
		test	eax, eax
		setz	al
		add	esp, 28h
		movzx	eax, al
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE1DD8:				; CODE XREF: dbus_message_get_auto_start+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0B57h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_13 ; "dbus_message_get_auto_start"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_message_get_auto_start endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 110. dbus_message_get_no_reply

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_no_reply
dbus_message_get_no_reply proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_14 ; "dbus_message_get_no_reply"
		mov	[esp+2Ch+var_20], 0B2Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE1E60
		add	ebx, 4
		mov	[esp+2Ch+var_2C], ebx
		mov	dword ptr [esp+2Ch+var_28], 1
		call	sub_67DD8020
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE1E60:				; CODE XREF: dbus_message_get_no_reply+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0B2Dh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_14 ; "dbus_message_get_no_reply"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_message_get_no_reply endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 152. dbus_message_set_auto_start

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_set_auto_start
dbus_message_set_auto_start proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_15 ; "dbus_message_set_auto_start"
		mov	[esp+2Ch+var_20], 0B45h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE1F66
		mov	[esp+2Ch+var_1C], offset aDbus_messag_15 ; "dbus_message_set_auto_start"
		mov	[esp+2Ch+var_20], 0B46h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 1
		jnz	short loc_67DE1F34
		xor	eax, eax
		cmp	[esp+2Ch+arg_4], 0
		mov	dword ptr [esp+2Ch+var_28], 2
		setz	al
		add	ebx, 4
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_24], eax
		call	sub_67DD8050
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE1F34:				; CODE XREF: dbus_message_set_auto_start+6Cj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0B46h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageLocked	; "!message->locked"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_15 ; "dbus_message_set_auto_start"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE1F66:				; CODE XREF: dbus_message_set_auto_start+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0B45h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_15 ; "dbus_message_set_auto_start"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_message_set_auto_start endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 158. dbus_message_set_no_reply

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_set_no_reply
dbus_message_set_no_reply proc near	; CODE XREF: sub_67DC5C60+83p
					; sub_67DD26C0+5BDp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_16 ; "dbus_message_set_no_reply"
		mov	[esp+2Ch+var_20], 0B1Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE2062
		mov	[esp+2Ch+var_1C], offset aDbus_messag_16 ; "dbus_message_set_no_reply"
		mov	[esp+2Ch+var_20], 0B1Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 1
		jnz	short loc_67DE2030
		mov	eax, [esp+2Ch+arg_4]
		add	ebx, 4
		mov	[esp+2Ch+var_2C], ebx
		mov	dword ptr [esp+2Ch+var_28], 1
		mov	[esp+2Ch+var_24], eax
		call	sub_67DD8050
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE2030:				; CODE XREF: dbus_message_set_no_reply+6Cj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0B1Ch
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageLocked	; "!message->locked"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_16 ; "dbus_message_set_no_reply"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE2062:				; CODE XREF: dbus_message_set_no_reply+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0B1Bh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_16 ; "dbus_message_set_no_reply"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_message_set_no_reply endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE20A0	proc near		; CODE XREF: dbus_message_iter_close_container+1C6p
					; dbus_message_iter_append_basic+1B7p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h

		push	edi
		mov	edi, 1
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 30h
		mov	[esp+3Ch+var_2C], offset a_dbus_messag_9 ; "_dbus_message_iter_close_signature"
		mov	[esp+3Ch+var_30], 952h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealIter_typ_0 ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...
		movzx	eax, byte ptr [eax+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 0E0h
		setz	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_messag_9 ; "_dbus_message_iter_close_signature"
		mov	[esp+3Ch+var_30], 953h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealU_writer_t ; "real->u.writer.type_str != NULL"
		cmp	dword ptr [ebx+0Ch], 0
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_messag_9 ; "_dbus_message_iter_close_signature"
		mov	[esp+3Ch+var_30], 954h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealSig_refcou ; "real->sig_refcount > 0"
		cmp	byte ptr [ebx+7], 0
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		movzx	edx, byte ptr [ebx+7]
		sub	edx, 1
		test	dl, dl
		mov	[ebx+7], dl
		jnz	loc_67DE21DB
		mov	[esp+3Ch+var_2C], offset a_dbus_messag_9 ; "_dbus_message_iter_close_signature"
		mov	[esp+3Ch+var_30], 95Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealSig_refc_0 ; "real->sig_refcount == 0"
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	esi, [ebx+0Ch]
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E01770
		mov	[esp+3Ch+var_34], 67h
		mov	[esp+3Ch+var_38], 8
		mov	[esp+3Ch+var_10], eax
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_30], eax
		mov	eax, [ebx]
		add	eax, 4
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DDA470
		test	eax, eax
		setnz	al
		add	ebx, 8
		movzx	edi, al
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DDB070
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E02BF0
		mov	[esp+3Ch+var_3C], esi
		call	dbus_free

loc_67DE21DB:				; CODE XREF: sub_67DE20A0+B2j
		add	esp, 30h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DE20A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE21F0	proc near		; CODE XREF: dbus_message_iter_open_container+219p
					; dbus_message_iter_append_basic+190p

Size		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+3Ch+var_8], esi
		mov	[esp+3Ch+var_4], edi
		mov	[esp+3Ch+var_2C], offset a_dbus_messa_10 ; "_dbus_message_iter_open_signature"
		mov	[esp+3Ch+var_30], 90Bh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealIter_typ_0 ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...
		movzx	eax, byte ptr [eax+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 0E0h
		setz	al
		movzx	eax, al
		mov	[esp+3Ch+Size],	eax
		call	sub_67DFAE70
		mov	edx, [ebx+0Ch]
		test	edx, edx
		jz	short loc_67DE2290
		mov	[esp+3Ch+var_2C], offset a_dbus_messa_10 ; "_dbus_message_iter_open_signature"
		xor	eax, eax
		mov	[esp+3Ch+var_30], 90Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealSig_refcou ; "real->sig_refcount > 0"
		cmp	byte ptr [ebx+7], 0
		setnz	al
		mov	[esp+3Ch+Size],	eax
		call	sub_67DFAE70
		mov	eax, 1
		add	byte ptr [ebx+7], 1

loc_67DE2279:				; CODE XREF: sub_67DE21F0+B2j
					; sub_67DE21F0+121j ...
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE2290:				; CODE XREF: sub_67DE21F0+4Dj
		mov	[esp+3Ch+Size],	14h ; Size
		call	dbus_malloc
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		jz	short loc_67DE2279
		lea	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_30], eax
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_34], eax
		mov	[esp+3Ch+var_38], 8
		mov	eax, [ebx]
		add	eax, 4
		mov	[esp+3Ch+Size],	eax
		call	sub_67DD9400
		test	eax, eax
		jnz	short loc_67DE2316
		mov	[esp+3Ch+var_10], 0

loc_67DE22D5:				; CODE XREF: sub_67DE21F0+12Cj
		mov	[esp+3Ch+var_38], 4
		mov	[esp+3Ch+Size],	esi
		call	sub_67E031B0
		test	eax, eax
		jz	loc_67DE237D

loc_67DE22ED:				; CODE XREF: sub_67DE21F0+17Fj
		mov	byte ptr [ebx+7], 1
		add	ebx, 8
		mov	[esp+3Ch+Size],	esi
		call	sub_67E00CE0
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+Size],	ebx
		mov	[esp+3Ch+var_34], eax
		call	sub_67DDB050
		mov	eax, 1
		jmp	loc_67DE2279
; ---------------------------------------------------------------------------

loc_67DE2316:				; CODE XREF: sub_67DE21F0+DBj
		mov	eax, [esp+3Ch+var_10]
		test	eax, eax
		jz	short loc_67DE22D5
		mov	edx, [esp+3Ch+var_14]
		mov	[esp+3Ch+Size],	eax
		mov	[esp+3Ch+var_38], edx
		call	sub_67E00E50
		add	[esp+3Ch+var_14], 1
		mov	[esp+3Ch+Size],	esi
		movzx	edi, al
		lea	eax, [edi+4]
		mov	[esp+3Ch+var_38], eax
		call	sub_67E031B0
		test	eax, eax
		jz	short loc_67DE237D
		mov	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_2C], 0 ; int
		mov	[esp+3Ch+var_30], esi ;	int
		mov	[esp+3Ch+var_34], edi ;	size_t
		mov	[esp+3Ch+var_38], eax ;	int
		mov	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+Size],	eax ; int
		call	sub_67E05A20
		test	eax, eax
		jnz	loc_67DE22ED
		mov	[esp+3Ch+Size],	esi
		call	sub_67E02BF0

loc_67DE237D:				; CODE XREF: sub_67DE21F0+F7j
					; sub_67DE21F0+157j
		mov	[esp+3Ch+Size],	esi
		call	dbus_free
		xor	eax, eax
		jmp	loc_67DE2279
sub_67DE21F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE2390	proc near		; CODE XREF: dbus_message_iter_init_append+8Ap
					; dbus_message_iter_init+B8p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+4Ch+var_C], esi
		mov	esi, edx
		mov	[esp+4Ch+var_8], edi
		mov	edi, ecx
		mov	[esp+4Ch+var_4], ebp
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_messag_0 ; "_dbus_message_iter_init_common"
		mov	[esp+4Ch+Format], 760h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aSizeofDbusmess ; "sizeof (DBusMessageRealIter) <= sizeof "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		cmp	byte ptr [ebx+58h], 6Ch
		jz	loc_67DE2484
		mov	[esp+4Ch+Format], offset aSwappingMessag ; "Swapping message into compiler byte	ord"...
		lea	ebp, [ebx+4]
		mov	[esp+4Ch+var_44], offset a_dbus_messag_1 ; "_dbus_message_byteswap"
		mov	[esp+4Ch+var_48], 7Ah ;	int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+4Ch+var_24]
		mov	[esp+4Ch+Format], eax
		lea	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_48], 8
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67DD9400
		test	eax, eax
		jnz	loc_67DE24C2
		mov	[esp+4Ch+var_20], offset off_67E246AC
		mov	edx, offset off_67E246AC
		xor	eax, eax
		mov	[esp+4Ch+var_24], 0

loc_67DE2445:				; CODE XREF: sub_67DE2390+141j
		lea	ecx, [ebx+44h]
		mov	dword ptr [esp+4Ch+var_3C], ecx
		movsx	ecx, byte ptr [ebx+58h]
		mov	[esp+4Ch+var_38], 0
		mov	[esp+4Ch+Format], 6Ch
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_44], ecx
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DDADE0
		mov	byte ptr [ebx+58h], 6Ch
		mov	[esp+4Ch+var_48], 6Ch
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67DD7F50

loc_67DE2484:				; CODE XREF: sub_67DE2390+49j
		mov	eax, [esi+4]
		shl	edi, 5
		mov	[esi], ebx
		mov	edx, [ebx+64h]
		mov	ebp, [esp+4Ch+var_4]
		mov	ebx, [esp+4Ch+var_10]
		and	eax, 0FFE00000h
		and	edx, 1FFFFFh
		or	eax, edx
		mov	[esi+4], eax
		shr	eax, 10h
		and	eax, 1Fh
		or	eax, edi
		mov	edi, [esp+4Ch+var_8]
		mov	[esi+6], al
		mov	byte ptr [esi+7], 0
		mov	esi, [esp+4Ch+var_C]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE24C2:				; CODE XREF: sub_67DE2390+98j
		mov	eax, [esp+4Ch+var_24]
		mov	edx, [esp+4Ch+var_20]
		add	eax, 1
		mov	[esp+4Ch+var_24], eax
		jmp	loc_67DE2445
sub_67DE2390	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 139. dbus_message_iter_init_append

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_init_append
dbus_message_iter_init_append proc near	; CODE XREF: sub_67DD26C0+5E9p
					; dbus_message_new_error+15Bp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], edi
		mov	[esp+2Ch+var_1C], offset aDbus_message_i ; "dbus_message_iter_init_append"
		mov	[esp+2Ch+var_20], 8ECh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE25A0
		mov	[esp+2Ch+var_1C], offset aDbus_message_i ; "dbus_message_iter_init_append"
		mov	[esp+2Ch+var_20], 8EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE25E0
		mov	edx, esi
		mov	ecx, 7
		mov	eax, ebx
		add	esi, 8
		lea	edi, [ebx+44h]
		call	sub_67DE2390
		mov	[esp+2Ch+var_2C], edi
		call	sub_67E00CE0
		mov	[esp+2Ch+var_24], edi
		mov	[esp+2Ch+var_20], eax
		movsx	eax, byte ptr [ebx+58h]
		mov	[esp+2Ch+var_2C], esi
		mov	dword ptr [esp+2Ch+var_28], eax
		call	sub_67DDB010

loc_67DE258F:				; CODE XREF: dbus_message_iter_init_append+12Dj
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE25A0:				; CODE XREF: dbus_message_iter_init_append+45j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 8ECh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_message_i ; "dbus_message_iter_init_append"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE25E0:				; CODE XREF: dbus_message_iter_init_append+75j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 8EDh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aIterNull ; "iter != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_message_i ; "dbus_message_iter_init_append"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DE258F
dbus_message_iter_init_append endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 131. dbus_message_iter_get_arg_type

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_get_arg_type
dbus_message_iter_get_arg_type proc near ; CODE	XREF: dbus_message_iter_get_basic+77p
					; dbus_message_iter_get_element_type+DFp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_17 ; "dbus_message_iter_get_arg_type"
		mov	[esp+2Ch+var_20], 7D3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE26E0
		mov	[esp+2Ch+var_1C], offset aDbus_messag_17 ; "dbus_message_iter_get_arg_type"
		mov	[esp+2Ch+var_20], 7D4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 60h
		jz	short loc_67DE26D0
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 7D4h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aRealIter_typeD ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_17 ; "dbus_message_iter_get_arg_type"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE26D0:				; CODE XREF: dbus_message_iter_get_arg_type+78j
		add	ebx, 8
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DDB560
; ---------------------------------------------------------------------------

loc_67DE26E0:				; CODE XREF: dbus_message_iter_get_arg_type+3Dj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 7D3h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_3 ; "_dbus_message_iter_check (real)"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_17 ; "dbus_message_iter_get_arg_type"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_message_iter_get_arg_type endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 135. dbus_message_iter_get_fixed_array

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_get_fixed_array
dbus_message_iter_get_fixed_array proc near

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_0]
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_8], edi
		mov	edi, [esp+4Ch+arg_4]
		lea	esi, [ebx+8]
		mov	[esp+4Ch+var_4], ebp
		mov	[esp+4Ch+var_20], eax
		mov	[esp+4Ch+var_4C], esi
		call	sub_67DDB560
		mov	[esp+4Ch+var_3C], offset aDbus_messag_18 ; "dbus_message_iter_get_fixed_array"
		mov	[esp+4Ch+var_40], 8D2h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		mov	ebp, eax
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE2830
		mov	[esp+4Ch+var_3C], offset aDbus_messag_18 ; "dbus_message_iter_get_fixed_array"
		mov	[esp+4Ch+var_40], 8D3h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DE28A0
		mov	[esp+4Ch+var_3C], offset aDbus_messag_18 ; "dbus_message_iter_get_fixed_array"
		mov	[esp+4Ch+var_40], 8D5h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebp, ebp
		jz	short loc_67DE2802
		mov	[esp+4Ch+var_4C], ebp
		call	dbus_type_is_fixed
		test	eax, eax
		jz	short loc_67DE2871
		cmp	ebp, 68h
		xchg	ax, ax
		jz	short loc_67DE2871

loc_67DE2802:				; CODE XREF: dbus_message_iter_get_fixed_array+CDj
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+arg_4], edi
		mov	ebx, [esp+4Ch+var_10]
		mov	[esp+4Ch+arg_0], esi
		mov	edi, [esp+4Ch+var_8]
		mov	esi, [esp+4Ch+var_C]
		mov	[esp+4Ch+arg_8], eax
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		jmp	sub_67DDDA30
; ---------------------------------------------------------------------------
		align 10h

loc_67DE2830:				; CODE XREF: dbus_message_iter_get_fixed_array+65j
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 8D2h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset a_dbus_messag_3 ; "_dbus_message_iter_check (real)"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_18 ; "dbus_message_iter_get_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0

loc_67DE285D:				; CODE XREF: dbus_message_iter_get_fixed_array+17Ej
					; dbus_message_iter_get_fixed_array+1ADj
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE2871:				; CODE XREF: dbus_message_iter_get_fixed_array+D9j
					; dbus_message_iter_get_fixed_array+E0j
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 8D5h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aSubtypeDbus_ty ; "(subtype ==	DBUS_TYPE_INVALID) || (dbus"...
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_18 ; "dbus_message_iter_get_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE285D
; ---------------------------------------------------------------------------

loc_67DE28A0:				; CODE XREF: dbus_message_iter_get_fixed_array+99j
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 8D3h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aValueNull ; "value !=	NULL"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_18 ; "dbus_message_iter_get_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE285D
dbus_message_iter_get_fixed_array endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 132. dbus_message_iter_get_array_len

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_get_array_len
dbus_message_iter_get_array_len	proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

; FUNCTION CHUNK AT 67DDB430 SIZE 00000121 BYTES

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_19 ; "dbus_message_iter_get_array_len"
		mov	[esp+2Ch+var_20], 8A2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	short loc_67DE2920
		add	ebx, 8
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	loc_67DDB430
; ---------------------------------------------------------------------------
		align 10h

loc_67DE2920:				; CODE XREF: dbus_message_iter_get_array_len+3Dj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 8A2h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_3 ; "_dbus_message_iter_check (real)"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_19 ; "dbus_message_iter_get_array_len"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_message_iter_get_array_len	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 133. dbus_message_iter_get_basic

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_get_basic
dbus_message_iter_get_basic proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_20 ; "dbus_message_iter_get_basic"
		mov	[esp+2Ch+var_20], 86Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	short loc_67DE2A03
		mov	[esp+2Ch+var_1C], offset aDbus_messag_20 ; "dbus_message_iter_get_basic"
		mov	[esp+2Ch+var_20], 86Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE2A36
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_iter_get_arg_type
		cmp	eax, 68h
		nop
		jz	short loc_67DE29F7
		add	ebx, 8
		mov	[esp+2Ch+arg_4], esi
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DDC900
; ---------------------------------------------------------------------------

loc_67DE29F7:				; CODE XREF: dbus_message_iter_get_basic+80j
		mov	dword ptr [esi], 0FFFFFFFFh

loc_67DE29FD:				; CODE XREF: dbus_message_iter_get_basic+103j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE2A03:				; CODE XREF: dbus_message_iter_get_basic+42j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 86Eh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_3 ; "_dbus_message_iter_check (real)"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_20 ; "dbus_message_iter_get_basic"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE2A36:				; CODE XREF: dbus_message_iter_get_basic+72j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 86Fh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aValueNull ; "value !=	NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_20 ; "dbus_message_iter_get_basic"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE29FD
dbus_message_iter_get_basic endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 136. dbus_message_iter_get_signature

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_get_signature
dbus_message_iter_get_signature	proc near

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 54h
		mov	ebx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_4C], offset aDbus_messag_21 ; "dbus_message_iter_get_signature"
		mov	[esp+5Ch+var_50], 828h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jnz	short loc_67DE2AE5
		mov	eax, off_67E19014
		mov	[esp+5Ch+var_4C], 828h
		mov	[esp+5Ch+var_50], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset a_dbus_messag_3 ; "_dbus_message_iter_check (real)"
		mov	[esp+5Ch+var_5C], eax ;	char *
		mov	[esp+5Ch+var_58], offset aDbus_messag_21 ; "dbus_message_iter_get_signature"
		call	sub_67DFB4E0
		xor	eax, eax

loc_67DE2ADF:				; CODE XREF: dbus_message_iter_get_signature+FBj
		add	esp, 54h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE2AE5:				; CODE XREF: dbus_message_iter_get_signature+3Ej
		lea	esi, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DE2B00

loc_67DE2AF5:				; CODE XREF: dbus_message_iter_get_signature+D9j
					; dbus_message_iter_get_signature+EDj
		add	esp, 54h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE2B00:				; CODE XREF: dbus_message_iter_get_signature+83j
		lea	eax, [esp+5Ch+var_1C]
		add	ebx, 8
		mov	[esp+5Ch+var_50], eax
		lea	eax, [esp+5Ch+var_18]
		mov	[esp+5Ch+var_54], eax
		lea	eax, [esp+5Ch+var_10]
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67DDC980
		mov	eax, [esp+5Ch+var_10]
		mov	ebx, [esp+5Ch+var_1C]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E01770
		mov	[esp+5Ch+var_54], ebx ;	size_t
		mov	[esp+5Ch+var_5C], esi ;	int
		add	eax, [esp+5Ch+var_18]
		mov	[esp+5Ch+var_58], eax ;	void *
		call	sub_67E090D0
		test	eax, eax
		jz	short loc_67DE2AF5
		lea	eax, [esp+5Ch+var_14]
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E05F70
		test	eax, eax
		jz	short loc_67DE2AF5
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E02BF0
		mov	eax, [esp+5Ch+var_14]
		jmp	loc_67DE2ADF
dbus_message_iter_get_signature	endp

; Exported entry 142. dbus_message_iter_recurse

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_recurse
dbus_message_iter_recurse proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_22 ; "dbus_message_iter_recurse"
		mov	[esp+2Ch+var_20], 80Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE2C40
		mov	[esp+2Ch+var_1C], offset aDbus_messag_22 ; "dbus_message_iter_recurse"
		mov	[esp+2Ch+var_20], 80Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE2C73
		mov	eax, [ebx]
		mov	[esi], eax
		mov	eax, [ebx+4]
		mov	[esi+4], eax
		mov	eax, [ebx+8]
		mov	[esi+8], eax
		mov	eax, [ebx+0Ch]
		mov	[esi+0Ch], eax
		mov	eax, [ebx+10h]
		mov	[esi+10h], eax
		mov	eax, [ebx+14h]
		mov	[esi+14h], eax
		mov	eax, [ebx+18h]
		mov	[esi+18h], eax
		mov	eax, [ebx+1Ch]
		mov	[esi+1Ch], eax
		mov	eax, [ebx+20h]
		mov	[esi+20h], eax
		mov	eax, [ebx+24h]
		add	ebx, 8
		mov	[esi+24h], eax
		add	esi, 8
		mov	[esp+2Ch+arg_4], esi
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DDC730
; ---------------------------------------------------------------------------
		align 10h

loc_67DE2C40:				; CODE XREF: dbus_message_iter_recurse+42j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 80Dh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_3 ; "_dbus_message_iter_check (real)"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_22 ; "dbus_message_iter_recurse"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DE2C6D:				; CODE XREF: dbus_message_iter_recurse+130j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE2C73:				; CODE XREF: dbus_message_iter_recurse+76j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 80Eh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aSubNull ; "sub != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_22 ; "dbus_message_iter_recurse"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE2C6D
dbus_message_iter_recurse endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 134. dbus_message_iter_get_element_type

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_get_element_type
dbus_message_iter_get_element_type proc	near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_23 ; "dbus_message_iter_get_element_type"
		mov	[esp+2Ch+var_20], 7E6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE2DD0
		mov	[esp+2Ch+var_1C], offset aDbus_messag_23 ; "dbus_message_iter_get_element_type"
		mov	[esp+2Ch+var_20], 7E7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 60h
		jz	short loc_67DE2D60
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 7E7h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aRealIter_typeD ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_23 ; "dbus_message_iter_get_element_type"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE2D60:				; CODE XREF: dbus_message_iter_get_element_type+78j
		mov	[esp+2Ch+var_1C], offset aDbus_messag_23 ; "dbus_message_iter_get_element_type"
		mov	[esp+2Ch+var_20], 7E8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_iter_get_arg_type
		cmp	eax, 61h
		jz	short loc_67DE2E04
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 7E8h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aDbus_messag_24 ; "dbus_message_iter_get_arg_type (iter) ="...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_23 ; "dbus_message_iter_get_element_type"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE2DD0:				; CODE XREF: dbus_message_iter_get_element_type+3Dj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 7E6h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_3 ; "_dbus_message_iter_check (real)"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_23 ; "dbus_message_iter_get_element_type"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE2E04:				; CODE XREF: dbus_message_iter_get_element_type+E7j
		add	ebx, 8
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DDB6E0
dbus_message_iter_get_element_type endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 140. dbus_message_iter_next

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_next
dbus_message_iter_next proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_25 ; "dbus_message_iter_next"
		mov	[esp+2Ch+var_20], 7BAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE2EE0
		mov	[esp+2Ch+var_1C], offset aDbus_messag_25 ; "dbus_message_iter_next"
		mov	[esp+2Ch+var_20], 7BBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 60h
		jz	short loc_67DE2ED0
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 7BBh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aRealIter_typeD ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_25 ; "dbus_message_iter_next"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE2ED0:				; CODE XREF: dbus_message_iter_next+78j
		add	ebx, 8
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DDB6A0
; ---------------------------------------------------------------------------

loc_67DE2EE0:				; CODE XREF: dbus_message_iter_next+3Dj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 7BAh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_3 ; "_dbus_message_iter_check (real)"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_25 ; "dbus_message_iter_next"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_message_iter_next endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 137. dbus_message_iter_has_next

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_has_next
dbus_message_iter_has_next proc	near

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

; FUNCTION CHUNK AT 67DDCCB0 SIZE 0000006F BYTES

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_26 ; "dbus_message_iter_has_next"
		mov	[esp+2Ch+var_20], 7A7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE2FE0
		mov	[esp+2Ch+var_1C], offset aDbus_messag_26 ; "dbus_message_iter_has_next"
		mov	[esp+2Ch+var_20], 7A8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 60h
		jz	short loc_67DE2FD0
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 7A8h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aRealIter_typeD ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_26 ; "dbus_message_iter_has_next"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE2FD0:				; CODE XREF: dbus_message_iter_has_next+78j
		add	ebx, 8
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	loc_67DDCCB0
; ---------------------------------------------------------------------------

loc_67DE2FE0:				; CODE XREF: dbus_message_iter_has_next+3Dj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 7A7h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_3 ; "_dbus_message_iter_check (real)"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_26 ; "dbus_message_iter_has_next"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_message_iter_has_next endp	; sp-analysis failed

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 117. dbus_message_get_type

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_type
dbus_message_get_type proc near		; CODE XREF: sub_67DCD2A0+152p
					; sub_67DCD730+113p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_27 ; "dbus_message_get_type"
		mov	[esp+2Ch+var_20], 62Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE3068
		add	ebx, 4
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DD7EF0
; ---------------------------------------------------------------------------

loc_67DE3068:				; CODE XREF: dbus_message_get_type+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 62Eh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_27 ; "dbus_message_get_type"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_message_get_type endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 124. dbus_message_is_error

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_is_error(int, char *)
		public dbus_message_is_error
dbus_message_is_error proc near

Str1		= dword	ptr -2Ch
Str2		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_28 ; "dbus_message_is_error"
		mov	[esp+2Ch+var_20], 0DBEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Str2],	offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+Str1],	1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE3148
		mov	[esp+2Ch+var_1C], offset aDbus_messag_28 ; "dbus_message_is_error"
		mov	[esp+2Ch+var_20], 0DBFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Str2],	offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+Str1],	1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE3180
		mov	[esp+2Ch+Str1],	ebx
		call	dbus_message_get_type
		cmp	eax, 3
		jz	short loc_67DE3122

loc_67DE311A:				; CODE XREF: dbus_message_is_error+8Cj
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE3122:				; CODE XREF: dbus_message_is_error+78j
		mov	[esp+2Ch+Str1],	ebx
		call	dbus_message_get_error_name
		test	eax, eax
		jz	short loc_67DE311A
		mov	[esp+2Ch+Str2],	esi ; Str2
		mov	[esp+2Ch+Str1],	eax ; Str1
		call	strcmp
		test	eax, eax
		setz	al
		add	esp, 24h
		movzx	eax, al
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE3148:				; CODE XREF: dbus_message_is_error+3Bj
		mov	[esp+2Ch+var_1C], 0DBEh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"

loc_67DE3160:				; CODE XREF: dbus_message_is_error+F8j
		mov	eax, off_67E19014
		mov	[esp+2Ch+Str2],	offset aDbus_messag_28 ; "dbus_message_is_error"
		mov	[esp+2Ch+Str1],	eax ; char *
		call	sub_67DFB4E0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3180:				; CODE XREF: dbus_message_is_error+6Bj
		mov	[esp+2Ch+var_1C], 0DBFh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aError_nameNull ; "error_name != NULL"
		jmp	short loc_67DE3160
dbus_message_is_error endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __usercall sub_67DE31A0@<eax>(char *Str2@<ecx>, char *)
sub_67DE31A0	proc near		; CODE XREF: dbus_message_is_signal+D3j
					; dbus_message_is_method_call+D3j

Str1		= dword	ptr -3Ch
Str2		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, eax
		xor	eax, eax
		mov	[esp+3Ch+var_8], edi
		test	ebx, ebx
		mov	edi, [esp+3Ch+arg_0]
		setnz	al
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, ecx
		mov	[esp+3Ch+var_C], esi
		mov	esi, edx
		mov	[esp+3Ch+Str1],	eax
		mov	[esp+3Ch+var_2C], offset a_dbus_messag_4 ; "_dbus_message_has_type_interface_member"
		mov	[esp+3Ch+var_30], 0D5Bh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Str2],	offset aMessageNull_0 ;	"message != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	ebp, ebp
		setnz	al
		mov	[esp+3Ch+Str1],	eax
		mov	[esp+3Ch+var_2C], offset a_dbus_messag_4 ; "_dbus_message_has_type_interface_member"
		mov	[esp+3Ch+var_30], 0D5Ch
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Str2],	offset aInterfaceNull ;	"interface != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	edi, edi
		setnz	al
		mov	[esp+3Ch+Str1],	eax
		mov	[esp+3Ch+var_2C], offset a_dbus_messag_4 ; "_dbus_message_has_type_interface_member"
		mov	[esp+3Ch+var_30], 0D5Dh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Str2],	offset aMemberNull ; "member !=	NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+Str1],	ebx
		call	dbus_message_get_type
		cmp	eax, esi
		jz	short loc_67DE3270

loc_67DE3256:				; CODE XREF: sub_67DE31A0+DAj
					; sub_67DE31A0+EAj
		xor	eax, eax

loc_67DE3258:				; CODE XREF: sub_67DE31A0+FDj
					; sub_67DE31A0+113j
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3270:				; CODE XREF: sub_67DE31A0+B4j
		mov	[esp+3Ch+Str1],	ebx
		call	dbus_message_get_member
		test	eax, eax
		jz	short loc_67DE3256
		mov	[esp+3Ch+Str2],	edi ; Str2
		mov	[esp+3Ch+Str1],	eax ; Str1
		call	strcmp
		test	eax, eax
		jnz	short loc_67DE3256
		mov	[esp+3Ch+Str1],	ebx
		call	dbus_message_get_interface
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jz	short loc_67DE3258
		mov	[esp+3Ch+Str2],	ebp ; Str2
		mov	[esp+3Ch+Str1],	edx ; Str1
		call	strcmp
		test	eax, eax
		setz	al
		movzx	eax, al
		jmp	short loc_67DE3258
sub_67DE31A0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 126. dbus_message_is_signal

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_is_signal
dbus_message_is_signal proc near	; CODE XREF: sub_67DCD730+1D3p
					; dbus_connection_borrow_message+233p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
Str2		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+Str2]
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_29 ; "dbus_message_is_signal"
		mov	[esp+2Ch+var_20], 0DA2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE3398
		mov	[esp+2Ch+var_1C], offset aDbus_messag_29 ; "dbus_message_is_signal"
		mov	[esp+2Ch+var_20], 0DA3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE33D7
		mov	[esp+2Ch+var_1C], offset aDbus_messag_29 ; "dbus_message_is_signal"
		mov	[esp+2Ch+var_20], 0DA4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DE3406
		mov	[esp+2Ch+arg_0], edi ; char *
		mov	ecx, esi	; Str2
		mov	eax, ebx
		mov	esi, [esp+2Ch+var_8]
		mov	edx, 4
		mov	ebx, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		jmp	sub_67DE31A0
; ---------------------------------------------------------------------------

loc_67DE3398:				; CODE XREF: dbus_message_is_signal+49j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0DA2h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_29 ; "dbus_message_is_signal"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DE33C5:				; CODE XREF: dbus_message_is_signal+144j
					; dbus_message_is_signal+173j
		xor	eax, eax
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE33D7:				; CODE XREF: dbus_message_is_signal+7Dj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0DA3h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aInterfaceNull	; "interface !=	NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_29 ; "dbus_message_is_signal"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE33C5
; ---------------------------------------------------------------------------

loc_67DE3406:				; CODE XREF: dbus_message_is_signal+B1j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0DA4h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aSignal_nameNul ; "signal_name	!= NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_29 ; "dbus_message_is_signal"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE33C5
dbus_message_is_signal endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 125. dbus_message_is_method_call

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_is_method_call
dbus_message_is_method_call proc near	; CODE XREF: dbus_connection_dispatch+4D0p
					; dbus_connection_dispatch+9F3p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
Str2		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+Str2]
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_30 ; "dbus_message_is_method_call"
		mov	[esp+2Ch+var_20], 0D86h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE3518
		mov	[esp+2Ch+var_1C], offset aDbus_messag_30 ; "dbus_message_is_method_call"
		mov	[esp+2Ch+var_20], 0D87h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE3557
		mov	[esp+2Ch+var_1C], offset aDbus_messag_30 ; "dbus_message_is_method_call"
		mov	[esp+2Ch+var_20], 0D88h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DE3586
		mov	[esp+2Ch+arg_0], edi ; char *
		mov	ecx, esi	; Str2
		mov	eax, ebx
		mov	esi, [esp+2Ch+var_8]
		mov	edx, 1
		mov	ebx, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		jmp	sub_67DE31A0
; ---------------------------------------------------------------------------

loc_67DE3518:				; CODE XREF: dbus_message_is_method_call+49j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0D86h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_30 ; "dbus_message_is_method_call"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DE3545:				; CODE XREF: dbus_message_is_method_call+144j
					; dbus_message_is_method_call+173j
		xor	eax, eax
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE3557:				; CODE XREF: dbus_message_is_method_call+7Dj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0D87h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aInterfaceNull	; "interface !=	NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_30 ; "dbus_message_is_method_call"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE3545
; ---------------------------------------------------------------------------

loc_67DE3586:				; CODE XREF: dbus_message_is_method_call+B1j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0D88h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMethodNull ; "method != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_30 ; "dbus_message_is_method_call"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE3545
dbus_message_is_method_call endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE35C0	proc near		; CODE XREF: dbus_message_unref+2C9j
					; sub_67DE3AC0+19p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 24h
		mov	[esp+2Ch+var_2C], eax
		lea	esi, [ebx+5Ch]
		call	sub_67E0ABB0
		mov	[esp+2Ch+var_1C], offset aDbus_messag_31 ; "dbus_message_finalize"
		mov	[esp+2Ch+var_20], 413h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_atomic_0 ; "_dbus_atomic_get (&message->refcount) ="...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+68h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF9160
		mov	[esp+2Ch+var_24], ebx
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], offset sub_67DE3B40
		call	sub_67DFB9D0
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DFBC90
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD8BF0
		lea	eax, [ebx+44h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E02BF0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0ABB0
		mov	[esp+2Ch+var_1C], offset aDbus_messag_31 ; "dbus_message_finalize"
		mov	[esp+2Ch+var_20], 424h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_atomic_0 ; "_dbus_atomic_get (&message->refcount) ="...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_free
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DE35C0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 165. dbus_message_unref

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_unref
dbus_message_unref proc	near		; CODE XREF: sub_67DC5C60+29p
					; dbus_bus_remove_match+9Bp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_message_u ; "dbus_message_unref"
		mov	[esp+2Ch+var_20], 612h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE3993
		mov	[esp+2Ch+var_1C], offset aDbus_message_u ; "dbus_message_unref"
		mov	[esp+2Ch+var_20], 613h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [ebx+70h]
		cmp	eax, dword_67E19028
		jz	short loc_67DE3737
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 613h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageGenerat ; "message->generation	== _dbus_current_ge"...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_message_u ; "dbus_message_unref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DE3731:				; CODE XREF: dbus_message_unref+119j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE3737:				; CODE XREF: dbus_message_unref+72j
		mov	[esp+2Ch+var_1C], offset aDbus_message_u ; "dbus_message_unref"
		mov	[esp+2Ch+var_20], 614h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 2
		jnz	loc_67DE3960
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B440
		mov	[esp+2Ch+var_1C], offset aDbus_message_u ; "dbus_message_unref"
		mov	[esp+2Ch+var_20], 618h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aOld_refcount1 ; "old_refcount >= 1"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		cmp	esi, 1
		jnz	short loc_67DE3731
		mov	[esp+2Ch+var_2C], ebx
		lea	esi, [ebx+5Ch]
		call	sub_67E0ABB0
		mov	[esp+2Ch+var_1C], offset aDbus_message_c ; "dbus_message_cache_or_finalize"
		mov	[esp+2Ch+var_20], 24Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset a_dbus_atomic_0 ; "_dbus_atomic_get (&message->refcount) ="...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+68h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF89B0
		mov	[esp+2Ch+var_24], ebx
		mov	dword ptr [esp+2Ch+var_28], offset sub_67DE3B40
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DFB9D0
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DFBC90
		mov	eax, ds:dword_67E34D78
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	ecx, ds:dword_67E3403C
		test	ecx, ecx
		jnz	loc_67DE38B4
		xor	eax, eax
		cmp	ds:dword_67E34038, 0
		mov	[esp+2Ch+var_1C], offset aDbus_message_c ; "dbus_message_cache_or_finalize"
		mov	[esp+2Ch+var_20], 264h
		setz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aMessage_cache_ ; "message_cache_count == 0"
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], offset sub_67DE3AC0
		call	sub_67DFE730
		test	eax, eax
		jz	loc_67DE390D
		mov	ds:dword_67E34040, 0
		mov	ds:dword_67E34044, 0
		mov	ds:dword_67E34048, 0
		mov	ds:dword_67E3404C, 0
		mov	ds:dword_67E34050, 0
		mov	ds:dword_67E3403C, 1

loc_67DE38B4:				; CODE XREF: dbus_message_unref+192j
		mov	eax, ds:dword_67E34038
		mov	[esp+2Ch+var_1C], offset aDbus_message_c ; "dbus_message_cache_or_finalize"
		mov	[esp+2Ch+var_20], 273h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_28], offset aMessage_cach_0 ; "message_cache_count >= 0"
		call	sub_67DFAE70
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E00CE0
		mov	esi, eax
		lea	eax, [ebx+44h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E00CE0
		lea	esi, [eax+esi]
		cmp	esi, 2800h
		jle	loc_67DE39C6

loc_67DE390D:				; CODE XREF: dbus_message_unref+1E2j
					; dbus_message_unref+33Dj
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0ABB0
		mov	[esp+2Ch+var_1C], offset aDbus_message_c ; "dbus_message_cache_or_finalize"
		mov	[esp+2Ch+var_20], 28Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset a_dbus_atomic_0 ; "_dbus_atomic_get (&message->refcount) ="...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ds:dword_67E34D78
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		add	esp, 24h
		mov	eax, ebx
		pop	ebx
		pop	esi
		jmp	sub_67DE35C0
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3960:				; CODE XREF: dbus_message_unref+D7j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 614h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageIn_cach ; "!message->in_cache"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_message_u ; "dbus_message_unref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE3993:				; CODE XREF: dbus_message_unref+37j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 612h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_message_u ; "dbus_message_unref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE39C6:				; CODE XREF: dbus_message_unref+277j
		cmp	ds:dword_67E34038, 4
		jg	loc_67DE390D
		mov	edx, ds:dword_67E34040
		xor	esi, esi
		mov	eax, 1
		test	edx, edx
		jz	short loc_67DE39FA

loc_67DE39E4:				; CODE XREF: dbus_message_unref+360j
		add	esi, 1
		mov	ecx, ds:dword_67E34040[esi*4]
		test	ecx, ecx
		jnz	short loc_67DE39E4
		xor	eax, eax
		cmp	esi, 4
		setle	al

loc_67DE39FA:				; CODE XREF: dbus_message_unref+352j
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aDbus_message_c ; "dbus_message_cache_or_finalize"
		mov	[esp+2Ch+var_20], 282h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aIMax_message_c ; "i	< MAX_MESSAGE_CACHE_SIZE"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	ds:dword_67E34040[esi*4], 0
		mov	[esp+2Ch+var_1C], offset aDbus_message_c ; "dbus_message_cache_or_finalize"
		mov	[esp+2Ch+var_20], 284h
		setz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aMessage_cacheI ; "message_cache[i] == NULL"
		call	sub_67DFAE70
		add	ds:dword_67E34038, 1
		mov	ds:dword_67E34040[esi*4], ebx
		or	byte ptr [ebx+59h], 2
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0ABB0
		mov	[esp+2Ch+var_1C], offset aDbus_message_c ; "dbus_message_cache_or_finalize"
		mov	[esp+2Ch+var_20], 28Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset a_dbus_atomic_0 ; "_dbus_atomic_get (&message->refcount) ="...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ds:dword_67E34D78
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DF1AD0
dbus_message_unref endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE3AC0	proc near		; DATA XREF: dbus_message_unref+1D4o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, ds:dword_67E34D78
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34040
		test	eax, eax
		jz	short loc_67DE3ADE
		call	sub_67DE35C0

loc_67DE3ADE:				; CODE XREF: sub_67DE3AC0+17j
		mov	eax, ds:dword_67E34044
		test	eax, eax
		jz	short loc_67DE3AEC
		call	sub_67DE35C0

loc_67DE3AEC:				; CODE XREF: sub_67DE3AC0+25j
		mov	eax, ds:dword_67E34048
		test	eax, eax
		jz	short loc_67DE3AFA
		call	sub_67DE35C0

loc_67DE3AFA:				; CODE XREF: sub_67DE3AC0+33j
		mov	eax, ds:dword_67E3404C
		test	eax, eax
		jz	short loc_67DE3B08
		call	sub_67DE35C0

loc_67DE3B08:				; CODE XREF: sub_67DE3AC0+41j
		mov	eax, ds:dword_67E34050
		test	eax, eax
		jz	short loc_67DE3B16
		call	sub_67DE35C0

loc_67DE3B16:				; CODE XREF: sub_67DE3AC0+4Fj
		mov	eax, ds:dword_67E34D78
		mov	ds:dword_67E34038, 0
		mov	ds:dword_67E3403C, 0
		mov	[esp+1Ch+arg_0], eax
		add	esp, 1Ch
		jmp	sub_67DF1AD0
sub_67DE3AC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE3B40	proc near		; DATA XREF: sub_67DE35C0+54o
					; dbus_message_unref+165o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [eax+60h]
		mov	[esp+1Ch+var_1C], ebx
		neg	eax
		mov	[esp+1Ch+var_18], eax
		call	sub_67DEB580
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	sub_67DEB6E0
sub_67DE3B40	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  98. dbus_message_copy

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_copy
dbus_message_copy proc near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	[esp+3Ch+var_2C], offset aDbus_messag_32 ; "dbus_message_copy"
		mov	[esp+3Ch+var_30], 5A7h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE3C58
		mov	[esp+3Ch+var_3C], 74h ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DE3C42
		mov	[esp+3Ch+var_3C], eax
		lea	ebp, [ebx+4]
		call	sub_67E0B460
		movzx	eax, byte ptr [esi+58h]
		and	byte ptr [ebx+59h], 0FEh
		mov	[ebx+58h], al
		mov	eax, [esi+70h]
		mov	[ebx+70h], eax
		lea	eax, [esi+4]
		mov	dword ptr [esp+3Ch+var_38], ebp
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DD8C00
		test	eax, eax
		jz	loc_67DE3CA0
		add	esi, 44h
		mov	[esp+3Ch+var_3C], esi
		lea	edi, [ebx+44h]
		call	sub_67E00CE0
		mov	[esp+3Ch+var_3C], edi
		mov	dword ptr [esp+3Ch+var_38], eax
		call	sub_67E031B0
		test	eax, eax
		jz	loc_67DE3CB0
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+var_34], edi
		mov	dword ptr [esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E036F0
		test	eax, eax
		jz	short loc_67DE3C90

loc_67DE3C42:				; CODE XREF: dbus_message_copy+5Bj
					; dbus_message_copy+117j ...
		mov	eax, ebx
		mov	esi, [esp+3Ch+var_C]
		mov	ebx, [esp+3Ch+var_10]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE3C58:				; CODE XREF: dbus_message_copy+45j
		mov	eax, off_67E19014
		xor	ebx, ebx
		mov	[esp+3Ch+var_2C], 5A7h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_messag_32 ; "dbus_message_copy"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE3C42
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3C90:				; CODE XREF: dbus_message_copy+D0j
		mov	[esp+3Ch+var_3C], ebp
		call	sub_67DD8BF0
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E02BF0

loc_67DE3CA0:				; CODE XREF: dbus_message_copy+8Aj
		mov	[esp+3Ch+var_3C], ebx
		xor	ebx, ebx
		call	dbus_free
		jmp	short loc_67DE3C42
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3CB0:				; CODE XREF: dbus_message_copy+ACj
		mov	[esp+3Ch+var_3C], ebp
		call	sub_67DD8BF0
		mov	[esp+3Ch+var_3C], ebx
		xor	ebx, ebx
		call	dbus_free
		jmp	loc_67DE3C42
dbus_message_copy endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 150. dbus_message_new_signal

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_new_signal(char *, char *, char *)
		public dbus_message_new_signal
dbus_message_new_signal	proc near	; CODE XREF: sub_67DCCE40+104p

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	edi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset aDbus_message_n ; "dbus_message_new_signal"
		mov	[esp+3Ch+var_30], 508h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE3F20
		mov	[esp+3Ch+var_2C], offset aDbus_message_n ; "dbus_message_new_signal"
		mov	[esp+3Ch+var_30], 509h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE3F40
		mov	[esp+3Ch+var_2C], offset aDbus_message_n ; "dbus_message_new_signal"
		mov	[esp+3Ch+var_30], 50Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DE3F60
		mov	[esp+3Ch+var_2C], offset aDbus_message_n ; "dbus_message_new_signal"
		mov	[esp+3Ch+var_30], 50Bh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], ebx ;	char *
		call	sub_67DDF050
		test	eax, eax
		jz	loc_67DE3ED0
		mov	[esp+3Ch+var_2C], offset aDbus_message_n ; "dbus_message_new_signal"
		mov	[esp+3Ch+var_30], 50Ch
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], esi ;	char *
		call	sub_67DDE850
		test	eax, eax
		jz	loc_67DE3EF0
		mov	[esp+3Ch+var_2C], offset aDbus_message_n ; "dbus_message_new_signal"
		mov	[esp+3Ch+var_30], 50Dh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], edi ;	char *
		call	sub_67DDF090
		test	eax, eax
		jz	short loc_67DE3E90
		call	sub_67DE0E70
		test	eax, eax
		mov	ebp, eax
		jz	short loc_67DE3E81
		lea	eax, [eax+4]
		mov	[esp+3Ch+var_24], 0
		mov	[esp+3Ch+var_28], edi
		mov	[esp+3Ch+var_2C], esi
		mov	[esp+3Ch+var_30], ebx
		mov	[esp+3Ch+var_34], 0
		mov	dword ptr [esp+3Ch+var_38], 4
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DD8E90
		test	eax, eax
		jz	loc_67DE3F10
		mov	dword ptr [esp+3Ch+var_38], 1
		mov	[esp+3Ch+var_3C], ebp
		call	dbus_message_set_no_reply

loc_67DE3E81:				; CODE XREF: dbus_message_new_signal+168j
					; dbus_message_new_signal+24Aj
		add	esp, 2Ch
		mov	eax, ebp
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3E90:				; CODE XREF: dbus_message_new_signal+15Dj
		mov	[esp+3Ch+var_2C], 50Dh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check__0 ; "_dbus_check_is_valid_member	(name)"

loc_67DE3EA8:				; CODE XREF: dbus_message_new_signal+218j
					; dbus_message_new_signal+238j	...
		mov	eax, off_67E19014
		xor	ebp, ebp
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_message_n ; "dbus_message_new_signal"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 2Ch
		mov	eax, ebp
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3ED0:				; CODE XREF: dbus_message_new_signal+E5j
		mov	[esp+3Ch+var_2C], 50Bh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check__1 ; "_dbus_check_is_valid_path (path)"
		jmp	short loc_67DE3EA8
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3EF0:				; CODE XREF: dbus_message_new_signal+121j
		mov	[esp+3Ch+var_2C], 50Ch
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check__2 ; "_dbus_check_is_valid_interface (interfa"...
		jmp	short loc_67DE3EA8
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3F10:				; CODE XREF: dbus_message_new_signal+19Bj
		mov	[esp+3Ch+var_3C], ebp
		xor	ebp, ebp
		call	dbus_message_unref
		jmp	loc_67DE3E81
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3F20:				; CODE XREF: dbus_message_new_signal+41j
		mov	[esp+3Ch+var_2C], 508h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aPathNull_0 ; "path !=	NULL"
		jmp	loc_67DE3EA8
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3F40:				; CODE XREF: dbus_message_new_signal+75j
		mov	[esp+3Ch+var_2C], 509h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aInterfaceNull	; "interface !=	NULL"
		jmp	loc_67DE3EA8
; ---------------------------------------------------------------------------
		align 10h

loc_67DE3F60:				; CODE XREF: dbus_message_new_signal+A9j
		mov	[esp+3Ch+var_2C], 50Ah
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aNameNull_1 ; "name !=	NULL"
		jmp	loc_67DE3EA8
dbus_message_new_signal	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 148. dbus_message_new_method_call

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_new_method_call(char	*, char	*, char	*, char	*)
		public dbus_message_new_method_call
dbus_message_new_method_call proc near	; CODE XREF: dbus_bus_remove_match+60p
					; dbus_bus_add_match+60p ...

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_4]
		mov	edi, [esp+4Ch+arg_0]
		mov	ebp, [esp+4Ch+arg_8]
		mov	esi, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_3C], offset aDbus_messag_34 ; "dbus_message_new_method_call"
		mov	[esp+4Ch+var_40], 4B0h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE41E0
		mov	[esp+4Ch+var_3C], offset aDbus_messag_34 ; "dbus_message_new_method_call"
		mov	[esp+4Ch+var_40], 4B1h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE4200
		mov	[esp+4Ch+var_3C], offset aDbus_messag_34 ; "dbus_message_new_method_call"
		mov	[esp+4Ch+var_40], 4B3h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	short loc_67DE403F
		mov	[esp+4Ch+var_4C], edi ;	char *
		call	sub_67DDF1E0
		test	eax, eax
		jz	loc_67DE41A0

loc_67DE403F:				; CODE XREF: dbus_message_new_method_call+ADj
		mov	[esp+4Ch+var_3C], offset aDbus_messag_34 ; "dbus_message_new_method_call"
		mov	[esp+4Ch+var_40], 4B4h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx ;	char *
		call	sub_67DDF050
		test	eax, eax
		jz	loc_67DE4180
		mov	[esp+4Ch+var_3C], offset aDbus_messag_34 ; "dbus_message_new_method_call"
		mov	[esp+4Ch+var_40], 4B6h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebp, ebp
		jz	short loc_67DE40BB
		mov	[esp+4Ch+var_4C], ebp ;	char *
		call	sub_67DDE850
		test	eax, eax
		jz	loc_67DE41C0

loc_67DE40BB:				; CODE XREF: dbus_message_new_method_call+129j
		mov	[esp+4Ch+var_3C], offset aDbus_messag_34 ; "dbus_message_new_method_call"
		mov	[esp+4Ch+var_40], 4B7h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], esi ;	char *
		call	sub_67DDF090
		test	eax, eax
		jz	short loc_67DE4143
		call	sub_67DE0E70
		test	eax, eax
		mov	edx, eax
		jz	short loc_67DE4139
		lea	eax, [eax+4]
		mov	[esp+4Ch+var_20], edx
		mov	[esp+4Ch+var_34], 0
		mov	[esp+4Ch+var_38], esi
		mov	[esp+4Ch+var_3C], ebp
		mov	[esp+4Ch+var_40], ebx
		mov	[esp+4Ch+var_44], edi
		mov	dword ptr [esp+4Ch+var_48], 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DD8E90
		mov	edx, [esp+4Ch+var_20]
		test	eax, eax
		jz	loc_67DE4220

loc_67DE4139:				; CODE XREF: dbus_message_new_method_call+17Cj
					; dbus_message_new_method_call+2AAj
		add	esp, 3Ch
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE4143:				; CODE XREF: dbus_message_new_method_call+171j
		mov	[esp+4Ch+var_3C], 4B7h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset a_dbus_check__3 ; "_dbus_check_is_valid_member	(method)"

loc_67DE415B:				; CODE XREF: dbus_message_new_method_call+218j
					; dbus_message_new_method_call+238j ...
		mov	eax, off_67E19014
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_34 ; "dbus_message_new_method_call"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		xor	edx, edx
		add	esp, 3Ch
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE4180:				; CODE XREF: dbus_message_new_method_call+F5j
		mov	[esp+4Ch+var_3C], 4B4h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset a_dbus_check__1 ; "_dbus_check_is_valid_path (path)"
		jmp	short loc_67DE415B
; ---------------------------------------------------------------------------
		align 10h

loc_67DE41A0:				; CODE XREF: dbus_message_new_method_call+B9j
		mov	[esp+4Ch+var_3C], 4B3h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aDestinationNul ; "destination	== NULL	|| _dbus_check_is_v"...
		jmp	short loc_67DE415B
; ---------------------------------------------------------------------------
		align 10h

loc_67DE41C0:				; CODE XREF: dbus_message_new_method_call+135j
		mov	[esp+4Ch+var_3C], 4B6h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aInterfaceNull_ ; "interface == NULL || _dbus_check_is_val"...
		jmp	short loc_67DE415B
; ---------------------------------------------------------------------------
		align 10h

loc_67DE41E0:				; CODE XREF: dbus_message_new_method_call+45j
		mov	[esp+4Ch+var_3C], 4B0h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aPathNull_0 ; "path !=	NULL"
		jmp	loc_67DE415B
; ---------------------------------------------------------------------------
		align 10h

loc_67DE4200:				; CODE XREF: dbus_message_new_method_call+79j
		mov	[esp+4Ch+var_3C], 4B1h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aMethodNull ; "method != NULL"
		jmp	loc_67DE415B
; ---------------------------------------------------------------------------
		align 10h

loc_67DE4220:				; CODE XREF: dbus_message_new_method_call+1B3j
		mov	[esp+4Ch+var_4C], edx
		call	dbus_message_unref
		xor	edx, edx
		jmp	loc_67DE4139
dbus_message_new_method_call endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 145. dbus_message_new

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_new
dbus_message_new proc near		; CODE XREF: sub_67DD26C0+58Fp

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_35 ; "dbus_message_new"
		mov	[esp+2Ch+var_20], 482h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jnz	short loc_67DE42A0
		mov	eax, off_67E19014
		xor	ebx, ebx
		mov	[esp+2Ch+var_1C], 482h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessage_typeDb ; "message_type != DBUS_MESSAGE_TYPE_INVAL"...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_35 ; "dbus_message_new"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DE4298:				; CODE XREF: dbus_message_new+79j
					; dbus_message_new+B4j	...
		mov	eax, ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE42A0:				; CODE XREF: dbus_message_new+37j
		call	sub_67DE0E70
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DE4298
		lea	eax, [eax+4]
		mov	[esp+2Ch+var_14], 0
		mov	[esp+2Ch+var_18], 0
		mov	[esp+2Ch+var_1C], 0
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], 0
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD8E90
		test	eax, eax
		jnz	short loc_67DE4298
		mov	[esp+2Ch+var_2C], ebx
		xor	ebx, ebx
		call	dbus_message_unref
		jmp	short loc_67DE4298
dbus_message_new endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 115. dbus_message_get_serial

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_serial
dbus_message_get_serial	proc near	; CODE XREF: sub_67DD0BB0+14Bp
					; sub_67DD0BB0+182p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_36 ; "dbus_message_get_serial"
		mov	[esp+2Ch+var_20], 3DFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE4348
		add	ebx, 4
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DD8BB0
; ---------------------------------------------------------------------------

loc_67DE4348:				; CODE XREF: dbus_message_get_serial+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 3DFh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_36 ; "dbus_message_get_serial"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_message_get_serial	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 149. dbus_message_new_method_return

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_new_method_return
dbus_message_new_method_return proc near ; CODE	XREF: dbus_connection_dispatch+4E0p
					; dbus_connection_dispatch+9FFp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], ebx
		mov	[esp+2Ch+var_4], edi
		mov	[esp+2Ch+var_1C], offset aDbus_messag_37 ; "dbus_message_new_method_return"
		mov	[esp+2Ch+var_20], 4D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE4451
		mov	[esp+2Ch+var_2C], esi
		call	dbus_message_get_sender
		mov	edi, eax
		call	sub_67DE0E70
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DE443F
		lea	eax, [eax+4]
		mov	[esp+2Ch+var_14], 0
		mov	[esp+2Ch+var_18], 0
		mov	[esp+2Ch+var_1C], 0
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], edi
		mov	dword ptr [esp+2Ch+var_28], 2
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD8E90
		test	eax, eax
		jz	short loc_67DE4482
		mov	dword ptr [esp+2Ch+var_28], 1
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_set_no_reply
		mov	[esp+2Ch+var_2C], esi
		call	dbus_message_get_serial
		mov	[esp+2Ch+var_2C], ebx
		mov	dword ptr [esp+2Ch+var_28], eax
		call	dbus_message_set_reply_serial
		test	eax, eax
		jz	short loc_67DE4482

loc_67DE443F:				; CODE XREF: dbus_message_new_method_return+5Aj
					; dbus_message_new_method_return+100j ...
		mov	eax, ebx
		mov	esi, [esp+2Ch+var_8]
		mov	ebx, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE4451:				; CODE XREF: dbus_message_new_method_return+41j
		mov	eax, off_67E19014
		xor	ebx, ebx
		mov	[esp+2Ch+var_1C], 4D5h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMethod_callNul ; "method_call	!= NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_37 ; "dbus_message_new_method_return"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE443F
; ---------------------------------------------------------------------------

loc_67DE4482:				; CODE XREF: dbus_message_new_method_return+95j
					; dbus_message_new_method_return+BDj
		mov	[esp+2Ch+var_2C], ebx
		xor	ebx, ebx
		call	dbus_message_unref
		lea	esi, [esi+0]
		jmp	short loc_67DE443F
dbus_message_new_method_return endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE44A0	proc near		; CODE XREF: dbus_message_get_args_valist+AEp

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= byte ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	eax, [esp+7Ch+arg_0]
		mov	edi, [esp+7Ch+arg_8]
		mov	ebp, [esp+7Ch+arg_C]
		call	sub_67DE0750
		mov	[esp+7Ch+var_6C], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	dword ptr [esp+7Ch+var_70], 2DBh ; char
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset a_dbus_messag_3 ; "_dbus_message_iter_check (real)"
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DE4899
		mov	eax, [esp+7Ch+arg_0]
		xor	ebx, ebx
		lea	esi, [esp+7Ch+var_3C]
		add	eax, 8
		mov	[esp+7Ch+var_4C], eax

loc_67DE450D:				; CODE XREF: sub_67DE44A0+414j
		mov	eax, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_message_iter_get_arg_type
		cmp	edi, eax
		jnz	loc_67DE48FB
		cmp	edi, 68h
		jz	loc_67DE493F
		mov	[esp+7Ch+var_7C], edi
		call	dbus_type_is_basic
		test	eax, eax
		jnz	loc_67DE4832
		cmp	edi, 61h
		jnz	loc_67DE4965
		mov	eax, [esp+7Ch+var_4C]
		mov	edi, [ebp+0]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DDB6E0
		cmp	edi, eax
		jnz	loc_67DE4980
		lea	edx, [ebp+4]
		mov	[esp+7Ch+var_54], edx
		mov	[esp+7Ch+var_7C], edi
		mov	[esp+7Ch+var_50], eax
		call	dbus_type_is_fixed
		mov	edx, [esp+7Ch+var_54]
		mov	ecx, [esp+7Ch+var_50]
		test	eax, eax
		jz	loc_67DE4618
		cmp	edi, 68h
		jz	loc_67DE4622
		mov	edi, [edx]
		lea	eax, [ebp+0Ch]
		mov	ebp, [ebp+8]
		mov	[esp+7Ch+var_48], eax
		xor	eax, eax
		mov	[esp+7Ch+var_6C], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		test	edi, edi
		setnz	al
		mov	[esp+7Ch+var_7C], eax
		mov	dword ptr [esp+7Ch+var_70], 338h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aPtrNull ; "ptr != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	ebp, ebp
		setnz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_6C], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	dword ptr [esp+7Ch+var_70], 339h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aN_elements_pNu ; "n_elements_p != NULL"
		call	sub_67DFAE70
		mov	eax, [esp+7Ch+var_4C]
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DDC730
		mov	[esp+7Ch+var_74], ebp
		mov	[esp+7Ch+var_78], edi
		mov	[esp+7Ch+var_7C], esi
		call	sub_67DDDA30
		jmp	loc_67DE487B
; ---------------------------------------------------------------------------

loc_67DE4618:				; CODE XREF: sub_67DE44A0+DAj
		cmp	ecx, 67h
		jz	short loc_67DE462B
		cmp	ecx, 73h
		jz	short loc_67DE462B

loc_67DE4622:				; CODE XREF: sub_67DE44A0+E3j
		cmp	ecx, 6Fh
		jnz	loc_67DE49AB

loc_67DE462B:				; CODE XREF: sub_67DE44A0+17Bj
					; sub_67DE44A0+180j
		lea	eax, [edx+4]
		mov	[esp+7Ch+var_48], eax
		mov	eax, [edx]
		mov	edx, [edx+4]
		mov	[esp+7Ch+var_6C], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	dword ptr [esp+7Ch+var_70], 34Bh
		test	eax, eax
		mov	[esp+7Ch+var_40], eax
		setnz	al
		movzx	eax, al
		mov	[esp+7Ch+var_44], edx
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aStr_array_pNul ; "str_array_p	!= NULL"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	[esp+7Ch+var_44], 0
		mov	[esp+7Ch+var_6C], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	dword ptr [esp+7Ch+var_70], 34Ch
		setnz	al
		xor	edi, edi
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aN_elements_pNu ; "n_elements_p != NULL"
		call	sub_67DFAE70
		mov	eax, [esp+7Ch+var_4C]
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DDC730
		jmp	short loc_67DE46C0
; ---------------------------------------------------------------------------

loc_67DE46B5:				; CODE XREF: sub_67DE44A0+22Aj
		add	edi, 1
		mov	[esp+7Ch+var_7C], esi
		call	sub_67DDB6A0

loc_67DE46C0:				; CODE XREF: sub_67DE44A0+213j
		mov	[esp+7Ch+var_7C], esi
		call	sub_67DDB560
		test	eax, eax
		jnz	short loc_67DE46B5
		lea	eax, ds:4[edi*4]
		mov	[esp+7Ch+var_7C], eax ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebp, eax
		jz	loc_67DE48C8
		mov	eax, [esp+7Ch+var_4C]
		xor	ebx, ebx
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DDC730
		test	edi, edi
		jnz	short loc_67DE4704
		jmp	loc_67DE48F2
; ---------------------------------------------------------------------------

loc_67DE4700:				; CODE XREF: sub_67DE44A0+299j
		cmp	edi, ebx
		jle	short loc_67DE476E

loc_67DE4704:				; CODE XREF: sub_67DE44A0+259j
					; sub_67DE44A0+2CCj
		lea	eax, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_78], eax
		mov	[esp+7Ch+var_7C], esi
		call	sub_67DDC900
		mov	eax, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_7C], eax ;	char *
		call	sub_67DFAA60
		test	eax, eax
		mov	[ebp+ebx*4+0], eax
		jz	loc_67DE48C0
		mov	[esp+7Ch+var_7C], esi
		add	ebx, 1
		call	sub_67DDB6A0
		test	eax, eax
		jnz	short loc_67DE4700
		xor	eax, eax
		cmp	ebx, edi
		setz	al
		mov	[esp+7Ch+var_6C], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	dword ptr [esp+7Ch+var_70], 374h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aIN_elements ;	"i == n_elements"
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		cmp	edi, ebx
		jg	short loc_67DE4704

loc_67DE476E:				; CODE XREF: sub_67DE44A0+262j
		lea	edx, ds:0[ebx*4]

loc_67DE4775:				; CODE XREF: sub_67DE44A0+456j
		mov	eax, [esp+7Ch+var_48]
		mov	[esp+7Ch+var_54], edx
		mov	[esp+7Ch+var_7C], esi
		add	eax, 4
		mov	[esp+7Ch+var_48], eax
		call	sub_67DDB560
		mov	[esp+7Ch+var_6C], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	dword ptr [esp+7Ch+var_70], 377h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset a_dbus_type__13 ; "_dbus_type_reader_get_current_type (&ar"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		xor	eax, eax
		cmp	ebx, edi
		setz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_6C], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	dword ptr [esp+7Ch+var_70], 378h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aIN_elements ;	"i == n_elements"
		call	sub_67DFAE70
		mov	edx, [esp+7Ch+var_54]
		xor	eax, eax
		mov	[esp+7Ch+var_6C], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	dword ptr [esp+7Ch+var_70], 379h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aStr_arrayINull ; "str_array[i] == NULL"
		cmp	dword ptr [ebp+edx+0], 0
		setz	al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	eax, [esp+7Ch+var_40]
		mov	[eax], ebp
		mov	eax, [esp+7Ch+var_44]
		mov	[eax], edi
		jmp	loc_67DE487B
; ---------------------------------------------------------------------------

loc_67DE4832:				; CODE XREF: sub_67DE44A0+97j
		mov	edi, [ebp+0]
		lea	eax, [ebp+4]
		mov	[esp+7Ch+var_48], eax
		xor	eax, eax
		mov	[esp+7Ch+var_6C], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	dword ptr [esp+7Ch+var_70], 316h
		test	edi, edi
		setnz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aPtrNull ; "ptr != NULL"
		call	sub_67DFAE70
		mov	eax, [esp+7Ch+var_4C]
		mov	[esp+7Ch+var_78], edi
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DDC900

loc_67DE487B:				; CODE XREF: sub_67DE44A0+173j
					; sub_67DE44A0+38Dj
		mov	eax, [esp+7Ch+var_48]
		mov	edi, [eax]
		mov	eax, [esp+7Ch+var_4C]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DDB6A0
		test	eax, eax
		jnz	short loc_67DE48A6
		test	edi, edi
		jnz	loc_67DE49C6

loc_67DE4899:				; CODE XREF: sub_67DE44A0+53j
					; sub_67DE44A0+408j
		mov	eax, 1

loc_67DE489E:				; CODE XREF: sub_67DE44A0+49Aj
					; sub_67DE44A0+4C0j ...
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE48A6:				; CODE XREF: sub_67DE44A0+3EFj
		test	edi, edi
		jz	short loc_67DE4899
		mov	ebp, [esp+7Ch+var_48]
		add	ebx, 1
		add	ebp, 4
		jmp	loc_67DE450D
; ---------------------------------------------------------------------------
		align 10h

loc_67DE48C0:				; CODE XREF: sub_67DE44A0+286j
		mov	[esp+7Ch+var_7C], ebp
		call	dbus_free_string_array

loc_67DE48C8:				; CODE XREF: sub_67DE44A0+23Fj
		mov	eax, off_67E19010
		mov	[esp+7Ch+var_78], offset aOrg_freedes_27 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+7Ch+var_74], eax
		mov	eax, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_set_error_const
		add	esp, 6Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE48F2:				; CODE XREF: sub_67DE44A0+25Bj
		xor	edx, edx
		mov	ebx, edi
		jmp	loc_67DE4775
; ---------------------------------------------------------------------------

loc_67DE48FB:				; CODE XREF: sub_67DE44A0+7Ej
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFC1F0
		mov	[esp+7Ch+var_7C], edi
		mov	esi, eax
		call	sub_67DFC1F0
		mov	[esp+7Ch+var_68], esi
		mov	dword ptr [esp+7Ch+var_70], ebx	; char
		mov	[esp+7Ch+var_74], offset aArgumentDIsSpe ; "Argument %d	is specified to	be of type "...
		mov	[esp+7Ch+var_6C], eax

loc_67DE4921:				; CODE XREF: sub_67DE44A0+506j
		mov	eax, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_78], offset aOrg_freedes_28 ; "org.freedesktop.DBus.Error.InvalidArgs"
		mov	[esp+7Ch+var_7C], eax ;	int
		call	dbus_set_error
		xor	eax, eax
		jmp	loc_67DE489E
; ---------------------------------------------------------------------------

loc_67DE493F:				; CODE XREF: sub_67DE44A0+87j
		mov	eax, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_74], offset aPlatformDoesNo ; "Platform does not support file descipto"...
		mov	[esp+7Ch+var_78], offset aOrg_freedes_29 ; "org.freedesktop.DBus.Error.NotSupported"
		mov	[esp+7Ch+var_7C], eax ;	int
		call	dbus_set_error
		xor	eax, eax
		jmp	loc_67DE489E
; ---------------------------------------------------------------------------

loc_67DE4965:				; CODE XREF: sub_67DE44A0+A0j
		mov	[esp+7Ch+var_78], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	[esp+7Ch+var_7C], offset aYouCanOnlyRead ; "you	can only read arrays and basic type"...
		call	sub_67DFAD60
		xor	eax, eax
		jmp	loc_67DE489E
; ---------------------------------------------------------------------------

loc_67DE4980:				; CODE XREF: sub_67DE44A0+B7j
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFC1F0
		mov	[esp+7Ch+var_7C], edi
		mov	esi, eax
		call	sub_67DFC1F0
		mov	[esp+7Ch+var_68], esi
		mov	dword ptr [esp+7Ch+var_70], ebx
		mov	[esp+7Ch+var_74], offset aArgumentDIsS_0 ; "Argument %d	is specified to	be an array"...
		mov	[esp+7Ch+var_6C], eax
		jmp	loc_67DE4921
; ---------------------------------------------------------------------------

loc_67DE49AB:				; CODE XREF: sub_67DE44A0+185j
		mov	[esp+7Ch+var_78], offset a_dbus_messag_6 ; "_dbus_message_iter_get_args_valist"
		mov	[esp+7Ch+var_7C], offset aYouCanTReadArr ; "you	can't read arrays of container type"...
		call	sub_67DFAD60
		xor	eax, eax
		jmp	loc_67DE489E
; ---------------------------------------------------------------------------

loc_67DE49C6:				; CODE XREF: sub_67DE44A0+3F3j
		mov	eax, [esp+7Ch+arg_4]
		mov	dword ptr [esp+7Ch+var_70], ebx	; char
		mov	[esp+7Ch+var_74], offset aMessageHasOnly ; "Message has	only %d	arguments, but more"...
		mov	[esp+7Ch+var_78], offset aOrg_freedes_28 ; "org.freedesktop.DBus.Error.InvalidArgs"
		mov	[esp+7Ch+var_7C], eax ;	int
		call	dbus_set_error
		xor	eax, eax
		jmp	loc_67DE489E
sub_67DE44A0	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DE49F0	proc near		; CODE XREF: sub_67DCCE10+1Ep
					; sub_67DCD2A0+1C5p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 4Ch
		mov	[esp+4Ch+var_C], esi
		mov	esi, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_8], edi
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_8]
		lea	edi, [esi+5Ch]
		mov	[esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DFB880
		xor	edx, edx
		mov	[esp+4Ch+var_3C], offset a_dbus_messag_5 ; "_dbus_message_remove_counter"
		mov	[esp+4Ch+var_40], 12Ch
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aLinkNull_0 ; "link !=	NULL"
		test	eax, eax
		setnz	dl
		mov	[esp+4Ch+var_4C], edx
		mov	[esp+4Ch+var_20], eax
		call	sub_67DFAE70
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_4C], edi
		mov	[esp+4Ch+var_48], eax
		call	sub_67DFB8B0
		test	ebp, ebp
		mov	eax, [esp+4Ch+var_20]
		jz	short loc_67DE4AA0
		mov	[ebp+0], eax

loc_67DE4A6C:				; CODE XREF: sub_67DE49F0+B8j
		mov	eax, [esi+60h]
		mov	[esp+4Ch+var_4C], ebx
		neg	eax
		mov	[esp+4Ch+var_48], eax
		call	sub_67DEB580
		mov	esi, [esp+4Ch+var_C]
		mov	[esp+4Ch+arg_0], ebx
		mov	edi, [esp+4Ch+var_8]
		mov	ebx, [esp+4Ch+var_10]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		jmp	sub_67DEB6E0
; ---------------------------------------------------------------------------
		align 10h

loc_67DE4AA0:				; CODE XREF: sub_67DE49F0+77j
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFBED0
		jmp	short loc_67DE4A6C
sub_67DE49F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE4AB0	proc near		; CODE XREF: sub_67DD0BB0+33p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], edi
		mov	edi, [ebx+5Ch]
		test	edi, edi
		jz	short loc_67DE4B00

loc_67DE4ACE:				; CODE XREF: sub_67DE4AB0+6Ej
		lea	eax, [ebx+5Ch]
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFB700
		mov	eax, [ebx+60h]
		mov	edi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_C]
		mov	[esp+1Ch+arg_4], eax
		mov	eax, [esi+8]
		mov	esi, [esp+1Ch+var_8]
		mov	[esp+1Ch+arg_0], eax
		add	esp, 1Ch
		jmp	sub_67DEB580
; ---------------------------------------------------------------------------
		align 10h

loc_67DE4B00:				; CODE XREF: sub_67DE4AB0+1Cj
		lea	eax, [ebx+4]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E00CE0
		mov	edi, eax
		lea	eax, [ebx+44h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E00CE0
		lea	edi, [eax+edi]
		mov	[ebx+60h], edi
		jmp	short loc_67DE4ACE
sub_67DE4AB0	endp

; Exported entry 162. dbus_message_set_serial

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_set_serial
dbus_message_set_serial	proc near	; CODE XREF: sub_67DD0BB0+173p
					; dbus_connection_send_with_reply+1BCp

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

; FUNCTION CHUNK AT 67DD8D50 SIZE 00000095 BYTES

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_38 ; "dbus_message_set_serial"
		mov	[esp+2Ch+var_20], 0CEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE4BD7
		mov	[esp+2Ch+var_1C], offset aDbus_messag_38 ; "dbus_message_set_serial"
		mov	[esp+2Ch+var_20], 0CFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 1
		jnz	short loc_67DE4BA4
		add	ebx, 4
		mov	[esp+2Ch+arg_4], esi
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	loc_67DD8D50
; ---------------------------------------------------------------------------

loc_67DE4BA4:				; CODE XREF: dbus_message_set_serial+6Dj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0CFh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageLocked	; "!message->locked"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_38 ; "dbus_message_set_serial"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE4BD7:				; CODE XREF: dbus_message_set_serial+3Bj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0CEh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_38 ; "dbus_message_set_serial"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_message_set_serial	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 116. dbus_message_get_signature

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_signature
dbus_message_get_signature proc	near	; CODE XREF: sub_67DCD2A0+E7p
					; sub_67DCD730+98p ...

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_messag_39 ; "dbus_message_get_signature"
		mov	[esp+3Ch+var_30], 0D4Ch
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE4CB1
		lea	eax, [esp+3Ch+var_14]
		add	ebx, 4
		mov	[esp+3Ch+var_30], eax
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_34], eax
		mov	dword ptr [esp+3Ch+var_38], 8
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD9400
		test	eax, eax
		jnz	short loc_67DE4CA0
		mov	[esp+3Ch+var_10], offset off_67E246AC
		mov	edx, offset off_67E246AC
		xor	eax, eax
		mov	[esp+3Ch+var_14], 0

loc_67DE4C86:				; CODE XREF: dbus_message_get_signature+9Fj
		mov	[esp+3Ch+var_34], 0
		mov	dword ptr [esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], edx
		call	sub_67E01280

loc_67DE4C9A:				; CODE XREF: dbus_message_get_signature+D0j
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE4CA0:				; CODE XREF: dbus_message_get_signature+5Dj
		mov	eax, [esp+3Ch+var_14]
		mov	edx, [esp+3Ch+var_10]
		add	eax, 1
		mov	[esp+3Ch+var_14], eax
		jmp	short loc_67DE4C86
; ---------------------------------------------------------------------------

loc_67DE4CB1:				; CODE XREF: dbus_message_get_signature+36j
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_2C], 0D4Ch
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_messag_39 ; "dbus_message_get_signature"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DE4C9A
dbus_message_get_signature endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 123. dbus_message_has_signature

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_has_signature(int, char *)
		public dbus_message_has_signature
dbus_message_has_signature proc	near

Str1		= dword	ptr -2Ch
Str2		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_40 ; "dbus_message_has_signature"
		mov	[esp+2Ch+var_20], 0E1Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Str2],	offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+Str1],	1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE4D87
		mov	[esp+2Ch+var_1C], offset aDbus_messag_40 ; "dbus_message_has_signature"
		mov	[esp+2Ch+var_20], 0E20h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Str2],	offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+Str1],	1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE4DC0
		mov	[esp+2Ch+Str1],	esi
		call	dbus_message_get_signature
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DE4D81
		mov	[esp+2Ch+Str2],	ebx ; Str2
		mov	[esp+2Ch+Str1],	edx ; Str1
		call	strcmp
		test	eax, eax
		setz	al
		movzx	eax, al

loc_67DE4D81:				; CODE XREF: dbus_message_has_signature+7Bj
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE4D87:				; CODE XREF: dbus_message_has_signature+3Bj
		mov	[esp+2Ch+var_1C], 0E1Fh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"

loc_67DE4D9F:				; CODE XREF: dbus_message_has_signature+E8j
		mov	eax, off_67E19014
		mov	[esp+2Ch+Str2],	offset aDbus_messag_40 ; "dbus_message_has_signature"
		mov	[esp+2Ch+Str1],	eax ; char *
		call	sub_67DFB4E0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE4DC0:				; CODE XREF: dbus_message_has_signature+6Bj
		mov	[esp+2Ch+var_1C], 0E20h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aSignatureNull	; "signature !=	NULL"
		jmp	short loc_67DE4D9F
dbus_message_has_signature endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 143. dbus_message_lock

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_lock
dbus_message_lock proc near		; CODE XREF: sub_67DD0BB0+1B6p
					; dbus_message_marshal+193p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		test	byte ptr [ebx+59h], 1
		jz	short loc_67DE4E01
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE4E01:				; CODE XREF: dbus_message_lock+13j
		lea	esi, [ebx+44h]
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		mov	[esp+2Ch+var_28], eax
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD8790
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		test	eax, eax
		jnz	short loc_67DE4E64

loc_67DE4E27:				; CODE XREF: dbus_message_lock+90j
		mov	edx, 1

loc_67DE4E2C:				; CODE XREF: dbus_message_lock+92j
		mov	[esp+2Ch+var_1C], offset aDbus_message_l ; "dbus_message_lock"
		mov	[esp+2Ch+var_20], 152h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_string_0 ; "_dbus_string_get_length (&message->body"...
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		or	byte ptr [ebx+59h], 1
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE4E64:				; CODE XREF: dbus_message_lock+45j
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_get_signature
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DE4E27
		jmp	short loc_67DE4E2C
dbus_message_lock endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 144. dbus_message_marshal

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_marshal
dbus_message_marshal proc near

var_6C		= dword	ptr -6Ch
var_68		= byte ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_40		= dword	ptr -40h
var_30		= byte ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 6Ch
		mov	[esp+6Ch+var_10], ebx
		mov	ebx, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_8], edi
		mov	edi, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_4], ebp
		mov	ebp, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_C], esi
		mov	[esp+6Ch+var_5C], offset aDbus_message_m ; "dbus_message_marshal"
		mov	[esp+6Ch+var_60], 11C5h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE5020
		mov	[esp+6Ch+var_5C], offset aDbus_message_m ; "dbus_message_marshal"
		mov	[esp+6Ch+var_60], 11C6h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		test	ebp, ebp
		jz	loc_67DE5054
		mov	[esp+6Ch+var_5C], offset aDbus_message_m ; "dbus_message_marshal"
		mov	[esp+6Ch+var_60], 11C7h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DE5070
		lea	esi, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_6C], esi
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DE4FC2
		movzx	eax, byte ptr [ebx+59h]
		mov	edx, eax
		and	edx, 1
		mov	[esp+6Ch+var_40], edx
		jz	loc_67DE5010

loc_67DE4F5E:				; CODE XREF: dbus_message_marshal+198j
		lea	eax, [ebx+4]
		mov	[esp+6Ch+var_60], 0
		mov	[esp+6Ch+var_64], esi
		mov	dword ptr [esp+6Ch+var_68], 0
		mov	[esp+6Ch+var_6C], eax
		call	sub_67E036F0
		test	eax, eax
		jz	short loc_67DE4FAA
		mov	[esp+6Ch+var_6C], esi
		call	sub_67E00CE0
		mov	[edi], eax
		mov	[esp+6Ch+var_60], eax
		lea	eax, [ebx+44h]
		mov	[esp+6Ch+var_64], esi
		mov	dword ptr [esp+6Ch+var_68], 0
		mov	[esp+6Ch+var_6C], eax
		call	sub_67E036F0
		test	eax, eax
		jnz	short loc_67DE4FD8

loc_67DE4FAA:				; CODE XREF: dbus_message_marshal+FFj
					; dbus_message_marshal+170j
		mov	[esp+6Ch+var_6C], esi
		call	sub_67E02BF0
		mov	ebp, [esp+6Ch+var_40]
		test	ebp, ebp
		jnz	short loc_67DE4FC2
		and	byte ptr [ebx+59h], 0FEh
		xor	eax, eax
		jmp	short loc_67DE4FC4
; ---------------------------------------------------------------------------

loc_67DE4FC2:				; CODE XREF: dbus_message_marshal+C9j
					; dbus_message_marshal+138j
		xor	eax, eax

loc_67DE4FC4:				; CODE XREF: dbus_message_marshal+140j
					; dbus_message_marshal+185j ...
		mov	ebx, [esp+6Ch+var_10]
		mov	esi, [esp+6Ch+var_C]
		mov	edi, [esp+6Ch+var_8]
		mov	ebp, [esp+6Ch+var_4]
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE4FD8:				; CODE XREF: dbus_message_marshal+128j
		mov	[esp+6Ch+var_6C], esi
		call	sub_67E00CE0
		mov	[edi], eax
		mov	dword ptr [esp+6Ch+var_68], ebp
		mov	[esp+6Ch+var_6C], esi
		call	sub_67E05F70
		test	eax, eax
		jz	short loc_67DE4FAA
		mov	[esp+6Ch+var_6C], esi
		call	sub_67E02BF0
		mov	edx, [esp+6Ch+var_40]
		mov	eax, 1
		test	edx, edx
		jnz	short loc_67DE4FC4
		and	byte ptr [ebx+59h], 0FEh
		jmp	short loc_67DE4FC4
; ---------------------------------------------------------------------------
		align 10h

loc_67DE5010:				; CODE XREF: dbus_message_marshal+D8j
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_message_lock
		jmp	loc_67DE4F5E
; ---------------------------------------------------------------------------
		align 10h

loc_67DE5020:				; CODE XREF: dbus_message_marshal+4Dj
		mov	[esp+6Ch+var_5C], 11C5h
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset aMsgNull ; "msg != NULL"

loc_67DE5038:				; CODE XREF: dbus_message_marshal+1ECj
					; dbus_message_marshal+208j
		mov	eax, off_67E19014
		mov	dword ptr [esp+6Ch+var_68], offset aDbus_message_m ; "dbus_message_marshal"
		mov	[esp+6Ch+var_6C], eax ;	char *
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	loc_67DE4FC4
; ---------------------------------------------------------------------------

loc_67DE5054:				; CODE XREF: dbus_message_marshal+81j
		mov	[esp+6Ch+var_5C], 11C6h
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset aMarshalled_dat ; "marshalled_data_p != NULL"
		jmp	short loc_67DE5038
; ---------------------------------------------------------------------------
		align 10h

loc_67DE5070:				; CODE XREF: dbus_message_marshal+B5j
		mov	[esp+6Ch+var_5C], 11C7h
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset aLen_pNull ; "len_p !=	NULL"
		jmp	short loc_67DE5038
dbus_message_marshal endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 138. dbus_message_iter_init

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_init
dbus_message_iter_init proc near	; CODE XREF: dbus_message_get_args_valist+92p

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset aDbus_messag_41 ; "dbus_message_iter_init"
		mov	[esp+3Ch+var_30], 78Bh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE51A0
		mov	[esp+3Ch+var_2C], offset aDbus_messag_41 ; "dbus_message_iter_init"
		mov	[esp+3Ch+var_30], 78Ch
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE51D5
		lea	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_30], eax
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_34], eax
		lea	eax, [ebx+4]
		mov	dword ptr [esp+3Ch+var_38], 8
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DD9400
		test	eax, eax
		jnz	short loc_67DE5192
		mov	[esp+3Ch+var_10], offset off_67E246AC
		mov	[esp+3Ch+var_14], 0

loc_67DE513C:				; CODE XREF: dbus_message_iter_init+107j
		mov	edx, esi
		mov	ecx, 3
		mov	eax, ebx
		add	esi, 8
		call	sub_67DE2390
		lea	eax, [ebx+44h]
		mov	[esp+3Ch+var_2C], eax
		mov	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_28], 0
		mov	[esp+3Ch+var_30], eax
		mov	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_34], eax
		movsx	eax, byte ptr [ebx+58h]
		mov	[esp+3Ch+var_3C], esi
		mov	dword ptr [esp+3Ch+var_38], eax
		call	sub_67DDAF50
		mov	[esp+3Ch+var_3C], esi
		call	sub_67DDB560
		test	eax, eax
		setnz	al
		add	esp, 34h
		movzx	eax, al
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE5192:				; CODE XREF: dbus_message_iter_init+9Aj
		add	[esp+3Ch+var_14], 1
		jmp	short loc_67DE513C
; ---------------------------------------------------------------------------
		align 10h

loc_67DE51A0:				; CODE XREF: dbus_message_iter_init+3Bj
		mov	[esp+3Ch+var_2C], 78Bh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"

loc_67DE51B8:				; CODE XREF: dbus_message_iter_init+15Dj
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_messag_41 ; "dbus_message_iter_init"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 34h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE51D5:				; CODE XREF: dbus_message_iter_init+6Fj
		mov	[esp+3Ch+var_2C], 78Ch
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aIterNull ; "iter != NULL"
		jmp	short loc_67DE51B8
dbus_message_iter_init endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 103. dbus_message_get_args_valist

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_args_valist
dbus_message_get_args_valist proc near	; CODE XREF: dbus_message_get_args+94p

var_6C		= dword	ptr -6Ch
var_68		= byte ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_44		= byte ptr -44h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 6Ch
		mov	[esp+6Ch+var_8], esi
		mov	esi, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_C], ebx
		mov	ebx, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_4], edi
		mov	[esp+6Ch+var_5C], offset aDbus_messag_42 ; "dbus_message_get_args_valist"
		mov	[esp+6Ch+var_60], 754h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE52F2
		mov	[esp+6Ch+var_5C], offset aDbus_messag_42 ; "dbus_message_get_args_valist"
		mov	[esp+6Ch+var_60], 755h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE5277
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	short loc_67DE52B3

loc_67DE5277:				; CODE XREF: dbus_message_get_args_valist+79j
		lea	edi, [esp+6Ch+var_44]
		mov	dword ptr [esp+6Ch+var_68], edi
		mov	[esp+6Ch+var_6C], esi
		call	dbus_message_iter_init
		mov	eax, [esp+6Ch+arg_C]
		mov	dword ptr [esp+6Ch+var_68], ebx
		mov	[esp+6Ch+var_6C], edi
		mov	[esp+6Ch+var_60], eax
		mov	eax, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_64], eax
		call	sub_67DE44A0
		mov	ebx, [esp+6Ch+var_C]
		mov	esi, [esp+6Ch+var_8]
		mov	edi, [esp+6Ch+var_4]
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE52B3:				; CODE XREF: dbus_message_get_args_valist+85j
		mov	[esp+6Ch+var_5C], 755h
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset aErrorNullDbu_6 ; "(error) == NULL || !dbus_error_is_set ("...

loc_67DE52CB:				; CODE XREF: dbus_message_get_args_valist+11Aj
		mov	eax, off_67E19014
		mov	dword ptr [esp+6Ch+var_68], offset aDbus_messag_42 ; "dbus_message_get_args_valist"
		mov	[esp+6Ch+var_6C], eax ;	char *
		call	sub_67DFB4E0
		xor	eax, eax
		mov	ebx, [esp+6Ch+var_C]
		mov	esi, [esp+6Ch+var_8]
		mov	edi, [esp+6Ch+var_4]
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE52F2:				; CODE XREF: dbus_message_get_args_valist+45j
		mov	[esp+6Ch+var_5C], 754h
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset aMessageNull_0	; "message != NULL"
		jmp	short loc_67DE52CB
dbus_message_get_args_valist endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 102. dbus_message_get_args

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_get_args
dbus_message_get_args proc near		; CODE XREF: dbus_bus_start_service_by_name+207p
					; dbus_bus_name_has_owner+199p	...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_43 ; "dbus_message_get_args"
		mov	[esp+2Ch+var_20], 738h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE53E5
		mov	[esp+2Ch+var_1C], offset aDbus_messag_43 ; "dbus_message_get_args"
		mov	[esp+2Ch+var_20], 739h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE538D
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	short loc_67DE53B0

loc_67DE538D:				; CODE XREF: dbus_message_get_args+6Fj
		lea	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_20], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	dword ptr [esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_24], eax
		call	dbus_message_get_args_valist
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE53B0:				; CODE XREF: dbus_message_get_args+7Bj
		mov	[esp+2Ch+var_1C], 739h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aErrorNullDbu_6 ; "(error) == NULL || !dbus_error_is_set ("...

loc_67DE53C8:				; CODE XREF: dbus_message_get_args+EDj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_43 ; "dbus_message_get_args"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE53E5:				; CODE XREF: dbus_message_get_args+3Bj
		mov	[esp+2Ch+var_1C], 738h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		jmp	short loc_67DE53C8
dbus_message_get_args endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 197. dbus_set_error_from_message

; =============== S U B	R O U T	I N E =======================================


		public dbus_set_error_from_message
dbus_set_error_from_message proc near	; CODE XREF: dbus_bus_start_service_by_name+122p
					; dbus_bus_release_name+181p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= byte ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= byte ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_C], esi
		mov	esi, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_8], edi
		mov	[esp+4Ch+var_4], ebp
		mov	[esp+4Ch+var_3C], offset aDbus_set_err_1 ; "dbus_set_error_from_message"
		mov	dword ptr [esp+4Ch+var_40], 0E49h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE5548
		mov	[esp+4Ch+var_3C], offset aDbus_set_err_1 ; "dbus_set_error_from_message"
		mov	dword ptr [esp+4Ch+var_40], 0E4Ah
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE548B
		mov	[esp+4Ch+var_4C], esi
		call	dbus_error_is_set
		test	eax, eax
		jnz	short loc_67DE54B0

loc_67DE548B:				; CODE XREF: dbus_set_error_from_message+7Dj
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_message_get_type
		mov	edx, eax
		xor	eax, eax
		cmp	edx, 3
		jz	short loc_67DE54E1

loc_67DE549C:				; CODE XREF: dbus_set_error_from_message+DFj
					; dbus_set_error_from_message+143j
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE54B0:				; CODE XREF: dbus_set_error_from_message+89j
		mov	[esp+4Ch+var_3C], 0E4Ah
		mov	dword ptr [esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aErrorNullDbu_6 ; "(error) == NULL || !dbus_error_is_set ("...

loc_67DE54C8:				; CODE XREF: dbus_set_error_from_message+160j
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_48], offset aDbus_set_err_1 ; "dbus_set_error_from_message"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DE549C
; ---------------------------------------------------------------------------

loc_67DE54E1:				; CODE XREF: dbus_set_error_from_message+9Aj
		lea	eax, [esp+4Ch+var_20]
		mov	dword ptr [esp+4Ch+var_20], 0
		mov	[esp+4Ch+var_3C], 0
		mov	dword ptr [esp+4Ch+var_40], eax
		mov	[esp+4Ch+var_44], 73h
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_message_get_args
		mov	ebp, dword ptr [esp+4Ch+var_20]
		mov	[esp+4Ch+var_4C], ebx
		cmp	ebp, 1
		sbb	edi, edi
		call	dbus_message_get_error_name
		not	edi
		and	edi, offset aS_1 ; "%s"
		mov	dword ptr [esp+4Ch+var_40], ebp	; char
		mov	[esp+4Ch+var_44], edi ;	char *
		mov	[esp+4Ch+var_4C], esi ;	int
		mov	[esp+4Ch+var_48], eax ;	char *
		call	dbus_set_error
		mov	eax, 1
		jmp	loc_67DE549C
; ---------------------------------------------------------------------------

loc_67DE5548:				; CODE XREF: dbus_set_error_from_message+49j
		mov	[esp+4Ch+var_3C], 0E49h
		mov	dword ptr [esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aMessageNull_0	; "message != NULL"
		jmp	loc_67DE54C8
dbus_set_error_from_message endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE5570	proc near		; CODE XREF: dbus_message_demarshal+15Dp
					; sub_67DF48E0+193p

var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
Format		= dword	ptr -90h
var_8C		= byte ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= byte ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 8Ch
		mov	edi, [esp+9Ch+arg_0]
		test	byte ptr [edi+28h], 1
		jnz	loc_67DE5CF5
		lea	ecx, [edi+18h]
		lea	ebx, [edi+4]
		mov	[esp+9Ch+var_50], ecx
		mov	[esp+9Ch+var_58], edi

loc_67DE5599:				; CODE XREF: sub_67DE5570+77Fj
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67E00CE0
		cmp	eax, 0Fh
		jle	loc_67DE5CF5
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67E00CE0
		lea	ecx, [esp+9Ch+var_28]
		mov	[esp+9Ch+Format], ecx
		mov	ecx, [esp+9Ch+var_58]
		lea	edx, [esp+9Ch+var_2C]
		mov	dword ptr [esp+9Ch+var_8C], edx
		lea	edx, [esp+9Ch+var_20]
		mov	[esp+9Ch+var_80], 0
		mov	[esp+9Ch+var_84], ebx
		mov	[esp+9Ch+var_98], edx
		mov	[esp+9Ch+var_7C], eax
		lea	eax, [esp+9Ch+var_30]
		mov	[esp+9Ch+var_88], eax
		lea	eax, [esp+9Ch+var_24]
		mov	[esp+9Ch+var_94], eax
		mov	eax, [ecx+1Ch]
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DD8850
		test	eax, eax
		jz	loc_67DE5D00
		xor	eax, eax
		cmp	dword ptr [esp+9Ch+var_20], 0
		mov	dword ptr [esp+9Ch+var_8C], offset a_dbus_messa_14 ; "_dbus_message_loader_queue_messages"
		mov	[esp+9Ch+Format], 104Fh
		setz	al
		mov	[esp+9Ch+var_9C], eax
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aValidityDbus_v ; "validity ==	DBUS_VALID"
		call	sub_67DFAE70
		call	sub_67DE0E70
		test	eax, eax
		mov	esi, eax
		jz	loc_67DE5D50
		mov	edx, [esp+9Ch+var_28]
		lea	ebp, [esi+4]
		mov	ecx, [esp+9Ch+var_24]
		mov	eax, [esp+9Ch+var_30]
		mov	edi, [esp+9Ch+var_2C]
		mov	[esp+9Ch+var_64], edx
		mov	[esp+9Ch+var_5C], ecx
		mov	[esp+9Ch+var_60], eax
		mov	[esp+9Ch+var_40], 0
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67E00CE0
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 0F87h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset a_dbus_string_1 ; "_dbus_string_get_length (&message->head"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	eax, [esp+9Ch+var_60]
		mov	[esp+9Ch+var_9C], ebx
		add	eax, edi
		mov	[esp+9Ch+var_54], eax
		call	sub_67E00CE0
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 0F88h
		cmp	[esp+9Ch+var_54], eax
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aHeader_lenBody ; "(header_len	+ body_len) <= _dbus_string"...
		setle	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67E00CE0
		mov	ecx, [esp+9Ch+var_60]
		mov	edx, [esp+9Ch+var_64]
		mov	[esp+9Ch+var_7C], 0 ; int
		mov	[esp+9Ch+var_80], ebx ;	int
		mov	[esp+9Ch+var_84], ecx ;	int
		mov	[esp+9Ch+var_88], edi ;	size_t
		mov	[esp+9Ch+var_78], eax ;	int
		mov	eax, [esp+9Ch+var_5C]
		mov	dword ptr [esp+9Ch+var_8C], edx	; int
		mov	[esp+9Ch+var_98], 1 ; int
		mov	[esp+9Ch+var_9C], ebp ;	int
		mov	[esp+9Ch+Format], eax ;	int
		lea	eax, [esp+9Ch+var_34]
		mov	[esp+9Ch+var_94], eax ;	int
		call	sub_67DD94B0
		test	eax, eax
		jnz	loc_67DE5824
		mov	eax, dword ptr [esp+9Ch+var_34]
		mov	edi, [esp+9Ch+var_58]
		mov	[esp+9Ch+Format], offset aFailedToLoadHe ; "Failed to load header for new message c"...
		mov	[esp+9Ch+var_94], offset aLoad_message ; "load_message"
		mov	dword ptr [esp+9Ch+var_8C], eax	; char
		mov	[esp+9Ch+var_98], 0F94h	; int
		mov	[esp+9Ch+var_9C], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		cmp	dword ptr [esp+9Ch+var_34], 0
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 0F98h
		setnz	al
		mov	[esp+9Ch+var_9C], eax
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aValidityDbus_0 ; "validity !=	DBUS_VALID"
		call	sub_67DFAE70
		mov	eax, dword ptr [esp+9Ch+var_34]
		cmp	eax, 0FFFFFFFCh
		jz	loc_67DE59C0
		or	byte ptr [edi+28h], 1
		mov	[edi+24h], eax

loc_67DE57AF:				; CODE XREF: sub_67DE5570+398j
					; sub_67DE5570+3FBj
		mov	eax, [esp+9Ch+var_50]
		mov	[esp+9Ch+var_98], esi
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFC110
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 1026h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aLoaderCorrupte ; "loader->corrupted"
		movzx	eax, byte ptr [edi+28h]
		and	eax, 1
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70

loc_67DE57EE:				; CODE XREF: sub_67DE5570+492j
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67E00CE0
		mov	[esp+9Ch+var_98], 0
		mov	[esp+9Ch+var_9C], ebx
		mov	[esp+9Ch+var_94], eax
		call	sub_67DFD600
		mov	[esp+9Ch+var_9C], esi
		call	dbus_message_unref
		movzx	eax, byte ptr [edi+28h]
		and	eax, 1

loc_67DE5819:				; CODE XREF: sub_67DE5570+78Aj
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE5824:				; CODE XREF: sub_67DE5570+1C3j
		xor	eax, eax
		cmp	dword ptr [esp+9Ch+var_34], 0
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 0FA4h
		setz	al
		mov	[esp+9Ch+var_9C], eax
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aValidityDbus_v ; "validity ==	DBUS_VALID"
		call	sub_67DFAE70
		movzx	edx, byte ptr [esp+9Ch+var_5C]
		lea	eax, [esp+9Ch+var_3C]
		mov	[esi+58h], dl
		mov	[esp+9Ch+Format], eax
		lea	eax, [esp+9Ch+var_38]
		mov	[esp+9Ch+var_94], eax
		mov	[esp+9Ch+var_98], 8
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67DD9400
		test	eax, eax
		jnz	loc_67DE5970
		mov	[esp+9Ch+var_38], offset off_67E246AC
		mov	edx, offset off_67E246AC
		xor	eax, eax
		mov	[esp+9Ch+var_3C], 0

loc_67DE589D:				; CODE XREF: sub_67DE5570+40Fj
		mov	ecx, [esp+9Ch+var_60]
		mov	[esp+9Ch+var_88], edi
		mov	dword ptr [esp+9Ch+var_8C], ebx	; char
		mov	[esp+9Ch+Format], 0
		mov	[esp+9Ch+var_84], ecx
		mov	ecx, [esp+9Ch+var_5C]
		mov	[esp+9Ch+var_98], eax
		mov	[esp+9Ch+var_9C], edx
		mov	[esp+9Ch+var_94], ecx
		call	sub_67DE01C0
		test	eax, eax
		mov	dword ptr [esp+9Ch+var_34], eax
		jz	short loc_67DE5910
		mov	edi, [esp+9Ch+var_58]
		mov	dword ptr [esp+9Ch+var_8C], eax	; char
		mov	[esp+9Ch+Format], offset aFailedToValida ; "Failed to validate message body code %d"...
		mov	[esp+9Ch+var_94], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+var_98], 0FB9h	; int
		mov	[esp+9Ch+var_9C], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		or	byte ptr [edi+28h], 1
		mov	eax, dword ptr [esp+9Ch+var_34]
		mov	[edi+24h], eax
		jmp	loc_67DE57AF
; ---------------------------------------------------------------------------
		align 10h

loc_67DE5910:				; CODE XREF: sub_67DE5570+35Fj
		lea	eax, [esp+9Ch+var_40]
		mov	[esp+9Ch+Format], eax
		mov	[esp+9Ch+var_94], 75h
		mov	[esp+9Ch+var_98], 9
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67DD9250
		mov	ecx, [esp+9Ch+var_40]
		test	ecx, ecx
		jz	short loc_67DE5984
		mov	edi, [esp+9Ch+var_58]
		mov	[esp+9Ch+Format], offset aHmmMessageClai ; "Hmm, message claims	to come	with file d"...
		mov	[esp+9Ch+var_94], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+var_98], 0FEEh	; int
		mov	[esp+9Ch+var_9C], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		or	byte ptr [edi+28h], 1
		mov	dword ptr [edi+24h], 38h
		jmp	loc_67DE57AF
; ---------------------------------------------------------------------------

loc_67DE5970:				; CODE XREF: sub_67DE5570+310j
		mov	eax, [esp+9Ch+var_3C]
		mov	edx, [esp+9Ch+var_38]
		add	eax, 1
		mov	[esp+9Ch+var_3C], eax
		jmp	loc_67DE589D
; ---------------------------------------------------------------------------

loc_67DE5984:				; CODE XREF: sub_67DE5570+3C6j
		mov	eax, [esp+9Ch+var_50]
		mov	[esp+9Ch+var_98], esi
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFBB80
		test	eax, eax
		jnz	short loc_67DE5A07
		mov	edi, [esp+9Ch+var_58]
		mov	[esp+9Ch+Format], offset aFailedToAppend ; "Failed to append new message to loader "...
		mov	[esp+9Ch+var_94], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+var_98], 0FFBh	; int
		mov	[esp+9Ch+var_9C], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DE59C0:				; CODE XREF: sub_67DE5570+232j
					; sub_67DE5570+560j
		mov	edx, [esp+9Ch+var_50]
		mov	[esp+9Ch+var_98], esi
		mov	[esp+9Ch+var_9C], edx
		call	sub_67DFC110
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 1024h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aLoaderCorrup_0 ; "!loader->corrupted"
		movzx	eax, byte ptr [edi+28h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		jmp	loc_67DE57EE
; ---------------------------------------------------------------------------

loc_67DE5A07:				; CODE XREF: sub_67DE5570+426j
		lea	edx, [esi+44h]
		mov	[esp+9Ch+var_5C], edx
		mov	[esp+9Ch+var_9C], edx
		call	sub_67E00CE0
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 1000h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset a_dbus_string_2 ; "_dbus_string_get_length (&message->body"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67E00CE0
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 1002h
		cmp	[esp+9Ch+var_54], eax
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset a_dbus_string_3 ; "_dbus_string_get_length (&loader->data)"...
		setle	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	ecx, [esp+9Ch+var_5C]
		mov	eax, [esp+9Ch+var_60]
		mov	dword ptr [esp+9Ch+var_8C], 0 ;	char
		mov	[esp+9Ch+var_98], edi ;	int
		mov	[esp+9Ch+Format], ecx ;	int
		mov	[esp+9Ch+var_94], eax ;	size_t
		mov	[esp+9Ch+var_9C], ebx ;	int
		call	sub_67E05A20
		test	eax, eax
		jnz	short loc_67DE5AD5
		mov	edi, [esp+9Ch+var_58]
		mov	[esp+9Ch+Format], offset aFailedToMoveBo ; "Failed to move body	into new message\n"
		mov	[esp+9Ch+var_94], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+var_98], 1006h	; int
		mov	[esp+9Ch+var_9C], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DE59C0
; ---------------------------------------------------------------------------

loc_67DE5AD5:				; CODE XREF: sub_67DE5570+536j
		mov	edx, [esp+9Ch+var_54]
		mov	[esp+9Ch+var_98], 0
		mov	[esp+9Ch+var_9C], ebx
		mov	[esp+9Ch+var_94], edx
		call	sub_67E02D80
		mov	[esp+9Ch+var_98], 800h
		mov	[esp+9Ch+var_9C], ebx
		call	sub_67E06470
		mov	[esp+9Ch+var_9C], ebp
		call	sub_67E00CE0
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 1010h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset a_dbus_string_4 ; "_dbus_string_get_length (&message->head"...
		cmp	edi, eax
		setz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	ecx, [esp+9Ch+var_5C]
		mov	[esp+9Ch+var_9C], ecx
		call	sub_67E00CE0
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 1011h
		cmp	[esp+9Ch+var_60], eax
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset a_dbus_string_5 ; "_dbus_string_get_length (&message->body"...
		setz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+9Ch+var_8C], esi	; char
		mov	[esp+9Ch+Format], offset aLoadedMessageP ; "Loaded message %p\n"
		mov	[esp+9Ch+var_94], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+var_98], 1013h	; int
		mov	[esp+9Ch+var_9C], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 1015h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aOom ;	"!oom"
		mov	[esp+9Ch+var_9C], 1
		call	sub_67DFAE70
		mov	edx, [esp+9Ch+var_58]
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 1016h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aLoaderCorrup_0 ; "!loader->corrupted"
		movzx	eax, byte ptr [edx+28h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	ecx, [esp+9Ch+var_58]
		xor	eax, eax
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 1017h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aLoaderMessages ; "loader->messages !=	NULL"
		cmp	dword ptr [ecx+18h], 0
		setnz	al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	eax, [esp+9Ch+var_50]
		mov	[esp+9Ch+var_98], esi
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFB880
		mov	dword ptr [esp+9Ch+var_8C], offset aLoad_message ; "load_message"
		mov	[esp+9Ch+Format], 1018h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset a_dbus_list_fin ; "_dbus_list_find_last (&loader->messages"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	edx, [esp+9Ch+var_58]
		xor	eax, eax
		mov	dword ptr [esp+9Ch+var_8C], offset a_dbus_messa_14 ; "_dbus_message_loader_queue_messages"
		mov	[esp+9Ch+Format], 1060h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset aLoaderMessages ; "loader->messages !=	NULL"
		cmp	dword ptr [edx+18h], 0
		setnz	al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	ecx, [esp+9Ch+var_50]
		mov	[esp+9Ch+var_98], esi
		mov	[esp+9Ch+var_9C], ecx
		call	sub_67DFB880
		mov	dword ptr [esp+9Ch+var_8C], offset a_dbus_messa_14 ; "_dbus_message_loader_queue_messages"
		mov	[esp+9Ch+Format], 1061h
		mov	[esp+9Ch+var_94], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+9Ch+var_98], offset a_dbus_list_fin ; "_dbus_list_find_last (&loader->messages"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+9Ch+var_9C], eax
		call	sub_67DFAE70
		mov	eax, [esp+9Ch+var_58]
		test	byte ptr [eax+28h], 1
		jz	loc_67DE5599

loc_67DE5CF5:				; CODE XREF: sub_67DE5570+15j
					; sub_67DE5570+34j ...
		mov	eax, 1
		jmp	loc_67DE5819
; ---------------------------------------------------------------------------
		align 10h

loc_67DE5D00:				; CODE XREF: sub_67DE5570+8Bj
		mov	eax, dword ptr [esp+9Ch+var_20]
		mov	edi, [esp+9Ch+var_58]
		mov	[esp+9Ch+Format], offset aInitialPeekAtH ; "Initial peek at header says	we don't ha"...
		mov	[esp+9Ch+var_94], offset a_dbus_messa_14 ; "_dbus_message_loader_queue_messages"
		mov	dword ptr [esp+9Ch+var_8C], eax	; char
		mov	[esp+9Ch+var_98], 1066h	; int
		mov	[esp+9Ch+var_9C], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, dword ptr [esp+9Ch+var_20]
		test	eax, eax
		jz	short loc_67DE5CF5
		or	byte ptr [edi+28h], 1
		mov	[edi+24h], eax
		add	esp, 8Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE5D50:				; CODE XREF: sub_67DE5570+CCj
		add	esp, 8Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DE5570	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 130. dbus_message_iter_close_container

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_close_container
dbus_message_iter_close_container proc near
					; CODE XREF: dbus_message_append_args_valist+115p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_44 ; "dbus_message_iter_close_container"
		mov	[esp+2Ch+var_20], 0ADFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE5E2C
		mov	eax, [ebx]
		test	byte ptr [eax+59h], 1
		jnz	short loc_67DE5E20
		mov	[esp+2Ch+var_1C], offset aDbus_messag_44 ; "dbus_message_iter_close_container"
		mov	[esp+2Ch+var_20], 0AE0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 0E0h
		jz	short loc_67DE5E46
		mov	[esp+2Ch+var_1C], 0AE0h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aRealIter_typ_0 ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...

loc_67DE5DFF:				; CODE XREF: dbus_message_iter_close_container+E4j
					; dbus_message_iter_close_container+174j ...
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_44 ; "dbus_message_iter_close_container"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DE5E16:				; CODE XREF: dbus_message_iter_close_container+1D4j
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE5E20:				; CODE XREF: dbus_message_iter_close_container+4Ej
		mov	[esp+2Ch+var_2C], offset aDbusAppendIter ; "dbus append	iterator can't be used: mes"...
		call	sub_67DFB4E0

loc_67DE5E2C:				; CODE XREF: dbus_message_iter_close_container+42j
		mov	[esp+2Ch+var_1C], 0ADFh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_7 ; "_dbus_message_iter_append_check (real)"
		jmp	short loc_67DE5DFF
; ---------------------------------------------------------------------------

loc_67DE5E46:				; CODE XREF: dbus_message_iter_close_container+85j
		mov	[esp+2Ch+var_1C], offset aDbus_messag_44 ; "dbus_message_iter_close_container"
		mov	[esp+2Ch+var_20], 0AE1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, esi
		call	sub_67DE0750
		test	eax, eax
		jz	short loc_67DE5EEC
		mov	eax, [esi]
		test	byte ptr [eax+59h], 1
		jnz	short loc_67DE5EE0
		mov	[esp+2Ch+var_1C], offset aDbus_messag_44 ; "dbus_message_iter_close_container"
		mov	[esp+2Ch+var_20], 0AE2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [esi+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 0E0h
		jz	short loc_67DE5F10
		mov	[esp+2Ch+var_1C], 0AE2h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aReal_subIter_t ; "real_sub->iter_type	== DBUS_MESSAGE_ITE"...
		jmp	loc_67DE5DFF
; ---------------------------------------------------------------------------
		align 10h

loc_67DE5EE0:				; CODE XREF: dbus_message_iter_close_container+123j
		mov	[esp+2Ch+var_2C], offset aDbusAppendIter ; "dbus append	iterator can't be used: mes"...
		call	sub_67DFB4E0

loc_67DE5EEC:				; CODE XREF: dbus_message_iter_close_container+11Bj
		mov	[esp+2Ch+var_1C], 0AE1h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_8 ; "_dbus_message_iter_append_check (real_s"...
		jmp	loc_67DE5DFF
; ---------------------------------------------------------------------------
		align 10h

loc_67DE5F10:				; CODE XREF: dbus_message_iter_close_container+15Aj
		add	esi, 8
		lea	eax, [ebx+8]
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DDC490
		mov	esi, eax
		mov	eax, ebx
		call	sub_67DE20A0
		cmp	eax, 1
		sbb	eax, eax
		not	eax
		and	esi, eax
		jmp	loc_67DE5E16
dbus_message_iter_close_container endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 141. dbus_message_iter_open_container

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_iter_open_container(int, int, char *, int)
		public dbus_message_iter_open_container
dbus_message_iter_open_container proc near ; CODE XREF:	dbus_message_append_args_valist+B9p

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_3E		= byte ptr -3Eh
var_3D		= byte ptr -3Dh
var_30		= dword	ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 6Ch
		mov	[esp+6Ch+var_10], ebx
		mov	ebx, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_C], esi
		mov	esi, [esp+6Ch+arg_C]
		mov	[esp+6Ch+var_8], edi
		mov	edi, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_4], ebp
		mov	ebp, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_5C], offset aDbus_messag_45 ; "dbus_message_iter_open_container"
		mov	[esp+6Ch+var_60], 0A9Ch
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE602C
		mov	eax, [ebx]
		test	byte ptr [eax+59h], 1
		jnz	short loc_67DE6020
		mov	[esp+6Ch+var_5C], offset aDbus_messag_45 ; "dbus_message_iter_open_container"
		mov	[esp+6Ch+var_60], 0A9Dh
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 0E0h
		jz	short loc_67DE6046
		mov	[esp+6Ch+var_5C], 0A9Dh
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset aRealIter_typ_0 ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...

loc_67DE5FF5:				; CODE XREF: dbus_message_iter_open_container+104j
					; dbus_message_iter_open_container+2BEj ...
		mov	eax, off_67E19014
		mov	[esp+6Ch+var_68], offset aDbus_messag_45 ; "dbus_message_iter_open_container"
		mov	[esp+6Ch+var_6C], eax ;	char *
		call	sub_67DFB4E0
		xor	eax, eax

loc_67DE600C:				; CODE XREF: dbus_message_iter_open_container+224j
					; dbus_message_iter_open_container+2A1j ...
		mov	ebx, [esp+6Ch+var_10]
		mov	esi, [esp+6Ch+var_C]
		mov	edi, [esp+6Ch+var_8]
		mov	ebp, [esp+6Ch+var_4]
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE6020:				; CODE XREF: dbus_message_iter_open_container+64j
		mov	[esp+6Ch+var_6C], offset aDbusAppendIter ; "dbus append	iterator can't be used: mes"...
		call	sub_67DFB4E0

loc_67DE602C:				; CODE XREF: dbus_message_iter_open_container+58j
		mov	[esp+6Ch+var_5C], 0A9Ch
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset a_dbus_messag_7 ; "_dbus_message_iter_append_check (real)"
		jmp	short loc_67DE5FF5
; ---------------------------------------------------------------------------

loc_67DE6046:				; CODE XREF: dbus_message_iter_open_container+9Bj
		mov	[esp+6Ch+var_5C], offset aDbus_messag_45 ; "dbus_message_iter_open_container"
		mov	[esp+6Ch+var_60], 0A9Eh
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		mov	[esp+6Ch+var_6C], edi
		call	dbus_type_is_container
		test	eax, eax
		jz	loc_67DE61E6
		mov	[esp+6Ch+var_5C], offset aDbus_messag_45 ; "dbus_message_iter_open_container"
		mov	[esp+6Ch+var_60], 0A9Fh
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE6295
		mov	[esp+6Ch+var_5C], offset aDbus_messag_45 ; "dbus_message_iter_open_container"
		mov	[esp+6Ch+var_60], 0AA7h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		test	ebp, ebp
		setnz	[esp+6Ch+var_3E]
		jz	loc_67DE6220

loc_67DE60EF:				; CODE XREF: dbus_message_iter_open_container+2E8j
		test	ebp, ebp
		jz	loc_67DE6203
		cmp	edi, 76h
		mov	[esp+6Ch+var_3D], 0
		jz	loc_67DE6233
		cmp	edi, 61h
		jnz	loc_67DE6203
		mov	[esp+6Ch+var_5C], offset aDbus_messag_45 ; "dbus_message_iter_open_container"
		mov	[esp+6Ch+var_60], 0AB0h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70

loc_67DE613A:				; CODE XREF: dbus_message_iter_open_container+333j
		cmp	byte ptr [ebp+0], 7Bh
		jz	short loc_67DE6157

loc_67DE6140:				; CODE XREF: dbus_message_iter_open_container+324j
					; dbus_message_iter_open_container+32Dj
		cmp	[esp+6Ch+var_3E], 0
		jz	short loc_67DE6157
		mov	[esp+6Ch+var_6C], ebp ;	char *
		call	sub_67DDF840
		test	eax, eax
		jz	loc_67DE6278

loc_67DE6157:				; CODE XREF: dbus_message_iter_open_container+1FEj
					; dbus_message_iter_open_container+205j
		mov	eax, ebx
		call	sub_67DE21F0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	loc_67DE600C
		mov	eax, [ebx]
		cmp	[esp+6Ch+var_3E], 0
		mov	[esi], eax
		mov	eax, [ebx+4]
		mov	[esi+4], eax
		mov	eax, [ebx+8]
		mov	[esi+8], eax
		mov	eax, [ebx+0Ch]
		mov	[esi+0Ch], eax
		mov	eax, [ebx+10h]
		mov	[esi+10h], eax
		mov	eax, [ebx+14h]
		mov	[esi+14h], eax
		mov	eax, [ebx+18h]
		mov	[esi+18h], eax
		mov	eax, [ebx+1Ch]
		mov	[esi+1Ch], eax
		mov	eax, [ebx+20h]
		mov	[esi+20h], eax
		mov	eax, [ebx+24h]
		mov	[esi+24h], eax
		jz	loc_67DE62B2
		mov	[esp+6Ch+var_68], ebp ;	char *
		add	esi, 8
		add	ebx, 8
		lea	ebp, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_6C], ebp ;	int
		call	sub_67E03060
		mov	[esp+6Ch+var_5C], esi
		mov	[esp+6Ch+var_60], 0
		mov	[esp+6Ch+var_64], ebp
		mov	[esp+6Ch+var_68], edi
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67DDCB90
		jmp	loc_67DE600C
; ---------------------------------------------------------------------------

loc_67DE61E6:				; CODE XREF: dbus_message_iter_open_container+13Cj
		mov	[esp+6Ch+var_5C], 0A9Eh
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset aDbus_type_is_c ; "dbus_type_is_container (type)"
		jmp	loc_67DE5FF5
; ---------------------------------------------------------------------------

loc_67DE6203:				; CODE XREF: dbus_message_iter_open_container+1B1j
					; dbus_message_iter_open_container+1C8j
		mov	[esp+6Ch+var_5C], 0AA7h
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset aTypeDbus_type_ ; "(type == DBUS_TYPE_STRUCT && contained_"...
		jmp	loc_67DE5FF5
; ---------------------------------------------------------------------------

loc_67DE6220:				; CODE XREF: dbus_message_iter_open_container+1A9j
		cmp	edi, 65h
		jz	short loc_67DE622E
		cmp	edi, 72h
		jnz	loc_67DE60EF

loc_67DE622E:				; CODE XREF: dbus_message_iter_open_container+2E3j
		mov	[esp+6Ch+var_3D], 1

loc_67DE6233:				; CODE XREF: dbus_message_iter_open_container+1BFj
		mov	[esp+6Ch+var_5C], offset aDbus_messag_45 ; "dbus_message_iter_open_container"
		mov	[esp+6Ch+var_60], 0AB0h
		mov	[esp+6Ch+var_64], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		cmp	[esp+6Ch+var_3D], 0
		jnz	loc_67DE6140
		cmp	edi, 61h
		jnz	loc_67DE6140
		jmp	loc_67DE613A
; ---------------------------------------------------------------------------

loc_67DE6278:				; CODE XREF: dbus_message_iter_open_container+211j
		mov	[esp+6Ch+var_5C], 0AB0h
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset aTypeDbus_typ_0 ; "(type == DBUS_TYPE_ARRAY &&	contained_s"...
		jmp	loc_67DE5FF5
; ---------------------------------------------------------------------------

loc_67DE6295:				; CODE XREF: dbus_message_iter_open_container+170j
		mov	[esp+6Ch+var_5C], 0A9Fh
		mov	[esp+6Ch+var_60], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_64], offset aSubNull ; "sub != NULL"
		jmp	loc_67DE5FF5
; ---------------------------------------------------------------------------

loc_67DE62B2:				; CODE XREF: dbus_message_iter_open_container+269j
		add	esi, 8
		add	ebx, 8
		mov	[esp+6Ch+var_5C], esi
		mov	[esp+6Ch+var_60], 0
		mov	[esp+6Ch+var_64], 0
		mov	[esp+6Ch+var_68], edi
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67DDCB90
		jmp	loc_67DE600C
dbus_message_iter_open_container endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 129. dbus_message_iter_append_fixed_array

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_iter_append_fixed_array(int,	int, int, size_t)
		public dbus_message_iter_append_fixed_array
dbus_message_iter_append_fixed_array proc near
					; CODE XREF: dbus_message_append_args_valist+F6p

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

; FUNCTION CHUNK AT 67DDC5D0 SIZE 00000160 BYTES

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_C], esi
		mov	esi, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_8], edi
		mov	edi, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_3C], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_40], 0A61h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE63D0
		mov	eax, [ebx]
		test	byte ptr [eax+59h], 1
		jnz	short loc_67DE63C4
		mov	[esp+4Ch+var_3C], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_40], 0A62h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 0E0h
		jz	loc_67DE6400
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 0A62h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aRealIter_typ_0 ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0

loc_67DE63AE:				; CODE XREF: dbus_message_iter_append_fixed_array+11Dj
					; dbus_message_iter_append_fixed_array+1BCj ...
		xor	eax, eax
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE63C4:				; CODE XREF: dbus_message_iter_append_fixed_array+64j
		mov	[esp+4Ch+var_4C], offset aDbusAppendIter ; "dbus append	iterator can't be used: mes"...
		call	sub_67DFB4E0

loc_67DE63D0:				; CODE XREF: dbus_message_iter_append_fixed_array+58j
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 0A61h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset a_dbus_messag_7 ; "_dbus_message_iter_append_check (real)"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE63AE
; ---------------------------------------------------------------------------
		align 10h

loc_67DE6400:				; CODE XREF: dbus_message_iter_append_fixed_array+9Bj
		mov	[esp+4Ch+var_3C], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_40], 0A63h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], esi
		call	dbus_type_is_fixed
		test	eax, eax
		jz	short loc_67DE64A1
		cmp	esi, 68h
		jz	short loc_67DE64A1
		mov	[esp+4Ch+var_3C], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_40], 0A64h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		cmp	byte ptr [ebx+9], 61h
		jz	short loc_67DE64D3
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 0A64h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aRealU_writer_c ; "real->u.writer.container_type == DBUS_T"...
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DE63AE
; ---------------------------------------------------------------------------

loc_67DE64A1:				; CODE XREF: dbus_message_iter_append_fixed_array+156j
					; dbus_message_iter_append_fixed_array+15Bj
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 0A63h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aDbus_type_is_0 ; "dbus_type_is_fixed (element_type) && el"...
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DE63AE
; ---------------------------------------------------------------------------

loc_67DE64D3:				; CODE XREF: dbus_message_iter_append_fixed_array+18Dj
		mov	[esp+4Ch+var_3C], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_40], 0A65h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DE6696
		mov	[esp+4Ch+var_3C], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_40], 0A66h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebp, ebp
		js	loc_67DE6632
		mov	[esp+4Ch+var_3C], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_40], 0A69h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], esi
		call	sub_67DFC5E0
		mov	edx, 4000000h
		mov	ecx, eax
		mov	eax, edx
		sar	edx, 1Fh
		idiv	ecx
		cmp	ebp, eax
		jg	loc_67DE6664
		cmp	esi, 62h
		jnz	short loc_67DE6607
		test	ebp, ebp
		jz	short loc_67DE6607
		xor	eax, eax
		jmp	short loc_67DE6599
; ---------------------------------------------------------------------------

loc_67DE6592:				; CODE XREF: dbus_message_iter_append_fixed_array+2F3j
		add	eax, 1
		cmp	ebp, eax
		jle	short loc_67DE6607

loc_67DE6599:				; CODE XREF: dbus_message_iter_append_fixed_array+2B0j
		mov	[esp+4Ch+var_20], eax
		mov	[esp+4Ch+var_3C], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_40], 0A73h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		mov	edx, [edi]
		mov	eax, [esp+4Ch+var_20]
		cmp	dword ptr [edx+eax*4], 1
		jbe	short loc_67DE6592
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 0A73h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aBoolsI0BoolsI1 ; "(*bools)[i]	== 0 ||	(*bools)[i] == 1"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DE63AE
; ---------------------------------------------------------------------------

loc_67DE6607:				; CODE XREF: dbus_message_iter_append_fixed_array+2A8j
					; dbus_message_iter_append_fixed_array+2ACj ...
		add	ebx, 8
		mov	[esp+4Ch+arg_C], ebp
		mov	ebp, [esp+4Ch+var_4]
		mov	[esp+4Ch+arg_8], edi
		mov	edi, [esp+4Ch+var_8]
		mov	[esp+4Ch+arg_4], esi
		mov	esi, [esp+4Ch+var_C]
		mov	[esp+4Ch+arg_0], ebx
		mov	ebx, [esp+4Ch+var_10]
		add	esp, 4Ch
		jmp	loc_67DDC5D0
; ---------------------------------------------------------------------------

loc_67DE6632:				; CODE XREF: dbus_message_iter_append_fixed_array+255j
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 0A66h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aN_elements0_0	; "n_elements >= 0"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DE63AE
; ---------------------------------------------------------------------------

loc_67DE6664:				; CODE XREF: dbus_message_iter_append_fixed_array+29Fj
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 0A69h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aN_elementsDbus ; "n_elements <= DBUS_MAXIMUM_ARRAY_LENGTH"...
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DE63AE
; ---------------------------------------------------------------------------

loc_67DE6696:				; CODE XREF: dbus_message_iter_append_fixed_array+221j
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 0A65h
		mov	[esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aValueNull ; "value !=	NULL"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_messag_46 ; "dbus_message_iter_append_fixed_array"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DE63AE
dbus_message_iter_append_fixed_array endp ; sp-analysis	failed

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 128. dbus_message_iter_append_basic

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_append_basic
dbus_message_iter_append_basic proc near ; CODE	XREF: sub_67DD26C0+601p
					; dbus_message_new_error+176p ...

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_2C], offset aDbus_messag_47 ; "dbus_message_iter_append_basic"
		mov	[esp+3Ch+var_30], 9D9h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE67BC
		mov	eax, [ebx]
		test	byte ptr [eax+59h], 1
		jnz	short loc_67DE67B0
		mov	[esp+3Ch+var_2C], offset aDbus_messag_47 ; "dbus_message_iter_append_basic"
		mov	[esp+3Ch+var_30], 9DAh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 0E0h
		jz	short loc_67DE67D6
		mov	[esp+3Ch+var_2C], 9DAh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aRealIter_typ_0 ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...

loc_67DE6781:				; CODE XREF: dbus_message_iter_append_basic+104j
					; dbus_message_iter_append_basic+1E8j ...
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_messag_47 ; "dbus_message_iter_append_basic"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0

loc_67DE6798:				; CODE XREF: dbus_message_iter_append_basic+1BEj
					; dbus_message_iter_append_basic+1C6j
		mov	eax, esi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE67B0:				; CODE XREF: dbus_message_iter_append_basic+60j
		mov	[esp+3Ch+var_3C], offset aDbusAppendIter ; "dbus append	iterator can't be used: mes"...
		call	sub_67DFB4E0

loc_67DE67BC:				; CODE XREF: dbus_message_iter_append_basic+54j
		mov	[esp+3Ch+var_2C], 9D9h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_messag_7 ; "_dbus_message_iter_append_check (real)"
		jmp	short loc_67DE6781
; ---------------------------------------------------------------------------

loc_67DE67D6:				; CODE XREF: dbus_message_iter_append_basic+97j
		mov	[esp+3Ch+var_2C], offset aDbus_messag_47 ; "dbus_message_iter_append_basic"
		mov	[esp+3Ch+var_30], 9DBh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], edi
		call	dbus_type_is_basic
		test	eax, eax
		jz	loc_67DE68A0
		mov	[esp+3Ch+var_2C], offset aDbus_messag_47 ; "dbus_message_iter_append_basic"
		mov	[esp+3Ch+var_30], 9DCh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebp, ebp
		jz	loc_67DE6A3F
		cmp	edi, 67h
		jz	loc_67DE6930
		nop
		jg	short loc_67DE68C0
		cmp	edi, 62h
		jz	loc_67DE6990

loc_67DE685B:				; CODE XREF: dbus_message_iter_append_basic+1FCj
					; dbus_message_iter_append_basic+237j ...
		mov	eax, ebx
		lea	esi, [esi+0]
		call	sub_67DE21F0
		test	eax, eax
		jz	short loc_67DE6894
		xor	esi, esi
		cmp	edi, 68h
		jz	short loc_67DE6885
		lea	eax, [ebx+8]
		mov	[esp+3Ch+var_34], ebp
		mov	dword ptr [esp+3Ch+var_38], edi
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DDB9F0
		mov	esi, eax

loc_67DE6885:				; CODE XREF: dbus_message_iter_append_basic+19Ej
		mov	eax, ebx
		call	sub_67DE20A0
		test	eax, eax
		jnz	loc_67DE6798

loc_67DE6894:				; CODE XREF: dbus_message_iter_append_basic+197j
		xor	esi, esi
		jmp	loc_67DE6798
; ---------------------------------------------------------------------------
		align 10h

loc_67DE68A0:				; CODE XREF: dbus_message_iter_append_basic+13Cj
		mov	[esp+3Ch+var_2C], 9DBh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aDbus_type_is_1 ; "dbus_type_is_basic (type)"
		jmp	loc_67DE6781
; ---------------------------------------------------------------------------
		align 10h

loc_67DE68C0:				; CODE XREF: dbus_message_iter_append_basic+180j
		cmp	edi, 6Fh
		jz	loc_67DE69E3
		cmp	edi, 73h
		jnz	short loc_67DE685B
		mov	[esp+3Ch+var_2C], offset aDbus_messag_47 ; "dbus_message_iter_append_basic"
		mov	[esp+3Ch+var_30], 9E6h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [ebp+0]
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DDE360
		test	eax, eax
		jnz	loc_67DE685B
		mov	[esp+3Ch+var_2C], 9E6h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check__4 ; "_dbus_check_is_valid_utf8 (*string_p)"
		jmp	loc_67DE6781
; ---------------------------------------------------------------------------
		align 10h

loc_67DE6930:				; CODE XREF: dbus_message_iter_append_basic+179j
		mov	[esp+3Ch+var_2C], offset aDbus_messag_47 ; "dbus_message_iter_append_basic"
		mov	[esp+3Ch+var_30], 9F0h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [ebp+0]
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DDF840
		test	eax, eax
		jnz	loc_67DE685B
		mov	[esp+3Ch+var_2C], 9F0h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check__5 ; "_dbus_check_is_valid_signature (*string"...
		jmp	loc_67DE6781
; ---------------------------------------------------------------------------
		align 10h

loc_67DE6990:				; CODE XREF: dbus_message_iter_append_basic+185j
		mov	[esp+3Ch+var_2C], offset aDbus_messag_47 ; "dbus_message_iter_append_basic"
		mov	[esp+3Ch+var_30], 9F5h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		cmp	dword ptr [ebp+0], 1
		jbe	loc_67DE685B
		mov	[esp+3Ch+var_2C], 9F5h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aBool_p0Bool_p1 ; "*bool_p == 0 || *bool_p == 1"
		jmp	loc_67DE6781
; ---------------------------------------------------------------------------

loc_67DE69E3:				; CODE XREF: dbus_message_iter_append_basic+1F3j
		mov	[esp+3Ch+var_2C], offset aDbus_messag_47 ; "dbus_message_iter_append_basic"
		mov	[esp+3Ch+var_30], 9EBh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [ebp+0]
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DDF050
		test	eax, eax
		jnz	loc_67DE685B
		mov	[esp+3Ch+var_2C], 9EBh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset a_dbus_check__6 ; "_dbus_check_is_valid_path (*string_p)"
		jmp	loc_67DE6781
; ---------------------------------------------------------------------------

loc_67DE6A3F:				; CODE XREF: dbus_message_iter_append_basic+170j
		mov	[esp+3Ch+var_2C], 9DCh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aValueNull ; "value !=	NULL"
		jmp	loc_67DE6781
dbus_message_iter_append_basic endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 146. dbus_message_new_error

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_new_error(int, char *, int)
		public dbus_message_new_error
dbus_message_new_error proc near	; CODE XREF: dbus_connection_dispatch+A80p
					; dbus_connection_dispatch+F01p ...

var_7C		= dword	ptr -7Ch
var_78		= byte ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_54		= byte ptr -54h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 7Ch
		mov	[esp+7Ch+var_8], edi
		mov	edi, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_C], esi
		mov	esi, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_10], ebx
		mov	[esp+7Ch+var_4], ebp
		mov	[esp+7Ch+var_6C], offset aDbus_messag_48 ; "dbus_message_new_error"
		mov	[esp+7Ch+var_70], 537h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+7Ch+var_78], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DE6C32
		mov	[esp+7Ch+var_6C], offset aDbus_messag_48 ; "dbus_message_new_error"
		mov	[esp+7Ch+var_70], 538h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+7Ch+var_78], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE6C50
		mov	[esp+7Ch+var_6C], offset aDbus_messag_48 ; "dbus_message_new_error"
		mov	[esp+7Ch+var_70], 539h
		mov	[esp+7Ch+var_74], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+7Ch+var_78], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], esi ;	char *
		call	sub_67DDE8A0
		test	eax, eax
		jz	loc_67DE6BF5
		mov	[esp+7Ch+var_7C], edi
		call	dbus_message_get_sender
		mov	ebp, eax
		call	sub_67DE0E70
		test	eax, eax
		mov	ebx, eax
		jz	loc_67DE6BDF
		lea	eax, [eax+4]
		mov	[esp+7Ch+var_64], esi
		mov	[esp+7Ch+var_68], 0
		mov	[esp+7Ch+var_6C], 0
		mov	[esp+7Ch+var_70], 0
		mov	[esp+7Ch+var_74], ebp
		mov	dword ptr [esp+7Ch+var_78], 3
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DD8E90
		test	eax, eax
		jz	loc_67DE6C26
		mov	dword ptr [esp+7Ch+var_78], 1
		mov	[esp+7Ch+var_7C], ebx
		call	dbus_message_set_no_reply
		mov	[esp+7Ch+var_7C], edi
		call	dbus_message_get_serial
		mov	[esp+7Ch+var_7C], ebx
		mov	dword ptr [esp+7Ch+var_78], eax
		call	dbus_message_set_reply_serial
		test	eax, eax
		jz	loc_67DE6C26
		mov	esi, [esp+7Ch+arg_8]
		test	esi, esi
		jz	short loc_67DE6BDF
		lea	esi, [esp+7Ch+var_54]
		mov	dword ptr [esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_7C], ebx
		call	dbus_message_iter_init_append
		lea	eax, [esp+7Ch+arg_8]
		mov	[esp+7Ch+var_74], eax
		mov	dword ptr [esp+7Ch+var_78], 73h
		mov	[esp+7Ch+var_7C], esi
		call	dbus_message_iter_append_basic
		test	eax, eax
		jz	short loc_67DE6C26

loc_67DE6BDF:				; CODE XREF: dbus_message_new_error+D8j
					; dbus_message_new_error+14Ej ...
		mov	eax, ebx
		mov	esi, [esp+7Ch+var_C]
		mov	ebx, [esp+7Ch+var_10]
		mov	edi, [esp+7Ch+var_8]
		mov	ebp, [esp+7Ch+var_4]
		add	esp, 7Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE6BF5:				; CODE XREF: dbus_message_new_error+BFj
		mov	[esp+7Ch+var_6C], 539h
		mov	[esp+7Ch+var_70], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_74], offset a_dbus_check__7 ; "_dbus_check_is_valid_error_name (error_"...

loc_67DE6C0D:				; CODE XREF: dbus_message_new_error+1EAj
					; dbus_message_new_error+208j
		mov	eax, off_67E19014
		xor	ebx, ebx
		mov	dword ptr [esp+7Ch+var_78], offset aDbus_messag_48 ; "dbus_message_new_error"
		mov	[esp+7Ch+var_7C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DE6BDF
; ---------------------------------------------------------------------------

loc_67DE6C26:				; CODE XREF: dbus_message_new_error+113j
					; dbus_message_new_error+13Fj ...
		mov	[esp+7Ch+var_7C], ebx
		xor	ebx, ebx
		call	dbus_message_unref
		jmp	short loc_67DE6BDF
; ---------------------------------------------------------------------------

loc_67DE6C32:				; CODE XREF: dbus_message_new_error+4Fj
		mov	[esp+7Ch+var_6C], 537h
		mov	[esp+7Ch+var_70], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_74], offset aReply_toNull ; "reply_to != NULL"
		jmp	short loc_67DE6C0D
; ---------------------------------------------------------------------------
		align 10h

loc_67DE6C50:				; CODE XREF: dbus_message_new_error+83j
		mov	[esp+7Ch+var_6C], 538h
		mov	[esp+7Ch+var_70], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_74], offset aError_nameNull ; "error_name != NULL"
		jmp	short loc_67DE6C0D
dbus_message_new_error endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 147. dbus_message_new_error_printf

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_new_error_printf(int, char *, char *, char)
		public dbus_message_new_error_printf
dbus_message_new_error_printf proc near

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h

		push	edi
		push	esi
		push	ebx
		sub	esp, 50h
		mov	esi, [esp+5Ch+arg_0]
		mov	ebx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4C], offset aDbus_messag_49 ; "dbus_message_new_error_printf"
		mov	[esp+5Ch+var_50], 57Fh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DE6DC1
		mov	[esp+5Ch+var_4C], offset aDbus_messag_49 ; "dbus_message_new_error_printf"
		mov	[esp+5Ch+var_50], 580h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE6DE0
		mov	[esp+5Ch+var_4C], offset aDbus_messag_49 ; "dbus_message_new_error_printf"
		mov	[esp+5Ch+var_50], 581h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], ebx ;	char *
		call	sub_67DDE8A0
		test	eax, eax
		jnz	short loc_67DE6D54
		mov	[esp+5Ch+var_4C], 581h
		mov	[esp+5Ch+var_50], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset a_dbus_check__7 ; "_dbus_check_is_valid_error_name (error_"...

loc_67DE6D36:				; CODE XREF: dbus_message_new_error_printf+169j
					; dbus_message_new_error_printf+188j
		mov	eax, off_67E19014
		mov	[esp+5Ch+var_58], offset aDbus_messag_49 ; "dbus_message_new_error_printf"
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 50h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DE6D54:				; CODE XREF: dbus_message_new_error_printf+ACj
		lea	edi, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DE6D70
		add	esp, 50h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE6D70:				; CODE XREF: dbus_message_new_error_printf+F6j
		lea	eax, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_54], eax ;	va_list
		mov	eax, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_5C], edi ;	int
		mov	[esp+5Ch+var_58], eax ;	char *
		call	sub_67E08E70
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DE6DA7

loc_67DE6D90:				; CODE XREF: dbus_message_new_error_printf+14Fj
		mov	[esp+5Ch+var_5C], edi
		mov	[esp+5Ch+var_30], eax
		call	sub_67E02BF0
		mov	eax, [esp+5Ch+var_30]
		add	esp, 50h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DE6DA7:				; CODE XREF: dbus_message_new_error_printf+11Ej
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E01770
		mov	[esp+5Ch+var_58], ebx ;	char *
		mov	[esp+5Ch+var_5C], esi ;	int
		mov	[esp+5Ch+var_54], eax ;	int
		call	dbus_message_new_error
		jmp	short loc_67DE6D90
; ---------------------------------------------------------------------------

loc_67DE6DC1:				; CODE XREF: dbus_message_new_error_printf+3Cj
		mov	[esp+5Ch+var_4C], 57Fh
		mov	[esp+5Ch+var_50], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aReply_toNull ; "reply_to != NULL"
		jmp	loc_67DE6D36
; ---------------------------------------------------------------------------
		align 10h

loc_67DE6DE0:				; CODE XREF: dbus_message_new_error_printf+70j
		mov	[esp+5Ch+var_4C], 580h
		mov	[esp+5Ch+var_50], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aError_nameNull ; "error_name != NULL"
		jmp	loc_67DE6D36
dbus_message_new_error_printf endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 161. dbus_message_set_sender

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_set_sender(int, char	*)
		public dbus_message_set_sender
dbus_message_set_sender	proc near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset aDbus_messag_50 ; "dbus_message_set_sender"
		mov	[esp+3Ch+var_30], 0D0Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE6F32
		mov	[esp+3Ch+var_2C], offset aDbus_messag_50 ; "dbus_message_set_sender"
		mov	[esp+3Ch+var_30], 0D0Bh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 1
		jnz	short loc_67DE6EE0
		mov	[esp+3Ch+var_2C], offset aDbus_messag_50 ; "dbus_message_set_sender"
		mov	[esp+3Ch+var_30], 0D0Eh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE6F15
		mov	[esp+3Ch+var_3C], esi ;	char *
		call	sub_67DDF1E0
		test	eax, eax
		jz	loc_67DE6F50
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], esi
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	dword ptr [esp+3Ch+var_38], 7
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DDA470

loc_67DE6EDA:				; CODE XREF: dbus_message_set_sender+130j
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE6EE0:				; CODE XREF: dbus_message_set_sender+71j
		mov	[esp+3Ch+var_2C], 0D0Bh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageLocked	; "!message->locked"

loc_67DE6EF8:				; CODE XREF: dbus_message_set_sender+14Aj
					; dbus_message_set_sender+168j
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_messag_50 ; "dbus_message_set_sender"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 34h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE6F15:				; CODE XREF: dbus_message_set_sender+A1j
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	dword ptr [esp+3Ch+var_38], 7
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD8410
		jmp	short loc_67DE6EDA
; ---------------------------------------------------------------------------

loc_67DE6F32:				; CODE XREF: dbus_message_set_sender+3Bj
		mov	[esp+3Ch+var_2C], 0D0Ah
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		jmp	short loc_67DE6EF8
; ---------------------------------------------------------------------------
		align 10h

loc_67DE6F50:				; CODE XREF: dbus_message_set_sender+ADj
		mov	[esp+3Ch+var_2C], 0D0Eh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aSenderNull_dbu ; "sender == NULL || _dbus_check_is_valid_"...
		jmp	short loc_67DE6EF8
dbus_message_set_sender	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 154. dbus_message_set_destination

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_set_destination(int,	char *)
		public dbus_message_set_destination
dbus_message_set_destination proc near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset aDbus_messag_51 ; "dbus_message_set_destination"
		mov	[esp+3Ch+var_30], 0CD4h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE70A2
		mov	[esp+3Ch+var_2C], offset aDbus_messag_51 ; "dbus_message_set_destination"
		mov	[esp+3Ch+var_30], 0CD5h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 1
		jnz	short loc_67DE7050
		mov	[esp+3Ch+var_2C], offset aDbus_messag_51 ; "dbus_message_set_destination"
		mov	[esp+3Ch+var_30], 0CD8h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE7085
		mov	[esp+3Ch+var_3C], esi ;	char *
		call	sub_67DDF1E0
		test	eax, eax
		jz	loc_67DE70C0
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], esi
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	dword ptr [esp+3Ch+var_38], 6
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DDA470

loc_67DE704A:				; CODE XREF: dbus_message_set_destination+130j
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE7050:				; CODE XREF: dbus_message_set_destination+71j
		mov	[esp+3Ch+var_2C], 0CD5h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageLocked	; "!message->locked"

loc_67DE7068:				; CODE XREF: dbus_message_set_destination+14Aj
					; dbus_message_set_destination+168j
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_messag_51 ; "dbus_message_set_destination"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 34h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE7085:				; CODE XREF: dbus_message_set_destination+A1j
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	dword ptr [esp+3Ch+var_38], 6
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD8410
		jmp	short loc_67DE704A
; ---------------------------------------------------------------------------

loc_67DE70A2:				; CODE XREF: dbus_message_set_destination+3Bj
		mov	[esp+3Ch+var_2C], 0CD4h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		jmp	short loc_67DE7068
; ---------------------------------------------------------------------------
		align 10h

loc_67DE70C0:				; CODE XREF: dbus_message_set_destination+ADj
		mov	[esp+3Ch+var_2C], 0CD8h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aDestinationNul ; "destination	== NULL	|| _dbus_check_is_v"...
		jmp	short loc_67DE7068
dbus_message_set_destination endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 155. dbus_message_set_error_name

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_set_error_name(int, char *)
		public dbus_message_set_error_name
dbus_message_set_error_name proc near	; CODE XREF: sub_67DD26C0+5A5p

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset aDbus_messag_52 ; "dbus_message_set_error_name"
		mov	[esp+3Ch+var_30], 0C9Eh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE7212
		mov	[esp+3Ch+var_2C], offset aDbus_messag_52 ; "dbus_message_set_error_name"
		mov	[esp+3Ch+var_30], 0C9Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 1
		jnz	short loc_67DE71C0
		mov	[esp+3Ch+var_2C], offset aDbus_messag_52 ; "dbus_message_set_error_name"
		mov	[esp+3Ch+var_30], 0CA2h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE71F5
		mov	[esp+3Ch+var_3C], esi ;	char *
		call	sub_67DDE8A0
		test	eax, eax
		jz	loc_67DE7230
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], esi
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	dword ptr [esp+3Ch+var_38], 4
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DDA470

loc_67DE71BA:				; CODE XREF: dbus_message_set_error_name+130j
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE71C0:				; CODE XREF: dbus_message_set_error_name+71j
		mov	[esp+3Ch+var_2C], 0C9Fh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageLocked	; "!message->locked"

loc_67DE71D8:				; CODE XREF: dbus_message_set_error_name+14Aj
					; dbus_message_set_error_name+168j
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_messag_52 ; "dbus_message_set_error_name"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 34h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE71F5:				; CODE XREF: dbus_message_set_error_name+A1j
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	dword ptr [esp+3Ch+var_38], 4
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD8410
		jmp	short loc_67DE71BA
; ---------------------------------------------------------------------------

loc_67DE7212:				; CODE XREF: dbus_message_set_error_name+3Bj
		mov	[esp+3Ch+var_2C], 0C9Eh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		jmp	short loc_67DE71D8
; ---------------------------------------------------------------------------
		align 10h

loc_67DE7230:				; CODE XREF: dbus_message_set_error_name+ADj
		mov	[esp+3Ch+var_2C], 0CA2h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aError_nameNu_0 ; "error_name == NULL || _dbus_check_is_va"...
		jmp	short loc_67DE71D8
dbus_message_set_error_name endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 157. dbus_message_set_member

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_set_member(int, char	*)
		public dbus_message_set_member
dbus_message_set_member	proc near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset aDbus_messag_53 ; "dbus_message_set_member"
		mov	[esp+3Ch+var_30], 0C49h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE7382
		mov	[esp+3Ch+var_2C], offset aDbus_messag_53 ; "dbus_message_set_member"
		mov	[esp+3Ch+var_30], 0C4Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 1
		jnz	short loc_67DE7330
		mov	[esp+3Ch+var_2C], offset aDbus_messag_53 ; "dbus_message_set_member"
		mov	[esp+3Ch+var_30], 0C4Dh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE7365
		mov	[esp+3Ch+var_3C], esi ;	char *
		call	sub_67DDF090
		test	eax, eax
		jz	loc_67DE73A0
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], esi
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 73h
		mov	dword ptr [esp+3Ch+var_38], 3
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DDA470

loc_67DE732A:				; CODE XREF: dbus_message_set_member+130j
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE7330:				; CODE XREF: dbus_message_set_member+71j
		mov	[esp+3Ch+var_2C], 0C4Ah
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageLocked	; "!message->locked"

loc_67DE7348:				; CODE XREF: dbus_message_set_member+14Aj
					; dbus_message_set_member+168j
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_messag_53 ; "dbus_message_set_member"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 34h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE7365:				; CODE XREF: dbus_message_set_member+A1j
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	dword ptr [esp+3Ch+var_38], 3
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD8410
		jmp	short loc_67DE732A
; ---------------------------------------------------------------------------

loc_67DE7382:				; CODE XREF: dbus_message_set_member+3Bj
		mov	[esp+3Ch+var_2C], 0C49h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		jmp	short loc_67DE7348
; ---------------------------------------------------------------------------
		align 10h

loc_67DE73A0:				; CODE XREF: dbus_message_set_member+ADj
		mov	[esp+3Ch+var_2C], 0C4Dh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMemberNull_dbu ; "member == NULL || _dbus_check_is_valid_"...
		jmp	short loc_67DE7348
dbus_message_set_member	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 159. dbus_message_set_path

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_set_path(int, char *)
		public dbus_message_set_path
dbus_message_set_path proc near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset aDbus_messag_54 ; "dbus_message_set_path"
		mov	[esp+3Ch+var_30], 0B6Eh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DE74F2
		mov	[esp+3Ch+var_2C], offset aDbus_messag_54 ; "dbus_message_set_path"
		mov	[esp+3Ch+var_30], 0B6Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+59h], 1
		jnz	short loc_67DE74A0
		mov	[esp+3Ch+var_2C], offset aDbus_messag_54 ; "dbus_message_set_path"
		mov	[esp+3Ch+var_30], 0B72h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DE74D5
		mov	[esp+3Ch+var_3C], esi ;	char *
		call	sub_67DDF050
		test	eax, eax
		jz	loc_67DE7510
		lea	eax, [esp+3Ch+var_10]
		add	ebx, 4
		mov	[esp+3Ch+var_10], esi
		mov	[esp+3Ch+var_30], eax
		mov	[esp+3Ch+var_34], 6Fh
		mov	dword ptr [esp+3Ch+var_38], 1
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DDA470

loc_67DE749A:				; CODE XREF: dbus_message_set_path+130j
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE74A0:				; CODE XREF: dbus_message_set_path+71j
		mov	[esp+3Ch+var_2C], 0B6Fh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageLocked	; "!message->locked"

loc_67DE74B8:				; CODE XREF: dbus_message_set_path+14Aj
					; dbus_message_set_path+168j
		mov	eax, off_67E19014
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_messag_54 ; "dbus_message_set_path"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 34h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE74D5:				; CODE XREF: dbus_message_set_path+A1j
		add	ebx, 4
		mov	[esp+3Ch+var_10], 0
		mov	dword ptr [esp+3Ch+var_38], 1
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DD8410
		jmp	short loc_67DE749A
; ---------------------------------------------------------------------------

loc_67DE74F2:				; CODE XREF: dbus_message_set_path+3Bj
		mov	[esp+3Ch+var_2C], 0B6Eh
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aMessageNull_0	; "message != NULL"
		jmp	short loc_67DE74B8
; ---------------------------------------------------------------------------
		align 10h

loc_67DE7510:				; CODE XREF: dbus_message_set_path+ADj
		mov	[esp+3Ch+var_2C], 0B72h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aObject_pathNul ; "object_path	== NULL	|| _dbus_check_is_v"...
		jmp	short loc_67DE74B8
dbus_message_set_path endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE7530	proc near		; CODE XREF: sub_67DF4C20+81p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], edi
		mov	edi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_C], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	[esp+1Ch+var_1C], edi
		call	sub_67DFBB70
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		jz	short loc_67DE758C
		mov	[esp+1Ch+var_1C], edi
		call	sub_67DEB690
		mov	edi, [ebx+5Ch]
		test	edi, edi
		jz	short loc_67DE75A0

loc_67DE7566:				; CODE XREF: sub_67DE7530+8Ej
		lea	eax, [ebx+5Ch]
		mov	[esp+1Ch+var_1C], eax
		mov	[esp+1Ch+var_18], esi
		call	sub_67DFB700
		mov	eax, [ebx+60h]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esi+8]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DEB580
		mov	eax, 1

loc_67DE758C:				; CODE XREF: sub_67DE7530+25j
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE75A0:				; CODE XREF: sub_67DE7530+34j
		lea	eax, [ebx+4]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E00CE0
		mov	edi, eax
		lea	eax, [ebx+44h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E00CE0
		lea	edi, [eax+edi]
		mov	[ebx+60h], edi
		jmp	short loc_67DE7566
sub_67DE7530	endp

; Exported entry 127. dbus_message_iter_abandon_container

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_iter_abandon_container
dbus_message_iter_abandon_container proc near
					; CODE XREF: dbus_message_append_args_valist+1C6p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_55 ; "dbus_message_iter_abandon_container"
		mov	[esp+2Ch+var_20], 0AFFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, ebx
		call	sub_67DE0750
		test	eax, eax
		jz	short loc_67DE7682
		mov	eax, [ebx]
		test	byte ptr [eax+59h], 1
		jnz	short loc_67DE7676
		mov	[esp+2Ch+var_1C], offset aDbus_messag_55 ; "dbus_message_iter_abandon_container"
		mov	[esp+2Ch+var_20], 0B00h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 0E0h
		jz	short loc_67DE76B5
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0B00h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aRealIter_typ_0 ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_55 ; "dbus_message_iter_abandon_container"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0

loc_67DE7670:				; CODE XREF: dbus_message_iter_abandon_container+19Cj
					; dbus_message_iter_abandon_container+1DAj ...
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE7676:				; CODE XREF: dbus_message_iter_abandon_container+4Aj
		mov	[esp+2Ch+var_2C], offset aDbusAppendIter ; "dbus append	iterator can't be used: mes"...
		call	sub_67DFB4E0

loc_67DE7682:				; CODE XREF: dbus_message_iter_abandon_container+42j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0AFFh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_7 ; "_dbus_message_iter_append_check (real)"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_55 ; "dbus_message_iter_abandon_container"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE76B5:				; CODE XREF: dbus_message_iter_abandon_container+81j
		mov	[esp+2Ch+var_1C], offset aDbus_messag_55 ; "dbus_message_iter_abandon_container"
		mov	[esp+2Ch+var_20], 0B01h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, esi
		call	sub_67DE0750
		test	eax, eax
		jz	loc_67DE776D
		mov	eax, [esi]
		test	byte ptr [eax+59h], 1
		jnz	short loc_67DE7761
		mov	[esp+2Ch+var_1C], offset aDbus_messag_55 ; "dbus_message_iter_abandon_container"
		mov	[esp+2Ch+var_20], 0B02h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [esi+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 0E0h
		jz	short loc_67DE77A0
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0B02h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aReal_subIter_t ; "real_sub->iter_type	== DBUS_MESSAGE_ITE"...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_55 ; "dbus_message_iter_abandon_container"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DE7670
; ---------------------------------------------------------------------------

loc_67DE7761:				; CODE XREF: dbus_message_iter_abandon_container+136j
		mov	[esp+2Ch+var_2C], offset aDbusAppendIter ; "dbus append	iterator can't be used: mes"...
		call	sub_67DFB4E0

loc_67DE776D:				; CODE XREF: dbus_message_iter_abandon_container+12Aj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0B01h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_messag_8 ; "_dbus_message_iter_append_check (real_s"...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_55 ; "dbus_message_iter_abandon_container"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	loc_67DE7670
; ---------------------------------------------------------------------------
		align 10h

loc_67DE77A0:				; CODE XREF: dbus_message_iter_abandon_container+16Dj
		mov	[esp+2Ch+var_1C], offset a_dbus_messa_11 ; "_dbus_message_iter_abandon_signature"
		mov	[esp+2Ch+var_20], 97Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aRealIter_typ_0 ; "real->iter_type == DBUS_MESSAGE_ITER_TY"...
		movzx	eax, byte ptr [ebx+6]
		and	eax, 0FFFFFFE0h
		cmp	al, 0E0h
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_messa_11 ; "_dbus_message_iter_abandon_signature"
		mov	[esp+2Ch+var_20], 97Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aRealU_writer_t ; "real->u.writer.type_str != NULL"
		cmp	dword ptr [ebx+0Ch], 0
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_messa_11 ; "_dbus_message_iter_abandon_signature"
		mov	[esp+2Ch+var_20], 97Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aRealSig_refcou ; "real->sig_refcount > 0"
		cmp	byte ptr [ebx+7], 0
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+7]
		sub	eax, 1
		test	al, al
		mov	[ebx+7], al
		jnz	loc_67DE7670
		mov	[esp+2Ch+var_1C], offset a_dbus_messa_11 ; "_dbus_message_iter_abandon_signature"
		mov	[esp+2Ch+var_20], 982h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aRealSig_refc_0 ; "real->sig_refcount == 0"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	esi, [ebx+0Ch]
		add	ebx, 8
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DDB070
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E02BF0
		mov	[esp+2Ch+arg_0], esi
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_free
dbus_message_iter_abandon_container endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  96. dbus_message_append_args_valist

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_append_args_valist
dbus_message_append_args_valist	proc near ; CODE XREF: dbus_message_append_args+4Bp

var_CC		= dword	ptr -0CCh
var_C8		= byte ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_90		= dword	ptr -90h
var_58		= dword	ptr -58h
var_1E		= byte ptr -1Eh
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0BCh
		mov	edi, [esp+0CCh+arg_0]
		mov	ebx, [esp+0CCh+arg_4]
		mov	esi, [esp+0CCh+arg_8]
		mov	[esp+0CCh+var_BC], offset aDbus_message_a ; "dbus_message_append_args_valist"
		mov	[esp+0CCh+var_C0], 699h
		mov	[esp+0CCh+var_C4], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+0CCh+var_C8], offset aConstChar_db_2 ; "(*(const	char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+0CCh+var_CC], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DE7AA6
		lea	eax, [esp+0CCh+var_58]
		mov	dword ptr [esp+0CCh+var_C8], eax
		mov	[esp+0CCh+var_CC], edi
		call	dbus_message_iter_init_append
		test	ebx, ebx
		jz	loc_67DE7AE4
		mov	[esp+0CCh+var_CC], ebx
		lea	ebp, [esp+0CCh+var_90]
		call	dbus_type_is_basic
		test	eax, eax
		jnz	loc_67DE79E5

loc_67DE791F:				; CODE XREF: dbus_message_append_args_valist+13Fj
		cmp	ebx, 61h
		jnz	loc_67DE7AEB
		mov	edi, [esi]
		mov	[esp+0CCh+var_1D], 0
		mov	[esp+0CCh+var_C0], ebp ; int
		mov	dword ptr [esp+0CCh+var_C8], 61h ; int
		mov	eax, edi
		mov	[esp+0CCh+var_1E], al
		lea	eax, [esp+0CCh+var_1E]
		mov	[esp+0CCh+var_C4], eax ; char *
		lea	eax, [esp+0CCh+var_58]
		mov	[esp+0CCh+var_CC], eax ; int
		call	dbus_message_iter_open_container
		test	eax, eax
		jz	loc_67DE7AE0
		mov	[esp+0CCh+var_CC], edi
		lea	ebx, [esi+4]
		call	dbus_type_is_fixed
		test	eax, eax
		jz	loc_67DE7A10
		cmp	edi, 68h
		jz	loc_67DE7A82
		mov	eax, [esi+8]
		mov	[esp+0CCh+var_C0], eax ; size_t
		mov	eax, [ebx]
		mov	dword ptr [esp+0CCh+var_C8], edi ; int
		mov	[esp+0CCh+var_CC], ebp ; int
		mov	[esp+0CCh+var_C4], eax ; int
		call	dbus_message_iter_append_fixed_array
		test	eax, eax
		jz	loc_67DE7A5B
		add	esi, 0Ch
		mov	[esp+0CCh+var_A0], esi

loc_67DE79AA:				; CODE XREF: dbus_message_append_args_valist+18Dj
					; dbus_message_append_args_valist+1A1j
		lea	eax, [esp+0CCh+var_58]
		mov	dword ptr [esp+0CCh+var_C8], ebp
		mov	[esp+0CCh+var_CC], eax
		call	dbus_message_iter_close_container
		test	eax, eax
		jz	loc_67DE7AE0

loc_67DE79C2:				; CODE XREF: dbus_message_append_args_valist+16Aj
		mov	eax, [esp+0CCh+var_A0]
		mov	ebx, [eax]
		test	ebx, ebx
		jz	loc_67DE7AE4
		mov	esi, eax
		mov	[esp+0CCh+var_CC], ebx
		add	esi, 4
		call	dbus_type_is_basic
		test	eax, eax
		jz	loc_67DE791F

loc_67DE79E5:				; CODE XREF: dbus_message_append_args_valist+79j
		mov	eax, [esi]
		mov	dword ptr [esp+0CCh+var_C8], ebx
		mov	[esp+0CCh+var_C4], eax
		lea	eax, [esp+0CCh+var_58]
		mov	[esp+0CCh+var_CC], eax
		call	dbus_message_iter_append_basic
		test	eax, eax
		jz	loc_67DE7AE0
		add	esi, 4
		mov	[esp+0CCh+var_A0], esi
		jmp	short loc_67DE79C2
; ---------------------------------------------------------------------------
		align 10h

loc_67DE7A10:				; CODE XREF: dbus_message_append_args_valist+D3j
		cmp	edi, 67h
		jnz	short loc_67DE7A78

loc_67DE7A15:				; CODE XREF: dbus_message_append_args_valist+1DBj
					; dbus_message_append_args_valist+1E0j
		lea	eax, [ebx+8]
		mov	[esp+0CCh+var_A0], eax
		mov	eax, [ebx+4]
		mov	[esp+0CCh+var_A4], eax
		mov	eax, [ebx]
		mov	ebx, [eax]
		mov	eax, [esp+0CCh+var_A4]
		test	eax, eax
		jle	loc_67DE79AA
		xor	esi, esi
		jmp	short loc_67DE7A47
; ---------------------------------------------------------------------------

loc_67DE7A37:				; CODE XREF: dbus_message_append_args_valist+1B9j
		add	esi, 1
		add	ebx, 4
		cmp	[esp+0CCh+var_A4], esi
		jle	loc_67DE79AA

loc_67DE7A47:				; CODE XREF: dbus_message_append_args_valist+195j
		mov	[esp+0CCh+var_C4], ebx
		mov	dword ptr [esp+0CCh+var_C8], edi
		mov	[esp+0CCh+var_CC], ebp
		call	dbus_message_iter_append_basic
		test	eax, eax
		jnz	short loc_67DE7A37

loc_67DE7A5B:				; CODE XREF: dbus_message_append_args_valist+FDj
		lea	eax, [esp+0CCh+var_58]
		mov	[esp+0CCh+var_CC], eax
		mov	dword ptr [esp+0CCh+var_C8], ebp
		call	dbus_message_iter_abandon_container
		xor	eax, eax

loc_67DE7A6D:				; CODE XREF: dbus_message_append_args_valist+204j
					; dbus_message_append_args_valist+242j	...
		add	esp, 0BCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE7A78:				; CODE XREF: dbus_message_append_args_valist+173j
		cmp	edi, 73h
		jz	short loc_67DE7A15
		cmp	edi, 6Fh
		jz	short loc_67DE7A15

loc_67DE7A82:				; CODE XREF: dbus_message_append_args_valist+DCj
		mov	[esp+0CCh+var_CC], edi
		call	sub_67DFC1F0
		mov	[esp+0CCh+var_C4], offset aDbus_message_a ; "dbus_message_append_args_valist"
		mov	[esp+0CCh+var_CC], offset aArraysOfSCanTB ; "arrays of %s can't be appended with %s "...
		mov	dword ptr [esp+0CCh+var_C8], eax ; char
		call	sub_67DFAD60
		xor	eax, eax
		jmp	short loc_67DE7A6D
; ---------------------------------------------------------------------------

loc_67DE7AA6:				; CODE XREF: dbus_message_append_args_valist+4Dj
		mov	eax, off_67E19014
		mov	[esp+0CCh+var_BC], 699h
		mov	[esp+0CCh+var_C0], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0CCh+var_C4], offset aMessageNull_0 ; "message != NULL"
		mov	[esp+0CCh+var_CC], eax ; char *
		mov	dword ptr [esp+0CCh+var_C8], offset aDbus_message_a ; "dbus_message_append_args_valist"
		call	sub_67DFB4E0
		add	esp, 0BCh
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE7AE0:				; CODE XREF: dbus_message_append_args_valist+C0j
					; dbus_message_append_args_valist+11Cj	...
		xor	eax, eax
		jmp	short loc_67DE7A6D
; ---------------------------------------------------------------------------

loc_67DE7AE4:				; CODE XREF: dbus_message_append_args_valist+65j
					; dbus_message_append_args_valist+12Aj
		mov	eax, 1
		jmp	short loc_67DE7A6D
; ---------------------------------------------------------------------------

loc_67DE7AEB:				; CODE XREF: dbus_message_append_args_valist+82j
		mov	[esp+0CCh+var_CC], ebx
		xchg	ax, ax
		call	sub_67DFC1F0
		mov	[esp+0CCh+var_C4], offset aDbus_message_a ; "dbus_message_append_args_valist"
		mov	[esp+0CCh+var_CC], offset aTypeSIsnTSuppo ; "type %s isn't supported yet in %s\n"
		mov	dword ptr [esp+0CCh+var_C8], eax ; char
		call	sub_67DFAD60
		xor	eax, eax
		jmp	loc_67DE7A6D
dbus_message_append_args_valist	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  95. dbus_message_append_args

; =============== S U B	R O U T	I N E =======================================


		public dbus_message_append_args
dbus_message_append_args proc near	; CODE XREF: dbus_bus_remove_match+82p
					; dbus_bus_add_match+86p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_messag_56 ; "dbus_message_append_args"
		mov	[esp+2Ch+var_20], 679h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DE7B75
		lea	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_24], eax
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_2C], ebx
		mov	dword ptr [esp+2Ch+var_28], eax
		call	dbus_message_append_args_valist
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE7B75:				; CODE XREF: dbus_message_append_args+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 679h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aMessageNull_0	; "message != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_messag_56 ; "dbus_message_append_args"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_message_append_args endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  99. dbus_message_demarshal

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_message_demarshal(void *, size_t, int)
		public dbus_message_demarshal
dbus_message_demarshal proc near

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= byte ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	edi, [esp+4Ch+arg_0]
		mov	ebp, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_3C], offset aDbus_messag_57 ; "dbus_message_demarshal"
		mov	dword ptr [esp+4Ch+var_40], 1204h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aConstChar_db_2 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67DE7DD0
		mov	[esp+4Ch+var_4C], 2Ch ;	size_t
		call	dbus_malloc0
		mov	ebx, eax
		xor	eax, eax
		test	ebx, ebx
		jz	loc_67DE7DB5
		and	byte ptr [ebx+28h], 0FEh
		lea	esi, [ebx+4]
		mov	dword ptr [ebx], 1
		mov	dword ptr [ebx+24h], 0
		mov	dword ptr [ebx+1Ch], 8000000h
		mov	dword ptr [ebx+20h], 400h
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DE7E30
		mov	[esp+4Ch+var_48], 20h
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E06F60
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E06F60
		mov	[esp+4Ch+var_3C], offset a_dbus_messa_12 ; "_dbus_message_loader_get_buffer"
		mov	dword ptr [esp+4Ch+var_40], 0EEDh
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aLoaderBuffer_o ; "!loader->buffer_outstanding"
		movzx	eax, byte ptr [ebx+28h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+28h], 2
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_48], edi ;	void *
		mov	[esp+4Ch+var_4C], esi ;	int
		mov	[esp+4Ch+var_44], eax ;	size_t
		call	sub_67E090D0
		mov	[esp+4Ch+var_3C], offset a_dbus_messa_13 ; "_dbus_message_loader_return_buffer"
		mov	dword ptr [esp+4Ch+var_40], 0F03h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aLoaderBuffer_0 ; "loader->buffer_outstanding"
		movzx	eax, byte ptr [ebx+28h]
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_messa_13 ; "_dbus_message_loader_return_buffer"
		mov	dword ptr [esp+4Ch+var_40], 0F04h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aBufferLoaderDa ; "buffer == &loader->data"
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		and	byte ptr [ebx+28h], 0FDh
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DE5570
		test	eax, eax
		jz	loc_67DE7E07
		test	byte ptr [ebx+28h], 1
		jz	loc_67DE7DC0
		xor	eax, eax
		cmp	dword ptr [ebx+24h], 0
		setnz	al

loc_67DE7D2D:				; CODE XREF: dbus_message_demarshal+219j
		mov	[esp+4Ch+var_3C], offset a_dbus_messa_15 ; "_dbus_message_loader_get_is_corrupted"
		mov	dword ptr [esp+4Ch+var_40], 10B9h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aLoaderCorrup_1 ; "(loader->corrupted && loader->corruptio"...
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		test	byte ptr [ebx+28h], 1
		jnz	loc_67DE7E40
		lea	edi, [ebx+18h]
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DFBFF0
		test	eax, eax
		jz	loc_67DE7E07
		mov	edx, [ebx]
		sub	edx, 1
		test	edx, edx
		mov	[ebx], edx
		jnz	short loc_67DE7DB5
		mov	[esp+4Ch+var_20], eax
		mov	[esp+4Ch+var_44], 0
		mov	[esp+4Ch+var_48], offset dbus_message_unref
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DFB9D0
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DFBC90
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E02BF0
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_free
		mov	eax, [esp+4Ch+var_20]

loc_67DE7DB5:				; CODE XREF: dbus_message_demarshal+55j
					; dbus_message_demarshal+1CBj ...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE7DC0:				; CODE XREF: dbus_message_demarshal+16Ej
		xor	eax, eax
		cmp	dword ptr [ebx+24h], 0
		setz	al
		jmp	loc_67DE7D2D
; ---------------------------------------------------------------------------
		align 10h

loc_67DE7DD0:				; CODE XREF: dbus_message_demarshal+3Dj
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 1204h
		mov	dword ptr [esp+4Ch+var_40], offset aRBuildWin32l_5 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aStrNull ; "str != NULL"
		mov	[esp+4Ch+var_4C], eax ;	char *
		mov	[esp+4Ch+var_48], offset aDbus_messag_57 ; "dbus_message_demarshal"
		call	sub_67DFB4E0
		add	esp, 3Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE7E07:				; CODE XREF: dbus_message_demarshal+164j
					; dbus_message_demarshal+1BCj
		mov	eax, off_67E19010
		mov	[esp+4Ch+var_48], offset aOrg_freedes_27 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+4Ch+var_4C], ebp
		mov	[esp+4Ch+var_44], eax
		call	dbus_set_error_const
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DE1950
		xor	eax, eax
		jmp	short loc_67DE7DB5
; ---------------------------------------------------------------------------
		align 10h

loc_67DE7E30:				; CODE XREF: dbus_message_demarshal+87j
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_free
		xor	eax, eax
		jmp	loc_67DE7DB5
; ---------------------------------------------------------------------------
		align 10h

loc_67DE7E40:				; CODE XREF: dbus_message_demarshal+1A9j
		mov	eax, [ebx+24h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DDE340
		mov	[esp+4Ch+var_44], offset aMessageIsCorru ; "Message is corrupted (%s)"
		mov	[esp+4Ch+var_48], offset aOrg_freedes_28 ; "org.freedesktop.DBus.Error.InvalidArgs"
		mov	[esp+4Ch+var_4C], ebp ;	int
		mov	dword ptr [esp+4Ch+var_40], eax	; char
		call	dbus_set_error
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DE1950
		xor	eax, eax
		jmp	loc_67DE7DB5
dbus_message_demarshal endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  91. dbus_get_version

; =============== S U B	R O U T	I N E =======================================


		public dbus_get_version
dbus_get_version proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	ecx, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	eax, [esp+arg_8]
		test	ecx, ecx
		jz	short loc_67DE7E96
		mov	dword ptr [ecx], 1

loc_67DE7E96:				; CODE XREF: dbus_get_version+Ej
		test	edx, edx
		jz	short loc_67DE7EA0
		mov	dword ptr [edx], 4

loc_67DE7EA0:				; CODE XREF: dbus_get_version+18j
		test	eax, eax
		jz	short locret_67DE7EAA
		mov	dword ptr [eax], 18h

locret_67DE7EAA:			; CODE XREF: dbus_get_version+22j
		rep retn
dbus_get_version endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  90. dbus_get_local_machine_id

; =============== S U B	R O U T	I N E =======================================


		public dbus_get_local_machine_id
dbus_get_local_machine_id proc near

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_24		= byte ptr -24h
var_10		= dword	ptr -10h

		push	ebx
		sub	esp, 38h
		lea	ebx, [esp+3Ch+var_24]
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DE7ED5
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE7ED5:				; CODE XREF: dbus_get_local_machine_id+1Ej
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DFB5D0
		test	eax, eax
		nop
		jz	short loc_67DE7F07
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E05F70
		test	eax, eax
		jz	short loc_67DE7F07
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E02BF0
		mov	eax, [esp+3Ch+var_10]
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DE7F07:				; CODE XREF: dbus_get_local_machine_id+30j
					; dbus_get_local_machine_id+44j
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E02BF0
		xor	eax, eax
		add	esp, 38h
		pop	ebx
		retn
dbus_get_local_machine_id endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE7F20	proc near		; CODE XREF: sub_67DE8580+64p
					; sub_67DEDF60+244p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_noncefil ; "_dbus_noncefile_get_path"
		mov	[esp+2Ch+var_20], 195h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aNoncefile ; "noncefile"
		call	sub_67DFAE70
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
sub_67DE7F20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE7F60	proc near		; CODE XREF: sub_67DE8580+A2p
					; .text:67DE8A1Fj

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= byte ptr -70h
var_6C		= dword	ptr -6Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_30		= dword	ptr -30h

		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 6Ch
		test	ecx, ecx
		mov	[esp+7Ch+var_50], edx
		mov	[esp+7Ch+var_54], ecx
		jz	loc_67DE80B0
		mov	[esp+7Ch+var_7C], ecx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DE80B0

loc_67DE7F8B:				; CODE XREF: sub_67DE7F60+155j
		mov	[esp+7Ch+var_7C], edx
		lea	ebp, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_6C], offset aDo_check_nonce ; "do_check_nonce"
		mov	dword ptr [esp+7Ch+var_70], 2Ah	; char
		mov	[esp+7Ch+var_74], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDb_12 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		lea	eax, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DE7FD8
		mov	[esp+7Ch+var_7C], ebp
		mov	edi, 10h
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DE8040

loc_67DE7FD8:				; CODE XREF: sub_67DE7F60+65j
		mov	edx, [esp+7Ch+var_54]
		mov	[esp+7Ch+var_74], 0 ; char *
		mov	[esp+7Ch+var_78], offset aOrg_freedes_36 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+7Ch+var_7C], edx ;	int
		call	dbus_set_error
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E02BF0
		lea	eax, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E02BF0
		add	esp, 6Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE8012:				; CODE XREF: sub_67DE7F60+F5j
		test	eax, eax
		jz	loc_67DE8120
		mov	[esp+7Ch+var_7C], ebp
		sub	edi, esi
		call	sub_67E01770
		lea	edx, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_74], esi ;	size_t
		mov	[esp+7Ch+var_7C], edx ;	int
		mov	[esp+7Ch+var_78], eax ;	void *
		call	sub_67E090D0

loc_67DE8038:				; CODE XREF: sub_67DE7F60+100j
		test	edi, edi
		jz	loc_67DE80D6

loc_67DE8040:				; CODE XREF: sub_67DE7F60+76j
					; sub_67DE7F60+170j
		mov	[esp+7Ch+var_74], edi ;	char
		mov	[esp+7Ch+var_78], ebp ;	int
		mov	[esp+7Ch+var_7C], ebx ;	SOCKET
		call	sub_67E0E140
		cmp	eax, 0FFFFFFFFh
		mov	esi, eax
		jnz	short loc_67DE8012
		call	sub_67E09460
		test	eax, eax
		xchg	ax, ax
		jnz	short loc_67DE8038
		call	sub_67E0B400
		test	eax, eax
		jnz	short loc_67DE80C0
		mov	eax, [esp+7Ch+var_54]
		mov	dword ptr [esp+7Ch+var_70], ebx	; char
		mov	[esp+7Ch+var_74], offset aCouldNotRead_0 ; "Could not read nonce from socket (fd=%d"...
		mov	[esp+7Ch+var_78], offset aOrg_freedes_62 ; "org.freedesktop.DBus.Error.IOError"
		mov	[esp+7Ch+var_7C], eax ;	int
		call	dbus_set_error
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E02BF0
		lea	edx, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_7C], edx
		call	sub_67E02BF0
		add	esp, 6Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE80B0:				; CODE XREF: sub_67DE7F60+13j
					; sub_67DE7F60+25j
		mov	edx, 1
		jmp	loc_67DE7F8B
; ---------------------------------------------------------------------------
		align 10h

loc_67DE80C0:				; CODE XREF: sub_67DE7F60+109j
		mov	[esp+7Ch+var_7C], 64h ;	DWORD
		call	sub_67E0B530
		test	edi, edi
		xchg	ax, ax
		jnz	loc_67DE8040

loc_67DE80D6:				; CODE XREF: sub_67DE7F60+DAj
		mov	eax, [esp+7Ch+var_50]
		lea	edx, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_74], 10h
		mov	[esp+7Ch+var_7C], edx
		mov	[esp+7Ch+var_78], eax
		call	sub_67DFF660
		test	eax, eax
		jz	short loc_67DE815E

loc_67DE80F6:				; CODE XREF: sub_67DE7F60+226j
		mov	[esp+7Ch+var_58], eax
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E02BF0
		lea	edx, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_7C], edx
		call	sub_67E02BF0
		mov	eax, [esp+7Ch+var_58]
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE8120:				; CODE XREF: sub_67DE7F60+B4j
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E02BF0
		lea	edx, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_7C], edx
		call	sub_67E02BF0
		mov	eax, [esp+7Ch+var_54]
		mov	dword ptr [esp+7Ch+var_70], ebx	; char
		mov	[esp+7Ch+var_74], offset aCouldNotRead_0 ; "Could not read nonce from socket (fd=%d"...
		mov	[esp+7Ch+var_78], offset aOrg_freedes_62 ; "org.freedesktop.DBus.Error.IOError"
		mov	[esp+7Ch+var_7C], eax ;	int
		call	dbus_set_error
		add	esp, 6Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE815E:				; CODE XREF: sub_67DE7F60+194j
		mov	edx, [esp+7Ch+var_54]
		mov	[esp+7Ch+var_58], eax
		mov	dword ptr [esp+7Ch+var_70], ebx	; char
		mov	[esp+7Ch+var_74], offset aNoncesDoNotMat ; "Nonces do not match, access	denied (fd="...
		mov	[esp+7Ch+var_78], offset aOrg_freedes_63 ; "org.freedesktop.DBus.Error.AccessDenied"
		mov	[esp+7Ch+var_7C], edx ;	int
		call	dbus_set_error
		mov	eax, [esp+7Ch+var_58]
		jmp	loc_67DE80F6
sub_67DE7F60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE8190	proc near		; CODE XREF: sub_67DEDF60+42Ep
					; sub_67DEE5E0+78p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		test	esi, esi
		jz	short loc_67DE8201
		mov	[esp+2Ch+var_2C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DE8201

loc_67DE81AF:				; CODE XREF: sub_67DE8190+76j
		mov	[esp+2Ch+var_2C], edx
		mov	[esp+2Ch+var_1C], offset a_dbus_noncef_0 ; "_dbus_noncefile_delete"
		mov	[esp+2Ch+var_20], 15Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aErrorNullDb_12 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0C520
		lea	eax, [ebx+14h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E02BF0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E02BF0
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DE8201:				; CODE XREF: sub_67DE8190+Fj
					; sub_67DE8190+1Dj
		mov	edx, 1
		jmp	short loc_67DE81AF
sub_67DE8190	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE8210	proc near		; CODE XREF: sub_67DE8390+A6p
					; sub_67DE8580+78p

Filename	= dword	ptr -6Ch
Mode		= dword	ptr -68h
Count		= dword	ptr -64h
File		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_40		= dword	ptr -40h
DstBuf		= byte ptr -2Dh
var_1D		= byte ptr -1Dh
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 6Ch
		mov	[esp+6Ch+var_8], edi
		mov	edi, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_C], esi
		mov	esi, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_10], ebx
		mov	[esp+6Ch+var_4], ebp
		test	edi, edi
		mov	[esp+6Ch+var_1D], 0
		jz	loc_67DE8330
		mov	[esp+6Ch+Filename], edi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DE8330

loc_67DE824A:				; CODE XREF: sub_67DE8210+125j
		mov	[esp+6Ch+Filename], edx
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_read_non ; "_dbus_read_nonce"
		mov	[esp+6Ch+File],	6Dh
		mov	[esp+6Ch+Count], offset	aRBuildWin32_13	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Mode],	offset aErrorNullDb_12 ; "(error) == NULL || !dbus_error_is_set	("...
		call	sub_67DFAE70
		mov	[esp+6Ch+Filename], esi
		call	sub_67E01770
		mov	[esp+6Ch+File],	offset aReadingNonceFr ; "reading nonce	from file: %s\n"
		mov	[esp+6Ch+Count], offset	a_dbus_read_non	; "_dbus_read_nonce"
		mov	[esp+6Ch+Mode],	6Fh ; int
		mov	[esp+6Ch+Filename], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		call	sub_67DFABC0
		mov	[esp+6Ch+Filename], esi
		call	sub_67E01770
		mov	[esp+6Ch+Mode],	offset Mode ; "rb"
		mov	[esp+6Ch+Filename], eax	; Filename
		call	fopen
		mov	ebx, eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_67DE8319
		lea	ebp, [esp+6Ch+DstBuf]
		mov	[esp+6Ch+File],	ebx ; char
		mov	[esp+6Ch+Count], 10h ; Count
		mov	[esp+6Ch+Mode],	1 ; ElementSize
		mov	[esp+6Ch+Filename], ebp	; DstBuf
		call	fread
		mov	[esp+6Ch+Filename], ebx	; File
		mov	[esp+6Ch+var_40], eax
		call	fclose
		mov	edx, [esp+6Ch+var_40]
		test	edx, edx
		jz	short loc_67DE8340
		mov	eax, [esp+6Ch+arg_4]
		mov	[esp+6Ch+Count], 10h ; size_t
		mov	[esp+6Ch+Mode],	ebp ; void *
		mov	[esp+6Ch+Filename], eax	; int
		call	sub_67E090D0
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jz	short loc_67DE8368

loc_67DE8319:				; CODE XREF: sub_67DE8210+B0j
					; sub_67DE8210+156j ...
		mov	ebx, [esp+6Ch+var_10]
		mov	esi, [esp+6Ch+var_C]
		mov	edi, [esp+6Ch+var_8]
		mov	ebp, [esp+6Ch+var_4]
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE8330:				; CODE XREF: sub_67DE8210+22j
					; sub_67DE8210+34j
		mov	edx, 1
		jmp	loc_67DE824A
; ---------------------------------------------------------------------------
		align 10h

loc_67DE8340:				; CODE XREF: sub_67DE8210+E4j
		mov	[esp+6Ch+Filename], esi
		call	sub_67E01770
		mov	[esp+6Ch+Count], offset	aCouldNotReadNo	; "Could not read nonce	from file %s"
		mov	[esp+6Ch+Mode],	offset aOrg_freedes_61 ; "org.freedesktop.DBus.Error.FileNotFound"
		mov	[esp+6Ch+Filename], edi	; int
		mov	[esp+6Ch+File],	eax ; char
		call	dbus_set_error
		xor	eax, eax
		jmp	short loc_67DE8319
; ---------------------------------------------------------------------------

loc_67DE8368:				; CODE XREF: sub_67DE8210+107j
		mov	[esp+6Ch+Count], 0 ; char *
		mov	[esp+6Ch+Mode],	offset aOrg_freedes_36 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+6Ch+Filename], edi	; int
		call	dbus_set_error
		xor	eax, eax
		jmp	short loc_67DE8319
sub_67DE8210	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DE8390(SOCKET, int,	int)
sub_67DE8390	proc near		; CODE XREF: sub_67E10680+202p

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= byte ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 5Ch
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_C], esi
		mov	esi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4], ebp
		mov	ebp, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_8], edi
		test	ebx, ebx
		jz	short loc_67DE8410
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DE8410

loc_67DE83C1:				; CODE XREF: sub_67DE8390+85j
		mov	[esp+5Ch+var_5C], edx
		mov	[esp+5Ch+var_4C], offset a_dbus_send_non ; "_dbus_send_nonce"
		mov	dword ptr [esp+5Ch+var_50], 0CAh ; char
		mov	[esp+5Ch+var_54], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_12 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E00CE0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DE8417

loc_67DE83F9:				; CODE XREF: sub_67DE8390+FBj
					; sub_67DE8390+179j ...
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE8410:				; CODE XREF: sub_67DE8390+21j
					; sub_67DE8390+2Fj
		mov	edx, 1
		jmp	short loc_67DE83C1
; ---------------------------------------------------------------------------

loc_67DE8417:				; CODE XREF: sub_67DE8390+67j
		lea	edi, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DE8550
		mov	[esp+5Ch+var_54], ebx
		mov	[esp+5Ch+var_58], edi
		mov	[esp+5Ch+var_5C], esi
		call	sub_67DE8210
		test	eax, eax
		jnz	short loc_67DE8490
		test	ebx, ebx
		jz	loc_67DE8570
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67DE8570

loc_67DE8459:				; CODE XREF: sub_67DE8390+1E5j
		mov	[esp+5Ch+var_5C], edx
		mov	[esp+5Ch+var_4C], offset a_dbus_send_non ; "_dbus_send_nonce"
		mov	dword ptr [esp+5Ch+var_50], 0D8h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_13 ; "(error) == NULL || dbus_error_is_set (("...
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67DE83F9
; ---------------------------------------------------------------------------

loc_67DE8490:				; CODE XREF: sub_67DE8390+ADj
		test	ebx, ebx
		jz	loc_67DE8540
		mov	[esp+5Ch+var_5C], ebx
		nop
		lea	esi, [esi+0]
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DE8540

loc_67DE84AF:				; CODE XREF: sub_67DE8390+1B5j
		mov	[esp+5Ch+var_5C], edx
		mov	[esp+5Ch+var_4C], offset a_dbus_send_non ; "_dbus_send_nonce"
		mov	dword ptr [esp+5Ch+var_50], 0DCh
		mov	[esp+5Ch+var_54], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_12 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E00CE0
		mov	[esp+5Ch+var_54], 0 ; int
		mov	[esp+5Ch+var_58], edi ;	int
		mov	[esp+5Ch+var_5C], ebp ;	SOCKET
		mov	dword ptr [esp+5Ch+var_50], eax	; char
		call	sub_67E0E020
		mov	[esp+5Ch+var_5C], edi
		mov	esi, eax
		call	sub_67E02BF0
		cmp	esi, 0FFFFFFFFh
		mov	eax, 1
		jnz	loc_67DE83F9
		call	sub_67E094E0
		mov	esi, eax
		call	sub_67E09DE0
		mov	[esp+5Ch+var_4C], esi
		mov	dword ptr [esp+5Ch+var_50], ebp	; char
		mov	[esp+5Ch+var_54], offset aFailedToSendNo ; "Failed to send nonce (fd=%d): %s"
		mov	[esp+5Ch+var_5C], ebx ;	int
		mov	[esp+5Ch+var_58], eax ;	char *
		call	dbus_set_error
		xor	eax, eax
		jmp	loc_67DE83F9
; ---------------------------------------------------------------------------
		align 10h

loc_67DE8540:				; CODE XREF: sub_67DE8390+102j
					; sub_67DE8390+119j
		mov	edx, 1
		jmp	loc_67DE84AF
; ---------------------------------------------------------------------------
		align 10h

loc_67DE8550:				; CODE XREF: sub_67DE8390+95j
		mov	[esp+5Ch+var_54], 0 ; char *
		mov	[esp+5Ch+var_58], offset aOrg_freedes_36 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+5Ch+var_5C], ebx ;	int
		call	dbus_set_error
		xor	eax, eax
		jmp	loc_67DE83F9
; ---------------------------------------------------------------------------
		align 10h

loc_67DE8570:				; CODE XREF: sub_67DE8390+B1j
					; sub_67DE8390+C3j
		mov	edx, 1
		jmp	loc_67DE8459
sub_67DE8390	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DE8580(SOCKET, int)
sub_67DE8580	proc near		; CODE XREF: sub_67DEE790+15Ap

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_20		= byte ptr -20h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 4Ch
		xor	eax, eax
		mov	[esp+4Ch+var_8], ebx
		mov	ebx, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_4], esi
		lea	esi, [esp+4Ch+var_20]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_accept_w ; "_dbus_accept_with_noncefile"
		mov	[esp+4Ch+Format], 8Bh
		test	ebx, ebx
		setnz	al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_44], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aNoncefileNull	; "noncefile !=	NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DE85E1

loc_67DE85CE:				; CODE XREF: sub_67DE8580+80j
		mov	ebx, 0FFFFFFFFh

loc_67DE85D3:				; CODE XREF: sub_67DE8580+9Aj
					; sub_67DE8580+AAj ...
		mov	eax, ebx
		mov	esi, [esp+4Ch+var_4]
		mov	ebx, [esp+4Ch+var_8]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE85E1:				; CODE XREF: sub_67DE8580+4Cj
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DE7F20
		mov	[esp+4Ch+var_44], 0
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DE8210
		cmp	eax, 1
		jnz	short loc_67DE85CE
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_4C], eax ;	SOCKET
		call	sub_67E0CBF0
		mov	ebx, eax
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E0AB60
		test	eax, eax
		jnz	short loc_67DE85D3
		xor	ecx, ecx
		mov	edx, esi
		mov	eax, ebx
		call	sub_67DE7F60
		cmp	eax, 1
		jz	short loc_67DE85D3
		mov	[esp+4Ch+Format], offset aNonceCheckFail ; "nonce check	failed.	Closing	socket.\n"
		mov	[esp+4Ch+var_44], offset a_dbus_accept_w ; "_dbus_accept_with_noncefile"
		mov	[esp+4Ch+var_48], 95h ;	int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+var_4C], ebx ;	SOCKET
		or	ebx, 0FFFFFFFFh
		mov	[esp+4Ch+var_48], 0 ; int
		call	sub_67E0CC70
		jmp	loc_67DE85D3
sub_67DE8580	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE8670	proc near		; CODE XREF: sub_67DEDF60+21Cp

var_7C		= dword	ptr -7Ch
dwLen		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= byte ptr -70h
var_6C		= dword	ptr -6Ch
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_30		= dword	ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 7Ch
		mov	[esp+7Ch+var_C], esi
		mov	esi, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_10], ebx
		mov	ebx, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_8], edi
		mov	[esp+7Ch+var_4], ebp
		test	esi, esi
		jz	loc_67DE8770
		mov	[esp+7Ch+var_7C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DE8770

loc_67DE86AB:				; CODE XREF: sub_67DE8670+105j
		mov	[esp+7Ch+var_7C], edx
		lea	edi, [esp+7Ch+var_30]
		mov	[esp+7Ch+var_6C], offset aDo_noncefile_c ; "do_noncefile_create"
		mov	dword ptr [esp+7Ch+var_70], 0F6h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+dwLen], offset	aErrorNullDb_12	; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_6C], offset aDo_noncefile_c ; "do_noncefile_create"
		mov	dword ptr [esp+7Ch+var_70], 0F8h ; char
		mov	[esp+7Ch+var_74], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+dwLen], offset	aNoncefile ; "noncefile"
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DE8726
		mov	[esp+7Ch+dwLen], 8 ; DWORD
		mov	[esp+7Ch+var_7C], edi ;	int
		call	sub_67E09500
		test	eax, eax
		jnz	short loc_67DE8780

loc_67DE8726:				; CODE XREF: sub_67DE8670+A0j
		mov	[esp+7Ch+var_74], 0 ; char *
		lea	ebp, [ebx+14h]
		mov	[esp+7Ch+dwLen], offset	aOrg_freedes_36	; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+7Ch+var_7C], esi ;	int
		call	dbus_set_error

loc_67DE8741:				; CODE XREF: sub_67DE8670+2BCj
					; sub_67DE8670+318j
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E02BF0
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67E02BF0
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E02BF0
		xor	eax, eax

loc_67DE875B:				; CODE XREF: sub_67DE8670+29Fj
		mov	ebx, [esp+7Ch+var_10]
		mov	esi, [esp+7Ch+var_C]
		mov	edi, [esp+7Ch+var_8]
		mov	ebp, [esp+7Ch+var_4]
		add	esp, 7Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE8770:				; CODE XREF: sub_67DE8670+23j
					; sub_67DE8670+35j
		mov	edx, 1
		jmp	loc_67DE86AB
; ---------------------------------------------------------------------------
		align 10h

loc_67DE8780:				; CODE XREF: sub_67DE8670+B4j
		lea	ebp, [ebx+14h]
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DE8914
		call	sub_67E0C5D0
		mov	[esp+7Ch+var_7C], ebp ;	int
		mov	[esp+7Ch+dwLen], eax ; char *
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DE8914
		mov	[esp+7Ch+var_7C], ebx
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DE8914
		mov	dword ptr [esp+7Ch+var_70], 0
		mov	[esp+7Ch+var_74], ebx
		mov	[esp+7Ch+dwLen], 0
		mov	[esp+7Ch+var_7C], ebp
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DE8914
		mov	[esp+7Ch+dwLen], offset	aDbus_nonce ; "/dbus_nonce-"
		mov	[esp+7Ch+var_7C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DE8914
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E01770
		mov	[esp+7Ch+var_7C], ebx ;	int
		mov	[esp+7Ch+dwLen], eax ; char *
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DE8914
		test	esi, esi
		jz	short loc_67DE882B
		mov	[esp+7Ch+var_7C], esi
		nop
		lea	esi, [esi+0]
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DE8830

loc_67DE882B:				; CODE XREF: sub_67DE8670+1A6j
		mov	edx, 1

loc_67DE8830:				; CODE XREF: sub_67DE8670+1B9j
		mov	[esp+7Ch+var_7C], edx
		mov	[esp+7Ch+var_6C], offset aGenerate_and_w ; "generate_and_write_nonce"
		mov	dword ptr [esp+7Ch+var_70], 0A3h ; char
		mov	[esp+7Ch+var_74], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+dwLen], offset	aErrorNullDb_12	; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		lea	eax, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DE8931
		lea	edx, [esp+7Ch+var_44]
		mov	[esp+7Ch+dwLen], 10h ; dwLen
		mov	[esp+7Ch+var_7C], edx ;	int
		call	sub_67E0C6A0
		test	eax, eax
		jz	loc_67DE8997
		lea	edx, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_7C], edx
		mov	dword ptr [esp+7Ch+var_70], esi
		mov	[esp+7Ch+var_74], 0
		mov	[esp+7Ch+dwLen], ebx
		call	sub_67E0A200
		lea	edx, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_7C], edx
		mov	[esp+7Ch+var_50], eax
		call	sub_67E02BF0
		mov	eax, [esp+7Ch+var_50]
		test	eax, eax
		jz	loc_67DE8949
		test	esi, esi
		jz	loc_67DE898D
		mov	[esp+7Ch+var_7C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DE898D

loc_67DE88DA:				; CODE XREF: sub_67DE8670+322j
		mov	[esp+7Ch+var_7C], edx
		mov	[esp+7Ch+var_6C], offset aDo_noncefile_c ; "do_noncefile_create"
		mov	dword ptr [esp+7Ch+var_70], 137h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+dwLen], offset	aErrorNullDb_12	; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], edi
		call	sub_67E02BF0
		mov	eax, 1
		jmp	loc_67DE875B
; ---------------------------------------------------------------------------

loc_67DE8914:				; CODE XREF: sub_67DE8670+11Dj
					; sub_67DE8670+136j ...
		mov	[esp+7Ch+var_74], 0 ; char *
		mov	[esp+7Ch+dwLen], offset	aOrg_freedes_36	; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+7Ch+var_7C], esi ;	int
		call	dbus_set_error
		jmp	loc_67DE8741
; ---------------------------------------------------------------------------

loc_67DE8931:				; CODE XREF: sub_67DE8670+1F6j
		mov	[esp+7Ch+var_74], 0 ; char *
		mov	[esp+7Ch+dwLen], offset	aOrg_freedes_36	; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+7Ch+var_7C], esi ;	int
		call	dbus_set_error

loc_67DE8949:				; CODE XREF: sub_67DE8670+24Aj
					; sub_67DE8670+34Bj
		test	esi, esi
		jz	short loc_67DE895B
		mov	[esp+7Ch+var_7C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DE8960

loc_67DE895B:				; CODE XREF: sub_67DE8670+2DBj
		mov	edx, 1

loc_67DE8960:				; CODE XREF: sub_67DE8670+2E9j
		mov	[esp+7Ch+var_6C], offset aDo_noncefile_c ; "do_noncefile_create"
		mov	dword ptr [esp+7Ch+var_70], 132h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+dwLen], offset	aErrorNullDb_13	; "(error) == NULL || dbus_error_is_set	(("...
		mov	[esp+7Ch+var_7C], edx
		call	sub_67DFAE70
		jmp	loc_67DE8741
; ---------------------------------------------------------------------------

loc_67DE898D:				; CODE XREF: sub_67DE8670+252j
					; sub_67DE8670+264j
		mov	edx, 1
		jmp	loc_67DE88DA
; ---------------------------------------------------------------------------

loc_67DE8997:				; CODE XREF: sub_67DE8670+212j
		mov	[esp+7Ch+var_74], 0 ; char *
		mov	[esp+7Ch+dwLen], offset	aOrg_freedes_36	; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+7Ch+var_7C], esi ;	int
		call	dbus_set_error
		lea	eax, [esp+7Ch+var_44]
		mov	[esp+7Ch+var_7C], eax
		call	sub_67E02BF0
		jmp	short loc_67DE8949
sub_67DE8670	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		xor	eax, eax
		mov	[esp+24h], esi
		mov	esi, [esp+34h]
		mov	[esp+20h], ebx
		mov	ebx, [esp+30h]
		mov	[esp+28h], edi
		mov	edi, [esp+38h]
		mov	dword ptr [esp+10h], offset a_dbus_noncefil ; "_dbus_noncefile_get_path"
		test	esi, esi
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+0Ch], 195h
		mov	dword ptr [esp+8], offset aRBuildWin32_13 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aNoncefile ; "noncefile"
		call	sub_67DFAE70
		mov	ecx, edi
		mov	edx, esi
		mov	eax, ebx
		mov	esi, [esp+24h]
		mov	ebx, [esp+20h]
		mov	edi, [esp+28h]
		add	esp, 2Ch
		jmp	sub_67DE7F60
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_object_8 ; "_dbus_object_tree_ref"
		mov	dword ptr [esp+0Ch], 83h
		mov	dword ptr [esp+8], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aTreeRefcount0 ; "tree->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, ebx
		add	dword ptr [ebx], 1
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE8A80	proc near		; CODE XREF: dbus_connection_list_registered+134p
					; dbus_connection_get_object_path_data+D3p ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		cmp	[esp+5Ch+arg_0], 0
		mov	esi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4C], offset a_dbus_decompos ; "_dbus_decompose_path"
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_50], 443h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aDataNull_0 ; "data !=	NULL"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	[esp+5Ch+arg_8], 0
		mov	[esp+5Ch+var_4C], offset a_dbus_decompos ; "_dbus_decompose_path"
		mov	[esp+5Ch+var_50], 444h
		setnz	al
		xor	ebx, ebx
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aPathNull_1 ; "path !=	NULL"
		call	sub_67DFAE70
		cmp	esi, 1
		mov	eax, 4
		mov	[esp+5Ch+var_24], 0
		jle	short loc_67DE8B60
		mov	ebp, [esp+5Ch+arg_0]
		xor	edi, edi
		lea	esi, [esi+0]

loc_67DE8B10:				; CODE XREF: sub_67DE8A80+D3j
		mov	[esp+5Ch+var_4C], offset a_dbus_decompos ; "_dbus_decompose_path"
		xor	eax, eax
		mov	[esp+5Ch+var_50], 451h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aDataI0 ; "data[i] != '\\0'"
		cmp	byte ptr [ebp+ebx+0], 0
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		xor	eax, eax
		cmp	byte ptr [ebp+ebx+0], 2Fh
		setz	al
		add	ebx, 1
		add	edi, eax
		cmp	esi, ebx
		jg	short loc_67DE8B10
		mov	[esp+5Ch+var_24], edi
		lea	eax, ds:4[edi*4]

loc_67DE8B60:				; CODE XREF: sub_67DE8A80+81j
		mov	[esp+5Ch+var_5C], eax ;	size_t
		call	dbus_malloc0
		mov	[esp+5Ch+var_20], eax
		mov	ebx, [esp+5Ch+var_20]
		xor	eax, eax
		test	ebx, ebx
		jz	loc_67DE8D49
		mov	ecx, [esp+5Ch+var_24]
		xor	ebp, ebp
		mov	ebx, 1
		mov	[esp+5Ch+var_2C], 0
		test	ecx, ecx
		jz	loc_67DE8CF4

loc_67DE8B95:				; CODE XREF: sub_67DE8A80+26Ej
		xor	eax, eax
		cmp	ebp, esi
		setl	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_decompos ; "_dbus_decompose_path"
		mov	[esp+5Ch+var_50], 464h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aILen ; "i < len"
		call	sub_67DFAE70
		mov	eax, [esp+5Ch+arg_0]
		add	eax, ebp
		mov	[esp+5Ch+var_30], eax
		cmp	byte ptr [eax],	2Fh
		jz	loc_67DE8DD0
		cmp	ebp, esi
		jge	loc_67DE8DE5

loc_67DE8BDF:				; CODE XREF: sub_67DE8A80+35Fj
		mov	ecx, [esp+5Ch+var_30]
		cmp	byte ptr [ecx],	2Fh
		jz	loc_67DE8E2A
		mov	edx, [esp+5Ch+arg_0]
		mov	ebx, ebp
		lea	eax, [edx+ebp+1]
		jmp	short loc_67DE8C09
; ---------------------------------------------------------------------------

loc_67DE8BF8:				; CODE XREF: sub_67DE8A80+18Ej
		movzx	edx, byte ptr [eax]
		mov	edi, eax
		lea	eax, [eax+1]
		cmp	dl, 2Fh
		jz	loc_67DE8D51

loc_67DE8C09:				; CODE XREF: sub_67DE8A80+176j
		add	ebx, 1
		cmp	esi, ebx
		jg	short loc_67DE8BF8
		xor	eax, eax
		mov	edi, ebx
		cmp	ebp, ebx
		setl	al
		sub	edi, ebp
		lea	ecx, [edi+1]
		mov	[esp+5Ch+var_28], ecx

loc_67DE8C22:				; CODE XREF: sub_67DE8A80+373j
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_decompos ; "_dbus_decompose_path"
		mov	[esp+5Ch+var_50], 46Eh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aIJ ; "i < j"
		call	sub_67DFAE70
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_4C], offset a_dbus_decompos ; "_dbus_decompose_path"
		mov	[esp+5Ch+var_50], 46Fh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aDataI	; "data[i] != '/'"
		cmp	byte ptr [eax],	2Fh
		setnz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		cmp	ebx, esi
		mov	eax, 1
		jnz	loc_67DE8DF8

loc_67DE8C8C:				; CODE XREF: sub_67DE8A80+346j
					; sub_67DE8A80+393j
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_decompos ; "_dbus_decompose_path"
		mov	[esp+5Ch+var_50], 470h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aJLenDataJ ; "j == len	|| data[j] == '/'"
		call	sub_67DFAE70
		mov	edx, [esp+5Ch+var_30]
		mov	eax, [esp+5Ch+var_28]
		mov	[esp+5Ch+var_5C], edx ;	void *
		mov	[esp+5Ch+var_58], eax ;	size_t
		call	sub_67DFAA20
		mov	ecx, [esp+5Ch+var_2C]
		mov	edx, [esp+5Ch+var_20]
		test	eax, eax
		mov	[edx+ecx*4], eax
		jz	loc_67DE8E18
		mov	byte ptr [eax+edi], 0
		mov	ebp, ebx
		add	[esp+5Ch+var_2C], 1
		mov	ecx, [esp+5Ch+var_2C]
		cmp	[esp+5Ch+var_24], ecx
		jg	loc_67DE8B95

loc_67DE8CF4:				; CODE XREF: sub_67DE8A80+10Fj
		xor	eax, eax
		cmp	ebx, esi
		setz	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_decompos ; "_dbus_decompose_path"
		mov	[esp+5Ch+var_50], 486h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aILen_0 ; "i == len"
		call	sub_67DFAE70
		mov	edx, [esp+5Ch+var_20]
		mov	eax, [esp+5Ch+arg_8]
		mov	[eax], edx
		mov	edx, [esp+5Ch+arg_C]
		mov	eax, 1
		test	edx, edx
		jz	short loc_67DE8D49
		mov	eax, [esp+5Ch+var_24]
		mov	ecx, [esp+5Ch+arg_C]
		mov	[ecx], eax
		mov	eax, 1

loc_67DE8D49:				; CODE XREF: sub_67DE8A80+F4j
					; sub_67DE8A80+2B8j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE8D51:				; CODE XREF: sub_67DE8A80+183j
		xor	eax, eax
		cmp	ebp, ebx
		setl	al

loc_67DE8D58:				; CODE XREF: sub_67DE8A80+3B0j
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_decompos ; "_dbus_decompose_path"
		mov	[esp+5Ch+var_50], 46Eh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aIJ ; "i < j"
		call	sub_67DFAE70
		mov	edx, [esp+5Ch+var_30]
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset a_dbus_decompos ; "_dbus_decompose_path"
		mov	[esp+5Ch+var_50], 46Fh
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aDataI	; "data[i] != '/'"
		cmp	byte ptr [edx],	2Fh
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		cmp	byte ptr [edi],	2Fh
		jz	short loc_67DE8E03

loc_67DE8DB9:				; CODE XREF: sub_67DE8A80+381j
		mov	edi, ebx
		xor	eax, eax
		sub	edi, ebp
		lea	ecx, [edi+1]
		mov	[esp+5Ch+var_28], ecx
		jmp	loc_67DE8C8C
; ---------------------------------------------------------------------------
		align 10h

loc_67DE8DD0:				; CODE XREF: sub_67DE8A80+151j
		mov	edx, [esp+5Ch+arg_0]
		add	ebp, 1
		add	edx, ebp
		cmp	ebp, esi
		mov	[esp+5Ch+var_30], edx
		jl	loc_67DE8BDF

loc_67DE8DE5:				; CODE XREF: sub_67DE8A80+159j
		mov	ebx, ebp
		xor	edi, edi
		mov	[esp+5Ch+var_28], 1
		xor	eax, eax
		jmp	loc_67DE8C22
; ---------------------------------------------------------------------------

loc_67DE8DF8:				; CODE XREF: sub_67DE8A80+206j
		mov	edi, [esp+5Ch+arg_0]
		add	edi, ebx
		cmp	byte ptr [edi],	2Fh
		jnz	short loc_67DE8DB9

loc_67DE8E03:				; CODE XREF: sub_67DE8A80+337j
		mov	edi, ebx
		mov	eax, 1
		sub	edi, ebp
		lea	edx, [edi+1]
		mov	[esp+5Ch+var_28], edx
		jmp	loc_67DE8C8C
; ---------------------------------------------------------------------------

loc_67DE8E18:				; CODE XREF: sub_67DE8A80+255j
		mov	[esp+5Ch+var_5C], edx
		call	dbus_free_string_array
		add	esp, 4Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE8E2A:				; CODE XREF: sub_67DE8A80+166j
		mov	edi, ecx
		mov	ebx, ebp
		xor	eax, eax
		jmp	loc_67DE8D58
sub_67DE8A80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE8E40	proc near		; CODE XREF: sub_67DE9080+2D8p
					; sub_67DE9510+2CDp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, eax
		mov	[esp+2Ch+var_4], esi
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E0B440
		mov	[esp+2Ch+var_1C], offset a_dbus_object_0 ; "_dbus_object_subtree_unref"
		mov	[esp+2Ch+var_20], 3FFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aOld_value0_0 ; "old_value > 0"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		cmp	esi, 1
		jz	short loc_67DE8E97
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE8E97:				; CODE XREF: sub_67DE8E40+49j
		mov	[esp+2Ch+var_1C], offset a_dbus_object_0 ; "_dbus_object_subtree_unref"
		xor	eax, eax
		mov	[esp+2Ch+var_20], 403h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSubtreeUnregis ; "subtree->unregister_function == NULL"
		cmp	dword ptr [ebx+8], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_object_0 ; "_dbus_object_subtree_unref"
		mov	[esp+2Ch+var_20], 404h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSubtreeMessage ; "subtree->message_function == NULL"
		cmp	dword ptr [ebx+0Ch], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+14h]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_free
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DE8E40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE8F20	proc near		; CODE XREF: sub_67DE9030+28p
					; sub_67DE9080+F2p

Str		= dword	ptr -3Ch
Src		= dword	ptr -38h
Size		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 3Ch
		test	eax, eax
		mov	[esp+3Ch+var_C], esi
		mov	esi, eax
		setnz	al
		mov	[esp+3Ch+var_8], edi
		movzx	edi, al
		mov	[esp+3Ch+var_4], ebp
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_2C], offset aAllocate_subtr ; "allocate_subtree_object"
		mov	[esp+3Ch+var_30], 3B5h
		mov	[esp+3Ch+Size],	offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aNameNull_2 ; "name != NULL"
		mov	[esp+3Ch+Str], edi
		call	sub_67DFAE70
		mov	[esp+3Ch+Str], esi ; Str
		call	strlen
		mov	ebp, eax
		lea	eax, [eax+22h]
		cmp	eax, 24h
		jb	loc_67DE901A

loc_67DE8F7B:				; CODE XREF: sub_67DE8F20+FFj
		mov	[esp+3Ch+Str], eax ; size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DE9004
		lea	eax, [eax+21h]
		add	ebp, 1
		mov	[esp+3Ch+Size],	ebp ; Size
		mov	[esp+3Ch+Src], esi ; Src
		mov	[esp+3Ch+Str], eax ; Dst
		call	memcpy
		mov	[esp+3Ch+var_2C], offset a_dbus_object_s ; "_dbus_object_subtree_new"
		mov	[esp+3Ch+var_30], 3CEh
		mov	[esp+3Ch+Size],	offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aNameNull_2 ; "name != NULL"
		mov	[esp+3Ch+Str], edi
		call	sub_67DFAE70
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx+0Ch], 0
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [ebx+10h], 0
		mov	[esp+3Ch+Str], ebx
		call	sub_67E0B460
		and	byte ptr [ebx+20h], 0FEh
		mov	dword ptr [ebx+14h], 0
		mov	dword ptr [ebx+18h], 0
		mov	dword ptr [ebx+1Ch], 0

loc_67DE9004:				; CODE XREF: sub_67DE8F20+67j
		mov	eax, ebx
		mov	esi, [esp+3Ch+var_C]
		mov	ebx, [esp+3Ch+var_10]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DE901A:				; CODE XREF: sub_67DE8F20+55j
		mov	eax, 24h
		jmp	loc_67DE8F7B
sub_67DE8F20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE9030	proc near		; CODE XREF: sub_67DCCE40+14Dp

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	[esp+1Ch+var_1C], 0Ch ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DE9068
		mov	dword ptr [eax], 1
		mov	eax, [esp+1Ch+arg_0]
		mov	[ebx+4], eax
		mov	eax, offset asc_67E25457 ; "/"
		call	sub_67DE8F20
		test	eax, eax
		mov	[ebx+8], eax
		jz	short loc_67DE9070
		or	byte ptr [eax+20h], 1

loc_67DE9068:				; CODE XREF: sub_67DE9030+14j
					; sub_67DE9030+4Aj
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DE9070:				; CODE XREF: sub_67DE9030+32j
		mov	[esp+1Ch+var_1C], ebx
		xor	ebx, ebx
		call	dbus_free
		jmp	short loc_67DE9068
sub_67DE9030	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE9080	proc near		; CODE XREF: sub_67DE9080+29Bp
					; sub_67DE9370+87p ...

Str1		= dword	ptr -6Ch
Str2		= dword	ptr -68h
Size		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	[esp+6Ch+var_34], eax
		xor	eax, eax
		cmp	[esp+6Ch+arg_4], 0
		mov	[esp+6Ch+var_24], ecx
		setnz	al
		test	eax, eax
		mov	[esp+6Ch+var_20], eax
		setz	al
		test	ecx, ecx
		setz	cl
		add	edx, 4
		mov	ebx, ecx
		or	ebx, eax
		mov	eax, edx
		and	ebx, 1
		mov	[esp+6Ch+var_2C], ebx
		mov	[esp+6Ch+var_30], edx
		nop
		lea	esi, [esi+0]

loc_67DE90C0:				; CODE XREF: sub_67DE9080+1C2j
		mov	edx, [esp+6Ch+var_2C]
		sub	eax, 4
		mov	[esp+6Ch+var_28], eax
		mov	[esp+6Ch+var_5C], offset aFind_subtree_r ; "find_subtree_recurse"
		mov	[esp+6Ch+var_60], 0AEh
		mov	[esp+6Ch+Size],	offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Str2],	offset aReturn_deepest ; "!(return_deepest_match && create_if_not"...
		mov	[esp+6Ch+Str1],	edx
		call	sub_67DFAE70
		mov	ecx, [esp+6Ch+var_30]
		mov	ecx, [ecx-4]
		test	ecx, ecx
		mov	[esp+6Ch+var_3C], ecx
		jz	loc_67DE92B5
		mov	eax, [esp+6Ch+var_34]
		xor	ebp, ebp
		mov	edi, [eax+18h]
		cmp	edi, ebp
		jle	short loc_67DE9162

loc_67DE9113:				; CODE XREF: sub_67DE9080+E0j
		mov	edx, [esp+6Ch+var_34]
		mov	edx, [edx+14h]
		mov	[esp+6Ch+var_40], edx
		jmp	short loc_67DE9126
; ---------------------------------------------------------------------------

loc_67DE9120:				; CODE XREF: sub_67DE9080+D9j
		cmp	esi, ebp
		mov	edi, esi
		jle	short loc_67DE9162

loc_67DE9126:				; CODE XREF: sub_67DE9080+9Ej
		mov	eax, [esp+6Ch+var_40]
		lea	esi, [edi+ebp]
		sar	esi, 1
		mov	edx, [esp+6Ch+var_3C]
		lea	ecx, ds:0[esi*4]
		mov	[esp+6Ch+var_38], ecx
		mov	ebx, [eax+esi*4]
		mov	[esp+6Ch+Str1],	edx ; Str1
		lea	eax, [ebx+21h]
		mov	[esp+6Ch+Str2],	eax ; Str2
		call	strcmp
		cmp	eax, 0
		jz	loc_67DE9247
		jl	short loc_67DE9120
		lea	ebp, [esi+1]
		cmp	edi, ebp
		jg	short loc_67DE9113

loc_67DE9162:				; CODE XREF: sub_67DE9080+91j
					; sub_67DE9080+A4j
		mov	eax, [esp+6Ch+var_24]
		test	eax, eax
		jz	loc_67DE92D3
		mov	eax, [esp+6Ch+var_3C]
		call	sub_67DE8F20
		test	eax, eax
		mov	esi, eax
		jz	loc_67DE92EB
		mov	ebx, [esp+6Ch+var_34]
		mov	eax, [esp+6Ch+var_34]
		mov	ebx, [ebx+18h]
		mov	edi, [eax+1Ch]
		mov	[esp+6Ch+var_40], ebx
		add	ebx, 1
		cmp	ebx, edi
		jle	short loc_67DE91D0
		test	edi, edi
		jnz	loc_67DE92A7
		mov	eax, 4
		mov	di, 1

loc_67DE91AB:				; CODE XREF: sub_67DE9080+230j
		mov	edx, [esp+6Ch+var_34]
		mov	[esp+6Ch+Str2],	eax ; NewSize
		mov	eax, [edx+14h]
		mov	[esp+6Ch+Str1],	eax ; Memory
		call	dbus_realloc
		test	eax, eax
		jz	loc_67DE9356
		mov	ecx, [esp+6Ch+var_34]
		mov	[ecx+14h], eax
		mov	[ecx+1Ch], edi

loc_67DE91D0:				; CODE XREF: sub_67DE9080+118j
		xor	eax, eax
		cmp	ebx, ebp
		jle	short loc_67DE91DD
		xor	eax, eax
		cmp	ebx, edi
		setle	al

loc_67DE91DD:				; CODE XREF: sub_67DE9080+154j
		mov	[esp+6Ch+Str1],	eax
		mov	[esp+6Ch+var_5C], offset aFind_subtree_r ; "find_subtree_recurse"
		mov	[esp+6Ch+var_60], 127h
		mov	[esp+6Ch+Size],	offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Str2],	offset aChild_posNew_n ; "child_pos < new_n_subtrees &&	new_n_sub"...
		call	sub_67DFAE70
		lea	eax, [ebp+1]
		cmp	ebx, eax
		jg	short loc_67DE9275
		lea	edi, ds:0[ebp*4]

loc_67DE9213:				; CODE XREF: sub_67DE9080+222j
		mov	edx, [esp+6Ch+var_34]
		mov	eax, [edx+14h]
		mov	[eax+edi], esi
		mov	edi, [esp+6Ch+arg_0]
		test	edi, edi
		jz	short loc_67DE922B
		mov	ecx, [esp+6Ch+arg_0]
		mov	[ecx], ebp

loc_67DE922B:				; CODE XREF: sub_67DE9080+1A3j
		mov	eax, [esp+6Ch+var_34]
		mov	[esp+6Ch+var_34], esi
		mov	[eax+18h], ebx
		mov	[esi+4], eax

loc_67DE9239:				; CODE XREF: sub_67DE9080+1F3j
		add	[esp+6Ch+var_30], 4
		mov	eax, [esp+6Ch+var_30]
		jmp	loc_67DE90C0
; ---------------------------------------------------------------------------

loc_67DE9247:				; CODE XREF: sub_67DE9080+D3j
		mov	ecx, [esp+6Ch+arg_0]
		test	ecx, ecx
		jz	short loc_67DE9263
		mov	ebx, [esp+6Ch+var_34]
		mov	edx, [esp+6Ch+var_38]
		mov	ecx, [esp+6Ch+arg_0]
		mov	eax, [ebx+14h]
		mov	[ecx], esi
		mov	ebx, [eax+edx]

loc_67DE9263:				; CODE XREF: sub_67DE9080+1CDj
		mov	edx, [esp+6Ch+var_20]
		test	edx, edx
		jnz	loc_67DE92FF
		mov	[esp+6Ch+var_34], ebx
		jmp	short loc_67DE9239
; ---------------------------------------------------------------------------

loc_67DE9275:				; CODE XREF: sub_67DE9080+18Aj
		mov	ecx, [esp+6Ch+var_34]
		lea	edi, ds:0[ebp*4]
		mov	edx, [ecx+14h]
		mov	ecx, [esp+6Ch+var_40]
		lea	eax, [edx+eax*4]
		sub	ecx, ebp
		shl	ecx, 2
		mov	[esp+6Ch+Size],	ecx ; Size
		lea	ecx, [edx+edi]
		mov	[esp+6Ch+Str2],	ecx ; Src
		mov	[esp+6Ch+Str1],	eax ; Dst
		call	memmove
		jmp	loc_67DE9213
; ---------------------------------------------------------------------------

loc_67DE92A7:				; CODE XREF: sub_67DE9080+11Cj
		add	edi, edi
		lea	eax, ds:0[edi*4]
		jmp	loc_67DE91AB
; ---------------------------------------------------------------------------

loc_67DE92B5:				; CODE XREF: sub_67DE9080+80j
		mov	ebx, [esp+6Ch+arg_4]
		test	ebx, ebx
		jz	short loc_67DE92C7
		mov	ebx, [esp+6Ch+arg_4]
		mov	dword ptr [ebx], 1

loc_67DE92C7:				; CODE XREF: sub_67DE9080+23Bj
					; sub_67DE9080+2A8j ...
		mov	eax, [esp+6Ch+var_34]
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE92D3:				; CODE XREF: sub_67DE9080+E8j
		cmp	[esp+6Ch+arg_4], 0
		jz	short loc_67DE92E4
		mov	edx, [esp+6Ch+arg_4]
		mov	dword ptr [edx], 0

loc_67DE92E4:				; CODE XREF: sub_67DE9080+258j
		cmp	[esp+6Ch+var_20], 0
		jnz	short loc_67DE932A

loc_67DE92EB:				; CODE XREF: sub_67DE9080+FBj
					; sub_67DE9080+2B4j
		mov	[esp+6Ch+var_34], 0
		mov	eax, [esp+6Ch+var_34]
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE92FF:				; CODE XREF: sub_67DE9080+1E9j
		mov	ecx, [esp+6Ch+arg_4]
		mov	eax, [esp+6Ch+arg_0]
		mov	edx, [esp+6Ch+var_28]
		mov	[esp+6Ch+Str2],	ecx
		mov	ecx, [esp+6Ch+var_24]
		mov	[esp+6Ch+Str1],	eax
		mov	eax, ebx
		add	edx, 4
		call	sub_67DE9080
		test	eax, eax
		jz	short loc_67DE9336

loc_67DE9324:				; CODE XREF: sub_67DE9080+2BEj
		mov	[esp+6Ch+var_34], eax
		jmp	short loc_67DE92C7
; ---------------------------------------------------------------------------

loc_67DE932A:				; CODE XREF: sub_67DE9080+269j
		mov	ecx, [esp+6Ch+var_34]
		test	byte ptr [ecx+20h], 1
		jnz	short loc_67DE92C7
		jmp	short loc_67DE92EB
; ---------------------------------------------------------------------------

loc_67DE9336:				; CODE XREF: sub_67DE9080+2A2j
		mov	edx, [esp+6Ch+var_34]
		test	byte ptr [edx+20h], 1
		jz	short loc_67DE9324
		cmp	[esp+6Ch+arg_4], 0
		jz	short loc_67DE92C7
		mov	ecx, [esp+6Ch+arg_4]
		mov	dword ptr [ecx], 0
		jmp	loc_67DE92C7
; ---------------------------------------------------------------------------

loc_67DE9356:				; CODE XREF: sub_67DE9080+140j
		mov	eax, esi
		call	sub_67DE8E40
		mov	[esp+6Ch+var_34], 0
		jmp	loc_67DE92C7
sub_67DE9080	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE9370	proc near		; CODE XREF: sub_67DE94B0+19p
					; sub_67DE9510+453p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		mov	edi, edx
		push	esi
		mov	esi, eax
		push	ebx
		xor	eax, eax
		sub	esp, 3Ch
		test	edx, edx
		mov	ebx, ecx
		setnz	al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_object_t ; "_dbus_object_tree_list_registered_unloc"...
		mov	[esp+4Ch+var_40], 243h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aParent_pathN_0 ; "parent_path	!= NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_object_t ; "_dbus_object_tree_list_registered_unloc"...
		mov	[esp+4Ch+var_40], 244h
		mov	[esp+4Ch+var_44], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aChild_entrie_0 ; "child_entries != NULL"
		call	sub_67DFAE70
		mov	eax, [esi+8]
		xor	ecx, ecx
		mov	dword ptr [ebx], 0
		mov	edx, edi
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], 0
		call	sub_67DE9080
		test	eax, eax
		mov	edi, eax
		jz	loc_67DE9484
		mov	eax, [eax+18h]
		lea	eax, ds:4[eax*4]
		mov	[esp+4Ch+var_4C], eax ;	size_t
		call	dbus_malloc0
		mov	ebp, eax
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax
		test	ebp, ebp
		jz	short loc_67DE9463
		mov	esi, [edi+18h]
		test	esi, esi
		jle	short loc_67DE9471
		xor	esi, esi
		jmp	short loc_67DE9438
; ---------------------------------------------------------------------------
		align 10h

loc_67DE9430:				; CODE XREF: sub_67DE9370+DFj
		add	esi, 1
		cmp	[edi+18h], esi
		jle	short loc_67DE9471

loc_67DE9438:				; CODE XREF: sub_67DE9370+BDj
		mov	eax, [edi+14h]
		mov	eax, [eax+esi*4]
		add	eax, 21h
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFAA60
		test	eax, eax
		mov	[ebp+esi*4+0], eax
		jnz	short loc_67DE9430
		mov	[esp+4Ch+var_4C], ebp
		call	dbus_free_string_array
		xor	eax, eax
		mov	[esp+4Ch+var_20], 0

loc_67DE9463:				; CODE XREF: sub_67DE9370+B2j
		mov	edx, [esp+4Ch+var_20]
		mov	[ebx], edx
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE9471:				; CODE XREF: sub_67DE9370+B9j
					; sub_67DE9370+C6j
		mov	edx, [esp+4Ch+var_20]
		mov	eax, 1
		mov	[ebx], edx
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE9484:				; CODE XREF: sub_67DE9370+90j
		mov	[esp+4Ch+var_4C], 4 ; size_t
		call	dbus_malloc0
		mov	[esp+4Ch+var_20], eax
		mov	edx, [esp+4Ch+var_20]
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[ebx], edx
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DE9370	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE94B0	proc near		; CODE XREF: dbus_connection_list_registered+1C1p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
Format		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_8]
		mov	edx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	eax, ebx
		call	sub_67DE9370
		mov	[esp+1Ch+Format], offset aUnlock_0 ; "unlock\n"
		mov	[esp+1Ch+var_14], offset a_dbus_object_1 ; "_dbus_object_tree_list_registered_and_u"...
		mov	[esp+1Ch+var_18], 424h ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	esi, eax
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DC8C10
		mov	eax, esi
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DE94B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE9510	proc near		; CODE XREF: dbus_connection_dispatch+77Ap

var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= byte ptr -0A4h
Format		= dword	ptr -0A0h
var_9C		= byte ptr -9Ch
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= byte ptr -7Ch
var_44		= dword	ptr -44h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 9Ch
		mov	edi, [esp+0ACh+arg_4]
		lea	eax, [esp+0ACh+var_20]
		mov	ebx, [esp+0ACh+arg_0]
		mov	[esp+0ACh+var_20], 0
		mov	[esp+0ACh+var_A8], eax
		mov	[esp+0ACh+var_AC], edi
		call	dbus_message_get_path_decomposed
		test	eax, eax
		jz	loc_67DE9815
		mov	esi, [esp+0ACh+var_20]
		test	esi, esi
		jz	loc_67DE987A
		mov	dword ptr [esp+0ACh+var_9C], offset aFind_handler ; "find_handler"
		mov	[esp+0ACh+Format], 167h
		mov	dword ptr [esp+0ACh+var_A4], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0ACh+var_A8], offset aExact_matchNul ; "exact_match != NULL"
		mov	[esp+0ACh+var_AC], 1
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		lea	edx, [esp+0ACh+var_24]
		mov	[esp+0ACh+var_A8], edx
		xor	ecx, ecx
		mov	edx, esi
		mov	[esp+0ACh+var_24], 0
		lea	esi, [esp+0ACh+var_28]
		mov	[esp+0ACh+var_AC], 0
		call	sub_67DE9080
		mov	[esp+0ACh+var_28], 0
		test	eax, eax
		mov	ebp, eax
		jz	short loc_67DE9646
		lea	esi, [esi+0]

loc_67DE95D0:				; CODE XREF: sub_67DE9510+134j
		mov	edx, [ebp+0Ch]
		test	edx, edx
		jz	short loc_67DE9634
		mov	eax, [esp+0ACh+var_24]
		test	eax, eax
		jnz	short loc_67DE95E8
		test	byte ptr [ebp+20h], 1
		jz	short loc_67DE9634

loc_67DE95E8:				; CODE XREF: sub_67DE9510+D0j
		mov	[esp+0ACh+var_AC], ebp
		call	sub_67E0B460
		mov	dword ptr [esp+0ACh+var_9C], offset a_dbus_object_2 ; "_dbus_object_subtree_ref"
		mov	[esp+0ACh+Format], 3F3h
		mov	dword ptr [esp+0ACh+var_A4], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0ACh+var_A8], offset aOld_value0_0	; "old_value > 0"
		test	eax, eax
		setnle	al
		movzx	eax, al
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DFAE70
		mov	[esp+0ACh+var_A8], ebp
		mov	[esp+0ACh+var_AC], esi
		call	sub_67DFBB80
		test	eax, eax
		jz	loc_67DE98D4

loc_67DE9634:				; CODE XREF: sub_67DE9510+C5j
					; sub_67DE9510+D6j
		mov	ebp, [ebp+4]
		mov	[esp+0ACh+var_24], 0
		test	ebp, ebp
		jnz	short loc_67DE95D0

loc_67DE9646:				; CODE XREF: sub_67DE9510+B8j
		mov	[esp+0ACh+var_AC], esi
		call	sub_67DFB9B0
		mov	[esp+0ACh+Format], offset aDHandlersInThe ; "%d	handlers in the	path tree for this m"...
		mov	dword ptr [esp+0ACh+var_A4], offset a_dbus_object_3 ; "_dbus_object_tree_dispatch_and_unlock"
		mov	[esp+0ACh+var_A8], 332h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+0ACh+var_9C], eax ; char
		call	sub_67DFABC0
		mov	[esp+0ACh+var_AC], esi
		call	sub_67DFB910
		test	eax, eax
		jz	loc_67DE9716

loc_67DE9686:				; CODE XREF: sub_67DE9510+200j
		mov	edx, [eax+4]
		xor	ecx, ecx
		mov	eax, [eax+8]
		cmp	edx, [esp+0ACh+var_28]
		mov	ebp, [eax+0Ch]
		setz	cl
		sub	ecx, 1
		and	edx, ecx
		test	ebp, ebp
		jz	short loc_67DE970C
		mov	eax, [eax+10h]
		mov	[esp+0ACh+var_84], edx
		mov	[esp+0ACh+Format], offset aUnlock_0 ; "unlock\n"
		mov	dword ptr [esp+0ACh+var_A4], offset a_dbus_object_3 ; "_dbus_object_tree_dispatch_and_unlock"
		mov	[esp+0ACh+var_80], eax
		mov	[esp+0ACh+var_A8], 351h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	ecx, [ebx+4]
		mov	[esp+0ACh+var_AC], ecx
		call	sub_67DC8C10
		mov	eax, [esp+0ACh+var_80]
		mov	[esp+0ACh+var_A8], edi
		mov	dword ptr [esp+0ACh+var_A4], eax
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	ebp
		mov	ebp, eax
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DC83D0
		cmp	ebp, 1
		mov	edx, [esp+0ACh+var_84]
		jnz	loc_67DE98E0

loc_67DE970C:				; CODE XREF: sub_67DE9510+192j
		test	edx, edx
		mov	eax, edx
		jnz	loc_67DE9686

loc_67DE9716:				; CODE XREF: sub_67DE9510+170j
		mov	ebp, [esp+0ACh+var_20]
		mov	[esp+0ACh+Format], offset aConsideringDef ; " considering default Introspect() handl"...
		mov	dword ptr [esp+0ACh+var_A4], offset aHandle_default ; "handle_default_introspect_and_unlock"
		mov	[esp+0ACh+var_A8], 279h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+0ACh+var_A4], offset aIntrospect	; "Introspect"
		mov	[esp+0ACh+var_A8], offset aOrg_freedes_30 ; "org.freedesktop.DBus.Introspectable"
		mov	[esp+0ACh+var_AC], edi
		call	dbus_message_is_method_call
		test	eax, eax
		jz	loc_67DE9914
		mov	[esp+0ACh+Format], offset aUsingDefaultIn ; " using default Introspect() handler!\n"
		mov	dword ptr [esp+0ACh+var_A4], offset aHandle_default ; "handle_default_introspect_and_unlock"
		mov	[esp+0ACh+var_A8], 28Ch	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+0ACh+var_44]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67E03350
		test	eax, eax
		jnz	loc_67DE994D
		mov	[esp+0ACh+Format], offset aUnlock_0 ; "unlock\n"
		mov	ebp, 2
		mov	dword ptr [esp+0ACh+var_A4], offset aHandle_default ; "handle_default_introspect_and_unlock"
		mov	[esp+0ACh+var_A8], 294h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DC8C10
		jmp	short loc_67DE97EE
; ---------------------------------------------------------------------------
		align 10h

loc_67DE97D0:				; CODE XREF: sub_67DE9510+2E7j
		mov	[esp+0ACh+var_AC], esi
		call	sub_67DFB910
		mov	ebx, eax
		mov	eax, [eax+8]
		call	sub_67DE8E40
		mov	[esp+0ACh+var_A8], ebx
		mov	[esp+0ACh+var_AC], esi
		call	sub_67DFBE40

loc_67DE97EE:				; CODE XREF: sub_67DE9510+2BDj
					; sub_67DE9510+3FFj ...
		mov	edi, [esp+0ACh+var_28]
		test	edi, edi
		jnz	short loc_67DE97D0
		mov	eax, [esp+0ACh+var_20]
		mov	[esp+0ACh+var_AC], eax
		call	dbus_free_string_array
		add	esp, 9Ch
		mov	eax, ebp
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE9815:				; CODE XREF: sub_67DE9510+38j
		mov	[esp+0ACh+Format], offset aUnlock_0 ; "unlock\n"
		mov	ebp, 2
		mov	dword ptr [esp+0ACh+var_A4], offset a_dbus_object_3 ; "_dbus_object_tree_dispatch_and_unlock"
		mov	[esp+0ACh+var_A8], 300h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DC8C10
		mov	[esp+0ACh+Format], offset aNoMemoryToGetD ; "No	memory to get decomposed path\n"
		mov	dword ptr [esp+0ACh+var_A4], offset a_dbus_object_3 ; "_dbus_object_tree_dispatch_and_unlock"
		mov	[esp+0ACh+var_A8], 304h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DE986D:				; CODE XREF: sub_67DE9510+3C2j
		add	esp, 9Ch
		mov	eax, ebp
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE987A:				; CODE XREF: sub_67DE9510+47j
		mov	[esp+0ACh+Format], offset aUnlock_0 ; "unlock\n"
		mov	ebp, 1
		mov	dword ptr [esp+0ACh+var_A4], offset a_dbus_object_3 ; "_dbus_object_tree_dispatch_and_unlock"
		mov	[esp+0ACh+var_A8], 30Fh	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DC8C10
		mov	[esp+0ACh+Format], offset aNoPathFieldInM ; "No	path field in message\n"
		mov	dword ptr [esp+0ACh+var_A4], offset a_dbus_object_3 ; "_dbus_object_tree_dispatch_and_unlock"
		mov	[esp+0ACh+var_A8], 313h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	short loc_67DE986D
; ---------------------------------------------------------------------------

loc_67DE98D4:				; CODE XREF: sub_67DE9510+11Ej
		mov	eax, ebp
		mov	ebp, 2
		call	sub_67DE8E40

loc_67DE98E0:				; CODE XREF: sub_67DE9510+1F6j
		mov	[esp+0ACh+Format], offset aUnlock_0 ; "unlock\n"
		mov	dword ptr [esp+0ACh+var_A4], offset a_dbus_object_3 ; "_dbus_object_tree_dispatch_and_unlock"
		mov	[esp+0ACh+var_A8], 379h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DC8C10
		jmp	loc_67DE97EE
; ---------------------------------------------------------------------------

loc_67DE9914:				; CODE XREF: sub_67DE9510+24Bj
		mov	[esp+0ACh+Format], offset aUnlock_0 ; "unlock\n"
		mov	ebp, 1
		mov	dword ptr [esp+0ACh+var_A4], offset aHandle_default ; "handle_default_introspect_and_unlock"
		mov	[esp+0ACh+var_A8], 285h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DC8C10
		jmp	loc_67DE97EE
; ---------------------------------------------------------------------------

loc_67DE994D:				; CODE XREF: sub_67DE9510+283j
		lea	ecx, [esp+0ACh+var_2C]
		mov	edx, ebp
		mov	eax, ebx
		mov	[esp+0ACh+var_2C], 0
		call	sub_67DE9370
		test	eax, eax
		jnz	short loc_67DE99C0

loc_67DE996C:				; CODE XREF: sub_67DE9510+4C6j
					; sub_67DE9510+4DEj ...
		mov	[esp+0ACh+Format], offset aUnlock_0 ; "unlock\n"
		mov	ebp, 2
		mov	dword ptr [esp+0ACh+var_A4], offset aHandle_default ; "handle_default_introspect_and_unlock"
		mov	[esp+0ACh+var_A8], 2D0h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DC8C10
		lea	eax, [esp+0ACh+var_44]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67E02BF0
		mov	eax, [esp+0ACh+var_2C]
		mov	[esp+0ACh+var_AC], eax
		call	dbus_free_string_array
		jmp	loc_67DE97EE
; ---------------------------------------------------------------------------

loc_67DE99C0:				; CODE XREF: sub_67DE9510+45Aj
		lea	eax, [esp+0ACh+var_44]
		mov	[esp+0ACh+var_A8], offset aDoctypeNodePub ; "<!DOCTYPE node PUBLIC \"-//freedesktop/"...
		mov	[esp+0ACh+var_AC], eax ; int
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DE996C
		lea	eax, [esp+0ACh+var_44]
		mov	[esp+0ACh+var_A8], offset aNode	; "<node>\n"
		mov	[esp+0ACh+var_AC], eax ; int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DE996C
		mov	eax, [esp+0ACh+var_2C]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_67DE9A37
		mov	ebp, 4

loc_67DE9A06:				; CODE XREF: sub_67DE9510+525j
		mov	dword ptr [esp+0ACh+var_A4], eax ; char
		lea	eax, [esp+0ACh+var_44]
		mov	[esp+0ACh+var_A8], offset aNodeNameS ; "  <node	name=\"%s\"/>\n"
		mov	[esp+0ACh+var_AC], eax ; int
		call	sub_67E090A0
		test	eax, eax
		jz	loc_67DE996C
		mov	eax, [esp+0ACh+var_2C]
		mov	eax, [eax+ebp]
		add	ebp, 4
		test	eax, eax
		jnz	short loc_67DE9A06

loc_67DE9A37:				; CODE XREF: sub_67DE9510+4EFj
		lea	eax, [esp+0ACh+var_44]
		mov	[esp+0ACh+var_A8], offset aNode_0 ; "</node>\n"
		mov	[esp+0ACh+var_AC], eax ; int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DE996C
		mov	[esp+0ACh+var_AC], edi
		call	dbus_message_new_method_return
		test	eax, eax
		mov	edi, eax
		jz	loc_67DE996C
		lea	ebp, [esp+0ACh+var_7C]
		mov	[esp+0ACh+var_AC], eax
		mov	[esp+0ACh+var_A8], ebp
		call	dbus_message_iter_init_append
		lea	eax, [esp+0ACh+var_44]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67E01770
		mov	[esp+0ACh+var_A8], 73h
		mov	[esp+0ACh+var_AC], ebp
		mov	[esp+0ACh+var_30], eax
		lea	eax, [esp+0ACh+var_30]
		mov	dword ptr [esp+0ACh+var_A4], eax
		call	dbus_message_iter_append_basic
		test	eax, eax
		jnz	short loc_67DE9AFD
		mov	[esp+0ACh+Format], offset aUnlock_0 ; "unlock\n"
		mov	ebp, 2
		mov	dword ptr [esp+0ACh+var_A4], offset aHandle_default ; "handle_default_introspect_and_unlock"
		mov	[esp+0ACh+var_A8], 2D0h	; int
		mov	[esp+0ACh+var_AC], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DC8C10
		lea	eax, [esp+0ACh+var_44]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67E02BF0
		mov	eax, [esp+0ACh+var_2C]
		mov	[esp+0ACh+var_AC], eax
		call	dbus_free_string_array

loc_67DE9AF0:				; CODE XREF: sub_67DE9510+627j
		mov	[esp+0ACh+var_AC], edi
		call	dbus_message_unref
		jmp	loc_67DE97EE
; ---------------------------------------------------------------------------

loc_67DE9AFD:				; CODE XREF: sub_67DE9510+58Fj
		mov	dword ptr [esp+0ACh+var_A4], 0
		mov	[esp+0ACh+var_A8], edi
		mov	eax, [ebx+4]
		mov	[esp+0ACh+var_AC], eax
		call	sub_67DD1250
		cmp	eax, 1
		lea	eax, [esp+0ACh+var_44]
		sbb	ebp, ebp
		mov	[esp+0ACh+var_AC], eax
		and	ebp, 2
		call	sub_67E02BF0
		mov	eax, [esp+0ACh+var_2C]
		mov	[esp+0ACh+var_AC], eax
		call	dbus_free_string_array
		jmp	short loc_67DE9AF0
sub_67DE9510	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE9B40	proc near		; CODE XREF: dbus_connection_unregister_object_path+188p

Dst		= dword	ptr -4Ch
Src		= dword	ptr -48h
Size		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [esp+4Ch+arg_4]
		mov	ebx, [esp+4Ch+arg_0]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_object_4 ; "_dbus_object_tree_unregister_and_unlock"
		mov	[esp+4Ch+Format], 1C5h
		test	esi, esi
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+Size],	offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aPathNull_1 ; "path != NULL"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		lea	edx, [esp+4Ch+var_20]
		mov	[esp+4Ch+Dst], edx
		xor	ecx, ecx
		mov	edx, esi
		mov	[esp+4Ch+Src], 0
		call	sub_67DE9080
		test	eax, eax
		mov	edi, eax
		jz	loc_67DE9CC0
		mov	ebp, [eax+0Ch]
		test	ebp, ebp
		jz	loc_67DE9CC0
		mov	edx, [eax+4]
		mov	eax, 1
		test	edx, edx
		jz	short loc_67DE9BD0
		mov	ecx, [esp+4Ch+var_20]
		xor	al, al
		test	ecx, ecx
		js	short loc_67DE9BD0
		mov	eax, [edx+14h]
		cmp	[eax+ecx*4], edi
		setz	al
		movzx	eax, al

loc_67DE9BD0:				; CODE XREF: sub_67DE9B40+78j
					; sub_67DE9B40+82j
		mov	[esp+4Ch+Dst], eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_object_4 ; "_dbus_object_tree_unregister_and_unlock"
		mov	[esp+4Ch+Format], 1D9h
		mov	[esp+4Ch+Size],	offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aSubtreeParentN ;	"subtree->parent == NULL || (i >= 0 && s"...
		call	sub_67DFAE70
		mov	eax, [edi+4]
		mov	esi, [edi+8]
		mov	ebp, [edi+10h]
		mov	dword ptr [edi+0Ch], 0
		test	eax, eax
		mov	dword ptr [edi+8], 0
		mov	dword ptr [edi+10h], 0
		jz	short loc_67DE9C21
		mov	ecx, [edi+18h]
		test	ecx, ecx
		jz	short loc_67DE9C75

loc_67DE9C21:				; CODE XREF: sub_67DE9B40+D8j
					; sub_67DE9B40+174j
		mov	ebx, [ebx+4]
		mov	[esp+4Ch+Dst], ebx
		call	sub_67DCB080
		mov	[esp+4Ch+Format], offset aUnlock_0 ; "unlock\n"
		mov	[esp+4Ch+Size],	offset a_dbus_object_4 ; "_dbus_object_tree_unregister_and_unlock"
		mov	[esp+4Ch+Src], 1FFh ; int
		mov	[esp+4Ch+Dst], offset aRBuildWin32l_8 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+Dst], ebx
		call	sub_67DC8C10
		test	esi, esi
		jz	short loc_67DE9C65
		mov	[esp+4Ch+Src], ebp
		mov	[esp+4Ch+Dst], ebx
		call	esi

loc_67DE9C65:				; CODE XREF: sub_67DE9B40+11Aj
		mov	[esp+4Ch+Dst], ebx
		call	dbus_connection_unref
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE9C75:				; CODE XREF: sub_67DE9B40+DFj
		mov	edx, [esp+4Ch+var_20]
		mov	ecx, [eax+14h]
		not	edx
		add	edx, [eax+18h]
		shl	edx, 2
		mov	[esp+4Ch+Size],	edx ; Size
		mov	edx, [esp+4Ch+var_20]
		lea	eax, [ecx+edx*4+4]
		mov	[esp+4Ch+Src], eax ; Src
		lea	eax, [ecx+edx*4]
		mov	[esp+4Ch+Dst], eax ; Dst
		call	memmove
		mov	eax, [edi+4]
		mov	dword ptr [edi+4], 0
		sub	dword ptr [eax+18h], 1
		mov	eax, edi
		call	sub_67DE8E40
		jmp	loc_67DE9C21
; ---------------------------------------------------------------------------
		align 10h

loc_67DE9CC0:				; CODE XREF: sub_67DE9B40+5Dj
					; sub_67DE9B40+68j
		mov	edx, [esi+4]
		test	edx, edx
		jz	short loc_67DE9D28

loc_67DE9CC7:				; CODE XREF: sub_67DE9B40+1EDj
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_67DE9D30

loc_67DE9CCD:				; CODE XREF: sub_67DE9B40+1F5j
		mov	[esp+4Ch+Size],	edx
		mov	[esp+4Ch+Src], eax ; char
		mov	[esp+4Ch+Dst], offset aAttemptedToUnr ;	"Attempted to unregister path (path[0] ="...
		call	sub_67DFAD60
		mov	ebx, [ebx+4]
		mov	[esp+4Ch+Dst], ebx
		call	sub_67DCB080
		mov	[esp+4Ch+Format], offset aUnlock_0 ; "unlock\n"
		mov	[esp+4Ch+Size],	offset a_dbus_object_4 ; "_dbus_object_tree_unregister_and_unlock"
		mov	[esp+4Ch+Src], 1FFh ; int
		mov	[esp+4Ch+Dst], offset aRBuildWin32l_8 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+Dst], ebx
		call	sub_67DC8C10
		mov	[esp+4Ch+Dst], ebx
		call	dbus_connection_unref
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE9D28:				; CODE XREF: sub_67DE9B40+185j
		mov	edx, offset aNull_0 ; "null"
		jmp	short loc_67DE9CC7
; ---------------------------------------------------------------------------
		align 10h

loc_67DE9D30:				; CODE XREF: sub_67DE9B40+18Bj
		mov	eax, offset aNull_0 ; "null"
		jmp	short loc_67DE9CCD
sub_67DE9B40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE9D40	proc near		; CODE XREF: dbus_connection_try_register_fallback+1D9p
					; dbus_connection_try_register_object_path+1D9p ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= byte ptr -50h
var_4C		= dword	ptr -4Ch
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebp, [esp+5Ch+arg_0]
		mov	esi, [esp+5Ch+arg_C]
		mov	ebx, [esp+5Ch+arg_8]
		mov	edi, [esp+5Ch+arg_14]
		test	ebp, ebp
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_object_5 ; "_dbus_object_tree_register"
		mov	dword ptr [esp+5Ch+var_50], 190h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aTreeNull ; "tree != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset a_dbus_object_5 ; "_dbus_object_tree_register"
		mov	dword ptr [esp+5Ch+var_50], 191h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aVtableMessage_ ; "vtable->message_function !=	NULL"
		cmp	dword ptr [esi+4], 0
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_object_5 ; "_dbus_object_tree_register"
		mov	dword ptr [esp+5Ch+var_50], 192h
		mov	[esp+5Ch+var_54], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aPathNull_1 ; "path !=	NULL"
		call	sub_67DFAE70
		mov	eax, [ebp+8]
		mov	ecx, 1
		mov	edx, ebx
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], 0
		call	sub_67DE9080
		test	eax, eax
		jz	loc_67DE9F24
		mov	ebp, [eax+0Ch]
		test	ebp, ebp
		jz	loc_67DE9EF0
		xor	eax, eax
		test	edi, edi
		jz	loc_67DE9EA6
		lea	ebp, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DE9E79
		mov	ecx, [ebx]
		lea	esi, [ebx+4]
		test	ecx, ecx
		jnz	short loc_67DE9E5D
		jmp	short loc_67DE9EAE
; ---------------------------------------------------------------------------
		align 10h

loc_67DE9E40:				; CODE XREF: sub_67DE9D40+12Fj
		mov	eax, [ebx]
		mov	[esp+5Ch+var_5C], ebp ;	int
		mov	[esp+5Ch+var_58], eax ;	char *
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67DE9E71
		mov	eax, [esi]
		mov	ebx, esi
		add	esi, 4
		test	eax, eax
		jz	short loc_67DE9EC2

loc_67DE9E5D:				; CODE XREF: sub_67DE9D40+F8j
		mov	[esp+5Ch+var_58], 2Fh
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E067A0
		test	eax, eax
		jnz	short loc_67DE9E40

loc_67DE9E71:				; CODE XREF: sub_67DE9D40+110j
					; sub_67DE9D40+180j ...
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E02BF0

loc_67DE9E79:				; CODE XREF: sub_67DE9D40+EFj
					; sub_67DE9D40+1A4j
		xor	ebx, ebx
		mov	eax, offset aCannotRepresen ; "(cannot represent path: out of memory!)"

loc_67DE9E80:				; CODE XREF: sub_67DE9D40+1A8j
		mov	dword ptr [esp+5Ch+var_50], eax	; char
		mov	[esp+5Ch+var_54], offset aAHandlerIsAlre ; "A handler is already registered for	%s"
		mov	[esp+5Ch+var_58], offset aOrg_freedes_31 ; "org.freedesktop.DBus.Error.ObjectPathIn"...
		mov	[esp+5Ch+var_5C], edi ;	int
		call	dbus_set_error
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_free
		xor	eax, eax

loc_67DE9EA6:				; CODE XREF: sub_67DE9D40+DBj
					; sub_67DE9D40+1FFj
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE9EAE:				; CODE XREF: sub_67DE9D40+FAj
		mov	[esp+5Ch+var_58], 2Fh
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E067A0
		test	eax, eax
		jz	short loc_67DE9E71

loc_67DE9EC2:				; CODE XREF: sub_67DE9D40+11Bj
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E05F70
		test	eax, eax
		jz	short loc_67DE9E71
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E02BF0
		mov	eax, [esp+5Ch+var_20]
		test	eax, eax
		jz	short loc_67DE9E79
		mov	ebx, eax
		jmp	short loc_67DE9E80
; ---------------------------------------------------------------------------
		align 10h

loc_67DE9EF0:				; CODE XREF: sub_67DE9D40+D1j
		mov	edx, [esi+4]
		mov	[eax+0Ch], edx
		mov	edx, [esi]
		mov	[eax+8], edx
		mov	edx, [esp+5Ch+arg_10]
		mov	[eax+10h], edx
		mov	edx, [esp+5Ch+arg_4]
		test	edx, edx
		movzx	edx, byte ptr [eax+20h]
		setnz	cl
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+20h], dl
		add	esp, 4Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DE9F24:				; CODE XREF: sub_67DE9D40+C6j
		mov	eax, off_67E19010
		mov	[esp+5Ch+var_58], offset aOrg_freedes_32 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+5Ch+var_5C], edi
		mov	[esp+5Ch+var_54], eax
		call	dbus_set_error_const
		xor	eax, eax
		jmp	loc_67DE9EA6
sub_67DE9D40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DE9F50	proc near		; CODE XREF: dbus_connection_get_object_path_data+163p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 34h
		mov	esi, [esp+3Ch+arg_0]
		mov	ebx, [esp+3Ch+arg_4]
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_object_6 ; "_dbus_object_tree_get_user_data_unlocke"...
		mov	[esp+3Ch+Format], 399h
		test	esi, esi
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTreeNull ; "tree != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_object_6 ; "_dbus_object_tree_get_user_data_unlocke"...
		mov	[esp+3Ch+Format], 39Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPathNull_1 ; "path !=	NULL"
		call	sub_67DFAE70
		mov	dword ptr [esp+3Ch+var_2C], offset aFind_handler ; "find_handler"
		mov	[esp+3Ch+Format], 167h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aExact_matchNul ; "exact_match	!= NULL"
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [esi+8]
		lea	edx, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_38], edx
		xor	ecx, ecx
		mov	edx, ebx
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_3C], 0
		call	sub_67DE9080
		test	eax, eax
		jz	loc_67DEA023
		mov	edx, [esp+3Ch+var_10]
		test	edx, edx
		jz	short loc_67DEA023
		mov	eax, [eax+10h]
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DEA023:				; CODE XREF: sub_67DE9F50+BCj
					; sub_67DE9F50+C8j
		mov	[esp+3Ch+Format], offset aNoObjectAtSpec ; "No object at specified path	found\n"
		mov	[esp+3Ch+var_34], offset a_dbus_object_6 ; "_dbus_object_tree_get_user_data_unlocke"...
		mov	[esp+3Ch+var_38], 3A1h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 34h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
sub_67DE9F50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA050	proc near		; CODE XREF: sub_67DEA050+1B3p
					; sub_67DEA410+12p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		mov	esi, eax
		push	ebx
		sub	esp, 3Ch
		mov	[esp+4Ch+var_20], edx

loc_67DEA05D:				; CODE XREF: sub_67DEA050+37Ej
		mov	edx, [esp+4Ch+var_20]
		mov	eax, [edx+18h]
		test	eax, eax
		jle	loc_67DEA3D3
		mov	edx, [esp+4Ch+var_20]
		lea	eax, ds:0FFFFFFFCh[eax*4]
		add	eax, [edx+14h]
		sub	dword ptr [edx+18h], 1
		mov	ecx, [eax]
		mov	dword ptr [eax], 0
		mov	[esp+4Ch+var_24], ecx
		mov	dword ptr [ecx+4], 0

loc_67DEA091:				; CODE XREF: sub_67DEA050+348j
		mov	edx, [esp+4Ch+var_24]
		mov	eax, [edx+18h]
		test	eax, eax
		jle	loc_67DEA39D
		mov	edx, [esp+4Ch+var_24]
		lea	eax, ds:0FFFFFFFCh[eax*4]
		add	eax, [edx+14h]
		sub	dword ptr [edx+18h], 1
		mov	ecx, [eax]
		mov	dword ptr [eax], 0
		mov	[esp+4Ch+var_28], ecx
		mov	dword ptr [ecx+4], 0

loc_67DEA0C5:				; CODE XREF: sub_67DEA050+312j
		mov	edx, [esp+4Ch+var_28]
		mov	eax, [edx+18h]
		test	eax, eax
		jle	loc_67DEA367
		mov	edx, [esp+4Ch+var_28]
		lea	eax, ds:0FFFFFFFCh[eax*4]
		add	eax, [edx+14h]
		sub	dword ptr [edx+18h], 1
		mov	ecx, [eax]
		mov	dword ptr [eax], 0
		mov	[esp+4Ch+var_2C], ecx
		mov	dword ptr [ecx+4], 0

loc_67DEA0F9:				; CODE XREF: sub_67DEA050+2DCj
		mov	edx, [esp+4Ch+var_2C]
		mov	eax, [edx+18h]
		test	eax, eax
		jle	loc_67DEA331
		mov	edx, [esp+4Ch+var_2C]
		lea	eax, ds:0FFFFFFFCh[eax*4]
		add	eax, [edx+14h]
		sub	dword ptr [edx+18h], 1
		mov	ecx, [eax]
		mov	dword ptr [eax], 0
		mov	[esp+4Ch+var_30], ecx
		mov	dword ptr [ecx+4], 0

loc_67DEA12D:				; CODE XREF: sub_67DEA050+2A6j
		mov	edx, [esp+4Ch+var_30]
		mov	eax, [edx+18h]
		test	eax, eax
		jle	loc_67DEA2FB
		mov	edx, [esp+4Ch+var_30]
		lea	eax, ds:0FFFFFFFCh[eax*4]
		add	eax, [edx+14h]
		sub	dword ptr [edx+18h], 1
		mov	ecx, [eax]
		mov	dword ptr [eax], 0
		mov	eax, [ecx+18h]
		mov	[esp+4Ch+var_34], ecx
		mov	dword ptr [ecx+4], 0
		test	eax, eax
		jle	loc_67DEA2C1

loc_67DEA16C:				; CODE XREF: sub_67DEA050+26Bj
		mov	edx, [esp+4Ch+var_34]
		lea	eax, ds:0FFFFFFFCh[eax*4]
		add	eax, [edx+14h]
		sub	dword ptr [edx+18h], 1
		mov	ebp, [eax]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+18h]
		mov	dword ptr [ebp+4], 0
		test	eax, eax
		jle	loc_67DEA283

loc_67DEA198:				; CODE XREF: sub_67DEA050+22Dj
		lea	eax, ds:0FFFFFFFCh[eax*4]
		add	eax, [ebp+14h]
		sub	dword ptr [ebp+18h], 1
		mov	edi, [eax]
		mov	dword ptr [eax], 0
		mov	eax, [edi+18h]
		mov	dword ptr [edi+4], 0
		test	eax, eax
		jle	loc_67DEA249

loc_67DEA1C0:				; CODE XREF: sub_67DEA050+1F3j
		lea	eax, ds:0FFFFFFFCh[eax*4]
		add	eax, [edi+14h]
		sub	dword ptr [edi+18h], 1
		mov	ebx, [eax]
		mov	dword ptr [eax], 0
		mov	eax, [ebx+18h]
		mov	dword ptr [ebx+4], 0
		test	eax, eax
		jle	short loc_67DEA20F

loc_67DEA1E4:				; CODE XREF: sub_67DEA050+1BDj
		lea	eax, ds:0FFFFFFFCh[eax*4]
		add	eax, [ebx+14h]
		sub	dword ptr [ebx+18h], 1
		mov	edx, [eax]
		mov	dword ptr [eax], 0
		mov	eax, esi
		mov	dword ptr [edx+4], 0
		call	sub_67DEA050
		mov	eax, [ebx+18h]
		test	eax, eax
		jg	short loc_67DEA1E4

loc_67DEA20F:				; CODE XREF: sub_67DEA050+192j
		mov	eax, [ebx+8]
		test	eax, eax
		jz	short loc_67DEA222
		mov	edx, [ebx+10h]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], edx
		call	eax

loc_67DEA222:				; CODE XREF: sub_67DEA050+1C4j
		mov	eax, ebx
		mov	dword ptr [ebx+0Ch], 0
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [ebx+10h], 0
		call	sub_67DE8E40
		mov	eax, [edi+18h]
		test	eax, eax
		jg	loc_67DEA1C0

loc_67DEA249:				; CODE XREF: sub_67DEA050+16Aj
		mov	eax, [edi+8]
		test	eax, eax
		jz	short loc_67DEA25C
		mov	edx, [edi+10h]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], edx
		call	eax

loc_67DEA25C:				; CODE XREF: sub_67DEA050+1FEj
		mov	eax, edi
		mov	dword ptr [edi+0Ch], 0
		mov	dword ptr [edi+8], 0
		mov	dword ptr [edi+10h], 0
		call	sub_67DE8E40
		mov	eax, [ebp+18h]
		test	eax, eax
		jg	loc_67DEA198

loc_67DEA283:				; CODE XREF: sub_67DEA050+142j
		mov	eax, [ebp+8]
		test	eax, eax
		jz	short loc_67DEA296
		mov	edx, [ebp+10h]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], edx
		call	eax

loc_67DEA296:				; CODE XREF: sub_67DEA050+238j
		mov	eax, ebp
		mov	dword ptr [ebp+0Ch], 0
		mov	dword ptr [ebp+8], 0
		mov	dword ptr [ebp+10h], 0
		call	sub_67DE8E40
		mov	ecx, [esp+4Ch+var_34]
		mov	eax, [ecx+18h]
		test	eax, eax
		jg	loc_67DEA16C

loc_67DEA2C1:				; CODE XREF: sub_67DEA050+116j
		mov	edx, [esp+4Ch+var_34]
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_67DEA2D8
		mov	edx, [edx+10h]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], edx
		call	eax

loc_67DEA2D8:				; CODE XREF: sub_67DEA050+27Aj
		mov	eax, [esp+4Ch+var_34]
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+10h], 0
		call	sub_67DE8E40
		jmp	loc_67DEA12D
; ---------------------------------------------------------------------------

loc_67DEA2FB:				; CODE XREF: sub_67DEA050+E6j
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_67DEA30E
		mov	edx, [edx+10h]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], edx
		call	eax

loc_67DEA30E:				; CODE XREF: sub_67DEA050+2B0j
		mov	eax, [esp+4Ch+var_30]
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+10h], 0
		call	sub_67DE8E40
		jmp	loc_67DEA0F9
; ---------------------------------------------------------------------------

loc_67DEA331:				; CODE XREF: sub_67DEA050+B2j
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_67DEA344
		mov	edx, [edx+10h]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], edx
		call	eax

loc_67DEA344:				; CODE XREF: sub_67DEA050+2E6j
		mov	eax, [esp+4Ch+var_2C]
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+10h], 0
		call	sub_67DE8E40
		jmp	loc_67DEA0C5
; ---------------------------------------------------------------------------

loc_67DEA367:				; CODE XREF: sub_67DEA050+7Ej
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_67DEA37A
		mov	edx, [edx+10h]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], edx
		call	eax

loc_67DEA37A:				; CODE XREF: sub_67DEA050+31Cj
		mov	eax, [esp+4Ch+var_28]
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+10h], 0
		call	sub_67DE8E40
		jmp	loc_67DEA091
; ---------------------------------------------------------------------------

loc_67DEA39D:				; CODE XREF: sub_67DEA050+4Aj
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_67DEA3B0
		mov	edx, [edx+10h]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], edx
		call	eax

loc_67DEA3B0:				; CODE XREF: sub_67DEA050+352j
		mov	eax, [esp+4Ch+var_24]
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+10h], 0
		call	sub_67DE8E40
		jmp	loc_67DEA05D
; ---------------------------------------------------------------------------

loc_67DEA3D3:				; CODE XREF: sub_67DEA050+16j
		mov	eax, [edx+8]
		test	eax, eax
		jz	short loc_67DEA3E6
		mov	edx, [edx+10h]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], edx
		call	eax

loc_67DEA3E6:				; CODE XREF: sub_67DEA050+388j
		mov	eax, [esp+4Ch+var_20]
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+10h], 0
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	sub_67DE8E40
sub_67DEA050	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA410	proc near		; CODE XREF: sub_67DCDAC0+DBp

arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 8
		mov	ebx, [esp+0Ch+arg_0]
		mov	edx, [ebx+8]
		test	edx, edx
		jz	short loc_67DEA427
		mov	eax, [ebx+4]
		call	sub_67DEA050

loc_67DEA427:				; CODE XREF: sub_67DEA410+Dj
		mov	dword ptr [ebx+8], 0
		add	esp, 8
		pop	ebx
		retn
sub_67DEA410	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA440	proc near		; CODE XREF: sub_67DCCE40+40Ep
					; sub_67DCDAC0+23Cp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_object_7 ; "_dbus_object_tree_unref"
		mov	[esp+2Ch+var_20], 91h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_8 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTreeRefcount0	; "tree->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DEA488
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DEA488:				; CODE XREF: sub_67DEA440+41j
		mov	edx, [ebx+8]
		test	edx, edx
		jz	short loc_67DEA497
		mov	eax, [ebx+4]
		call	sub_67DEA050

loc_67DEA497:				; CODE XREF: sub_67DEA440+4Dj
		mov	dword ptr [ebx+8], 0
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	dbus_free
sub_67DEA440	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA4B0	proc near		; CODE XREF: sub_67DD0960+130p
					; sub_67DD26C0+198p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		movzx	eax, byte ptr [eax+24h]
		and	eax, 1
		retn
sub_67DEA4B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA4C0	proc near		; CODE XREF: .text:67DD45A5p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_pendi_12 ; "_dbus_pending_call_get_connection_unloc"...
		mov	[esp+2Ch+var_20], 143h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aPendingNull ;	"pending != NULL"
		call	sub_67DFAE70
		mov	eax, [ebx+10h]
		add	esp, 28h
		pop	ebx
		retn
sub_67DEA4C0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_pendi_11 ; "_dbus_pending_call_set_reply_serial_unl"...
		mov	dword ptr [esp+0Ch], 125h
		mov	dword ptr [esp+8], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+4], offset aPendingNull ; "pending != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_pendi_11 ; "_dbus_pending_call_set_reply_serial_unl"...
		mov	dword ptr [esp+0Ch], 126h
		mov	dword ptr [esp+8], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aPendingReply_1 ; "pending->reply_serial == 0"
		cmp	dword ptr [ebx+20h], 0
		setz	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [esp+34h]
		mov	[ebx+20h], eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA580	proc near		; CODE XREF: sub_67DD0960+140p
					; sub_67DD1A90+1Ep ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_pending_ ; "_dbus_pending_call_get_reply_serial_unl"...
		mov	[esp+2Ch+var_20], 116h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aPendingNull ;	"pending != NULL"
		call	sub_67DFAE70
		mov	eax, [ebx+20h]
		add	esp, 28h
		pop	ebx
		retn
sub_67DEA580	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA5C0	proc near		; CODE XREF: sub_67DCE140+1B3p
					; sub_67DCE450+2FCp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_pendin_0 ; "_dbus_pending_call_get_timeout_unlocked"
		mov	[esp+2Ch+var_20], 108h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aPendingNull ;	"pending != NULL"
		call	sub_67DFAE70
		mov	eax, [ebx+18h]
		add	esp, 28h
		pop	ebx
		retn
sub_67DEA5C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA600	proc near		; CODE XREF: sub_67DCE140+1A0p
					; sub_67DCE450+21Ep ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_pendin_1 ; "_dbus_pending_call_set_timeout_added_un"...
		mov	[esp+2Ch+var_20], 0F9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aPendingNull ;	"pending != NULL"
		call	sub_67DFAE70
		mov	edx, [esp+2Ch+arg_4]
		movzx	eax, byte ptr [ebx+24h]
		and	edx, 1
		add	edx, edx
		and	eax, 0FFFFFFFDh
		or	eax, edx
		mov	[ebx+24h], al
		add	esp, 28h
		pop	ebx
		retn
sub_67DEA600	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DEA660
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA660	proc near		; CODE XREF: sub_67DCE140+18Cp
					; sub_67DCE450+2ECp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_pendin_2 ; "_dbus_pending_call_is_timeout_added_unl"...
		mov	[esp+2Ch+var_20], 0E9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aPendingNull ;	"pending != NULL"
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+24h]
		add	esp, 28h
		pop	ebx
		shr	al, 1
		and	eax, 1
		retn
sub_67DEA660	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA6B0	proc near		; CODE XREF: .text:67DCFD9Dp
					; sub_67DD26C0+62p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_pendin_5 ; "_dbus_pending_call_get_connection_and_l"...
		mov	[esp+2Ch+var_20], 134h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aPendingNull ;	"pending != NULL"
		call	sub_67DFAE70
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DC83D0
		mov	eax, [ebx+10h]
		add	esp, 28h
		pop	ebx
		retn
sub_67DEA6B0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 173. dbus_pending_call_get_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_get_data
dbus_pending_call_get_data proc	near	; CODE XREF: sub_67DEA7B0+51p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_pending_c ; "dbus_pending_call_get_data"
		mov	[esp+2Ch+var_20], 31Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DEA774
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DC83D0
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_2C], offset dword_67E34064
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+4]
		mov	dword ptr [esp+2Ch+var_28], eax
		call	sub_67DF8A00
		mov	esi, eax
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DC8C10

loc_67DEA76C:				; CODE XREF: dbus_pending_call_get_data+A3j
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DEA774:				; CODE XREF: dbus_pending_call_get_data+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	[esp+2Ch+var_1C], 31Dh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPendingNull ;	"pending != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_pending_c ; "dbus_pending_call_get_data"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DEA76C
dbus_pending_call_get_data endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEA7B0	proc near		; CODE XREF: sub_67DD1B50+2Fp
					; sub_67DD2510+104p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_pendin_3 ; "_dbus_pending_call_complete"
		mov	[esp+2Ch+var_20], 0BDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aPendingComplet ; "!pending->completed"
		movzx	eax, byte ptr [ebx+24h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+0Ch]
		or	byte ptr [ebx+24h], 1
		test	eax, eax
		jz	short loc_67DEA810
		mov	eax, dword_67E1900C
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], eax
		call	dbus_pending_call_get_data
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], eax
		call	dword ptr [ebx+0Ch]

loc_67DEA810:				; CODE XREF: sub_67DEA7B0+43j
		add	esp, 28h
		pop	ebx
		retn
sub_67DEA7B0	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 177. dbus_pending_call_steal_reply

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_steal_reply
dbus_pending_call_steal_reply proc near	; CODE XREF: dbus_connection_send_with_reply_and_block+12Dp

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_pending_0 ; "dbus_pending_call_steal_reply"
		mov	[esp+2Ch+var_20], 29Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEA927
		mov	[esp+2Ch+var_1C], offset aDbus_pending_0 ; "dbus_pending_call_steal_reply"
		mov	[esp+2Ch+var_20], 2A0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	byte ptr [ebx+24h], 1
		jz	short loc_67DEA8F0
		mov	[esp+2Ch+var_1C], offset aDbus_pending_0 ; "dbus_pending_call_steal_reply"
		mov	[esp+2Ch+var_20], 2A1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	edx, [ebx+14h]
		test	edx, edx
		jz	short loc_67DEA941
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DC83D0
		mov	esi, [ebx+14h]
		mov	eax, [ebx+10h]
		mov	dword ptr [ebx+14h], 0
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DC8C10
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEA8F0:				; CODE XREF: dbus_pending_call_steal_reply+6Dj
		mov	[esp+2Ch+var_1C], 2A0h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPendingCompl_0 ; "pending->completed"

loc_67DEA908:				; CODE XREF: dbus_pending_call_steal_reply+11Fj
					; dbus_pending_call_steal_reply+139j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_pending_0 ; "dbus_pending_call_steal_reply"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DEA927:				; CODE XREF: dbus_pending_call_steal_reply+37j
		mov	[esp+2Ch+var_1C], 29Fh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPendingNull ;	"pending != NULL"
		jmp	short loc_67DEA908
; ---------------------------------------------------------------------------

loc_67DEA941:				; CODE XREF: dbus_pending_call_steal_reply+A0j
		mov	[esp+2Ch+var_1C], 2A1h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPendingReplyNu ; "pending->reply != NULL"
		jmp	short loc_67DEA908
dbus_pending_call_steal_reply endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 172. dbus_pending_call_get_completed

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_get_completed
dbus_pending_call_get_completed	proc near ; CODE XREF: sub_67DD26C0+43p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	[esp+2Ch+var_1C], offset aDbus_pending_1 ; "dbus_pending_call_get_completed"
		mov	[esp+2Ch+var_20], 288h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DEA9D0
		mov	eax, [ebx+10h]
		mov	esi, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DC83D0
		movzx	eax, byte ptr [ebx+24h]
		and	esi, eax
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DC8C10
		mov	eax, esi
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEA9D0:				; CODE XREF: dbus_pending_call_get_completed+3Dj
		mov	eax, off_67E19014
		xor	esi, esi
		mov	[esp+2Ch+var_1C], 288h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPendingNull ;	"pending != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_pending_1 ; "dbus_pending_call_get_completed"
		call	sub_67DFB4E0
		mov	eax, esi
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
dbus_pending_call_get_completed	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 171. dbus_pending_call_free_data_slot

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_free_data_slot
dbus_pending_call_free_data_slot proc near ; CODE XREF:	dbus_pending_call_unref-1Fp
					; sub_67DEB120+100p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_pending_2 ; "dbus_pending_call_free_data_slot"
		mov	[esp+2Ch+var_20], 2EAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DEAAC2
		mov	[esp+2Ch+var_1C], offset aDbus_pending_2 ; "dbus_pending_call_free_data_slot"
		mov	[esp+2Ch+var_20], 2EBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	ecx, [ebx]
		test	ecx, ecx
		js	short loc_67DEAA90
		mov	dword ptr [esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], offset dword_67E34064
		call	sub_67DF8C50
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEAA90:				; CODE XREF: dbus_pending_call_free_data_slot+68j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 2EBh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aSlot_p0_1 ; "*slot_p >= 0"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_pending_2 ; "dbus_pending_call_free_data_slot"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DEAAC2:				; CODE XREF: dbus_pending_call_free_data_slot+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 2EAh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aSlot_pNull ; "slot_p != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_pending_2 ; "dbus_pending_call_free_data_slot"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_pending_call_free_data_slot endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 168. dbus_pending_call_allocate_data_slot

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_allocate_data_slot
dbus_pending_call_allocate_data_slot proc near ; CODE XREF: sub_67DEB120+5Dp

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_pending_3 ; "dbus_pending_call_allocate_data_slot"
		mov	[esp+2Ch+var_20], 2D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DEAB55
		mov	[esp+2Ch+var_24], ebx
		mov	dword ptr [esp+2Ch+var_28], offset dword_67E34D80
		mov	[esp+2Ch+var_2C], offset dword_67E34064
		call	sub_67DF8DC0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DEAB55:				; CODE XREF: dbus_pending_call_allocate_data_slot+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 2D5h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aSlot_pNull ; "slot_p != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_pending_3 ; "dbus_pending_call_allocate_data_slot"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_pending_call_allocate_data_slot endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 169. dbus_pending_call_block

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_block
dbus_pending_call_block	proc near	; CODE XREF: dbus_connection_send_with_reply_and_block+121p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_pending_4 ; "dbus_pending_call_block"
		mov	[esp+2Ch+var_20], 2BFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DEABD5
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67DD26C0
; ---------------------------------------------------------------------------

loc_67DEABD5:				; CODE XREF: dbus_pending_call_block+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 2BFh
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPendingNull ;	"pending != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_pending_4 ; "dbus_pending_call_block"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_pending_call_block	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 170. dbus_pending_call_cancel

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_cancel
dbus_pending_call_cancel proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_pending_5 ; "dbus_pending_call_cancel"
		mov	[esp+2Ch+var_20], 276h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DEAC60
		mov	dword ptr [esp+2Ch+var_28], ebx
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DD1BA0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEAC60:				; CODE XREF: dbus_pending_call_cancel+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 276h
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPendingNull ;	"pending != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_pending_5 ; "dbus_pending_call_cancel"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_pending_call_cancel endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR dbus_pending_call_unref

loc_67DEACA0:				; CODE XREF: dbus_pending_call_unref+56j
					; sub_67DEAE00+71j
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 24h
		mov	[esp+2Ch+var_1C], offset a_dbus_pendin_6 ; "_dbus_pending_call_last_unref"
		mov	[esp+2Ch+var_20], 187h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aPendingTimeout ; "!pending->timeout_added"
		movzx	eax, byte ptr [eax+24h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+4]
		mov	esi, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF9160
		mov	eax, [ebx+18h]
		test	eax, eax
		jz	short loc_67DEACF8
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF16E0

loc_67DEACF8:				; CODE XREF: dbus_pending_call_unref-72j
		mov	eax, [ebx+1Ch]
		test	eax, eax
		jz	short loc_67DEAD1C
		mov	eax, [eax+8]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_message_unref
		mov	eax, [ebx+1Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFBED0
		mov	dword ptr [ebx+1Ch], 0

loc_67DEAD1C:				; CODE XREF: dbus_pending_call_unref-63j
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_67DEAD32
		mov	[esp+2Ch+var_2C], eax
		call	dbus_message_unref
		mov	dword ptr [ebx+14h], 0

loc_67DEAD32:				; CODE XREF: dbus_pending_call_unref-3Fj
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_free
		mov	[esp+2Ch+var_2C], offset dword_67E1900C
		call	dbus_pending_call_free_data_slot
		mov	[esp+2Ch+var_2C], esi
		call	dbus_connection_unref
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; END OF FUNCTION CHUNK	FOR dbus_pending_call_unref
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 178. dbus_pending_call_unref

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_unref
dbus_pending_call_unref	proc near	; CODE XREF: sub_67DD1B50+37p
					; dbus_connection_send_with_reply+324p	...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

; FUNCTION CHUNK AT 67DEACA0 SIZE 000000B4 BYTES

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_pending_6 ; "dbus_pending_call_unref"
		mov	[esp+2Ch+var_20], 23Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DEADC0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B440
		cmp	eax, 1
		jz	short loc_67DEADB0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEADB0:				; CODE XREF: dbus_pending_call_unref+43j
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		jmp	loc_67DEACA0
; ---------------------------------------------------------------------------
		align 10h

loc_67DEADC0:				; CODE XREF: dbus_pending_call_unref+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 23Ch
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPendingNull ;	"pending != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_pending_6 ; "dbus_pending_call_unref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_pending_call_unref	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEAE00	proc near		; CODE XREF: sub_67DCE450+22Ep
					; sub_67DD1A90+51p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B440
		mov	[esp+2Ch+var_1C], offset a_dbus_pendin_7 ; "_dbus_pending_call_unref_and_unlock"
		mov	[esp+2Ch+var_20], 1B7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aOld_refcount0	; "old_refcount	> 0"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DC8C10
		cmp	esi, 1
		jz	short loc_67DEAE64
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DEAE64:				; CODE XREF: sub_67DEAE00+56j
		mov	eax, ebx
		mov	esi, [esp+2Ch+var_4]
		mov	ebx, [esp+2Ch+var_8]
		add	esp, 2Ch
		jmp	loc_67DEACA0
sub_67DEAE00	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 174. dbus_pending_call_ref

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_ref
dbus_pending_call_ref proc near		; CODE XREF: sub_67DD26C0+5Ap

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_pending_7 ; "dbus_pending_call_ref"
		mov	[esp+2Ch+var_20], 22Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DEAEC7
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460

loc_67DEAEC0:				; CODE XREF: dbus_pending_call_ref+74j
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DEAEC7:				; CODE XREF: dbus_pending_call_ref+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 22Ah
		mov	[esp+2Ch+var_20], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aPendingNull ;	"pending != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_pending_7 ; "dbus_pending_call_ref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DEAEC0
dbus_pending_call_ref endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEAF00	proc near		; CODE XREF: sub_67DCE450+2D8p
					; sub_67DD1A90+16p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E0B460
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn
sub_67DEAF00	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 34h
		lea	eax, [esp+28h]
		mov	ebx, [esp+40h]
		mov	[esp+18h], eax
		lea	eax, [esp+2Ch]
		mov	[esp+14h], eax
		mov	eax, [esp+4Ch]
		mov	dword ptr [esp], offset	dword_67E34064
		mov	[esp+10h], eax
		mov	eax, [esp+48h]
		mov	[esp+0Ch], eax
		mov	eax, [esp+44h]
		mov	[esp+8], eax
		lea	eax, [ebx+4]
		mov	[esp+4], eax
		call	sub_67DF8AE0
		mov	esi, eax
		mov	eax, [ebx+10h]
		mov	[esp], eax
		call	sub_67DC8C10
		test	esi, esi
		jz	short loc_67DEAF86
		mov	eax, [esp+2Ch]
		test	eax, eax
		jz	short loc_67DEAF86
		mov	edx, [esp+28h]
		mov	[esp], edx
		call	eax

loc_67DEAF86:				; CODE XREF: .text:67DEAF73j
					; .text:67DEAF7Bj
		mov	eax, [ebx+10h]
		mov	[esp], eax
		call	sub_67DC83D0
		mov	eax, esi
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEAFA0	proc near		; CODE XREF: sub_67DCE450+2E4p
					; .text:67DCFDABp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		xor	eax, eax
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_pendin_8 ; "_dbus_pending_call_queue_timeout_error_"...
		mov	[esp+2Ch+var_20], 0D6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aConnectionPend ; "connection == pending->connection"
		cmp	[ebx+10h], esi
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+1Ch]
		test	eax, eax
		jz	short loc_67DEAFFD
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DCD4E0
		mov	dword ptr [ebx+1Ch], 0

loc_67DEAFFD:				; CODE XREF: sub_67DEAFA0+48j
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DEAFA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEB010	proc near		; CODE XREF: sub_67DD1B50+16p
					; sub_67DD2510+EBp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, dword ptr [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_0]
		test	ebx, ebx
		jz	loc_67DEB100
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_ref

loc_67DEB02E:				; CODE XREF: sub_67DEB010+101j
		mov	edi, [esi+20h]
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_get_type
		mov	edx, offset aMethodReturn ; "method return"
		cmp	eax, 2
		jz	short loc_67DEB05A
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_get_type
		mov	edx, offset aError_0 ; "error"
		cmp	eax, 3
		jz	short loc_67DEB05A
		mov	edx, offset aOtherType ; "other	type"

loc_67DEB05A:				; CODE XREF: sub_67DEB010+31j
					; sub_67DEB010+43j
		mov	[esp+2Ch+var_18], edx
		mov	[esp+2Ch+var_14], edi
		mov	dword ptr [esp+2Ch+var_1C], ebx	; char
		mov	[esp+2Ch+Format], offset aHandingMessage ; "  handing message %p (%s) to pending ca"...
		mov	[esp+2Ch+var_24], offset a_dbus_pendin_9 ; "_dbus_pending_call_set_reply_unlocked"
		mov	[esp+2Ch+var_28], 0ACh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_pendin_9 ; "_dbus_pending_call_set_reply_unlocked"
		mov	[esp+2Ch+Format], 0AEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aPendingReply_0 ; "pending->reply == NULL"
		cmp	dword ptr [esi+14h], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	edi, [esi+20h]
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_message_get_reply_serial
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_pendin_9 ; "_dbus_pending_call_set_reply_unlocked"
		mov	[esp+2Ch+Format], 0AFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aPendingReply_s ; "pending->reply_serial == dbus_message_g"...
		cmp	edi, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esi+14h], ebx
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DEB100:				; CODE XREF: sub_67DEB010+10j
		mov	eax, [esi+1Ch]
		mov	ebx, [eax+8]
		lea	eax, [esi+1Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFBC90
		jmp	loc_67DEB02E
sub_67DEB010	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEB120	proc near		; CODE XREF: dbus_connection_send_with_reply+185p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		xor	eax, eax
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		cmp	ebx, 0FFFFFFFFh
		setnl	al
		mov	[esp+3Ch+var_2C], offset a_dbus_pendi_10 ; "_dbus_pending_call_new_unlocked"
		mov	[esp+3Ch+var_30], 65h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTimeout_mill_0 ; "timeout_milliseconds >= 0 || timeout_mi"...
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		cmp	ebx, 0FFFFFFFFh
		jz	loc_67DEB200

loc_67DEB174:				; CODE XREF: sub_67DEB120+E5j
		mov	[esp+3Ch+var_3C], offset dword_67E1900C
		xor	esi, esi
		call	dbus_pending_call_allocate_data_slot
		test	eax, eax
		jnz	short loc_67DEB1A0

loc_67DEB186:				; CODE XREF: sub_67DEB120+DDj
					; sub_67DEB120+105j ...
		mov	eax, esi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEB1A0:				; CODE XREF: sub_67DEB120+64j
		mov	[esp+3Ch+var_3C], 28h ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	esi, eax
		mov	edi, eax
		jz	short loc_67DEB219
		cmp	ebx, 7FFFFFFFh
		jz	short loc_67DEB210
		mov	[esp+3Ch+var_34], eax
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_38], eax
		call	sub_67DF1650
		test	eax, eax
		jz	short loc_67DEB22A
		mov	[esi+18h], eax

loc_67DEB1DF:				; CODE XREF: sub_67DEB120+F7j
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E0B460
		mov	[edi+10h], ebp
		add	edi, 4
		mov	[esp+3Ch+var_3C], ebp
		call	sub_67DCB080
		mov	[esp+3Ch+var_3C], edi
		call	sub_67DF8990
		jmp	short loc_67DEB186
; ---------------------------------------------------------------------------
		align 10h

loc_67DEB200:				; CODE XREF: sub_67DEB120+4Ej
		mov	ebx, 61A8h
		jmp	loc_67DEB174
; ---------------------------------------------------------------------------
		align 10h

loc_67DEB210:				; CODE XREF: sub_67DEB120+9Aj
		mov	dword ptr [eax+18h], 0
		jmp	short loc_67DEB1DF
; ---------------------------------------------------------------------------

loc_67DEB219:				; CODE XREF: sub_67DEB120+92j
		mov	[esp+3Ch+var_3C], offset dword_67E1900C
		call	dbus_pending_call_free_data_slot
		jmp	loc_67DEB186
; ---------------------------------------------------------------------------

loc_67DEB22A:				; CODE XREF: sub_67DEB120+BAj
		mov	[esp+3Ch+var_3C], offset dword_67E1900C
		call	dbus_pending_call_free_data_slot
		mov	[esp+3Ch+var_3C], esi
		xor	esi, esi
		call	dbus_free
		jmp	loc_67DEB186
sub_67DEB120	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEB250	proc near		; CODE XREF: dbus_connection_send_with_reply+1D0p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 24h
		mov	eax, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_24], offset aDidNotReceiveA ; "Did	not receive a reply. Possible cause"...
		mov	[esp+2Ch+var_28], offset aOrg_freedes_33 ; "org.freedesktop.DBus.Error.NoReply"
		mov	[esp+2Ch+var_2C], eax ;	int
		call	dbus_message_new_error
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		jz	short loc_67DEB2F5
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DFBB70
		test	eax, eax
		jz	short loc_67DEB300
		mov	[ebx+1Ch], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_pendi_11 ; "_dbus_pending_call_set_reply_serial_unl"...
		mov	[esp+2Ch+var_20], 125h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aPendingNull ;	"pending != NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_pendi_11 ; "_dbus_pending_call_set_reply_serial_unl"...
		mov	[esp+2Ch+var_20], 126h
		mov	[esp+2Ch+var_24], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aPendingReply_1 ; "pending->reply_serial == 0"
		cmp	dword ptr [ebx+20h], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_8]
		mov	[ebx+20h], eax
		mov	eax, 1

loc_67DEB2F5:				; CODE XREF: sub_67DEB250+2Bj
					; sub_67DEB250+BAj
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEB300:				; CODE XREF: sub_67DEB250+37j
		mov	[esp+2Ch+var_2C], esi
		call	dbus_message_unref
		xor	eax, eax
		jmp	short loc_67DEB2F5
sub_67DEB250	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 176. dbus_pending_call_set_notify

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_set_notify
dbus_pending_call_set_notify proc near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_pending_8 ; "dbus_pending_call_set_notify"
		mov	[esp+3Ch+var_30], 254h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEB3F3
		mov	eax, [ebx+10h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC83D0
		lea	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_24], eax
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_28], eax
		mov	eax, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_3C], offset dword_67E34064
		mov	[esp+3Ch+var_2C], eax
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_30], eax
		mov	eax, dword_67E1900C
		mov	[esp+3Ch+var_34], eax
		lea	eax, [ebx+4]
		mov	dword ptr [esp+3Ch+var_38], eax
		call	sub_67DF8AE0
		mov	esi, eax
		mov	eax, [ebx+10h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC8C10
		test	esi, esi
		jz	short loc_67DEB3E0
		mov	eax, [esp+3Ch+var_10]
		test	eax, eax
		jz	short loc_67DEB3B6
		mov	edx, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DEB3B6:				; CODE XREF: dbus_pending_call_set_notify+9Bj
		mov	eax, [ebx+10h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC83D0
		mov	eax, [esp+3Ch+arg_4]
		mov	[ebx+0Ch], eax
		mov	eax, [ebx+10h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC8C10
		add	esp, 34h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEB3E0:				; CODE XREF: dbus_pending_call_set_notify+93j
		mov	eax, [ebx+10h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC83D0
		add	esp, 34h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DEB3F3:				; CODE XREF: dbus_pending_call_set_notify+37j
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_2C], 254h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aPendingNull ;	"pending != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_pending_8 ; "dbus_pending_call_set_notify"
		call	sub_67DFB4E0
		add	esp, 34h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
dbus_pending_call_set_notify endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 175. dbus_pending_call_set_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_pending_call_set_data
dbus_pending_call_set_data proc	near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset aDbus_pending_9 ; "dbus_pending_call_set_data"
		mov	[esp+3Ch+var_30], 305h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEB560
		mov	[esp+3Ch+var_2C], offset aDbus_pending_9 ; "dbus_pending_call_set_data"
		mov	[esp+3Ch+var_30], 306h
		mov	[esp+3Ch+var_34], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_3 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	esi, esi
		js	loc_67DEB527
		mov	eax, [ebx+10h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC83D0
		lea	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_24], eax
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_28], eax
		mov	eax, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_34], esi
		mov	[esp+3Ch+var_3C], offset dword_67E34064
		mov	[esp+3Ch+var_2C], eax
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_30], eax
		lea	eax, [ebx+4]
		mov	dword ptr [esp+3Ch+var_38], eax
		call	sub_67DF8AE0
		mov	esi, eax
		mov	eax, [ebx+10h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC8C10
		test	esi, esi
		jz	short loc_67DEB509
		mov	eax, [esp+3Ch+var_10]
		test	eax, eax
		jz	short loc_67DEB509
		mov	edx, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DEB509:				; CODE XREF: dbus_pending_call_set_data+C6j
					; dbus_pending_call_set_data+CEj
		mov	eax, [ebx+10h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC83D0
		mov	eax, [ebx+10h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC8C10
		mov	eax, esi
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DEB527:				; CODE XREF: dbus_pending_call_set_data+6Fj
		mov	[esp+3Ch+var_2C], 306h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aSlot0_1 ; "slot >= 0"

loc_67DEB53F:				; CODE XREF: dbus_pending_call_set_data+148j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_pending_9 ; "dbus_pending_call_set_data"
		mov	[esp+3Ch+var_3C], eax ;	char *
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEB560:				; CODE XREF: dbus_pending_call_set_data+3Bj
		mov	[esp+3Ch+var_2C], 305h
		mov	[esp+3Ch+var_30], offset aRBuildWin32l_9 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aPendingNull ;	"pending != NULL"
		jmp	short loc_67DEB53F
dbus_pending_call_set_data endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEB580	proc near		; CODE XREF: sub_67DE3B40+18p
					; sub_67DE49F0+88p ...

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_8], ebx
		mov	ecx, [esp+0Ch+arg_4]
		mov	[esp+0Ch+var_4], esi
		mov	edx, [eax+4]
		mov	esi, [eax+14h]
		add	ecx, edx
		test	esi, esi
		mov	[eax+4], ecx
		jz	short loc_67DEB5CB
		mov	ebx, [eax+0Ch]
		cmp	edx, ebx
		jge	short loc_67DEB5C7
		cmp	ecx, ebx
		jl	short loc_67DEB5CB

loc_67DEB5AD:				; CODE XREF: sub_67DEB580+49j
		mov	edx, [eax+18h]
		mov	ebx, [esp+0Ch+var_8]
		mov	[esp+0Ch+arg_0], eax
		mov	eax, esi
		mov	esi, [esp+0Ch+var_4]
		mov	[esp+0Ch+arg_4], edx
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_67DEB5C7:				; CODE XREF: sub_67DEB580+27j
		cmp	ecx, ebx
		jl	short loc_67DEB5AD

loc_67DEB5CB:				; CODE XREF: sub_67DEB580+20j
					; sub_67DEB580+2Bj
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
sub_67DEB580	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	[esp+4], ebx
		mov	ecx, [esp+14h]
		mov	[esp+8], esi
		mov	edx, [eax+8]
		mov	esi, [eax+14h]
		add	ecx, edx
		test	esi, esi
		mov	[eax+8], ecx
		jz	short loc_67DEB62B
		mov	ebx, [eax+10h]
		cmp	edx, ebx
		jge	short loc_67DEB627
		cmp	ecx, ebx
		jl	short loc_67DEB62B

loc_67DEB60D:				; CODE XREF: .text:67DEB629j
		mov	edx, [eax+18h]
		mov	ebx, [esp+4]
		mov	[esp+10h], eax
		mov	eax, esi
		mov	esi, [esp+8]
		mov	[esp+14h], edx
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_67DEB627:				; CODE XREF: .text:67DEB607j
		cmp	ecx, ebx
		jl	short loc_67DEB60D

loc_67DEB62B:				; CODE XREF: .text:67DEB600j
					; .text:67DEB60Bj
		mov	ebx, [esp+4]
		mov	esi, [esp+8]
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEB640	proc near		; CODE XREF: dbus_connection_get_outgoing_size+B1p
					; sub_67DF48E0+19p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		retn
sub_67DEB640	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEB650	proc near		; CODE XREF: dbus_connection_get_outgoing_unix_fds+B1p
					; sub_67DF48E0+3Ep ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+8]
		retn
sub_67DEB650	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEB660	proc near		; CODE XREF: sub_67DF3050+2Bp
					; sub_67DF3090+2Bp ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	[eax+0Ch], edx
		mov	edx, [esp+arg_8]
		mov	[eax+10h], edx
		mov	edx, [esp+arg_C]
		mov	[eax+14h], edx
		mov	edx, [esp+arg_10]
		mov	[eax+18h], edx
		retn
sub_67DEB660	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DEB690
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEB690	proc near		; CODE XREF: sub_67DCC490+BAp
					; sub_67DE7530+2Ap ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_counter_ ; "_dbus_counter_ref"
		mov	[esp+2Ch+var_20], 6Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_10 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aCounterRefcoun ; "counter->refcount >	0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		add	dword ptr [ebx], 1
		add	esp, 28h
		pop	ebx
		retn
sub_67DEB690	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEB6E0	proc near		; CODE XREF: dbus_connection_free_preallocated_send+ECp
					; sub_67DCCE40+3F4p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_counte_0 ; "_dbus_counter_unref"
		mov	[esp+2Ch+var_20], 7Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_10 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aCounterRefcoun ; "counter->refcount >	0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DEB728
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DEB728:				; CODE XREF: sub_67DEB6E0+41j
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	dbus_free
sub_67DEB6E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEB740	proc near		; CODE XREF: sub_67DCCE40+139p
					; sub_67DF3BF0+40p

Size		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+Size],	1Ch ; Size
		call	dbus_malloc
		test	eax, eax
		jz	short loc_67DEB783
		mov	dword ptr [eax], 1
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+10h], 0
		mov	dword ptr [eax+14h], 0
		mov	dword ptr [eax+18h], 0

loc_67DEB783:				; CODE XREF: sub_67DEB740+11j
		add	esp, 1Ch
		retn
sub_67DEB740	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 184. dbus_server_get_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_get_data
dbus_server_get_data proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_server_ge ; "dbus_server_get_data"
		mov	[esp+2Ch+var_20], 48Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEB875
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset aDbus_server_ge ; "dbus_server_get_data"
		mov	[esp+2Ch+var_20], 48Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+5Ch], 2
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_2C], offset dword_67E34074
		mov	[esp+2Ch+var_24], eax
		lea	eax, [ebx+44h]
		mov	dword ptr [esp+2Ch+var_28], eax
		call	sub_67DF8A00
		mov	[esp+2Ch+var_1C], offset aDbus_server_ge ; "dbus_server_get_data"
		mov	[esp+2Ch+var_20], 494h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	edx, byte ptr [ebx+5Ch]
		mov	esi, eax
		shr	dl, 1
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0

loc_67DEB86D:				; CODE XREF: dbus_server_get_data+114j
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DEB875:				; CODE XREF: dbus_server_get_data+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	[esp+2Ch+var_1C], 48Ch
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aServerNull ; "server != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server_ge ; "dbus_server_get_data"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DEB86D
dbus_server_get_data endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 191. dbus_server_set_new_connection_function

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_set_new_connection_function
dbus_server_set_new_connection_function	proc near ; CODE XREF: sub_67DED3E0+91p

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	eax, [esp+4Ch+arg_4]
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_8], edi
		mov	edi, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_24], eax
		mov	[esp+4Ch+var_3C], offset aDbus_server_se ; "dbus_server_set_new_connection_function"
		mov	[esp+4Ch+var_40], 382h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEB9D0
		mov	eax, [ebx+8]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1A90
		mov	[esp+4Ch+var_3C], offset aDbus_server_se ; "dbus_server_set_new_connection_function"
		mov	[esp+4Ch+var_40], 384h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+5Ch]
		mov	edx, [ebx+50h]
		mov	esi, [ebx+54h]
		mov	[ebx+50h], ebp
		or	eax, 2
		mov	[ebx+5Ch], al
		shr	al, 1
		mov	[esp+4Ch+var_20], edx
		mov	edx, [esp+4Ch+var_24]
		and	eax, 1
		mov	[ebx+54h], edi
		mov	[ebx+4Ch], edx
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_3C], offset aDbus_server_se ; "dbus_server_set_new_connection_function"
		mov	[esp+4Ch+var_40], 38Bh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		test	esi, esi
		jz	short loc_67DEB9FD
		mov	eax, [esp+4Ch+var_20]
		mov	edx, esi
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	[esp+4Ch+arg_0], eax
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		jmp	edx
; ---------------------------------------------------------------------------
		align 10h

loc_67DEB9D0:				; CODE XREF: dbus_server_set_new_connection_function+55j
		mov	eax, off_67E19014
		mov	[esp+4Ch+var_3C], 382h
		mov	[esp+4Ch+var_40], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_44], offset aServerNull ; "server != NULL"
		mov	dword ptr [esp+4Ch+var_48], offset aDbus_server_se ; "dbus_server_set_new_connection_function"
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DFB4E0

loc_67DEB9FD:				; CODE XREF: dbus_server_set_new_connection_function+F9j
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
dbus_server_set_new_connection_function	endp

; ---------------------------------------------------------------------------
		jmp	short dbus_server_get_is_connected
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 186. dbus_server_get_is_connected

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_get_is_connected
dbus_server_get_is_connected proc near	; CODE XREF: .text:67DEBA11j

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_server__0 ; "dbus_server_get_is_connected"
		mov	[esp+2Ch+var_20], 322h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEBAF4
		mov	eax, [ebx+8]
		mov	esi, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset aDbus_server__0 ; "dbus_server_get_is_connected"
		mov	[esp+2Ch+var_20], 324h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	edx, byte ptr [ebx+5Ch]
		or	edx, 2
		mov	[ebx+5Ch], dl
		xor	esi, edx
		shr	dl, 1
		and	esi, 1
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		mov	[esp+2Ch+var_1C], offset aDbus_server__0 ; "dbus_server_get_is_connected"
		mov	[esp+2Ch+var_20], 326h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DEBAF4:				; CODE XREF: dbus_server_get_is_connected+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	[esp+2Ch+var_1C], 322h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aServerNull ; "server != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server__0 ; "dbus_server_get_is_connected"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_server_get_is_connected endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 190. dbus_server_set_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_set_data
dbus_server_set_data proc near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_server__1 ; "dbus_server_set_data"
		mov	[esp+3Ch+var_30], 468h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEBC50
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1A90
		mov	[esp+3Ch+var_2C], offset aDbus_server__1 ; "dbus_server_set_data"
		mov	[esp+3Ch+var_30], 46Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		lea	eax, [esp+3Ch+var_14]
		or	byte ptr [ebx+5Ch], 2
		mov	[esp+3Ch+var_24], eax
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_28], eax
		mov	eax, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_3C], offset dword_67E34074
		mov	[esp+3Ch+var_2C], eax
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_30], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_34], eax
		lea	eax, [ebx+44h]
		mov	dword ptr [esp+3Ch+var_38], eax
		call	sub_67DF8AE0
		mov	[esp+3Ch+var_2C], offset aDbus_server__1 ; "dbus_server_set_data"
		mov	[esp+3Ch+var_30], 472h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	edx, byte ptr [ebx+5Ch]
		mov	esi, eax
		shr	dl, 1
		and	edx, 1
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1AD0
		test	esi, esi
		jz	short loc_67DEBC42
		mov	eax, [esp+3Ch+var_10]
		test	eax, eax
		jz	short loc_67DEBC42
		mov	edx, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DEBC42:				; CODE XREF: dbus_server_set_data+FFj
					; dbus_server_set_data+107j
		mov	eax, esi
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEBC50:				; CODE XREF: dbus_server_set_data+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	[esp+3Ch+var_2C], 468h
		mov	[esp+3Ch+var_30], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aServerNull ; "server != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_server__1 ; "dbus_server_set_data"
		call	sub_67DFB4E0
		mov	eax, esi
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
dbus_server_set_data endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 182. dbus_server_free_data_slot

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_free_data_slot
dbus_server_free_data_slot proc	near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_server_fr ; "dbus_server_free_data_slot"
		mov	[esp+2Ch+var_20], 44Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [ebx]
		test	eax, eax
		js	short loc_67DEBCE0
		mov	dword ptr [esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], offset dword_67E34074
		call	sub_67DF8C50
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEBCE0:				; CODE XREF: dbus_server_free_data_slot+38j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 44Ch
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aSlot_p0_2 ; "*slot_p >= 0"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server_fr ; "dbus_server_free_data_slot"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_server_free_data_slot endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 180. dbus_server_allocate_data_slot

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_allocate_data_slot
dbus_server_allocate_data_slot proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], offset dword_67E34D84
		mov	[esp+1Ch+var_1C], offset dword_67E34074
		mov	[esp+1Ch+var_14], eax
		call	sub_67DF8DC0
		add	esp, 1Ch
		retn
dbus_server_allocate_data_slot endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 189. dbus_server_set_auth_mechanisms

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_set_auth_mechanisms
dbus_server_set_auth_mechanisms	proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_server__2 ; "dbus_server_set_auth_mechanisms"
		mov	[esp+2Ch+var_20], 40Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEBE45
		mov	eax, [ebx+8]
		xor	esi, esi
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset aDbus_server__2 ; "dbus_server_set_auth_mechanisms"
		mov	[esp+2Ch+var_20], 411h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+5Ch], 2
		test	edi, edi
		jz	short loc_67DEBDEB
		mov	[esp+2Ch+var_2C], edi
		call	sub_67DFAF20
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		jz	short loc_67DEBE3E

loc_67DEBDEB:				; CODE XREF: dbus_server_set_auth_mechanisms+89j
		mov	eax, [ebx+58h]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free_string_array
		mov	[ebx+58h], esi
		mov	[esp+2Ch+var_1C], offset aDbus_server__2 ; "dbus_server_set_auth_mechanisms"
		mov	[esp+2Ch+var_20], 41Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, 1

loc_67DEBE3E:				; CODE XREF: dbus_server_set_auth_mechanisms+99j
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DEBE45:				; CODE XREF: dbus_server_set_auth_mechanisms+3Cj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 40Fh
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aServerNull ; "server != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server__2 ; "dbus_server_set_auth_mechanisms"
		call	sub_67DFB4E0
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
dbus_server_set_auth_mechanisms	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 192. dbus_server_set_timeout_functions

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_set_timeout_functions
dbus_server_set_timeout_functions proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_server__3 ; "dbus_server_set_timeout_functions"
		mov	[esp+2Ch+var_20], 3E1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEC034
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset aDbus_server__3 ; "dbus_server_set_timeout_functions"
		mov	[esp+2Ch+var_20], 3E3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+5Ch]
		mov	esi, [ebx+34h]
		mov	dword ptr [ebx+34h], 0
		or	eax, 2
		test	esi, esi
		mov	[ebx+5Ch], al
		jz	loc_67DEC018
		shr	al, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aDbus_server__3 ; "dbus_server_set_timeout_functions"
		mov	[esp+2Ch+var_20], 3E8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, [esp+2Ch+arg_14]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_18], eax
		mov	eax, [esp+2Ch+arg_10]
		mov	[esp+2Ch+var_1C], eax
		mov	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_20], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_24], eax
		mov	eax, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_28], eax
		call	sub_67DF1540
		mov	edi, eax
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset aDbus_server__3 ; "dbus_server_set_timeout_functions"
		mov	[esp+2Ch+var_20], 3EFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	edx, byte ptr [ebx+5Ch]
		shr	dl, 1
		xor	edx, 1
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		movzx	edx, byte ptr [ebx+5Ch]
		or	edx, 2
		mov	[ebx+5Ch], dl

loc_67DEBFD0:				; CODE XREF: dbus_server_set_timeout_functions+1B2j
		shr	dl, 1
		mov	[ebx+34h], esi
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		mov	[esp+2Ch+var_1C], offset aDbus_server__3 ; "dbus_server_set_timeout_functions"
		mov	[esp+2Ch+var_20], 3F7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DEC018:				; CODE XREF: dbus_server_set_timeout_functions+93j
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server__3 ; "dbus_server_set_timeout_functions"
		xor	edi, edi
		mov	[esp+2Ch+var_2C], offset aReEntrantCallT ; "Re-entrant call to %s\n"
		call	sub_67DFB4E0
		movzx	edx, byte ptr [ebx+5Ch]
		jmp	short loc_67DEBFD0
; ---------------------------------------------------------------------------

loc_67DEC034:				; CODE XREF: dbus_server_set_timeout_functions+38j
		mov	eax, off_67E19014
		xor	edi, edi
		mov	[esp+2Ch+var_1C], 3E1h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aServerNull ; "server != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server__3 ; "dbus_server_set_timeout_functions"
		call	sub_67DFB4E0
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
dbus_server_set_timeout_functions endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 193. dbus_server_set_watch_functions

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_set_watch_functions
dbus_server_set_watch_functions	proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_server__4 ; "dbus_server_set_watch_functions"
		mov	[esp+2Ch+var_20], 3ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEC224
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset aDbus_server__4 ; "dbus_server_set_watch_functions"
		mov	[esp+2Ch+var_20], 3AEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+5Ch]
		mov	esi, [ebx+30h]
		mov	dword ptr [ebx+30h], 0
		or	eax, 2
		test	esi, esi
		mov	[ebx+5Ch], al
		jz	loc_67DEC208
		shr	al, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aDbus_server__4 ; "dbus_server_set_watch_functions"
		mov	[esp+2Ch+var_20], 3B3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	eax, [esp+2Ch+arg_14]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_18], eax
		mov	eax, [esp+2Ch+arg_10]
		mov	[esp+2Ch+var_1C], eax
		mov	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_20], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_24], eax
		mov	eax, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_28], eax
		call	sub_67DF7E20
		mov	edi, eax
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset aDbus_server__4 ; "dbus_server_set_watch_functions"
		mov	[esp+2Ch+var_20], 3BAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	edx, byte ptr [ebx+5Ch]
		shr	dl, 1
		xor	edx, 1
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		movzx	edx, byte ptr [ebx+5Ch]
		or	edx, 2
		mov	[ebx+5Ch], dl

loc_67DEC1C0:				; CODE XREF: dbus_server_set_watch_functions+1B2j
		shr	dl, 1
		mov	[ebx+30h], esi
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		mov	[esp+2Ch+var_1C], offset aDbus_server__4 ; "dbus_server_set_watch_functions"
		mov	[esp+2Ch+var_20], 3C2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DEC208:				; CODE XREF: dbus_server_set_watch_functions+93j
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server__4 ; "dbus_server_set_watch_functions"
		xor	edi, edi
		mov	[esp+2Ch+var_2C], offset aReEntrantCallT ; "Re-entrant call to %s\n"
		call	sub_67DFB4E0
		movzx	edx, byte ptr [ebx+5Ch]
		jmp	short loc_67DEC1C0
; ---------------------------------------------------------------------------

loc_67DEC224:				; CODE XREF: dbus_server_set_watch_functions+38j
		mov	eax, off_67E19014
		xor	edi, edi
		mov	[esp+2Ch+var_1C], 3ACh
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aServerNull ; "server != NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server__4 ; "dbus_server_set_watch_functions"
		call	sub_67DFB4E0
		add	esp, 20h
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
dbus_server_set_watch_functions	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 185. dbus_server_get_id

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_get_id
dbus_server_get_id proc	near

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset aDbus_server__5 ; "dbus_server_get_id"
		mov	[esp+3Ch+var_30], 35Bh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEC343
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1A90
		mov	[esp+3Ch+var_2C], offset aDbus_server__5 ; "dbus_server_get_id"
		mov	[esp+3Ch+var_30], 35Dh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		lea	eax, [esp+3Ch+var_10]
		or	byte ptr [ebx+5Ch], 2
		mov	dword ptr [esp+3Ch+var_38], eax
		lea	eax, [ebx+1Ch]
		mov	[esp+3Ch+var_10], 0
		mov	[esp+3Ch+var_3C], eax
		call	sub_67E02A10
		mov	[esp+3Ch+var_2C], offset aDbus_server__5 ; "dbus_server_get_id"
		mov	[esp+3Ch+var_30], 360h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF1AD0
		mov	eax, [esp+3Ch+var_10]

loc_67DEC33E:				; CODE XREF: dbus_server_get_id+112j
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DEC343:				; CODE XREF: dbus_server_get_id+36j
		mov	eax, off_67E19014
		mov	[esp+3Ch+var_2C], 35Bh
		mov	[esp+3Ch+var_30], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_34], offset aServerNull ; "server != NULL"
		mov	[esp+3Ch+var_3C], eax ;	char *
		mov	dword ptr [esp+3Ch+var_38], offset aDbus_server__5 ; "dbus_server_get_id"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DEC33E
dbus_server_get_id endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 183. dbus_server_get_address

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_get_address
dbus_server_get_address	proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_server__6 ; "dbus_server_get_address"
		mov	[esp+2Ch+var_20], 337h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEC455
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset aDbus_server__6 ; "dbus_server_get_address"
		mov	[esp+2Ch+var_20], 339h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+38h]
		or	byte ptr [ebx+5Ch], 2
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFAA60
		mov	[esp+2Ch+var_1C], offset aDbus_server__6 ; "dbus_server_get_address"
		mov	[esp+2Ch+var_20], 33Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	edx, byte ptr [ebx+5Ch]
		mov	esi, eax
		shr	dl, 1
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0

loc_67DEC44D:				; CODE XREF: dbus_server_get_address+104j
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DEC455:				; CODE XREF: dbus_server_get_address+37j
		mov	eax, off_67E19014
		xor	esi, esi
		mov	[esp+2Ch+var_1C], 337h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aServerNull ; "server != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server__6 ; "dbus_server_get_address"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DEC44D
dbus_server_get_address	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEC490	proc near		; CODE XREF: sub_67DEE790+239p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_server_r ; "_dbus_server_ref_unlocked"
		mov	[esp+2Ch+var_20], 1BDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aServerNull ; "server != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_server_r ; "_dbus_server_ref_unlocked"
		mov	[esp+2Ch+var_20], 1BEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		mov	[esp+2Ch+var_1C], offset a_dbus_server_r ; "_dbus_server_ref_unlocked"
		mov	[esp+2Ch+var_20], 1C6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aOld_refcount_0 ; "old_refcount > 0"
		test	eax, eax
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		add	esp, 28h
		pop	ebx
		retn
sub_67DEC490	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEC540	proc near		; CODE XREF: sub_67DED720+181p
					; sub_67DEDA80+181p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_server_u ; "_dbus_server_unref_unlocked"
		mov	[esp+2Ch+var_20], 1D7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aServerNull ; "server != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_server_u ; "_dbus_server_unref_unlocked"
		mov	[esp+2Ch+var_20], 1D9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B440
		mov	[esp+2Ch+var_1C], offset a_dbus_server_u ; "_dbus_server_unref_unlocked"
		mov	[esp+2Ch+var_20], 1DCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aOld_refcount_0 ; "old_refcount > 0"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		cmp	esi, 1
		jz	short loc_67DEC5F0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEC5F0:				; CODE XREF: sub_67DEC540+A5j
		mov	[esp+2Ch+var_1C], offset a_dbus_server_u ; "_dbus_server_unref_unlocked"
		mov	[esp+2Ch+var_20], 1E0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aServerDisconne ; "server->disconnected"
		movzx	eax, byte ptr [ebx+5Ch]
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_server_u ; "_dbus_server_unref_unlocked"
		mov	[esp+2Ch+var_20], 1E2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	[esp+2Ch+var_1C], offset a_dbus_server_u ; "_dbus_server_unref_unlocked"
		mov	[esp+2Ch+var_20], 1E4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aServerVtableFi ; "server->vtable->finalize !=	NULL"
		mov	eax, [ebx+4]
		mov	edx, [eax]
		test	edx, edx
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		mov	[esp+2Ch+arg_0], ebx
		mov	eax, [eax]
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	eax
sub_67DEC540	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 194. dbus_server_unref

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_unref
dbus_server_unref proc near		; CODE XREF: dbus_server_disconnect+141j
					; sub_67DEE790+296p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_server_un ; "dbus_server_unref"
		mov	[esp+2Ch+var_20], 2D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEC7B3
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B440
		test	eax, eax
		jle	short loc_67DEC702
		cmp	eax, 1
		jz	short loc_67DEC740
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DEC702:				; CODE XREF: dbus_server_unref+46j
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 2E1h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aOld_refcount_0 ; "old_refcount > 0"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server_un ; "dbus_server_unref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEC740:				; CODE XREF: dbus_server_unref+4Bj
		mov	[esp+2Ch+var_1C], offset aDbus_server_un ; "dbus_server_unref"
		mov	[esp+2Ch+var_20], 2E9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerDisconne ; "server->disconnected"
		movzx	eax, byte ptr [ebx+5Ch]
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset aDbus_server_un ; "dbus_server_unref"
		mov	[esp+2Ch+var_20], 2EBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerVtableFi ; "server->vtable->finalize != NULL"
		mov	eax, [ebx+4]
		mov	ecx, [eax]
		test	ecx, ecx
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		mov	[esp+2Ch+arg_0], ebx
		mov	eax, [eax]
		add	esp, 28h
		pop	ebx
		jmp	eax
; ---------------------------------------------------------------------------

loc_67DEC7B3:				; CODE XREF: dbus_server_unref+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 2D5h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aServerNull ; "server != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server_un ; "dbus_server_unref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 28h
		pop	ebx
		retn
dbus_server_unref endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 181. dbus_server_disconnect

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_disconnect
dbus_server_disconnect proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_server_di ; "dbus_server_disconnect"
		mov	[esp+2Ch+var_20], 2FCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DEC983
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		mov	[esp+2Ch+var_1C], offset aDbus_server_di ; "dbus_server_disconnect"
		mov	[esp+2Ch+var_20], 304h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		mov	esi, eax
		call	sub_67DFAE70
		test	esi, esi
		jle	loc_67DEC950
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	[esp+2Ch+var_1C], offset aDbus_server_di ; "dbus_server_disconnect"
		mov	[esp+2Ch+var_20], 308h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_ser ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		or	byte ptr [ebx+5Ch], 2
		mov	[esp+2Ch+var_1C], offset aDbus_server_di ; "dbus_server_disconnect"
		mov	[esp+2Ch+var_20], 30Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerVtableDi ; "server->vtable->disconnect != NULL"
		mov	eax, [ebx+4]
		mov	esi, [eax+4]
		test	esi, esi
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+5Ch]
		test	al, 1
		jz	short loc_67DEC936

loc_67DEC8EC:				; CODE XREF: dbus_server_disconnect+159j
		shr	al, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aDbus_server_di ; "dbus_server_disconnect"
		mov	[esp+2Ch+var_20], 314h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_server_unref
; ---------------------------------------------------------------------------

loc_67DEC936:				; CODE XREF: dbus_server_disconnect+FAj
		or	eax, 1
		mov	[ebx+5Ch], al
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+4]
		movzx	eax, byte ptr [ebx+5Ch]
		jmp	short loc_67DEC8EC
; ---------------------------------------------------------------------------
		align 10h

loc_67DEC950:				; CODE XREF: dbus_server_disconnect+75j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 304h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aOld_refcount_0 ; "old_refcount > 0"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server_di ; "dbus_server_disconnect"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DEC983:				; CODE XREF: dbus_server_disconnect+37j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 2FCh
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aServerNull ; "server != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server_di ; "dbus_server_disconnect"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_server_disconnect endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 188. dbus_server_ref

; =============== S U B	R O U T	I N E =======================================


		public dbus_server_ref
dbus_server_ref	proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_server_re ; "dbus_server_ref"
		mov	[esp+2Ch+var_20], 2ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DECA50
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E0B460
		test	eax, eax
		jle	short loc_67DECA10

loc_67DECA04:				; CODE XREF: dbus_server_ref+BDj
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DECA10:				; CODE XREF: dbus_server_ref+42j
		mov	[esp+2Ch+var_2C], ebx
		xor	ebx, ebx
		call	sub_67E0B440
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 2BDh
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aOld_refcount_0 ; "old_refcount > 0"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server_re ; "dbus_server_ref"
		call	sub_67DFB4E0
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DECA50:				; CODE XREF: dbus_server_ref+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 2ACh
		mov	[esp+2Ch+var_20], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aServerNull ; "server != NULL"
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_server_re ; "dbus_server_ref"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DECA04
dbus_server_ref	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 187. dbus_server_listen

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_server_listen(char *, int)
		public dbus_server_listen
dbus_server_listen proc	near

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= byte ptr -70h
var_6C		= dword	ptr -6Ch
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	[esp+7Ch+var_30], 0
		mov	esi, [esp+7Ch+arg_4]
		mov	[esp+7Ch+var_38], 0
		mov	[esp+7Ch+var_34], 0
		mov	[esp+7Ch+var_2C], 0
		mov	byte ptr [esp+7Ch+var_30], 1
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 229h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		mov	ebx, [esp+7Ch+arg_0]
		test	ebx, ebx
		jz	loc_67DED1DF
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 22Ah
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aConstChar_db_4 ; "(*(const char*)_DBUS_FUNCTION_NAME)	!= "...
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67DECB2E
		mov	[esp+7Ch+var_7C], esi
		call	dbus_error_is_set
		test	eax, eax
		jnz	loc_67DECEC0

loc_67DECB2E:				; CODE XREF: dbus_server_listen+9Cj
		lea	eax, [esp+7Ch+var_28]
		mov	[esp+7Ch+var_74], eax ;	int
		lea	eax, [esp+7Ch+var_24]
		mov	[esp+7Ch+var_78], eax ;	int
		mov	eax, [esp+7Ch+arg_0]
		mov	dword ptr [esp+7Ch+var_70], esi	; int
		mov	[esp+7Ch+var_7C], eax ;	char *
		call	dbus_parse_address
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	loc_67DECE41
		mov	ecx, [esp+7Ch+var_28]
		mov	[esp+7Ch+var_20], 0
		test	ecx, ecx
		jle	loc_67DECD71
		mov	[esp+7Ch+var_50], 0
		xor	ebx, ebx
		lea	edi, [esp+7Ch+var_48]
		lea	ebp, [esp+7Ch+var_20]
		mov	[esp+7Ch+var_54], esi
		jmp	loc_67DECC8C
; ---------------------------------------------------------------------------
		align 10h

loc_67DECB90:				; CODE XREF: dbus_server_listen+270j
		cmp	eax, 3
		jz	loc_67DECEF7

loc_67DECB99:				; CODE XREF: dbus_server_listen+2E0j
					; dbus_server_listen+50Dj ...
		mov	eax, [esp+7Ch+var_24]
		mov	[esp+7Ch+var_40], 0
		mov	[esp+7Ch+var_74], edi
		mov	byte ptr [esp+7Ch+var_40], 1
		mov	[esp+7Ch+var_78], ebp
		mov	eax, [eax+esi]
		mov	[esp+7Ch+var_48], 0
		mov	[esp+7Ch+var_44], 0
		mov	[esp+7Ch+var_3C], 0
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DF8680
		cmp	eax, 1
		jz	loc_67DED060
		cmp	eax, 4
		jz	loc_67DED0D3
		cmp	eax, 2
		jz	loc_67DED138
		test	eax, eax
		jz	loc_67DECE50
		cmp	eax, 3
		nop
		lea	esi, [esi+0]
		jz	loc_67DECF92

loc_67DECC06:				; CODE XREF: dbus_server_listen+43Aj
					; dbus_server_listen+5A4j ...
		xor	eax, eax
		cmp	[esp+7Ch+var_20], 0
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 26Eh
		setz	al
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aServerNull_0 ; "server == NULL"
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	edx, [esp+7Ch+var_54]
		test	edx, edx
		jz	short loc_67DECC52
		mov	eax, [esp+7Ch+var_54]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DECC57

loc_67DECC52:				; CODE XREF: dbus_server_listen+1BEj
		mov	edx, 1

loc_67DECC57:				; CODE XREF: dbus_server_listen+1D0j
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		add	ebx, 1
		mov	dword ptr [esp+7Ch+var_70], 26Fh
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDbu_7 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+7Ch+var_7C], edx
		call	sub_67DFAE70
		cmp	[esp+7Ch+var_28], ebx
		jle	loc_67DECD65

loc_67DECC8C:				; CODE XREF: dbus_server_listen+107j
		mov	eax, [esp+7Ch+var_24]
		lea	esi, ds:0[ebx*4]
		mov	[esp+7Ch+var_40], 0
		mov	[esp+7Ch+var_74], edi
		mov	byte ptr [esp+7Ch+var_40], 1
		mov	[esp+7Ch+var_78], ebp
		mov	eax, [eax+ebx*4]
		mov	[esp+7Ch+var_48], 0
		mov	[esp+7Ch+var_44], 0
		mov	[esp+7Ch+var_3C], 0
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DEE3D0
		cmp	eax, 1
		jz	loc_67DED060
		cmp	eax, 4
		jz	loc_67DED0D3
		cmp	eax, 2
		jz	loc_67DED138
		test	eax, eax
		lea	esi, [esi+0]
		jnz	loc_67DECB90
		xor	eax, eax
		cmp	[esp+7Ch+var_20], 0
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 25Ah
		setz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aServerNull_0 ; "server == NULL"
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_is_set
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 25Bh
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aTmp_errorNul_1 ; "(&tmp_error) == NULL || !dbus_error_is_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		jmp	loc_67DECB99
; ---------------------------------------------------------------------------

loc_67DECD65:				; CODE XREF: dbus_server_listen+206j
		mov	eax, [esp+7Ch+var_50]
		mov	esi, [esp+7Ch+var_54]
		test	eax, eax
		jnz	short loc_67DECDE6

loc_67DECD71:				; CODE XREF: dbus_server_listen+EBj
		test	esi, esi
		jz	short loc_67DECD83
		mov	[esp+7Ch+var_7C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DECD88

loc_67DECD83:				; CODE XREF: dbus_server_listen+2F3j
		mov	edx, 1

loc_67DECD88:				; CODE XREF: dbus_server_listen+301j
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 276h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDbu_7 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+7Ch+var_7C], edx
		call	sub_67DFAE70
		mov	ebp, [esp+7Ch+var_28]
		test	ebp, ebp
		jle	loc_67DED1B7
		mov	eax, [esp+7Ch+var_24]
		mov	eax, [eax]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_address_entry_get_method
		mov	[esp+7Ch+var_74], offset aUnknownAddress ; "Unknown address type '%s'"
		mov	[esp+7Ch+var_78], offset aOrg_freedes_34 ; "org.freedesktop.DBus.Error.BadAddress"
		mov	[esp+7Ch+var_7C], esi ;	int
		mov	dword ptr [esp+7Ch+var_70], eax	; char
		call	dbus_set_error

loc_67DECDE6:				; CODE XREF: dbus_server_listen+2EFj
					; dbus_server_listen+64Ej ...
		mov	eax, [esp+7Ch+var_24]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_address_entries_free
		mov	edi, [esp+7Ch+var_20]
		test	edi, edi
		jz	loc_67DED1FC
		test	esi, esi
		jz	short loc_67DECE10
		mov	[esp+7Ch+var_7C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DECE15

loc_67DECE10:				; CODE XREF: dbus_server_listen+380j
		mov	edx, 1

loc_67DECE15:				; CODE XREF: dbus_server_listen+38Ej
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 29Eh
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDbu_7 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+7Ch+var_7C], edx
		call	sub_67DFAE70
		mov	eax, [esp+7Ch+var_20]

loc_67DECE41:				; CODE XREF: dbus_server_listen+D7j
					; dbus_server_listen+887j
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DECE50:				; CODE XREF: dbus_server_listen+172j
		xor	eax, eax
		cmp	[esp+7Ch+var_20], 0
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 25Ah
		setz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aServerNull_0 ; "server == NULL"
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_is_set
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 25Bh
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aTmp_errorNul_1 ; "(&tmp_error) == NULL || !dbus_error_is_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		jmp	loc_67DECC06
; ---------------------------------------------------------------------------
		align 10h

loc_67DECEC0:				; CODE XREF: dbus_server_listen+A8j
		mov	[esp+7Ch+var_6C], 22Ah
		mov	dword ptr [esp+7Ch+var_70], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_74], offset aErrorNullDbu_7 ; "(error) == NULL || !dbus_error_is_set ("...

loc_67DECED8:				; CODE XREF: dbus_server_listen+777j
		mov	eax, off_67E19014
		mov	[esp+7Ch+var_78], offset aDbus_server_li ; "dbus_server_listen"
		mov	[esp+7Ch+var_7C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 6Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DECEF7:				; CODE XREF: dbus_server_listen+113j
		xor	eax, eax
		cmp	[esp+7Ch+var_20], 0
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 261h
		setz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aServerNull_0 ; "server == NULL"
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_is_set
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 262h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aTmp_errorNul_2 ; "(&tmp_error) == NULL || dbus_error_is_s"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		lea	eax, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_error_is_set
		test	eax, eax
		jnz	loc_67DED030
		lea	eax, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_78], eax
		mov	[esp+7Ch+var_7C], edi
		call	dbus_move_error
		mov	[esp+7Ch+var_50], 1
		jmp	loc_67DECB99
; ---------------------------------------------------------------------------

loc_67DECF92:				; CODE XREF: dbus_server_listen+180j
		xor	eax, eax
		cmp	[esp+7Ch+var_20], 0
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 261h
		setz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aServerNull_0 ; "server == NULL"
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_is_set
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 262h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aTmp_errorNul_2 ; "(&tmp_error) == NULL || dbus_error_is_s"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		lea	eax, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_error_is_set
		test	eax, eax
		jnz	short loc_67DED045
		lea	eax, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_78], eax
		mov	[esp+7Ch+var_7C], edi
		call	dbus_move_error
		mov	[esp+7Ch+var_50], 1
		jmp	loc_67DECC06
; ---------------------------------------------------------------------------
		align 10h

loc_67DED030:				; CODE XREF: dbus_server_listen+4EFj
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_free
		mov	[esp+7Ch+var_50], 1
		jmp	loc_67DECB99
; ---------------------------------------------------------------------------

loc_67DED045:				; CODE XREF: dbus_server_listen+58Aj
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_free
		mov	[esp+7Ch+var_50], 1
		jmp	loc_67DECC06
; ---------------------------------------------------------------------------
		align 10h

loc_67DED060:				; CODE XREF: dbus_server_listen+158j
					; dbus_server_listen+252j
		xor	eax, eax
		mov	esi, [esp+7Ch+var_54]
		cmp	[esp+7Ch+var_20], 0
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 241h
		setnz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aServerNull ; "server != NULL"
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_is_set
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 242h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aTmp_errorNul_1 ; "(&tmp_error) == NULL || !dbus_error_is_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		jmp	loc_67DECDE6
; ---------------------------------------------------------------------------

loc_67DED0D3:				; CODE XREF: dbus_server_listen+161j
					; dbus_server_listen+25Bj
		xor	eax, eax
		mov	esi, [esp+7Ch+var_54]
		cmp	[esp+7Ch+var_20], 0
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 248h
		setz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aServerNull_0 ; "server == NULL"
		call	sub_67DFAE70
		mov	eax, [esp+7Ch+var_24]
		mov	eax, [eax]
		mov	[esp+7Ch+var_7C], eax
		call	dbus_address_entry_get_method
		mov	[esp+7Ch+var_74], offset aAddressSAlread ; "Address '%s' already used"
		mov	[esp+7Ch+var_78], offset aOrg_freedes_35 ; "org.freedesktop.DBus.Error.AddressInUse"
		mov	[esp+7Ch+var_7C], esi ;	int
		mov	dword ptr [esp+7Ch+var_70], eax	; char
		call	dbus_set_error
		jmp	loc_67DECDE6
; ---------------------------------------------------------------------------

loc_67DED138:				; CODE XREF: dbus_server_listen+16Aj
					; dbus_server_listen+264j
		xor	eax, eax
		mov	esi, [esp+7Ch+var_54]
		cmp	[esp+7Ch+var_20], 0
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 252h
		setz	al
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aServerNull_0 ; "server == NULL"
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], edi
		call	dbus_error_is_set
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 253h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aTmp_errorNul_2 ; "(&tmp_error) == NULL || dbus_error_is_s"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_7C], edi
		call	dbus_move_error
		jmp	loc_67DECDE6
; ---------------------------------------------------------------------------

loc_67DED1B7:				; CODE XREF: dbus_server_listen+336j
		mov	eax, [esp+7Ch+arg_0]
		mov	[esp+7Ch+var_74], offset aEmptyAddress_0 ; "Empty address '%s'"
		mov	[esp+7Ch+var_78], offset aOrg_freedes_34 ; "org.freedesktop.DBus.Error.BadAddress"
		mov	[esp+7Ch+var_7C], esi ;	int
		mov	dword ptr [esp+7Ch+var_70], eax	; char
		call	dbus_set_error
		jmp	loc_67DECDE6
; ---------------------------------------------------------------------------

loc_67DED1DF:				; CODE XREF: dbus_server_listen+68j
		mov	[esp+7Ch+var_6C], 229h
		mov	dword ptr [esp+7Ch+var_70], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_74], offset aAddressNull_0	; "address != NULL"
		jmp	loc_67DECED8
; ---------------------------------------------------------------------------

loc_67DED1FC:				; CODE XREF: dbus_server_listen+378j
		test	esi, esi
		jz	loc_67DED30C
		lea	ebx, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_7C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jz	loc_67DED3BA

loc_67DED218:				; CODE XREF: dbus_server_listen+94Cj
		mov	edx, 1

loc_67DED21D:				; CODE XREF: dbus_server_listen+946j
		mov	[esp+7Ch+var_7C], edx
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 288h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDbu_8 ; "error == NULL || dbus_error_is_set (&fi"...
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], esi
		call	dbus_error_is_set
		test	eax, eax
		jnz	short loc_67DED295
		mov	[esp+7Ch+var_7C], ebx
		call	dbus_error_is_set
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 293h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDbu_9 ; "error == NULL || dbus_error_is_set (&fi"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	[esp+7Ch+var_78], esi
		mov	[esp+7Ch+var_7C], ebx
		call	dbus_move_error

loc_67DED295:				; CODE XREF: dbus_server_listen+7CFj
		mov	[esp+7Ch+var_7C], ebx
		call	dbus_error_is_set
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 297h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aFirst_connect_ ; "(&first_connect_error) == NULL || !dbus"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	[esp+7Ch+var_7C], esi
		call	dbus_error_is_set
		test	eax, eax
		setnz	al
		movzx	eax, al

loc_67DED2DD:				; CODE XREF: dbus_server_listen+935j
		mov	[esp+7Ch+var_7C], eax
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 298h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDb_10 ; "(error) == NULL || dbus_error_is_set (("...
		call	sub_67DFAE70
		xor	eax, eax
		jmp	loc_67DECE41
; ---------------------------------------------------------------------------

loc_67DED30C:				; CODE XREF: dbus_server_listen+77Ej
		lea	ebx, [esp+7Ch+var_38]
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 288h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDbu_8 ; "error == NULL || dbus_error_is_set (&fi"...
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 293h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aErrorNullDbu_9 ; "error == NULL || dbus_error_is_set (&fi"...
		mov	[esp+7Ch+var_7C], 1
		call	sub_67DFAE70
		mov	[esp+7Ch+var_78], 0
		mov	[esp+7Ch+var_7C], ebx
		call	dbus_move_error
		mov	[esp+7Ch+var_7C], ebx
		call	dbus_error_is_set
		mov	[esp+7Ch+var_6C], offset aDbus_server_li ; "dbus_server_listen"
		mov	dword ptr [esp+7Ch+var_70], 297h
		mov	[esp+7Ch+var_74], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+var_78], offset aFirst_connect_ ; "(&first_connect_error) == NULL || !dbus"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+7Ch+var_7C], eax
		call	sub_67DFAE70
		mov	eax, 1
		jmp	loc_67DED2DD
; ---------------------------------------------------------------------------

loc_67DED3BA:				; CODE XREF: dbus_server_listen+792j
		mov	[esp+7Ch+var_7C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DED21D
		jmp	loc_67DED218
dbus_server_listen endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DED3E0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DED3E0	proc near		; CODE XREF: .text:67DED3D1j
					; sub_67DEDCF0+20Cp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_server_f ; "_dbus_server_finalize_base"
		mov	[esp+2Ch+var_20], 0B9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aServerHave_s_3 ; "!server->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_server_f ; "_dbus_server_finalize_base"
		mov	[esp+2Ch+var_20], 0BBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aServerDisconne ; "server->disconnected"
		movzx	eax, byte ptr [ebx+5Ch]
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	eax, [ebx+44h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF9160
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		call	dbus_server_set_new_connection_function
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF8150
		mov	eax, [ebx+34h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1790
		lea	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF2C60
		mov	eax, [ebx+38h]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free
		mov	eax, [ebx+58h]
		add	ebx, 1Ch
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free_string_array
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	sub_67E02BF0
sub_67DED3E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DED4C0	proc near		; CODE XREF: sub_67DEDCF0+123p

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 5Ch
		mov	[esp+5Ch+var_10], ebx
		mov	eax, [esp+5Ch+arg_4]
		mov	ebx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_C], esi
		mov	[esp+5Ch+var_8], edi
		mov	[esp+5Ch+var_4], ebp
		mov	[ebx+4], eax
		lea	esi, [ebx+1Ch]
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67E0B460
		mov	dword ptr [esp+5Ch+var_4C], offset a_dbus_server_i ; "_dbus_server_init_base"
		mov	[esp+5Ch+Format], 6Dh
		mov	[esp+5Ch+var_54], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aOld_refcount_1 ; "old_refcount == 0"
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	dword ptr [ebx+38h], 0
		mov	dword ptr [ebx+30h], 0
		mov	dword ptr [ebx+34h], 0
		mov	dword ptr [ebx+3Ch], 0
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DED560

loc_67DED545:				; CODE XREF: sub_67DED4C0+119j
					; sub_67DED4C0+249j
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DED560:				; CODE XREF: sub_67DED4C0+83j
		lea	edi, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], edi ;	void *
		call	sub_67DFA980
		mov	[esp+5Ch+var_5C], edi
		lea	edi, [ebx+8]
		mov	[esp+5Ch+var_58], esi
		call	sub_67DFA920
		test	eax, eax
		jnz	short loc_67DED5E0

loc_67DED57E:				; CODE XREF: sub_67DED4C0+13Aj
					; sub_67DED4C0+1D5j ...
		mov	[esp+5Ch+var_5C], edi
		call	sub_67DF2C60
		mov	eax, [ebx+30h]
		mov	dword ptr [ebx+8], 0
		test	eax, eax
		jz	short loc_67DED5A3
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF8150
		mov	dword ptr [ebx+30h], 0

loc_67DED5A3:				; CODE XREF: sub_67DED4C0+D2j
		mov	eax, [ebx+34h]
		test	eax, eax
		jz	short loc_67DED5B9
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF1790
		mov	dword ptr [ebx+34h], 0

loc_67DED5B9:				; CODE XREF: sub_67DED4C0+E8j
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_67DED5CF
		mov	[esp+5Ch+var_5C], eax
		call	dbus_free
		mov	dword ptr [ebx+38h], 0

loc_67DED5CF:				; CODE XREF: sub_67DED4C0+FEj
		mov	[esp+5Ch+var_5C], esi
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67DED545
; ---------------------------------------------------------------------------
		align 10h

loc_67DED5E0:				; CODE XREF: sub_67DED4C0+BCj
		lea	ebp, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DED600

loc_67DED5F0:				; CODE XREF: sub_67DED4C0+258j
		mov	dword ptr [ebx+38h], 0
		lea	edi, [ebx+8]
		jmp	short loc_67DED57E
; ---------------------------------------------------------------------------
		align 10h

loc_67DED600:				; CODE XREF: sub_67DED4C0+12Ej
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E00CE0
		mov	[esp+5Ch+var_54], ebp
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+Format], eax
		mov	eax, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DED710
		mov	[esp+5Ch+var_58], offset aGuid_0 ; ",guid="
		mov	[esp+5Ch+var_5C], ebp ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DED710
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E00CE0
		mov	[esp+5Ch+var_54], ebp
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], esi
		mov	[esp+5Ch+Format], eax
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DED710
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_20], 0
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E05F70
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E02BF0
		mov	eax, [esp+5Ch+var_20]
		test	eax, eax
		mov	[ebx+38h], eax
		jz	loc_67DED57E
		mov	[esp+5Ch+var_5C], edi
		call	sub_67DF2CC0
		mov	ebp, [ebx+8]
		test	ebp, ebp
		jz	loc_67DED57E
		call	sub_67DF80A0
		test	eax, eax
		mov	[ebx+30h], eax
		jz	loc_67DED57E
		call	sub_67DF1630
		test	eax, eax
		mov	[ebx+34h], eax
		jz	loc_67DED57E
		lea	eax, [ebx+44h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF8990
		mov	eax, [ebx+38h]
		mov	[esp+5Ch+Format], offset aInitializedSer ; "Initialized	server on address %s\n"
		mov	[esp+5Ch+var_54], offset a_dbus_server_i ; "_dbus_server_init_base"
		mov	[esp+5Ch+var_58], 91h ;	int
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		jmp	loc_67DED545
; ---------------------------------------------------------------------------
		align 10h

loc_67DED710:				; CODE XREF: sub_67DED4C0+166j
					; sub_67DED4C0+17Ej ...
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E02BF0
		jmp	loc_67DED5F0
sub_67DED4C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DED720	proc near		; CODE XREF: .text:67DED994j
					; sub_67DED9A0+58p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		mov	ebp, ecx
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 3Ch
		mov	[esp+4Ch+var_3C], offset aProtected_ch_0 ; "protected_change_watch"
		mov	[esp+4Ch+var_40], 0E5h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [eax+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	edi, [ebx+30h]
		xor	eax, eax
		test	edi, edi
		jz	loc_67DED8AA
		mov	dword ptr [ebx+30h], 0
		mov	[esp+4Ch+var_3C], offset a_dbus_server_r ; "_dbus_server_ref_unlocked"
		mov	[esp+4Ch+var_40], 1BDh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerNull ; "server != NULL"
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+5Ch]
		mov	[esp+4Ch+var_3C], offset a_dbus_server_r ; "_dbus_server_ref_unlocked"
		mov	[esp+4Ch+var_40], 1BEh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E0B460
		mov	[esp+4Ch+var_3C], offset a_dbus_server_r ; "_dbus_server_ref_unlocked"
		mov	[esp+4Ch+var_40], 1C6h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aOld_refcount_0 ; "old_refcount > 0"
		test	eax, eax
		setnle	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+5Ch]
		mov	[esp+4Ch+var_3C], offset aProtected_ch_0 ; "protected_change_watch"
		mov	[esp+4Ch+var_40], 0F1h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		test	ebp, ebp
		jz	short loc_67DED8B2
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], edi
		call	ebp

loc_67DED854:				; CODE XREF: sub_67DED720+1AAj
					; sub_67DED720+1C8j
		mov	edx, [ebx+8]
		mov	[esp+4Ch+var_20], eax
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DF1A90
		movzx	edx, byte ptr [ebx+5Ch]
		mov	[esp+4Ch+var_3C], offset aProtected_ch_0 ; "protected_change_watch"
		mov	[esp+4Ch+var_40], 100h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	dl, 1
		xor	edx, 1
		and	edx, 1
		mov	[esp+4Ch+var_4C], edx
		mov	[esp+4Ch+var_48], offset aServerHave_ser ; "!(server)->have_server_lock"
		call	sub_67DFAE70
		or	byte ptr [ebx+5Ch], 2
		mov	[ebx+30h], edi
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DEC540
		mov	eax, [esp+4Ch+var_20]

loc_67DED8AA:				; CODE XREF: sub_67DED720+45j
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DED8B2:				; CODE XREF: sub_67DED720+129j
		mov	eax, [esp+4Ch+arg_0]
		test	eax, eax
		jz	short loc_67DED8D0
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], edi
		call	[esp+4Ch+arg_0]
		mov	eax, 1
		jmp	short loc_67DED854
; ---------------------------------------------------------------------------
		align 10h

loc_67DED8D0:				; CODE XREF: sub_67DED720+198j
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], edi
		mov	[esp+4Ch+var_44], eax
		call	[esp+4Ch+arg_4]
		mov	eax, 1
		jmp	loc_67DED854
sub_67DED720	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		xor	eax, eax
		mov	[esp+24h], esi
		mov	esi, [esp+34h]
		mov	[esp+20h], ebx
		mov	ebx, [esp+30h]
		mov	[esp+28h], edi
		mov	edi, [esp+38h]
		mov	dword ptr [esp+10h], offset a_dbus_server_t ; "_dbus_server_toggle_watch"
		test	esi, esi
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+0Ch], 13Ah
		mov	dword ptr [esp+8], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aWatchNull_1 ; "watch	!= NULL"
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_server_t ; "_dbus_server_toggle_watch"
		mov	dword ptr [esp+0Ch], 13Ch
		mov	dword ptr [esp+8], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	edx, esi
		mov	eax, ebx
		mov	[esp+38h], edi
		mov	ebx, [esp+20h]
		xor	ecx, ecx
		mov	dword ptr [esp+34h], offset sub_67DF7D70
		mov	esi, [esp+24h]
		mov	dword ptr [esp+30h], 0
		mov	edi, [esp+28h]
		add	esp, 2Ch
		jmp	sub_67DED720
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DED9A0	proc near		; CODE XREF: sub_67DEDCF0+1C0p
					; sub_67DEE680+5Cp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_server_1 ; "_dbus_server_remove_watch"
		mov	[esp+2Ch+var_20], 125h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	edx, [esp+2Ch+arg_4]
		mov	eax, ebx
		xor	ecx, ecx
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], offset loc_67DF8200
		call	sub_67DED720
		add	esp, 28h
		pop	ebx
		retn
sub_67DED9A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEDA10	proc near		; CODE XREF: sub_67DEDCF0+19Fp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_server_a ; "_dbus_server_add_watch"
		mov	[esp+2Ch+var_20], 115h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	edx, [esp+2Ch+arg_4]
		mov	eax, ebx
		mov	ecx, offset sub_67DF8330
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], 0
		call	sub_67DED720
		add	esp, 28h
		pop	ebx
		retn
sub_67DEDA10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEDA80	proc near		; CODE XREF: .text:67DEDC70j
					; .text:67DEDCA4p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		mov	ebp, ecx
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 3Ch
		mov	[esp+4Ch+var_3C], offset aProtected_ch_2 ; "protected_change_timeout"
		mov	[esp+4Ch+var_40], 15Ah
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerHave_s_0 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [eax+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	edi, [ebx+34h]
		xor	eax, eax
		test	edi, edi
		jz	loc_67DEDC0A
		mov	dword ptr [ebx+34h], 0
		mov	[esp+4Ch+var_3C], offset a_dbus_server_r ; "_dbus_server_ref_unlocked"
		mov	[esp+4Ch+var_40], 1BDh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerNull ; "server != NULL"
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+5Ch]
		mov	[esp+4Ch+var_3C], offset a_dbus_server_r ; "_dbus_server_ref_unlocked"
		mov	[esp+4Ch+var_40], 1BEh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E0B460
		mov	[esp+4Ch+var_3C], offset a_dbus_server_r ; "_dbus_server_ref_unlocked"
		mov	[esp+4Ch+var_40], 1C6h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aOld_refcount_0 ; "old_refcount > 0"
		test	eax, eax
		setnle	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+5Ch]
		mov	[esp+4Ch+var_3C], offset aProtected_ch_2 ; "protected_change_timeout"
		mov	[esp+4Ch+var_40], 165h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], offset aServerHave_s_0 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		test	ebp, ebp
		jz	short loc_67DEDC12
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], edi
		call	ebp

loc_67DEDBB4:				; CODE XREF: sub_67DEDA80+1AAj
					; sub_67DEDA80+1C8j
		mov	edx, [ebx+8]
		mov	[esp+4Ch+var_20], eax
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DF1A90
		movzx	edx, byte ptr [ebx+5Ch]
		mov	[esp+4Ch+var_3C], offset aProtected_ch_2 ; "protected_change_timeout"
		mov	[esp+4Ch+var_40], 174h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_11 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		shr	dl, 1
		xor	edx, 1
		and	edx, 1
		mov	[esp+4Ch+var_4C], edx
		mov	[esp+4Ch+var_48], offset aServerHave_ser ; "!(server)->have_server_lock"
		call	sub_67DFAE70
		or	byte ptr [ebx+5Ch], 2
		mov	[ebx+34h], edi
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DEC540
		mov	eax, [esp+4Ch+var_20]

loc_67DEDC0A:				; CODE XREF: sub_67DEDA80+45j
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DEDC12:				; CODE XREF: sub_67DEDA80+129j
		mov	edx, [esp+4Ch+arg_0]
		test	edx, edx
		jz	short loc_67DEDC30
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], edi
		call	[esp+4Ch+arg_0]
		mov	eax, 1
		jmp	short loc_67DEDBB4
; ---------------------------------------------------------------------------
		align 10h

loc_67DEDC30:				; CODE XREF: sub_67DEDA80+198j
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], edi
		mov	[esp+4Ch+var_44], eax
		call	[esp+4Ch+arg_4]
		mov	eax, 1
		jmp	loc_67DEDBB4
sub_67DEDA80	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		xor	ecx, ecx
		mov	eax, [esp+10h]
		mov	edx, [esp+14h]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+14h], offset sub_67DF1460
		add	esp, 0Ch
		jmp	sub_67DEDA80
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		xor	ecx, ecx
		mov	edx, [esp+24h]
		mov	eax, [esp+20h]
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], offset	sub_67DF1820
		call	sub_67DEDA80
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	ecx, offset sub_67DF1920
		mov	edx, [esp+24h]
		mov	eax, [esp+20h]
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 0
		call	sub_67DEDA80
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		mov	edx, [esp+8]
		mov	eax, [esp+4]
		mov	[eax+6Ch], edx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEDCF0	proc near		; CODE XREF: sub_67DEDF60+270p

Size		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		xor	edi, edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebp, [esp+3Ch+arg_4]
		mov	[esp+3Ch+Size],	74h ; size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		jz	loc_67DEDDEF
		mov	eax, [esp+3Ch+arg_C]
		lea	esi, ds:0[ebp*4]
		mov	[ebx+70h], eax
		mov	[esp+3Ch+Size],	esi ; Size
		call	dbus_malloc
		test	eax, eax
		mov	[ebx+64h], eax
		jz	loc_67DEDDE5
		mov	[esp+3Ch+Size],	esi ; size_t
		call	dbus_malloc0
		test	eax, eax
		mov	[ebx+68h], eax
		jz	loc_67DEDDDA
		test	ebp, ebp
		jle	loc_67DEDE00
		mov	edi, [esp+3Ch+arg_0]
		xor	esi, esi
		jmp	short loc_67DEDD77
; ---------------------------------------------------------------------------

loc_67DEDD57:				; CODE XREF: sub_67DEDCF0+B7j
		add	dword ptr [ebx+60h], 1
		mov	edx, [ebx+64h]
		mov	ecx, [edi]
		add	edi, 4
		mov	[edx+esi*4], ecx
		mov	edx, [ebx+68h]
		mov	[edx+esi*4], eax
		add	esi, 1
		cmp	ebp, esi
		jle	loc_67DEDE00

loc_67DEDD77:				; CODE XREF: sub_67DEDCF0+65j
		mov	[esp+3Ch+var_28], 0
		mov	[esp+3Ch+var_2C], ebx
		mov	[esp+3Ch+var_30], offset sub_67DEE790
		mov	[esp+3Ch+var_34], 1
		mov	[esp+3Ch+var_38], 1
		mov	eax, [edi]
		mov	[esp+3Ch+Size],	eax
		call	sub_67DF80C0
		test	eax, eax
		jnz	short loc_67DEDD57

loc_67DEDDA9:				; CODE XREF: sub_67DEDCF0+211j
					; sub_67DEDCF0+262j
		mov	edx, [ebx+68h]
		xor	esi, esi
		xchg	ax, ax

loc_67DEDDB0:				; CODE XREF: sub_67DEDCF0+E0j
		mov	eax, [edx+esi*4]
		test	eax, eax
		jz	short loc_67DEDDCB
		mov	[esp+3Ch+Size],	eax
		call	sub_67DF7FF0
		mov	eax, [ebx+68h]
		mov	dword ptr [eax+esi*4], 0
		mov	edx, eax

loc_67DEDDCB:				; CODE XREF: sub_67DEDCF0+C5j
		add	esi, 1
		cmp	ebp, esi
		jg	short loc_67DEDDB0

loc_67DEDDD2:				; CODE XREF: sub_67DEDCF0+26Bj
		mov	[esp+3Ch+Size],	edx
		call	dbus_free

loc_67DEDDDA:				; CODE XREF: sub_67DEDCF0+51j
		mov	eax, [ebx+64h]
		mov	[esp+3Ch+Size],	eax
		call	dbus_free

loc_67DEDDE5:				; CODE XREF: sub_67DEDCF0+3Ej
		mov	[esp+3Ch+Size],	ebx
		xor	edi, edi
		call	dbus_free

loc_67DEDDEF:				; CODE XREF: sub_67DEDCF0+1Dj
		add	esp, 2Ch
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEDE00:				; CODE XREF: sub_67DEDCF0+59j
					; sub_67DEDCF0+81j
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_38], offset off_67E26C80
		mov	[esp+3Ch+Size],	ebx
		mov	[esp+3Ch+var_34], eax
		call	sub_67DED4C0
		test	eax, eax
		jz	loc_67DEDF50
		mov	eax, [ebx+8]
		mov	edi, ebx
		mov	[esp+3Ch+Size],	eax
		call	sub_67DF1A90
		mov	[esp+3Ch+var_2C], offset a_dbus_server_0 ; "_dbus_server_new_for_socket"
		mov	[esp+3Ch+var_30], 147h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aServerHave_s_1 ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Size],	eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+5Ch]
		or	eax, 2
		test	ebp, ebp
		mov	[ebx+5Ch], al
		jle	loc_67DEDF0A
		xor	esi, esi
		jmp	short loc_67DEDE82
; ---------------------------------------------------------------------------

loc_67DEDE77:				; CODE XREF: sub_67DEDCF0+1A6j
		add	esi, 1
		cmp	ebp, esi
		jle	loc_67DEDF06

loc_67DEDE82:				; CODE XREF: sub_67DEDCF0+185j
		mov	eax, [ebx+68h]
		mov	eax, [eax+esi*4]
		mov	[esp+3Ch+Size],	ebx
		mov	[esp+3Ch+var_38], eax
		call	sub_67DEDA10
		test	eax, eax
		jnz	short loc_67DEDE77
		test	esi, esi
		jz	short loc_67DEDEB9
		xor	edi, edi
		xchg	ax, ax

loc_67DEDEA0:				; CODE XREF: sub_67DEDCF0+1C7j
		mov	eax, [ebx+68h]
		mov	eax, [eax+edi*4]
		add	edi, 1
		mov	[esp+3Ch+Size],	ebx
		mov	[esp+3Ch+var_38], eax
		call	sub_67DED9A0
		cmp	edi, esi
		jl	short loc_67DEDEA0

loc_67DEDEB9:				; CODE XREF: sub_67DEDCF0+1AAj
		mov	[esp+3Ch+var_2C], offset a_dbus_server_0 ; "_dbus_server_new_for_socket"
		mov	[esp+3Ch+var_30], 153h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aServerHave_s_2 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+3Ch+Size],	eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+3Ch+Size],	eax
		call	sub_67DF1AD0
		mov	[esp+3Ch+Size],	ebx
		call	sub_67DED3E0
		jmp	loc_67DEDDA9
; ---------------------------------------------------------------------------

loc_67DEDF06:				; CODE XREF: sub_67DEDCF0+18Cj
		movzx	eax, byte ptr [ebx+5Ch]

loc_67DEDF0A:				; CODE XREF: sub_67DEDCF0+17Dj
		shr	al, 1
		and	eax, 1
		mov	[esp+3Ch+Size],	eax
		mov	[esp+3Ch+var_2C], offset a_dbus_server_0 ; "_dbus_server_new_for_socket"
		mov	[esp+3Ch+var_30], 159h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aServerHave_s_2 ; "(server)->have_server_lock"
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+3Ch+Size],	eax
		call	sub_67DF1AD0
		add	esp, 2Ch
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DEDF50:				; CODE XREF: sub_67DEDCF0+12Aj
		test	ebp, ebp
		jg	loc_67DEDDA9
		mov	edx, [ebx+68h]
		jmp	loc_67DEDDD2
sub_67DEDCF0	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DEDF60(char	*, char, char *, char *, int, int)
sub_67DEDF60	proc near		; CODE XREF: sub_67DEE3D0+132p
					; sub_67DF8680+100p ...

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= byte ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_60		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	ecx, [esp+8Ch+arg_10]
		mov	[esp+8Ch+var_20], 0
		test	ecx, ecx
		jz	loc_67DEE210
		mov	eax, [esp+8Ch+arg_10]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DEE210

loc_67DEDF97:				; CODE XREF: sub_67DEDF60+2B5j
		lea	ebx, [esp+8Ch+var_34]
		mov	[esp+8Ch+var_8C], edx
		mov	[esp+8Ch+var_7C], offset a_dbus_server_n ; "_dbus_server_new_for_tcp_socket"
		mov	dword ptr [esp+8Ch+var_80], 193h ; char
		mov	[esp+8Ch+var_84], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aErrorNullDb_11 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], ebx
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DEE2E3
		lea	ebp, [esp+8Ch+var_5C]
		mov	[esp+8Ch+var_8C], ebp
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DEE3A0
		mov	edx, [esp+8Ch+arg_0]
		test	edx, edx
		jz	loc_67DEE295
		mov	eax, [esp+8Ch+arg_8]
		test	eax, eax
		jz	loc_67DEE2B0

loc_67DEE005:				; CODE XREF: sub_67DEDF60+349j
		mov	edi, dword ptr [esp+8Ch+arg_4]
		test	edi, edi
		jz	loc_67DEE2D0

loc_67DEE014:				; CODE XREF: sub_67DEDF60+364j
		mov	esi, dword ptr [esp+8Ch+arg_4]
		mov	edi, offset asc_67E26A6C ; "*"
		mov	ecx, 2
		repe cmpsb
		setb	al
		setnbe	dl
		sub	dl, al
		movsx	edx, dl
		cmp	edx, 1
		sbb	eax, eax
		not	eax
		and	dword ptr [esp+8Ch+arg_4], eax

loc_67DEE040:				; CODE XREF: sub_67DEDF60+37Ej
		mov	eax, [esp+8Ch+arg_10]
		mov	dword ptr [esp+8Ch+var_80], ebp	; char
		mov	[esp+8Ch+var_78], eax ;	int
		lea	eax, [esp+8Ch+var_20]
		mov	[esp+8Ch+var_7C], eax ;	int
		mov	eax, [esp+8Ch+arg_C]
		mov	[esp+8Ch+var_84], eax ;	char
		mov	eax, [esp+8Ch+arg_8]
		mov	[esp+8Ch+var_88], eax ;	char *
		mov	eax, dword ptr [esp+8Ch+arg_4]
		mov	[esp+8Ch+var_8C], eax ;	char
		call	sub_67E0E8E0
		test	eax, eax
		mov	esi, eax
		jle	loc_67DEE310
		mov	eax, [esp+8Ch+arg_0]
		lea	edi, [esp+8Ch+var_48]
		mov	[esp+8Ch+var_8C], edi ;	int
		mov	[esp+8Ch+var_88], eax ;	char *
		call	sub_67E03060
		mov	ecx, [esp+8Ch+arg_14]
		mov	eax, offset aNonceTcpHost ; "nonce-tcp:host="
		test	ecx, ecx
		jz	loc_67DEE220

loc_67DEE0B1:				; CODE XREF: sub_67DEDF60+2C5j
		mov	[esp+8Ch+var_88], eax ;	char *
		mov	[esp+8Ch+var_8C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DEE230
		mov	[esp+8Ch+var_88], edi
		mov	[esp+8Ch+var_8C], ebx
		call	sub_67DC1FA0
		test	eax, eax
		jz	loc_67DEE230
		mov	[esp+8Ch+var_88], offset aPort_0 ; ",port="
		mov	[esp+8Ch+var_8C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DEE230
		mov	[esp+8Ch+var_8C], ebp
		call	sub_67E01770
		mov	[esp+8Ch+var_8C], ebx ;	int
		mov	[esp+8Ch+var_88], eax ;	char *
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DEE230
		mov	edx, [esp+8Ch+arg_C]
		test	edx, edx
		jz	short loc_67DEE14B
		mov	[esp+8Ch+var_88], offset aFamily_0 ; ",family="
		mov	[esp+8Ch+var_8C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DEE230
		mov	eax, [esp+8Ch+arg_C]
		mov	[esp+8Ch+var_8C], ebx ;	int
		mov	[esp+8Ch+var_88], eax ;	char *
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DEE230

loc_67DEE14B:				; CODE XREF: sub_67DEDF60+1B6j
		mov	eax, [esp+8Ch+arg_14]
		xor	edi, edi
		test	eax, eax
		jz	short loc_67DEE1BD
		mov	[esp+8Ch+var_8C], 28h ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	edi, eax
		jz	loc_67DEE230
		mov	eax, [esp+8Ch+arg_10]
		mov	[esp+8Ch+var_8C], edi
		mov	[esp+8Ch+var_88], eax
		call	sub_67DE8670
		test	eax, eax
		jz	loc_67DEE393
		mov	[esp+8Ch+var_88], offset aNoncefile_0 ;	",noncefile="
		mov	[esp+8Ch+var_8C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DEE364
		mov	[esp+8Ch+var_8C], edi
		call	sub_67DE7F20
		mov	[esp+8Ch+var_8C], ebx
		mov	[esp+8Ch+var_88], eax
		call	sub_67DC1FA0
		test	eax, eax
		jz	loc_67DEE364

loc_67DEE1BD:				; CODE XREF: sub_67DEDF60+1F6j
		mov	eax, [esp+8Ch+var_20]
		mov	dword ptr [esp+8Ch+var_80], edi
		mov	[esp+8Ch+var_84], ebx
		mov	[esp+8Ch+var_88], esi
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DEDCF0
		test	eax, eax
		jz	loc_67DEE364
		mov	[esp+8Ch+var_60], eax
		mov	[esp+8Ch+var_8C], ebp
		call	sub_67E02BF0
		mov	[esp+8Ch+var_8C], ebx
		call	sub_67E02BF0
		mov	edx, [esp+8Ch+var_20]
		mov	[esp+8Ch+var_8C], edx
		call	dbus_free
		mov	eax, [esp+8Ch+var_60]
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEE210:				; CODE XREF: sub_67DEDF60+18j
					; sub_67DEDF60+31j
		mov	edx, 1
		jmp	loc_67DEDF97
; ---------------------------------------------------------------------------
		align 10h

loc_67DEE220:				; CODE XREF: sub_67DEDF60+14Bj
		mov	eax, offset aTcpHost ; "tcp:host="
		jmp	loc_67DEE0B1
; ---------------------------------------------------------------------------
		align 10h

loc_67DEE230:				; CODE XREF: sub_67DEDF60+15Fj
					; sub_67DEDF60+173j ...
		mov	eax, [esp+8Ch+arg_10]
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedes_37 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+var_8C], eax ;	int
		call	dbus_set_error

loc_67DEE24F:				; CODE XREF: sub_67DEDF60+43Bj
		xor	edi, edi

loc_67DEE251:				; CODE XREF: sub_67DEDF60+30Dj
		mov	eax, [esp+8Ch+var_20]
		mov	[esp+8Ch+var_88], 0 ; int
		mov	eax, [eax+edi*4]
		add	edi, 1
		mov	[esp+8Ch+var_8C], eax ;	SOCKET
		call	sub_67E0CC70
		cmp	esi, edi
		jg	short loc_67DEE251
		mov	eax, [esp+8Ch+var_20]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_free

loc_67DEE27B:				; CODE XREF: sub_67DEDF60+3F8j
		mov	[esp+8Ch+var_8C], ebp
		call	sub_67E02BF0

loc_67DEE283:				; CODE XREF: sub_67DEDF60+45Fj
		mov	[esp+8Ch+var_8C], ebx
		call	sub_67E02BF0
		add	esp, 7Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DEE295:				; CODE XREF: sub_67DEDF60+90j
		mov	eax, [esp+8Ch+arg_8]
		mov	[esp+8Ch+arg_0], offset	aLocalhost ; "localhost"
		test	eax, eax
		jnz	loc_67DEE005
		nop

loc_67DEE2B0:				; CODE XREF: sub_67DEDF60+9Fj
		mov	edi, dword ptr [esp+8Ch+arg_4]
		mov	[esp+8Ch+arg_8], offset	a0 ; "0"
		test	edi, edi
		jnz	loc_67DEE014
		lea	esi, [esi+0]

loc_67DEE2D0:				; CODE XREF: sub_67DEDF60+AEj
		mov	eax, [esp+8Ch+arg_0]
		mov	dword ptr [esp+8Ch+arg_4], eax
		jmp	loc_67DEE040
; ---------------------------------------------------------------------------

loc_67DEE2E3:				; CODE XREF: sub_67DEDF60+6Dj
		mov	eax, [esp+8Ch+arg_10]
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedes_37 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+var_8C], eax ;	int
		call	dbus_set_error
		add	esp, 7Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEE310:				; CODE XREF: sub_67DEDF60+120j
		mov	esi, [esp+8Ch+arg_10]
		test	esi, esi
		jz	short loc_67DEE35D
		mov	eax, [esp+8Ch+arg_10]
		mov	[esp+8Ch+var_8C], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DEE35D

loc_67DEE330:				; CODE XREF: sub_67DEDF60+402j
		mov	[esp+8Ch+var_7C], offset a_dbus_server_n ; "_dbus_server_new_for_tcp_socket"
		mov	dword ptr [esp+8Ch+var_80], 1B3h
		mov	[esp+8Ch+var_84], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aErrorNullDb_14 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+8Ch+var_8C], edx
		call	sub_67DFAE70
		jmp	loc_67DEE27B
; ---------------------------------------------------------------------------

loc_67DEE35D:				; CODE XREF: sub_67DEDF60+3B9j
					; sub_67DEDF60+3CEj
		mov	edx, 1
		jmp	short loc_67DEE330
; ---------------------------------------------------------------------------

loc_67DEE364:				; CODE XREF: sub_67DEDF60+23Bj
					; sub_67DEDF60+257j ...
		mov	eax, [esp+8Ch+arg_10]
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedes_37 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+var_8C], eax ;	int
		call	dbus_set_error
		mov	[esp+8Ch+var_88], 0
		mov	[esp+8Ch+var_8C], edi
		call	sub_67DE8190

loc_67DEE393:				; CODE XREF: sub_67DEDF60+223j
		mov	[esp+8Ch+var_8C], edi
		call	dbus_free
		jmp	loc_67DEE24F
; ---------------------------------------------------------------------------

loc_67DEE3A0:				; CODE XREF: sub_67DEDF60+81j
		mov	eax, [esp+8Ch+arg_10]
		mov	[esp+8Ch+var_84], 0 ; char *
		mov	[esp+8Ch+var_88], offset aOrg_freedes_37 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8Ch+var_8C], eax ;	int
		call	dbus_set_error
		jmp	loc_67DEE283
sub_67DEDF60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEE3D0	proc near		; CODE XREF: dbus_server_listen+24Ap

var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 4Ch
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, offset aNonceTcp_0	; "nonce-tcp"
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_8], edi
		mov	edi, offset aTcp_0 ; "tcp"
		mov	dword ptr [eax], 0
		mov	[esp+4Ch+var_4C], ebp
		call	dbus_address_entry_get_method
		mov	ecx, 4
		mov	esi, eax
		mov	edx, eax
		repe cmpsb
		setnbe	cl
		setb	al
		cmp	cl, al
		jz	short loc_67DEE476
		mov	ecx, 0Ah
		mov	esi, edx
		mov	edi, ebx
		repe cmpsb
		jz	short loc_67DEE476
		mov	ebx, [esp+4Ch+arg_8]
		test	ebx, ebx
		jz	loc_67DEE570
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_4C], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DEE570

loc_67DEE447:				; CODE XREF: sub_67DEE3D0+1A5j
		mov	[esp+4Ch+var_3C], offset a_dbus_server_l ; "_dbus_server_listen_socket"
		mov	[esp+4Ch+var_40], 231h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aErrorNullDb_11 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		xor	eax, eax
		jmp	loc_67DEE558
; ---------------------------------------------------------------------------

loc_67DEE476:				; CODE XREF: sub_67DEE3D0+46j
					; sub_67DEE3D0+53j
		mov	[esp+4Ch+var_2C], edx
		mov	edi, ebx
		mov	dword ptr [esp+4Ch+var_48], offset aHost ; "host"
		mov	[esp+4Ch+var_4C], ebp
		call	dbus_address_entry_get_value
		mov	dword ptr [esp+4Ch+var_48], offset aBind ; "bind"
		mov	[esp+4Ch+var_4C], ebp
		mov	[esp+4Ch+var_20], eax
		call	dbus_address_entry_get_value
		mov	dword ptr [esp+4Ch+var_48], offset aPort ; "port"
		mov	[esp+4Ch+var_4C], ebp
		mov	dword ptr [esp+4Ch+var_28], eax
		call	dbus_address_entry_get_value
		mov	dword ptr [esp+4Ch+var_48], offset aFamily ; "family"
		mov	[esp+4Ch+var_4C], ebp
		mov	[esp+4Ch+var_24], eax
		call	dbus_address_entry_get_value
		mov	edx, [esp+4Ch+var_2C]
		mov	ecx, 0Ah
		mov	esi, edx
		repe cmpsb
		mov	esi, [esp+4Ch+var_24]
		mov	[esp+4Ch+var_40], eax ;	char *
		mov	edi, dword ptr [esp+4Ch+var_28]
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_44], esi ;	char *
		mov	dword ptr [esp+4Ch+var_48], edi	; char
		setz	dl
		movzx	edx, dl
		mov	[esp+4Ch+var_38], edx ;	int
		mov	edx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_4C], eax ;	char *
		mov	[esp+4Ch+var_3C], edx ;	int
		call	sub_67DEDF60
		mov	edx, [esp+4Ch+arg_4]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_67DEE587
		mov	edi, [esp+4Ch+arg_8]
		test	edi, edi
		jz	short loc_67DEE580
		mov	esi, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_4C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DEE580

loc_67DEE52B:				; CODE XREF: sub_67DEE3D0+1B5j
		mov	[esp+4Ch+var_3C], offset a_dbus_server_l ; "_dbus_server_listen_socket"
		mov	[esp+4Ch+var_40], 226h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aErrorNullDb_11 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		mov	eax, 1

loc_67DEE558:				; CODE XREF: sub_67DEE3D0+A1j
					; sub_67DEE3D0+1FEj
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DEE570:				; CODE XREF: sub_67DEE3D0+5Bj
					; sub_67DEE3D0+71j
		mov	edx, 1
		jmp	loc_67DEE447
; ---------------------------------------------------------------------------
		align 10h

loc_67DEE580:				; CODE XREF: sub_67DEE3D0+147j
					; sub_67DEE3D0+159j
		mov	edx, 1
		jmp	short loc_67DEE52B
; ---------------------------------------------------------------------------

loc_67DEE587:				; CODE XREF: sub_67DEE3D0+13Fj
		mov	esi, [esp+4Ch+arg_8]
		test	esi, esi
		jz	short loc_67DEE5D0
		mov	edi, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_4C], edi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DEE5D0

loc_67DEE5A1:				; CODE XREF: sub_67DEE3D0+205j
		mov	[esp+4Ch+var_3C], offset a_dbus_server_l ; "_dbus_server_listen_socket"
		mov	[esp+4Ch+var_40], 22Bh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_48], offset aErrorNullDb_14 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		mov	eax, 3
		jmp	short loc_67DEE558
; ---------------------------------------------------------------------------

loc_67DEE5D0:				; CODE XREF: sub_67DEE3D0+1BDj
					; sub_67DEE3D0+1CFj
		mov	edx, 1
		jmp	short loc_67DEE5A1
sub_67DEE3D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEE5E0	proc near		; DATA XREF: .rdata:off_67E26C80o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67DED3E0
		mov	ecx, [ebx+60h]
		test	ecx, ecx
		jle	short loc_67DEE623
		mov	edx, [ebx+68h]
		xor	esi, esi
		lea	esi, [esi+0]

loc_67DEE600:				; CODE XREF: sub_67DEE5E0+41j
		mov	eax, [edx+esi*4]
		test	eax, eax
		jz	short loc_67DEE61C
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF7FF0
		mov	edx, [ebx+68h]
		mov	ecx, [ebx+60h]
		mov	dword ptr [edx+esi*4], 0

loc_67DEE61C:				; CODE XREF: sub_67DEE5E0+25j
		add	esi, 1
		cmp	ecx, esi
		jg	short loc_67DEE600

loc_67DEE623:				; CODE XREF: sub_67DEE5E0+16j
		mov	eax, [ebx+64h]
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	eax, [ebx+68h]
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	eax, [ebx+6Ch]
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	edx, [ebx+70h]
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DEE660
		mov	[esp+1Ch+var_18], 0
		mov	[esp+1Ch+var_1C], edx
		call	sub_67DE8190
		mov	eax, [ebx+70h]

loc_67DEE660:				; CODE XREF: sub_67DEE5E0+6Bj
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 14h
		pop	ebx
		pop	esi
		jmp	dbus_free
sub_67DEE5E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEE680	proc near		; DATA XREF: .rdata:67E26C84o

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	edi
		push	esi
		push	ebx
		sub	esp, 40h
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_3C], offset aSocket_disconn ; "socket_disconnect"
		mov	[esp+4Ch+var_40], 0E7h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerHave_s_2 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	edx, [ebx+60h]
		test	edx, edx
		jle	short loc_67DEE721
		xor	esi, esi

loc_67DEE6C4:				; CODE XREF: sub_67DEE680+9Fj
		mov	eax, [ebx+68h]
		lea	edi, ds:0[esi*4]
		mov	eax, [eax+esi*4]
		test	eax, eax
		jz	short loc_67DEE6F9
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DED9A0
		mov	eax, [ebx+68h]
		mov	eax, [eax+esi*4]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF7FF0
		mov	eax, [ebx+68h]
		mov	dword ptr [eax+esi*4], 0

loc_67DEE6F9:				; CODE XREF: sub_67DEE680+53j
		mov	[esp+4Ch+var_48], 0 ; int
		mov	eax, [ebx+64h]
		add	esi, 1
		mov	eax, [eax+edi]
		mov	[esp+4Ch+var_4C], eax ;	SOCKET
		call	sub_67E0CC70
		mov	eax, [ebx+64h]
		mov	dword ptr [eax+edi], 0FFFFFFFFh
		cmp	[ebx+60h], esi
		jg	short loc_67DEE6C4

loc_67DEE721:				; CODE XREF: sub_67DEE680+40j
		mov	eax, [ebx+6Ch]
		test	eax, eax
		jz	short loc_67DEE748
		lea	esi, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_48], eax ;	char *
		mov	[esp+4Ch+var_4C], esi ;	int
		call	sub_67E03060
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E0C520

loc_67DEE748:				; CODE XREF: sub_67DEE680+A6j
		mov	eax, [ebx+3Ch]
		test	eax, eax
		jz	short loc_67DEE754
		call	sub_67E0F1A0

loc_67DEE754:				; CODE XREF: sub_67DEE680+CDj
		mov	[esp+4Ch+var_3C], offset aSocket_disconn ; "socket_disconnect"
		mov	[esp+4Ch+var_40], 101h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerHave_s_2 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DEE680	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEE790	proc near		; DATA XREF: sub_67DEDCF0+93o

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		xor	ebp, ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_8]
		mov	edi, [esp+4Ch+arg_0]
		mov	esi, dword ptr [esp+4Ch+arg_4]
		mov	eax, [ebx+8]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+4Ch+var_3C], offset aSocket_handle_ ; "socket_handle_watch"
		mov	[esp+4Ch+Format], 0ACh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerHave_s_1 ; "!(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	edx, [ebx+60h]
		or	byte ptr [ebx+5Ch], 2
		test	edx, edx
		jle	short loc_67DEE810
		mov	ecx, [ebx+68h]
		xor	eax, eax
		jmp	short loc_67DEE7FD
; ---------------------------------------------------------------------------

loc_67DEE7F6:				; CODE XREF: sub_67DEE790+70j
		add	eax, 1
		cmp	eax, edx
		jz	short loc_67DEE810

loc_67DEE7FD:				; CODE XREF: sub_67DEE790+64j
					; sub_67DEE790+7Cj
		cmp	[ecx+eax*4], edi
		jnz	short loc_67DEE7F6
		add	eax, 1
		mov	ebp, 1
		cmp	eax, edx
		jnz	short loc_67DEE7FD
		xchg	ax, ax

loc_67DEE810:				; CODE XREF: sub_67DEE790+5Dj
					; sub_67DEE790+6Bj
		mov	dword ptr [esp+4Ch+var_3C], offset aSocket_handle_ ; "socket_handle_watch"
		mov	[esp+4Ch+Format], 0B4h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aFound	; "found"
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67DFAE70
		mov	dword ptr [esp+4Ch+var_3C], esi	; char
		mov	[esp+4Ch+Format], offset aHandlingClient ; "Handling client connection,	flags 0x%x\"...
		mov	[esp+4Ch+var_44], offset aSocket_handle_ ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 0B7h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		test	esi, 1
		jnz	short loc_67DEE8D0

loc_67DEE868:				; CODE XREF: sub_67DEE790+2ABj
					; sub_67DEE790+2F0j ...
		test	esi, 4
		jnz	short loc_67DEE8A6

loc_67DEE870:				; CODE XREF: sub_67DEE790+13Aj
		and	esi, 8
		jz	short loc_67DEE899
		mov	[esp+4Ch+Format], offset aHangupOnServer ; "Hangup on server listening socket\n"
		mov	[esp+4Ch+var_44], offset aSocket_handle_ ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 0DCh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DEE899:				; CODE XREF: sub_67DEE790+E3j
		add	esp, 3Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DEE8A6:				; CODE XREF: sub_67DEE790+DEj
		mov	[esp+4Ch+Format], offset aErrorOnServerL ; "Error on server listening socket\n"
		mov	[esp+4Ch+var_44], offset aSocket_handle_ ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 0D9h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	short loc_67DEE870
; ---------------------------------------------------------------------------
		align 10h

loc_67DEE8D0:				; CODE XREF: sub_67DEE790+D6j
		mov	[esp+4Ch+var_4C], edi
		call	dbus_watch_get_socket
		mov	edx, [ebx+70h]
		test	edx, edx
		jz	loc_67DEEB6B
		mov	[esp+4Ch+var_48], edx ;	int
		mov	[esp+4Ch+var_4C], eax ;	SOCKET
		call	sub_67DE8580
		mov	edi, eax

loc_67DEE8F1:				; CODE XREF: sub_67DEE790+3E5j
		test	edi, edi
		js	loc_67DEEA85
		mov	dword ptr [esp+4Ch+var_3C], edi	; char
		mov	[esp+4Ch+Format], offset aCreatingNewCli ; "Creating new client	connection with	fd "...
		mov	[esp+4Ch+var_44], offset aHandle_new_cli ; "handle_new_client_fd_and_unlock"
		mov	[esp+4Ch+var_48], 60h ;	int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset aHandle_new_cli ; "handle_new_client_fd_and_unlock"
		mov	[esp+4Ch+Format], 62h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerHave_s_2 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_48], 0 ; int
		mov	[esp+4Ch+var_4C], edi ;	SOCKET
		call	sub_67E0D430
		test	eax, eax
		jz	loc_67DEEA40
		lea	eax, [ebx+1Ch]
		mov	[esp+4Ch+var_44], 0
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DF5480
		test	eax, eax
		mov	ebp, eax
		jz	loc_67DEEB7A
		mov	eax, [ebx+58h]
		mov	[esp+4Ch+var_4C], ebp
		mov	[esp+4Ch+var_48], eax
		call	sub_67DF2E40
		test	eax, eax
		jz	loc_67DEEAFA
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67DCCE40
		mov	[esp+4Ch+var_4C], ebp
		mov	edi, eax
		call	sub_67DF3240
		test	edi, edi
		jz	loc_67DEEB9F
		mov	eax, [ebx+50h]
		mov	ebp, [ebx+4Ch]
		mov	[esp+4Ch+var_4C], ebx
		mov	[esp+4Ch+var_20], eax
		call	sub_67DEC490
		mov	dword ptr [esp+4Ch+var_3C], offset aHandle_new_cli ; "handle_new_client_fd_and_unlock"
		mov	[esp+4Ch+Format], 8Fh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerHave_s_2 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		test	ebp, ebp
		jz	short loc_67DEEA23
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_4C], ebx
		mov	[esp+4Ch+var_44], eax
		call	ebp

loc_67DEEA23:				; CODE XREF: sub_67DEE790+280j
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_server_unref
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DD0180
		mov	[esp+4Ch+var_4C], edi
		call	dbus_connection_unref
		jmp	loc_67DEE868
; ---------------------------------------------------------------------------

loc_67DEEA40:				; CODE XREF: sub_67DEE790+1D4j
		mov	dword ptr [esp+4Ch+var_3C], offset aHandle_new_cli ; "handle_new_client_fd_and_unlock"
		mov	[esp+4Ch+Format], 66h

loc_67DEEA50:				; CODE XREF: sub_67DEE790+33Fj
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerHave_s_2 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		jmp	loc_67DEE868
; ---------------------------------------------------------------------------

loc_67DEEA85:				; CODE XREF: sub_67DEE790+163j
		call	sub_67E0B400
		test	eax, eax
		lea	esi, [esi+0]
		jnz	short loc_67DEEAD4
		call	sub_67E094E0
		mov	[esp+4Ch+Format], offset aFailedToAccept ; "Failed to accept a client connection: %"...
		mov	[esp+4Ch+var_44], offset aSocket_handle_ ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 0CDh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0

loc_67DEEABF:				; CODE XREF: sub_67DEE790+368j
		mov	dword ptr [esp+4Ch+var_3C], offset aSocket_handle_ ; "socket_handle_watch"
		mov	[esp+4Ch+Format], 0CFh
		jmp	loc_67DEEA50
; ---------------------------------------------------------------------------

loc_67DEEAD4:				; CODE XREF: sub_67DEE790+300j
		mov	[esp+4Ch+Format], offset aNoClientAvaila ; "No client available	to accept after	all"...
		mov	[esp+4Ch+var_44], offset aSocket_handle_ ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 0CAh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	short loc_67DEEABF
; ---------------------------------------------------------------------------

loc_67DEEAFA:				; CODE XREF: sub_67DEE790+20Cj
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67DF3240
		mov	dword ptr [esp+4Ch+var_3C], offset aHandle_new_cli ; "handle_new_client_fd_and_unlock"
		mov	[esp+4Ch+Format], 76h

loc_67DEEB12:				; CODE XREF: sub_67DEE790+40Aj
					; sub_67DEE790+41Fj
		mov	[esp+4Ch+var_44], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aServerHave_s_2 ; "(server)->have_server_lock"
		movzx	eax, byte ptr [ebx+5Ch]
		shr	al, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		and	byte ptr [ebx+5Ch], 0FDh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		mov	[esp+4Ch+Format], offset aRejectedClient ; "Rejected client connection due to lack "...
		mov	[esp+4Ch+var_44], offset aSocket_handle_ ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 0D4h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_12 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DEE868
; ---------------------------------------------------------------------------

loc_67DEEB6B:				; CODE XREF: sub_67DEE790+14Dj
		mov	[esp+4Ch+var_4C], eax ;	SOCKET
		call	sub_67E0CBF0
		mov	edi, eax
		jmp	loc_67DEE8F1
; ---------------------------------------------------------------------------

loc_67DEEB7A:				; CODE XREF: sub_67DEE790+1F5j
		mov	[esp+4Ch+var_48], 0 ; int
		mov	[esp+4Ch+var_4C], edi ;	SOCKET
		call	sub_67E0CC70
		mov	dword ptr [esp+4Ch+var_3C], offset aHandle_new_cli ; "handle_new_client_fd_and_unlock"
		mov	[esp+4Ch+Format], 6Eh
		jmp	loc_67DEEB12
; ---------------------------------------------------------------------------

loc_67DEEB9F:				; CODE XREF: sub_67DEE790+226j
		mov	dword ptr [esp+4Ch+var_3C], offset aHandle_new_cli ; "handle_new_client_fd_and_unlock"
		mov	[esp+4Ch+Format], 84h
		jmp	loc_67DEEB12
sub_67DEE790	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], 67452301h
		mov	dword ptr [eax+4], 0EFCDAB89h
		mov	dword ptr [eax+8], 98BADCFEh
		mov	dword ptr [eax+0Ch], 10325476h
		mov	dword ptr [eax+10h], 0C3D2E1F0h
		mov	dword ptr [eax+18h], 0
		mov	dword ptr [eax+14h], 0
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEEC00	proc near		; CODE XREF: sub_67DEFF30+30Cp
					; sub_67DEFF30+69Dp ...

Dst		= dword	ptr -0DCh
Src		= dword	ptr -0D8h
Size		= dword	ptr -0D4h
var_C0		= dword	ptr -0C0h
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0CCh
		mov	esi, [eax]
		mov	[esp+0DCh+var_74], eax
		add	eax, 4
		mov	edi, [esp+0DCh+var_74]
		mov	[esp+0DCh+var_60], eax
		mov	eax, [esp+0DCh+var_74]
		mov	ebp, [esp+0DCh+var_74]
		mov	ebx, [edi+8]
		add	edi, 0Ch
		mov	ecx, [eax+4]
		add	eax, 8
		mov	[esp+0DCh+var_64], eax
		mov	eax, [esp+0DCh+var_74]
		mov	[esp+0DCh+var_68], edi
		mov	edi, [ebp+0Ch]
		add	ebp, 10h
		mov	[esp+0DCh+var_6C], ebp
		mov	[esp+0DCh+var_B8], ecx
		mov	ebp, [eax+10h]
		lea	eax, [esp+0DCh+var_5C]
		mov	[esp+0DCh+Src],	edx ; Src
		mov	[esp+0DCh+Size], 40h ; Size
		mov	[esp+0DCh+Dst],	eax ; Dst
		call	memmove
		mov	edx, [esp+0DCh+var_5C]
		mov	eax, esi
		mov	ecx, [esp+0DCh+var_B8]
		ror	eax, 1Bh
		lea	ebp, [ebp+edx+5A827999h]
		mov	edx, [esp+0DCh+var_58]
		add	ebp, eax
		mov	eax, edi
		xor	eax, ebx
		and	eax, ecx
		xor	eax, edi
		add	ebp, eax
		mov	eax, ecx
		ror	eax, 2
		lea	ecx, [edi+edx+5A827999h]
		mov	edx, eax
		xor	edx, ebx
		mov	edi, ebp
		and	edx, esi
		xor	edx, ebx
		add	ecx, edx
		mov	edx, eax
		ror	edi, 1Bh
		add	ecx, edi
		mov	edi, [esp+0DCh+var_54]
		ror	esi, 2
		xor	edx, esi
		and	edx, ebp
		lea	ebx, [ebx+edi+5A827999h]
		xor	edx, eax
		lea	edx, [ebx+edx]
		mov	ebx, ecx
		ror	ebx, 1Bh
		add	edx, ebx
		mov	ebx, ebp
		mov	ebp, [esp+0DCh+var_50]
		ror	ebx, 2
		lea	eax, [eax+ebp+5A827999h]
		mov	ebp, edx
		mov	[esp+0DCh+var_B4], eax
		mov	eax, ebx
		xor	eax, esi
		and	eax, ecx
		xor	eax, esi
		add	eax, [esp+0DCh+var_B4]
		ror	ebp, 1Bh
		ror	ecx, 2
		add	eax, ebp
		mov	ebp, [esp+0DCh+var_4C]
		lea	esi, [esi+ebp+5A827999h]
		mov	ebp, eax
		mov	[esp+0DCh+var_B4], esi
		mov	esi, ecx
		xor	esi, ebx
		and	esi, edx
		xor	esi, ebx
		add	esi, [esp+0DCh+var_B4]
		ror	ebp, 1Bh
		ror	edx, 2
		lea	ebp, [esi+ebp]
		mov	esi, [esp+0DCh+var_48]
		lea	ebx, [ebx+esi+5A827999h]
		mov	esi, ebp
		mov	[esp+0DCh+var_B4], ebx
		mov	ebx, edx
		xor	ebx, ecx
		and	ebx, eax
		xor	ebx, ecx
		add	ebx, [esp+0DCh+var_B4]
		ror	esi, 1Bh
		ror	eax, 2
		lea	esi, [ebx+esi]
		mov	ebx, [esp+0DCh+var_44]
		lea	ecx, [ecx+ebx+5A827999h]
		mov	ebx, esi
		mov	[esp+0DCh+var_B4], ecx
		mov	ecx, eax
		xor	ecx, edx
		and	ecx, ebp
		xor	ecx, edx
		add	ecx, [esp+0DCh+var_B4]
		ror	ebx, 1Bh
		ror	ebp, 2
		lea	ebx, [ecx+ebx]
		mov	ecx, [esp+0DCh+var_40]
		lea	edx, [edx+ecx+5A827999h]
		mov	ecx, ebx
		mov	[esp+0DCh+var_B4], edx
		mov	edx, ebp
		xor	edx, eax
		and	edx, esi
		xor	edx, eax
		add	edx, [esp+0DCh+var_B4]
		ror	ecx, 1Bh
		ror	esi, 2
		lea	ecx, [edx+ecx]
		mov	edx, [esp+0DCh+var_3C]
		lea	eax, [eax+edx+5A827999h]
		mov	edx, ecx
		mov	[esp+0DCh+var_B4], eax
		mov	eax, esi
		xor	eax, ebp
		and	eax, ebx
		xor	eax, ebp
		add	eax, [esp+0DCh+var_B4]
		ror	edx, 1Bh
		ror	ebx, 2
		lea	edx, [eax+edx]
		mov	eax, [esp+0DCh+var_38]
		lea	ebp, [ebp+eax+5A827999h]
		mov	eax, ebx
		xor	eax, esi
		and	eax, ecx
		xor	eax, esi
		lea	eax, [ebp+eax+0]
		mov	ebp, edx
		ror	ebp, 1Bh
		lea	ebp, [eax+ebp]
		mov	eax, [esp+0DCh+var_34]
		ror	ecx, 2
		lea	esi, [esi+eax+5A827999h]
		mov	eax, ecx
		xor	eax, ebx
		and	eax, edx
		xor	eax, ebx
		lea	eax, [esi+eax]
		mov	esi, ebp
		ror	esi, 1Bh
		lea	esi, [eax+esi]
		mov	eax, [esp+0DCh+var_30]
		ror	edx, 2
		lea	ebx, [ebx+eax+5A827999h]
		mov	eax, edx
		xor	eax, ecx
		and	eax, ebp
		xor	eax, ecx
		lea	eax, [ebx+eax]
		mov	ebx, esi
		ror	ebx, 1Bh
		lea	ebx, [eax+ebx]
		mov	eax, [esp+0DCh+var_2C]
		ror	ebp, 2
		lea	ecx, [ecx+eax+5A827999h]
		mov	eax, ebp
		xor	eax, edx
		and	eax, esi
		xor	eax, edx
		lea	eax, [ecx+eax]
		mov	ecx, ebx
		ror	ecx, 1Bh
		add	eax, ecx
		mov	ecx, [esp+0DCh+var_28]
		ror	esi, 2
		lea	edx, [edx+ecx+5A827999h]
		mov	ecx, eax
		mov	[esp+0DCh+var_B4], edx
		mov	edx, esi
		xor	edx, ebp
		and	edx, ebx
		xor	edx, ebp
		add	edx, [esp+0DCh+var_B4]
		ror	ecx, 1Bh
		ror	ebx, 2
		lea	ecx, [edx+ecx]
		mov	edx, [esp+0DCh+var_24]
		lea	ebp, [ebp+edx+5A827999h]
		mov	edx, ebx
		xor	edx, esi
		and	edx, eax
		xor	edx, esi
		lea	edx, [ebp+edx+0]
		mov	ebp, ecx
		ror	ebp, 1Bh
		lea	ebp, [edx+ebp]
		mov	edx, [esp+0DCh+var_20]
		ror	eax, 2
		lea	esi, [esi+edx+5A827999h]
		mov	edx, eax
		xor	edx, ebx
		and	edx, ecx
		xor	edx, ebx
		lea	edx, [esi+edx]
		mov	esi, ebp
		ror	esi, 1Bh
		add	edx, esi
		mov	esi, [esp+0DCh+var_5C]
		ror	ecx, 2
		xor	esi, edi
		mov	[esp+0DCh+var_94], esi
		mov	esi, [esp+0DCh+var_3C]
		xor	[esp+0DCh+var_94], esi
		mov	esi, [esp+0DCh+var_28]
		xor	[esp+0DCh+var_94], esi
		ror	[esp+0DCh+var_94], 1Fh
		mov	esi, [esp+0DCh+var_94]
		xor	edi, [esp+0DCh+var_4C]
		xor	edi, [esp+0DCh+var_34]
		xor	edi, [esp+0DCh+var_20]
		lea	ebx, [ebx+esi+5A827999h]
		mov	esi, edx
		mov	[esp+0DCh+var_B4], ebx
		mov	ebx, ecx
		xor	ebx, eax
		and	ebx, ebp
		xor	ebx, eax
		add	ebx, [esp+0DCh+var_B4]
		ror	esi, 1Bh
		ror	ebp, 2
		add	ebx, esi
		mov	esi, [esp+0DCh+var_50]
		xor	esi, [esp+0DCh+var_58]
		ror	edi, 1Fh
		mov	[esp+0DCh+var_98], esi
		mov	esi, [esp+0DCh+var_38]
		xor	[esp+0DCh+var_98], esi
		mov	esi, [esp+0DCh+var_24]
		xor	[esp+0DCh+var_98], esi
		ror	[esp+0DCh+var_98], 1Fh
		mov	esi, [esp+0DCh+var_98]
		lea	eax, [eax+esi+5A827999h]
		mov	esi, ebx
		mov	[esp+0DCh+var_B4], eax
		mov	eax, ebp
		xor	eax, ecx
		and	eax, edx
		xor	eax, ecx
		add	eax, [esp+0DCh+var_B4]
		ror	edx, 2
		ror	esi, 1Bh
		add	eax, esi
		lea	esi, [ecx+edi+5A827999h]
		mov	ecx, edx
		xor	ecx, ebp
		and	ecx, ebx
		xor	ecx, ebp
		lea	ecx, [esi+ecx]
		mov	esi, eax
		ror	esi, 1Bh
		lea	esi, [ecx+esi]
		mov	ecx, [esp+0DCh+var_48]
		ror	ebx, 2
		xor	ecx, [esp+0DCh+var_50]
		mov	[esp+0DCh+var_9C], ecx
		mov	ecx, [esp+0DCh+var_30]
		xor	[esp+0DCh+var_9C], ecx
		mov	ecx, [esp+0DCh+var_94]
		xor	[esp+0DCh+var_9C], ecx
		ror	[esp+0DCh+var_9C], 1Fh
		mov	ecx, [esp+0DCh+var_9C]
		lea	ebp, [ebp+ecx+5A827999h]
		mov	ecx, ebx
		xor	ecx, edx
		and	ecx, eax
		xor	ecx, edx
		lea	ecx, [ebp+ecx+0]
		mov	ebp, esi
		ror	ebp, 1Bh
		add	ecx, ebp
		mov	ebp, [esp+0DCh+var_44]
		xor	ebp, [esp+0DCh+var_4C]
		ror	eax, 2
		mov	[esp+0DCh+var_A4], ebp
		mov	ebp, [esp+0DCh+var_2C]
		xor	[esp+0DCh+var_A4], ebp
		mov	ebp, [esp+0DCh+var_98]
		xor	[esp+0DCh+var_A4], ebp
		ror	[esp+0DCh+var_A4], 1Fh
		mov	ebp, [esp+0DCh+var_A4]
		lea	edx, [edx+ebp+6ED9EBA1h]
		mov	ebp, ecx
		mov	[esp+0DCh+var_B4], edx
		mov	edx, eax
		xor	edx, ebx
		xor	edx, esi
		add	edx, [esp+0DCh+var_B4]
		ror	ebp, 1Bh
		ror	esi, 2
		add	edx, ebp
		mov	ebp, [esp+0DCh+var_40]
		xor	ebp, [esp+0DCh+var_48]
		mov	[esp+0DCh+var_A8], ebp
		mov	ebp, [esp+0DCh+var_28]
		xor	[esp+0DCh+var_A8], ebp
		xor	[esp+0DCh+var_A8], edi
		ror	[esp+0DCh+var_A8], 1Fh
		mov	ebp, [esp+0DCh+var_A8]
		lea	ebx, [ebx+ebp+6ED9EBA1h]
		mov	ebp, edx
		mov	[esp+0DCh+var_B4], ebx
		mov	ebx, esi
		xor	ebx, eax
		xor	ebx, ecx
		add	ebx, [esp+0DCh+var_B4]
		ror	ebp, 1Bh
		ror	ecx, 2
		lea	ebp, [ebx+ebp]
		mov	ebx, [esp+0DCh+var_3C]
		xor	ebx, [esp+0DCh+var_44]
		mov	[esp+0DCh+var_AC], ebx
		mov	ebx, [esp+0DCh+var_24]
		xor	[esp+0DCh+var_AC], ebx
		mov	ebx, [esp+0DCh+var_9C]
		xor	[esp+0DCh+var_AC], ebx
		ror	[esp+0DCh+var_AC], 1Fh
		mov	ebx, [esp+0DCh+var_AC]
		lea	eax, [eax+ebx+6ED9EBA1h]
		mov	[esp+0DCh+var_B4], eax
		mov	ebx, [esp+0DCh+var_B4]
		mov	eax, ecx
		xor	eax, esi
		xor	eax, edx
		ror	edx, 2
		add	ebx, eax
		mov	eax, ebp
		ror	eax, 1Bh
		lea	eax, [ebx+eax]
		mov	[esp+0DCh+var_A0], eax
		mov	eax, [esp+0DCh+var_38]
		xor	eax, [esp+0DCh+var_40]
		xor	eax, [esp+0DCh+var_20]
		xor	eax, [esp+0DCh+var_A4]
		ror	eax, 1Fh
		lea	ebx, [esi+eax+6ED9EBA1h]
		mov	esi, edx
		xor	esi, ecx
		xor	esi, ebp
		lea	ebx, [esi+ebx]
		mov	esi, [esp+0DCh+var_A0]
		ror	ebp, 2
		ror	esi, 1Bh
		lea	esi, [ebx+esi]
		mov	ebx, [esp+0DCh+var_34]
		xor	ebx, [esp+0DCh+var_3C]
		mov	[esp+0DCh+var_B4], ebx
		mov	ebx, [esp+0DCh+var_94]
		xor	[esp+0DCh+var_B4], ebx
		mov	ebx, [esp+0DCh+var_A8]
		xor	[esp+0DCh+var_B4], ebx
		ror	[esp+0DCh+var_B4], 1Fh
		mov	ebx, [esp+0DCh+var_B4]
		lea	ecx, [ecx+ebx+6ED9EBA1h]
		mov	ebx, esi
		mov	[esp+0DCh+var_B0], ecx
		mov	ecx, ebp
		xor	ecx, edx
		xor	ecx, [esp+0DCh+var_A0]
		add	ecx, [esp+0DCh+var_B0]
		ror	ebx, 1Bh
		add	ecx, ebx
		mov	ebx, [esp+0DCh+var_A0]
		mov	[esp+0DCh+var_88], ecx
		mov	ecx, [esp+0DCh+var_30]
		xor	ecx, [esp+0DCh+var_38]
		ror	ebx, 2
		mov	[esp+0DCh+var_A0], ecx
		mov	ecx, [esp+0DCh+var_98]
		xor	[esp+0DCh+var_A0], ecx
		mov	ecx, [esp+0DCh+var_AC]
		xor	[esp+0DCh+var_A0], ecx
		ror	[esp+0DCh+var_A0], 1Fh
		mov	ecx, [esp+0DCh+var_A0]
		lea	edx, [edx+ecx+6ED9EBA1h]
		mov	ecx, [esp+0DCh+var_88]
		mov	[esp+0DCh+var_B0], edx
		mov	edx, ebx
		xor	edx, ebp
		xor	edx, esi
		add	edx, [esp+0DCh+var_B0]
		ror	ecx, 1Bh
		ror	esi, 2
		add	edx, ecx
		mov	ecx, [esp+0DCh+var_88]
		mov	[esp+0DCh+var_8C], edx
		mov	edx, [esp+0DCh+var_2C]
		xor	edx, [esp+0DCh+var_34]
		ror	ecx, 2
		xor	edx, edi
		xor	edx, eax
		ror	edx, 1Fh
		mov	[esp+0DCh+var_90], edx
		lea	edx, [ebp+edx+6ED9EBA1h]
		mov	ebp, esi
		xor	ebp, ebx
		xor	ebp, [esp+0DCh+var_88]
		add	ebp, edx
		mov	edx, [esp+0DCh+var_8C]
		ror	edx, 1Bh
		add	ebp, edx
		mov	edx, [esp+0DCh+var_28]
		xor	edx, [esp+0DCh+var_30]
		mov	[esp+0DCh+var_88], edx
		mov	edx, [esp+0DCh+var_9C]
		xor	[esp+0DCh+var_88], edx
		mov	edx, [esp+0DCh+var_B4]
		xor	[esp+0DCh+var_88], edx
		ror	[esp+0DCh+var_88], 1Fh
		mov	edx, [esp+0DCh+var_88]
		lea	ebx, [ebx+edx+6ED9EBA1h]
		mov	edx, ebp
		mov	[esp+0DCh+var_B0], ebx
		mov	ebx, ecx
		xor	ebx, esi
		xor	ebx, [esp+0DCh+var_8C]
		add	ebx, [esp+0DCh+var_B0]
		ror	edx, 1Bh
		add	ebx, edx
		mov	[esp+0DCh+var_84], ebx
		mov	ebx, [esp+0DCh+var_24]
		xor	ebx, [esp+0DCh+var_2C]
		mov	edx, [esp+0DCh+var_8C]
		mov	[esp+0DCh+var_7C], ebx
		mov	ebx, [esp+0DCh+var_A4]
		xor	[esp+0DCh+var_7C], ebx
		mov	ebx, [esp+0DCh+var_A0]
		ror	edx, 2
		xor	[esp+0DCh+var_7C], ebx
		ror	[esp+0DCh+var_7C], 1Fh
		mov	ebx, [esp+0DCh+var_7C]
		lea	esi, [esi+ebx+6ED9EBA1h]
		mov	ebx, [esp+0DCh+var_84]
		mov	[esp+0DCh+var_B0], esi
		mov	esi, edx
		xor	esi, ecx
		xor	esi, ebp
		add	esi, [esp+0DCh+var_B0]
		ror	ebx, 1Bh
		ror	ebp, 2
		add	esi, ebx
		mov	ebx, [esp+0DCh+var_20]
		xor	ebx, [esp+0DCh+var_28]
		mov	[esp+0DCh+var_80], ebx
		mov	ebx, [esp+0DCh+var_A8]
		xor	[esp+0DCh+var_80], ebx
		mov	ebx, [esp+0DCh+var_90]
		xor	[esp+0DCh+var_80], ebx
		ror	[esp+0DCh+var_80], 1Fh
		mov	ebx, [esp+0DCh+var_80]
		lea	ecx, [ecx+ebx+6ED9EBA1h]
		mov	ebx, esi
		mov	[esp+0DCh+var_8C], ecx
		mov	ecx, ebp
		xor	ecx, edx
		xor	ecx, [esp+0DCh+var_84]
		add	ecx, [esp+0DCh+var_8C]
		ror	ebx, 1Bh
		add	ecx, ebx
		mov	ebx, [esp+0DCh+var_84]
		mov	[esp+0DCh+var_70], ecx
		mov	ecx, [esp+0DCh+var_94]
		xor	ecx, [esp+0DCh+var_24]
		ror	ebx, 2
		mov	[esp+0DCh+var_B0], ecx
		mov	ecx, [esp+0DCh+var_AC]
		xor	[esp+0DCh+var_B0], ecx
		mov	ecx, [esp+0DCh+var_88]
		xor	[esp+0DCh+var_B0], ecx
		ror	[esp+0DCh+var_B0], 1Fh
		mov	ecx, [esp+0DCh+var_B0]
		lea	edx, [edx+ecx+6ED9EBA1h]
		mov	ecx, [esp+0DCh+var_70]
		mov	[esp+0DCh+var_8C], edx
		mov	edx, ebx
		xor	edx, ebp
		xor	edx, esi
		add	edx, [esp+0DCh+var_8C]
		ror	ecx, 1Bh
		ror	esi, 2
		add	edx, ecx
		mov	ecx, [esp+0DCh+var_7C]
		mov	[esp+0DCh+var_78], edx
		mov	edx, [esp+0DCh+var_98]
		xor	edx, [esp+0DCh+var_20]
		xor	edx, eax
		xor	edx, ecx
		mov	ecx, [esp+0DCh+var_70]
		ror	edx, 1Fh
		mov	[esp+0DCh+var_8C], edx
		lea	edx, [ebp+edx+6ED9EBA1h]
		mov	ebp, esi
		xor	ebp, ebx
		xor	ebp, [esp+0DCh+var_70]
		ror	ecx, 2
		add	ebp, edx
		mov	edx, [esp+0DCh+var_78]
		ror	edx, 1Bh
		add	ebp, edx
		mov	edx, [esp+0DCh+var_94]
		xor	edx, edi
		mov	[esp+0DCh+var_94], edx
		mov	edx, [esp+0DCh+var_B4]
		xor	[esp+0DCh+var_94], edx
		mov	edx, [esp+0DCh+var_80]
		xor	[esp+0DCh+var_94], edx
		ror	[esp+0DCh+var_94], 1Fh
		mov	edx, [esp+0DCh+var_94]
		lea	ebx, [edx+ebx+6ED9EBA1h]
		mov	edx, ebp
		mov	[esp+0DCh+var_84], ebx
		mov	ebx, ecx
		xor	ebx, esi
		xor	ebx, [esp+0DCh+var_78]
		add	ebx, [esp+0DCh+var_84]
		ror	edx, 1Bh
		add	ebx, edx
		mov	[esp+0DCh+var_70], ebx
		mov	ebx, [esp+0DCh+var_9C]
		xor	ebx, [esp+0DCh+var_98]
		mov	edx, [esp+0DCh+var_78]
		xor	edi, [esp+0DCh+var_A4]
		mov	[esp+0DCh+var_98], ebx
		mov	ebx, [esp+0DCh+var_A0]
		xor	[esp+0DCh+var_98], ebx
		mov	ebx, [esp+0DCh+var_B0]
		ror	edx, 2
		xor	[esp+0DCh+var_98], ebx
		ror	[esp+0DCh+var_98], 1Fh
		mov	ebx, [esp+0DCh+var_98]
		lea	esi, [ebx+esi+6ED9EBA1h]
		mov	ebx, [esp+0DCh+var_70]
		mov	[esp+0DCh+var_84], esi
		mov	esi, edx
		xor	esi, ecx
		xor	esi, ebp
		add	esi, [esp+0DCh+var_84]
		ror	ebx, 1Bh
		ror	ebp, 2
		add	esi, ebx
		mov	ebx, [esp+0DCh+var_90]
		xor	edi, ebx
		mov	ebx, [esp+0DCh+var_8C]
		xor	edi, ebx
		mov	ebx, [esp+0DCh+var_70]
		ror	edi, 1Fh
		mov	[esp+0DCh+var_78], edi
		lea	edi, [edi+ecx+6ED9EBA1h]
		mov	ecx, ebp
		xor	ecx, edx
		xor	ecx, [esp+0DCh+var_70]
		ror	ebx, 2
		lea	ecx, [edi+ecx]
		mov	edi, esi
		ror	edi, 1Bh
		add	ecx, edi
		mov	edi, [esp+0DCh+var_A8]
		xor	edi, [esp+0DCh+var_9C]
		mov	[esp+0DCh+var_9C], edi
		mov	edi, [esp+0DCh+var_88]
		xor	[esp+0DCh+var_9C], edi
		mov	edi, [esp+0DCh+var_94]
		xor	[esp+0DCh+var_9C], edi
		ror	[esp+0DCh+var_9C], 1Fh
		mov	edi, [esp+0DCh+var_9C]
		lea	edx, [edi+edx+6ED9EBA1h]
		mov	edi, ecx
		mov	[esp+0DCh+var_84], edx
		mov	edx, ebx
		xor	edx, ebp
		xor	edx, esi
		add	edx, [esp+0DCh+var_84]
		ror	edi, 1Bh
		ror	esi, 2
		add	edx, edi
		mov	edi, [esp+0DCh+var_AC]
		xor	edi, [esp+0DCh+var_A4]
		mov	[esp+0DCh+var_A4], edi
		mov	edi, [esp+0DCh+var_7C]
		xor	[esp+0DCh+var_A4], edi
		mov	edi, [esp+0DCh+var_98]
		xor	[esp+0DCh+var_A4], edi
		ror	[esp+0DCh+var_A4], 1Fh
		mov	edi, [esp+0DCh+var_A4]
		lea	ebp, [edi+ebp+6ED9EBA1h]
		mov	edi, esi
		xor	edi, ebx
		xor	edi, ecx
		lea	edi, [ebp+edi+0]
		mov	ebp, edx
		ror	ebp, 1Bh
		add	edi, ebp
		mov	ebp, [esp+0DCh+var_A8]
		ror	ecx, 2
		xor	ebp, eax
		mov	[esp+0DCh+var_A8], ebp
		mov	ebp, [esp+0DCh+var_80]
		xor	[esp+0DCh+var_A8], ebp
		mov	ebp, [esp+0DCh+var_78]
		xor	[esp+0DCh+var_A8], ebp
		ror	[esp+0DCh+var_A8], 1Fh
		mov	ebp, [esp+0DCh+var_A8]
		lea	ebx, [ebp+ebx+6ED9EBA1h]
		mov	ebp, edi
		mov	[esp+0DCh+var_84], ebx
		mov	ebx, ecx
		xor	ebx, esi
		xor	ebx, edx
		add	ebx, [esp+0DCh+var_84]
		ror	ebp, 1Bh
		ror	edx, 2
		add	ebx, ebp
		mov	ebp, [esp+0DCh+var_B4]
		xor	ebp, [esp+0DCh+var_AC]
		mov	[esp+0DCh+var_AC], ebp
		mov	ebp, [esp+0DCh+var_B0]
		xor	[esp+0DCh+var_AC], ebp
		mov	ebp, [esp+0DCh+var_9C]
		xor	[esp+0DCh+var_AC], ebp
		ror	[esp+0DCh+var_AC], 1Fh
		mov	ebp, [esp+0DCh+var_AC]
		xor	eax, [esp+0DCh+var_A0]
		lea	esi, [ebp+esi+6ED9EBA1h]
		mov	ebp, ebx
		mov	[esp+0DCh+var_84], esi
		mov	esi, edx
		xor	esi, ecx
		xor	esi, edi
		add	esi, [esp+0DCh+var_84]
		ror	ebp, 1Bh
		ror	edi, 2
		add	esi, ebp
		mov	ebp, [esp+0DCh+var_8C]
		xor	eax, ebp
		mov	ebp, [esp+0DCh+var_A4]
		xor	eax, ebp
		mov	ebp, esi
		ror	eax, 1Fh
		mov	[esp+0DCh+var_84], eax
		lea	ecx, [eax+ecx+6ED9EBA1h]
		mov	eax, edi
		xor	eax, edx
		xor	eax, ebx
		add	ecx, eax
		mov	eax, [esp+0DCh+var_90]
		ror	ebp, 1Bh
		add	ecx, ebp
		mov	ebp, [esp+0DCh+var_94]
		xor	eax, [esp+0DCh+var_B4]
		ror	ebx, 2
		xor	eax, ebp
		mov	ebp, [esp+0DCh+var_A8]
		xor	eax, ebp
		mov	ebp, esi
		ror	eax, 1Fh
		and	ebp, ebx
		mov	[esp+0DCh+var_B4], eax
		lea	edx, [eax+edx-70E44324h]
		mov	eax, ecx
		ror	eax, 1Bh
		add	edx, eax
		mov	eax, esi
		or	eax, ebx
		and	eax, edi
		or	eax, ebp
		mov	ebp, [esp+0DCh+var_98]
		add	edx, eax
		mov	eax, [esp+0DCh+var_88]
		xor	eax, [esp+0DCh+var_A0]
		ror	esi, 2
		xor	eax, ebp
		mov	ebp, [esp+0DCh+var_AC]
		xor	eax, ebp
		mov	ebp, ecx
		ror	eax, 1Fh
		and	ebp, esi
		mov	[esp+0DCh+var_A0], eax
		lea	edi, [eax+edi-70E44324h]
		mov	eax, ecx
		or	eax, esi
		and	eax, ebx
		or	eax, ebp
		mov	ebp, edx
		ror	ebp, 1Bh
		lea	eax, [edi+eax]
		mov	edi, [esp+0DCh+var_7C]
		add	eax, ebp
		mov	ebp, [esp+0DCh+var_78]
		xor	edi, [esp+0DCh+var_90]
		ror	ecx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_84]
		xor	edi, ebp
		mov	ebp, edx
		ror	edi, 1Fh
		mov	[esp+0DCh+var_90], edi
		lea	edi, [edi+ebx-70E44324h]
		mov	ebx, eax
		ror	ebx, 1Bh
		and	ebp, ecx
		lea	ebx, [edi+ebx]
		mov	edi, edx
		or	edi, ecx
		and	edi, esi
		or	edi, ebp
		mov	ebp, [esp+0DCh+var_9C]
		add	ebx, edi
		mov	edi, [esp+0DCh+var_80]
		xor	edi, [esp+0DCh+var_88]
		ror	edx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_B4]
		xor	edi, ebp
		mov	ebp, eax
		ror	edi, 1Fh
		and	ebp, edx
		mov	[esp+0DCh+var_88], edi
		lea	edi, [edi+esi-70E44324h]
		mov	esi, eax
		or	esi, edx
		and	esi, ecx
		or	esi, ebp
		mov	ebp, ebx
		ror	ebp, 1Bh
		lea	esi, [edi+esi]
		mov	edi, [esp+0DCh+var_B0]
		add	esi, ebp
		mov	ebp, [esp+0DCh+var_A4]
		xor	edi, [esp+0DCh+var_7C]
		ror	eax, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_A0]
		xor	edi, ebp
		mov	ebp, ebx
		ror	edi, 1Fh
		and	ebp, eax
		mov	[esp+0DCh+var_7C], edi
		lea	edi, [edi+ecx-70E44324h]
		mov	ecx, esi
		ror	ecx, 1Bh
		lea	ecx, [edi+ecx]
		mov	edi, ebx
		or	edi, eax
		and	edi, edx
		or	edi, ebp
		mov	ebp, [esp+0DCh+var_A8]
		add	ecx, edi
		mov	edi, [esp+0DCh+var_8C]
		xor	edi, [esp+0DCh+var_80]
		ror	ebx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_90]
		xor	edi, ebp
		mov	ebp, esi
		ror	edi, 1Fh
		mov	[esp+0DCh+var_80], edi
		lea	edi, [edi+edx-70E44324h]
		mov	edx, esi
		or	edx, ebx
		and	ebp, ebx
		and	edx, eax
		or	edx, ebp
		mov	ebp, ecx
		ror	ebp, 1Bh
		lea	edx, [edi+edx]
		mov	edi, [esp+0DCh+var_94]
		add	edx, ebp
		mov	ebp, [esp+0DCh+var_AC]
		xor	edi, [esp+0DCh+var_B0]
		ror	esi, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_88]
		xor	edi, ebp
		mov	ebp, ecx
		ror	edi, 1Fh
		and	ebp, esi
		mov	[esp+0DCh+var_B0], edi
		lea	edi, [edi+eax-70E44324h]
		mov	eax, edx
		ror	eax, 1Bh
		lea	eax, [edi+eax]
		mov	edi, ecx
		or	edi, esi
		and	edi, ebx
		or	edi, ebp
		mov	ebp, [esp+0DCh+var_84]
		add	eax, edi
		mov	edi, [esp+0DCh+var_98]
		xor	edi, [esp+0DCh+var_8C]
		ror	ecx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_7C]
		xor	edi, ebp
		mov	ebp, edx
		ror	edi, 1Fh
		and	ebp, ecx
		mov	[esp+0DCh+var_8C], edi
		lea	edi, [edi+ebx-70E44324h]
		mov	ebx, edx
		or	ebx, ecx
		and	ebx, esi
		or	ebx, ebp
		mov	ebp, eax
		ror	ebp, 1Bh
		lea	ebx, [edi+ebx]
		mov	edi, [esp+0DCh+var_78]
		add	ebx, ebp
		mov	ebp, [esp+0DCh+var_B4]
		xor	edi, [esp+0DCh+var_94]
		ror	edx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_80]
		xor	edi, ebp
		mov	ebp, eax
		ror	edi, 1Fh
		mov	[esp+0DCh+var_94], edi
		lea	edi, [edi+esi-70E44324h]
		mov	esi, ebx
		ror	esi, 1Bh
		and	ebp, edx
		lea	esi, [edi+esi]
		mov	edi, eax
		or	edi, edx
		and	edi, ecx
		or	edi, ebp
		mov	ebp, [esp+0DCh+var_A0]
		add	esi, edi
		mov	edi, [esp+0DCh+var_9C]
		xor	edi, [esp+0DCh+var_98]
		ror	eax, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_B0]
		xor	edi, ebp
		mov	ebp, ebx
		ror	edi, 1Fh
		and	ebp, eax
		mov	[esp+0DCh+var_98], edi
		lea	edi, [edi+ecx-70E44324h]
		mov	ecx, ebx
		or	ecx, eax
		and	ecx, edx
		or	ecx, ebp
		mov	ebp, esi
		ror	ebp, 1Bh
		lea	ecx, [edi+ecx]
		mov	edi, [esp+0DCh+var_A4]
		add	ecx, ebp
		mov	ebp, [esp+0DCh+var_90]
		xor	edi, [esp+0DCh+var_78]
		ror	ebx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_8C]
		xor	edi, ebp
		mov	ebp, esi
		ror	edi, 1Fh
		and	ebp, ebx
		mov	[esp+0DCh+var_78], edi
		lea	edi, [edi+edx-70E44324h]
		mov	edx, ecx
		ror	edx, 1Bh
		lea	edx, [edi+edx]
		mov	edi, esi
		or	edi, ebx
		and	edi, eax
		or	edi, ebp
		mov	ebp, [esp+0DCh+var_88]
		add	edx, edi
		mov	edi, [esp+0DCh+var_A8]
		xor	edi, [esp+0DCh+var_9C]
		ror	esi, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_94]
		xor	edi, ebp
		mov	ebp, ecx
		ror	edi, 1Fh
		mov	[esp+0DCh+var_9C], edi
		lea	edi, [edi+eax-70E44324h]
		mov	eax, ecx
		or	eax, esi
		and	ebp, esi
		and	eax, ebx
		or	eax, ebp
		mov	ebp, edx
		ror	ebp, 1Bh
		lea	eax, [edi+eax]
		mov	edi, [esp+0DCh+var_AC]
		add	eax, ebp
		mov	ebp, [esp+0DCh+var_7C]
		xor	edi, [esp+0DCh+var_A4]
		ror	ecx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_98]
		xor	edi, ebp
		mov	ebp, edx
		ror	edi, 1Fh
		and	ebp, ecx
		mov	[esp+0DCh+var_A4], edi
		lea	edi, [edi+ebx-70E44324h]
		mov	ebx, eax
		ror	ebx, 1Bh
		lea	ebx, [edi+ebx]
		mov	edi, edx
		or	edi, ecx
		and	edi, esi
		or	edi, ebp
		mov	ebp, [esp+0DCh+var_80]
		add	ebx, edi
		mov	edi, [esp+0DCh+var_84]
		xor	edi, [esp+0DCh+var_A8]
		ror	edx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_78]
		xor	edi, ebp
		mov	ebp, eax
		ror	edi, 1Fh
		and	ebp, edx
		mov	[esp+0DCh+var_A8], edi
		lea	edi, [edi+esi-70E44324h]
		mov	esi, eax
		or	esi, edx
		and	esi, ecx
		or	esi, ebp
		mov	ebp, ebx
		ror	ebp, 1Bh
		lea	esi, [edi+esi]
		mov	edi, [esp+0DCh+var_B4]
		add	esi, ebp
		mov	ebp, [esp+0DCh+var_B0]
		xor	edi, [esp+0DCh+var_AC]
		ror	eax, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_9C]
		xor	edi, ebp
		mov	ebp, ebx
		ror	edi, 1Fh
		mov	[esp+0DCh+var_AC], edi
		lea	edi, [edi+ecx-70E44324h]
		mov	ecx, esi
		ror	ecx, 1Bh
		and	ebp, eax
		lea	ecx, [edi+ecx]
		mov	edi, ebx
		or	edi, eax
		and	edi, edx
		or	edi, ebp
		mov	ebp, [esp+0DCh+var_8C]
		add	ecx, edi
		mov	edi, [esp+0DCh+var_A0]
		xor	edi, [esp+0DCh+var_84]
		ror	ebx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_A4]
		xor	edi, ebp
		mov	ebp, esi
		ror	edi, 1Fh
		and	ebp, ebx
		mov	[esp+0DCh+var_84], edi
		lea	edi, [edi+edx-70E44324h]
		mov	edx, esi
		or	edx, ebx
		and	edx, eax
		or	edx, ebp
		mov	ebp, ecx
		ror	ebp, 1Bh
		lea	edx, [edi+edx]
		mov	edi, [esp+0DCh+var_90]
		add	edx, ebp
		mov	ebp, [esp+0DCh+var_94]
		xor	edi, [esp+0DCh+var_B4]
		ror	esi, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_A8]
		xor	edi, ebp
		mov	ebp, ecx
		ror	edi, 1Fh
		and	ebp, esi
		mov	[esp+0DCh+var_B4], edi
		lea	edi, [edi+eax-70E44324h]
		mov	eax, edx
		ror	eax, 1Bh
		lea	eax, [edi+eax]
		mov	edi, ecx
		or	edi, esi
		and	edi, ebx
		or	edi, ebp
		mov	ebp, [esp+0DCh+var_98]
		add	eax, edi
		mov	edi, [esp+0DCh+var_88]
		xor	edi, [esp+0DCh+var_A0]
		ror	ecx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_AC]
		xor	edi, ebp
		mov	ebp, edx
		ror	edi, 1Fh
		mov	[esp+0DCh+var_A0], edi
		lea	edi, [edi+ebx-70E44324h]
		mov	ebx, edx
		or	ebx, ecx
		and	ebp, ecx
		and	ebx, esi
		or	ebx, ebp
		mov	ebp, eax
		ror	ebp, 1Bh
		lea	ebx, [edi+ebx]
		mov	edi, [esp+0DCh+var_7C]
		add	ebx, ebp
		mov	ebp, [esp+0DCh+var_78]
		xor	edi, [esp+0DCh+var_90]
		ror	edx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_84]
		xor	edi, ebp
		mov	ebp, eax
		ror	edi, 1Fh
		and	ebp, edx
		mov	[esp+0DCh+var_90], edi
		lea	edi, [edi+esi-70E44324h]
		mov	esi, ebx
		ror	esi, 1Bh
		add	edi, esi
		mov	esi, eax
		or	esi, edx
		and	esi, ecx
		or	esi, ebp
		mov	ebp, [esp+0DCh+var_9C]
		add	edi, esi
		mov	esi, [esp+0DCh+var_80]
		xor	esi, [esp+0DCh+var_88]
		ror	eax, 2
		xor	esi, ebp
		mov	ebp, [esp+0DCh+var_B4]
		xor	esi, ebp
		ror	esi, 1Fh
		lea	ebp, [esi+ecx-70E44324h]
		mov	ecx, ebx
		mov	[esp+0DCh+var_88], esi
		or	ecx, eax
		mov	esi, ebx
		and	esi, eax
		and	ecx, edx
		or	ecx, esi
		mov	esi, edi
		add	ebp, ecx
		mov	ecx, [esp+0DCh+var_B0]
		ror	esi, 1Bh
		add	ebp, esi
		mov	esi, [esp+0DCh+var_A4]
		xor	ecx, [esp+0DCh+var_7C]
		ror	ebx, 2
		xor	ecx, esi
		mov	esi, [esp+0DCh+var_A0]
		xor	ecx, esi
		ror	ecx, 1Fh
		lea	esi, [ecx+edx-359D3E2Ah]
		mov	edx, ebx
		xor	edx, eax
		mov	[esp+0DCh+var_7C], ecx
		xor	edx, edi
		mov	ecx, ebp
		add	esi, edx
		mov	edx, [esp+0DCh+var_8C]
		ror	ecx, 1Bh
		add	esi, ecx
		mov	ecx, [esp+0DCh+var_A8]
		xor	edx, [esp+0DCh+var_80]
		ror	edi, 2
		xor	edx, ecx
		mov	ecx, [esp+0DCh+var_90]
		xor	edx, ecx
		ror	edx, 1Fh
		lea	ecx, [edx+eax-359D3E2Ah]
		mov	eax, edi
		xor	eax, ebx
		mov	[esp+0DCh+var_80], edx
		xor	eax, ebp
		mov	edx, esi
		add	ecx, eax
		mov	eax, [esp+0DCh+var_AC]
		ror	edx, 1Bh
		add	ecx, edx
		mov	edx, ebp
		mov	ebp, [esp+0DCh+var_94]
		xor	ebp, [esp+0DCh+var_B0]
		ror	edx, 2
		xor	ebp, eax
		mov	eax, [esp+0DCh+var_88]
		xor	ebp, eax
		mov	eax, edx
		ror	ebp, 1Fh
		xor	eax, edi
		xor	eax, esi
		lea	ebx, [ebp+ebx-359D3E2Ah]
		add	ebx, eax
		mov	eax, ecx
		ror	eax, 1Bh
		add	ebx, eax
		mov	eax, [esp+0DCh+var_84]
		mov	[esp+0DCh+var_B0], ebp
		mov	ebp, [esp+0DCh+var_98]
		ror	esi, 2
		xor	ebp, [esp+0DCh+var_8C]
		xor	ebp, eax
		mov	eax, [esp+0DCh+var_7C]
		xor	ebp, eax
		mov	eax, esi
		ror	ebp, 1Fh
		xor	eax, edx
		xor	eax, ecx
		lea	edi, [ebp+edi-359D3E2Ah]
		lea	eax, [edi+eax]
		mov	edi, ebx
		ror	edi, 1Bh
		add	eax, edi
		mov	edi, [esp+0DCh+var_78]
		mov	[esp+0DCh+var_8C], ebp
		mov	ebp, [esp+0DCh+var_B4]
		ror	ecx, 2
		xor	edi, [esp+0DCh+var_94]
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_80]
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_A0]
		ror	edi, 1Fh
		mov	[esp+0DCh+var_94], edi
		lea	edi, [edi+edx-359D3E2Ah]
		mov	edx, ecx
		xor	edx, esi
		xor	edx, ebx
		lea	edx, [edi+edx]
		mov	edi, eax
		ror	edi, 1Bh
		add	edx, edi
		mov	edi, [esp+0DCh+var_9C]
		xor	edi, [esp+0DCh+var_98]
		ror	ebx, 2
		xor	edi, ebp
		mov	ebp, [esp+0DCh+var_B0]
		xor	edi, ebp
		ror	edi, 1Fh
		mov	[esp+0DCh+var_98], edi
		lea	ebp, [edi+esi-359D3E2Ah]
		mov	edi, [esp+0DCh+var_A4]
		mov	esi, ebx
		xor	edi, [esp+0DCh+var_78]
		xor	esi, ecx
		xor	edi, [esp+0DCh+var_90]
		xor	esi, eax
		xor	edi, [esp+0DCh+var_8C]
		add	ebp, esi
		mov	esi, edx
		ror	eax, 2
		ror	edi, 1Fh
		ror	esi, 1Bh
		add	ebp, esi
		lea	esi, [edi+ecx-359D3E2Ah]
		mov	ecx, eax
		xor	ecx, ebx
		xor	ecx, edx
		lea	ecx, [esi+ecx]
		mov	esi, ebp
		ror	esi, 1Bh
		add	ecx, esi
		mov	esi, [esp+0DCh+var_A8]
		xor	esi, [esp+0DCh+var_9C]
		ror	edx, 2
		xor	esi, [esp+0DCh+var_88]
		xor	esi, [esp+0DCh+var_94]
		ror	esi, 1Fh
		lea	ebx, [esi+ebx-359D3E2Ah]
		mov	[esp+0DCh+var_9C], ebx
		mov	ebx, edx
		xor	ebx, eax
		xor	ebx, ebp
		add	ebx, [esp+0DCh+var_9C]
		ror	ebp, 2
		mov	[esp+0DCh+var_78], ebx
		mov	ebx, ecx
		ror	ebx, 1Bh
		mov	[esp+0DCh+var_9C], ebx
		mov	ebx, [esp+0DCh+var_78]
		add	ebx, [esp+0DCh+var_9C]
		mov	[esp+0DCh+var_70], ebx
		mov	ebx, [esp+0DCh+var_AC]
		xor	ebx, [esp+0DCh+var_A4]
		xor	ebx, [esp+0DCh+var_7C]
		xor	ebx, [esp+0DCh+var_98]
		ror	ebx, 1Fh
		lea	eax, [ebx+eax-359D3E2Ah]
		mov	[esp+0DCh+var_A4], eax
		mov	eax, ebp
		xor	eax, edx
		xor	eax, ecx
		add	eax, [esp+0DCh+var_A4]
		ror	ecx, 2
		mov	[esp+0DCh+var_9C], eax
		mov	eax, [esp+0DCh+var_70]
		ror	eax, 1Bh
		mov	[esp+0DCh+var_A4], eax
		mov	eax, [esp+0DCh+var_9C]
		add	eax, [esp+0DCh+var_A4]
		mov	[esp+0DCh+var_A4], ecx
		mov	ecx, [esp+0DCh+var_84]
		xor	ecx, [esp+0DCh+var_A8]
		xor	ecx, [esp+0DCh+var_80]
		xor	ecx, edi
		ror	ecx, 1Fh
		lea	edx, [ecx+edx-359D3E2Ah]
		mov	[esp+0DCh+var_A8], edx
		mov	edx, [esp+0DCh+var_A4]
		xor	edx, ebp
		xor	edx, [esp+0DCh+var_70]
		add	edx, [esp+0DCh+var_A8]
		mov	[esp+0DCh+var_9C], edx
		mov	edx, eax
		ror	edx, 1Bh
		mov	[esp+0DCh+var_A8], edx
		mov	edx, [esp+0DCh+var_9C]
		add	edx, [esp+0DCh+var_A8]
		mov	[esp+0DCh+var_78], edx
		mov	edx, [esp+0DCh+var_70]
		ror	edx, 2
		mov	[esp+0DCh+var_70], edx
		mov	edx, [esp+0DCh+var_B4]
		xor	edx, [esp+0DCh+var_AC]
		xor	edx, [esp+0DCh+var_B0]
		xor	edx, esi
		ror	edx, 1Fh
		lea	ebp, [edx+ebp-359D3E2Ah]
		mov	[esp+0DCh+var_AC], ebp
		mov	ebp, [esp+0DCh+var_70]
		xor	ebp, [esp+0DCh+var_A4]
		xor	ebp, eax
		add	ebp, [esp+0DCh+var_AC]
		ror	eax, 2
		mov	[esp+0DCh+var_A8], ebp
		mov	ebp, [esp+0DCh+var_78]
		ror	ebp, 1Bh
		mov	[esp+0DCh+var_AC], ebp
		mov	ebp, [esp+0DCh+var_A8]
		add	ebp, [esp+0DCh+var_AC]
		mov	[esp+0DCh+var_AC], eax
		mov	eax, [esp+0DCh+var_A0]
		xor	eax, [esp+0DCh+var_84]
		mov	[esp+0DCh+var_9C], ebp
		mov	ebp, [esp+0DCh+var_8C]
		xor	eax, ebp
		mov	ebp, [esp+0DCh+var_A4]
		xor	eax, ebx
		ror	eax, 1Fh
		mov	[esp+0DCh+var_C0], eax
		lea	ebp, [eax+ebp-359D3E2Ah]
		mov	[esp+0DCh+var_A8], ebp
		mov	ebp, [esp+0DCh+var_AC]
		mov	eax, [esp+0DCh+var_A8]
		xor	ebp, [esp+0DCh+var_70]
		xor	ebp, [esp+0DCh+var_78]
		lea	eax, [ebp+eax+0]
		mov	ebp, [esp+0DCh+var_9C]
		ror	ebp, 1Bh
		add	eax, ebp
		mov	[esp+0DCh+var_A4], eax
		mov	eax, [esp+0DCh+var_78]
		ror	eax, 2
		mov	[esp+0DCh+var_78], eax
		mov	eax, [esp+0DCh+var_94]
		mov	ebp, [esp+0DCh+var_90]
		xor	ebp, [esp+0DCh+var_B4]
		xor	ebp, eax
		mov	eax, [esp+0DCh+var_70]
		xor	ebp, ecx
		ror	ebp, 1Fh
		mov	[esp+0DCh+var_84], ebp
		lea	eax, [ebp+eax-359D3E2Ah]
		mov	ebp, [esp+0DCh+var_9C]
		mov	[esp+0DCh+var_A8], eax
		mov	eax, [esp+0DCh+var_78]
		xor	eax, [esp+0DCh+var_AC]
		xor	eax, [esp+0DCh+var_9C]
		add	eax, [esp+0DCh+var_A8]
		ror	ebp, 2
		mov	[esp+0DCh+var_9C], ebp
		mov	ebp, [esp+0DCh+var_98]
		mov	[esp+0DCh+var_B4], eax
		mov	eax, [esp+0DCh+var_A4]
		ror	eax, 1Bh
		add	eax, [esp+0DCh+var_B4]
		mov	[esp+0DCh+var_A8], eax
		mov	eax, [esp+0DCh+var_88]
		xor	eax, [esp+0DCh+var_A0]
		xor	eax, ebp
		mov	ebp, [esp+0DCh+var_AC]
		xor	eax, edx
		ror	eax, 1Fh
		mov	[esp+0DCh+var_A0], eax
		lea	ebp, [eax+ebp-359D3E2Ah]
		mov	eax, [esp+0DCh+var_A4]
		mov	[esp+0DCh+var_AC], ebp
		mov	ebp, [esp+0DCh+var_9C]
		xor	ebp, [esp+0DCh+var_78]
		xor	ebp, [esp+0DCh+var_A4]
		add	ebp, [esp+0DCh+var_AC]
		mov	[esp+0DCh+var_B4], ebp
		mov	ebp, [esp+0DCh+var_A8]
		ror	ebp, 1Bh
		add	ebp, [esp+0DCh+var_B4]
		ror	eax, 2
		mov	[esp+0DCh+var_A4], eax
		mov	eax, [esp+0DCh+var_C0]
		mov	[esp+0DCh+var_AC], ebp
		mov	ebp, [esp+0DCh+var_7C]
		xor	ebp, [esp+0DCh+var_90]
		xor	ebp, edi
		xor	ebp, eax
		ror	ebp, 1Fh
		mov	[esp+0DCh+var_90], ebp
		mov	edi, [esp+0DCh+var_78]
		mov	eax, [esp+0DCh+var_9C]
		lea	ebp, [ebp+edi-359D3E2Ah]
		mov	edi, [esp+0DCh+var_A4]
		xor	edi, [esp+0DCh+var_9C]
		xor	edi, [esp+0DCh+var_A8]
		add	edi, ebp
		mov	ebp, [esp+0DCh+var_AC]
		ror	ebp, 1Bh
		lea	ebp, [edi+ebp]
		mov	edi, [esp+0DCh+var_80]
		mov	[esp+0DCh+var_B4], ebp
		mov	ebp, [esp+0DCh+var_A8]
		xor	edi, [esp+0DCh+var_88]
		ror	ebp, 2
		xor	edi, esi
		xor	edi, [esp+0DCh+var_84]
		mov	[esp+0DCh+var_A8], ebp
		mov	esi, [esp+0DCh+var_A8]
		xor	esi, [esp+0DCh+var_A4]
		xor	esi, [esp+0DCh+var_AC]
		ror	edi, 1Fh
		lea	ebp, [edi+eax-359D3E2Ah]
		mov	eax, [esp+0DCh+var_A4]
		add	ebp, esi
		mov	esi, [esp+0DCh+var_B4]
		ror	esi, 1Bh
		lea	esi, [ebp+esi+0]
		mov	[esp+0DCh+var_88], esi
		mov	esi, [esp+0DCh+var_AC]
		ror	esi, 2
		mov	[esp+0DCh+var_AC], esi
		mov	esi, [esp+0DCh+var_B0]
		xor	esi, [esp+0DCh+var_7C]
		xor	esi, ebx
		mov	ebx, [esp+0DCh+var_AC]
		xor	esi, [esp+0DCh+var_A0]
		xor	ebx, [esp+0DCh+var_A8]
		xor	ebx, [esp+0DCh+var_B4]
		ror	esi, 1Fh
		lea	ebp, [esi+eax-359D3E2Ah]
		mov	eax, [esp+0DCh+var_AC]
		lea	ebx, [ebp+ebx+0]
		mov	ebp, [esp+0DCh+var_88]
		ror	ebp, 1Bh
		lea	ebp, [ebx+ebp]
		mov	ebx, [esp+0DCh+var_B4]
		mov	[esp+0DCh+var_A0], ebp
		mov	ebp, [esp+0DCh+var_A8]
		ror	ebx, 2
		mov	[esp+0DCh+var_B4], ebx
		mov	ebx, [esp+0DCh+var_8C]
		xor	ebx, [esp+0DCh+var_80]
		xor	ebx, ecx
		mov	ecx, [esp+0DCh+var_B4]
		xor	ebx, [esp+0DCh+var_90]
		xor	ecx, [esp+0DCh+var_AC]
		ror	ebx, 1Fh
		xor	ecx, [esp+0DCh+var_88]
		lea	ebx, [ebx+ebp-359D3E2Ah]
		mov	ebp, [esp+0DCh+var_A0]
		add	ebx, ecx
		mov	ecx, [esp+0DCh+var_94]
		xor	ecx, [esp+0DCh+var_B0]
		ror	ebp, 1Bh
		add	ebx, ebp
		mov	ebp, [esp+0DCh+var_88]
		xor	ecx, edx
		mov	edx, [esp+0DCh+var_B4]
		xor	ecx, edi
		mov	edi, [esp+0DCh+var_98]
		xor	edi, [esp+0DCh+var_8C]
		ror	ebp, 2
		xor	edi, [esp+0DCh+var_C0]
		xor	edx, ebp
		xor	edx, [esp+0DCh+var_A0]
		ror	ecx, 1Fh
		lea	ecx, [ecx+eax-359D3E2Ah]
		xor	edi, esi
		mov	esi, [esp+0DCh+var_74]
		lea	edx, [ecx+edx]
		mov	ecx, ebx
		ror	ecx, 1Bh
		add	edx, ecx
		mov	ecx, [esp+0DCh+var_A0]
		mov	eax, [esi]
		ror	edi, 1Fh
		ror	ecx, 2
		lea	esi, [edi+eax-359D3E2Ah]
		mov	eax, ecx
		mov	edi, [esp+0DCh+var_74]
		add	esi, [esp+0DCh+var_B4]
		xor	eax, ebp
		xor	eax, ebx
		ror	ebx, 2
		lea	eax, [esi+eax]
		mov	esi, edx
		ror	esi, 1Bh
		add	eax, esi
		mov	[edi], eax
		mov	eax, [esp+0DCh+var_60]
		mov	esi, [esp+0DCh+var_6C]
		add	[eax], edx
		mov	edx, [esp+0DCh+var_64]
		add	[edx], ebx
		mov	ebx, [esp+0DCh+var_68]
		add	[ebx], ecx
		add	[esi], ebp
		add	esp, 0CCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DEEC00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DEFF30	proc near		; CODE XREF: .text:67DF068Ej
					; sub_67DF0D70+8Bp

Dst		= dword	ptr -6Ch
Src		= dword	ptr -68h
Size		= dword	ptr -64h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		mov	ebp, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	eax, [eax+14h]
		mov	[esp+6Ch+var_24], edx
		mov	[esp+6Ch+var_28], ecx
		lea	edx, [eax+ecx*8]
		cmp	eax, edx
		mov	[ebp+14h], edx
		ja	loc_67DF0620
		mov	edx, [ebp+18h]

loc_67DEFF55:				; CODE XREF: sub_67DEFF30+6F9j
		mov	ecx, [esp+6Ch+var_28]
		shr	eax, 3
		lea	ebx, [ebp+1Ch]
		shr	ecx, 1Dh
		add	edx, ecx
		and	eax, 3Fh
		mov	[ebp+18h], edx
		jz	loc_67DF0249
		mov	esi, 40h
		sub	esi, eax
		cmp	[esp+6Ch+var_28], esi
		lea	edx, [ebx+eax]
		jb	loc_67DF0630
		mov	eax, [esp+6Ch+var_24]
		mov	[esp+6Ch+Dst], edx ; Dst
		mov	[esp+6Ch+Size],	esi ; Size
		mov	[esp+6Ch+Src], eax ; Src
		call	memmove
		mov	edx, [ebp+1Ch]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+20h]
		mov	[ebp+1Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+24h]
		mov	[ebp+20h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+28h]
		mov	[ebp+24h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		shl	ecx, 8
		or	eax, ecx
		and	edx, 0FF0000h
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+2Ch]
		mov	[ebp+28h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+30h]
		mov	[ebp+2Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+34h]
		mov	[ebp+30h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+38h]
		mov	[ebp+34h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+3Ch]
		mov	[ebp+38h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+40h]
		mov	[ebp+3Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+44h]
		mov	[ebp+40h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+48h]
		mov	[ebp+44h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+4Ch]
		mov	[ebp+48h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+50h]
		mov	[ebp+4Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+54h]
		mov	[ebp+50h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		shl	ecx, 8
		or	eax, ecx
		and	edx, 0FF0000h
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebp+58h]
		mov	[ebp+54h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, ebx
		mov	[ebp+58h], eax
		mov	eax, ebp
		call	sub_67DEEC00
		add	[esp+6Ch+var_24], esi
		sub	[esp+6Ch+var_28], esi

loc_67DF0249:				; CODE XREF: sub_67DEFF30+3Aj
		cmp	[esp+6Ch+var_28], 3Fh
		jbe	loc_67DF0600
		lea	edx, [ebx+8]
		xor	esi, esi
		lea	ecx, [ebx+0Ch]
		lea	eax, [ebx+10h]
		mov	[esp+6Ch+var_54], edx
		lea	edx, [ebx+14h]
		mov	[esp+6Ch+var_50], ecx
		lea	ecx, [ebx+18h]
		mov	[esp+6Ch+var_4C], eax
		lea	eax, [ebx+1Ch]
		mov	[esp+6Ch+var_48], edx
		lea	edx, [ebx+20h]
		mov	[esp+6Ch+var_44], ecx
		lea	ecx, [ebx+24h]
		mov	[esp+6Ch+var_40], eax
		lea	eax, [ebx+28h]
		mov	[esp+6Ch+var_3C], edx
		lea	edx, [ebx+2Ch]
		mov	[esp+6Ch+var_38], ecx
		lea	ecx, [ebx+30h]
		mov	[esp+6Ch+var_34], eax
		lea	eax, [ebx+34h]
		mov	[esp+6Ch+var_30], edx
		lea	edx, [ebx+38h]
		mov	[esp+6Ch+var_2C], ecx
		lea	ecx, [ebx+3Ch]
		mov	[esp+6Ch+var_20], ebp
		lea	edi, [ebx+4]
		mov	ebp, eax
		mov	[esp+6Ch+var_5C], edx
		mov	[esp+6Ch+var_58], ecx
		lea	esi, [esi+0]

loc_67DF02C0:				; CODE XREF: sub_67DEFF30+6ABj
		mov	eax, [esp+6Ch+var_24]
		mov	[esp+6Ch+Size],	40h ; Size
		mov	[esp+6Ch+Dst], ebx ; Dst
		add	eax, esi
		mov	[esp+6Ch+Src], eax ; Src
		call	memmove
		mov	edx, [ebx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	[ebx], eax
		mov	edx, [edi]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	[edi], eax
		mov	eax, [esp+6Ch+var_54]
		mov	edx, [eax]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_50]
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_54]
		mov	[edx], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		shl	ecx, 8
		and	edx, 0FF0000h
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_4C]
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_50]
		mov	[edx], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_48]
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_4C]
		mov	[edx], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_44]
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_48]
		mov	[edx], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_40]
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_44]
		mov	[edx], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shr	eax, 18h
		shl	ecx, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_3C]
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_40]
		mov	[edx], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_38]
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_3C]
		mov	[edx], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_38]
		mov	[edx], eax
		mov	ecx, [esp+6Ch+var_34]
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_30]
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_34]
		mov	[edx], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_2C]
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_30]
		mov	[edx], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_2C]
		mov	[edx], eax
		mov	edx, [ebp+0]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_5C]
		shr	edx, 8
		or	eax, edx
		mov	[ebp+0], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		shl	ecx, 8
		and	edx, 0FF0000h
		or	eax, ecx
		mov	ecx, [esp+6Ch+var_58]
		add	esi, 40h
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_5C]
		mov	[edx], eax
		mov	edx, [ecx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+6Ch+var_58]
		mov	[edx], eax
		mov	eax, [esp+6Ch+var_20]
		mov	edx, ebx
		call	sub_67DEEC00
		mov	eax, [esp+6Ch+var_28]
		sub	eax, esi
		cmp	eax, 3Fh
		ja	loc_67DF02C0
		mov	eax, [esp+6Ch+var_28]
		mov	ecx, [esp+6Ch+var_24]
		sub	eax, 40h
		mov	edx, eax
		and	eax, 3Fh
		and	edx, 0FFFFFFC0h
		lea	ecx, [ecx+edx+40h]
		mov	[esp+6Ch+var_24], ecx
		mov	[esp+6Ch+var_28], eax

loc_67DF0600:				; CODE XREF: sub_67DEFF30+31Ej
		mov	eax, [esp+6Ch+var_28]
		mov	edx, [esp+6Ch+var_24]
		mov	[esp+6Ch+Dst], ebx ; Dst
		mov	[esp+6Ch+Size],	eax ; Size
		mov	[esp+6Ch+Src], edx ; Src
		call	memmove
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF0620:				; CODE XREF: sub_67DEFF30+1Cj
		mov	edx, [ebp+18h]
		add	edx, 1
		mov	[ebp+18h], edx
		jmp	loc_67DEFF55
; ---------------------------------------------------------------------------
		align 10h

loc_67DF0630:				; CODE XREF: sub_67DEFF30+4Ej
		mov	eax, [esp+6Ch+var_28]
		mov	ecx, [esp+6Ch+var_24]
		mov	[esp+6Ch+Dst], edx ; Dst
		mov	[esp+6Ch+Size],	eax ; Size
		mov	[esp+6Ch+Src], ecx ; Src
		call	memmove
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DEFF30	endp

; ---------------------------------------------------------------------------
		sub	esp, 1Ch
		mov	[esp+18h], edi
		mov	edi, [esp+24h]
		mov	[esp+10h], ebx
		mov	ebx, [esp+20h]
		mov	[esp+14h], esi
		mov	[esp], edi
		call	sub_67E01770
		mov	[esp], edi
		mov	esi, eax
		call	sub_67E00CE0
		mov	edx, esi
		mov	edi, [esp+18h]
		mov	esi, [esp+14h]
		mov	ecx, eax
		mov	eax, ebx
		mov	ebx, [esp+10h]
		add	esp, 1Ch
		jmp	sub_67DEFF30
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF06A0	proc near		; CODE XREF: .text:67DF0D2Bp
					; sub_67DF0D70+CBp

Dst		= dword	ptr -2Ch
Val		= dword	ptr -28h
Size		= dword	ptr -24h

		push	ebp
		mov	ebp, edx
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 1Ch
		mov	eax, [eax+14h]
		lea	esi, [ebx+1Ch]
		sar	eax, 3
		and	eax, 3Fh
		lea	edx, [esi+eax]
		mov	byte ptr [edx],	80h
		lea	ecx, [edx+1]
		mov	edx, 3Fh
		sub	edx, eax
		cmp	edx, 7
		jle	loc_67DF0A34
		sub	edx, 8
		mov	[esp+2Ch+Size],	edx ; Size
		mov	[esp+2Ch+Val], 0 ; Val
		mov	[esp+2Ch+Dst], ecx ; Dst
		call	memset

loc_67DF06E7:				; CODE XREF: sub_67DF06A0+65Cj
		mov	eax, [ebx+18h]
		mov	edx, [ebx+1Ch]
		mov	[ebx+54h], eax
		mov	eax, [ebx+14h]
		mov	ecx, edx
		shl	ecx, 18h
		mov	[ebx+58h], eax
		mov	eax, edx
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+20h]
		mov	[ebx+1Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+24h]
		mov	[ebx+20h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+28h]
		mov	[ebx+24h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		shl	ecx, 8
		or	eax, ecx
		and	edx, 0FF0000h
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+2Ch]
		mov	[ebx+28h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+30h]
		mov	[ebx+2Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+34h]
		mov	[ebx+30h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+38h]
		mov	[ebx+34h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+3Ch]
		mov	[ebx+38h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+40h]
		mov	[ebx+3Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+44h]
		mov	[ebx+40h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+48h]
		mov	[ebx+44h], eax
		mov	ecx, edx
		mov	eax, edx
		shr	eax, 18h
		shl	ecx, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+4Ch]
		mov	[ebx+48h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+50h]
		mov	[ebx+4Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, esi
		mov	[ebx+50h], eax
		mov	eax, ebx
		call	sub_67DEEC00
		mov	edx, [ebx]
		mov	[esp+2Ch+Val], ebx ; Src
		mov	[esp+2Ch+Dst], ebp ; Dst
		mov	[esp+2Ch+Size],	14h ; Size
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		shl	ecx, 8
		or	eax, ecx
		and	edx, 0FF0000h
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+4]
		mov	[ebx], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+8]
		mov	[ebx+4], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+0Ch]
		mov	[ebx+8], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+10h]
		mov	[ebx+0Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	[ebx+10h], eax
		call	memmove
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF0A34:				; CODE XREF: sub_67DF06A0+2Aj
		mov	[esp+2Ch+Size],	edx ; Size
		mov	edi, esi
		mov	[esp+2Ch+Dst], ecx ; Dst
		mov	[esp+2Ch+Val], 0 ; Val
		call	memset
		mov	edx, [ebx+1Ch]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+20h]
		mov	[ebx+1Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+24h]
		mov	[ebx+20h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+28h]
		mov	[ebx+24h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		shl	ecx, 8
		or	eax, ecx
		and	edx, 0FF0000h
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+2Ch]
		mov	[ebx+28h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+30h]
		mov	[ebx+2Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+34h]
		mov	[ebx+30h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+38h]
		mov	[ebx+34h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+3Ch]
		mov	[ebx+38h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+40h]
		mov	[ebx+3Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+44h]
		mov	[ebx+40h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+48h]
		mov	[ebx+44h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+4Ch]
		mov	[ebx+48h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+50h]
		mov	[ebx+4Ch], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+54h]
		mov	[ebx+50h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		shl	ecx, 8
		or	eax, ecx
		and	edx, 0FF0000h
		shr	edx, 8
		or	eax, edx
		mov	edx, [ebx+58h]
		mov	[ebx+54h], eax
		mov	ecx, edx
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, esi
		mov	[ebx+58h], eax
		mov	eax, ebx
		call	sub_67DEEC00
		mov	ecx, 0Eh
		xor	eax, eax
		rep stosd
		jmp	loc_67DF06E7
sub_67DF06A0	endp

; ---------------------------------------------------------------------------
		jmp	short loc_67DF0D10
; ---------------------------------------------------------------------------
		align 10h

loc_67DF0D10:				; CODE XREF: .text:67DF0D01j
		sub	esp, 3Ch
		mov	[esp+30h], ebx
		mov	ebx, [esp+40h]
		mov	[esp+34h], esi
		lea	esi, [esp+1Ch]
		mov	edx, esi
		mov	[esp+38h], edi
		mov	eax, ebx
		call	sub_67DF06A0
		mov	eax, [esp+44h]
		mov	dword ptr [esp+8], 14h
		mov	[esp+4], esi
		mov	[esp], eax
		call	sub_67E090D0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DF0D5B
		mov	ecx, 17h
		mov	edi, ebx
		rep stosd
		mov	al, 1

loc_67DF0D5B:				; CODE XREF: .text:67DF0D4Ej
		mov	ebx, [esp+30h]
		mov	esi, [esp+34h]
		mov	edi, [esp+38h]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF0D70	proc near		; CODE XREF: sub_67DC30E0+191p
					; sub_67E0B480+7Fp

var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_44		= byte ptr -44h
var_30		= dword	ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0BCh
		mov	[esp+0BCh+var_C], esi
		mov	esi, [esp+0BCh+arg_0]
		mov	[esp+0BCh+var_10], ebx
		mov	[esp+0BCh+var_4], ebp
		mov	ebp, [esp+0BCh+arg_4]
		mov	[esp+0BCh+var_8], edi
		mov	[esp+0BCh+var_BC], esi
		mov	[esp+0BCh+var_A0], 67452301h
		mov	[esp+0BCh+var_9C], 0EFCDAB89h
		mov	[esp+0BCh+var_98], 98BADCFEh
		mov	[esp+0BCh+var_94], 10325476h
		mov	[esp+0BCh+var_90], 0C3D2E1F0h
		mov	[esp+0BCh+var_88], 0
		mov	[esp+0BCh+var_8C], 0
		call	sub_67E01770
		mov	[esp+0BCh+var_BC], esi
		lea	esi, [esp+0BCh+var_A0]
		mov	ebx, eax
		call	sub_67E00CE0
		mov	edx, ebx
		lea	ebx, [esp+0BCh+var_30]
		mov	ecx, eax
		mov	eax, esi
		call	sub_67DEFF30
		mov	[esp+0BCh+var_BC], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DF0E33

loc_67DF0E10:				; CODE XREF: sub_67DF0D70+F2j
					; sub_67DF0D70+130j
		mov	ebx, [esp+0BCh+var_10]
		mov	esi, [esp+0BCh+var_C]
		mov	edi, [esp+0BCh+var_8]
		mov	ebp, [esp+0BCh+var_4]
		add	esp, 0BCh
		retn
; ---------------------------------------------------------------------------

loc_67DF0E33:				; CODE XREF: sub_67DF0D70+9Ej
		lea	edi, [esp+0BCh+var_44]
		mov	eax, esi
		mov	edx, edi
		call	sub_67DF06A0
		mov	[esp+0BCh+var_B4], 14h ; size_t
		mov	[esp+0BCh+var_B8], edi ; void *
		mov	[esp+0BCh+var_BC], ebx ; int
		call	sub_67E090D0
		test	eax, eax
		jnz	short loc_67DF0E64

loc_67DF0E58:				; CODE XREF: sub_67DF0D70+121j
		mov	[esp+0BCh+var_BC], ebx
		call	sub_67E02BF0
		xor	eax, eax
		jmp	short loc_67DF0E10
; ---------------------------------------------------------------------------

loc_67DF0E64:				; CODE XREF: sub_67DF0D70+E6j
		xor	eax, eax
		mov	ecx, 17h
		mov	edi, esi
		rep stosd
		mov	[esp+0BCh+var_BC], ebp
		call	sub_67E00CE0
		mov	[esp+0BCh+var_B4], ebp
		mov	[esp+0BCh+var_B8], 0
		mov	[esp+0BCh+var_BC], ebx
		mov	[esp+0BCh+var_B0], eax
		call	sub_67E080C0
		test	eax, eax
		jz	short loc_67DF0E58
		mov	[esp+0BCh+var_BC], ebx
		call	sub_67E02BF0
		mov	eax, 1
		jmp	loc_67DF0E10
sub_67DF0D70	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 202. dbus_signature_iter_init

; =============== S U B	R O U T	I N E =======================================


		public dbus_signature_iter_init
dbus_signature_iter_init proc near	; CODE XREF: dbus_signature_validate_single+3Ep

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_4]
		and	byte ptr [eax+4], 0FCh
		mov	[eax], edx
		retn
dbus_signature_iter_init endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 216. dbus_type_is_fixed

; =============== S U B	R O U T	I N E =======================================


		public dbus_type_is_fixed
dbus_type_is_fixed proc	near		; CODE XREF: sub_67DDA8D0+45Ep
					; dbus_message_iter_append_fixed_array-9CCAp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_type_is_2 ; "dbus_type_is_fixed"
		mov	[esp+2Ch+var_20], 15Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_14 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_5 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DFC1D0
		test	eax, eax
		jnz	short loc_67DF0F10
		test	ebx, ebx
		jnz	short loc_67DF0F24

loc_67DF0F04:				; CODE XREF: dbus_type_is_fixed+56j
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF0F10:				; CODE XREF: dbus_type_is_fixed+3Ej
		sub	ebx, 62h
		cmp	ebx, 17h
		ja	short loc_67DF0F04
		mov	eax, ds:dword_67E26F40[ebx*4]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF0F24:				; CODE XREF: dbus_type_is_fixed+42j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 15Eh
		mov	[esp+2Ch+var_20], offset aRBuildWin32_14 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_type_is_ ; "_dbus_type_is_valid	(typecode) || typec"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_type_is_2 ; "dbus_type_is_fixed"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_type_is_fixed endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 214. dbus_type_is_basic

; =============== S U B	R O U T	I N E =======================================


		public dbus_type_is_basic
dbus_type_is_basic proc	near		; CODE XREF: sub_67DDCF20+3C3p
					; sub_67DDE050+C0p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_type_is_3 ; "dbus_type_is_basic"
		mov	[esp+2Ch+var_20], 140h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_14 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_5 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DFC1D0
		test	eax, eax
		jnz	short loc_67DF0FB0
		test	ebx, ebx
		jnz	short loc_67DF0FD8

loc_67DF0FA4:				; CODE XREF: dbus_type_is_basic+52j
					; dbus_type_is_basic+57j ...
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF0FB0:				; CODE XREF: dbus_type_is_basic+3Ej
		test	ebx, ebx
		jz	short loc_67DF0FA4
		cmp	ebx, 65h
		jz	short loc_67DF0FA4
		cmp	ebx, 72h
		lea	esi, [esi+0]
		jz	short loc_67DF0FA4
		cmp	ebx, 61h
		setnz	al
		cmp	ebx, 76h
		setnz	dl
		add	esp, 28h
		and	eax, edx
		movzx	eax, al
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF0FD8:				; CODE XREF: dbus_type_is_basic+42j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 140h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_14 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_type_is_ ; "_dbus_type_is_valid	(typecode) || typec"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_type_is_3 ; "dbus_type_is_basic"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_type_is_basic endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 215. dbus_type_is_container

; =============== S U B	R O U T	I N E =======================================


		public dbus_type_is_container
dbus_type_is_container proc near	; CODE XREF: sub_67DDCF20+55p
					; dbus_message_iter_open_container+135p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_type_is_4 ; "dbus_type_is_container"
		mov	[esp+2Ch+var_20], 129h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_14 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_5 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DFC1D0
		test	eax, eax
		jnz	short loc_67DF1070
		test	ebx, ebx
		jnz	short loc_67DF1080

loc_67DF1054:				; CODE XREF: dbus_type_is_container+A9j
		cmp	ebx, 61h
		setz	al
		cmp	ebx, 76h
		setz	dl
		add	esp, 28h
		or	eax, edx
		movzx	eax, al
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1070:				; CODE XREF: dbus_type_is_container+3Ej
		cmp	ebx, 65h
		jnz	short loc_67DF10B4

loc_67DF1075:				; CODE XREF: dbus_type_is_container+A7j
		mov	eax, 1
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1080:				; CODE XREF: dbus_type_is_container+42j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 129h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_14 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset a_dbus_type_is_ ; "_dbus_type_is_valid	(typecode) || typec"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_type_is_4 ; "dbus_type_is_container"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF10B4:				; CODE XREF: dbus_type_is_container+63j
		cmp	ebx, 72h
		jz	short loc_67DF1075
		jmp	short loc_67DF1054
dbus_type_is_container endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 205. dbus_signature_validate

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_signature_validate(char *, int)
		public dbus_signature_validate
dbus_signature_validate	proc near	; CODE XREF: dbus_signature_validate_single+1Ap

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 38h
		mov	eax, [esp+3Ch+arg_0]
		lea	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], ebx ;	int
		mov	[esp+3Ch+var_38], eax ;	char *
		call	sub_67E03060
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E00CE0
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_34], eax
		call	sub_67DDEA20
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jz	short loc_67DF1121
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DDE340
		mov	[esp+3Ch+var_38], offset aOrg_freedes_38 ; "org.freedesktop.DBus.Error.InvalidSigna"...
		mov	[esp+3Ch+var_34], eax ;	char *
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax ;	int
		call	dbus_set_error
		xor	eax, eax

loc_67DF1121:				; CODE XREF: dbus_signature_validate+3Dj
		add	esp, 38h
		pop	ebx
		retn
dbus_signature_validate	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 203. dbus_signature_iter_next

; =============== S U B	R O U T	I N E =======================================


		public dbus_signature_iter_next
dbus_signature_iter_next proc near	; CODE XREF: dbus_signature_validate_single+78p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		movzx	edx, byte ptr [ebx+4]
		test	dl, 1
		jnz	short loc_67DF114E
		test	dl, 2
		jz	short loc_67DF1153
		or	edx, 1
		mov	[ebx+4], dl

loc_67DF114E:				; CODE XREF: dbus_signature_iter_next+11j
					; dbus_signature_iter_next+66j
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF1153:				; CODE XREF: dbus_signature_iter_next+16j
		lea	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx]
		mov	[esp+2Ch+var_10], 0
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DDB140
		mov	eax, [ebx]
		add	eax, [esp+2Ch+var_10]
		mov	[ebx], eax
		movzx	eax, byte ptr [eax]
		cmp	al, 7Dh
		jz	short loc_67DF1190
		cmp	al, 29h
		jz	short loc_67DF1190
		test	al, al
		setnz	al
		add	esp, 28h
		movzx	eax, al
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1190:				; CODE XREF: dbus_signature_iter_next+4Aj
					; dbus_signature_iter_next+4Ej
		or	byte ptr [ebx+4], 1
		xor	eax, eax
		jmp	short loc_67DF114E
dbus_signature_iter_next endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 199. dbus_signature_iter_get_current_type

; =============== S U B	R O U T	I N E =======================================


		public dbus_signature_iter_get_current_type
dbus_signature_iter_get_current_type proc near
					; CODE XREF: dbus_signature_validate_single+46p
					; dbus_signature_iter_recurse+3Cp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_18], 0
		mov	eax, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFC210
		add	esp, 1Ch
		retn
dbus_signature_iter_get_current_type endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 206. dbus_signature_validate_single

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_signature_validate_single(char *, int)
		public dbus_signature_validate_single
dbus_signature_validate_single proc near

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= byte ptr -20h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	[esp+3Ch+var_8], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_4], esi
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], ebx ;	char *
		mov	[esp+3Ch+var_38], esi ;	int
		call	dbus_signature_validate
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DF11F3

loc_67DF11E7:				; CODE XREF: dbus_signature_validate_single+88j
		mov	ebx, [esp+3Ch+var_8]
		mov	esi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DF11F3:				; CODE XREF: dbus_signature_validate_single+25j
		mov	[esp+3Ch+var_38], ebx
		lea	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_signature_iter_init
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_signature_iter_get_current_type
		test	eax, eax
		jnz	short loc_67DF1235

loc_67DF120F:				; CODE XREF: dbus_signature_validate_single+86j
		mov	[esp+3Ch+var_3C], esi ;	int
		mov	[esp+3Ch+var_34], offset aExactlyOneComp ; "Exactly one	complete type required in s"...
		mov	[esp+3Ch+var_38], offset aOrg_freedes_38 ; "org.freedesktop.DBus.Error.InvalidSigna"...
		call	dbus_set_error
		xor	eax, eax
		mov	ebx, [esp+3Ch+var_8]
		mov	esi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DF1235:				; CODE XREF: dbus_signature_validate_single+4Dj
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_signature_iter_next
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jnz	short loc_67DF120F
		jmp	short loc_67DF11E7
dbus_signature_validate_single endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 204. dbus_signature_iter_recurse

; =============== S U B	R O U T	I N E =======================================


		public dbus_signature_iter_recurse
dbus_signature_iter_recurse proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset aDbus_signature ; "dbus_signature_iter_recurse"
		mov	[esp+2Ch+var_20], 0D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_14 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_5 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], esi
		call	dbus_signature_iter_get_current_type
		mov	[esp+2Ch+var_2C], eax
		call	dbus_type_is_container
		test	eax, eax
		jz	short loc_67DF12D0
		mov	eax, [esi]
		mov	edx, [esi+4]
		mov	[ebx], eax
		mov	[ebx+4], edx
		add	dword ptr [ebx], 1
		and	byte ptr [ebx+4], 0FDh
		mov	[esp+2Ch+var_2C], esi
		call	dbus_signature_iter_get_current_type
		cmp	eax, 61h
		jz	short loc_67DF12C1
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DF12C1:				; CODE XREF: dbus_signature_iter_recurse+69j
		or	byte ptr [ebx+4], 2
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF12D0:				; CODE XREF: dbus_signature_iter_recurse+4Bj
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 0D5h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_14 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aDbus_type_is_5 ; "dbus_type_is_container (dbus_signature_"...
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_signature ; "dbus_signature_iter_recurse"
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	sub_67DFB4E0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
dbus_signature_iter_recurse endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 200. dbus_signature_iter_get_element_type

; =============== S U B	R O U T	I N E =======================================


		public dbus_signature_iter_get_element_type
dbus_signature_iter_get_element_type proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_signatu_0 ; "dbus_signature_iter_get_element_type"
		mov	[esp+2Ch+var_20], 96h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_14 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_5 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_signature_iter_get_current_type
		cmp	eax, 61h
		jz	short loc_67DF1385
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 96h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_14 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aDbus_signatu_1 ; "dbus_signature_iter_get_current_type (i"...
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_signatu_0 ; "dbus_signature_iter_get_element_type"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF1385:				; CODE XREF: dbus_signature_iter_get_element_type+3Fj
		mov	dword ptr [esp+2Ch+var_28], 1
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFC210
		add	esp, 28h
		pop	ebx
		retn
dbus_signature_iter_get_element_type endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 201. dbus_signature_iter_get_signature

; =============== S U B	R O U T	I N E =======================================


		public dbus_signature_iter_get_signature
dbus_signature_iter_get_signature proc near

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_8], ebx
		lea	ebx, [esp+3Ch+var_28]
		mov	[esp+3Ch+var_4], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67DF13D0

loc_67DF13BF:				; CODE XREF: dbus_signature_iter_get_signature+62j
		xor	eax, eax

loc_67DF13C1:				; CODE XREF: dbus_signature_iter_get_signature+8Cj
		mov	ebx, [esp+3Ch+var_8]
		mov	esi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF13D0:				; CODE XREF: dbus_signature_iter_get_signature+1Dj
		lea	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esi]
		mov	[esp+3Ch+var_14], 0
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DDB140
		mov	eax, [esp+3Ch+var_14]
		mov	[esp+3Ch+var_34], eax ;	size_t
		mov	eax, [esi]
		mov	[esp+3Ch+var_3C], ebx ;	int
		mov	[esp+3Ch+var_38], eax ;	void *
		call	sub_67E090D0
		test	eax, eax
		jz	short loc_67DF13BF
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E05F70
		test	eax, eax
		jnz	short loc_67DF1420
		mov	[esp+3Ch+var_10], 0

loc_67DF1420:				; CODE XREF: dbus_signature_iter_get_signature+76j
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67E02BF0
		mov	eax, [esp+3Ch+var_10]
		jmp	short loc_67DF13C1
dbus_signature_iter_get_signature endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		add	dword ptr [eax], 1
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+8]
		mov	edx, [esp+4]
		test	eax, eax
		movzx	eax, byte ptr [edx+1Ch]
		setnz	cl
		and	eax, 0FFFFFFFEh
		or	eax, ecx
		mov	[edx+1Ch], al
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1460	proc near		; CODE XREF: .text:67DCE0A2j
					; DATA XREF: .text:67DEDC65o

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 0Ch
		xor	ecx, ecx
		mov	eax, [esp+0Ch+arg_4]
		mov	[esp+0Ch+var_8], ebx
		mov	ebx, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_4], esi
		mov	esi, 1
		cmp	[esp+0Ch+arg_8], 0
		movzx	edx, byte ptr [eax+1Ch]
		setnz	cl
		and	esi, edx
		cmp	esi, ecx
		jz	short loc_67DF14B3
		and	edx, 0FFFFFFFEh
		or	edx, ecx
		mov	[eax+1Ch], dl
		mov	edx, [ebx+0Ch]
		test	edx, edx
		jz	short loc_67DF14B3
		mov	ecx, [ebx+10h]
		mov	esi, [esp+0Ch+var_4]
		mov	[esp+0Ch+arg_0], eax
		mov	ebx, [esp+0Ch+var_8]
		mov	[esp+0Ch+arg_4], ecx
		add	esp, 0Ch
		jmp	edx
; ---------------------------------------------------------------------------

loc_67DF14B3:				; CODE XREF: sub_67DF1460+2Aj
					; sub_67DF1460+39j
		mov	ebx, [esp+0Ch+var_8]
		mov	esi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
sub_67DF1460	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 211. dbus_timeout_get_interval

; =============== S U B	R O U T	I N E =======================================


		public dbus_timeout_get_interval
dbus_timeout_get_interval proc near	; CODE XREF: sub_67DD26C0+B3p
					; sub_67E11B60+1Fp

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+4]
		retn
dbus_timeout_get_interval endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 209. dbus_timeout_get_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_timeout_get_data
dbus_timeout_get_data proc near

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+14h]
		retn
dbus_timeout_get_data endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 213. dbus_timeout_set_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_timeout_set_data
dbus_timeout_set_data proc near		; CODE XREF: sub_67DF16E0+8Ap
					; sub_67DF1820+B7p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+18h]
		test	eax, eax
		jz	short loc_67DF14F7
		mov	edx, [ebx+14h]
		mov	[esp+1Ch+var_1C], edx
		call	eax

loc_67DF14F7:				; CODE XREF: dbus_timeout_set_data+Dj
		mov	eax, [esp+1Ch+arg_4]
		mov	[ebx+14h], eax
		mov	eax, [esp+1Ch+arg_8]
		mov	[ebx+18h], eax
		add	esp, 18h
		pop	ebx
		retn
dbus_timeout_set_data endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 212. dbus_timeout_handle

; =============== S U B	R O U T	I N E =======================================


		public dbus_timeout_handle
dbus_timeout_handle proc near

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [eax+0Ch]
		mov	[esp+0Ch+arg_0], edx
		mov	eax, [eax+8]
		add	esp, 0Ch
		jmp	eax
dbus_timeout_handle endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 210. dbus_timeout_get_enabled

; =============== S U B	R O U T	I N E =======================================


		public dbus_timeout_get_enabled
dbus_timeout_get_enabled proc near	; CODE XREF: .text:67E12270p
					; .text:67E125BFp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		movzx	eax, byte ptr [eax+1Ch]
		and	eax, 1
		retn
dbus_timeout_get_enabled endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1540	proc near		; CODE XREF: dbus_connection_set_timeout_functions+D9p
					; dbus_server_set_timeout_functions+100p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	edx, [esp+2Ch+arg_4]
		mov	edi, [esp+2Ch+arg_0]
		mov	ebp, [esp+2Ch+arg_10]
		test	edx, edx
		jz	short loc_67DF15D0
		mov	[esp+2Ch+var_2C], edi
		call	sub_67DFB910
		test	eax, eax
		mov	ebx, eax
		jnz	short loc_67DF156D
		jmp	short loc_67DF15D0
; ---------------------------------------------------------------------------

loc_67DF1567:				; CODE XREF: sub_67DF1540+4Cj
		test	esi, esi
		mov	ebx, esi
		jz	short loc_67DF15D0

loc_67DF156D:				; CODE XREF: sub_67DF1540+23j
		mov	esi, [ebx+4]
		xor	eax, eax
		cmp	esi, [edi]
		mov	[esp+2Ch+var_28], ebp
		setz	al
		sub	eax, 1
		and	esi, eax
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	[esp+2Ch+arg_4]
		test	eax, eax
		jnz	short loc_67DF1567
		mov	[esp+2Ch+var_2C], edi
		call	sub_67DFB910
		cmp	eax, ebx
		jz	short loc_67DF15C3
		lea	esi, [esi+0]

loc_67DF15A0:				; CODE XREF: sub_67DF1540+81j
		mov	esi, [eax+4]
		xor	edx, edx
		cmp	esi, [edi]
		mov	[esp+2Ch+var_28], ebp
		mov	eax, [eax+8]
		setz	dl
		sub	edx, 1
		and	esi, edx
		mov	[esp+2Ch+var_2C], eax
		call	[esp+2Ch+arg_8]
		cmp	esi, ebx
		mov	eax, esi
		jnz	short loc_67DF15A0

loc_67DF15C3:				; CODE XREF: sub_67DF1540+58j
		add	esp, 1Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF15D0:				; CODE XREF: sub_67DF1540+15j
					; sub_67DF1540+25j ...
		mov	eax, [edi+8]
		test	eax, eax
		jz	short loc_67DF15EA
		mov	edx, [edi+10h]
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], edi
		mov	[esp+2Ch+var_24], edx
		call	sub_67DFB9D0

loc_67DF15EA:				; CODE XREF: sub_67DF1540+95j
		mov	eax, [edi+14h]
		test	eax, eax
		jz	short loc_67DF15F9
		mov	edx, [edi+10h]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF15F9:				; CODE XREF: sub_67DF1540+AFj
		mov	eax, [esp+2Ch+arg_4]
		mov	[edi+10h], ebp
		mov	[edi+4], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[edi+8], eax
		mov	eax, [esp+2Ch+arg_C]
		mov	[edi+0Ch], eax
		mov	eax, [esp+2Ch+arg_14]
		mov	[edi+14h], eax
		add	esp, 1Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DF1540	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1630	proc near		; CODE XREF: sub_67DCCE40+16p
					; sub_67DED4C0+1FEp

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_1C], 18h ;	size_t
		call	dbus_malloc0
		add	esp, 1Ch
		retn
sub_67DF1630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1650	proc near		; CODE XREF: sub_67DEB120+B3p

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 1Ch
		mov	[esp+1Ch+var_1C], 20h ;	size_t
		call	dbus_malloc0
		test	eax, eax
		jz	short loc_67DF1689
		mov	dword ptr [eax], 1
		mov	edx, [esp+1Ch+arg_0]
		mov	[eax+4], edx
		mov	edx, [esp+1Ch+arg_4]
		mov	[eax+8], edx
		mov	edx, [esp+1Ch+arg_8]
		mov	[eax+0Ch], edx
		mov	edx, [esp+1Ch+arg_C]
		or	byte ptr [eax+1Ch], 1
		mov	[eax+10h], edx

loc_67DF1689:				; CODE XREF: sub_67DF1650+11j
		add	esp, 1Ch
		retn
sub_67DF1650	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+34h]
		mov	dword ptr [esp+10h], offset a_dbus_timeou_0 ; "_dbus_timeout_set_interval"
		mov	dword ptr [esp+0Ch], 89h
		mov	dword ptr [esp+8], offset aRBuildWin32_15 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+4], offset aInterval0 ; "interval >= 0"
		call	sub_67DFAE70
		mov	eax, [esp+30h]
		mov	[eax+4], ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF16E0	proc near		; CODE XREF: dbus_pending_call_unref-6Dp
					; DATA XREF: sub_67DF1790+5Fo

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_timeout_ ; "_dbus_timeout_unref"
		mov	[esp+2Ch+var_20], 6Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_15 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aTimeoutNull ;	"timeout != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_timeout_ ; "_dbus_timeout_unref"
		mov	[esp+2Ch+var_20], 6Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_15 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTimeoutRefcoun ; "timeout->refcount >	0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DF1757
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF1757:				; CODE XREF: sub_67DF16E0+70j
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_timeout_set_data
		mov	eax, [ebx+10h]
		test	eax, eax
		jz	short loc_67DF177E
		mov	edx, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF177E:				; CODE XREF: sub_67DF16E0+94j
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	dbus_free
sub_67DF16E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1790	proc near		; CODE XREF: sub_67DCCE40+3E0p
					; sub_67DCDAC0+158p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+8]
		test	eax, eax
		jz	short loc_67DF17B2
		mov	edx, [ebx+10h]
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], edx
		call	sub_67DFB9D0

loc_67DF17B2:				; CODE XREF: sub_67DF1790+Dj
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_67DF17C1
		mov	edx, [ebx+10h]
		mov	[esp+1Ch+var_1C], edx
		call	eax

loc_67DF17C1:				; CODE XREF: sub_67DF1790+27j
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [ebx+0Ch], 0
		mov	dword ptr [ebx+10h], 0
		mov	dword ptr [ebx+14h], 0
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], offset sub_67DF16E0
		call	sub_67DFB9D0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67DFBC90
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	dbus_free
sub_67DF1790	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DF1820
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1820	proc near		; CODE XREF: sub_67DCE0C0+62j
					; sub_67DCE450+34Ap ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], ebx
		call	sub_67DFBBE0
		test	eax, eax
		jz	loc_67DF18F9
		mov	eax, [esi+8]
		test	eax, eax
		jz	short loc_67DF1854
		mov	edx, [esi+10h]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], edx
		call	eax

loc_67DF1854:				; CODE XREF: sub_67DF1820+26j
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_timeout_ ; "_dbus_timeout_unref"
		mov	[esp+2Ch+var_20], 6Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_15 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTimeoutNull ;	"timeout != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_timeout_ ; "_dbus_timeout_unref"
		mov	[esp+2Ch+var_20], 6Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_15 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTimeoutRefcoun ; "timeout->refcount >	0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DF18C4
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DF18C4:				; CODE XREF: sub_67DF1820+9Cj
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_timeout_set_data
		mov	eax, [ebx+10h]
		test	eax, eax
		jz	short loc_67DF18EB
		mov	edx, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF18EB:				; CODE XREF: sub_67DF1820+C1j
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67DF18F9:				; CODE XREF: sub_67DF1820+1Bj
		mov	[esp+2Ch+var_24], 158h
		mov	[esp+2Ch+var_28], offset aRBuildWin32_15 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_2C], offset aNonexistentTim ; "Nonexistent	timeout	was removed"
		call	sub_67DFAE30
sub_67DF1820	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1920	proc near		; CODE XREF: .text:67DCE372j
					; dbus_connection_send_with_reply+2A9p
					; DATA XREF: ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], ebx
		call	sub_67DFBB80
		test	eax, eax
		jz	short loc_67DF1962
		mov	eax, [esi+4]
		add	dword ptr [ebx], 1
		test	eax, eax
		jz	short loc_67DF1957
		mov	edx, [esi+10h]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], edx
		call	eax
		test	eax, eax
		jz	short loc_67DF1970

loc_67DF1957:				; CODE XREF: sub_67DF1920+25j
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DF1962:				; CODE XREF: sub_67DF1920+1Bj
					; sub_67DF1920+C1j
		xor	eax, eax

loc_67DF1964:				; CODE XREF: sub_67DF1920+F8j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1970:				; CODE XREF: sub_67DF1920+35j
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DFC110
		mov	[esp+2Ch+var_1C], offset a_dbus_timeout_ ; "_dbus_timeout_unref"
		mov	[esp+2Ch+var_20], 6Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_15 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTimeoutNull ;	"timeout != NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_timeout_ ; "_dbus_timeout_unref"
		mov	[esp+2Ch+var_20], 6Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_15 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTimeoutRefcoun ; "timeout->refcount >	0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jnz	loc_67DF1962
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_timeout_set_data
		mov	eax, [ebx+10h]
		test	eax, eax
		jz	short loc_67DF1A0E
		mov	edx, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF1A0E:				; CODE XREF: sub_67DF1920+E4j
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_free
		xor	eax, eax
		jmp	loc_67DF1964
sub_67DF1920	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, ds:dword_67E340EC
		test	eax, eax
		jz	short loc_67DF1A31

loc_67DF1A2C:				; CODE XREF: .text:67DF1A38j
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_67DF1A31:				; CODE XREF: .text:67DF1A2Aj
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	short loc_67DF1A2C
		mov	eax, 0ABCDEFh
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		test	eax, eax
		jz	short loc_67DF1A83
		mov	edx, ds:dword_67E340F0
		test	edx, edx
		jz	short loc_67DF1A70
		add	esp, 0Ch
		jmp	edx
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1A70:				; CODE XREF: .text:67DF1A63j
		mov	edx, ds:dword_67E340C8
		test	edx, edx
		jz	short loc_67DF1A83
		mov	[esp+10h], eax
		add	esp, 0Ch
		jmp	edx
; ---------------------------------------------------------------------------

loc_67DF1A83:				; CODE XREF: .text:67DF1A59j
					; .text:67DF1A78j
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1A90	proc near		; CODE XREF: sub_67DC7270+10p
					; dbus_bus_get_unique_name+40p	...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		test	eax, eax
		jz	short loc_67DF1AC3
		mov	edx, ds:dword_67E340F4
		test	edx, edx
		jz	short loc_67DF1AB0
		add	esp, 0Ch
		jmp	edx
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1AB0:				; CODE XREF: sub_67DF1A90+13j
		mov	edx, ds:dword_67E340CC
		test	edx, edx
		jz	short loc_67DF1AC3
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	edx
; ---------------------------------------------------------------------------

loc_67DF1AC3:				; CODE XREF: sub_67DF1A90+9j
					; sub_67DF1A90+28j
		add	esp, 0Ch
		retn
sub_67DF1A90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1AD0	proc near		; CODE XREF: sub_67DC7270+3Aj
					; dbus_bus_get_unique_name+5Dp	...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		test	eax, eax
		jz	short loc_67DF1B03
		mov	edx, ds:dword_67E340F8
		test	edx, edx
		jz	short loc_67DF1AF0
		add	esp, 0Ch
		jmp	edx
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1AF0:				; CODE XREF: sub_67DF1AD0+13j
		mov	edx, ds:dword_67E340D0
		test	edx, edx
		jz	short loc_67DF1B03
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	edx
; ---------------------------------------------------------------------------

loc_67DF1B03:				; CODE XREF: sub_67DF1AD0+9j
					; sub_67DF1AD0+28j
		add	esp, 0Ch
		retn
sub_67DF1AD0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, ds:dword_67E340D4
		test	eax, eax
		jz	short loc_67DF1B21
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_67DF1B21:				; CODE XREF: .text:67DF1B1Aj
		mov	eax, 0ABCDEF2h
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		test	eax, eax
		jz	short loc_67DF1B50
		mov	edx, ds:dword_67E340D8
		test	edx, edx
		jz	short loc_67DF1B50
		add	esp, 0Ch
		jmp	edx
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1B50:				; CODE XREF: .text:67DF1B39j
					; .text:67DF1B43j
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1B60	proc near		; CODE XREF: sub_67DCECB0+1B7p
					; sub_67DD0570+241p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_4]
		mov	edx, [esp+0Ch+arg_0]
		test	eax, eax
		jz	short loc_67DF1B82
		test	edx, edx
		jz	short loc_67DF1B82
		mov	ecx, ds:dword_67E340DC
		test	ecx, ecx
		jz	short loc_67DF1B82
		add	esp, 0Ch
		jmp	ecx
; ---------------------------------------------------------------------------

loc_67DF1B82:				; CODE XREF: sub_67DF1B60+Dj
					; sub_67DF1B60+11j ...
		add	esp, 0Ch
		retn
sub_67DF1B60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1B90	proc near		; CODE XREF: sub_67DD0570+1F9p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_4]
		mov	edx, [esp+0Ch+arg_0]
		test	eax, eax
		jz	short loc_67DF1BB6
		test	edx, edx
		jz	short loc_67DF1BB6
		mov	eax, ds:dword_67E340DC
		test	eax, eax
		jz	short loc_67DF1BB6
		mov	eax, ds:dword_67E340E0
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_67DF1BB6:				; CODE XREF: sub_67DF1B90+Dj
					; sub_67DF1B90+11j ...
		mov	eax, 1
		add	esp, 0Ch
		retn
sub_67DF1B90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1BC0	proc near		; CODE XREF: sub_67DCC700+AEp
					; sub_67DCC7F0+DCp

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		test	eax, eax
		jz	short loc_67DF1BE0
		mov	edx, ds:dword_67E340E4
		test	edx, edx
		jz	short loc_67DF1BE0
		add	esp, 0Ch
		jmp	edx
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1BE0:				; CODE XREF: sub_67DF1BC0+9j
					; sub_67DF1BC0+13j
		add	esp, 0Ch
		retn
sub_67DF1BC0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		test	eax, eax
		jz	short loc_67DF1C10
		mov	edx, ds:dword_67E340E8
		test	edx, edx
		jz	short loc_67DF1C10
		add	esp, 0Ch
		jmp	edx
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1C10:				; CODE XREF: .text:67DF1BF9j
					; .text:67DF1C03j
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 208. dbus_threads_init_default

; =============== S U B	R O U T	I N E =======================================


		public dbus_threads_init_default
dbus_threads_init_default proc near
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	sub_67E114D0
dbus_threads_init_default endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1C30	proc near		; DATA XREF: dbus_threads_init+B9Fo

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_1C], offset dword_67E3410C
		call	sub_67DFBC90
		mov	[esp+1Ch+arg_0], offset	dword_67E34110
		add	esp, 1Ch
		jmp	sub_67DFBC90
sub_67DF1C30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1C50	proc near		; CODE XREF: sub_67DCCE40+375p
					; sub_67DCCE40+380p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		test	ebx, ebx
		jz	short loc_67DF1C93
		mov	eax, ds:dword_67E340A0
		cmp	eax, dword_67E19028
		jz	short loc_67DF1C79
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], offset dword_67E34110
		call	sub_67DFBBE0

loc_67DF1C79:				; CODE XREF: sub_67DF1C50+17j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_67DF1C93
		mov	edx, ds:dword_67E340D8
		test	edx, edx
		jz	short loc_67DF1C93
		mov	[esp+1Ch+arg_0], eax
		add	esp, 18h
		pop	ebx
		jmp	edx
; ---------------------------------------------------------------------------

loc_67DF1C93:				; CODE XREF: sub_67DF1C50+Aj
					; sub_67DF1C50+2Dj ...
		add	esp, 18h
		pop	ebx
		retn
sub_67DF1C50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1CA0	proc near		; CODE XREF: sub_67DCCE40+B1p
					; sub_67DCCE40+C7p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		mov	eax, 0ABCDEF2h
		sub	esp, 18h
		mov	edx, ds:dword_67E340D4
		mov	ebx, [esp+1Ch+arg_0]
		test	edx, edx
		jz	short loc_67DF1CB9
		call	edx ; dword_67E340D4

loc_67DF1CB9:				; CODE XREF: sub_67DF1CA0+15j
		mov	edx, ds:dword_67E340A0
		cmp	edx, dword_67E19028
		mov	[ebx], eax
		jz	short loc_67DF1CE1
		test	eax, eax
		jz	short loc_67DF1CE1
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], offset dword_67E34110
		call	sub_67DFBB80
		test	eax, eax
		jz	short loc_67DF1CE6

loc_67DF1CE1:				; CODE XREF: sub_67DF1CA0+27j
					; sub_67DF1CA0+2Bj
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF1CE6:				; CODE XREF: sub_67DF1CA0+3Fj
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_67DF1CFB
		mov	edx, ds:dword_67E340D8
		test	edx, edx
		jz	short loc_67DF1CFB
		mov	[esp+1Ch+var_1C], eax
		call	edx ; dword_67E340D8

loc_67DF1CFB:				; CODE XREF: sub_67DF1CA0+4Aj
					; sub_67DF1CA0+54j
		mov	dword ptr [ebx], 0
		add	esp, 18h
		pop	ebx
		retn
sub_67DF1CA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF1D10	proc near		; DATA XREF: dbus_threads_init+669o

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1D35
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF2060

loc_67DF1D2E:				; CODE XREF: sub_67DF1D10+358j
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx]

loc_67DF1D35:				; CODE XREF: sub_67DF1D10+Ej
					; sub_67DF1D10+360j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+4]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1D5A
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF2048

loc_67DF1D52:				; CODE XREF: sub_67DF1D10+340j
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+4]

loc_67DF1D5A:				; CODE XREF: sub_67DF1D10+32j
					; sub_67DF1D10+346j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+8]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1D7F
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF2035

loc_67DF1D77:				; CODE XREF: sub_67DF1D10+32Dj
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+8]

loc_67DF1D7F:				; CODE XREF: sub_67DF1D10+57j
					; sub_67DF1D10+333j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+0Ch]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1DA4
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF2020

loc_67DF1D9C:				; CODE XREF: sub_67DF1D10+318j
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+0Ch]

loc_67DF1DA4:				; CODE XREF: sub_67DF1D10+7Cj
					; sub_67DF1D10+320j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+10h]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1DC9
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF2008

loc_67DF1DC1:				; CODE XREF: sub_67DF1D10+300j
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+10h]

loc_67DF1DC9:				; CODE XREF: sub_67DF1D10+A1j
					; sub_67DF1D10+306j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+14h]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1DEE
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF1FF5

loc_67DF1DE6:				; CODE XREF: sub_67DF1D10+2EDj
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+14h]

loc_67DF1DEE:				; CODE XREF: sub_67DF1D10+C6j
					; sub_67DF1D10+2F3j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+18h]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1E13
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF1FE0

loc_67DF1E0B:				; CODE XREF: sub_67DF1D10+2D8j
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+18h]

loc_67DF1E13:				; CODE XREF: sub_67DF1D10+EBj
					; sub_67DF1D10+2E0j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+1Ch]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1E38
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF1FC8

loc_67DF1E30:				; CODE XREF: sub_67DF1D10+2C0j
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+1Ch]

loc_67DF1E38:				; CODE XREF: sub_67DF1D10+110j
					; sub_67DF1D10+2C6j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+20h]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1E5D
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF1FB5

loc_67DF1E55:				; CODE XREF: sub_67DF1D10+2ADj
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+20h]

loc_67DF1E5D:				; CODE XREF: sub_67DF1D10+135j
					; sub_67DF1D10+2B3j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+24h]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1E82
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF1FA0

loc_67DF1E7A:				; CODE XREF: sub_67DF1D10+298j
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+24h]

loc_67DF1E82:				; CODE XREF: sub_67DF1D10+15Aj
					; sub_67DF1D10+2A0j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+28h]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1EA7
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF1F88

loc_67DF1E9F:				; CODE XREF: sub_67DF1D10+280j
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+28h]

loc_67DF1EA7:				; CODE XREF: sub_67DF1D10+17Fj
					; sub_67DF1D10+286j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+2Ch]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1ECC
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	loc_67DF1F75

loc_67DF1EC4:				; CODE XREF: sub_67DF1D10+26Dj
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+2Ch]

loc_67DF1ECC:				; CODE XREF: sub_67DF1D10+1A4j
					; sub_67DF1D10+273j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+30h]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1EED
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	short loc_67DF1F60

loc_67DF1EE5:				; CODE XREF: sub_67DF1D10+258j
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+30h]

loc_67DF1EED:				; CODE XREF: sub_67DF1D10+1C9j
					; sub_67DF1D10+260j
		mov	dword ptr [eax], 0
		mov	eax, [ebx+34h]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1F0E
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	short loc_67DF1F50

loc_67DF1F06:				; CODE XREF: sub_67DF1D10+248j
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+34h]

loc_67DF1F0E:				; CODE XREF: sub_67DF1D10+1EAj
					; sub_67DF1D10+24Aj
		mov	dword ptr [eax], 0
		mov	eax, [ebx+38h]
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67DF1F2F
		mov	ecx, ds:dword_67E340F0
		test	ecx, ecx
		jz	short loc_67DF1F42

loc_67DF1F27:				; CODE XREF: sub_67DF1D10+23Aj
		mov	[esp+1Ch+var_1C], edx
		call	ecx ; dword_67E340F0
		mov	eax, [ebx+38h]

loc_67DF1F2F:				; CODE XREF: sub_67DF1D10+20Bj
					; sub_67DF1D10+23Cj
		mov	dword ptr [eax], 0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67DF1F42:				; CODE XREF: sub_67DF1D10+215j
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	short loc_67DF1F27
		jmp	short loc_67DF1F2F
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1F50:				; CODE XREF: sub_67DF1D10+1F4j
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	short loc_67DF1F06
		jmp	short loc_67DF1F0E
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1F60:				; CODE XREF: sub_67DF1D10+1D3j
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1EE5
		xchg	ax, ax
		jmp	loc_67DF1EED
; ---------------------------------------------------------------------------

loc_67DF1F75:				; CODE XREF: sub_67DF1D10+1AEj
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1EC4
		jmp	loc_67DF1ECC
; ---------------------------------------------------------------------------

loc_67DF1F88:				; CODE XREF: sub_67DF1D10+189j
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1E9F
		jmp	loc_67DF1EA7
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1FA0:				; CODE XREF: sub_67DF1D10+164j
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1E7A
		xchg	ax, ax
		jmp	loc_67DF1E82
; ---------------------------------------------------------------------------

loc_67DF1FB5:				; CODE XREF: sub_67DF1D10+13Fj
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1E55
		jmp	loc_67DF1E5D
; ---------------------------------------------------------------------------

loc_67DF1FC8:				; CODE XREF: sub_67DF1D10+11Aj
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1E30
		jmp	loc_67DF1E38
; ---------------------------------------------------------------------------
		align 10h

loc_67DF1FE0:				; CODE XREF: sub_67DF1D10+F5j
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1E0B
		xchg	ax, ax
		jmp	loc_67DF1E13
; ---------------------------------------------------------------------------

loc_67DF1FF5:				; CODE XREF: sub_67DF1D10+D0j
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1DE6
		jmp	loc_67DF1DEE
; ---------------------------------------------------------------------------

loc_67DF2008:				; CODE XREF: sub_67DF1D10+ABj
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1DC1
		jmp	loc_67DF1DC9
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2020:				; CODE XREF: sub_67DF1D10+86j
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1D9C
		xchg	ax, ax
		jmp	loc_67DF1DA4
; ---------------------------------------------------------------------------

loc_67DF2035:				; CODE XREF: sub_67DF1D10+61j
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1D77
		jmp	loc_67DF1D7F
; ---------------------------------------------------------------------------

loc_67DF2048:				; CODE XREF: sub_67DF1D10+3Cj
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1D52
		jmp	loc_67DF1D5A
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2060:				; CODE XREF: sub_67DF1D10+18j
		mov	ecx, ds:dword_67E340C8
		test	ecx, ecx
		jnz	loc_67DF1D2E
		xchg	ax, ax
		jmp	loc_67DF1D35
sub_67DF1D10	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 207. dbus_threads_init

; =============== S U B	R O U T	I N E =======================================


		public dbus_threads_init
dbus_threads_init proc near		; CODE XREF: sub_67E114D0+13p

Size		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 60h
		mov	ebx, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 229h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+6Ch+Size],	eax
		mov	[esp+6Ch+var_68], offset aFunctionsNull	; "functions !=	NULL"
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 22Eh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsMaskD ; "functions->mask & DBUS_THREAD_FUNCTIONS"...
		mov	eax, [ebx]
		shr	eax, 4
		and	eax, 1
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 22Fh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsMas_0 ; "functions->mask & DBUS_THREAD_FUNCTIONS"...
		mov	eax, [ebx]
		shr	eax, 5
		and	eax, 1
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 230h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsMas_1 ; "functions->mask & DBUS_THREAD_FUNCTIONS"...
		mov	eax, [ebx]
		shr	eax, 6
		and	eax, 1
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 231h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsMas_2 ; "functions->mask & DBUS_THREAD_FUNCTIONS"...
		mov	eax, [ebx]
		shr	eax, 7
		and	eax, 1
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 232h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsMas_3 ; "functions->mask & DBUS_THREAD_FUNCTIONS"...
		mov	eax, [ebx]
		shr	eax, 8
		and	eax, 1
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 233h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsMas_4 ; "functions->mask & DBUS_THREAD_FUNCTIONS"...
		mov	eax, [ebx]
		shr	eax, 9
		and	eax, 1
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 234h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsCondv ; "functions->condvar_new != NULL"
		cmp	dword ptr [ebx+14h], 0
		setnz	al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 235h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsCon_0 ; "functions->condvar_free != NULL"
		cmp	dword ptr [ebx+18h], 0
		setnz	al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 236h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsCon_1 ; "functions->condvar_wait != NULL"
		cmp	dword ptr [ebx+1Ch], 0
		setnz	al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 237h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsCon_2 ; "functions->condvar_wait_timeout != NULL"
		cmp	dword ptr [ebx+20h], 0
		setnz	al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 238h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsCon_3 ; "functions->condvar_wake_one	!= NULL"
		cmp	dword ptr [ebx+24h], 0
		setnz	al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		mov	[esp+6Ch+var_60], 239h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsCon_4 ; "functions->condvar_wake_all	!= NULL"
		cmp	dword ptr [ebx+28h], 0
		setnz	al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		mov	edx, eax
		and	edx, 0Fh
		cmp	edx, 0Fh
		jz	loc_67DF2860

loc_67DF230F:				; CODE XREF: dbus_threads_init+7E5j
					; dbus_threads_init+7F0j ...
		and	eax, 3C00h
		xor	edx, edx
		xor	ecx, ecx
		cmp	eax, 3C00h
		jz	loc_67DF28A3

loc_67DF2323:				; CODE XREF: dbus_threads_init+81Dj
					; dbus_threads_init+828j ...
		test	edx, edx
		jz	loc_67DF2C42

loc_67DF232B:				; CODE XREF: dbus_threads_init+851j
		mov	[esp+6Ch+var_5C], offset aDbus_threads_i ; "dbus_threads_init"
		xor	eax, eax
		mov	[esp+6Ch+var_60], 261h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aFunctionsMas_5 ; "(functions->mask & ~DBUS_THREAD_FUNCTIO"...
		test	dword ptr [ebx], 0FFFFC000h
		setz	al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	eax, ds:dword_67E340A0
		cmp	eax, dword_67E19028
		jz	loc_67DF28F3
		mov	ds:dword_67E340C0, 0

loc_67DF2379:				; CODE XREF: dbus_threads_init+87Bj
		mov	eax, [ebx+4]
		mov	ds:dword_67E340C4, eax
		mov	eax, [ebx+8]
		mov	ds:dword_67E340C8, eax
		mov	eax, [ebx+0Ch]
		mov	ds:dword_67E340CC, eax
		mov	eax, [ebx+10h]
		mov	ds:dword_67E340D0, eax
		mov	eax, [ebx+14h]
		mov	ds:dword_67E340D4, eax
		mov	eax, [ebx+18h]
		mov	ds:dword_67E340D8, eax
		mov	eax, [ebx+1Ch]
		mov	ds:dword_67E340DC, eax
		mov	eax, [ebx+20h]
		mov	ds:dword_67E340E0, eax
		mov	eax, [ebx+24h]
		mov	ds:dword_67E340E4, eax
		mov	eax, [ebx+28h]
		mov	ds:dword_67E340E8, eax
		mov	eax, [ebx]
		test	ah, 4
		jz	short loc_67DF23D9
		mov	edx, [ebx+2Ch]
		mov	ds:dword_67E340EC, edx

loc_67DF23D9:				; CODE XREF: dbus_threads_init+34Ej
		test	ah, 8
		jz	short loc_67DF23E7
		mov	edx, [ebx+30h]
		mov	ds:dword_67E340F0, edx

loc_67DF23E7:				; CODE XREF: dbus_threads_init+35Cj
		test	ah, 10h
		jz	short loc_67DF23F5
		mov	edx, [ebx+34h]
		mov	ds:dword_67E340F4, edx

loc_67DF23F5:				; CODE XREF: dbus_threads_init+36Aj
		test	ah, 20h
		jnz	loc_67DF2750

loc_67DF23FE:				; CODE XREF: dbus_threads_init+6D9j
		mov	ds:dword_67E340C0, eax
		mov	[esp+6Ch+var_48], offset dword_67E34D98
		mov	[esp+6Ch+var_44], offset dword_67E34D94
		mov	[esp+6Ch+var_40], offset dword_67E34D8C
		mov	[esp+6Ch+var_3C], offset dword_67E34D74
		mov	[esp+6Ch+var_38], offset dword_67E34D80
		mov	[esp+6Ch+var_34], offset dword_67E34D84
		mov	[esp+6Ch+var_30], offset dword_67E34D7C
		mov	[esp+6Ch+var_2C], offset dword_67E34DA0
		mov	[esp+6Ch+var_28], offset dword_67E34D68
		mov	[esp+6Ch+var_24], offset dword_67E34D6C
		mov	[esp+6Ch+var_20], offset dword_67E34D90
		mov	[esp+6Ch+var_1C], offset dword_67E34D9C
		mov	[esp+6Ch+var_18], offset dword_67E34D78
		mov	[esp+6Ch+var_14], offset dword_67E34D70
		mov	[esp+6Ch+var_10], offset dword_67E34D88
		mov	[esp+6Ch+var_5C], offset aInit_locks ; "init_locks"
		mov	[esp+6Ch+var_60], 1BAh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset a_dbus_n_elemen ; "_DBUS_N_ELEMENTS (global_locks) == _DBU"...
		mov	[esp+6Ch+Size],	1
		call	sub_67DFAE70
		mov	[esp+6Ch+Size],	3Ch ; Size
		call	dbus_malloc
		test	eax, eax
		mov	ebx, eax
		jz	loc_67DF2BEC
		mov	eax, ds:dword_67E340EC
		test	eax, eax
		jz	loc_67DF2760

loc_67DF24CA:				; CODE XREF: dbus_threads_init+6E7j
		call	eax ; dword_67E340EC
		xor	edi, edi
		test	eax, eax
		mov	ds:dword_67E34D98, eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	dword ptr [ebx], offset	dword_67E34D98
		mov	esi, [esp+6Ch+var_44]
		test	eax, eax
		jz	loc_67DF2947

loc_67DF24F2:				; CODE XREF: dbus_threads_init+8CEj
		call	eax ; dword_67E340EC
		mov	edi, 1
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+4], esi
		mov	esi, [esp+6Ch+var_40]
		test	eax, eax
		jz	loc_67DF2960

loc_67DF2517:				; CODE XREF: dbus_threads_init+8E7j
		call	eax ; dword_67E340EC
		mov	edi, 2
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+8], esi
		mov	esi, [esp+6Ch+var_3C]
		test	eax, eax
		jz	loc_67DF2975

loc_67DF253C:				; CODE XREF: dbus_threads_init+8FCj
		call	eax ; dword_67E340EC
		mov	edi, 3
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+0Ch], esi
		mov	esi, [esp+6Ch+var_38]
		test	eax, eax
		jz	loc_67DF2987

loc_67DF2561:				; CODE XREF: dbus_threads_init+90Ej
		call	eax ; dword_67E340EC
		mov	edi, 4
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+10h], esi
		mov	esi, [esp+6Ch+var_34]
		test	eax, eax
		jz	loc_67DF29A0

loc_67DF2586:				; CODE XREF: dbus_threads_init+927j
		call	eax ; dword_67E340EC
		mov	edi, 5
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+14h], esi
		mov	esi, [esp+6Ch+var_30]
		test	eax, eax
		jz	loc_67DF29B5

loc_67DF25AB:				; CODE XREF: dbus_threads_init+93Cj
		call	eax ; dword_67E340EC
		mov	edi, 6
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+18h], esi
		mov	esi, [esp+6Ch+var_2C]
		test	eax, eax
		jz	loc_67DF29C7

loc_67DF25D0:				; CODE XREF: dbus_threads_init+94Ej
		call	eax ; dword_67E340EC
		mov	edi, 7
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+1Ch], esi
		mov	esi, [esp+6Ch+var_28]
		test	eax, eax
		jz	loc_67DF29E0

loc_67DF25F5:				; CODE XREF: dbus_threads_init+967j
		call	eax ; dword_67E340EC
		mov	edi, 8
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+20h], esi
		mov	esi, [esp+6Ch+var_24]
		test	eax, eax
		jz	loc_67DF29F5

loc_67DF261A:				; CODE XREF: dbus_threads_init+97Cj
		call	eax ; dword_67E340EC
		mov	edi, 9
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+24h], esi
		mov	esi, [esp+6Ch+var_20]
		test	eax, eax
		jz	loc_67DF2A07

loc_67DF263F:				; CODE XREF: dbus_threads_init+98Ej
		call	eax ; dword_67E340EC
		mov	edi, 0Ah
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+28h], esi
		mov	esi, [esp+6Ch+var_1C]
		test	eax, eax
		jz	loc_67DF2A20

loc_67DF2664:				; CODE XREF: dbus_threads_init+9A7j
		call	eax ; dword_67E340EC
		mov	edi, 0Bh
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+2Ch], esi
		mov	esi, [esp+6Ch+var_18]
		test	eax, eax
		jz	loc_67DF2910

loc_67DF2689:				; CODE XREF: dbus_threads_init+897j
		call	eax ; dword_67E340EC
		mov	edi, 0Ch
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+30h], esi
		mov	esi, [esp+6Ch+var_14]
		test	eax, eax
		jz	loc_67DF2922

loc_67DF26AE:				; CODE XREF: dbus_threads_init+8A9j
		call	eax ; dword_67E340EC
		mov	edi, 0Dh
		test	eax, eax
		mov	[esi], eax
		jz	loc_67DF2840
		mov	eax, ds:dword_67E340EC
		mov	[ebx+34h], esi
		test	eax, eax
		jz	loc_67DF2935

loc_67DF26CF:				; CODE XREF: dbus_threads_init+8BCj
		call	eax ; dword_67E340EC
		test	eax, eax
		mov	ds:dword_67E34D88, eax
		jz	loc_67DF2835

loc_67DF26DE:				; CODE XREF: dbus_threads_init+7B0j
		mov	dword ptr [ebx+38h], offset dword_67E34D88
		mov	[esp+6Ch+var_68], ebx
		mov	[esp+6Ch+Size],	offset sub_67DF1D10
		call	sub_67DFE730
		test	eax, eax
		jnz	loc_67DF2A35

loc_67DF26FD:				; CODE XREF: dbus_threads_init+AC4j
					; dbus_threads_init+ACCj ...
		mov	[esp+6Ch+Size],	ebx
		mov	edi, 0Eh
		mov	ebx, 0Eh
		call	dbus_free

loc_67DF270F:				; CODE XREF: dbus_threads_init+7D0j
		lea	esi, [esp+edi*4+6Ch+var_48]
		jmp	short loc_67DF272F
; ---------------------------------------------------------------------------

loc_67DF2715:				; CODE XREF: dbus_threads_init+6BFj
					; dbus_threads_init+6C9j
		mov	[esp+6Ch+Size],	eax
		call	edx ; dword_67E340F0

loc_67DF271A:				; CODE XREF: dbus_threads_init+6B5j
					; dbus_threads_init+6CBj
		sub	ebx, 1
		sub	esi, 4
		cmp	ebx, 0FFFFFFFFh
		mov	dword ptr [edi], 0
		jz	loc_67DF2856

loc_67DF272F:				; CODE XREF: dbus_threads_init+693j
		mov	edi, [esi]
		mov	eax, [edi]
		test	eax, eax
		jz	short loc_67DF271A
		mov	edx, ds:dword_67E340F0
		test	edx, edx
		jnz	short loc_67DF2715
		mov	edx, ds:dword_67E340C8
		test	edx, edx
		jnz	short loc_67DF2715
		jmp	short loc_67DF271A
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2750:				; CODE XREF: dbus_threads_init+378j
		mov	edx, [ebx+38h]
		mov	ds:dword_67E340F8, edx
		jmp	loc_67DF23FE
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2760:				; CODE XREF: dbus_threads_init+444j
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF24CA
		mov	dword ptr [ebx], offset	dword_67E34D98
		mov	esi, [esp+6Ch+var_44]
		mov	ds:dword_67E34D98, 0ABCDEFh

loc_67DF2781:				; CODE XREF: dbus_threads_init+8D4j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+4], esi
		mov	esi, [esp+6Ch+var_40]

loc_67DF278E:				; CODE XREF: dbus_threads_init+8F0j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+8], esi
		mov	esi, [esp+6Ch+var_3C]

loc_67DF279B:				; CODE XREF: dbus_threads_init+902j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+0Ch], esi
		mov	esi, [esp+6Ch+var_38]

loc_67DF27A8:				; CODE XREF: dbus_threads_init+914j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+10h], esi
		mov	esi, [esp+6Ch+var_34]

loc_67DF27B5:				; CODE XREF: dbus_threads_init+930j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+14h], esi
		mov	esi, [esp+6Ch+var_30]

loc_67DF27C2:				; CODE XREF: dbus_threads_init+942j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+18h], esi
		mov	esi, [esp+6Ch+var_2C]

loc_67DF27CF:				; CODE XREF: dbus_threads_init+954j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+1Ch], esi
		mov	esi, [esp+6Ch+var_28]

loc_67DF27DC:				; CODE XREF: dbus_threads_init+970j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+20h], esi
		mov	esi, [esp+6Ch+var_24]

loc_67DF27E9:				; CODE XREF: dbus_threads_init+982j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+24h], esi
		mov	esi, [esp+6Ch+var_20]

loc_67DF27F6:				; CODE XREF: dbus_threads_init+994j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+28h], esi
		mov	esi, [esp+6Ch+var_1C]

loc_67DF2803:				; CODE XREF: dbus_threads_init+9B0j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+2Ch], esi
		mov	esi, [esp+6Ch+var_18]

loc_67DF2810:				; CODE XREF: dbus_threads_init+89Dj
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+30h], esi
		mov	esi, [esp+6Ch+var_14]

loc_67DF281D:				; CODE XREF: dbus_threads_init+8B0j
		mov	dword ptr [esi], 0ABCDEFh
		mov	[ebx+34h], esi

loc_67DF2826:				; CODE XREF: dbus_threads_init+8C2j
		mov	ds:dword_67E34D88, 0ABCDEFh
		jmp	loc_67DF26DE
; ---------------------------------------------------------------------------

loc_67DF2835:				; CODE XREF: dbus_threads_init+658j
		mov	edi, 0Eh
		lea	esi, [esi+0]

loc_67DF2840:				; CODE XREF: dbus_threads_init+455j
					; dbus_threads_init+47Dj ...
		sub	edi, 1
		mov	[esp+6Ch+Size],	ebx
		mov	ebx, edi
		call	dbus_free
		cmp	edi, 0FFFFFFFFh
		jnz	loc_67DF270F

loc_67DF2856:				; CODE XREF: dbus_threads_init+6A9j
		xor	eax, eax

loc_67DF2858:				; CODE XREF: dbus_threads_init+B7Aj
		add	esp, 60h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2860:				; CODE XREF: dbus_threads_init+289j
		mov	edi, [ebx+4]
		test	edi, edi
		jz	loc_67DF230F
		mov	esi, [ebx+8]
		test	esi, esi
		jz	loc_67DF230F
		mov	ecx, [ebx+0Ch]
		test	ecx, ecx
		jz	loc_67DF230F
		mov	edi, [ebx+10h]
		mov	dl, 1
		mov	ecx, 1
		test	edi, edi
		jz	loc_67DF230F
		and	eax, 3C00h
		cmp	eax, 3C00h
		jnz	loc_67DF2323

loc_67DF28A3:				; CODE XREF: dbus_threads_init+29Dj
		mov	esi, [ebx+2Ch]
		test	esi, esi
		jz	loc_67DF2323
		mov	eax, [ebx+30h]
		test	eax, eax
		jz	loc_67DF2323
		mov	edi, [ebx+34h]
		test	edi, edi
		jz	loc_67DF2323
		mov	esi, [ebx+38h]
		test	esi, esi
		jz	loc_67DF2323
		test	ecx, ecx
		jz	loc_67DF232B
		mov	[esp+6Ch+var_64], 25Bh
		mov	[esp+6Ch+var_68], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Size],	offset aEitherTheNonre ; "Either the nonrecusrive or recursive mu"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DF28F3:				; CODE XREF: dbus_threads_init+2E9j
		mov	edx, ds:dword_67E340C0
		test	edx, edx
		jz	loc_67DF2379

loc_67DF2901:				; CODE XREF: dbus_threads_init+BBDj
		add	esp, 60h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2910:				; CODE XREF: dbus_threads_init+603j
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF2689
		jmp	loc_67DF2810
; ---------------------------------------------------------------------------

loc_67DF2922:				; CODE XREF: dbus_threads_init+628j
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF26AE
		nop
		jmp	loc_67DF281D
; ---------------------------------------------------------------------------

loc_67DF2935:				; CODE XREF: dbus_threads_init+649j
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF26CF
		jmp	loc_67DF2826
; ---------------------------------------------------------------------------

loc_67DF2947:				; CODE XREF: dbus_threads_init+46Cj
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF24F2
		jmp	loc_67DF2781
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2960:				; CODE XREF: dbus_threads_init+491j
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF2517
		lea	esi, [esi+0]
		jmp	loc_67DF278E
; ---------------------------------------------------------------------------

loc_67DF2975:				; CODE XREF: dbus_threads_init+4B6j
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF253C
		jmp	loc_67DF279B
; ---------------------------------------------------------------------------

loc_67DF2987:				; CODE XREF: dbus_threads_init+4DBj
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF2561
		jmp	loc_67DF27A8
; ---------------------------------------------------------------------------
		align 10h

loc_67DF29A0:				; CODE XREF: dbus_threads_init+500j
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF2586
		lea	esi, [esi+0]
		jmp	loc_67DF27B5
; ---------------------------------------------------------------------------

loc_67DF29B5:				; CODE XREF: dbus_threads_init+525j
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF25AB
		jmp	loc_67DF27C2
; ---------------------------------------------------------------------------

loc_67DF29C7:				; CODE XREF: dbus_threads_init+54Aj
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF25D0
		jmp	loc_67DF27CF
; ---------------------------------------------------------------------------
		align 10h

loc_67DF29E0:				; CODE XREF: dbus_threads_init+56Fj
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF25F5
		lea	esi, [esi+0]
		jmp	loc_67DF27DC
; ---------------------------------------------------------------------------

loc_67DF29F5:				; CODE XREF: dbus_threads_init+594j
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF261A
		jmp	loc_67DF27E9
; ---------------------------------------------------------------------------

loc_67DF2A07:				; CODE XREF: dbus_threads_init+5B9j
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF263F
		jmp	loc_67DF27F6
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2A20:				; CODE XREF: dbus_threads_init+5DEj
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	loc_67DF2664
		lea	esi, [esi+0]
		jmp	loc_67DF2803
; ---------------------------------------------------------------------------

loc_67DF2A35:				; CODE XREF: dbus_threads_init+677j
		mov	eax, ds:dword_67E340A0
		cmp	eax, dword_67E19028
		mov	[esp+6Ch+var_5C], offset aInit_uninitial ; "init_uninitialized_locks"
		mov	[esp+6Ch+var_60], 14Dh
		setnz	al
		movzx	eax, al
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aThread_init_ge ; "thread_init_generation != _dbus_current"...
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	esi, ds:dword_67E3410C
		jmp	short loc_67DF2A91
; ---------------------------------------------------------------------------

loc_67DF2A76:				; CODE XREF: dbus_threads_init+A56j
					; dbus_threads_init+A5Fj
		call	eax ; dword_67E340EC
		test	eax, eax
		mov	[edi], eax
		jz	loc_67DF2B24

loc_67DF2A82:				; CODE XREF: dbus_threads_init+A67j
		mov	esi, [esi+4]
		cmp	esi, ds:dword_67E3410C
		jz	loc_67DF2B80

loc_67DF2A91:				; CODE XREF: dbus_threads_init+9F4j
		test	esi, esi
		jz	loc_67DF2B80
		mov	edi, [esi+8]
		xor	eax, eax
		mov	[esp+6Ch+var_5C], offset aInit_uninitial ; "init_uninitialized_locks"
		mov	[esp+6Ch+var_60], 155h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aMp_dbus_dummy_ ; "*mp	== _DBUS_DUMMY_MUTEX"
		cmp	dword ptr [edi], 0ABCDEFh
		setz	al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	eax, ds:dword_67E340EC
		test	eax, eax
		jnz	short loc_67DF2A76
		mov	eax, ds:dword_67E340C4
		test	eax, eax
		jnz	short loc_67DF2A76
		mov	dword ptr [edi], 0ABCDEFh
		jmp	short loc_67DF2A82
; ---------------------------------------------------------------------------

loc_67DF2AE9:				; CODE XREF: dbus_threads_init+B10j
					; dbus_threads_init+BADj
		mov	esi, ds:dword_67E34110
		nop

loc_67DF2AF0:				; CODE XREF: dbus_threads_init+AA2j
		test	esi, esi
		jz	short loc_67DF2B24
		mov	edi, [esi+8]
		mov	eax, [edi]
		cmp	eax, 0ABCDEF2h
		jz	short loc_67DF2B24
		test	eax, eax
		jz	short loc_67DF2B13
		mov	edx, ds:dword_67E340D8
		test	edx, edx
		jz	short loc_67DF2B13
		mov	[esp+6Ch+Size],	eax
		call	edx ; dword_67E340D8

loc_67DF2B13:				; CODE XREF: dbus_threads_init+A82j
					; dbus_threads_init+A8Cj
		mov	esi, [esi+4]
		cmp	esi, ds:dword_67E34110
		mov	dword ptr [edi], 0ABCDEF2h
		jnz	short loc_67DF2AF0

loc_67DF2B24:				; CODE XREF: dbus_threads_init+9FCj
					; dbus_threads_init+A72j ...
		mov	esi, ds:dword_67E3410C
		jmp	short loc_67DF2B4A
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2B30:				; CODE XREF: dbus_threads_init+AEEj
					; dbus_threads_init+AF8j
		mov	[esp+6Ch+Size],	eax
		call	edx ; dword_67E340F0

loc_67DF2B35:				; CODE XREF: dbus_threads_init+AE4j
					; dbus_threads_init+AFAj
		mov	esi, [esi+4]
		cmp	esi, ds:dword_67E3410C
		mov	dword ptr [edi], 0ABCDEFh
		jz	loc_67DF26FD

loc_67DF2B4A:				; CODE XREF: dbus_threads_init+AAAj
		test	esi, esi
		jz	loc_67DF26FD
		mov	edi, [esi+8]
		mov	eax, [edi]
		cmp	eax, 0ABCDEFh
		jz	loc_67DF26FD
		test	eax, eax
		jz	short loc_67DF2B35
		mov	edx, ds:dword_67E340F0
		test	edx, edx
		jnz	short loc_67DF2B30
		mov	edx, ds:dword_67E340C8
		test	edx, edx
		jnz	short loc_67DF2B30
		jmp	short loc_67DF2B35
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2B80:				; CODE XREF: dbus_threads_init+A0Bj
					; dbus_threads_init+A13j
		mov	esi, ds:dword_67E34110
		jmp	short loc_67DF2BA1
; ---------------------------------------------------------------------------

loc_67DF2B88:				; CODE XREF: dbus_threads_init+B62j
		call	eax ; dword_67E340D4
		test	eax, eax
		mov	[edi], eax
		xchg	ax, ax
		jz	loc_67DF2AE9

loc_67DF2B96:				; CODE XREF: dbus_threads_init+B6Aj
		mov	esi, [esi+4]
		cmp	esi, ds:dword_67E34110
		jz	short loc_67DF2BFF

loc_67DF2BA1:				; CODE XREF: dbus_threads_init+B06j
		test	esi, esi
		jz	short loc_67DF2BFF
		mov	edi, [esi+8]
		xor	eax, eax
		mov	[esp+6Ch+var_5C], offset aInit_uninitial ; "init_uninitialized_locks"
		mov	[esp+6Ch+var_60], 164h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aCp_dbus_dummy_ ; "*cp	== _DBUS_DUMMY_CONDVAR"
		cmp	dword ptr [edi], 0ABCDEF2h
		setz	al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	eax, ds:dword_67E340D4
		test	eax, eax
		jnz	short loc_67DF2B88
		mov	dword ptr [edi], 0ABCDEF2h
		jmp	short loc_67DF2B96
; ---------------------------------------------------------------------------

loc_67DF2BEC:				; CODE XREF: dbus_threads_init+437j
		mov	[esp+6Ch+Size],	0
		call	dbus_free
		xor	eax, eax
		jmp	loc_67DF2858
; ---------------------------------------------------------------------------

loc_67DF2BFF:				; CODE XREF: dbus_threads_init+B1Fj
					; dbus_threads_init+B23j
		mov	[esp+6Ch+Size],	offset dword_67E3410C
		call	sub_67DFBC90
		mov	[esp+6Ch+Size],	offset dword_67E34110
		call	sub_67DFBC90
		mov	[esp+6Ch+var_68], 0
		mov	[esp+6Ch+Size],	offset sub_67DF1C30
		call	sub_67DFE730
		test	eax, eax
		jz	loc_67DF2AE9
		mov	eax, dword_67E19028
		mov	ds:dword_67E340A0, eax
		jmp	loc_67DF2901
; ---------------------------------------------------------------------------

loc_67DF2C42:				; CODE XREF: dbus_threads_init+2A5j
		mov	[esp+6Ch+var_64], 254h
		mov	[esp+6Ch+var_68], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Size],	offset aEitherTheNon_0 ; "Either the nonrecusrive or recursive mu"...
		call	sub_67DFAE30
dbus_threads_init endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2C60	proc near		; CODE XREF: sub_67DCCE40+38Bp
					; sub_67DCCE40+396p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		test	ebx, ebx
		jz	short loc_67DF2CAD
		mov	eax, ds:dword_67E340A0
		cmp	eax, dword_67E19028
		jz	short loc_67DF2C89
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], offset dword_67E3410C
		call	sub_67DFBBE0

loc_67DF2C89:				; CODE XREF: sub_67DF2C60+17j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_67DF2CAD
		mov	edx, ds:dword_67E340F0
		test	edx, edx
		jz	short loc_67DF2CA3

loc_67DF2C99:				; CODE XREF: sub_67DF2C60+4Bj
		mov	[esp+1Ch+arg_0], eax
		add	esp, 18h
		pop	ebx
		jmp	edx
; ---------------------------------------------------------------------------

loc_67DF2CA3:				; CODE XREF: sub_67DF2C60+37j
		mov	edx, ds:dword_67E340C8
		test	edx, edx
		jnz	short loc_67DF2C99

loc_67DF2CAD:				; CODE XREF: sub_67DF2C60+Aj
					; sub_67DF2C60+2Dj
		add	esp, 18h
		pop	ebx
		retn
sub_67DF2C60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2CC0	proc near		; CODE XREF: sub_67DCCE40+6Fp
					; sub_67DCCE40+85p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_mutex_ne ; "_dbus_mutex_new_at_location"
		mov	[esp+2Ch+var_20], 5Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_16 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aLocation_pNull ; "location_p != NULL"
		call	sub_67DFAE70
		mov	eax, ds:dword_67E340EC
		test	eax, eax
		jz	short loc_67DF2D50
		call	eax ; dword_67E340EC

loc_67DF2D02:				; CODE XREF: sub_67DF2CC0+9Dj
					; sub_67DF2CC0+A1j
		mov	edx, ds:dword_67E340A0
		cmp	edx, dword_67E19028
		mov	[ebx], eax
		jz	short loc_67DF2D2A
		test	eax, eax
		jz	short loc_67DF2D2A
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], offset dword_67E3410C
		call	sub_67DFBB80
		test	eax, eax
		jz	short loc_67DF2D30

loc_67DF2D2A:				; CODE XREF: sub_67DF2CC0+50j
					; sub_67DF2CC0+54j
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2D30:				; CODE XREF: sub_67DF2CC0+68j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_67DF2D45
		mov	edx, ds:dword_67E340F0
		test	edx, edx
		jz	short loc_67DF2D63

loc_67DF2D40:				; CODE XREF: sub_67DF2CC0+ABj
		mov	[esp+2Ch+var_2C], eax
		call	edx ; dword_67E340F0

loc_67DF2D45:				; CODE XREF: sub_67DF2CC0+74j
					; sub_67DF2CC0+B0j
		mov	dword ptr [ebx], 0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF2D50:				; CODE XREF: sub_67DF2CC0+3Ej
		mov	edx, ds:dword_67E340C4
		mov	eax, 0ABCDEFh
		test	edx, edx
		jz	short loc_67DF2D02
		call	edx ; dword_67E340C4
		jmp	short loc_67DF2D02
; ---------------------------------------------------------------------------

loc_67DF2D63:				; CODE XREF: sub_67DF2CC0+7Ej
		mov	edx, ds:dword_67E340C8
		test	edx, edx
		jnz	short loc_67DF2D40
		lea	esi, [esi+0]
		jmp	short loc_67DF2D45
sub_67DF2CC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2D80	proc near		; CODE XREF: dbus_connection_get_is_connected+E8p
					; sub_67DCDAC0+6Fp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		movzx	eax, byte ptr [eax+44h]
		xor	eax, 1
		and	eax, 1
		retn
sub_67DF2D80	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	eax, [eax+24h]
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2DA0	proc near		; CODE XREF: dbus_connection_get_max_received_size+B1p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+18h]
		retn
sub_67DF2DA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2DB0	proc near		; CODE XREF: dbus_connection_get_max_received_unix_fds+B1p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+1Ch]
		retn
sub_67DF2DB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2DC0	proc near		; CODE XREF: dbus_connection_set_unix_user_function+E8p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_10]
		mov	ecx, [eax+30h]
		mov	[edx], ecx
		mov	ecx, [eax+34h]
		mov	edx, [esp+arg_14]
		mov	[edx], ecx
		mov	edx, [esp+arg_4]
		mov	[eax+2Ch], edx
		mov	edx, [esp+arg_8]
		mov	[eax+30h], edx
		mov	edx, [esp+arg_C]
		mov	[eax+34h], edx
		retn
sub_67DF2DC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2DF0	proc near		; CODE XREF: dbus_connection_set_windows_user_function+E8p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	eax, [esp+arg_0]
		mov	edx, [esp+arg_10]
		mov	ecx, [eax+3Ch]
		mov	[edx], ecx
		mov	ecx, [eax+40h]
		mov	edx, [esp+arg_14]
		mov	[edx], ecx
		mov	edx, [esp+arg_4]
		mov	[eax+38h], edx
		mov	edx, [esp+arg_8]
		mov	[eax+3Ch], edx
		mov	edx, [esp+arg_C]
		mov	[eax+40h], edx
		retn
sub_67DF2DF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2E20	proc near		; CODE XREF: dbus_connection_set_allow_anonymous+B9p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	ecx, [esp+arg_0]
		test	eax, eax
		movzx	eax, byte ptr [ecx+44h]
		setnz	dl
		shl	edx, 6
		and	eax, 0FFFFFFBFh
		or	eax, edx
		mov	[ecx+44h], al
		retn
sub_67DF2E20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2E40	proc near		; CODE XREF: sub_67DEE790+205p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+10h]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_67DC29C0
sub_67DF2E40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2E60	proc near		; CODE XREF: dbus_connection_get_windows_user+17Ap

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	dword ptr [ebx], 0
		test	byte ptr [eax+44h], 2
		jnz	short loc_67DF2E90

loc_67DF2E7F:				; CODE XREF: sub_67DF2E60+4Fj
		xor	eax, eax
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2E90:				; CODE XREF: sub_67DF2E60+1Dj
		mov	eax, [eax+10h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DC2530
		mov	[esp+1Ch+var_18], 3
		mov	esi, eax
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DD5860
		test	eax, eax
		jz	short loc_67DF2E7F
		mov	[esp+1Ch+var_1C], esi
		call	sub_67DD55E0
		mov	[esp+1Ch+var_1C], eax ;	char *
		call	sub_67DFAA60
		mov	[ebx], eax
		mov	eax, 1
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DF2E60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2EE0	proc near		; CODE XREF: dbus_connection_get_adt_audit_session_data+1B1p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_C], ebx
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], esi
		mov	ebx, [esp+1Ch+arg_8]
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], edi
		mov	dword ptr [ebx], 0
		mov	dword ptr [esi], 0
		test	byte ptr [eax+44h], 2
		jnz	short loc_67DF2F20

loc_67DF2F0D:				; CODE XREF: sub_67DF2EE0+5Fj
		xor	eax, eax
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2F20:				; CODE XREF: sub_67DF2EE0+2Bj
		mov	eax, [eax+10h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DC2530
		mov	[esp+1Ch+var_18], 2
		mov	edi, eax
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DD5860
		test	eax, eax
		jz	short loc_67DF2F0D
		mov	[esp+1Ch+var_1C], edi
		call	sub_67DD55F0
		mov	[esi], eax
		mov	[esp+1Ch+var_1C], edi
		call	sub_67DD5600
		mov	[ebx], eax
		mov	eax, 1
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DF2EE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2F70	proc near		; CODE XREF: dbus_connection_get_unix_process_id+17Ap

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	dword ptr [ebx], 0FFFFFFFFh
		test	byte ptr [eax+44h], 2
		jnz	short loc_67DF2FA0

loc_67DF2F8F:				; CODE XREF: sub_67DF2F70+4Fj
		xor	eax, eax
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF2FA0:				; CODE XREF: sub_67DF2F70+1Dj
		mov	eax, [eax+10h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DC2530
		mov	[esp+1Ch+var_18], 0
		mov	esi, eax
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DD5860
		test	eax, eax
		jz	short loc_67DF2F8F
		mov	[esp+1Ch+var_1C], esi
		call	sub_67DD55C0
		mov	[ebx], eax
		mov	eax, 1
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DF2F70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF2FE0	proc near		; CODE XREF: dbus_connection_get_unix_user+1AAp

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	eax, [esp+1Ch+arg_0]
		mov	ebx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_4], esi
		mov	dword ptr [ebx], 7FFFFFFFh
		test	byte ptr [eax+44h], 2
		jnz	short loc_67DF3010

loc_67DF2FFF:				; CODE XREF: sub_67DF2FE0+4Fj
		xor	eax, eax
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF3010:				; CODE XREF: sub_67DF2FE0+1Dj
		mov	eax, [eax+10h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DC2530
		mov	[esp+1Ch+var_18], 1
		mov	esi, eax
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DD5860
		test	eax, eax
		jz	short loc_67DF2FFF
		mov	[esp+1Ch+var_1C], esi
		call	sub_67DD55D0
		mov	[ebx], eax
		mov	eax, 1
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67DF2FE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3050	proc near		; CODE XREF: dbus_connection_set_max_received_unix_fds+B9p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_0]
		mov	edx, [esp+2Ch+arg_4]
		mov	[eax+1Ch], edx
		mov	[esp+2Ch+var_1C], eax
		mov	[esp+2Ch+var_20], offset sub_67DF3E90
		mov	[esp+2Ch+var_24], edx
		mov	edx, [eax+18h]
		mov	[esp+2Ch+var_28], edx
		mov	eax, [eax+20h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DEB660
		add	esp, 2Ch
		retn
sub_67DF3050	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3090	proc near		; CODE XREF: dbus_connection_set_max_received_size+B9p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_0]
		mov	edx, [esp+2Ch+arg_4]
		mov	[eax+18h], edx
		mov	[esp+2Ch+var_1C], eax
		mov	[esp+2Ch+var_20], offset sub_67DF3E90
		mov	ecx, [eax+1Ch]
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_24], ecx
		mov	eax, [eax+20h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DEB660
		add	esp, 2Ch
		retn
sub_67DF3090	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF30D0	proc near		; CODE XREF: dbus_connection_get_max_message_unix_fds+B1p

arg_0		= dword	ptr  4

; FUNCTION CHUNK AT 67DE03D0 SIZE 00000008 BYTES

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+0Ch]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	loc_67DE03D0
sub_67DF30D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF30F0	proc near		; CODE XREF: dbus_connection_get_max_message_size+B1p

arg_0		= dword	ptr  4

; FUNCTION CHUNK AT 67DE03C0 SIZE 00000008 BYTES

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+0Ch]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	loc_67DE03C0
sub_67DF30F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3110	proc near		; CODE XREF: dbus_connection_set_max_message_unix_fds+B9p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+0Ch]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_67DE0B90
sub_67DF3110	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3130	proc near		; CODE XREF: dbus_connection_set_max_message_size+B9p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	eax, [eax+0Ch]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_67DE0BE0
sub_67DF3130	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3150	proc near		; CODE XREF: sub_67DCCE40+25Cp
					; sub_67DF55E0+42p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_transp_0 ; "_dbus_transport_ref"
		mov	[esp+2Ch+var_20], 1CAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportRefco ; "transport->refcount	> 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		add	dword ptr [ebx], 1
		add	esp, 28h
		pop	ebx
		retn
sub_67DF3150	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF31A0	proc near		; CODE XREF: sub_67DCFE60+10Cp
					; sub_67DF4150+62Ep ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+Format], offset aStart_0 ; "start\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+2Ch+var_28], 1F4h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+2Ch+Format], 1F6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportVtabl ; "transport->vtable->disconnect != NULL"
		mov	eax, [ebx+4]
		mov	edx, [eax+8]
		test	edx, edx
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		test	byte ptr [ebx+44h], 1
		jnz	short loc_67DF3239
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+8]
		or	byte ptr [ebx+44h], 1
		mov	[esp+2Ch+Format], offset aEnd_0	; "end\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+2Ch+var_28], 1FFh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DF3239:				; CODE XREF: sub_67DF31A0+66j
		add	esp, 28h
		pop	ebx
		retn
sub_67DF31A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3240	proc near		; CODE XREF: sub_67DCDAC0+2AFp
					; sub_67DD4800+1B0p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1DBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aTransportNull	; "transport !=	NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1DCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportRefco ; "transport->refcount	> 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DF32B7
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF32B7:				; CODE XREF: sub_67DF3240+70j
		mov	[esp+2Ch+Format], offset aFinalizing ; "finalizing\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+var_28], 1E1h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1E3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportVta_0 ; "transport->vtable->finalize	!= NULL"
		mov	eax, [ebx+4]
		mov	ecx, [eax]
		test	ecx, ecx
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		mov	[esp+2Ch+arg_0], ebx
		mov	eax, [eax]
		add	esp, 28h
		pop	ebx
		jmp	eax
sub_67DF3240	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3320	proc near		; CODE XREF: dbus_connection_get_server_id+B1p

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		xor	eax, eax
		mov	ecx, [esp+0Ch+arg_0]
		movzx	edx, byte ptr [ecx+44h]
		test	dl, 10h
		jnz	short loc_67DF333A
		and	edx, 2
		jnz	short loc_67DF3340
		mov	eax, [ecx+28h]

loc_67DF333A:				; CODE XREF: sub_67DF3320+10j
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF3340:				; CODE XREF: sub_67DF3320+15j
		mov	eax, [ecx+10h]
		mov	[esp+0Ch+arg_0], eax
		add	esp, 0Ch
		jmp	sub_67DC24C0
sub_67DF3320	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	eax, [eax+10h]
		mov	[esp+10h], eax
		add	esp, 0Ch
		jmp	sub_67DC2240
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3370	proc near		; CODE XREF: dbus_connection_get_is_anonymous+B1p

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, 1
		mov	edx, [esp+1Ch+arg_0]
		test	byte ptr [edx+44h], 2
		jz	short loc_67DF339D
		mov	eax, [edx+10h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DC2530
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DD5640
		test	eax, eax
		setnz	al
		movzx	eax, al

loc_67DF339D:				; CODE XREF: sub_67DF3370+10j
		add	esp, 1Ch
		retn
sub_67DF3370	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DF33B0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF33B0	proc near		; CODE XREF: sub_67DD4800+18Ep
					; .text:67DF33A1j ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= byte ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebp, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_28], 0
		mov	edi, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_30], 0
		mov	[esp+5Ch+var_2C], 0
		test	ebp, ebp
		mov	[esp+5Ch+var_24], 0
		mov	byte ptr [esp+5Ch+var_28], 1
		jz	loc_67DF35B0
		mov	[esp+5Ch+var_5C], ebp
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DF35B0

loc_67DF33FE:				; CODE XREF: sub_67DF33B0+205j
		mov	[esp+5Ch+var_5C], edx
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 174h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_15 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+5Ch+var_20], 0
		mov	[esp+5Ch+var_58], offset aGuid_1 ; "guid"
		mov	[esp+5Ch+var_5C], edi
		call	dbus_address_entry_get_value
		mov	ebx, eax
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	sub_67DFAA60
		test	eax, eax
		mov	esi, eax
		jz	loc_67DF37C0

loc_67DF3452:				; CODE XREF: sub_67DF33B0+412j
		lea	ebx, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 184h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aTmp_errorNul_3 ; "(&tmp_error) == NULL || !dbus_error_is_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_54], ebx
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], edi
		call	ds:off_67E27DE0
		cmp	eax, 1
		jz	loc_67DF3682
		jb	loc_67DF3730
		cmp	eax, 2
		jz	loc_67DF3665
		cmp	eax, 3
		xchg	ax, ax
		jz	loc_67DF35D2

loc_67DF34C6:				; CODE XREF: sub_67DF33B0+3B8j
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 184h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aTmp_errorNul_3 ; "(&tmp_error) == NULL || !dbus_error_is_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_54], ebx
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], edi
		call	ds:off_67E27DE4
		cmp	eax, 1
		jz	loc_67DF3682
		jb	loc_67DF3770
		cmp	eax, 2
		jz	loc_67DF3665
		cmp	eax, 3
		xchg	ax, ax
		jz	loc_67DF35D2

loc_67DF3536:				; CODE XREF: sub_67DF33B0+3F8j
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 184h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aTmp_errorNul_3 ; "(&tmp_error) == NULL || !dbus_error_is_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_54], ebx
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], edi
		call	ds:off_67E27DE8
		cmp	eax, 1
		jz	loc_67DF3682
		jnb	short loc_67DF35C0
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 18Eh
		jmp	loc_67DF369A
; ---------------------------------------------------------------------------
		align 10h

loc_67DF35B0:				; CODE XREF: sub_67DF33B0+36j
					; sub_67DF33B0+48j
		mov	edx, 1
		jmp	loc_67DF33FE
; ---------------------------------------------------------------------------
		align 10h

loc_67DF35C0:				; CODE XREF: sub_67DF33B0+1DCj
		cmp	eax, 2
		jz	loc_67DF3665
		cmp	eax, 3
		lea	esi, [esi+0]
		jnz	short loc_67DF360A

loc_67DF35D2:				; CODE XREF: sub_67DF33B0+110j
					; sub_67DF33B0+180j
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 196h

loc_67DF35EA:				; CODE XREF: sub_67DF33B0+2CDj
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aTmp_errorNul_4 ; "(&tmp_error) == NULL || dbus_error_is_s"...
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70

loc_67DF360A:				; CODE XREF: sub_67DF33B0+220j
		mov	edi, [esp+5Ch+var_20]
		test	edi, edi
		jz	loc_67DF36C6

loc_67DF3616:				; CODE XREF: sub_67DF33B0+310j
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 1ABh
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aTmp_errorNul_3 ; "(&tmp_error) == NULL || !dbus_error_is_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		test	esi, esi
		jz	loc_67DF37B0
		mov	eax, [esp+5Ch+var_20]
		mov	[eax+28h], esi

loc_67DF365D:				; CODE XREF: sub_67DF33B0+433j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF3665:				; CODE XREF: sub_67DF33B0+105j
					; sub_67DF33B0+175j ...
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 192h
		jmp	loc_67DF35EA
; ---------------------------------------------------------------------------

loc_67DF3682:				; CODE XREF: sub_67DF33B0+F6j
					; sub_67DF33B0+166j ...
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 18Ah

loc_67DF369A:				; CODE XREF: sub_67DF33B0+1F6j
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aTmp_errorNul_3 ; "(&tmp_error) == NULL || !dbus_error_is_"...
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	edi, [esp+5Ch+var_20]
		test	edi, edi
		jnz	loc_67DF3616

loc_67DF36C6:				; CODE XREF: sub_67DF33B0+260j
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		test	eax, eax
		jz	loc_67DF37E8

loc_67DF36D6:				; CODE XREF: sub_67DF33B0+458j
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 1A5h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aTmp_errorNul_4 ; "(&tmp_error) == NULL || dbus_error_is_s"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_58], ebp
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_move_error
		mov	[esp+5Ch+var_5C], esi
		call	dbus_free
		mov	eax, [esp+5Ch+var_20]
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF3730:				; CODE XREF: sub_67DF33B0+FCj
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 18Eh
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aTmp_errorNul_3 ; "(&tmp_error) == NULL || !dbus_error_is_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		jmp	loc_67DF34C6
; ---------------------------------------------------------------------------
		align 10h

loc_67DF3770:				; CODE XREF: sub_67DF33B0+16Cj
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_3 ; "_dbus_transport_open"
		mov	dword ptr [esp+5Ch+var_50], 18Eh
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aTmp_errorNul_3 ; "(&tmp_error) == NULL || !dbus_error_is_"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		jmp	loc_67DF3536
; ---------------------------------------------------------------------------
		align 10h

loc_67DF37B0:				; CODE XREF: sub_67DF33B0+2A0j
		mov	eax, [esp+5Ch+var_20]
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF37C0:				; CODE XREF: sub_67DF33B0+9Cj
		test	ebx, ebx
		jz	loc_67DF3452
		mov	eax, off_67E19010
		mov	[esp+5Ch+var_58], offset aOrg_freedes_39 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+5Ch+var_5C], ebp
		mov	[esp+5Ch+var_54], eax
		call	dbus_set_error_const
		xor	eax, eax
		jmp	loc_67DF365D
; ---------------------------------------------------------------------------

loc_67DF37E8:				; CODE XREF: sub_67DF33B0+320j
		mov	dword ptr [esp+5Ch+var_50], offset aUnknownAddre_0 ; "Unknown address type (examples of	valid"...
		mov	[esp+5Ch+var_54], 0 ; char *
		mov	[esp+5Ch+var_58], 0 ; char *
		mov	[esp+5Ch+var_5C], ebx ;	int
		call	sub_67DC14A0
		jmp	loc_67DF36D6
sub_67DF33B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3810	proc near		; CODE XREF: sub_67DF33B0+1CDp
					; DATA XREF: .rdata:off_67E27DE8o

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= byte ptr -50h
var_4C		= dword	ptr -4Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 5Ch
		mov	[esp+5Ch+var_4], ebp
		mov	ebp, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_C], esi
		mov	[esp+5Ch+var_8], edi
		mov	edi, offset aAutolaunch	; "autolaunch"
		mov	[esp+5Ch+var_5C], ebp
		call	dbus_address_entry_get_method
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_4 ; "_dbus_transport_open_autolaunch"
		mov	dword ptr [esp+5Ch+var_50], 13Bh
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aMethodNull_0 ; "method != NULL"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	ecx, 0Bh
		repe cmpsb
		jz	short loc_67DF38C7
		test	ebx, ebx
		jz	short loc_67DF3884
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DF3889

loc_67DF3884:				; CODE XREF: sub_67DF3810+64j
		mov	edx, 1

loc_67DF3889:				; CODE XREF: sub_67DF3810+72j
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_4 ; "_dbus_transport_open_autolaunch"
		mov	dword ptr [esp+5Ch+var_50], 150h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_15 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+5Ch+var_5C], edx
		call	sub_67DFAE70
		xor	eax, eax

loc_67DF38B3:				; CODE XREF: sub_67DF3810+1D1j
					; sub_67DF3810+380j
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_67DF38C7:				; CODE XREF: sub_67DF3810+60j
		mov	[esp+5Ch+var_58], offset aScope	; "scope"
		mov	[esp+5Ch+var_5C], ebp
		call	dbus_address_entry_get_value
		test	ebx, ebx
		mov	esi, eax
		jz	loc_67DF39E6
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DF39E6

loc_67DF38F3:				; CODE XREF: sub_67DF3810+1DBj
		lea	edi, [esp+5Ch+var_38]
		mov	[esp+5Ch+var_5C], edx
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_5 ; "_dbus_transport_new_for_autolaunch"
		mov	dword ptr [esp+5Ch+var_50], 11Ah ; char
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_15 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DF3BA7
		mov	[esp+5Ch+var_54], ebx ;	int
		mov	[esp+5Ch+var_58], edi ;	int
		mov	[esp+5Ch+var_5C], esi ;	char *
		call	sub_67E0FCC0
		test	eax, eax
		jnz	loc_67DF39F0
		test	ebx, ebx
		jz	short loc_67DF395B
		mov	[esp+5Ch+var_5C], ebx
		xchg	ax, ax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DF3960

loc_67DF395B:				; CODE XREF: sub_67DF3810+139j
		mov	edx, 1

loc_67DF3960:				; CODE XREF: sub_67DF3810+149j
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_5 ; "_dbus_transport_new_for_autolaunch"
		mov	dword ptr [esp+5Ch+var_50], 124h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_16 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+5Ch+var_5C], edx
		call	sub_67DFAE70

loc_67DF3988:				; CODE XREF: sub_67DF3810+2A8j
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E02BF0
		mov	eax, [esp+5Ch+arg_4]
		mov	dword ptr [eax], 0

loc_67DF399A:				; CODE XREF: sub_67DF3810+3B9j
		test	ebx, ebx
		jz	loc_67DF3B95
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67DF3B95

loc_67DF39B4:				; CODE XREF: sub_67DF3810+38Aj
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_4 ; "_dbus_transport_open_autolaunch"
		mov	dword ptr [esp+5Ch+var_50], 145h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_16 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+5Ch+var_5C], edx
		call	sub_67DFAE70
		mov	eax, 3
		jmp	loc_67DF38B3
; ---------------------------------------------------------------------------

loc_67DF39E6:				; CODE XREF: sub_67DF3810+CBj
					; sub_67DF3810+DDj
		mov	edx, 1
		jmp	loc_67DF38F3
; ---------------------------------------------------------------------------

loc_67DF39F0:				; CODE XREF: sub_67DF3810+131j
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E01770
		mov	[esp+5Ch+var_4C], offset aCheck_address	; "check_address"
		mov	dword ptr [esp+5Ch+var_50], 0FCh
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aAddressNull_1	; "address != NULL"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset aCheck_address	; "check_address"
		mov	dword ptr [esp+5Ch+var_50], 0FDh
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aAddress0 ; "*address != '\\0'"
		cmp	byte ptr [esi],	0
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		lea	eax, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_54], eax ;	int
		lea	eax, [esp+5Ch+var_20]
		mov	dword ptr [esp+5Ch+var_50], ebx	; int
		mov	[esp+5Ch+var_58], eax ;	int
		mov	[esp+5Ch+var_5C], esi ;	char *
		call	dbus_parse_address
		test	eax, eax
		jnz	short loc_67DF3AC0

loc_67DF3A79:				; CODE XREF: sub_67DF3810+3CCj
		test	ebx, ebx
		jz	short loc_67DF3A8B
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DF3A90

loc_67DF3A8B:				; CODE XREF: sub_67DF3810+26Bj
		mov	edx, 1

loc_67DF3A90:				; CODE XREF: sub_67DF3810+279j
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_5 ; "_dbus_transport_new_for_autolaunch"
		mov	dword ptr [esp+5Ch+var_50], 12Ah
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_16 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+5Ch+var_5C], edx
		call	sub_67DFAE70
		jmp	loc_67DF3988
; ---------------------------------------------------------------------------
		align 10h

loc_67DF3AC0:				; CODE XREF: sub_67DF3810+267j
		mov	ebp, [esp+5Ch+var_24]
		test	ebp, ebp
		jle	loc_67DF3BD0
		xor	esi, esi
		xchg	ax, ax
		jmp	short loc_67DF3ADF
; ---------------------------------------------------------------------------

loc_67DF3AD2:				; CODE XREF: sub_67DF3810+2E6j
		add	esi, 1
		cmp	esi, [esp+5Ch+var_24]
		jge	loc_67DF3BD0

loc_67DF3ADF:				; CODE XREF: sub_67DF3810+2C0j
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], ebx
		mov	eax, [eax+esi*4]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF33B0
		test	eax, eax
		mov	ebp, eax
		jz	short loc_67DF3AD2
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_address_entries_free
		test	ebx, ebx
		jz	short loc_67DF3B16
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DF3B1B

loc_67DF3B16:				; CODE XREF: sub_67DF3810+2F6j
		mov	edx, 1

loc_67DF3B1B:				; CODE XREF: sub_67DF3810+304j
		mov	[esp+5Ch+var_5C], edx
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_5 ; "_dbus_transport_new_for_autolaunch"
		mov	dword ptr [esp+5Ch+var_50], 12Ch
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_15 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], edi
		call	sub_67E02BF0
		mov	eax, [esp+5Ch+arg_4]
		test	ebx, ebx
		mov	[eax], ebp
		jz	short loc_67DF3BA0
		mov	[esp+5Ch+var_5C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DF3BA0

loc_67DF3B63:				; CODE XREF: sub_67DF3810+395j
		mov	[esp+5Ch+var_4C], offset a_dbus_transp_4 ; "_dbus_transport_open_autolaunch"
		mov	dword ptr [esp+5Ch+var_50], 14Ah
		mov	[esp+5Ch+var_54], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aErrorNullDb_15 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+5Ch+var_5C], edx
		call	sub_67DFAE70
		mov	eax, 1
		jmp	loc_67DF38B3
; ---------------------------------------------------------------------------

loc_67DF3B95:				; CODE XREF: sub_67DF3810+18Cj
					; sub_67DF3810+19Ej
		mov	edx, 1
		jmp	loc_67DF39B4
; ---------------------------------------------------------------------------
		align 10h

loc_67DF3BA0:				; CODE XREF: sub_67DF3810+343j
					; sub_67DF3810+351j
		mov	edx, 1
		jmp	short loc_67DF3B63
; ---------------------------------------------------------------------------

loc_67DF3BA7:				; CODE XREF: sub_67DF3810+119j
		mov	[esp+5Ch+var_54], 0 ; char *
		mov	[esp+5Ch+var_58], offset aOrg_freedes_39 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+5Ch+var_5C], ebx ;	int
		call	dbus_set_error
		mov	eax, [esp+5Ch+arg_4]
		mov	dword ptr [eax], 0
		jmp	loc_67DF399A
; ---------------------------------------------------------------------------
		align 10h

loc_67DF3BD0:				; CODE XREF: sub_67DF3810+2B6j
					; sub_67DF3810+2C9j
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_address_entries_free
		jmp	loc_67DF3A79
sub_67DF3810	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DF3BF0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3BF0	proc near		; CODE XREF: .text:67DF3BE1j
					; sub_67DF5480+E2p ...

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
Format		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_40		= dword	ptr -40h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebx, [esp+6Ch+arg_0]
		mov	esi, [esp+6Ch+arg_8]
		call	sub_67DE0DF0
		mov	ebp, eax
		xor	eax, eax
		test	ebp, ebp
		jz	loc_67DF3D92
		test	esi, esi
		jz	loc_67DF3DA0
		mov	[esp+6Ch+var_6C], esi
		call	sub_67DC4580
		mov	[esp+6Ch+var_30], eax

loc_67DF3C24:				; CODE XREF: sub_67DF3BF0+1B9j
		mov	eax, [esp+6Ch+var_30]
		test	eax, eax
		jz	loc_67DF3DD0
		call	sub_67DEB740
		test	eax, eax
		mov	edi, eax
		jz	loc_67DF3E45
		call	sub_67DD5AE0
		test	eax, eax
		mov	edx, eax
		jz	loc_67DF3E60
		test	esi, esi
		jz	loc_67DF3DE2
		xor	eax, eax
		cmp	[esp+6Ch+arg_C], 0
		mov	[esp+6Ch+var_34], edx
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_trans_13 ; "_dbus_transport_init_base"
		setz	al
		mov	[esp+6Ch+Format], 8Fh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aAddressNull_2	; "address == NULL"
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	edx, [esp+6Ch+var_34]
		mov	[esp+6Ch+var_20], 0
		mov	[esp+6Ch+var_40], 0

loc_67DF3CA0:				; CODE XREF: sub_67DF3BF0+250j
		mov	ecx, [esp+6Ch+arg_4]
		test	esi, esi
		setnz	al
		mov	esi, eax
		shl	eax, 4
		mov	[ebx+4], ecx
		mov	ecx, [esp+6Ch+var_30]
		shl	esi, 3
		mov	[ebx+0Ch], ebp
		mov	ebp, eax
		mov	[ebx+14h], edx
		mov	dword ptr [ebx], 1
		mov	[ebx+10h], ecx
		movzx	ecx, byte ptr [ebx+44h]
		mov	[ebx+20h], edi
		mov	dword ptr [ebx+2Ch], 0
		mov	dword ptr [ebx+30h], 0
		and	ecx, 0FFFFFFECh
		or	ecx, ebp
		mov	eax, ecx
		and	ecx, 0FFFFFFF0h
		shr	al, 4
		mov	ebp, eax
		xor	ebp, 1
		and	ebp, 1
		shl	ebp, 2
		or	ecx, ebp
		or	ecx, esi
		mov	[ebx+44h], cl
		mov	ecx, [esp+6Ch+var_40]
		mov	dword ptr [ebx+34h], 0
		mov	dword ptr [ebx+38h], 0
		mov	dword ptr [ebx+3Ch], 0
		mov	[ebx+24h], ecx
		mov	dword ptr [ebx+40h], 0
		mov	dword ptr [ebx+28h], 0
		mov	dword ptr [ebx+18h], 3F00000h
		mov	dword ptr [ebx+1Ch], 1000h
		mov	dword ptr [esp+6Ch+var_5C], ebx
		mov	[esp+6Ch+Format], offset sub_67DF3E90
		mov	[esp+6Ch+var_64], 1000h
		mov	[esp+6Ch+var_68], 3F00000h
		mov	[esp+6Ch+var_6C], edi
		call	sub_67DEB660
		mov	edx, [ebx+24h]
		mov	eax, 1
		test	edx, edx
		jz	short loc_67DF3D92
		mov	dword ptr [esp+6Ch+var_5C], edx	; char
		mov	[esp+6Ch+Format], offset aInitializedTra ; "Initialized	transport on address %s\n"
		mov	[esp+6Ch+var_64], offset a_dbus_trans_13 ; "_dbus_transport_init_base"
		mov	[esp+6Ch+var_68], 0C9h ; int
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1

loc_67DF3D92:				; CODE XREF: sub_67DF3BF0+1Aj
					; sub_67DF3BF0+173j ...
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF3DA0:				; CODE XREF: sub_67DF3BF0+22j
		call	sub_67DC5BB0
		mov	[esp+6Ch+var_30], eax
		jmp	loc_67DF3C24
; ---------------------------------------------------------------------------
		align 10h

loc_67DF3DB0:				; CODE XREF: sub_67DF3BF0+242j
		mov	[esp+6Ch+var_6C], edx
		call	sub_67DD5A30
		mov	[esp+6Ch+var_6C], edi
		call	sub_67DEB6E0
		mov	ecx, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_6C], ecx
		call	sub_67DC59A0
		lea	esi, [esi+0]

loc_67DF3DD0:				; CODE XREF: sub_67DF3BF0+3Aj
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67DE1950
		add	esp, 5Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF3DE2:				; CODE XREF: sub_67DF3BF0+60j
		xor	eax, eax
		cmp	[esp+6Ch+arg_C], 0
		mov	[esp+6Ch+var_34], edx
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_trans_13 ; "_dbus_transport_init_base"
		setnz	al
		mov	[esp+6Ch+var_6C], eax
		mov	[esp+6Ch+Format], 94h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aAddressNull_1	; "address != NULL"
		call	sub_67DFAE70
		lea	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_68], eax
		mov	eax, [esp+6Ch+arg_C]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67E02A10
		mov	edx, [esp+6Ch+var_34]
		test	eax, eax
		jz	loc_67DF3DB0
		mov	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_40], eax
		jmp	loc_67DF3CA0
; ---------------------------------------------------------------------------

loc_67DF3E45:				; CODE XREF: sub_67DF3BF0+49j
		mov	eax, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DC59A0
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67DE1950
		xor	eax, eax
		jmp	loc_67DF3D92
; ---------------------------------------------------------------------------

loc_67DF3E60:				; CODE XREF: sub_67DF3BF0+58j
		mov	[esp+6Ch+var_6C], edi
		call	sub_67DEB6E0
		mov	ecx, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_6C], ecx
		call	sub_67DC59A0
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67DE1950
		xor	eax, eax
		jmp	loc_67DF3D92
sub_67DF3BF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3E90	proc near		; DATA XREF: sub_67DF3050+12o
					; sub_67DF3090+12o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_0 ; "_dbus_transport_ref"
		mov	[esp+2Ch+Format], 1CAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportRefco ; "transport->refcount	> 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		add	dword ptr [ebx], 1
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_67DF3EDA
		mov	[esp+2Ch+var_2C], ebx
		call	eax

loc_67DF3EDA:				; CODE XREF: sub_67DF3E90+43j
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1DBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportNull	; "transport !=	NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1DCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportRefco ; "transport->refcount	> 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DF3F46
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF3F46:				; CODE XREF: sub_67DF3E90+AFj
		mov	[esp+2Ch+Format], offset aFinalizing ; "finalizing\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+var_28], 1E1h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1E3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportVta_0 ; "transport->vtable->finalize	!= NULL"
		mov	eax, [ebx+4]
		mov	edx, [eax]
		test	edx, edx
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		mov	[esp+2Ch+arg_0], ebx
		mov	eax, [eax]
		add	esp, 28h
		pop	ebx
		jmp	eax
sub_67DF3E90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF3FB0	proc near		; CODE XREF: sub_67DCCE40+248p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_6 ; "_dbus_transport_set_connection"
		mov	[esp+2Ch+Format], 387h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportVta_1 ; "transport->vtable->connection_set != NU"...
		mov	eax, [ebx+4]
		mov	eax, [eax+0Ch]
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_6 ; "_dbus_transport_set_connection"
		mov	[esp+2Ch+Format], 388h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportConne ; "transport->connection == NULL"
		cmp	dword ptr [ebx+8], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_4]
		mov	[ebx+8], eax
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_0 ; "_dbus_transport_ref"
		mov	[esp+2Ch+Format], 1CAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportRefco ; "transport->refcount	> 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		add	dword ptr [ebx], 1
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+0Ch]
		test	eax, eax
		jnz	short loc_67DF406D
		mov	dword ptr [ebx+8], 0

loc_67DF406D:				; CODE XREF: sub_67DF3FB0+B4j
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1DBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportNull	; "transport !=	NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1DCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportRefco ; "transport->refcount	> 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jnz	short loc_67DF4135
		mov	[esp+2Ch+Format], offset aFinalizing ; "finalizing\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+var_28], 1E1h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1E3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportVta_0 ; "transport->vtable->finalize	!= NULL"
		mov	eax, [ebx+4]
		mov	ecx, [eax]
		test	ecx, ecx
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax]

loc_67DF4135:				; CODE XREF: sub_67DF3FB0+122j
		xor	eax, eax
		cmp	dword ptr [ebx+8], 0
		setnz	al
		add	esp, 28h
		pop	ebx
		retn
sub_67DF3FB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF4150	proc near		; CODE XREF: dbus_connection_get_is_authenticated+B1p
					; dbus_connection_get_windows_user+ECp	...

Str1		= dword	ptr -4Ch
Str2		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 4Ch
		mov	eax, 1
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_8], edi
		mov	[esp+4Ch+var_4], ebp
		movzx	edx, byte ptr [ebx+44h]
		test	dl, 2
		jnz	short loc_67DF417C
		xor	al, al
		and	edx, 1
		jz	short loc_67DF4190

loc_67DF417C:				; CODE XREF: sub_67DF4150+23j
					; sub_67DF4150+75j ...
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_67DF4190:				; CODE XREF: sub_67DF4150+2Aj
		mov	eax, [ebx+8]
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DCB080
		movzx	ecx, byte ptr [ebx+44h]
		test	cl, 0Ch
		jz	short loc_67DF41C7

loc_67DF41A4:				; CODE XREF: sub_67DF4150+8Bj
					; sub_67DF4150+1E7j ...
		xor	edx, edx
		xor	eax, eax

loc_67DF41A8:				; CODE XREF: sub_67DF4150+1FAj
		add	edx, edx
		and	ecx, 0FFFFFFFDh
		or	ecx, edx
		mov	edx, [ebx+8]
		mov	[ebx+44h], cl
		mov	[esp+4Ch+var_28], eax
		mov	[esp+4Ch+Str1],	edx
		call	sub_67DCDF20
		mov	eax, [esp+4Ch+var_28]
		jmp	short loc_67DF417C
; ---------------------------------------------------------------------------

loc_67DF41C7:				; CODE XREF: sub_67DF4150+52j
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DC4660
		cmp	eax, 4
		jz	short loc_67DF41E0

loc_67DF41D7:				; CODE XREF: sub_67DF4150+159j
					; sub_67DF4150+4B1j ...
		movzx	ecx, byte ptr [ebx+44h]
		jmp	short loc_67DF41A4
; ---------------------------------------------------------------------------
		align 10h

loc_67DF41E0:				; CODE XREF: sub_67DF4150+85j
		test	byte ptr [ebx+44h], 10h
		jz	loc_67DF434F

loc_67DF41EA:				; CODE XREF: sub_67DF4150+260j
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DC2530
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_transp_7 ; "_dbus_transport_get_is_authenticated"
		mov	[esp+4Ch+Format], 2F3h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Str2],	offset aAuth_identityN ; "auth_identity	!= NULL"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DFAE70
		mov	edi, [ebx+2Ch]
		test	edi, edi
		jz	short loc_67DF4245
		mov	[esp+4Ch+Str2],	1
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD5860
		test	eax, eax
		jnz	loc_67DF43FD

loc_67DF4245:				; CODE XREF: sub_67DF4150+DBj
		mov	ecx, [ebx+38h]
		test	ecx, ecx
		jz	short loc_67DF4264
		mov	[esp+4Ch+Str2],	3
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD5860
		test	eax, eax
		jnz	loc_67DF45A0

loc_67DF4264:				; CODE XREF: sub_67DF4150+FAj
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DC2530
		mov	dword ptr [esp+4Ch+var_3C], offset aAuth_via_defau ; "auth_via_default_rules"
		mov	[esp+4Ch+Format], 277h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Str2],	offset aAuth_identityN ; "auth_identity	!= NULL"
		mov	edi, eax
		xor	eax, eax
		test	edi, edi
		setnz	al
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DFAE70
		call	sub_67DD5B20
		test	eax, eax
		mov	esi, eax
		jz	loc_67DF41D7
		test	byte ptr [ebx+44h], 40h
		jnz	short loc_67DF42C6
		mov	[esp+4Ch+Str1],	edi
		call	sub_67DD55D0
		test	eax, eax
		nop
		jnz	loc_67DF47CA

loc_67DF42C6:				; CODE XREF: sub_67DF4150+163j
					; sub_67DF4150+688j
		mov	[esp+4Ch+Str2],	3
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD5860
		test	eax, eax
		jz	loc_67DF43B5
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD55E0
		mov	[esp+4Ch+Str1],	edi
		mov	ebp, eax
		call	sub_67DD55E0
		mov	[esp+4Ch+var_38], ebp
		mov	[esp+4Ch+Format], offset aClientAuthoriz ; "Client authorized as SID '%s'matching o"...
		mov	[esp+4Ch+var_44], offset aAuth_via_defau ; "auth_via_default_rules"
		mov	[esp+4Ch+Str2],	28Dh ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		mov	edx, 1

loc_67DF4321:				; CODE XREF: sub_67DF4150+2A8j
					; sub_67DF4150+712j
		mov	[esp+4Ch+var_28], edx
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD5A30
		movzx	ecx, byte ptr [ebx+44h]
		mov	edx, [esp+4Ch+var_28]

loc_67DF4335:				; CODE XREF: sub_67DF4150+675j
					; sub_67DF4150+747j
		test	edx, edx
		jz	loc_67DF41A4
		lea	esi, [esi+0]

loc_67DF4340:				; CODE XREF: sub_67DF4150+25Dj
		mov	edx, 1
		mov	eax, 1
		jmp	loc_67DF41A8
; ---------------------------------------------------------------------------

loc_67DF434F:				; CODE XREF: sub_67DF4150+94j
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DC24C0
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_transp_7 ; "_dbus_transport_get_is_authenticated"
		mov	[esp+4Ch+Format], 2DEh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Str2],	offset aServer_guidNul ; "server_guid != NULL"
		mov	edi, eax
		xor	eax, eax
		test	edi, edi
		setnz	al
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DFAE70
		mov	esi, [ebx+28h]
		test	esi, esi
		jz	short loc_67DF43A6
		mov	[esp+4Ch+Str2],	edi ; Str2
		mov	[esp+4Ch+Str1],	esi ; Str1
		call	strcmp
		test	eax, eax
		jnz	loc_67DF474F

loc_67DF43A6:				; CODE XREF: sub_67DF4150+240j
		movzx	ecx, byte ptr [ebx+44h]
		test	cl, 10h
		jz	short loc_67DF4340
		nop
		jmp	loc_67DF41EA
; ---------------------------------------------------------------------------

loc_67DF43B5:				; CODE XREF: sub_67DF4150+188j
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD55D0
		mov	[esp+4Ch+Str1],	edi
		mov	ebp, eax
		call	sub_67DD55D0
		mov	[esp+4Ch+var_38], ebp
		mov	[esp+4Ch+Format], offset aClientAuthor_0 ; "Client authorized as UID %lu matching o"...
		mov	[esp+4Ch+var_44], offset aAuth_via_defau ; "auth_via_default_rules"
		mov	[esp+4Ch+Str2],	292h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		mov	edx, 1
		jmp	loc_67DF4321
; ---------------------------------------------------------------------------

loc_67DF43FD:				; CODE XREF: sub_67DF4150+EFj
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DC2530
		mov	dword ptr [esp+4Ch+var_3C], offset aAuth_via_unix_ ; "auth_via_unix_user_function"
		mov	[esp+4Ch+Format], 21Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Str2],	offset aAuth_identityN ; "auth_identity	!= NULL"
		mov	edi, eax
		xor	eax, eax
		test	edi, edi
		setnz	al
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DFAE70
		mov	edx, [ebx+30h]
		mov	eax, [ebx+2Ch]
		mov	esi, [ebx+8]
		mov	[esp+4Ch+Str1],	edi
		mov	[esp+4Ch+var_28], edx
		mov	[esp+4Ch+var_24], eax
		call	sub_67DD55D0
		mov	[esp+4Ch+Format], offset aUnlock_1 ; "unlock\n"
		mov	[esp+4Ch+var_44], offset aAuth_via_unix_ ; "auth_via_unix_user_function"
		mov	[esp+4Ch+Str2],	224h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	ebp, eax
		call	sub_67DFABC0
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DC8C10
		mov	edx, [esp+4Ch+var_28]
		mov	[esp+4Ch+Str2],	ebp
		mov	[esp+4Ch+Str1],	esi
		mov	[esp+4Ch+var_44], edx
		call	[esp+4Ch+var_24]
		mov	[esp+4Ch+Format], offset aLockPostUnixUs ; "lock post unix user	function\n"
		mov	[esp+4Ch+var_44], offset aAuth_via_unix_ ; "auth_via_unix_user_function"
		mov	[esp+4Ch+Str2],	22Bh ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_28], eax
		call	sub_67DFABC0
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DC83D0
		mov	edx, [esp+4Ch+var_28]
		test	edx, edx
		jnz	loc_67DF4795
		mov	[esp+4Ch+Str1],	edi
		call	sub_67DD55D0
		mov	[esp+4Ch+Format], offset aClientUidLuWas ; "Client UID %lu was rejected, disconnect"...
		mov	[esp+4Ch+var_44], offset aAuth_via_unix_ ; "auth_via_unix_user_function"
		mov	[esp+4Ch+Str2],	236h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		mov	[esp+4Ch+Format], offset aStart_0 ; "start\n"
		mov	[esp+4Ch+var_44], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+4Ch+Str2],	1F4h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+4Ch+Format], 1F6h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Str2],	offset aTransportVtabl ; "transport->vtable->disconnect	!= NULL"
		mov	eax, [ebx+4]
		mov	esi, [eax+8]
		test	esi, esi
		setnz	al
		movzx	eax, al
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DFAE70
		movzx	ecx, byte ptr [ebx+44h]
		test	cl, 1
		jnz	loc_67DF41A4
		mov	eax, [ebx+4]
		mov	[esp+4Ch+Str1],	ebx
		call	dword ptr [eax+8]
		or	byte ptr [ebx+44h], 1
		mov	[esp+4Ch+Format], offset aEnd_0	; "end\n"
		mov	[esp+4Ch+var_44], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+4Ch+Str2],	1FFh ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		movzx	ecx, byte ptr [ebx+44h]
		jmp	loc_67DF41A4
; ---------------------------------------------------------------------------

loc_67DF45A0:				; CODE XREF: sub_67DF4150+10Ej
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DC2530
		mov	dword ptr [esp+4Ch+var_3C], offset aAuth_via_windo ; "auth_via_windows_user_function"
		mov	[esp+4Ch+Format], 24Ah
		mov	[esp+4Ch+var_44], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Str2],	offset aAuth_identityN ; "auth_identity	!= NULL"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DFAE70
		mov	eax, [ebx+38h]
		mov	edi, [ebx+8]
		mov	[esp+4Ch+var_24], eax
		mov	eax, [ebx+30h]
		mov	[esp+4Ch+Str1],	esi
		mov	[esp+4Ch+var_20], eax
		call	sub_67DD55E0
		mov	[esp+4Ch+Str1],	eax ; char *
		call	sub_67DFAA60
		test	eax, eax
		mov	ebp, eax
		jz	loc_67DF41D7
		mov	[esp+4Ch+Format], offset aUnlock_1 ; "unlock\n"
		mov	[esp+4Ch+var_44], offset aAuth_via_windo ; "auth_via_windows_user_function"
		mov	[esp+4Ch+Str2],	257h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+Str1],	edi
		call	sub_67DC8C10
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+Str2],	ebp
		mov	[esp+4Ch+Str1],	edi
		mov	[esp+4Ch+var_44], eax
		call	[esp+4Ch+var_24]
		mov	[esp+4Ch+Format], offset aLockPostWindow ; "lock post windows user function\n"
		mov	[esp+4Ch+var_44], offset aAuth_via_windo ; "auth_via_windows_user_function"
		mov	[esp+4Ch+Str2],	25Eh ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_28], eax
		call	sub_67DFABC0
		mov	[esp+4Ch+Str1],	edi
		call	sub_67DC83D0
		mov	edx, [esp+4Ch+var_28]
		test	edx, edx
		jnz	loc_67DF4867
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD55E0
		mov	[esp+4Ch+Format], offset aClientSidSWasR ; "Client SID '%s' was rejected, disconnec"...
		mov	[esp+4Ch+var_44], offset aAuth_via_windo ; "auth_via_windows_user_function"
		mov	[esp+4Ch+Str2],	268h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		mov	[esp+4Ch+Format], offset aStart_0 ; "start\n"
		mov	[esp+4Ch+var_44], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+4Ch+Str2],	1F4h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+4Ch+Format], 1F6h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Str2],	offset aTransportVtabl ; "transport->vtable->disconnect	!= NULL"
		mov	eax, [ebx+4]
		mov	edx, [eax+8]
		test	edx, edx
		setnz	al
		movzx	eax, al
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DFAE70
		movzx	ecx, byte ptr [ebx+44h]
		test	cl, 1
		jnz	loc_67DF41A4
		mov	eax, [ebx+4]
		mov	[esp+4Ch+Str1],	ebx
		call	dword ptr [eax+8]
		or	byte ptr [ebx+44h], 1
		mov	[esp+4Ch+Format], offset aEnd_0	; "end\n"
		mov	[esp+4Ch+var_44], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+4Ch+Str2],	1FFh ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DF41D7
; ---------------------------------------------------------------------------

loc_67DF474F:				; CODE XREF: sub_67DF4150+250j
		mov	[esp+4Ch+var_38], edi
		mov	dword ptr [esp+4Ch+var_3C], esi	; char
		mov	[esp+4Ch+Format], offset aClientExpected ; "Client expected GUID '%s' and we got '%"...
		mov	[esp+4Ch+var_44], offset a_dbus_transp_7 ; "_dbus_transport_get_is_authenticated"
		mov	[esp+4Ch+Str2],	2E4h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+Str1],	ebx
		call	sub_67DF31A0
		mov	eax, [ebx+8]
		mov	[esp+4Ch+Str1],	eax
		call	sub_67DCDF20
		xor	eax, eax
		jmp	loc_67DF417C
; ---------------------------------------------------------------------------

loc_67DF4795:				; CODE XREF: sub_67DF4150+379j
		mov	dword ptr [esp+4Ch+var_3C], ebp	; char
		mov	[esp+4Ch+Format], offset aClientUidLuAut ; "Client UID %lu authorized\n"
		mov	[esp+4Ch+var_44], offset aAuth_via_unix_ ; "auth_via_unix_user_function"
		mov	[esp+4Ch+Str2],	230h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		movzx	ecx, byte ptr [ebx+44h]
		mov	edx, [esp+4Ch+var_28]
		jmp	loc_67DF4335
; ---------------------------------------------------------------------------

loc_67DF47CA:				; CODE XREF: sub_67DF4150+170j
		mov	[esp+4Ch+Str2],	edi
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD5720
		test	eax, eax
		jnz	loc_67DF42C6
		mov	[esp+4Ch+Str2],	3
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD5860
		test	eax, eax
		jz	loc_67DF489C
		mov	[esp+4Ch+Str1],	esi
		mov	ebp, offset aNull_1 ; "<null>"
		call	sub_67DD55E0
		test	eax, eax
		jz	short loc_67DF4811
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD55E0
		mov	ebp, eax

loc_67DF4811:				; CODE XREF: sub_67DF4150+6B5j
		mov	[esp+4Ch+Str1],	edi
		call	sub_67DD55E0
		mov	edx, eax
		mov	eax, offset aNull_1 ; "<null>"
		test	edx, edx
		jz	short loc_67DF482C
		mov	[esp+4Ch+Str1],	edi
		call	sub_67DD55E0

loc_67DF482C:				; CODE XREF: sub_67DF4150+6D2j
		mov	[esp+4Ch+var_38], ebp
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		mov	[esp+4Ch+Format], offset aClientAuthor_1 ; "Client authorized as SID '%s' but our S"...
		mov	[esp+4Ch+var_44], offset aAuth_via_defau ; "auth_via_default_rules"
		mov	[esp+4Ch+Str2],	29Eh ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DF4858:				; CODE XREF: sub_67DF4150+78Aj
		mov	[esp+4Ch+Str1],	ebx
		call	sub_67DF31A0
		xor	edx, edx
		jmp	loc_67DF4321
; ---------------------------------------------------------------------------

loc_67DF4867:				; CODE XREF: sub_67DF4150+52Cj
		mov	dword ptr [esp+4Ch+var_3C], ebp	; char
		mov	[esp+4Ch+Format], offset aClientSidSAuth ; "Client SID '%s' authorized\n"
		mov	[esp+4Ch+var_44], offset aAuth_via_windo ; "auth_via_windows_user_function"
		mov	[esp+4Ch+Str2],	263h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		movzx	ecx, byte ptr [ebx+44h]
		mov	edx, [esp+4Ch+var_28]
		jmp	loc_67DF4335
; ---------------------------------------------------------------------------

loc_67DF489C:				; CODE XREF: sub_67DF4150+6A0j
		mov	[esp+4Ch+Str1],	esi
		call	sub_67DD55D0
		mov	[esp+4Ch+Str1],	edi
		mov	ebp, eax
		call	sub_67DD55D0
		mov	[esp+4Ch+var_38], ebp
		mov	[esp+4Ch+Format], offset aClientAuthor_2 ; "Client authorized as UID %lu but our UI"...
		mov	[esp+4Ch+var_44], offset aAuth_via_defau ; "auth_via_default_rules"
		mov	[esp+4Ch+Str2],	2A3h ; int
		mov	[esp+4Ch+Str1],	offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		jmp	loc_67DF4858
sub_67DF4150	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF48E0	proc near		; CODE XREF: sub_67DCE450+89p
					; sub_67DF4C20+9Cp

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_28		= byte ptr -28h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 4Ch
		mov	[esp+4Ch+var_C], ebx
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_8], esi
		mov	[esp+4Ch+var_4], edi
		mov	eax, [ebx+20h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DEB640
		cmp	eax, [ebx+18h]
		jl	short loc_67DF4918

loc_67DF4903:				; CODE XREF: sub_67DF48E0+46j
					; sub_67DF48E0+1C6j
		mov	eax, 1

loc_67DF4908:				; CODE XREF: sub_67DF48E0+B0j
					; sub_67DF48E0+1A1j ...
		mov	ebx, [esp+4Ch+var_C]
		mov	esi, [esp+4Ch+var_8]
		mov	edi, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_67DF4918:				; CODE XREF: sub_67DF48E0+21j
		mov	eax, [ebx+20h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DEB650
		cmp	eax, [ebx+1Ch]
		jge	short loc_67DF4903
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DF4150
		test	eax, eax
		jz	loc_67DF4A86

loc_67DF4938:				; CODE XREF: sub_67DF48E0+1C0j
		movzx	eax, byte ptr [ebx+44h]
		test	al, 20h
		jnz	loc_67DF4A67
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DC21D0
		test	eax, eax
		jz	short loc_67DF4995
		lea	esi, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E03350
		test	eax, eax
		jnz	loc_67DF4B28

loc_67DF4967:				; CODE XREF: sub_67DF48E0+243j
					; sub_67DF48E0+2C0j
		mov	[esp+4Ch+Format], offset aNotEnoughMem_0 ; "Not	enough memory to transfer unused by"...
		mov	[esp+4Ch+var_44], offset aRecover_unused ; "recover_unused_bytes"
		mov	[esp+4Ch+var_48], 42Ah ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 2
		jmp	loc_67DF4908
; ---------------------------------------------------------------------------

loc_67DF4995:				; CODE XREF: sub_67DF48E0+71j
		lea	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DE0660
		mov	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E00CE0
		mov	esi, eax
		lea	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DC2170
		mov	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E00CE0
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+Format], eax
		mov	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_44], eax
		mov	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67DF4AC8
		mov	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E00CE0
		mov	[esp+4Ch+Format], offset aDUnusedBytesSe ; " %d	unused bytes sent to message loader"...
		mov	[esp+4Ch+var_44], offset aRecover_unused ; "recover_unused_bytes"
		mov	[esp+4Ch+var_48], 41Ah ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		sub	eax, esi
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		mov	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E00CE0
		sub	eax, esi
		mov	[esp+4Ch+var_44], eax
		mov	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DE05E0
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DC27B0
		movzx	eax, byte ptr [ebx+44h]

loc_67DF4A67:				; CODE XREF: sub_67DF48E0+5Ej
					; sub_67DF48E0+337j
		or	eax, 20h
		mov	[ebx+44h], al
		mov	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DE5570
		test	eax, eax
		jnz	short loc_67DF4AB0

loc_67DF4A7C:				; CODE XREF: sub_67DF48E0+1B4j
		mov	eax, 2
		jmp	loc_67DF4908
; ---------------------------------------------------------------------------

loc_67DF4A86:				; CODE XREF: sub_67DF48E0+52j
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DC4660
		cmp	eax, 1
		jz	short loc_67DF4A7C
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DF4150
		test	eax, eax
		jnz	loc_67DF4938
		jmp	loc_67DF4903
; ---------------------------------------------------------------------------
		align 10h

loc_67DF4AB0:				; CODE XREF: sub_67DF48E0+19Aj
		mov	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DE03A0
		test	eax, eax
		setz	al
		movzx	eax, al
		jmp	loc_67DF4908
; ---------------------------------------------------------------------------

loc_67DF4AC8:				; CODE XREF: sub_67DF48E0+117j
		mov	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E00CE0
		mov	[esp+4Ch+Format], offset aDUnusedBytesSe ; " %d	unused bytes sent to message loader"...
		mov	[esp+4Ch+var_44], offset aRecover_unused ; "recover_unused_bytes"
		mov	[esp+4Ch+var_48], 41Ah ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		sub	eax, esi
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		mov	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E00CE0
		sub	eax, esi
		mov	[esp+4Ch+var_44], eax
		mov	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DE05E0
		jmp	loc_67DF4967
; ---------------------------------------------------------------------------

loc_67DF4B28:				; CODE XREF: sub_67DF48E0+81j
		lea	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DC2170
		mov	eax, [esp+4Ch+var_14]
		mov	[esp+4Ch+var_44], esi
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DC25D0
		test	eax, eax
		jz	short loc_67DF4B97
		lea	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DE0660
		mov	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E00CE0
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+Format], eax
		mov	edi, eax
		mov	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_44], eax
		call	sub_67E05080
		test	eax, eax
		jnz	short loc_67DF4BA5

loc_67DF4B97:				; CODE XREF: sub_67DF48E0+274j
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E02BF0
		nop
		jmp	loc_67DF4967
; ---------------------------------------------------------------------------

loc_67DF4BA5:				; CODE XREF: sub_67DF48E0+2B5j
		mov	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E00CE0
		mov	[esp+4Ch+Format], offset aDUnusedBytesSe ; " %d	unused bytes sent to message loader"...
		mov	[esp+4Ch+var_44], offset aRecover_unused ; "recover_unused_bytes"
		mov	[esp+4Ch+var_48], 3FAh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		sub	eax, edi
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		mov	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E00CE0
		sub	eax, edi
		mov	[esp+4Ch+var_44], eax
		mov	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DE05E0
		mov	eax, [ebx+10h]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DC27B0
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E02BF0
		movzx	eax, byte ptr [ebx+44h]
		jmp	loc_67DF4A67
sub_67DF48E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF4C20	proc near		; CODE XREF: sub_67DCE450+7Ap
					; sub_67DF5890+20Cp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		jmp	loc_67DF4CB9
; ---------------------------------------------------------------------------
		align 10h

loc_67DF4C30:				; CODE XREF: sub_67DF4C20+A3j
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DE0C50
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_8 ; "_dbus_transport_queue_messages"
		mov	[esp+2Ch+Format], 46Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLinkNull_1 ; "link !=	NULL"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	edi, [esi+8]
		mov	[esp+2Ch+Format], offset aQueueingReceiv ; "queueing received message %p\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_8 ; "_dbus_transport_queue_messages"
		mov	[esp+2Ch+var_28], 470h ; int
		mov	dword ptr [esp+2Ch+var_1C], edi	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+20h]
		mov	[esp+2Ch+var_2C], edi
		mov	[esp+2Ch+var_28], eax
		call	sub_67DE7530
		test	eax, eax
		jz	short loc_67DF4CF0
		mov	[esp+2Ch+var_28], esi
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DCE140

loc_67DF4CB9:				; CODE XREF: sub_67DF4C20+Aj
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DF48E0
		test	eax, eax
		jz	loc_67DF4C30
		cmp	eax, 2
		setnz	al
		movzx	esi, al
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DE0580
		test	eax, eax
		jnz	short loc_67DF4D10

loc_67DF4CE1:				; CODE XREF: sub_67DF4C20+EEj
					; sub_67DF4C20+172j
		add	esp, 20h
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF4CF0:				; CODE XREF: sub_67DF4C20+88j
		mov	[esp+2Ch+var_28], esi
		mov	eax, [ebx+0Ch]
		xor	esi, esi
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DE0C30
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DE0580
		test	eax, eax
		jz	short loc_67DF4CE1

loc_67DF4D10:				; CODE XREF: sub_67DF4C20+BFj
		mov	[esp+2Ch+Format], offset aCorruptedMessa ; "Corrupted message stream, disconnecting"...
		mov	[esp+2Ch+var_24], offset a_dbus_transp_8 ; "_dbus_transport_queue_messages"
		mov	[esp+2Ch+var_28], 483h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+Format], offset aStart_0 ; "start\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+2Ch+var_28], 1F4h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+2Ch+Format], 1F6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportVtabl ; "transport->vtable->disconnect != NULL"
		mov	eax, [ebx+4]
		mov	eax, [eax+8]
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		test	byte ptr [ebx+44h], 1
		jnz	loc_67DF4CE1
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+8]
		or	byte ptr [ebx+44h], 1
		mov	[esp+2Ch+Format], offset aEnd_0	; "end\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+2Ch+var_28], 1FFh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 20h
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DF4C20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF4DE0	proc near		; CODE XREF: sub_67DF6300+4Cp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		test	byte ptr [ebx+44h], 1
		jz	loc_67DF4E90

loc_67DF4DF2:				; CODE XREF: sub_67DF4DE0+10Ej
					; sub_67DF4DE0+145j
		mov	eax, [ebx+34h]
		test	eax, eax
		jz	short loc_67DF4E01
		mov	edx, [ebx+30h]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF4E01:				; CODE XREF: sub_67DF4DE0+17j
		mov	eax, [ebx+40h]
		test	eax, eax
		jz	short loc_67DF4E10
		mov	edx, [ebx+3Ch]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF4E10:				; CODE XREF: sub_67DF4DE0+26j
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DE1950
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DC59A0
		mov	dword ptr [esp+2Ch+var_1C], 0
		mov	[esp+2Ch+Format], 0
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		mov	eax, [ebx+20h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DEB660
		mov	eax, [ebx+20h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DEB6E0
		mov	eax, [ebx+24h]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free
		mov	eax, [ebx+28h]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	loc_67DF4F30
		mov	[esp+2Ch+arg_0], eax
		add	esp, 28h
		pop	ebx
		jmp	sub_67DD5A30
; ---------------------------------------------------------------------------
		align 10h

loc_67DF4E90:				; CODE XREF: sub_67DF4DE0+Cj
		mov	[esp+2Ch+Format], offset aStart_0 ; "start\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+2Ch+var_28], 1F4h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+2Ch+Format], 1F6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportVtabl ; "transport->vtable->disconnect != NULL"
		mov	eax, [ebx+4]
		mov	edx, [eax+8]
		test	edx, edx
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		test	byte ptr [ebx+44h], 1
		jnz	loc_67DF4DF2
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+8]
		or	byte ptr [ebx+44h], 1
		mov	[esp+2Ch+Format], offset aEnd_0	; "end\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_1 ; "_dbus_transport_disconnect"
		mov	[esp+2Ch+var_28], 1FFh ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DF4DF2
; ---------------------------------------------------------------------------
		align 10h

loc_67DF4F30:				; CODE XREF: sub_67DF4DE0+97j
		add	esp, 28h
		pop	ebx
		retn
sub_67DF4DE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF4F40	proc near		; CODE XREF: dbus_connection_get_socket+F0p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	eax, [ebx+4]
		mov	eax, [eax+18h]
		test	eax, eax
		jz	short loc_67DF4F58
		test	byte ptr [ebx+44h], 1
		jz	short loc_67DF4F60

loc_67DF4F58:				; CODE XREF: sub_67DF4F40+10j
		xor	eax, eax

loc_67DF4F5A:				; CODE XREF: sub_67DF4F40+D1j
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF4F60:				; CODE XREF: sub_67DF4F40+16j
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_transp_0 ; "_dbus_transport_ref"
		xor	eax, eax
		mov	[esp+3Ch+Format], 1CAh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTransportRefco ; "transport->refcount	> 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	edx, [esp+3Ch+arg_4]
		mov	eax, [ebx+4]
		add	dword ptr [ebx], 1
		mov	[esp+3Ch+var_38], edx
		mov	[esp+3Ch+var_3C], ebx
		call	dword ptr [eax+18h]
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+3Ch+Format], 1DBh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTransportNull	; "transport !=	NULL"
		mov	[esp+3Ch+var_3C], 1
		mov	[esp+3Ch+var_10], eax
		call	sub_67DFAE70
		xor	edx, edx
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+3Ch+Format], 1DCh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTransportRefco ; "transport->refcount	> 0"
		cmp	dword ptr [ebx], 0
		setnle	dl
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	eax, [esp+3Ch+var_10]
		sub	edx, 1
		test	edx, edx
		mov	[ebx], edx
		jnz	loc_67DF4F5A
		mov	[esp+3Ch+Format], offset aFinalizing ; "finalizing\n"
		mov	[esp+3Ch+var_34], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+3Ch+var_38], 1E1h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+3Ch+Format], 1E3h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTransportVta_0 ; "transport->vtable->finalize	!= NULL"
		mov	edx, [ebx+4]
		mov	ecx, [edx]
		test	ecx, ecx
		setnz	dl
		movzx	edx, dl
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		mov	edx, [ebx+4]
		mov	[esp+3Ch+var_3C], ebx
		call	dword ptr [edx]
		mov	eax, [esp+3Ch+var_10]
		add	esp, 38h
		pop	ebx
		retn
sub_67DF4F40	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DF5090
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF5090	proc near		; CODE XREF: sub_67DD1870+FAp
					; .text:67DF5081j

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_0]
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_trans_15 ; "_dbus_transport_handle_watch"
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+Format], 364h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aTransportVta_3 ; "transport->vtable->handle_watch != NULL"
		mov	eax, [ebx+4]
		mov	ecx, [eax+4]
		test	ecx, ecx
		setnz	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, 1
		test	byte ptr [ebx+44h], 1
		jz	short loc_67DF50E4

loc_67DF50DE:				; CODE XREF: sub_67DF5090+139j
					; sub_67DF5090+1C1j
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DF50E4:				; CODE XREF: sub_67DF5090+4Cj
		mov	[esp+3Ch+var_3C], esi
		call	dbus_watch_get_socket
		test	eax, eax
		js	loc_67DF5240
		lea	eax, [esp+3Ch+arg_8]
		mov	dword ptr [esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], esi
		call	sub_67DF7770
		xor	eax, eax
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_transp_0 ; "_dbus_transport_ref"
		mov	[esp+3Ch+Format], 1CAh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aTransportRefco ; "transport->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		add	dword ptr [ebx], 1
		mov	[esp+3Ch+var_3C], esi
		call	sub_67DF7740
		mov	edx, [esp+3Ch+arg_8]
		mov	eax, [ebx+4]
		mov	dword ptr [esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_34], edx
		call	dword ptr [eax+4]
		mov	[esp+3Ch+var_3C], esi
		mov	[esp+3Ch+var_10], eax
		call	sub_67DF7FF0
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+3Ch+Format], 1DBh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aTransportNull ; "transport != NULL"
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		xor	edx, edx
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+3Ch+Format], 1DCh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aTransportRefco ; "transport->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	dl
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	eax, [esp+3Ch+var_10]
		sub	edx, 1
		test	edx, edx
		mov	[ebx], edx
		jnz	loc_67DF50DE
		mov	[esp+3Ch+Format], offset aFinalizing ; "finalizing\n"
		mov	[esp+3Ch+var_34], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	dword ptr [esp+3Ch+var_38], 1E1h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+3Ch+Format], 1E3h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aTransportVta_0 ; "transport->vtable->finalize != NULL"
		mov	edx, [ebx+4]
		mov	edx, [edx]
		test	edx, edx
		setnz	dl
		movzx	edx, dl
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		mov	edx, [ebx+4]
		mov	[esp+3Ch+var_3C], ebx
		call	dword ptr [edx]
		mov	eax, [esp+3Ch+var_10]
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF5240:				; CODE XREF: sub_67DF5090+5Ej
		mov	[esp+3Ch+var_3C], offset aTriedToHandleA ; "Tried to handle an invalidated watch; t"...
		call	sub_67DFB4E0
		mov	eax, 1
		jmp	loc_67DF50DE
sub_67DF5090	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF5260	proc near		; CODE XREF: sub_67DD0960+1B6p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], esi
		mov	esi, dword ptr [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_8]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_trans_10 ; "_dbus_transport_do_iteration"
		mov	[esp+2Ch+Format], 3C1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportVta_2 ; "transport->vtable->do_iteration != NULL"
		mov	eax, [ebx+4]
		mov	eax, [eax+10h]
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+44h]
		mov	[esp+2Ch+var_18], edi
		mov	dword ptr [esp+2Ch+var_1C], esi	; char
		mov	[esp+2Ch+Format], offset aTransportItera ; "Transport iteration	flags 0x%x timeout "...
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_14], eax
		mov	[esp+2Ch+var_24], offset a_dbus_trans_10 ; "_dbus_transport_do_iteration"
		mov	[esp+2Ch+var_28], 3C4h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		test	esi, 3
		jz	short loc_67DF52F9
		test	byte ptr [ebx+44h], 1
		jz	short loc_67DF5310

loc_67DF52F9:				; CODE XREF: sub_67DF5260+91j
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF5310:				; CODE XREF: sub_67DF5260+97j
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_0 ; "_dbus_transport_ref"
		xor	eax, eax
		mov	[esp+2Ch+Format], 1CAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportRefco ; "transport->refcount	> 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		add	dword ptr [ebx], 1
		mov	[esp+2Ch+var_24], edi
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax+10h]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1DBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportNull	; "transport !=	NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1DCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportRefco ; "transport->refcount	> 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DF53F0

loc_67DF53BB:				; CODE XREF: sub_67DF5260+1F1j
		mov	[esp+2Ch+Format], offset aEnd_0	; "end\n"
		mov	[esp+2Ch+var_24], offset a_dbus_trans_10 ; "_dbus_transport_do_iteration"
		mov	[esp+2Ch+var_28], 3D2h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF53F0:				; CODE XREF: sub_67DF5260+159j
		mov	[esp+2Ch+Format], offset aFinalizing ; "finalizing\n"
		mov	[esp+2Ch+var_24], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+var_28], 1E1h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_transp_2 ; "_dbus_transport_unref"
		mov	[esp+2Ch+Format], 1E3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_19 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTransportVta_0 ; "transport->vtable->finalize	!= NULL"
		mov	eax, [ebx+4]
		mov	esi, [eax]
		test	esi, esi
		setnz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [eax]
		jmp	loc_67DF53BB
sub_67DF5260	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF5460	proc near		; DATA XREF: .rdata:67E2895Co

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [esp+arg_4]
		mov	[eax], edx
		mov	eax, 1
		retn
sub_67DF5460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF5480	proc near		; CODE XREF: sub_67DEE790+1ECp

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	[esp+3Ch+var_3C], 88h ;	size_t
		call	dbus_malloc0
		mov	ebx, eax
		xor	eax, eax
		test	ebx, ebx
		jz	loc_67DF5585
		lea	edi, [ebx+60h]
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DF55C6
		lea	ebp, [ebx+74h]
		mov	[esp+3Ch+var_3C], ebp
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DF55BE
		mov	[esp+3Ch+var_28], 0
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+var_34], 0
		mov	[esp+3Ch+var_38], 2
		mov	[esp+3Ch+var_3C], esi
		call	sub_67DF80C0
		test	eax, eax
		mov	[ebx+50h], eax
		jz	loc_67DF55B6
		mov	[esp+3Ch+var_28], 0
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+var_34], 0
		mov	[esp+3Ch+var_38], 1
		mov	[esp+3Ch+var_3C], esi
		call	sub_67DF80C0
		test	eax, eax
		mov	[ebx+4Ch], eax
		jz	short loc_67DF55AB
		mov	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_38], offset off_67E28944
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_30], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_34], eax
		call	sub_67DF3BF0
		test	eax, eax
		jz	short loc_67DF55A0
		mov	[ebx+48h], esi
		mov	eax, ebx
		mov	dword ptr [ebx+5Ch], 0
		mov	dword ptr [ebx+54h], 800h
		mov	dword ptr [ebx+58h], 800h

loc_67DF5585:				; CODE XREF: sub_67DF5480+29j
					; sub_67DF5480+150j
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF55A0:				; CODE XREF: sub_67DF5480+E9j
		mov	eax, [ebx+4Ch]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF7FF0

loc_67DF55AB:				; CODE XREF: sub_67DF5480+C5j
		mov	eax, [ebx+50h]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF7FF0

loc_67DF55B6:				; CODE XREF: sub_67DF5480+8Aj
		mov	[esp+3Ch+var_3C], ebp
		call	sub_67E02BF0

loc_67DF55BE:				; CODE XREF: sub_67DF5480+4Fj
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E02BF0

loc_67DF55C6:				; CODE XREF: sub_67DF5480+3Cj
		mov	[esp+3Ch+var_3C], ebx
		call	dbus_free
		xor	eax, eax
		jmp	short loc_67DF5585
sub_67DF5480	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF55E0	proc near		; CODE XREF: sub_67DF5730+Aj
					; sub_67DF5890+48p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch

		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 24h
		mov	eax, [eax+48h]
		mov	[esp+2Ch+Format], offset aFdD ;	"fd = %d\n"
		mov	[esp+2Ch+var_24], offset aCheck_read_wat ; "check_read_watch"
		mov	[esp+2Ch+var_28], 0B4h ; int
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+8]
		test	eax, eax
		jz	short loc_67DF568C
		test	byte ptr [ebx+44h], 1
		jnz	short loc_67DF5692
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DF3150
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DF4150
		test	eax, eax
		jnz	loc_67DF56D0
		test	byte ptr [ebx+44h], 8
		jz	loc_67DF56E7

loc_67DF5641:				; CODE XREF: sub_67DF55E0+115j
					; sub_67DF55E0+126j
		mov	esi, 1

loc_67DF5646:				; CODE XREF: sub_67DF55E0+102j
					; sub_67DF55E0+120j ...
		mov	dword ptr [esp+2Ch+var_1C], esi	; char
		mov	[esp+2Ch+Format], offset aSettingReadWat ; "  setting read watch enabled = %d\n"
		mov	[esp+2Ch+var_24], offset aCheck_read_wat ; "check_read_watch"
		mov	[esp+2Ch+var_28], 0E2h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+var_24], esi
		mov	eax, [ebx+4Ch]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DCE390
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DF3240

loc_67DF568C:				; CODE XREF: sub_67DF55E0+37j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DF5692:				; CODE XREF: sub_67DF55E0+3Dj
		mov	dword ptr [esp+2Ch+var_1C], offset aCheck_read_wat ; "check_read_watch"
		xor	eax, eax
		mov	[esp+2Ch+Format], 0BBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSocket_transpo ; "socket_transport->read_watch == NULL"
		cmp	dword ptr [ebx+4Ch], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF56D0:				; CODE XREF: sub_67DF55E0+51j
		mov	eax, [ebx+20h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DEB640
		cmp	eax, [ebx+18h]
		jl	short loc_67DF5710
		xor	esi, esi
		jmp	loc_67DF5646
; ---------------------------------------------------------------------------

loc_67DF56E7:				; CODE XREF: sub_67DF55E0+5Bj
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DC4660
		cmp	eax, 4
		jz	loc_67DF5641
		xor	esi, esi
		cmp	eax, 1
		ja	loc_67DF5646
		jmp	loc_67DF5641
; ---------------------------------------------------------------------------
		align 10h

loc_67DF5710:				; CODE XREF: sub_67DF55E0+FEj
		mov	eax, [ebx+20h]
		mov	esi, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DEB650
		cmp	eax, [ebx+1Ch]
		jl	loc_67DF5646
		xor	esi, esi
		jmp	loc_67DF5646
sub_67DF55E0	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DF5730	proc near		; DATA XREF: .rdata:67E28958o

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		add	esp, 0Ch
		jmp	sub_67DF55E0
sub_67DF5730	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF5740	proc near		; CODE XREF: sub_67DF6110+8Fp
					; sub_67DF6A20+140p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 34h
		mov	edx, [eax+8]
		test	edx, edx
		jz	loc_67DF57ED
		test	byte ptr [eax+44h], 1
		jnz	loc_67DF57F3
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DF3150
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DF4150
		test	eax, eax
		jnz	loc_67DF5830
		test	byte ptr [ebx+44h], 4
		jz	loc_67DF5842

loc_67DF577E:				; CODE XREF: sub_67DF5740+11Bj
		mov	esi, 1

loc_67DF5783:				; CODE XREF: sub_67DF5740+FDj
					; sub_67DF5740+115j
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC82A0
		mov	[esp+3Ch+var_1C], eax
		mov	eax, [ebx+48h]
		mov	[esp+3Ch+var_20], eax
		mov	eax, [ebx+50h]
		mov	[esp+3Ch+var_24], eax
		mov	eax, [ebx+8]
		mov	dword ptr [esp+3Ch+var_2C], esi	; char
		mov	[esp+3Ch+Format], offset aCheck_write_wa ; "check_write_watch(): needed	= %d on	con"...
		mov	[esp+3Ch+var_34], offset aCheck_write__0 ; "check_write_watch"
		mov	[esp+3Ch+var_28], eax
		mov	[esp+3Ch+var_38], 0A5h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+3Ch+var_34], esi
		mov	eax, [ebx+50h]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DCE390
		mov	[esp+3Ch+var_3C], ebx
		call	sub_67DF3240

loc_67DF57ED:				; CODE XREF: sub_67DF5740+Cj
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DF57F3:				; CODE XREF: sub_67DF5740+16j
		mov	dword ptr [esp+3Ch+var_2C], offset aCheck_write__0 ; "check_write_watch"
		xor	eax, eax
		mov	[esp+3Ch+Format], 84h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aSocket_trans_0 ; "socket_transport->write_watch == NULL"
		cmp	dword ptr [ebx+50h], 0
		setz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF5830:				; CODE XREF: sub_67DF5740+2Ej
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC82A0
		mov	esi, eax
		jmp	loc_67DF5783
; ---------------------------------------------------------------------------

loc_67DF5842:				; CODE XREF: sub_67DF5740+38j
		mov	eax, [ebx+10h]
		xor	esi, esi
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DC4660
		sub	eax, 1
		cmp	eax, 1
		ja	loc_67DF5783
		jmp	loc_67DF577E
sub_67DF5740	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DF5860	proc near		; CODE XREF: sub_67DF5890+2E5p
					; sub_67DF5890+3A5p ...

var_1C		= dword	ptr -1Ch

		push	ebx
		mov	ebx, eax
		sub	esp, 18h
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF3150
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67DF31A0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67DF3240
		add	esp, 18h
		pop	ebx
		retn
sub_67DF5860	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF5890	proc near		; CODE XREF: sub_67DF7020+3BAp
					; sub_67DF73F0+1BFp

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= byte ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 4Ch
		mov	eax, [eax+48h]
		mov	[esp+5Ch+Format], offset aFdD ;	"fd = %d\n"
		mov	dword ptr [esp+5Ch+var_54], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+var_58], 2BFh ; int
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67DF4150
		test	eax, eax
		jz	loc_67DF5B81
		mov	eax, ebx
		xor	edi, edi
		call	sub_67DF55E0
		mov	eax, [ebx+54h]
		lea	ebp, [ebx+74h]
		cmp	edi, eax
		jg	loc_67DF5ABD

loc_67DF58EB:				; CODE XREF: sub_67DF5890+227j
		mov	ecx, [ebx+4Ch]
		mov	eax, 1
		test	ecx, ecx
		jz	loc_67DF5B90

loc_67DF58FB:				; CODE XREF: sub_67DF5890+307j
		mov	dword ptr [esp+5Ch+var_4C], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+Format], 2D6h
		mov	dword ptr [esp+5Ch+var_54], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aSocket_trans_1 ; "socket_transport->read_watch != NULL ||"...
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		test	byte ptr [ebx+44h], 1
		jnz	loc_67DF5B81
		mov	eax, [ebx+4Ch]
		mov	[esp+5Ch+var_5C], eax
		call	dbus_watch_get_enabled
		test	eax, eax
		jz	loc_67DF5B81
		mov	eax, [ebx+10h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DC21D0
		test	eax, eax
		jz	loc_67DF5AF3
		mov	eax, [ebx+10h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DC2240
		mov	dword ptr [esp+5Ch+var_4C], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+Format], 2E1h
		mov	dword ptr [esp+5Ch+var_54], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aDbus_transport ; "!DBUS_TRANSPORT_CAN_SEND_UNIX_FD(transp"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E00CE0
		test	eax, eax
		jle	loc_67DF5BA0
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E00CE0
		mov	esi, eax

loc_67DF59A8:				; CODE XREF: sub_67DF5890+328j
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E00CE0
		mov	dword ptr [esp+5Ch+var_4C], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+Format], 2EBh
		mov	dword ptr [esp+5Ch+var_54], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset a_dbus_strin_44 ; "_dbus_string_get_length (&socket_transp"...
		cmp	eax, esi
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		test	esi, esi
		jle	loc_67DF5B40
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DE0660
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		mov	[esp+5Ch+var_58], ebp
		mov	[esp+5Ch+var_30], eax
		mov	eax, [esp+5Ch+var_20]
		mov	dword ptr [esp+5Ch+var_54], eax
		mov	eax, [ebx+10h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DC25D0
		test	eax, eax
		jz	loc_67DF5C6F
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		sub	eax, [esp+5Ch+var_30]
		mov	dword ptr [esp+5Ch+var_54], eax
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DE05E0
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E06F60
		mov	[esp+5Ch+var_58], 800h
		mov	[esp+5Ch+var_5C], ebp
		call	sub_67E06470

loc_67DF5A71:				; CODE XREF: sub_67DF5890+2B9j
		mov	dword ptr [esp+5Ch+var_4C], esi	; char
		mov	[esp+5Ch+Format], offset aReadDBytes ; " read %d bytes\n"
		mov	dword ptr [esp+5Ch+var_54], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+var_58], 34Fh ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+5Ch+var_5C], ebx
		call	sub_67DF4C20
		test	eax, eax
		jz	loc_67DF5BC0
		mov	eax, ebx
		add	edi, esi
		call	sub_67DF55E0
		mov	eax, [ebx+54h]
		cmp	edi, eax
		jle	loc_67DF58EB

loc_67DF5ABD:				; CODE XREF: sub_67DF5890+55j
		mov	[esp+5Ch+var_48], eax
		mov	dword ptr [esp+5Ch+var_4C], edi	; char
		mov	[esp+5Ch+Format], offset aDBytesExceedsD ; "%d bytes exceeds %d	bytes read per iter"...
		mov	dword ptr [esp+5Ch+var_54], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+var_58], 2D1h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		jmp	loc_67DF5B86
; ---------------------------------------------------------------------------

loc_67DF5AF3:				; CODE XREF: sub_67DF5890+BDj
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DE0660
		mov	eax, [ebx+54h]
		mov	dword ptr [esp+5Ch+var_54], eax	; char
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax ;	int
		mov	eax, [ebx+48h]
		mov	[esp+5Ch+var_5C], eax ;	SOCKET
		call	sub_67E0E140
		mov	esi, eax
		sar	eax, 1Fh
		not	eax
		and	eax, esi
		mov	dword ptr [esp+5Ch+var_54], eax
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DE05E0

loc_67DF5B40:				; CODE XREF: sub_67DF5890+152j
		cmp	esi, 0
		jl	loc_67DF5BF0
		jnz	loc_67DF5A71
		mov	[esp+5Ch+Format], offset aDisconnectedFr ; "Disconnected from remote app\n"
		mov	dword ptr [esp+5Ch+var_54], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+var_58], 349h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DF5860
		mov	eax, 1
		jmp	short loc_67DF5B86
; ---------------------------------------------------------------------------

loc_67DF5B81:				; CODE XREF: sub_67DF5890+3Ej
					; sub_67DF5890+97j ...
		mov	eax, 1

loc_67DF5B86:				; CODE XREF: sub_67DF5890+25Ej
					; sub_67DF5890+2EFj ...
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF5B90:				; CODE XREF: sub_67DF5890+65j
		movzx	eax, byte ptr [ebx+44h]
		and	eax, 1
		jmp	loc_67DF58FB
; ---------------------------------------------------------------------------
		align 10h

loc_67DF5BA0:				; CODE XREF: sub_67DF5890+108j
		mov	eax, [ebx+54h]
		mov	[esp+5Ch+var_58], ebp ;	int
		mov	dword ptr [esp+5Ch+var_54], eax	; char
		mov	eax, [ebx+48h]
		mov	[esp+5Ch+var_5C], eax ;	SOCKET
		call	sub_67E0E140
		mov	esi, eax
		jmp	loc_67DF59A8
; ---------------------------------------------------------------------------
		align 10h

loc_67DF5BC0:				; CODE XREF: sub_67DF5890+213j
		mov	[esp+5Ch+Format], offset aOutOfMemoryW_0 ; " out of memory when	queueing messages w"...
		mov	dword ptr [esp+5Ch+var_54], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+var_58], 356h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 4Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF5BF0:				; CODE XREF: sub_67DF5890+2B3j
		call	sub_67E09480
		test	eax, eax
		jnz	short loc_67DF5C44
		call	sub_67E0B400
		test	eax, eax
		jnz	loc_67DF5B81
		call	sub_67E094E0
		mov	[esp+5Ch+Format], offset aErrorReadingFr ; "Error reading from remote app: %s\n"
		mov	dword ptr [esp+5Ch+var_54], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+var_58], 342h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DF5860
		mov	eax, 1
		jmp	loc_67DF5B86
; ---------------------------------------------------------------------------

loc_67DF5C44:				; CODE XREF: sub_67DF5890+367j
		mov	[esp+5Ch+Format], offset aOutOfMemoryInR ; "Out	of memory in read()/do_reading()\n"
		mov	dword ptr [esp+5Ch+var_54], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+var_58], 339h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		jmp	loc_67DF5B86
; ---------------------------------------------------------------------------

loc_67DF5C6F:				; CODE XREF: sub_67DF5890+194j
		mov	[esp+5Ch+Format], offset aOutOfMemoryDec ; "Out	of memory decoding incoming data\n"
		mov	dword ptr [esp+5Ch+var_54], offset aDo_reading ; "do_reading"
		mov	[esp+5Ch+var_58], 2FAh ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		sub	eax, [esp+5Ch+var_30]
		mov	dword ptr [esp+5Ch+var_54], eax
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DE05E0
		xor	eax, eax
		jmp	loc_67DF5B86
sub_67DF5890	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DF5CD0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF5CD0	proc near		; CODE XREF: .text:67DF5CC1j
					; sub_67DF7020+1FDp ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= byte ptr -34h
var_30		= dword	ptr -30h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 4Ch
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DF4150
		test	eax, eax
		jz	loc_67DF6080
		test	byte ptr [ebx+44h], 1
		jnz	loc_67DF5F10
		mov	eax, [ebx+8]
		mov	esi, [ebx+48h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DC82A0
		mov	[esp+5Ch+var_48], esi
		mov	[esp+5Ch+Format], offset aDo_writingHave ; "do_writing(), have_messages	= %d, fd = "...
		mov	[esp+5Ch+var_54], offset aDo_writing ; "do_writing"
		mov	[esp+5Ch+var_58], 204h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		call	sub_67DFABC0
		lea	eax, [ebx+60h]
		mov	[esp+5Ch+var_30], eax
		mov	dword ptr [esp+5Ch+var_34], 0
		lea	esi, [esi+0]

loc_67DF5D40:				; CODE XREF: sub_67DF5CD0+1DEj
		test	byte ptr [ebx+44h], 1
		jnz	loc_67DF5F00

loc_67DF5D4A:				; CODE XREF: sub_67DF5CD0+226j
		mov	eax, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DC82A0
		test	eax, eax
		jz	loc_67DF5F00
		mov	eax, [ebx+58h]
		cmp	dword ptr [esp+5Ch+var_34], eax
		jg	loc_67DF60B1
		mov	eax, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DCD490
		mov	dword ptr [esp+5Ch+var_4C], offset aDo_writing ; "do_writing"
		mov	[esp+5Ch+Format], 21Ch
		mov	[esp+5Ch+var_54], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aMessageNull_1	; "message != NULL"
		mov	edi, eax
		xor	eax, eax
		test	edi, edi
		setnz	al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_5C], edi
		call	dbus_message_lock
		lea	eax, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_54], eax
		lea	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], edi
		call	sub_67DE0700
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		mov	ebp, eax
		mov	eax, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		mov	edx, eax
		mov	eax, [ebx+10h]
		mov	[esp+5Ch+var_38], edx
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DC2190
		mov	edx, [esp+5Ch+var_38]
		test	eax, eax
		jnz	loc_67DF5FC4
		mov	eax, [ebx+5Ch]
		lea	esi, [edx+ebp]
		cmp	ebp, eax
		jle	loc_67DF5F41
		sub	ebp, eax
		mov	[esp+5Ch+var_44], edx ;	int
		mov	edx, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_54], eax ;	int
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+Format], ebp ;	char
		mov	[esp+5Ch+var_48], 0 ; int
		mov	dword ptr [esp+5Ch+var_4C], edx	; int
		mov	[esp+5Ch+var_58], eax ;	int
		mov	eax, [ebx+48h]
		mov	[esp+5Ch+var_5C], eax ;	SOCKET
		call	sub_67E0DDA0
		mov	ebp, eax
		test	ebp, ebp
		js	loc_67DF5F6C

loc_67DF5E46:				; CODE XREF: sub_67DF5CD0+296j
		mov	dword ptr [esp+5Ch+var_4C], ebp	; char
		mov	[esp+5Ch+var_48], esi
		mov	[esp+5Ch+Format], offset aWroteDBytesOfD ; " wrote %d bytes of %d\n"
		mov	[esp+5Ch+var_54], offset aDo_writing ; "do_writing"
		mov	[esp+5Ch+var_58], 29Ah ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		add	dword ptr [esp+5Ch+var_34], ebp
		add	ebp, [ebx+5Ch]
		cmp	esi, ebp
		mov	[ebx+5Ch], ebp
		setnl	al
		mov	dword ptr [esp+5Ch+var_4C], offset aDo_writing ; "do_writing"
		mov	[esp+5Ch+Format], 2A0h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aSocket_trans_2 ; "socket_transport->message_bytes_written"...
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		cmp	[ebx+5Ch], esi
		jnz	loc_67DF5D40
		mov	eax, [esp+5Ch+var_30]
		mov	dword ptr [ebx+5Ch], 0
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E06F60
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_58], 800h
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E06470
		mov	[esp+5Ch+var_58], edi
		mov	eax, [ebx+8]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DCD2A0
		test	byte ptr [ebx+44h], 1
		jz	loc_67DF5D4A
		lea	esi, [esi+0]

loc_67DF5F00:				; CODE XREF: sub_67DF5CD0+74j
					; sub_67DF5CD0+87j ...
		add	esp, 4Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF5F10:				; CODE XREF: sub_67DF5CD0+1Dj
		mov	[esp+5Ch+Format], offset aNotConnectedNo ; "Not	connected, not writing anything\n"
		mov	[esp+5Ch+var_54], offset aDo_writing ; "do_writing"
		mov	[esp+5Ch+var_58], 1FDh ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1

loc_67DF5F39:				; CODE XREF: sub_67DF5CD0+2EFj
					; sub_67DF5CD0+35Cj ...
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF5F41:				; CODE XREF: sub_67DF5CD0+135j
		mov	edx, esi
		sub	edx, eax
		sub	eax, ebp
		mov	[esp+5Ch+var_54], eax ;	int
		mov	eax, [esp+5Ch+var_24]
		mov	[esp+5Ch+Format], edx ;	char

loc_67DF5F53:				; CODE XREF: sub_67DF5CD0+3A6j
		mov	[esp+5Ch+var_58], eax ;	int
		mov	eax, [ebx+48h]
		mov	[esp+5Ch+var_5C], eax ;	SOCKET
		call	sub_67E0E020
		mov	ebp, eax
		test	ebp, ebp
		jns	loc_67DF5E46

loc_67DF5F6C:				; CODE XREF: sub_67DF5CD0+170j
		call	sub_67E0B400
		test	eax, eax
		jnz	short loc_67DF5F00
		call	sub_67E09440
		test	eax, eax
		lea	esi, [esi+0]
		jnz	loc_67DF5F00
		call	sub_67E094E0
		mov	[esp+5Ch+Format], offset aErrorWritingTo ; "Error writing to remote app: %s\n"
		mov	[esp+5Ch+var_54], offset aDo_writing ; "do_writing"
		mov	[esp+5Ch+var_58], 292h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DF5860
		mov	eax, 1
		jmp	loc_67DF5F39
; ---------------------------------------------------------------------------

loc_67DF5FC4:				; CODE XREF: sub_67DF5CD0+127j
		mov	eax, [ebx+10h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DC2240
		mov	dword ptr [esp+5Ch+var_4C], offset aDo_writing ; "do_writing"
		mov	[esp+5Ch+Format], 22Ch
		mov	[esp+5Ch+var_54], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aDbus_transport ; "!DBUS_TRANSPORT_CAN_SEND_UNIX_FD(transp"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DFAE70
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		test	eax, eax
		jnz	short loc_67DF6055
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_54], eax
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+10h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DC26C0
		test	eax, eax
		jz	loc_67DF5F39
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_54], eax
		mov	eax, [esp+5Ch+var_24]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ebx+10h]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67DC26C0
		test	eax, eax
		jz	loc_67DF60EE

loc_67DF6055:				; CODE XREF: sub_67DF5CD0+33Dj
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E00CE0
		mov	esi, eax
		mov	eax, [ebx+5Ch]
		mov	edx, esi
		sub	edx, eax
		mov	[esp+5Ch+var_54], eax
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+Format], edx
		jmp	loc_67DF5F53
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6080:				; CODE XREF: sub_67DF5CD0+13j
		mov	[esp+5Ch+Format], offset aNotAuthenticat ; "Not	authenticated, not writing anything"...
		mov	[esp+5Ch+var_54], offset aDo_writing ; "do_writing"
		mov	[esp+5Ch+var_58], 1F7h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 4Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF60B1:				; CODE XREF: sub_67DF5CD0+94j
		mov	[esp+5Ch+var_48], eax
		mov	eax, dword ptr [esp+5Ch+var_34]
		mov	[esp+5Ch+Format], offset aDBytesExceed_0 ; "%d bytes exceeds %d	bytes written per i"...
		mov	[esp+5Ch+var_54], offset aDo_writing ; "do_writing"
		mov	[esp+5Ch+var_58], 217h ; int
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 4Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF60EE:				; CODE XREF: sub_67DF5CD0+37Fj
		mov	eax, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], eax
		call	sub_67E06F60
		xor	eax, eax
		jmp	loc_67DF5F39
sub_67DF5CD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF6110	proc near		; DATA XREF: .rdata:67E28950o

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_10], 0
		mov	eax, [ebx+8]
		mov	[esp+1Ch+var_18], offset sub_67DD1870
		mov	[esp+1Ch+var_14], eax
		mov	eax, [ebx+50h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF7790
		mov	[esp+1Ch+var_10], 0
		mov	eax, [ebx+8]
		mov	[esp+1Ch+var_18], offset sub_67DD1870
		mov	[esp+1Ch+var_14], eax
		mov	eax, [ebx+4Ch]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF7790
		mov	eax, [ebx+50h]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx+8]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DCDFB0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67DF6180
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6180:				; CODE XREF: sub_67DF6110+64j
		mov	eax, [ebx+4Ch]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx+8]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DCDFB0
		test	eax, eax
		jz	short loc_67DF61B0
		mov	eax, ebx
		call	sub_67DF55E0
		mov	eax, ebx
		call	sub_67DF5740
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF61B0:				; CODE XREF: sub_67DF6110+84j
		mov	eax, [ebx+50h]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [ebx+8]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DC8220
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
sub_67DF6110	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF61D0	proc near		; CODE XREF: sub_67DF62A0+2Ep
					; sub_67DF6300+2Ep

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
Format		= dword	ptr -10h

		push	ebx
		mov	ebx, eax
		sub	esp, 18h
		mov	[esp+1Ch+Format], offset aStart_1 ; "start\n"
		mov	[esp+1Ch+var_14], offset aFree_watches ; "free_watches"
		mov	[esp+1Ch+var_18], 4Ch ;	int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+4Ch]
		test	eax, eax
		jz	short loc_67DF6231
		mov	edx, [ebx+8]
		test	edx, edx
		jz	short loc_67DF6217
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], edx
		call	sub_67DC8220
		mov	eax, [ebx+4Ch]

loc_67DF6217:				; CODE XREF: sub_67DF61D0+36j
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF7750
		mov	eax, [ebx+4Ch]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF7FF0
		mov	dword ptr [ebx+4Ch], 0

loc_67DF6231:				; CODE XREF: sub_67DF61D0+2Fj
		mov	eax, [ebx+50h]
		test	eax, eax
		jz	short loc_67DF6268
		mov	edx, [ebx+8]
		test	edx, edx
		jz	short loc_67DF624E
		mov	[esp+1Ch+var_18], eax
		mov	[esp+1Ch+var_1C], edx
		call	sub_67DC8220
		mov	eax, [ebx+50h]

loc_67DF624E:				; CODE XREF: sub_67DF61D0+6Dj
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF7750
		mov	eax, [ebx+50h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF7FF0
		mov	dword ptr [ebx+50h], 0

loc_67DF6268:				; CODE XREF: sub_67DF61D0+66j
		mov	[esp+1Ch+Format], offset aEnd_1	; "end\n"
		mov	[esp+1Ch+var_14], offset aFree_watches ; "free_watches"
		mov	[esp+1Ch+var_18], 62h ;	int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 18h
		pop	ebx
		retn
sub_67DF61D0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DF62A0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF62A0	proc near		; CODE XREF: .text:67DF6291j
					; DATA XREF: .rdata:67E2894Co

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
Format		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+Format], offset asc_67E28308 ;	"\n"
		mov	[esp+1Ch+var_14], offset aSocket_disco_0 ; "socket_disconnect"
		mov	[esp+1Ch+var_18], 3D9h ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DF61D0
		mov	[esp+1Ch+var_18], 0 ; int
		mov	eax, [ebx+48h]
		mov	[esp+1Ch+var_1C], eax ;	SOCKET
		call	sub_67E0CC70
		mov	dword ptr [ebx+48h], 0FFFFFFFFh
		add	esp, 18h
		pop	ebx
		retn
sub_67DF62A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF6300	proc near		; DATA XREF: .rdata:off_67E28944o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+Format], offset asc_67E28308 ;	"\n"
		mov	[esp+2Ch+var_24], offset aSocket_finaliz ; "socket_finalize"
		mov	[esp+2Ch+var_28], 6Ah ;	int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DF61D0
		lea	eax, [ebx+60h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E02BF0
		lea	eax, [ebx+74h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E02BF0
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67DF4DE0
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset aSocket_finaliz ; "socket_finalize"
		mov	[esp+2Ch+Format], 73h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSocket_transpo ; "socket_transport->read_watch == NULL"
		cmp	dword ptr [ebx+4Ch], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset aSocket_finaliz ; "socket_finalize"
		mov	[esp+2Ch+Format], 74h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSocket_trans_0 ; "socket_transport->write_watch == NULL"
		cmp	dword ptr [ebx+50h], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	dbus_free
sub_67DF6300	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DF63C0(char	*, char	*, char	*, char	*, int)
sub_67DF63C0	proc near		; CODE XREF: sub_67DF67A0+162p
					; sub_67DF8460+12Fp

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
Format		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= byte ptr -30h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	esi, [esp+6Ch+arg_10]
		mov	edi, [esp+6Ch+arg_0]
		mov	ebp, [esp+6Ch+arg_C]
		test	esi, esi
		jz	loc_67DF6680
		mov	[esp+6Ch+var_6C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DF6680

loc_67DF63F0:				; CODE XREF: sub_67DF63C0+2C5j
		lea	ebx, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_6C], edx
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_trans_12 ; "_dbus_transport_new_for_tcp_socket"
		mov	[esp+6Ch+Format], 523h ; char
		mov	[esp+6Ch+var_64], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aErrorNullDb_17 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DF6698
		test	edi, edi
		xchg	ax, ax
		jz	loc_67DF6724
		test	ebp, ebp
		mov	eax, offset aNonceTcp_2	; "nonce-tcp:"
		jz	loc_67DF6736

loc_67DF6443:				; CODE XREF: sub_67DF63C0+370j
					; sub_67DF63C0+37Bj
		mov	[esp+6Ch+var_68], eax ;	char *
		mov	[esp+6Ch+var_6C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DF6690
		mov	[esp+6Ch+var_68], offset aHost_1 ; "host="
		mov	[esp+6Ch+var_6C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DF6690
		mov	[esp+6Ch+var_68], edi ;	char *
		mov	[esp+6Ch+var_6C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DF6690
		mov	[esp+6Ch+var_68], offset aPort_2 ; ",port="
		mov	[esp+6Ch+var_6C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DF6690
		mov	eax, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_6C], ebx ;	int
		mov	[esp+6Ch+var_68], eax ;	char *
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DF6690
		mov	eax, [esp+6Ch+arg_8]
		test	eax, eax
		jz	short loc_67DF64EB
		mov	[esp+6Ch+var_68], offset aFamily_2 ; "family="
		mov	[esp+6Ch+var_6C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DF6690
		mov	eax, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_6C], ebx ;	int
		mov	[esp+6Ch+var_68], eax ;	char *
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DF6690

loc_67DF64EB:				; CODE XREF: sub_67DF63C0+F9j
		test	ebp, ebp
		jz	short loc_67DF651B
		mov	[esp+6Ch+var_68], offset aNoncefile_2 ;	"noncefile="
		mov	[esp+6Ch+var_6C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DF6690
		mov	[esp+6Ch+var_68], ebp ;	char *
		mov	[esp+6Ch+var_6C], ebx ;	int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67DF6690

loc_67DF651B:				; CODE XREF: sub_67DF63C0+12Dj
		mov	eax, [esp+6Ch+arg_8]
		mov	[esp+6Ch+Format], ebp ;	char *
		mov	dword ptr [esp+6Ch+var_5C], esi	; int
		mov	[esp+6Ch+var_6C], edi ;	char
		mov	[esp+6Ch+var_64], eax ;	char
		mov	eax, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_68], eax ;	int
		call	sub_67E10680
		test	eax, eax
		mov	ebp, eax
		js	loc_67DF6740
		mov	eax, [esp+6Ch+arg_4]
		mov	dword ptr [esp+6Ch+var_5C], edi	; char
		mov	[esp+6Ch+Format], offset aSuccessfullyCo ; "Successfully connected to tcp socket %s"...
		mov	[esp+6Ch+var_64], offset a_dbus_trans_12 ; "_dbus_transport_new_for_tcp_socket"
		mov	[esp+6Ch+var_58], eax
		mov	[esp+6Ch+var_68], 54Ch ; int
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+6Ch+var_6C], 88h ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	edi, eax
		jz	loc_67DF66F0
		lea	eax, [eax+60h]
		mov	[esp+6Ch+var_44], eax
		mov	[esp+6Ch+var_6C], eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DF66E8
		lea	eax, [edi+74h]
		mov	[esp+6Ch+var_40], eax
		mov	[esp+6Ch+var_6C], eax
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DF66DC
		mov	[esp+6Ch+var_58], 0
		mov	dword ptr [esp+6Ch+var_5C], 0
		mov	[esp+6Ch+Format], 0
		mov	[esp+6Ch+var_64], 0
		mov	[esp+6Ch+var_68], 2
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67DF80C0
		test	eax, eax
		mov	[edi+50h], eax
		jz	loc_67DF66D0
		mov	[esp+6Ch+var_58], 0
		mov	dword ptr [esp+6Ch+var_5C], 0
		mov	[esp+6Ch+Format], 0
		mov	[esp+6Ch+var_64], 0
		mov	[esp+6Ch+var_68], 1
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67DF80C0
		test	eax, eax
		mov	[edi+4Ch], eax
		jz	loc_67DF66C5
		mov	[esp+6Ch+Format], ebx ;	char
		mov	[esp+6Ch+var_64], 0
		mov	[esp+6Ch+var_68], offset off_67E28944
		mov	[esp+6Ch+var_6C], edi
		call	sub_67DF3BF0
		test	eax, eax
		jz	short loc_67DF66BA
		mov	[edi+48h], ebp
		mov	dword ptr [edi+5Ch], 0
		mov	dword ptr [edi+54h], 800h
		mov	dword ptr [edi+58h], 800h
		mov	[esp+6Ch+var_48], edi
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67E02BF0
		mov	eax, [esp+6Ch+var_48]
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6680:				; CODE XREF: sub_67DF63C0+18j
					; sub_67DF63C0+2Aj
		mov	edx, 1
		jmp	loc_67DF63F0
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6690:				; CODE XREF: sub_67DF63C0+91j
					; sub_67DF63C0+A9j ...
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67E02BF0

loc_67DF6698:				; CODE XREF: sub_67DF63C0+66j
		mov	[esp+6Ch+var_64], 0 ; char *
		mov	[esp+6Ch+var_68], offset aOrg_freedes_41 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+6Ch+var_6C], esi ;	int
		call	dbus_set_error
		xor	eax, eax

loc_67DF66B2:				; CODE XREF: sub_67DF63C0+362j
					; sub_67DF63C0+3C4j
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF66BA:				; CODE XREF: sub_67DF63C0+28Dj
		mov	eax, [edi+4Ch]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DF7FF0

loc_67DF66C5:				; CODE XREF: sub_67DF63C0+269j
		mov	eax, [edi+50h]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DF7FF0

loc_67DF66D0:				; CODE XREF: sub_67DF63C0+22Ej
		mov	eax, [esp+6Ch+var_40]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67E02BF0

loc_67DF66DC:				; CODE XREF: sub_67DF63C0+1F3j
		mov	eax, [esp+6Ch+var_44]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67E02BF0

loc_67DF66E8:				; CODE XREF: sub_67DF63C0+1DCj
		mov	[esp+6Ch+var_6C], edi
		call	dbus_free

loc_67DF66F0:				; CODE XREF: sub_67DF63C0+1C5j
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67E02BF0
		mov	[esp+6Ch+var_64], 0 ; char *
		mov	[esp+6Ch+var_68], offset aOrg_freedes_41 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+6Ch+var_6C], esi ;	int
		call	dbus_set_error
		mov	[esp+6Ch+var_68], 0 ; int
		mov	[esp+6Ch+var_6C], ebp ;	SOCKET
		call	sub_67E0CC70
		xor	eax, eax
		jmp	short loc_67DF66B2
; ---------------------------------------------------------------------------

loc_67DF6724:				; CODE XREF: sub_67DF63C0+70j
		test	ebp, ebp
		mov	edi, offset aLocalhost_0 ; "localhost"
		mov	eax, offset aNonceTcp_2	; "nonce-tcp:"
		jnz	loc_67DF6443

loc_67DF6736:				; CODE XREF: sub_67DF63C0+7Dj
		mov	eax, offset aTcp ; "tcp:"
		jmp	loc_67DF6443
; ---------------------------------------------------------------------------

loc_67DF6740:				; CODE XREF: sub_67DF63C0+17Fj
		test	esi, esi
		jz	short loc_67DF6790
		mov	[esp+6Ch+var_6C], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DF6790

loc_67DF6752:				; CODE XREF: sub_67DF63C0+3D5j
		mov	[esp+6Ch+var_6C], edx
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_trans_12 ; "_dbus_transport_new_for_tcp_socket"
		mov	[esp+6Ch+Format], 546h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aErrorNullDb_18 ; "(error) == NULL || dbus_error_is_set (("...
		call	sub_67DFAE70
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67DF66B2
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6790:				; CODE XREF: sub_67DF63C0+382j
					; sub_67DF63C0+390j
		mov	edx, 1
		jmp	short loc_67DF6752
sub_67DF63C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF67A0	proc near		; CODE XREF: sub_67DF33B0+EDp
					; DATA XREF: .rdata:off_67E27DE0o

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 4Ch
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_10], ebx
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_8], edi
		mov	edi, offset aTcp_1 ; "tcp"
		mov	[esp+4Ch+var_4C], ebp
		call	dbus_address_entry_get_method
		mov	[esp+4Ch+var_3C], offset a_dbus_trans_11 ; "_dbus_transport_open_socket"
		mov	[esp+4Ch+var_40], 571h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aMethodNull_1 ; "method != NULL"
		mov	ebx, eax
		xor	eax, eax
		test	ebx, ebx
		mov	esi, ebx
		setnz	al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	ecx, 4
		repe cmpsb
		mov	esi, ebx
		mov	edi, offset aNonceTcp_1	; "nonce-tcp"
		mov	ecx, 0Ah
		setb	dl
		setnbe	al
		sub	al, dl
		repe cmpsb
		movsx	eax, al
		setz	dl
		movzx	esi, dl
		test	esi, esi
		jnz	short loc_67DF6882
		test	eax, eax
		jz	short loc_67DF6882
		mov	edx, [esp+4Ch+arg_8]
		test	edx, edx
		jz	short loc_67DF683F
		mov	edx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_4C], edx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DF6844

loc_67DF683F:				; CODE XREF: sub_67DF67A0+8Bj
		mov	edx, 1

loc_67DF6844:				; CODE XREF: sub_67DF67A0+9Dj
		mov	[esp+4Ch+var_3C], offset a_dbus_trans_11 ; "_dbus_transport_open_socket"
		mov	[esp+4Ch+var_40], 596h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aErrorNullDb_17 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		xor	eax, eax

loc_67DF686E:				; CODE XREF: sub_67DF67A0+1BCj
					; sub_67DF67A0+1E6j ...
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_67DF6882:				; CODE XREF: sub_67DF67A0+7Fj
					; sub_67DF67A0+83j
		mov	[esp+4Ch+var_48], offset aHost_0 ; "host"
		mov	[esp+4Ch+var_4C], ebp
		call	dbus_address_entry_get_value
		mov	[esp+4Ch+var_48], offset aPort_1 ; "port"
		mov	[esp+4Ch+var_4C], ebp
		mov	[esp+4Ch+var_20], eax
		call	dbus_address_entry_get_value
		mov	[esp+4Ch+var_48], offset aFamily_1 ; "family"
		mov	[esp+4Ch+var_4C], ebp
		mov	edi, eax
		call	dbus_address_entry_get_value
		mov	[esp+4Ch+var_48], offset aNoncefile_1 ;	"noncefile"
		mov	[esp+4Ch+var_4C], ebp
		mov	[esp+4Ch+var_24], eax
		call	dbus_address_entry_get_value
		mov	ecx, esi
		test	eax, eax
		setnz	dl
		cmp	dl, cl
		jnz	loc_67DF6961
		test	edi, edi
		jz	loc_67DF6997
		mov	edx, [esp+4Ch+var_20]
		mov	ecx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_40], eax ;	char *
		mov	eax, [esp+4Ch+var_24]
		mov	[esp+4Ch+var_48], edi ;	char *
		mov	[esp+4Ch+var_4C], edx ;	char *
		mov	[esp+4Ch+var_3C], ecx ;	int
		mov	[esp+4Ch+var_44], eax ;	char *
		call	sub_67DF63C0
		mov	edx, [esp+4Ch+arg_4]
		test	eax, eax
		mov	[edx], eax
		jz	loc_67DF69C1
		mov	ecx, [esp+4Ch+arg_8]
		test	ecx, ecx
		jz	short loc_67DF6990
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_4C], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DF6990

loc_67DF692F:				; CODE XREF: sub_67DF67A0+1F5j
		mov	[esp+4Ch+var_3C], offset a_dbus_trans_11 ; "_dbus_transport_open_socket"
		mov	[esp+4Ch+var_40], 590h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aErrorNullDb_17 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		mov	eax, 1
		jmp	loc_67DF686E
; ---------------------------------------------------------------------------

loc_67DF6961:				; CODE XREF: sub_67DF67A0+135j
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_40], 0 ; char
		mov	[esp+4Ch+var_44], offset aNoncefile_1 ;	"noncefile"
		mov	[esp+4Ch+var_48], ebx ;	char *
		mov	[esp+4Ch+var_4C], eax ;	int
		call	sub_67DC14A0
		mov	eax, 2
		jmp	loc_67DF686E
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6990:				; CODE XREF: sub_67DF67A0+17Bj
					; sub_67DF67A0+18Dj
		mov	edx, 1
		jmp	short loc_67DF692F
; ---------------------------------------------------------------------------

loc_67DF6997:				; CODE XREF: sub_67DF67A0+13Dj
		mov	edx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_40], 0 ; char
		mov	[esp+4Ch+var_44], offset aPort_1 ; "port"
		mov	[esp+4Ch+var_48], ebx ;	char *
		mov	[esp+4Ch+var_4C], edx ;	int
		call	sub_67DC14A0
		mov	eax, 2
		jmp	loc_67DF686E
; ---------------------------------------------------------------------------

loc_67DF69C1:				; CODE XREF: sub_67DF67A0+16Fj
		mov	ebx, [esp+4Ch+arg_8]
		test	ebx, ebx
		jz	short loc_67DF6A10
		mov	ecx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_4C], ecx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DF6A10

loc_67DF69DB:				; CODE XREF: sub_67DF67A0+275j
		mov	[esp+4Ch+var_3C], offset a_dbus_trans_11 ; "_dbus_transport_open_socket"
		mov	[esp+4Ch+var_40], 58Bh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aErrorNullDb_18 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		mov	eax, 3
		jmp	loc_67DF686E
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6A10:				; CODE XREF: sub_67DF67A0+227j
					; sub_67DF67A0+239j
		mov	edx, 1
		jmp	short loc_67DF69DB
sub_67DF67A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF6A20	proc near		; CODE XREF: sub_67DF7020+1D2p
					; sub_67DF73F0+1A4p ...

s		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= byte ptr -64h
Format		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_40		= byte ptr -40h
var_30		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		mov	edi, ecx
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 5Ch
		mov	ebp, [esp+6Ch+arg_0]
		mov	[esp+6Ch+s], eax
		call	sub_67DF4150
		test	eax, eax
		jz	short loc_67DF6A57
		test	ebp, ebp
		mov	esi, 1
		jz	short loc_67DF6A4D
		mov	dword ptr [ebp+0], 0

loc_67DF6A4D:				; CODE XREF: sub_67DF6A20+24j
		add	esp, 5Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF6A57:				; CODE XREF: sub_67DF6A20+1Bj
		mov	[esp+6Ch+s], ebx
		call	sub_67DF3150

loc_67DF6A5F:				; CODE XREF: sub_67DF6A20+1D1j
					; sub_67DF6A20+270j ...
		mov	[esp+6Ch+s], ebx ; jumptable 67DF6BF7 default case
		call	sub_67DF4150
		test	eax, eax
		jnz	loc_67DF6CEC
		mov	[esp+6Ch+s], ebx
		call	sub_67DF2D80
		test	eax, eax
		jz	loc_67DF6CEC
		mov	[esp+6Ch+var_28], 0
		mov	[esp+6Ch+var_30], 0
		mov	dword ptr [esp+6Ch+var_2C], 0
		mov	[esp+6Ch+var_24], 0
		mov	byte ptr [esp+6Ch+var_28], 1
		mov	[esp+6Ch+var_58], edi
		mov	dword ptr [esp+6Ch+var_5C], esi	; char
		mov	[esp+6Ch+Format], offset aExchange_crede ; "exchange_credentials: do_reading = %d, "...
		mov	dword ptr [esp+6Ch+var_64], offset aExchange_cre_0 ; "exchange_credentials"
		mov	[esp+6Ch+var_68], 159h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		test	edi, edi
		jz	loc_67DF6BB6
		movzx	eax, byte ptr [ebx+44h]
		test	al, 4
		mov	edx, eax
		jnz	loc_67DF6E45

loc_67DF6AE6:				; CODE XREF: sub_67DF6A20+19Cj
					; sub_67DF6A20+44Cj
		test	esi, esi
		jz	short loc_67DF6AF3
		test	dl, 8
		jnz	loc_67DF6E71

loc_67DF6AF3:				; CODE XREF: sub_67DF6A20+C8j
					; sub_67DF6A20+47Fj ...
		and	edx, 0Ch
		jz	loc_67DF6BC1

loc_67DF6AFC:				; CODE XREF: sub_67DF6A20+1BDj
		mov	edx, eax
		mov	esi, 1
		shr	dl, 3
		shr	al, 2
		and	edx, 1
		and	eax, 1
		mov	[esp+6Ch+var_58], edx
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+Format], offset aSend_credentia ; "send_credentials_pending = %d receive_c"...
		mov	dword ptr [esp+6Ch+var_64], offset aDo_authenticat ; "do_authentication"
		mov	[esp+6Ch+var_68], 1B5h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		nop
		lea	esi, [esi+0]

loc_67DF6B40:				; CODE XREF: sub_67DF6A20+21Aj
					; sub_67DF6A20+2D1j ...
		test	ebp, ebp
		jz	short loc_67DF6B57
		mov	[esp+6Ch+s], ebx
		call	sub_67DF4150
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[ebp+0], eax

loc_67DF6B57:				; CODE XREF: sub_67DF6A20+122j
		mov	eax, ebx
		call	sub_67DF55E0
		mov	eax, ebx
		call	sub_67DF5740
		mov	[esp+6Ch+s], ebx
		call	sub_67DF3240
		add	esp, 5Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF6B77:				; CODE XREF: sub_67DF6A20+43Aj
		mov	eax, dword ptr [esp+6Ch+var_2C]
		mov	[esp+6Ch+Format], offset aFailedToWriteC ; "Failed to write credentials: %s\n"
		mov	dword ptr [esp+6Ch+var_64], offset aExchange_cre_0 ; "exchange_credentials"
		mov	[esp+6Ch+var_68], 164h ; int
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+6Ch+var_30]
		mov	[esp+6Ch+s], eax
		call	dbus_error_free
		mov	eax, ebx
		call	sub_67DF5860

loc_67DF6BB6:				; CODE XREF: sub_67DF6A20+B2j
		movzx	eax, byte ptr [ebx+44h]
		mov	edx, eax
		jmp	loc_67DF6AE6
; ---------------------------------------------------------------------------

loc_67DF6BC1:				; CODE XREF: sub_67DF6A20+D6j
		mov	eax, [ebx+14h]
		mov	[esp+6Ch+var_68], eax
		mov	eax, [ebx+10h]
		mov	[esp+6Ch+s], eax
		call	sub_67DC2590
		test	eax, eax
		jz	short loc_67DF6C38
		movzx	eax, byte ptr [ebx+44h]
		test	al, 0Ch
		jnz	loc_67DF6AFC
		mov	eax, [ebx+10h]
		mov	[esp+6Ch+s], eax
		call	sub_67DC4660
		cmp	eax, 4		; switch 5 cases
		ja	loc_67DF6A5F	; jumptable 67DF6BF7 default case
		jmp	ds:off_67E285D8[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6C00:				; CODE XREF: sub_67DF6A20+1D7j
					; DATA XREF: .rdata:off_67E285D8o
		test	byte ptr [ebx+44h], 10h	; jumptable 67DF6BF7 case 1
		mov	eax, offset aServer_0 ;	"server"
		jnz	short loc_67DF6C10
		mov	eax, offset aClient_0 ;	"client"

loc_67DF6C10:				; CODE XREF: sub_67DF6A20+1E9j
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+Format], offset aSAuthStateWait ; " %s	auth state: waiting for	memory\n"
		mov	dword ptr [esp+6Ch+var_64], offset aDo_authenticat ; "do_authentication"
		mov	[esp+6Ch+var_68], 1C5h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DF6C38:				; CODE XREF: sub_67DF6A20+1B5j
		xor	esi, esi
		jmp	loc_67DF6B40
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6C40:				; CODE XREF: sub_67DF6A20+1D7j
					; DATA XREF: .rdata:off_67E285D8o
		test	byte ptr [ebx+44h], 10h	; jumptable 67DF6BF7 case 3
		mov	eax, offset aServer_0 ;	"server"
		jnz	short loc_67DF6C50
		mov	eax, offset aClient_0 ;	"client"

loc_67DF6C50:				; CODE XREF: sub_67DF6A20+229j
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+Format], offset aSAuthStateNeed ; " %s	auth state: need to disconnect\n"
		mov	dword ptr [esp+6Ch+var_64], offset aDo_authenticat ; "do_authentication"
		mov	[esp+6Ch+var_68], 1D3h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+6Ch+s], ebx
		call	sub_67DF3150
		mov	[esp+6Ch+s], ebx
		call	sub_67DF31A0
		mov	[esp+6Ch+s], ebx
		call	sub_67DF3240
		jmp	loc_67DF6A5F	; jumptable 67DF6BF7 default case
; ---------------------------------------------------------------------------

loc_67DF6C95:				; CODE XREF: sub_67DF6A20+1D7j
					; DATA XREF: .rdata:off_67E285D8o
		test	byte ptr [ebx+44h], 10h	; jumptable 67DF6BF7 case 2
		mov	eax, offset aServer_0 ;	"server"
		jnz	short loc_67DF6CA5
		mov	eax, offset aClient_0 ;	"client"

loc_67DF6CA5:				; CODE XREF: sub_67DF6A20+27Ej
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+Format], offset aSAuthStateByte ; " %s	auth state: bytes to send\n"
		mov	dword ptr [esp+6Ch+var_64], offset aDo_authenticat ; "do_authentication"
		mov	[esp+6Ch+var_68], 1CCh ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		test	edi, edi
		jz	short loc_67DF6CEC
		lea	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_68], eax
		mov	eax, [ebx+10h]
		mov	[esp+6Ch+s], eax
		call	sub_67DC23D0
		test	eax, eax
		jnz	loc_67DF6ED1

loc_67DF6CEC:				; CODE XREF: sub_67DF6A20+49j
					; sub_67DF6A20+59j ...
		mov	esi, 1
		jmp	loc_67DF6B40
; ---------------------------------------------------------------------------

loc_67DF6CF6:				; CODE XREF: sub_67DF6A20+1D7j
					; DATA XREF: .rdata:off_67E285D8o
		test	byte ptr [ebx+44h], 10h	; jumptable 67DF6BF7 case 0
		mov	eax, offset aServer_0 ;	"server"
		jnz	short loc_67DF6D06
		mov	eax, offset aClient_0 ;	"client"

loc_67DF6D06:				; CODE XREF: sub_67DF6A20+2DFj
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+Format], offset aSAuthStateWa_0 ; " %s	auth state: waiting for	input\n"
		mov	dword ptr [esp+6Ch+var_64], offset aDo_authenticat ; "do_authentication"
		mov	[esp+6Ch+var_68], 1BEh ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		test	esi, esi
		jz	short loc_67DF6CEC
		lea	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_68], eax
		mov	eax, [ebx+10h]
		mov	[esp+6Ch+s], eax
		call	sub_67DC2340
		mov	eax, [ebx+54h]
		mov	dword ptr [esp+6Ch+var_64], eax	; char
		mov	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_68], eax ;	int
		mov	eax, [ebx+48h]
		mov	[esp+6Ch+s], eax ; SOCKET
		call	sub_67E0E140
		mov	edx, eax
		sar	edx, 1Fh
		not	edx
		and	edx, eax
		mov	dword ptr [esp+6Ch+var_64], edx
		mov	edx, [esp+6Ch+var_20]
		mov	dword ptr [esp+6Ch+var_40], eax
		mov	[esp+6Ch+var_68], edx
		mov	edx, [ebx+10h]
		mov	[esp+6Ch+s], edx
		call	sub_67DC22C0
		mov	eax, dword ptr [esp+6Ch+var_40]
		cmp	eax, 0
		jg	loc_67DF6EA4
		jnz	loc_67DF6FC0
		mov	dword ptr [esp+6Ch+var_5C], offset aRead_data_into ; "read_data_into_auth"
		xor	esi, esi
		mov	[esp+6Ch+Format], 120h
		mov	dword ptr [esp+6Ch+var_64], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aBytes_read0 ;	"bytes_read == 0"
		mov	[esp+6Ch+s], 1
		call	sub_67DFAE70
		mov	[esp+6Ch+Format], offset aDisconnectedFr ; "Disconnected from remote app\n"
		mov	dword ptr [esp+6Ch+var_64], offset aRead_data_into ; "read_data_into_auth"
		mov	[esp+6Ch+var_68], 122h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+6Ch+s], ebx
		call	sub_67DF3150
		mov	[esp+6Ch+s], ebx
		call	sub_67DF31A0
		mov	[esp+6Ch+s], ebx
		call	sub_67DF3240

loc_67DF6E00:				; CODE XREF: sub_67DF6A20+5ACj
					; sub_67DF6A20+5BCj ...
		xor	esi, 1
		jmp	loc_67DF6B40
; ---------------------------------------------------------------------------

loc_67DF6E08:				; CODE XREF: sub_67DF6A20+1D7j
					; DATA XREF: .rdata:off_67E285D8o
		test	byte ptr [ebx+44h], 10h	; jumptable 67DF6BF7 case 4
		mov	eax, offset aServer_0 ;	"server"
		jnz	short loc_67DF6E18
		mov	eax, offset aClient_0 ;	"client"

loc_67DF6E18:				; CODE XREF: sub_67DF6A20+3F1j
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+Format], offset aSAuthStateAuth ; " %s	auth state: authenticated\n"
		mov	dword ptr [esp+6Ch+var_64], offset aDo_authenticat ; "do_authentication"
		mov	[esp+6Ch+var_68], 1D9h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DF6A5F	; jumptable 67DF6BF7 default case
; ---------------------------------------------------------------------------

loc_67DF6E45:				; CODE XREF: sub_67DF6A20+C0j
		lea	eax, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_68], eax ;	int
		mov	eax, [ebx+48h]
		mov	[esp+6Ch+s], eax ; SOCKET
		call	sub_67E0E330
		test	eax, eax
		jz	loc_67DF6B77
		movzx	eax, byte ptr [ebx+44h]
		and	eax, 0FFFFFFFBh
		mov	[ebx+44h], al
		mov	edx, eax
		jmp	loc_67DF6AE6
; ---------------------------------------------------------------------------

loc_67DF6E71:				; CODE XREF: sub_67DF6A20+CDj
		lea	eax, [esp+6Ch+var_30]
		mov	dword ptr [esp+6Ch+var_64], eax
		mov	eax, [ebx+14h]
		mov	[esp+6Ch+var_68], eax ;	int
		mov	eax, [ebx+48h]
		mov	[esp+6Ch+s], eax ; s
		call	sub_67E0F840
		test	eax, eax
		jz	loc_67DF6F74
		movzx	eax, byte ptr [ebx+44h]
		and	eax, 0FFFFFFF7h
		mov	[ebx+44h], al
		mov	edx, eax
		jmp	loc_67DF6AF3
; ---------------------------------------------------------------------------

loc_67DF6EA4:				; CODE XREF: sub_67DF6A20+36Aj
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+Format], offset aReadDBytesInAu ; " read %d bytes in auth phase\n"
		mov	dword ptr [esp+6Ch+var_64], offset aRead_data_into ; "read_data_into_auth"
		mov	[esp+6Ch+var_68], 107h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DF6A5F	; jumptable 67DF6BF7 default case
; ---------------------------------------------------------------------------

loc_67DF6ED1:				; CODE XREF: sub_67DF6A20+2C6j
		mov	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+s], eax
		call	sub_67E00CE0
		mov	dword ptr [esp+6Ch+var_64], 0 ;	int
		mov	[esp+6Ch+Format], eax ;	char
		mov	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_68], eax ;	int
		mov	eax, [ebx+48h]
		mov	[esp+6Ch+s], eax ; SOCKET
		call	sub_67E0E020
		cmp	eax, 0
		jg	short loc_67DF6F60
		jz	loc_67DF6CEC
		mov	esi, esi
		lea	edi, [edi+0]
		call	sub_67E0B400
		test	eax, eax
		jnz	loc_67DF6CEC
		lea	esi, [esi+0]
		call	sub_67E094E0
		mov	[esp+6Ch+Format], offset aErrorWritingTo ; "Error writing to remote app: %s\n"
		mov	dword ptr [esp+6Ch+var_64], offset aWrite_data_fro ; "write_data_from_auth"
		mov	[esp+6Ch+var_68], 147h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DF5860
		jmp	loc_67DF6CEC
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6F60:				; CODE XREF: sub_67DF6A20+4DFj
		mov	[esp+6Ch+var_68], eax
		mov	eax, [ebx+10h]
		mov	[esp+6Ch+s], eax
		call	sub_67DC2940
		jmp	loc_67DF6A5F	; jumptable 67DF6BF7 default case
; ---------------------------------------------------------------------------

loc_67DF6F74:				; CODE XREF: sub_67DF6A20+46Dj
		mov	eax, dword ptr [esp+6Ch+var_2C]
		mov	[esp+6Ch+Format], offset aFailedToReadCr ; "Failed to read credentials %s\n"
		mov	dword ptr [esp+6Ch+var_64], offset aExchange_cre_0 ; "exchange_credentials"
		mov	[esp+6Ch+var_68], 17Bh ; int
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+6Ch+var_30]
		mov	[esp+6Ch+s], eax
		call	dbus_error_free
		mov	eax, ebx
		call	sub_67DF5860
		movzx	eax, byte ptr [ebx+44h]
		mov	edx, eax
		jmp	loc_67DF6AF3
; ---------------------------------------------------------------------------
		align 10h

loc_67DF6FC0:				; CODE XREF: sub_67DF6A20+370j
		call	sub_67E09480
		mov	esi, 1
		test	eax, eax
		jnz	loc_67DF6E00
		call	sub_67E0B400
		xor	si, si
		test	eax, eax
		jnz	loc_67DF6E00
		call	sub_67E094E0
		mov	[esp+6Ch+Format], offset aErrorReadingFr ; "Error reading from remote app: %s\n"
		mov	dword ptr [esp+6Ch+var_64], offset aRead_data_into ; "read_data_into_auth"
		mov	[esp+6Ch+var_68], 118h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		call	sub_67DFABC0
		mov	eax, ebx
		call	sub_67DF5860
		jmp	loc_67DF6E00
sub_67DF6A20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF7020	proc near		; DATA XREF: .rdata:67E28954o

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
Format		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= word ptr -24h
var_22		= word ptr -22h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		mov	edx, offset aWrite_0 ; "write"
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebx, [esp+6Ch+arg_0]
		mov	esi, [esp+6Ch+arg_4]
		mov	eax, [ebx+4Ch]
		mov	ecx, esi
		mov	ebp, [ebx+48h]
		and	ecx, 1
		mov	edi, [ebx+50h]
		mov	[esp+6Ch+var_34], ecx
		mov	[esp+6Ch+var_38], eax
		jnz	short loc_67DF7051
		mov	edx, offset byte_67E285EC

loc_67DF7051:				; CODE XREF: sub_67DF7020+2Aj
		mov	ecx, esi
		mov	eax, offset aRead_0 ; "read"
		and	ecx, 2
		mov	[esp+6Ch+var_30], ecx
		jnz	short loc_67DF7066
		mov	eax, offset byte_67E285EC

loc_67DF7066:				; CODE XREF: sub_67DF7020+3Fj
		mov	ecx, [esp+6Ch+var_38]
		mov	[esp+6Ch+var_58], edx
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+var_48], ebp
		mov	[esp+6Ch+var_50], ecx
		mov	ecx, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_4C], edi
		mov	[esp+6Ch+Format], offset aIterationFlags ; " iteration flags = %s%s timeout = %d re"...
		mov	[esp+6Ch+var_64], offset aSocket_do_iter ; "socket_do_iteration"
		mov	[esp+6Ch+var_54], ecx
		mov	[esp+6Ch+var_68], 417h ; int
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+48h]
		mov	[esp+6Ch+var_24], 0
		mov	[esp+6Ch+var_6C], ebx
		mov	[esp+6Ch+var_28], eax
		call	sub_67DF4150
		test	eax, eax
		jz	loc_67DF72E8
		mov	eax, esi
		and	eax, 7
		cmp	eax, 1
		jz	loc_67DF7224

loc_67DF70D6:				; CODE XREF: sub_67DF7020+208j
					; sub_67DF7020+21Bj ...
		mov	dword ptr [esp+6Ch+var_5C], offset aSocket_do_iter ; "socket_do_iteration"
		xor	eax, eax
		mov	[esp+6Ch+Format], 43Bh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aSocket_trans_3 ; "socket_transport->read_watch"
		cmp	dword ptr [ebx+4Ch], 0
		setnz	al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	edx, [esp+6Ch+var_30]
		test	edx, edx
		jz	short loc_67DF7115
		or	[esp+6Ch+var_24], 1

loc_67DF7115:				; CODE XREF: sub_67DF7020+EDj
		mov	dword ptr [esp+6Ch+var_5C], offset aSocket_do_iter ; "socket_do_iteration"
		xor	eax, eax
		mov	[esp+6Ch+Format], 43Fh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aSocket_trans_4 ; "socket_transport->write_watch"
		cmp	dword ptr [ebx+50h], 0
		setnz	al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+var_34]
		test	eax, eax
		jz	loc_67DF7263
		or	[esp+6Ch+var_24], 4

loc_67DF7158:				; CODE XREF: sub_67DF7020+24Bj
					; sub_67DF7020+2FBj
		and	esi, 4
		jnz	loc_67DF72A4
		lea	ebp, [esp+6Ch+var_28]
		xor	eax, eax
		mov	[esp+6Ch+var_38], ebx
		mov	ebx, ebp
		mov	ebp, eax
		nop

loc_67DF7170:				; CODE XREF: sub_67DF7020+171j
					; sub_67DF7020+2C3j
		mov	[esp+6Ch+var_64], ebp
		mov	[esp+6Ch+var_68], 1
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67E0CD90
		test	eax, eax
		mov	edi, eax
		jns	short loc_67DF7193
		call	sub_67E09460
		test	eax, eax
		jnz	short loc_67DF7170

loc_67DF7193:				; CODE XREF: sub_67DF7020+168j
		test	esi, esi
		mov	ebx, [esp+6Ch+var_38]
		jnz	loc_67DF7360

loc_67DF719F:				; CODE XREF: sub_67DF7020+36Fj
		cmp	edi, 0
		jl	loc_67DF7394
		jnz	loc_67DF7320
		mov	[esp+6Ch+var_22], 0
		xor	esi, esi
		xor	edi, edi

loc_67DF71B9:				; CODE XREF: sub_67DF7020+3B3j
		mov	[esp+6Ch+var_58], esi
		mov	dword ptr [esp+6Ch+var_5C], edi	; char
		mov	[esp+6Ch+Format], offset aInIterationNee ; "in iteration, need_read=%d need_write=%"...
		mov	[esp+6Ch+var_64], offset aSocket_do_iter ; "socket_do_iteration"
		mov	[esp+6Ch+var_68], 481h ; int
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+6Ch+var_20]
		mov	ecx, esi
		mov	[esp+6Ch+var_6C], eax
		mov	edx, edi
		mov	eax, ebx
		call	sub_67DF6A20
		mov	ebp, [esp+6Ch+var_20]
		test	ebp, ebp
		jnz	short loc_67DF7271
		test	edi, edi
		jz	short loc_67DF720F
		mov	edi, [esp+6Ch+var_30]
		test	edi, edi
		jnz	loc_67DF73D8

loc_67DF720F:				; CODE XREF: sub_67DF7020+1E1j
					; sub_67DF7020+3BFj
		test	esi, esi
		jz	short loc_67DF7271
		mov	esi, [esp+6Ch+var_34]
		test	esi, esi
		jz	short loc_67DF7271
		mov	eax, ebx
		call	sub_67DF5CD0
		jmp	short loc_67DF7271
; ---------------------------------------------------------------------------

loc_67DF7224:				; CODE XREF: sub_67DF7020+B0j
		test	byte ptr [ebx+44h], 1
		jnz	loc_67DF70D6
		mov	eax, [ebx+8]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DC82A0
		test	eax, eax
		jz	loc_67DF70D6
		mov	eax, ebx
		call	sub_67DF5CD0
		test	byte ptr [ebx+44h], 1
		jnz	short loc_67DF7271
		mov	eax, [ebx+8]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DC82A0
		test	eax, eax
		jnz	loc_67DF70D6
		jmp	short loc_67DF7271
; ---------------------------------------------------------------------------

loc_67DF7263:				; CODE XREF: sub_67DF7020+12Cj
					; sub_67DF7020+2EDj
		movzx	eax, [esp+6Ch+var_24]
		test	ax, ax
		jnz	loc_67DF7158

loc_67DF7271:				; CODE XREF: sub_67DF7020+1DDj
					; sub_67DF7020+1F1j ...
		mov	eax, ebx
		call	sub_67DF5740
		mov	[esp+6Ch+Format], offset a___LeavingDo_i ; " ... leaving do_iteration()\n"
		mov	[esp+6Ch+var_64], offset aSocket_do_iter ; "socket_do_iteration"
		mov	[esp+6Ch+var_68], 4A4h ; int
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF72A4:				; CODE XREF: sub_67DF7020+13Bj
		mov	[esp+6Ch+Format], offset aUnlockPrePoll	; "unlock pre poll\n"
		lea	ebp, [esp+6Ch+var_28]
		mov	[esp+6Ch+var_64], offset aSocket_do_iter ; "socket_do_iteration"
		mov	[esp+6Ch+var_68], 460h ; int
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+8]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DC8C10
		mov	eax, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_38], ebx
		mov	ebx, ebp
		mov	ebp, eax
		jmp	loc_67DF7170
; ---------------------------------------------------------------------------

loc_67DF72E8:				; CODE XREF: sub_67DF7020+A2j
		mov	eax, [ebx+10h]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DC4660
		movzx	ecx, byte ptr [ebx+44h]
		test	eax, eax
		jz	short loc_67DF7350
		test	cl, 8
		jnz	short loc_67DF7350
		movzx	edx, [esp+6Ch+var_24]

loc_67DF7305:				; CODE XREF: sub_67DF7020+33Dj
		cmp	eax, 2
		jz	short loc_67DF7313
		and	ecx, 4
		jz	loc_67DF7263

loc_67DF7313:				; CODE XREF: sub_67DF7020+2E8j
		or	edx, 4
		mov	[esp+6Ch+var_24], dx
		jmp	loc_67DF7158
; ---------------------------------------------------------------------------

loc_67DF7320:				; CODE XREF: sub_67DF7020+188j
		movsx	eax, [esp+6Ch+var_22]
		test	al, 8
		jz	loc_67DF73C6
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67DF3150
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67DF31A0
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67DF3240
		jmp	loc_67DF7271
; ---------------------------------------------------------------------------
		align 10h

loc_67DF7350:				; CODE XREF: sub_67DF7020+2D9j
					; sub_67DF7020+2DEj
		movzx	edx, [esp+6Ch+var_24]
		or	edx, 1
		mov	[esp+6Ch+var_24], dx
		jmp	short loc_67DF7305
; ---------------------------------------------------------------------------
		align 10h

loc_67DF7360:				; CODE XREF: sub_67DF7020+179j
		mov	[esp+6Ch+Format], offset aLockPostPoll ; "lock post poll\n"
		mov	[esp+6Ch+var_64], offset aSocket_do_iter ; "socket_do_iteration"
		mov	[esp+6Ch+var_68], 46Ch ; int
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+8]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DC83D0
		jmp	loc_67DF719F
; ---------------------------------------------------------------------------

loc_67DF7394:				; CODE XREF: sub_67DF7020+182j
		call	sub_67E094E0
		mov	[esp+6Ch+Format], offset aErrorFrom_dbus ; "Error from _dbus_poll(): %s\n"
		mov	[esp+6Ch+var_64], offset aSocket_do_iter ; "socket_do_iteration"
		mov	[esp+6Ch+var_68], 492h ; int
		mov	[esp+6Ch+var_6C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		call	sub_67DFABC0
		jmp	loc_67DF7271
; ---------------------------------------------------------------------------

loc_67DF73C6:				; CODE XREF: sub_67DF7020+307j
		mov	edi, eax
		and	edi, 1
		test	al, 4
		setnz	al
		movzx	esi, al
		jmp	loc_67DF71B9
; ---------------------------------------------------------------------------

loc_67DF73D8:				; CODE XREF: sub_67DF7020+1E9j
		mov	eax, ebx
		call	sub_67DF5890
		jmp	loc_67DF720F
sub_67DF7020	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF73F0	proc near		; DATA XREF: .rdata:67E28948o

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= byte ptr  0Ch

		sub	esp, 4Ch
		mov	eax, 1
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_C], esi
		mov	esi, dword ptr [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_8], edi
		mov	edi, dword ptr [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_4], ebp
		cmp	[ebx+4Ch], esi
		jz	short loc_67DF7421
		xor	eax, eax
		cmp	esi, [ebx+50h]
		setz	al

loc_67DF7421:				; CODE XREF: sub_67DF73F0+27j
		mov	[esp+4Ch+var_4C], eax
		mov	ebp, edi
		mov	dword ptr [esp+4Ch+var_3C], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+Format], 383h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aWatchSocket_tr ; "watch == socket_transport->read_watch |"...
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	dword ptr [esp+4Ch+var_3C], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+Format], 384h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aWatchNull_2 ;	"watch != NULL"
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		and	ebp, 1
		jnz	short loc_67DF7487
		test	edi, 0Ch
		jnz	short loc_67DF7500

loc_67DF7487:				; CODE XREF: sub_67DF73F0+8Dj
					; sub_67DF73F0+121j
		mov	eax, [ebx+4Ch]
		cmp	eax, esi
		jz	loc_67DF7550

loc_67DF7492:				; CODE XREF: sub_67DF73F0+162j
		mov	edx, [ebx+50h]
		cmp	edx, esi
		jz	loc_67DF75F0

loc_67DF749D:				; CODE XREF: sub_67DF73F0+206j
		cmp	esi, eax
		jz	loc_67DF7682
		cmp	esi, edx
		jz	loc_67DF7650
		mov	[esp+4Ch+var_4C], esi
		call	dbus_watch_get_socket
		mov	dword ptr [esp+4Ch+var_3C], esi	; char
		mov	[esp+4Ch+Format], offset aAskedToHandleW ; "asked to handle watch %p on	fd %d that "...
		mov	[esp+4Ch+var_44], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 3CDh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_38], eax
		call	sub_67DFABC0
		mov	eax, 1

loc_67DF74E6:				; CODE XREF: sub_67DF73F0+158j
					; sub_67DF73F0+1CDj ...
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF7500:				; CODE XREF: sub_67DF73F0+95j
		mov	eax, [ebx+4Ch]
		cmp	esi, eax
		jz	short loc_67DF7517
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF7730
		test	eax, eax
		jnz	loc_67DF7487

loc_67DF7517:				; CODE XREF: sub_67DF73F0+115j
		mov	[esp+4Ch+Format], offset aHangUpOrErrorO ; "Hang up or error on	watch\n"
		mov	[esp+4Ch+var_44], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 38Ch ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67DF31A0
		mov	eax, 1
		jmp	short loc_67DF74E6
; ---------------------------------------------------------------------------
		align 10h

loc_67DF7550:				; CODE XREF: sub_67DF73F0+9Cj
		test	ebp, ebp
		jz	loc_67DF7492
		mov	[esp+4Ch+var_38], edi
		mov	dword ptr [esp+4Ch+var_3C], esi	; char
		mov	[esp+4Ch+Format], offset aHandlingReadWa ; "handling read watch	%p flags = %x\n"
		mov	[esp+4Ch+var_44], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 397h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+4Ch+var_20]
		xor	ecx, ecx
		mov	[esp+4Ch+var_4C], eax
		mov	edx, 1
		mov	eax, ebx
		call	sub_67DF6A20
		test	eax, eax
		jz	loc_67DF7648
		mov	ecx, [esp+4Ch+var_20]
		test	ecx, ecx
		jnz	loc_67DF76EA
		mov	eax, ebx
		call	sub_67DF5890
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jnz	loc_67DF74E6
		mov	[esp+4Ch+Format], offset aNoMemoryToRead ; "no memory to read\n"
		mov	[esp+4Ch+var_44], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 3A6h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		jmp	loc_67DF74E6
; ---------------------------------------------------------------------------
		align 10h

loc_67DF75F0:				; CODE XREF: sub_67DF73F0+A7j
		test	edi, 2
		jz	loc_67DF749D
		mov	eax, [ebx+8]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DC82A0
		mov	[esp+4Ch+Format], offset aHandlingWriteW ; "handling write watch, have_outgoing_mes"...
		mov	[esp+4Ch+var_44], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 3B4h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		xor	edx, edx
		mov	ecx, 1
		mov	eax, ebx
		mov	[esp+4Ch+var_4C], 0
		call	sub_67DF6A20
		test	eax, eax
		jnz	short loc_67DF76B4

loc_67DF7648:				; CODE XREF: sub_67DF73F0+1ABj
		xor	eax, eax
		jmp	loc_67DF74E6
; ---------------------------------------------------------------------------
		align 10h

loc_67DF7650:				; CODE XREF: sub_67DF73F0+B7j
		mov	dword ptr [esp+4Ch+var_3C], edi	; char
		mov	[esp+4Ch+Format], offset aAskedToHandl_0 ; "asked to handle write watch	with non-wr"...
		mov	[esp+4Ch+var_44], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 3CAh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		jmp	loc_67DF74E6
; ---------------------------------------------------------------------------

loc_67DF7682:				; CODE XREF: sub_67DF73F0+AFj
		mov	dword ptr [esp+4Ch+var_3C], edi	; char
		mov	[esp+4Ch+Format], offset aAskedToHandleR ; "asked to handle read watch with non-rea"...
		mov	[esp+4Ch+var_44], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 3C7h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		jmp	loc_67DF74E6
; ---------------------------------------------------------------------------

loc_67DF76B4:				; CODE XREF: sub_67DF73F0+256j
		mov	eax, ebx
		call	sub_67DF5CD0
		test	eax, eax
		jnz	short loc_67DF7718
		mov	[esp+4Ch+Format], offset aNoMemoryToWrit ; "no memory to write\n"
		mov	[esp+4Ch+var_44], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 3BBh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		jmp	loc_67DF74E6
; ---------------------------------------------------------------------------

loc_67DF76EA:				; CODE XREF: sub_67DF73F0+1B7j
		mov	[esp+4Ch+Format], offset aNotReadingAnyt ; "Not	reading	anything since we just comp"...
		mov	[esp+4Ch+var_44], offset aSocket_handl_0 ; "socket_handle_watch"
		mov	[esp+4Ch+var_48], 3ACh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_20 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1
		jmp	loc_67DF74E6
; ---------------------------------------------------------------------------

loc_67DF7718:				; CODE XREF: sub_67DF73F0+2CDj
		mov	eax, ebx
		call	sub_67DF5740
		mov	eax, 1
		jmp	loc_67DF74E6
sub_67DF73F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF7730	proc near		; CODE XREF: sub_67DF73F0+11Ap

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		movzx	eax, byte ptr [eax+20h]
		and	eax, 1
		retn
sub_67DF7730	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF7740	proc near		; CODE XREF: sub_67DF5090+AAp

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		add	dword ptr [eax], 1
		retn
sub_67DF7740	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF7750	proc near		; CODE XREF: sub_67DF61D0+4Ap
					; sub_67DF61D0+81p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax+4], 0FFFFFFFFh
		mov	dword ptr [eax+8], 0
		retn
sub_67DF7750	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF7770	proc near		; CODE XREF: sub_67DF5090+6Fp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	ecx, [esp+arg_0]
		mov	edx, [esp+arg_4]
		mov	eax, [ecx+8]
		test	al, 1
		jnz	short loc_67DF7785
		and	dword ptr [edx], 0FFFFFFFEh
		mov	eax, [ecx+8]

loc_67DF7785:				; CODE XREF: sub_67DF7770+Dj
		test	al, 2
		jnz	short locret_67DF778C
		and	dword ptr [edx], 0FFFFFFFDh

locret_67DF778C:			; CODE XREF: sub_67DF7770+17j
		rep retn
sub_67DF7770	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF7790	proc near		; CODE XREF: sub_67DF6110+25p
					; sub_67DF6110+47p

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_67DF77A7
		mov	edx, [ebx+10h]
		mov	[esp+1Ch+var_1C], edx
		call	eax

loc_67DF77A7:				; CODE XREF: sub_67DF7790+Dj
		mov	eax, [esp+1Ch+arg_4]
		mov	[ebx+0Ch], eax
		mov	eax, [esp+1Ch+arg_8]
		mov	[ebx+10h], eax
		mov	eax, [esp+1Ch+arg_C]
		mov	[ebx+14h], eax
		add	esp, 18h
		pop	ebx
		retn
sub_67DF7790	endp

; ---------------------------------------------------------------------------
		jmp	short dbus_watch_get_enabled
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 218. dbus_watch_get_enabled

; =============== S U B	R O U T	I N E =======================================


		public dbus_watch_get_enabled
dbus_watch_get_enabled proc near	; CODE XREF: sub_67DF5890+A3p
					; .text:67DF77C1j ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_watch_get ; "dbus_watch_get_enabled"
		mov	[esp+2Ch+var_20], 276h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_6 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DF7814
		movzx	eax, byte ptr [ebx+20h]
		and	eax, 1

loc_67DF780F:				; CODE XREF: dbus_watch_get_enabled+73j
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF7814:				; CODE XREF: dbus_watch_get_enabled+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 276h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aWatchNull ; "watch !=	NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_watch_get ; "dbus_watch_get_enabled"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DF780F
dbus_watch_get_enabled endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 217. dbus_watch_get_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_watch_get_data
dbus_watch_get_data proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_watch_g_0 ; "dbus_watch_get_data"
		mov	[esp+2Ch+var_20], 24Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_6 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DF7890
		mov	eax, [ebx+18h]

loc_67DF788B:				; CODE XREF: dbus_watch_get_data+6Fj
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF7890:				; CODE XREF: dbus_watch_get_data+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 24Ah
		mov	[esp+2Ch+var_20], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aWatchNull ; "watch !=	NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_watch_g_0 ; "dbus_watch_get_data"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	short loc_67DF788B
dbus_watch_get_data endp

; ---------------------------------------------------------------------------
		jmp	short dbus_watch_get_flags
; ---------------------------------------------------------------------------
		align 10h
; Exported entry 220. dbus_watch_get_flags

; =============== S U B	R O U T	I N E =======================================


		public dbus_watch_get_flags
dbus_watch_get_flags proc near		; CODE XREF: .text:67DF78C1j
					; sub_67DF7E20+54p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_watch_g_1 ; "dbus_watch_get_flags"
		mov	[esp+2Ch+var_20], 23Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_6 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DF7948
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_1C], offset aDbus_watch_g_1 ; "dbus_watch_get_flags"
		mov	[esp+2Ch+var_20], 23Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	edx, eax
		and	edx, 3
		cmp	eax, edx
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_28], offset aWatchFlagsVali ; "(watch->flags & VALID_WATCH_FLAGS) == w"...
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF7948:				; CODE XREF: dbus_watch_get_flags+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 23Ah
		mov	[esp+2Ch+var_20], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aWatchNull ; "watch !=	NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_watch_g_1 ; "dbus_watch_get_flags"
		call	sub_67DFB4E0
		xor	eax, eax
		add	esp, 28h
		pop	ebx
		retn
dbus_watch_get_flags endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 221. dbus_watch_get_socket

; =============== S U B	R O U T	I N E =======================================


		public dbus_watch_get_socket
dbus_watch_get_socket proc near		; CODE XREF: sub_67DEE790+143p
					; sub_67DF5090+57p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_watch_g_2 ; "dbus_watch_get_socket"
		mov	[esp+2Ch+var_20], 225h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_6 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DF79C0
		mov	eax, [ebx+4]

loc_67DF79BB:				; CODE XREF: dbus_watch_get_socket+72j
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF79C0:				; CODE XREF: dbus_watch_get_socket+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 225h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aWatchNull ; "watch !=	NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_watch_g_2 ; "dbus_watch_get_socket"
		call	sub_67DFB4E0
		mov	eax, 0FFFFFFFFh
		jmp	short loc_67DF79BB
dbus_watch_get_socket endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 222. dbus_watch_get_unix_fd

; =============== S U B	R O U T	I N E =======================================


		public dbus_watch_get_unix_fd
dbus_watch_get_unix_fd proc near	; CODE XREF: dbus_watch_get_fd+40j

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_watch_g_3 ; "dbus_watch_get_unix_fd"
		mov	[esp+2Ch+var_20], 208h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_6 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DF7A45
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	dbus_watch_get_socket
; ---------------------------------------------------------------------------

loc_67DF7A45:				; CODE XREF: dbus_watch_get_unix_fd+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 208h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aWatchNull ; "watch !=	NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_watch_g_3 ; "dbus_watch_get_unix_fd"
		call	sub_67DFB4E0
		mov	eax, 0FFFFFFFFh
		add	esp, 28h
		pop	ebx
		retn
dbus_watch_get_unix_fd endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 219. dbus_watch_get_fd

; =============== S U B	R O U T	I N E =======================================


		public dbus_watch_get_fd
dbus_watch_get_fd proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset aDbus_watch_g_4 ; "dbus_watch_get_fd"
		mov	[esp+2Ch+var_20], 1F3h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_6 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DF7AC5
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	dbus_watch_get_unix_fd
; ---------------------------------------------------------------------------

loc_67DF7AC5:				; CODE XREF: dbus_watch_get_fd+36j
		mov	eax, off_67E19014
		mov	[esp+2Ch+var_1C], 1F3h
		mov	[esp+2Ch+var_20], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aWatchNull ; "watch !=	NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_watch_g_4 ; "dbus_watch_get_fd"
		call	sub_67DFB4E0
		mov	eax, 0FFFFFFFFh
		add	esp, 28h
		pop	ebx
		retn
dbus_watch_get_fd endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 223. dbus_watch_handle

; =============== S U B	R O U T	I N E =======================================


		public dbus_watch_handle
dbus_watch_handle proc near

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_watch_han ; "dbus_watch_handle"
		mov	[esp+2Ch+Format], 296h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_6 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67DF7C03
		mov	edx, [ebx+4]
		test	edx, edx
		js	short loc_67DF7B4F
		mov	eax, [ebx+8]
		test	eax, eax
		jnz	short loc_67DF7B66

loc_67DF7B4F:				; CODE XREF: dbus_watch_handle+46j
		mov	[esp+2Ch+var_2C], offset aWatchIsInvalid ; "Watch is invalid, it should	have been r"...
		call	sub_67DFB4E0
		mov	eax, 1

loc_67DF7B60:				; CODE XREF: dbus_watch_handle+132j
					; dbus_watch_handle+169j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DF7B66:				; CODE XREF: dbus_watch_handle+4Dj
		mov	dword ptr [esp+2Ch+var_1C], offset aDbus_watch_han ; "dbus_watch_handle"
		mov	[esp+2Ch+Format], 2A0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_28], offset aConstChar_db_6 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	edx, [ebx+4]
		test	edx, edx
		js	loc_67DF7C37
		mov	eax, [ebx+8]
		test	al, 1
		jnz	short loc_67DF7BA7
		and	esi, 0FFFFFFFEh

loc_67DF7BA7:				; CODE XREF: dbus_watch_handle+A2j
		test	al, 2
		jnz	short loc_67DF7BAE
		and	esi, 0FFFFFFFDh

loc_67DF7BAE:				; CODE XREF: dbus_watch_handle+A9j
		test	esi, esi
		jz	short loc_67DF7BD0
		mov	eax, [ebx+10h]
		mov	dword ptr [esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_24], eax
		call	dword ptr [ebx+0Ch]
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF7BD0:				; CODE XREF: dbus_watch_handle+B0j
		mov	dword ptr [esp+2Ch+var_1C], edx	; char
		mov	[esp+2Ch+Format], offset aAfterSanitizat ; "After sanitization,	watch flags on fd %"...
		mov	[esp+2Ch+var_24], offset aDbus_watch_han ; "dbus_watch_handle"
		mov	dword ptr [esp+2Ch+var_28], 2A7h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DF7C03:				; CODE XREF: dbus_watch_handle+3Bj
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 296h
		mov	[esp+2Ch+Format], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aWatchNull ; "watch !=	NULL"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_watch_han ; "dbus_watch_handle"
		call	sub_67DFB4E0
		xor	eax, eax
		jmp	loc_67DF7B60
; ---------------------------------------------------------------------------

loc_67DF7C37:				; CODE XREF: dbus_watch_handle+97j
		mov	eax, off_67E19014
		mov	dword ptr [esp+2Ch+var_1C], 2A0h
		mov	[esp+2Ch+Format], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], offset aWatchFd0 ; "watch->fd	>= 0"
		mov	[esp+2Ch+var_2C], eax ;	char *
		mov	dword ptr [esp+2Ch+var_28], offset aDbus_watch_han ; "dbus_watch_handle"
		call	sub_67DFB4E0
		mov	eax, 1
		jmp	loc_67DF7B60
dbus_watch_handle endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 224. dbus_watch_set_data

; =============== S U B	R O U T	I N E =======================================


		public dbus_watch_set_data
dbus_watch_set_data proc near		; CODE XREF: sub_67DF7FF0+8Ap
					; sub_67DC8220+300C8p ...

var_5C		= dword	ptr -5Ch
var_58		= byte ptr -58h
var_54		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 5Ch
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_C], esi
		mov	esi, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_8], edi
		mov	edi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4], ebp
		mov	dword ptr [esp+5Ch+var_4C], offset aDbus_watch_set ; "dbus_watch_set_data"
		mov	[esp+5Ch+Format], 25Fh
		mov	[esp+5Ch+var_54], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+5Ch+var_58], offset aConstChar_db_6 ; "(*(const char*)_DBUS_FUNCTION_NAME) != "...
		mov	[esp+5Ch+var_5C], 1
		call	sub_67DFAE70
		test	ebx, ebx
		jz	short loc_67DF7D36
		mov	edx, [ebx+1Ch]
		mov	ebp, [ebx+18h]
		mov	[esp+5Ch+var_5C], ebx
		mov	[esp+5Ch+var_20], edx
		call	dbus_watch_get_socket
		mov	edx, [esp+5Ch+var_20]
		mov	[esp+5Ch+var_40], ebp
		mov	[esp+5Ch+var_44], esi
		mov	[esp+5Ch+var_48], edi
		mov	[esp+5Ch+var_3C], edx
		mov	[esp+5Ch+Format], offset aSettingWatchFd ; "Setting watch fd %d	data to	data = %p f"...
		mov	dword ptr [esp+5Ch+var_4C], eax	; char
		mov	[esp+5Ch+var_54], offset aDbus_watch_set ; "dbus_watch_set_data"
		mov	dword ptr [esp+5Ch+var_58], 263h ; int
		mov	[esp+5Ch+var_5C], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+1Ch]
		test	eax, eax
		jz	short loc_67DF7D1C
		mov	edx, [ebx+18h]
		mov	[esp+5Ch+var_5C], edx
		call	eax

loc_67DF7D1C:				; CODE XREF: dbus_watch_set_data+A2j
		mov	[ebx+18h], edi
		mov	[ebx+1Ch], esi

loc_67DF7D22:				; CODE XREF: dbus_watch_set_data+F3j
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_67DF7D36:				; CODE XREF: dbus_watch_set_data+4Dj
		mov	eax, off_67E19014
		mov	dword ptr [esp+5Ch+var_4C], 25Fh
		mov	[esp+5Ch+Format], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_54], offset aWatchNull ; "watch !=	NULL"
		mov	dword ptr [esp+5Ch+var_58], offset aDbus_watch_set ; "dbus_watch_set_data"
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	sub_67DFB4E0
		jmp	short loc_67DF7D22
dbus_watch_set_data endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF7D70	proc near		; CODE XREF: sub_67DCE390+A1j
					; DATA XREF: .text:67DED979o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		mov	[esp+2Ch+var_4], edi
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, dword ptr [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_8], esi
		mov	esi, [esp+2Ch+arg_0]
		test	edi, edi
		setnz	al
		movzx	edi, al
		movzx	eax, byte ptr [ebx+20h]
		mov	edx, eax
		and	edx, 1
		cmp	edx, edi
		jz	short loc_67DF7E10
		and	eax, 0FFFFFFFEh
		or	eax, edi
		mov	[ebx+20h], al
		mov	ecx, [esi+0Ch]
		test	ecx, ecx
		jz	short loc_67DF7E10
		mov	[esp+2Ch+var_2C], ebx
		and	edi, 0FFh
		call	dbus_watch_get_socket
		mov	[esp+2Ch+var_14], edi
		mov	dword ptr [esp+2Ch+var_1C], ebx	; char
		mov	[esp+2Ch+Format], offset aTogglingWatchP ; "Toggling watch %p on fd %d to %d\n"
		mov	[esp+2Ch+var_24], offset a_dbus_watch__2 ; "_dbus_watch_list_toggle_watch"
		mov	[esp+2Ch+var_28], 1B0h ; int
		mov	[esp+2Ch+var_18], eax
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esi+10h]
		mov	[esp+2Ch+arg_0], ebx
		mov	edi, [esp+2Ch+var_4]
		mov	ebx, [esp+2Ch+var_C]
		mov	dword ptr [esp+2Ch+arg_4], eax
		mov	eax, [esi+0Ch]
		mov	esi, [esp+2Ch+var_8]
		add	esp, 2Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_67DF7E10:				; CODE XREF: sub_67DF7D70+2Ej
					; sub_67DF7D70+3Dj
		mov	ebx, [esp+2Ch+var_C]
		mov	esi, [esp+2Ch+var_8]
		mov	edi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DF7D70	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DF7E20	proc near		; CODE XREF: dbus_connection_set_watch_functions+D9p
					; dbus_server_set_watch_functions+100p	...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, [esp+3Ch+arg_4]
		mov	edi, [esp+3Ch+arg_0]
		test	eax, eax
		jz	loc_67DF7F64
		mov	[esp+3Ch+var_3C], edi
		call	sub_67DFB910
		test	eax, eax
		mov	ebx, eax
		jnz	short loc_67DF7E5A
		jmp	loc_67DF7F64
; ---------------------------------------------------------------------------
		align 10h

loc_67DF7E50:				; CODE XREF: sub_67DF7E20+CBj
		test	esi, esi
		mov	ebx, esi
		jz	loc_67DF7F64

loc_67DF7E5A:				; CODE XREF: sub_67DF7E20+23j
		mov	esi, [ebx+4]
		xor	eax, eax
		mov	ebp, offset aReadwrite ; "readwrite"
		cmp	esi, [edi]
		setz	al
		sub	eax, 1
		and	esi, eax
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_3C], eax
		call	dbus_watch_get_flags
		mov	edx, eax
		and	edx, 3
		cmp	edx, 3
		jz	short loc_67DF7EA0
		test	al, 1
		mov	ebp, offset aRead ; "read"
		jnz	short loc_67DF7EA0
		test	al, 2
		mov	ebp, offset aWrite ; "write"
		jnz	short loc_67DF7EA0
		mov	ebp, offset aNotReadOrWrite ; "not read	or write"
		lea	esi, [esi+0]

loc_67DF7EA0:				; CODE XREF: sub_67DF7E20+61j
					; sub_67DF7E20+6Aj ...
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_3C], eax
		call	dbus_watch_get_socket
		mov	dword ptr [esp+3Ch+var_2C], ebp	; char
		mov	[esp+3Ch+Format], offset aAddingASWatchO ; "Adding a %s	watch on fd %d using newly-"...
		mov	[esp+3Ch+var_34], offset a_dbus_watch_li ; "_dbus_watch_list_set_functions"
		mov	[esp+3Ch+var_38], 128h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_28], eax
		call	sub_67DFABC0
		mov	eax, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [ebx+8]
		mov	[esp+3Ch+var_3C], eax
		call	[esp+3Ch+arg_4]
		test	eax, eax
		jnz	loc_67DF7E50
		mov	[esp+3Ch+var_3C], edi
		call	sub_67DFB910
		cmp	eax, ebx
		mov	esi, eax
		jz	short loc_67DF7F5A
		nop

loc_67DF7F00:				; CODE XREF: sub_67DF7E20+138j
		mov	ebp, [esi+4]
		xor	eax, eax
		cmp	ebp, [edi]
		setz	al
		sub	eax, 1
		and	ebp, eax
		mov	eax, [esi+8]
		mov	[esp+3Ch+var_3C], eax
		call	dbus_watch_get_socket
		mov	[esp+3Ch+Format], offset aRemovingWatchO ; "Removing watch on fd %d using newly-set"...
		mov	[esp+3Ch+var_34], offset a_dbus_watch_li ; "_dbus_watch_list_set_functions"
		mov	[esp+3Ch+var_38], 138h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_2C], eax	; char
		call	sub_67DFABC0
		mov	eax, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_38], eax
		mov	eax, [esi+8]
		mov	esi, ebp
		mov	[esp+3Ch+var_3C], eax
		call	[esp+3Ch+arg_8]
		cmp	ebp, ebx
		jnz	short loc_67DF7F00

loc_67DF7F5A:				; CODE XREF: sub_67DF7E20+DDj
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DF7F64:				; CODE XREF: sub_67DF7E20+11j
					; sub_67DF7E20+25j ...
		mov	ebp, [edi+8]
		test	ebp, ebp
		jz	short loc_67DF7FA5
		mov	[esp+3Ch+Format], offset aRemovingAllPre ; "Removing all pre-existing watches\n"
		mov	[esp+3Ch+var_34], offset a_dbus_watch_li ; "_dbus_watch_list_set_functions"
		mov	[esp+3Ch+var_38], 14Ah ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [edi+10h]
		mov	[esp+3Ch+var_34], eax
		mov	eax, [edi+8]
		mov	[esp+3Ch+var_3C], edi
		mov	[esp+3Ch+var_38], eax
		call	sub_67DFB9D0

loc_67DF7FA5:				; CODE XREF: sub_67DF7E20+149j
		mov	eax, [edi+14h]
		test	eax, eax
		jz	short loc_67DF7FB4
		mov	edx, [edi+10h]
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DF7FB4:				; CODE XREF: sub_67DF7E20+18Aj
		mov	eax, [esp+3Ch+arg_4]
		mov	[edi+4], eax
		mov	eax, [esp+3Ch+arg_8]
		mov	[edi+8], eax
		mov	eax, [esp+3Ch+arg_C]
		mov	[edi+0Ch], eax
		mov	eax, [esp+3Ch+arg_10]
		mov	[edi+10h], eax
		mov	eax, [esp+3Ch+arg_14]
		mov	[edi+14h], eax
		add	esp, 2Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DF7E20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF7FF0	proc near		; CODE XREF: sub_67DEDCF0+CAp
					; sub_67DEE5E0+2Ap ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_watch_un ; "_dbus_watch_unref"
		mov	[esp+2Ch+var_20], 7Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aWatchNull ; "watch !=	NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_watch_un ; "_dbus_watch_unref"
		mov	[esp+2Ch+var_20], 7Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWatchRefcount0 ; "watch->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DF8067
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DF8067:				; CODE XREF: sub_67DF7FF0+70j
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_watch_set_data
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_67DF808E
		mov	edx, [ebx+10h]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF808E:				; CODE XREF: sub_67DF7FF0+94j
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	dbus_free
sub_67DF7FF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF80A0	proc near		; CODE XREF: sub_67DCCE40+7p
					; sub_67DED4C0+1EEp ...

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		mov	[esp+1Ch+var_1C], 18h ;	size_t
		call	dbus_malloc0
		add	esp, 1Ch
		retn
sub_67DF80A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF80C0	proc near		; CODE XREF: sub_67DEDCF0+B0p
					; sub_67DF5480+80p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_watch_ne ; "_dbus_watch_new"
		mov	[esp+2Ch+var_20], 55h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	eax, ebx
		and	eax, 3
		cmp	eax, ebx
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aFlagsValid_wat ; "(flags & VALID_WATCH_FLAGS)	== flags"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], 24h ;	size_t
		call	dbus_malloc0
		test	eax, eax
		jz	short loc_67DF8145
		mov	dword ptr [eax], 1
		mov	edx, [esp+2Ch+arg_0]
		mov	[eax+8], ebx
		mov	[eax+4], edx
		movzx	edx, byte ptr [eax+20h]
		mov	ecx, [esp+2Ch+arg_8]
		and	edx, 0FFFFFFFEh
		and	ecx, 1
		or	edx, ecx
		mov	[eax+20h], dl
		mov	edx, [esp+2Ch+arg_C]
		mov	[eax+0Ch], edx
		mov	edx, [esp+2Ch+arg_10]
		mov	[eax+10h], edx
		mov	edx, [esp+2Ch+arg_14]
		mov	[eax+14h], edx

loc_67DF8145:				; CODE XREF: sub_67DF80C0+4Bj
		add	esp, 28h
		pop	ebx
		retn
sub_67DF80C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF8150	proc near		; CODE XREF: sub_67DCCE40+3CCp
					; sub_67DCDAC0+146p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
Format		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		mov	edx, [ebx+8]
		test	edx, edx
		jz	short loc_67DF8199
		mov	[esp+1Ch+Format], offset aRemovingAllPre ; "Removing all pre-existing watches\n"
		mov	[esp+1Ch+var_14], offset a_dbus_watch_li ; "_dbus_watch_list_set_functions"
		mov	[esp+1Ch+var_18], 14Ah ; int
		mov	[esp+1Ch+var_1C], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [ebx+10h]
		mov	[esp+1Ch+var_14], eax
		mov	eax, [ebx+8]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], eax
		call	sub_67DFB9D0

loc_67DF8199:				; CODE XREF: sub_67DF8150+Dj
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_67DF81A8
		mov	edx, [ebx+10h]
		mov	[esp+1Ch+var_1C], edx
		call	eax

loc_67DF81A8:				; CODE XREF: sub_67DF8150+4Ej
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [ebx+0Ch], 0
		mov	dword ptr [ebx+10h], 0
		mov	dword ptr [ebx+14h], 0
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_14], 0
		mov	[esp+1Ch+var_18], offset sub_67DF7FF0
		call	sub_67DFB9D0
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67DFBC90
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	dbus_free
sub_67DF8150	endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_67DC8220

loc_67DF8200:				; CODE XREF: sub_67DC8220+62j
					; DATA XREF: sub_67DED9A0+51o
		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], ebx
		call	sub_67DFBBE0
		test	eax, eax
		jz	loc_67DF830A
		mov	ecx, [esi+8]
		test	ecx, ecx
		jz	short loc_67DF8265
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_watch_get_socket
		mov	[esp+2Ch+Format], offset aRemovingWatc_0 ; "Removing watch on fd %d\n"
		mov	[esp+2Ch+var_24], offset a_dbus_watch__0 ; "_dbus_watch_list_remove_watch"
		mov	[esp+2Ch+var_28], 190h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		call	sub_67DFABC0
		mov	eax, [esi+10h]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], eax
		call	dword ptr [esi+8]

loc_67DF8265:				; CODE XREF: sub_67DC8220+30006j
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_watch_un ; "_dbus_watch_unref"
		mov	[esp+2Ch+Format], 7Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWatchNull ; "watch !=	NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_watch_un ; "_dbus_watch_unref"
		mov	[esp+2Ch+Format], 7Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWatchRefcount0 ; "watch->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jz	short loc_67DF82D5
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DF82D5:				; CODE XREF: sub_67DC8220+300ADj
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_watch_set_data
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_67DF82FC
		mov	edx, [ebx+10h]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF82FC:				; CODE XREF: sub_67DC8220+300D2j
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67DF830A:				; CODE XREF: sub_67DC8220+2FFFBj
		mov	[esp+2Ch+var_24], 18Bh
		mov	[esp+2Ch+var_28], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_2C], offset aNonexistentWat ; "Nonexistent	watch was removed"
		call	sub_67DFAE30
; END OF FUNCTION CHUNK	FOR sub_67DC8220
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF8330	proc near		; CODE XREF: sub_67DCDFB0+62j
					; .text:67E14544p
					; DATA XREF: ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

; FUNCTION CHUNK AT 67DF83B0 SIZE 000000A9 BYTES

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_28], ebx
		call	sub_67DFBB80
		test	eax, eax
		jz	short loc_67DF83A3
		mov	eax, [esi+4]
		add	dword ptr [ebx], 1
		test	eax, eax
		jz	short loc_67DF8398
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_watch_get_socket
		mov	[esp+2Ch+Format], offset aAddingWatchOnF ; "Adding watch on fd %d\n"
		mov	[esp+2Ch+var_24], offset a_dbus_watch__1 ; "_dbus_watch_list_add_watch"
		mov	[esp+2Ch+var_28], 171h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		call	sub_67DFABC0
		mov	eax, [esi+10h]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], eax
		call	dword ptr [esi+4]
		test	eax, eax
		jz	short loc_67DF83B0

loc_67DF8398:				; CODE XREF: sub_67DF8330+25j
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DF83A3:				; CODE XREF: sub_67DF8330+1Bj
					; sub_67DF8330+F1j
		xor	eax, eax

loc_67DF83A5:				; CODE XREF: sub_67DF8330+124j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DF8330	endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_67DF8330

loc_67DF83B0:				; CODE XREF: sub_67DF8330+66j
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], esi
		call	sub_67DFC110
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_watch_un ; "_dbus_watch_unref"
		mov	[esp+2Ch+Format], 7Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWatchNull ; "watch !=	NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_watch_un ; "_dbus_watch_unref"
		mov	[esp+2Ch+Format], 7Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_21 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aWatchRefcount0 ; "watch->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jnz	short loc_67DF83A3
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_watch_set_data
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_67DF844A
		mov	edx, [ebx+10h]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF844A:				; CODE XREF: sub_67DF8330+110j
		mov	[esp+2Ch+var_2C], ebx
		call	dbus_free
		xor	eax, eax
		jmp	loc_67DF83A5
; END OF FUNCTION CHUNK	FOR sub_67DF8330
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF8460	proc near		; CODE XREF: sub_67DF33B0+15Dp
					; DATA XREF: .rdata:off_67E27DE4o

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 4Ch
		mov	[esp+4Ch+var_C], esi
		mov	esi, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_8], edi
		mov	edi, offset aNonceTcp_3	; "nonce-tcp"
		mov	[esp+4Ch+var_4], ebp
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], offset aHost_2 ; "host"
		call	dbus_address_entry_get_value
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], offset aPort_3 ; "port"
		mov	[esp+4Ch+var_20], eax
		call	dbus_address_entry_get_value
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], offset aFamily_3 ; "family"
		mov	ebp, eax
		call	dbus_address_entry_get_value
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_48], offset aNoncefile_3 ;	"noncefile"
		mov	[esp+4Ch+var_24], eax
		call	dbus_address_entry_get_value
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_28], eax
		call	dbus_address_entry_get_method
		mov	[esp+4Ch+var_3C], offset a_dbus_trans_14 ; "_dbus_transport_open_platform_specific"
		mov	[esp+4Ch+var_40], 3Eh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_22 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aMethodNull_2 ; "method != NULL"
		mov	esi, eax
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	ecx, 0Ah
		repe cmpsb
		jz	short loc_67DF8568
		test	ebx, ebx
		jz	loc_67DF85F0
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DF85F0

loc_67DF852A:				; CODE XREF: sub_67DF8460+195j
		mov	[esp+4Ch+var_3C], offset a_dbus_trans_14 ; "_dbus_transport_open_platform_specific"
		mov	[esp+4Ch+var_40], 42h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_22 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aErrorNullDb_19 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		xor	eax, eax

loc_67DF8554:				; CODE XREF: sub_67DF8460+186j
					; sub_67DF8460+1C5j ...
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------

loc_67DF8568:				; CODE XREF: sub_67DF8460+AEj
		test	ebp, ebp
		jz	loc_67DF8600
		mov	eax, [esp+4Ch+var_28]
		mov	[esp+4Ch+var_3C], ebx ;	int
		mov	[esp+4Ch+var_48], ebp ;	char *
		mov	[esp+4Ch+var_40], eax ;	char *
		mov	eax, [esp+4Ch+var_24]
		mov	[esp+4Ch+var_44], eax ;	char *
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	sub_67DF63C0
		mov	edx, [esp+4Ch+arg_4]
		test	eax, eax
		mov	[edx], eax
		jz	loc_67DF8630
		test	ebx, ebx
		jz	short loc_67DF85B4
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DF85B9

loc_67DF85B4:				; CODE XREF: sub_67DF8460+144j
		mov	edx, 1

loc_67DF85B9:				; CODE XREF: sub_67DF8460+152j
		mov	[esp+4Ch+var_3C], offset a_dbus_trans_14 ; "_dbus_transport_open_platform_specific"
		mov	[esp+4Ch+var_40], 54h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_22 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aErrorNullDb_19 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		mov	eax, 1
		jmp	loc_67DF8554
; ---------------------------------------------------------------------------
		align 10h

loc_67DF85F0:				; CODE XREF: sub_67DF8460+B2j
					; sub_67DF8460+C4j
		mov	edx, 1
		jmp	loc_67DF852A
; ---------------------------------------------------------------------------
		align 10h

loc_67DF8600:				; CODE XREF: sub_67DF8460+10Aj
		mov	[esp+4Ch+var_40], 0 ; char
		mov	[esp+4Ch+var_44], offset aPort_3 ; "port"
		mov	[esp+4Ch+var_48], offset aNonceTcp_3 ; "nonce-tcp"
		mov	[esp+4Ch+var_4C], ebx ;	int
		call	sub_67DC14A0
		mov	eax, 2
		jmp	loc_67DF8554
; ---------------------------------------------------------------------------
		align 10h

loc_67DF8630:				; CODE XREF: sub_67DF8460+13Cj
		test	ebx, ebx
		jz	short loc_67DF8674
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DF8674

loc_67DF8642:				; CODE XREF: sub_67DF8460+219j
		mov	[esp+4Ch+var_3C], offset a_dbus_trans_14 ; "_dbus_transport_open_platform_specific"
		mov	[esp+4Ch+var_40], 4Fh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_22 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aErrorNullDb_20 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+4Ch+var_4C], edx
		call	sub_67DFAE70
		mov	eax, 3
		jmp	loc_67DF8554
; ---------------------------------------------------------------------------

loc_67DF8674:				; CODE XREF: sub_67DF8460+1D2j
					; sub_67DF8460+1E0j
		mov	edx, 1
		jmp	short loc_67DF8642
sub_67DF8460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF8680	proc near		; CODE XREF: dbus_server_listen+150p

Str		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 4Ch
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_8], edi
		mov	edi, offset aNonceTcp_4	; "nonce-tcp"
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_8]
		mov	dword ptr [eax], 0
		mov	[esp+4Ch+Str], ebx
		call	dbus_address_entry_get_method
		mov	ecx, 0Ah
		mov	esi, eax
		repe cmpsb
		jz	loc_67DF8801
		mov	edi, offset aAutolaunch_0 ; "autolaunch"
		mov	ecx, 0Bh
		mov	esi, eax
		repe cmpsb
		jz	short loc_67DF8730
		test	ebp, ebp
		jz	loc_67DF87F7
		mov	[esp+4Ch+Str], ebp
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DF87F7

loc_67DF86EB:				; CODE XREF: sub_67DF8680+17Cj
		mov	[esp+4Ch+var_3C], offset a_dbus_server_2 ; "_dbus_server_listen_platform_specific"
		mov	[esp+4Ch+var_40], 74h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_23 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aErrorNullDb_21 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+4Ch+Str], edx
		call	sub_67DFAE70
		xor	eax, eax

loc_67DF8715:				; CODE XREF: sub_67DF8680+D3j
					; sub_67DF8680+172j ...
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF8730:				; CODE XREF: sub_67DF8680+4Fj
		mov	[esp+4Ch+Str], ebx
		mov	[esp+4Ch+var_48], offset aScope_0 ; "scope"
		call	dbus_address_entry_get_value
		mov	ebx, eax
		mov	[esp+4Ch+Str], eax ; char *
		call	sub_67E0F640
		mov	edx, eax
		mov	eax, 4
		test	edx, edx
		jnz	short loc_67DF8715
		mov	[esp+4Ch+var_38], 0 ; int
		mov	[esp+4Ch+var_3C], ebp ;	int
		mov	[esp+4Ch+var_40], offset aIpv4 ; "ipv4"
		mov	[esp+4Ch+var_44], offset a0_0 ;	"0"
		mov	[esp+4Ch+var_48], offset aLocalhost_1 ;	"localhost"
		mov	[esp+4Ch+Str], offset aLocalhost_1 ; "localhost"
		call	sub_67DEDF60
		mov	edx, [esp+4Ch+arg_4]
		test	eax, eax
		mov	[edx], eax
		jz	loc_67DF8927
		test	ebp, ebp
		jz	loc_67DF8910
		mov	[esp+4Ch+Str], ebp
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67DF8910

loc_67DF87AD:				; CODE XREF: sub_67DF8680+295j
		mov	[esp+4Ch+Str], edx
		mov	[esp+4Ch+var_3C], offset a_dbus_server_2 ; "_dbus_server_listen_platform_specific"
		mov	[esp+4Ch+var_40], 65h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_23 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aErrorNullDb_21 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	eax, [esp+4Ch+arg_4]
		mov	esi, [eax]
		mov	[esp+4Ch+var_48], ebx ;	char *
		mov	eax, [esi+38h]
		mov	[esp+4Ch+Str], eax ; Str
		call	sub_67E10330
		mov	[esi+3Ch], eax
		mov	eax, 1
		jmp	loc_67DF8715
; ---------------------------------------------------------------------------

loc_67DF87F7:				; CODE XREF: sub_67DF8680+53j
					; sub_67DF8680+65j
		mov	edx, 1
		jmp	loc_67DF86EB
; ---------------------------------------------------------------------------

loc_67DF8801:				; CODE XREF: sub_67DF8680+3Bj
		mov	[esp+4Ch+var_48], offset aHost_3 ; "host"
		mov	[esp+4Ch+Str], ebx
		call	dbus_address_entry_get_value
		mov	[esp+4Ch+var_48], offset aBind_0 ; "bind"
		mov	[esp+4Ch+Str], ebx
		mov	[esp+4Ch+var_20], eax
		call	dbus_address_entry_get_value
		mov	[esp+4Ch+var_48], offset aPort_4 ; "port"
		mov	[esp+4Ch+Str], ebx
		mov	esi, eax
		call	dbus_address_entry_get_value
		mov	[esp+4Ch+var_48], offset aFamily_4 ; "family"
		mov	[esp+4Ch+Str], ebx
		mov	edi, eax
		call	dbus_address_entry_get_value
		mov	edx, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_38], 1 ; int
		mov	[esp+4Ch+var_3C], ebp ;	int
		mov	[esp+4Ch+var_44], edi ;	char *
		mov	[esp+4Ch+Str], edx ; char *
		mov	[esp+4Ch+var_48], esi ;	char
		mov	[esp+4Ch+var_40], eax ;	char *
		call	sub_67DEDF60
		mov	edx, [esp+4Ch+arg_4]
		test	eax, eax
		mov	[edx], eax
		jz	short loc_67DF88C7
		test	ebp, ebp
		jz	short loc_67DF88C0
		mov	[esp+4Ch+Str], ebp
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DF88C0

loc_67DF8889:				; CODE XREF: sub_67DF8680+245j
		mov	[esp+4Ch+var_3C], offset a_dbus_server_2 ; "_dbus_server_listen_platform_specific"
		mov	[esp+4Ch+var_40], 4Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_23 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aErrorNullDb_21 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+4Ch+Str], edx
		call	sub_67DFAE70
		mov	eax, 1
		jmp	loc_67DF8715
; ---------------------------------------------------------------------------
		align 10h

loc_67DF88C0:				; CODE XREF: sub_67DF8680+1F9j
					; sub_67DF8680+207j
		mov	edx, 1
		jmp	short loc_67DF8889
; ---------------------------------------------------------------------------

loc_67DF88C7:				; CODE XREF: sub_67DF8680+1F5j
		test	ebp, ebp
		jz	short loc_67DF8920
		mov	[esp+4Ch+Str], ebp
		xchg	ax, ax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DF8920

loc_67DF88DB:				; CODE XREF: sub_67DF8680+2A5j
		mov	[esp+4Ch+var_3C], offset a_dbus_server_2 ; "_dbus_server_listen_platform_specific"
		mov	[esp+4Ch+var_40], 52h

loc_67DF88EB:				; CODE XREF: sub_67DF8680+2D0j
		mov	[esp+4Ch+var_44], offset aRBuildWin32_23 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aErrorNullDb_22 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+4Ch+Str], edx
		call	sub_67DFAE70
		mov	eax, 3
		jmp	loc_67DF8715
; ---------------------------------------------------------------------------
		align 10h

loc_67DF8910:				; CODE XREF: sub_67DF8680+115j
					; sub_67DF8680+127j
		mov	edx, 1
		jmp	loc_67DF87AD
; ---------------------------------------------------------------------------
		align 10h

loc_67DF8920:				; CODE XREF: sub_67DF8680+249j
					; sub_67DF8680+259j
		mov	edx, 1
		jmp	short loc_67DF88DB
; ---------------------------------------------------------------------------

loc_67DF8927:				; CODE XREF: sub_67DF8680+10Dj
		call	sub_67E0F1A0
		test	ebp, ebp
		xchg	ax, ax
		jz	short loc_67DF8952
		mov	[esp+4Ch+Str], ebp
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67DF8952

loc_67DF8940:				; CODE XREF: sub_67DF8680+2D7j
		mov	[esp+4Ch+var_3C], offset a_dbus_server_2 ; "_dbus_server_listen_platform_specific"
		mov	[esp+4Ch+var_40], 6Eh
		jmp	short loc_67DF88EB
; ---------------------------------------------------------------------------

loc_67DF8952:				; CODE XREF: sub_67DF8680+2B0j
					; sub_67DF8680+2BEj
		mov	edx, 1
		jmp	short loc_67DF8940
sub_67DF8680	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+0Ch], 0
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF8990	proc near		; CODE XREF: sub_67DCCE40+1BCp
					; sub_67DE0E70+2ACp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0
		retn
sub_67DF8990	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF89B0	proc near		; CODE XREF: dbus_message_unref+15Cp

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [esp+1Ch+arg_0]
		mov	eax, [esi+4]
		test	eax, eax
		jle	short loc_67DF89F8
		xor	ebx, ebx

loc_67DF89C3:				; CODE XREF: sub_67DF89B0+46j
		mov	eax, [esi]
		lea	edi, ds:0[ebx*8]
		add	eax, edi
		mov	edx, [eax+4]
		test	edx, edx
		jz	short loc_67DF89E0
		mov	eax, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	edx
		mov	eax, [esi]
		add	eax, edi

loc_67DF89E0:				; CODE XREF: sub_67DF89B0+23j
		mov	dword ptr [eax], 0
		mov	eax, [esi]
		add	ebx, 1
		cmp	[esi+4], ebx
		mov	dword ptr [eax+edi+4], 0
		jg	short loc_67DF89C3

loc_67DF89F8:				; CODE XREF: sub_67DF89B0+Fj
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DF89B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF8A00	proc near		; CODE XREF: dbus_connection_get_data+5Ap
					; dbus_message_get_data+4Ep ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_8]
		mov	edi, [esp+2Ch+arg_4]
		mov	eax, [esi+0Ch]
		mov	eax, [eax]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_data_slo ; "_dbus_data_slot_list_get"
		mov	[esp+2Ch+var_20], 134h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSlot0_2 ; "slot >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_data_slo ; "_dbus_data_slot_list_get"
		mov	[esp+2Ch+var_20], 135h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSlotAllocatorN ; "slot < allocator->n_allocated_slots"
		cmp	[esi+4], ebx
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_data_slo ; "_dbus_data_slot_list_get"
		mov	[esp+2Ch+var_20], 136h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAllocatorAlloc ; "allocator->allocated_slots[slot].slot_i"...
		mov	eax, [esi]
		cmp	[eax+ebx*8], ebx
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esi+0Ch]
		mov	eax, [eax]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		xor	eax, eax
		cmp	ebx, [edi+4]
		jge	short loc_67DF8ACA
		mov	eax, [edi]
		mov	eax, [eax+ebx*8]

loc_67DF8ACA:				; CODE XREF: sub_67DF8A00+C3j
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DF8A00	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DF8AE0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF8AE0	proc near		; CODE XREF: dbus_connection_set_data+AEp
					; dbus_message_set_data+A3p ...

Memory		= dword	ptr -4Ch
NewSize		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	esi, [esp+4Ch+arg_8]
		mov	edi, [esp+4Ch+arg_4]
		mov	eax, [ebx+0Ch]
		mov	eax, [eax]
		mov	[esp+4Ch+Memory], eax
		call	sub_67DF1A90
		xor	eax, eax
		mov	[esp+4Ch+var_3C], offset a_dbus_data_s_0 ; "_dbus_data_slot_list_set"
		mov	[esp+4Ch+var_40], 0FBh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aSlotAllocatorN ; "slot < allocator->n_allocated_slots"
		cmp	[ebx+4], esi
		setnle	al
		mov	[esp+4Ch+Memory], eax
		call	sub_67DFAE70
		lea	eax, ds:0[esi*8]
		mov	[esp+4Ch+var_3C], offset a_dbus_data_s_0 ; "_dbus_data_slot_list_set"
		mov	[esp+4Ch+var_40], 0FCh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aAllocatorAlloc ; "allocator->allocated_slots[slot].slot_i"...
		mov	[esp+4Ch+var_20], eax
		mov	eax, [ebx]
		cmp	[eax+esi*8], esi
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+Memory], eax
		call	sub_67DFAE70
		mov	eax, [ebx+0Ch]
		mov	eax, [eax]
		mov	[esp+4Ch+Memory], eax
		call	sub_67DF1AD0
		mov	ebx, [edi+4]
		cmp	esi, ebx
		jl	short loc_67DF8BDD
		lea	ebx, [esi+1]
		lea	eax, ds:0[ebx*8]
		mov	[esp+4Ch+NewSize], eax ; NewSize
		mov	eax, [edi]
		mov	[esp+4Ch+Memory], eax ;	Memory
		call	dbus_realloc
		xor	edx, edx
		test	eax, eax
		jz	loc_67DF8C3D
		mov	edx, [edi+4]
		mov	[edi], eax
		mov	[edi+4], ebx
		cmp	ebx, edx
		jle	short loc_67DF8BDD
		lea	ecx, ds:0[edx*8]
		mov	ebp, ecx
		add	ebp, eax
		add	ebp, 4
		jmp	short loc_67DF8BC2
; ---------------------------------------------------------------------------

loc_67DF8BC0:				; CODE XREF: sub_67DF8AE0+FBj
		mov	eax, [edi]

loc_67DF8BC2:				; CODE XREF: sub_67DF8AE0+DEj
		add	edx, 1
		mov	dword ptr [eax+ecx], 0
		add	ecx, 8
		mov	dword ptr [ebp+0], 0
		add	ebp, 8
		cmp	ebx, edx
		jg	short loc_67DF8BC0

loc_67DF8BDD:				; CODE XREF: sub_67DF8AE0+A0j
					; sub_67DF8AE0+CEj
		xor	eax, eax
		cmp	ebx, esi
		setnle	al
		mov	[esp+4Ch+Memory], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_data_s_0 ; "_dbus_data_slot_list_set"
		mov	[esp+4Ch+var_40], 115h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aSlotListN_slot ; "slot < list->n_slots"
		call	sub_67DFAE70
		mov	eax, [edi]
		mov	edx, [esp+4Ch+arg_18]
		mov	ecx, [eax+esi*8]
		mov	[edx], ecx
		mov	edx, [esp+4Ch+var_20]
		mov	ecx, [eax+edx+4]
		mov	edx, [esp+4Ch+arg_14]
		mov	[edx], ecx
		mov	edx, [esp+4Ch+arg_C]
		mov	ecx, [esp+4Ch+var_20]
		mov	[eax+esi*8], edx
		mov	edx, [esp+4Ch+arg_10]
		mov	[eax+ecx+4], edx
		mov	edx, 1

loc_67DF8C3D:				; CODE XREF: sub_67DF8AE0+BEj
		add	esp, 3Ch
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DF8AE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF8C50	proc near		; CODE XREF: dbus_connection_free_data_slot+45p
					; dbus_message_free_data_slot+45p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
Format		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, [ebx+0Ch]
		mov	eax, [eax]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_data_s_1 ; "_dbus_data_slot_allocator_free"
		mov	[esp+2Ch+Format], 0AAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSlot_id_pAlloc ; "*slot_id_p < allocator->n_allocated_slo"...
		mov	eax, [esi]
		cmp	eax, [ebx+4]
		setl	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esi]
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_data_s_1 ; "_dbus_data_slot_allocator_free"
		mov	[esp+2Ch+Format], 0ABh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAllocatorAll_0 ; "allocator->allocated_slots[*slot_id_p]."...
		mov	edx, [ebx]
		cmp	eax, [edx+eax*8]
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+2Ch+var_1C], offset a_dbus_data_s_1 ; "_dbus_data_slot_allocator_free"
		mov	[esp+2Ch+Format], 0ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAllocatorAll_1 ; "allocator->allocated_slots[*slot_id_p]."...
		mov	edx, [esi]
		mov	eax, [ebx]
		mov	ecx, [eax+edx*8+4]
		test	ecx, ecx
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esi]
		mov	edx, [ebx]
		shl	eax, 3
		add	eax, [ebx]
		sub	dword ptr [eax+4], 1
		mov	eax, [esi]
		mov	edx, [edx+eax*8+4]
		test	edx, edx
		jle	short loc_67DF8D34

loc_67DF8D21:				; CODE XREF: sub_67DF8C50+13Aj
		mov	eax, [ebx+0Ch]
		mov	eax, [eax]
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------

loc_67DF8D34:				; CODE XREF: sub_67DF8C50+CFj
		mov	edx, [ebx+8]
		mov	[esp+2Ch+var_10], edx
		mov	edx, [ebx+4]
		mov	dword ptr [esp+2Ch+var_1C], eax	; char
		mov	[esp+2Ch+var_18], ebx
		mov	[esp+2Ch+Format], offset aFreeingSlotDOn ; "Freeing slot %d on allocator %p total %"...
		mov	[esp+2Ch+var_14], edx
		mov	[esp+2Ch+var_24], offset a_dbus_data_s_1 ; "_dbus_data_slot_allocator_free"
		mov	[esp+2Ch+var_28], 0B8h ; int
		mov	[esp+2Ch+var_2C], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esi]
		mov	edx, [ebx]
		mov	dword ptr [edx+eax*8], 0FFFFFFFFh
		mov	dword ptr [esi], 0FFFFFFFFh
		mov	eax, [ebx+8]
		sub	eax, 1
		test	eax, eax
		mov	[ebx+8], eax
		jnz	short loc_67DF8D21
		mov	esi, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], edx
		call	dbus_free
		mov	dword ptr [ebx], 0
		mov	eax, [esi]
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx+0Ch], 0
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	sub_67DF1AD0
sub_67DF8C50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF8DC0	proc near		; CODE XREF: dbus_connection_allocate_data_slot+1Ap
					; dbus_message_allocate_data_slot+1Ap ...

Memory		= dword	ptr -4Ch
NewSize		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [esp+4Ch+arg_4]
		mov	ebx, [esp+4Ch+arg_0]
		mov	eax, [esi]
		mov	[esp+4Ch+Memory], eax
		call	sub_67DF1A90
		mov	edi, [ebx+4]
		test	edi, edi
		jz	loc_67DF9080
		cmp	[ebx+0Ch], esi
		jnz	loc_67DF9130

loc_67DF8DED:				; CODE XREF: sub_67DF8DC0+2F4j
		mov	eax, [esp+4Ch+arg_8]
		mov	esi, [eax]
		test	esi, esi
		js	loc_67DF8E90
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		xor	eax, eax
		mov	[esp+4Ch+Format], 5Ch
		lea	edi, ds:0[esi*8]
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aSlotAllocatorN ; "slot < allocator->n_allocated_slots"
		cmp	esi, [ebx+4]
		setl	al
		mov	[esp+4Ch+Memory], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		mov	[esp+4Ch+Format], 5Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aAllocatorAlloc ; "allocator->allocated_slots[slot].slot_i"...
		mov	eax, [ebx]
		cmp	esi, [eax+esi*8]
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+Memory], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		add	eax, edi
		mov	edi, 1
		add	dword ptr [eax+4], 1

loc_67DF8E72:				; CODE XREF: sub_67DF8DC0+2B9j
					; sub_67DF8DC0+339j
		mov	eax, [ebx+0Ch]
		mov	eax, [eax]
		mov	[esp+4Ch+Memory], eax
		call	sub_67DF1AD0
		add	esp, 3Ch
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF8E90:				; CODE XREF: sub_67DF8DC0+35j
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		mov	[esp+4Ch+Format], 64h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aSlot_id_p0 ;	"*slot_id_p < 0"
		mov	[esp+4Ch+Memory], 1
		call	sub_67DFAE70
		mov	edi, [ebx+4]
		cmp	[ebx+8], edi
		jge	loc_67DF90E0
		xor	ebp, ebp
		xor	esi, esi
		test	edi, edi
		jle	short loc_67DF8F14
		mov	edx, [ebx]
		mov	ecx, [edx]
		mov	eax, edx
		mov	[esp+4Ch+var_20], edx
		test	ecx, ecx
		js	loc_67DF912C
		add	edx, 8
		xor	esi, esi
		jmp	short loc_67DF8F06
; ---------------------------------------------------------------------------
		align 10h

loc_67DF8EF0:				; CODE XREF: sub_67DF8DC0+14Bj
		mov	ecx, [edx]
		mov	eax, edx
		lea	ebp, ds:0[esi*8]
		lea	edx, [edx+8]
		test	ecx, ecx
		js	loc_67DF90C0

loc_67DF8F06:				; CODE XREF: sub_67DF8DC0+127j
		add	esi, 1
		cmp	edi, esi
		jg	short loc_67DF8EF0
		lea	ebp, ds:0[esi*8]

loc_67DF8F14:				; CODE XREF: sub_67DF8DC0+10Ej
					; sub_67DF8DC0+317j
		xor	eax, eax
		cmp	esi, edi
		setl	al
		mov	edi, 1
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		mov	[esp+4Ch+Format], 75h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aSlotAllocatorN ; "slot < allocator->n_allocated_slots"
		mov	[esp+4Ch+Memory], eax
		call	sub_67DFAE70

loc_67DF8F48:				; CODE XREF: sub_67DF8DC0+367j
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		mov	[esp+4Ch+Format], 89h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aSlot0_2 ; "slot >= 0"
		mov	[esp+4Ch+Memory], edi
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		mov	[esp+4Ch+Format], 8Ah
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aSlotAllocatorN ; "slot < allocator->n_allocated_slots"
		cmp	[ebx+4], esi
		setnle	al
		mov	[esp+4Ch+Memory], eax
		call	sub_67DFAE70
		mov	edx, [esp+4Ch+arg_8]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		mov	[esp+4Ch+Format], 8Bh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aSlot_id_p0 ;	"*slot_id_p < 0"
		mov	eax, [edx]
		shr	eax, 1Fh
		mov	[esp+4Ch+Memory], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		mov	[esp+4Ch+Format], 8Ch
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aAllocatorAlloc ; "allocator->allocated_slots[slot].slot_i"...
		mov	eax, [ebx]
		cmp	[eax+ebp], esi
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+Memory], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		mov	[esp+4Ch+Format], 8Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aAllocatorAll_2 ; "allocator->allocated_slots[slot].refcou"...
		mov	eax, [ebx]
		cmp	dword ptr [eax+ebp+4], 1
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+Memory], eax
		call	sub_67DFAE70
		mov	eax, [esp+4Ch+arg_8]
		mov	[eax], esi
		mov	eax, [ebx+8]
		mov	[esp+4Ch+var_30], eax
		mov	eax, [ebx+4]
		mov	[esp+4Ch+var_38], ebx
		mov	dword ptr [esp+4Ch+var_3C], esi	; char
		mov	[esp+4Ch+Format], offset aAllocatedSlotD ; "Allocated slot %d on allocator %p total"...
		mov	[esp+4Ch+var_34], eax
		mov	[esp+4Ch+var_44], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		mov	[esp+4Ch+NewSize], 92h ; int
		mov	[esp+4Ch+Memory], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DF8E72
; ---------------------------------------------------------------------------
		align 10h

loc_67DF9080:				; CODE XREF: sub_67DF8DC0+1Ej
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_data_s_2 ; "_dbus_data_slot_allocator_alloc"
		xor	eax, eax
		mov	[esp+4Ch+Format], 4Fh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+NewSize], offset aAllocatorLock_ ; "allocator->lock_loc == NULL"
		cmp	dword ptr [ebx+0Ch], 0
		setz	al
		mov	[esp+4Ch+Memory], eax
		call	sub_67DFAE70
		mov	[ebx+0Ch], esi
		jmp	loc_67DF8DED
; ---------------------------------------------------------------------------
		align 10h

loc_67DF90C0:				; CODE XREF: sub_67DF8DC0+140j
		mov	edx, ebp

loc_67DF90C2:				; CODE XREF: sub_67DF8DC0+36Ej
		mov	[eax], esi
		mov	eax, [esp+4Ch+var_20]
		mov	dword ptr [eax+edx+4], 1
		mov	edi, [ebx+4]
		add	dword ptr [ebx+8], 1
		jmp	loc_67DF8F14
; ---------------------------------------------------------------------------
		align 10h

loc_67DF90E0:				; CODE XREF: sub_67DF8DC0+102j
		lea	eax, ds:8[edi*8]
		xor	edi, edi
		mov	[esp+4Ch+NewSize], eax ; NewSize
		mov	eax, [ebx]
		mov	[esp+4Ch+Memory], eax ;	Memory
		call	dbus_realloc
		test	eax, eax
		jz	loc_67DF8E72
		mov	esi, [ebx+4]
		add	dword ptr [ebx+8], 1
		mov	[ebx], eax
		mov	edi, esi
		lea	edx, [esi+1]
		not	edi
		lea	ebp, ds:0[esi*8]
		mov	[ebx+4], edx
		shr	edi, 1Fh
		mov	[eax+esi*8], esi
		mov	dword ptr [eax+ebp+4], 1
		jmp	loc_67DF8F48
; ---------------------------------------------------------------------------

loc_67DF912C:				; CODE XREF: sub_67DF8DC0+11Cj
		xor	edx, edx
		jmp	short loc_67DF90C2
; ---------------------------------------------------------------------------

loc_67DF9130:				; CODE XREF: sub_67DF8DC0+27j
		mov	[esp+4Ch+Memory], offset aDBusThreadsWer ; "D-Bus threads were initialized after fi"...
		call	sub_67DFB4E0
		mov	[esp+4Ch+var_44], 55h
		mov	[esp+4Ch+NewSize], offset aRBuildWin32_24 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Memory], offset aExiting ; "exiting"
		call	sub_67DFAE30
sub_67DF8DC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9160	proc near		; CODE XREF: sub_67DCDAC0+16Ap
					; sub_67DE35C0+48p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	edi
		push	esi
		xor	esi, esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4]
		test	eax, eax
		jle	short loc_67DF91C4

loc_67DF9173:				; CODE XREF: sub_67DF9160+46j
		mov	eax, [ebx]
		lea	edi, ds:0[esi*8]
		add	eax, edi
		mov	edx, [eax+4]
		test	edx, edx
		jz	short loc_67DF9190
		mov	eax, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	edx
		mov	eax, [ebx]
		add	eax, edi

loc_67DF9190:				; CODE XREF: sub_67DF9160+23j
		mov	dword ptr [eax], 0
		mov	eax, [ebx]
		add	esi, 1
		cmp	esi, [ebx+4]
		mov	dword ptr [eax+edi+4], 0
		jl	short loc_67DF9173

loc_67DF91A8:				; CODE XREF: sub_67DF9160+66j
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	dword ptr [ebx], 0
		mov	dword ptr [ebx+4], 0
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67DF91C4:				; CODE XREF: sub_67DF9160+11j
		mov	eax, [ebx]
		jmp	short loc_67DF91A8
sub_67DF9160	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		add	dword ptr [eax], 1
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF91E0	proc near		; CODE XREF: sub_67DCE450+2A7p
					; .text:67DD03CFp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax+1Ch]
		retn
sub_67DF91E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF91F0	proc near		; CODE XREF: sub_67DF9F00+63p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 3Ch
		xor	eax, eax
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset a_dbus_hash_t_5 ; "_dbus_hash_table_insert_string_prealloc"...
		mov	[esp+3Ch+var_30], 690h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTableKey_typ_0 ; "table->key_type == DBUS_HASH_STRING"
		cmp	dword ptr [ebx+30h], 0
		setz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	ebp, ebp
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_hash_t_5 ; "_dbus_hash_table_insert_string_prealloc"...
		mov	[esp+3Ch+var_30], 691h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPreallocated_0 ; "preallocated != NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], ebp
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+var_34], 1
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		call	dword ptr [ebx+34h]
		mov	[esp+3Ch+var_2C], offset a_dbus_hash_t_5 ; "_dbus_hash_table_insert_string_prealloc"...
		mov	[esp+3Ch+var_30], 695h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aEntryNull ; "entry !=	NULL"
		mov	ebp, eax
		xor	eax, eax
		test	ebp, ebp
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_67DF92D5
		mov	edx, [ebp+4]
		cmp	edx, esi
		jz	short loc_67DF92D5
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DF92D5:				; CODE XREF: sub_67DF91F0+D7j
					; sub_67DF91F0+DEj
		mov	eax, [ebx+3Ch]
		test	eax, eax
		jz	short loc_67DF92E8
		mov	edx, [ebp+8]
		cmp	edx, edi
		jz	short loc_67DF92E8
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DF92E8:				; CODE XREF: sub_67DF91F0+EAj
					; sub_67DF91F0+F1j
		mov	[ebp+4], esi
		mov	[ebp+8], edi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_67DF91F0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 3Ch
		xor	eax, eax
		mov	[esp+2Ch], ebx
		mov	ebx, [esp+40h]
		mov	[esp+30h], esi
		mov	esi, [esp+44h]
		mov	[esp+34h], edi
		mov	edi, [esp+48h]
		mov	[esp+38h], ebp
		mov	dword ptr [esp+10h], offset a_dbus_hash__10 ; "_dbus_hash_table_insert_uintptr"
		mov	dword ptr [esp+0Ch], 642h
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aTableKey_typ_1 ; "table->key_type ==	DBUS_HASH_UINTPTR"
		cmp	dword ptr [ebx+30h], 4
		setz	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 1
		mov	[esp+4], esi
		mov	[esp], ebx
		call	dword ptr [ebx+34h]
		mov	ebp, eax
		xor	eax, eax
		test	ebp, ebp
		jz	short loc_67DF93BB
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_67DF939D
		mov	edx, [ebp+4]
		cmp	esi, edx
		jz	short loc_67DF939D
		mov	[esp], edx
		call	eax

loc_67DF939D:				; CODE XREF: .text:67DF938Fj
					; .text:67DF9396j
		mov	eax, [ebx+3Ch]
		test	eax, eax
		jz	short loc_67DF93B0
		mov	edx, [ebp+8]
		cmp	edx, edi
		jz	short loc_67DF93B0
		mov	[esp], edx
		call	eax

loc_67DF93B0:				; CODE XREF: .text:67DF93A2j
					; .text:67DF93A9j
		mov	[ebp+4], esi
		mov	eax, 1
		mov	[ebp+8], edi

loc_67DF93BB:				; CODE XREF: .text:67DF9388j
		mov	ebx, [esp+2Ch]
		mov	esi, [esp+30h]
		mov	edi, [esp+34h]
		mov	ebp, [esp+38h]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF93D0	proc near		; CODE XREF: dbus_connection_send_with_reply+3D2p
					; dbus_connection_send_with_reply+4E2p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		xor	eax, eax
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_4], ebp
		mov	[esp+3Ch+var_2C], offset a_dbus_hash_tab ; "_dbus_hash_table_insert_int"
		mov	[esp+3Ch+var_30], 5EDh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTableKey_typeD ; "table->key_type == DBUS_HASH_INT"
		cmp	dword ptr [ebx+30h], 2
		setz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+var_34], 1
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], ebx
		call	dword ptr [ebx+34h]
		mov	ebp, eax
		xor	eax, eax
		test	ebp, ebp
		jz	short loc_67DF947B
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_67DF945D
		mov	edx, [ebp+4]
		cmp	esi, edx
		jz	short loc_67DF945D
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DF945D:				; CODE XREF: sub_67DF93D0+7Fj
					; sub_67DF93D0+86j
		mov	eax, [ebx+3Ch]
		test	eax, eax
		jz	short loc_67DF9470
		mov	edx, [ebp+8]
		cmp	edx, edi
		jz	short loc_67DF9470
		mov	[esp+3Ch+var_3C], edx
		call	eax

loc_67DF9470:				; CODE XREF: sub_67DF93D0+92j
					; sub_67DF93D0+99j
		mov	[ebp+4], esi
		mov	eax, 1
		mov	[ebp+8], edi

loc_67DF947B:				; CODE XREF: sub_67DF93D0+78j
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_67DF93D0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_hash__11 ; "_dbus_hash_table_lookup_uintptr"
		mov	dword ptr [esp+0Ch], 4EFh
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aTableKey_typ_1 ; "table->key_type ==	DBUS_HASH_UINTPTR"
		cmp	dword ptr [ebx+30h], 4
		setz	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [esp+34h]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], ebx
		call	dword ptr [ebx+34h]
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DF94FA
		mov	eax, [edx+8]

loc_67DF94FA:				; CODE XREF: .text:67DF94F5j
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9500	proc near		; CODE XREF: sub_67DCE140+17Ap
					; dbus_connection_dispatch+281p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_t_0 ; "_dbus_hash_table_lookup_int"
		mov	[esp+2Ch+var_20], 4BAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTableKey_typeD ; "table->key_type == DBUS_HASH_INT"
		cmp	dword ptr [ebx+30h], 2
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], 0
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [ebx+34h]
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DF956A
		mov	eax, [edx+8]

loc_67DF956A:				; CODE XREF: sub_67DF9500+65j
		add	esp, 28h
		pop	ebx
		retn
sub_67DF9500	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9570	proc near		; CODE XREF: sub_67DD4800+332p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_t_1 ; "_dbus_hash_table_lookup_string"
		mov	[esp+2Ch+var_20], 486h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTableKey_typ_0 ; "table->key_type == DBUS_HASH_STRING"
		cmp	dword ptr [ebx+30h], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], 0
		mov	[esp+2Ch+var_20], 0
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], ebx
		call	dword ptr [ebx+34h]
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DF95DA
		mov	eax, [edx+8]

loc_67DF95DA:				; CODE XREF: sub_67DF9570+65j
		add	esp, 28h
		pop	ebx
		retn
sub_67DF9570	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+40h]
		mov	esi, [esp+4Ch]
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_3 ; "_dbus_hash_iter_lookup"
		mov	dword ptr [esp+0Ch], 311h
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSizeofDbushash ; "sizeof (DBusHashIter) == sizeof (DBusRe"...
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		lea	eax, [esp+2Ch]
		mov	[esp+0Ch], eax
		mov	eax, [esp+48h]
		mov	dword ptr [esp+10h], 0
		mov	[esp], ebx
		mov	[esp+8], eax
		mov	eax, [esp+44h]
		mov	[esp+4], eax
		call	dword ptr [ebx+34h]
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DF96A5
		mov	[esi+8], eax
		mov	edx, [esp+2Ch]
		mov	eax, [eax]
		mov	[esi], ebx
		mov	[esi+4], edx
		mov	[esi+0Ch], eax
		mov	eax, edx
		sub	eax, [ebx+4]
		sar	eax, 2
		lea	ecx, [eax+1]
		mov	[esi+10h], ecx
		mov	ecx, [ebx+1Ch]
		shl	eax, 2
		mov	[esi+14h], ecx
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_3 ; "_dbus_hash_iter_lookup"
		mov	dword ptr [esp+0Ch], 321h
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aTableBucketsRe ; "&(table->buckets[real->next_bucket-1]) "...
		add	eax, [ebx+4]
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	edx, 1

loc_67DF96A5:				; CODE XREF: .text:67DF9643j
		add	esp, 34h
		mov	eax, edx
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_4 ; "_dbus_hash_iter_get_string_key"
		mov	dword ptr [esp+0Ch], 2CEh
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealTableNull ; "real->table	!= NULL"
		cmp	dword ptr [ebx], 0
		setnz	al
		mov	[esp], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_4 ; "_dbus_hash_iter_get_string_key"
		mov	dword ptr [esp+0Ch], 2CFh
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealEntryNull ; "real->entry	!= NULL"
		cmp	dword ptr [ebx+8], 0
		setnz	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		mov	eax, [eax+4]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_5 ; "_dbus_hash_iter_get_uintptr_key"
		mov	dword ptr [esp+0Ch], 2BCh
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealTableNull ; "real->table	!= NULL"
		cmp	dword ptr [ebx], 0
		setnz	al
		mov	[esp], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_5 ; "_dbus_hash_iter_get_uintptr_key"
		mov	dword ptr [esp+0Ch], 2BDh
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealEntryNull ; "real->entry	!= NULL"
		cmp	dword ptr [ebx+8], 0
		setnz	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		mov	eax, [eax+4]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_6 ; "_dbus_hash_iter_get_int_key"
		mov	dword ptr [esp+0Ch], 2A9h
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealTableNull ; "real->table	!= NULL"
		cmp	dword ptr [ebx], 0
		setnz	al
		mov	[esp], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_6 ; "_dbus_hash_iter_get_int_key"
		mov	dword ptr [esp+0Ch], 2AAh
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealEntryNull ; "real->entry	!= NULL"
		cmp	dword ptr [ebx+8], 0
		setnz	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		mov	eax, [eax+4]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_7 ; "_dbus_hash_iter_set_value"
		mov	esi, [esp+34h]
		mov	dword ptr [esp+0Ch], 293h
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealTableNull ; "real->table	!= NULL"
		cmp	dword ptr [ebx], 0
		setnz	al
		mov	[esp], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_7 ; "_dbus_hash_iter_set_value"
		mov	dword ptr [esp+0Ch], 294h
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealEntryNull ; "real->entry	!= NULL"
		cmp	dword ptr [ebx+8], 0
		setnz	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		mov	edx, [eax+3Ch]
		test	edx, edx
		jz	short loc_67DF98B6
		mov	eax, [ebx+8]
		mov	ecx, [eax+8]
		cmp	ecx, esi
		jz	short loc_67DF98B9
		mov	[esp], ecx
		call	edx

loc_67DF98B6:				; CODE XREF: .text:67DF98A5j
		mov	eax, [ebx+8]

loc_67DF98B9:				; CODE XREF: .text:67DF98AFj
		mov	[eax+8], esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF98D0	proc near		; CODE XREF: sub_67DCE450+2CEp
					; .text:67DD03FAp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_ite ; "_dbus_hash_iter_get_value"
		mov	[esp+2Ch+var_20], 27Bh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealTableNull	; "real->table != NULL"
		cmp	dword ptr [ebx], 0
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_ite ; "_dbus_hash_iter_get_value"
		mov	[esp+2Ch+var_20], 27Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealEntryNull	; "real->entry != NULL"
		cmp	dword ptr [ebx+8], 0
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+8]
		mov	eax, [eax+8]
		add	esp, 28h
		pop	ebx
		retn
sub_67DF98D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9950	proc near		; CODE XREF: sub_67DCE450+2C6p
					; .text:67DD03F2p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_i_0 ; "_dbus_hash_iter_next"
		mov	[esp+2Ch+var_20], 233h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSizeofDbushash ; "sizeof (DBusHashIter) == sizeof (DBusRe"...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_i_0 ; "_dbus_hash_iter_next"
		mov	[esp+2Ch+var_20], 23Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealN_entries_ ; "real->n_entries_on_init >= real->table-"...
		mov	eax, [ebx]
		mov	edx, [ebx+14h]
		cmp	edx, [eax+1Ch]
		setnl	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jnz	short loc_67DF99F6
		mov	esi, [ebx]
		mov	ecx, [ebx+10h]
		cmp	[esi+18h], ecx
		mov	eax, ecx
		jg	short loc_67DF99DC
		jmp	loc_67DF9A70
; ---------------------------------------------------------------------------

loc_67DF99D3:				; CODE XREF: sub_67DF9950+A4j
		cmp	[esi+18h], eax
		jle	loc_67DF9A70

loc_67DF99DC:				; CODE XREF: sub_67DF9950+7Cj
		shl	eax, 2
		add	eax, [esi+4]
		mov	edx, [eax]
		mov	[ebx+4], eax
		lea	eax, [ecx+1]
		mov	ecx, eax
		mov	[ebx+10h], eax
		test	edx, edx
		mov	[ebx+0Ch], edx
		jz	short loc_67DF99D3

loc_67DF99F6:				; CODE XREF: sub_67DF9950+70j
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_i_0 ; "_dbus_hash_iter_next"
		mov	[esp+2Ch+var_20], 24Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealNext_entry ; "real->next_entry !=	NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_i_0 ; "_dbus_hash_iter_next"
		mov	[esp+2Ch+var_20], 24Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealBucketNull ; "real->bucket != NULL"
		cmp	dword ptr [ebx+4], 0
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+0Ch]
		mov	[ebx+8], eax
		mov	eax, [eax]
		mov	[ebx+0Ch], eax
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DF9A70:				; CODE XREF: sub_67DF9950+7Ej
					; sub_67DF9950+86j
		mov	dword ptr [ebx+8], 0
		xor	eax, eax
		mov	dword ptr [ebx], 0
		mov	dword ptr [ebx+4], 0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DF9950	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9A90	proc near		; CODE XREF: sub_67DCE450+2BEp
					; .text:67DD03EAp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_4], esi
		mov	esi, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_i_1 ; "_dbus_hash_iter_init"
		mov	[esp+2Ch+var_20], 21Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSizeofDbushash ; "sizeof (DBusHashIter) == sizeof (DBusRe"...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	dword ptr [ebx+10h], 0
		mov	eax, [esi+1Ch]
		mov	[ebx], esi
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [ebx+0Ch], 0
		mov	[ebx+14h], eax
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DF9A90	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		xor	eax, eax
		mov	[esp+24h], ebx
		mov	ebx, [esp+34h]
		mov	[esp+28h], esi
		mov	esi, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_hash_t_7 ; "_dbus_hash_table_free_preallocated_entr"...
		mov	dword ptr [esp+0Ch], 673h
		test	ebx, ebx
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aPreallocated_0 ; "preallocated != NULL"
		call	sub_67DFAE70
		mov	[esp+34h], ebx
		mov	eax, [esi+40h]
		mov	ebx, [esp+24h]
		mov	esi, [esp+28h]
		mov	[esp+30h], eax
		add	esp, 2Ch
		jmp	sub_67DFE790
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9B60	proc near		; CODE XREF: .text:67DF9D0Dp
					; sub_67DF9D20+6Dp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	edi
		mov	edi, ecx
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 20h
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aRemove_entry ; "remove_entry"
		mov	[esp+2Ch+var_20], 1DDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTableNull ; "table !=	NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aRemove_entry ; "remove_entry"
		mov	[esp+2Ch+var_20], 1DEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aBucketNull ; "bucket != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset aRemove_entry ; "remove_entry"
		mov	[esp+2Ch+var_20], 1DFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aBucketNull_0 ; "*bucket != NULL"
		cmp	dword ptr [esi], 0
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	edi, edi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aRemove_entry ; "remove_entry"
		mov	[esp+2Ch+var_20], 1E0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aEntryNull ; "entry !=	NULL"
		call	sub_67DFAE70
		mov	eax, [esi]
		cmp	eax, edi
		jz	short loc_67DF9C64
		nop

loc_67DF9C30:				; CODE XREF: sub_67DF9B60+D6j
		mov	esi, eax
		mov	eax, [eax]
		cmp	eax, edi
		jnz	short loc_67DF9C30
		mov	[esp+2Ch+var_1C], offset aRemove_entry ; "remove_entry"
		mov	[esp+2Ch+var_20], 1ECh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aPrevNull ; "prev != NULL"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70

loc_67DF9C64:				; CODE XREF: sub_67DF9B60+CDj
		mov	eax, [edi]
		sub	dword ptr [ebx+1Ch], 1
		mov	[esi], eax
		mov	eax, [ebx+38h]
		test	eax, eax
		jz	short loc_67DF9C7B
		mov	edx, [edi+4]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF9C7B:				; CODE XREF: sub_67DF9B60+111j
		mov	eax, [ebx+3Ch]
		test	eax, eax
		jz	short loc_67DF9C8A
		mov	edx, [edi+8]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67DF9C8A:				; CODE XREF: sub_67DF9B60+120j
		mov	eax, [ebx+40h]
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFE790
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DF9B60	endp

; ---------------------------------------------------------------------------
		push	ebx
		xor	eax, eax
		sub	esp, 38h
		mov	ebx, [esp+40h]
		mov	dword ptr [esp+10h], offset a_dbus_hash__12 ; "_dbus_hash_table_remove_uintptr"
		mov	dword ptr [esp+0Ch], 57Dh
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aTableKey_typ_1 ; "table->key_type ==	DBUS_HASH_UINTPTR"
		cmp	dword ptr [ebx+30h], 4
		setz	al
		mov	[esp], eax
		call	sub_67DFAE70
		lea	eax, [esp+2Ch]
		mov	[esp+0Ch], eax
		mov	eax, [esp+44h]
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+8], 0
		mov	[esp], ebx
		mov	[esp+4], eax
		call	dword ptr [ebx+34h]
		mov	ecx, eax
		xor	eax, eax
		test	ecx, ecx
		jz	short loc_67DF9D17
		mov	edx, [esp+2Ch]
		mov	eax, ebx
		call	sub_67DF9B60
		mov	eax, 1

loc_67DF9D17:				; CODE XREF: .text:67DF9D05j
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9D20	proc near		; CODE XREF: sub_67DD1A90+2Dp
					; dbus_connection_send_with_reply+633p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		xor	eax, eax
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset a_dbus_hash_t_2 ; "_dbus_hash_table_remove_int"
		mov	[esp+3Ch+var_30], 542h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTableKey_typeD ; "table->key_type == DBUS_HASH_INT"
		cmp	dword ptr [ebx+30h], 2
		setz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_30], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_34], 0
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_38], eax
		call	dword ptr [ebx+34h]
		mov	ecx, eax
		xor	eax, eax
		test	ecx, ecx
		jz	short loc_67DF9D97
		mov	edx, [esp+3Ch+var_10]
		mov	eax, ebx
		call	sub_67DF9B60
		mov	eax, 1

loc_67DF9D97:				; CODE XREF: sub_67DF9D20+65j
		add	esp, 38h
		pop	ebx
		retn
sub_67DF9D20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9DA0	proc near		; CODE XREF: sub_67DCF230+32Fp

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		xor	eax, eax
		sub	esp, 38h
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset a_dbus_hash_t_3 ; "_dbus_hash_table_remove_string"
		mov	[esp+3Ch+var_30], 508h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aTableKey_typ_0 ; "table->key_type == DBUS_HASH_STRING"
		cmp	dword ptr [ebx+30h], 0
		setz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		lea	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+var_30], eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], 0
		mov	[esp+3Ch+var_34], 0
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_38], eax
		call	dword ptr [ebx+34h]
		mov	ecx, eax
		xor	eax, eax
		test	ecx, ecx
		jz	short loc_67DF9E17
		mov	edx, [esp+3Ch+var_10]
		mov	eax, ebx
		call	sub_67DF9B60
		mov	eax, 1

loc_67DF9E17:				; CODE XREF: sub_67DF9DA0+65j
		add	esp, 38h
		pop	ebx
		retn
sub_67DF9DA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9E20	proc near		; CODE XREF: sub_67DCE450+226p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_i_2 ; "_dbus_hash_iter_remove_entry"
		mov	[esp+2Ch+var_20], 266h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealTableNull	; "real->table != NULL"
		cmp	dword ptr [ebx], 0
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_i_2 ; "_dbus_hash_iter_remove_entry"
		mov	[esp+2Ch+var_20], 267h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealEntryNull	; "real->entry != NULL"
		cmp	dword ptr [ebx+8], 0
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_i_2 ; "_dbus_hash_iter_remove_entry"
		mov	[esp+2Ch+var_20], 268h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealBucketNull ; "real->bucket != NULL"
		cmp	dword ptr [ebx+4], 0
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	ecx, [ebx+8]
		mov	edx, [ebx+4]
		mov	eax, [ebx]
		call	sub_67DF9B60
		mov	dword ptr [ebx+8], 0
		add	esp, 28h
		pop	ebx
		retn
sub_67DF9E20	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	eax, [eax+40h]
		mov	[esp+10h], eax
		add	esp, 0Ch
		jmp	sub_67DFE920
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9F00	proc near		; CODE XREF: sub_67DD4800+7B5p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_t_4 ; "_dbus_hash_table_insert_string"
		mov	[esp+2Ch+var_20], 5A0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTableKey_typ_0 ; "table->key_type == DBUS_HASH_STRING"
		cmp	dword ptr [ebx+30h], 0
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+40h]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFE920
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DF9F6D
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_28], edx
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_20], eax
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_24], eax
		call	sub_67DF91F0
		mov	eax, 1

loc_67DF9F6D:				; CODE XREF: sub_67DF9F00+4Aj
		add	esp, 28h
		pop	ebx
		retn
sub_67DF9F00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DF9F80	proc near		; CODE XREF: sub_67DCCE40+42p
					; sub_67DD4800+8F0p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi
		push	ebx
		sub	esp, 24h
		mov	[esp+2Ch+var_2C], 44h ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	esi, eax
		mov	ebx, eax
		jz	loc_67DFA070
		mov	[esp+2Ch+var_28], 1
		mov	[esp+2Ch+var_2C], 0Ch
		call	sub_67DFE7F0
		test	eax, eax
		jz	loc_67DFA0B7
		mov	[esi+40h], eax
		mov	dword ptr [esi], 1
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_t_6 ; "_dbus_hash_table_new"
		mov	[esp+2Ch+var_20], 13Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aDbus_small_has ; "DBUS_SMALL_HASH_TABLE == _DBUS_N_ELEMEN"...
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		lea	eax, [esi+8]
		mov	[esi+4], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	dword ptr [esi+18h], 4
		mov	dword ptr [esi+1Ch], 0
		mov	dword ptr [esi+20h], 0Ch
		mov	[esi+30h], eax
		mov	dword ptr [esi+24h], 0
		mov	dword ptr [esi+28h], 1Ch
		mov	dword ptr [esi+2Ch], 3
		mov	[esp+2Ch+var_1C], offset a_dbus_hash_t_6 ; "_dbus_hash_table_new"
		mov	[esp+2Ch+var_20], 147h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTableMaskTable ; "table->mask	< table->n_buckets"
		mov	[esp+2Ch+var_2C], 1
		call	sub_67DFAE70
		mov	eax, [esi+30h]
		cmp	eax, 1
		jz	short loc_67DFA062
		jnb	short loc_67DFA078
		mov	dword ptr [esi+34h], offset sub_67DFA820

loc_67DFA062:				; CODE XREF: sub_67DF9F80+D7j
		mov	eax, [esp+2Ch+arg_4]
		mov	[ebx+38h], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[ebx+3Ch], eax

loc_67DFA070:				; CODE XREF: sub_67DF9F80+17j
					; sub_67DF9F80+135j ...
		mov	eax, esi
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DFA078:				; CODE XREF: sub_67DF9F80+D9j
		cmp	eax, 4
		jbe	short loc_67DFA0A0
		mov	[esp+2Ch+var_24], 159h
		mov	[esp+2Ch+var_28], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_2C], offset aUnknownHashTab ; "Unknown hash table type"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h

loc_67DFA0A0:				; CODE XREF: sub_67DF9F80+FBj
		mov	eax, [esp+2Ch+arg_4]
		mov	dword ptr [esi+34h], offset sub_67DFA8B0
		mov	[ebx+38h], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[ebx+3Ch], eax
		jmp	short loc_67DFA070
; ---------------------------------------------------------------------------

loc_67DFA0B7:				; CODE XREF: sub_67DF9F80+33j
		mov	[esp+2Ch+var_2C], esi
		xor	esi, esi
		call	dbus_free
		jmp	short loc_67DFA070
sub_67DF9F80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFA0D0	proc near		; CODE XREF: sub_67DCCE40+3C0p
					; sub_67DCDAC0+247p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [esp+1Ch+arg_0]
		mov	eax, [esi]
		sub	eax, 1
		test	eax, eax
		mov	[esi], eax
		jnz	short loc_67DFA15A
		mov	eax, [esi+18h]
		test	eax, eax
		jle	short loc_67DFA12E
		xor	edi, edi
		xchg	ax, ax

loc_67DFA0F0:				; CODE XREF: sub_67DFA0D0+5Cj
		mov	edx, [esi+4]
		mov	ebx, [edx+edi*4]
		test	ebx, ebx
		jz	short loc_67DFA127
		lea	esi, [esi+0]

loc_67DFA100:				; CODE XREF: sub_67DFA0D0+52j
		mov	eax, [esi+38h]
		test	eax, eax
		jz	short loc_67DFA10F
		mov	edx, [ebx+4]
		mov	[esp+1Ch+var_1C], edx
		call	eax

loc_67DFA10F:				; CODE XREF: sub_67DFA0D0+35j
		mov	eax, [esi+3Ch]
		test	eax, eax
		jz	short loc_67DFA11E
		mov	edx, [ebx+8]
		mov	[esp+1Ch+var_1C], edx
		call	eax

loc_67DFA11E:				; CODE XREF: sub_67DFA0D0+44j
		mov	ebx, [ebx]
		test	ebx, ebx
		jnz	short loc_67DFA100
		mov	eax, [esi+18h]

loc_67DFA127:				; CODE XREF: sub_67DFA0D0+28j
		add	edi, 1
		cmp	edi, eax
		jl	short loc_67DFA0F0

loc_67DFA12E:				; CODE XREF: sub_67DFA0D0+1Aj
		mov	eax, [esi+40h]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFEA20
		mov	eax, [esi+4]
		lea	edx, [esi+8]
		cmp	eax, edx
		jz	short loc_67DFA14B
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free

loc_67DFA14B:				; CODE XREF: sub_67DFA0D0+71j
		mov	[esp+1Ch+arg_0], esi
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67DFA15A:				; CODE XREF: sub_67DFA0D0+13j
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DFA0D0	endp

; ---------------------------------------------------------------------------
		jmp	short loc_67DFA170
; ---------------------------------------------------------------------------
		align 10h

loc_67DFA170:				; CODE XREF: .text:67DFA161j
		push	esi
		push	ebx
		sub	esp, 44h
		mov	esi, [esp+50h]
		lea	ebx, [esp+28h]
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_1 ; "_dbus_hash_iter_init"
		mov	dword ptr [esp+0Ch], 21Ah
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSizeofDbushash ; "sizeof (DBusHashIter) == sizeof (DBusRe"...
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		mov	dword ptr [esp+38h], 0
		mov	eax, [esi+1Ch]
		mov	[esp+28h], esi
		mov	dword ptr [esp+2Ch], 0
		mov	dword ptr [esp+30h], 0
		mov	dword ptr [esp+34h], 0
		mov	[esp+3Ch], eax

loc_67DFA1D4:				; CODE XREF: .text:67DFA392j
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_0 ; "_dbus_hash_iter_next"
		mov	dword ptr [esp+0Ch], 233h
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSizeofDbushash ; "sizeof (DBusHashIter) == sizeof (DBusRe"...
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		mov	eax, [esp+28h]
		mov	edx, [esp+3Ch]
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_0 ; "_dbus_hash_iter_next"
		mov	dword ptr [esp+0Ch], 23Ah
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealN_entries_ ; "real->n_entries_on_init >=	real->table-"...
		cmp	edx, [eax+1Ch]
		setnl	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	edx, [ebx+0Ch]
		test	edx, edx
		jnz	short loc_67DFA274
		mov	esi, [ebx]
		mov	ecx, [ebx+10h]
		cmp	ecx, [esi+18h]
		mov	eax, ecx
		jl	short loc_67DFA25A
		jmp	loc_67DFA397
; ---------------------------------------------------------------------------

loc_67DFA251:				; CODE XREF: .text:67DFA272j
		cmp	[esi+18h], eax
		jle	loc_67DFA397

loc_67DFA25A:				; CODE XREF: .text:67DFA24Aj
		shl	eax, 2
		add	eax, [esi+4]
		mov	edx, [eax]
		mov	[ebx+4], eax
		lea	eax, [ecx+1]
		mov	ecx, eax
		mov	[ebx+10h], eax
		test	edx, edx
		mov	[ebx+0Ch], edx
		jz	short loc_67DFA251

loc_67DFA274:				; CODE XREF: .text:67DFA23Ej
		xor	eax, eax
		cmp	dword ptr [esp+34h], 0
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_0 ; "_dbus_hash_iter_next"
		mov	dword ptr [esp+0Ch], 24Eh
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealNext_entry ; "real->next_entry != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	dword ptr [esp+2Ch], 0
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_0 ; "_dbus_hash_iter_next"
		mov	dword ptr [esp+0Ch], 24Fh
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealBucketNull ; "real->bucket != NULL"
		call	sub_67DFAE70
		mov	eax, [esp+34h]
		mov	[ebx+8], eax
		mov	eax, [eax]
		mov	[ebx+0Ch], eax
		xor	eax, eax
		cmp	dword ptr [esp+28h], 0
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_2 ; "_dbus_hash_iter_remove_entry"
		mov	dword ptr [esp+0Ch], 266h
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealTableNull ; "real->table	!= NULL"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	dword ptr [esp+30h], 0
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_2 ; "_dbus_hash_iter_remove_entry"
		mov	dword ptr [esp+0Ch], 267h
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealEntryNull ; "real->entry	!= NULL"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	dword ptr [esp+2Ch], 0
		mov	dword ptr [esp+10h], offset a_dbus_hash_i_2 ; "_dbus_hash_iter_remove_entry"
		mov	dword ptr [esp+0Ch], 268h
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+8], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealBucketNull ; "real->bucket != NULL"
		call	sub_67DFAE70
		mov	ecx, [esp+30h]
		mov	edx, [esp+2Ch]
		mov	eax, [esp+28h]
		call	sub_67DF9B60
		mov	dword ptr [ebx+8], 0
		jmp	loc_67DFA1D4
; ---------------------------------------------------------------------------

loc_67DFA397:				; CODE XREF: .text:67DFA24Cj
					; .text:67DFA254j
		add	esp, 44h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFA3A0	proc near		; CODE XREF: sub_67DFA820+89j
					; sub_67DFA8B0+54j

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		mov	edi, edx
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 5Ch
		mov	eax, [esp+6Ch+arg_8]
		mov	ebp, [esp+6Ch+arg_0]
		test	eax, eax
		jz	short loc_67DFA3C1
		mov	eax, [esp+6Ch+arg_8]
		mov	dword ptr [eax], 0

loc_67DFA3C1:				; CODE XREF: sub_67DFA3A0+15j
		mov	eax, [ebx+4]
		lea	edx, ds:0[ecx*4]
		mov	[esp+6Ch+var_24], edx
		mov	esi, [eax+ecx*4]
		test	esi, esi
		jz	loc_67DFA472
		test	ebp, ebp
		jnz	short loc_67DFA3ED
		jmp	loc_67DFA469
; ---------------------------------------------------------------------------

loc_67DFA3E3:				; CODE XREF: sub_67DFA3A0+5Bj
		mov	esi, [esi]
		test	esi, esi
		jz	loc_67DFA472

loc_67DFA3ED:				; CODE XREF: sub_67DFA3A0+3Cj
		mov	eax, [esi+4]
		mov	[esp+6Ch+var_6C], edi
		mov	[esp+6Ch+var_68], eax
		call	ebp
		test	eax, eax
		jnz	short loc_67DFA3E3

loc_67DFA3FD:				; CODE XREF: sub_67DFA3A0+D0j
		mov	ebp, [esp+6Ch+arg_8]
		test	ebp, ebp
		jz	short loc_67DFA412
		mov	eax, [esp+6Ch+var_24]
		mov	ecx, [esp+6Ch+arg_8]
		add	eax, [ebx+4]
		mov	[ecx], eax

loc_67DFA412:				; CODE XREF: sub_67DFA3A0+63j
		mov	edi, [esp+6Ch+arg_C]
		test	edi, edi
		jz	short loc_67DFA459
		mov	[esp+6Ch+var_5C], offset a_dbus_hash_t_7 ; "_dbus_hash_table_free_preallocated_entr"...
		mov	[esp+6Ch+var_60], 673h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aPreallocated_0 ; "preallocated != NULL"
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+arg_C]
		mov	[esp+6Ch+var_68], eax
		mov	eax, [ebx+40h]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFE790

loc_67DFA459:				; CODE XREF: sub_67DFA3A0+78j
					; sub_67DFA3A0+117j ...
		add	esp, 5Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DFA463:				; CODE XREF: sub_67DFA3A0+CCj
		mov	esi, [esi]
		test	esi, esi
		jz	short loc_67DFA472

loc_67DFA469:				; CODE XREF: sub_67DFA3A0+3Ej
		cmp	[esi+4], edi
		jnz	short loc_67DFA463
		xchg	ax, ax
		jmp	short loc_67DFA3FD
; ---------------------------------------------------------------------------

loc_67DFA472:				; CODE XREF: sub_67DFA3A0+34j
					; sub_67DFA3A0+47j ...
		mov	ecx, [esp+6Ch+arg_4]
		test	ecx, ecx
		jz	short loc_67DFA4F0
		mov	esi, [esp+6Ch+arg_C]
		test	esi, esi
		jz	loc_67DFA7AD

loc_67DFA486:				; CODE XREF: sub_67DFA3A0+41Cj
		mov	eax, [esp+6Ch+var_24]
		add	eax, [ebx+4]
		mov	[esi+4], edi
		mov	edx, [eax]
		mov	[esi], edx
		mov	edx, [esp+6Ch+arg_8]
		mov	[eax], esi
		test	edx, edx
		jz	short loc_67DFA4A4
		mov	ecx, [esp+6Ch+arg_8]
		mov	[ecx], eax

loc_67DFA4A4:				; CODE XREF: sub_67DFA3A0+FCj
		mov	eax, [ebx+1Ch]
		mov	edx, [ebx+20h]
		add	eax, 1
		cmp	eax, edx
		mov	[ebx+1Ch], eax
		jge	short loc_67DFA4B9
		cmp	eax, [ebx+24h]
		jge	short loc_67DFA459

loc_67DFA4B9:				; CODE XREF: sub_67DFA3A0+112j
		cmp	eax, edx
		mov	eax, [ebx+4]
		setnl	dl
		mov	edi, [ebx+18h]
		movzx	edx, dl
		test	edx, edx
		mov	[esp+6Ch+var_28], eax
		jz	short loc_67DFA545
		cmp	edi, 1FFFFFFEh
		jg	loc_67DFA459
		mov	ebp, [ebx+28h]
		test	ebp, ebp
		js	loc_67DFA459
		lea	ebp, ds:0[edi*4]
		jmp	short loc_67DFA55B
; ---------------------------------------------------------------------------
		align 10h

loc_67DFA4F0:				; CODE XREF: sub_67DFA3A0+D8j
		mov	ecx, [esp+6Ch+arg_C]
		test	ecx, ecx
		jz	loc_67DFA459
		mov	[esp+6Ch+var_5C], offset a_dbus_hash_t_7 ; "_dbus_hash_table_free_preallocated_entr"...
		mov	[esp+6Ch+var_60], 673h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aPreallocated_0 ; "preallocated != NULL"
		mov	[esp+6Ch+var_6C], 1
		call	sub_67DFAE70
		mov	edx, [esp+6Ch+arg_C]
		mov	[esp+6Ch+var_68], edx
		mov	eax, [ebx+40h]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFE790
		add	esp, 5Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DFA545:				; CODE XREF: sub_67DFA3A0+12Dj
		mov	ebp, edi
		sar	ebp, 1Fh
		shr	ebp, 1Eh
		add	ebp, edi
		sar	ebp, 2
		cmp	ebp, 3
		jle	loc_67DFA459

loc_67DFA55B:				; CODE XREF: sub_67DFA3A0+14Dj
		lea	eax, ds:0[ebp*4]
		mov	[esp+6Ch+var_30], edx
		mov	[esp+6Ch+var_6C], eax ;	size_t
		call	dbus_malloc0
		mov	edx, [esp+6Ch+var_30]
		test	eax, eax
		mov	[ebx+4], eax
		jz	loc_67DFA7DC
		test	edx, edx
		mov	[ebx+18h], ebp
		jnz	loc_67DFA739
		mov	eax, [ebx+24h]
		add	dword ptr [ebx+28h], 2
		sar	dword ptr [ebx+2Ch], 2
		mov	edx, eax
		sar	edx, 1Fh
		shr	edx, 1Eh
		mov	[ebx+20h], eax
		lea	eax, [edx+eax]
		sar	eax, 2
		mov	[ebx+24h], eax

loc_67DFA5A7:				; CODE XREF: sub_67DFA3A0+3B4j
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+var_6C], eax
		mov	[esp+6Ch+var_5C], offset aRebuild_table	; "rebuild_table"
		mov	[esp+6Ch+var_60], 441h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aTableLo_rebuil ; "table->lo_rebuild_size >= 0"
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset aRebuild_table	; "rebuild_table"
		mov	[esp+6Ch+var_60], 442h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aTableHi_rebuil ; "table->hi_rebuild_size > table->lo_rebu"...
		mov	eax, [ebx+20h]
		cmp	eax, [ebx+24h]
		setnle	al
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+6Ch+var_5C], offset aRebuild_table	; "rebuild_table"
		mov	[esp+6Ch+var_60], 443h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aTableMask0 ; "table->mask != 0"
		cmp	dword ptr [ebx+2Ch], 0
		setnz	al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset aRebuild_table	; "rebuild_table"
		mov	[esp+6Ch+var_60], 445h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aTableMaskTable ; "table->mask	< table->n_buckets"
		mov	eax, [ebx+2Ch]
		cmp	eax, [ebx+18h]
		setl	al
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		test	edi, edi
		jle	loc_67DFA7EC
		mov	ecx, [esp+6Ch+var_28]
		mov	[esp+6Ch+var_20], esi
		mov	[esp+6Ch+var_24], edi
		mov	[esp+6Ch+var_2C], ecx
		mov	esi, ecx

loc_67DFA687:				; CODE XREF: sub_67DFA3A0+394j
		mov	eax, [esi]
		test	eax, eax
		jz	loc_67DFA71B
		mov	edx, [ebx+30h]

loc_67DFA694:				; CODE XREF: sub_67DFA3A0+375j
		mov	ecx, [eax]
		cmp	edx, 1
		mov	esi, [esp+6Ch+var_2C]
		mov	[esi], ecx
		jz	loc_67DFA77A
		jnb	loc_67DFA759
		mov	edi, [eax+4]
		xor	esi, esi
		movsx	ecx, byte ptr [edi]
		test	ecx, ecx
		mov	[esp+6Ch+var_40], ecx
		jz	short loc_67DFA704
		movzx	ebp, byte ptr [edi+1]
		lea	esi, [edi+1]
		mov	ecx, ebp
		test	cl, cl
		jz	loc_67DFA80A
		mov	ecx, [esp+6Ch+var_40]
		mov	[esp+6Ch+var_44], eax

loc_67DFA6D4:				; CODE XREF: sub_67DFA3A0+350j
		mov	eax, ebp
		mov	edi, ecx
		movsx	ebp, al
		add	esi, 1
		shl	edi, 5
		lea	edi, [ebp+edi+0]
		movzx	ebp, byte ptr [esi]
		sub	edi, ecx
		mov	ecx, edi
		mov	eax, ebp
		test	al, al
		jnz	short loc_67DFA6D4
		and	ecx, [ebx+2Ch]
		mov	eax, [esp+6Ch+var_44]
		mov	[esp+6Ch+var_40], edi
		lea	esi, ds:0[ecx*4]

loc_67DFA704:				; CODE XREF: sub_67DFA3A0+319j
					; sub_67DFA3A0+408j ...
		add	esi, [ebx+4]
		mov	ecx, [esi]
		mov	[eax], ecx
		mov	ecx, [esp+6Ch+var_2C]
		mov	[esi], eax
		mov	eax, [ecx]
		test	eax, eax
		jnz	loc_67DFA694

loc_67DFA71B:				; CODE XREF: sub_67DFA3A0+2EBj
		sub	[esp+6Ch+var_24], 1
		cmp	[esp+6Ch+var_24], 0
		jle	loc_67DFA7E8
		add	[esp+6Ch+var_2C], 4
		mov	esi, [esp+6Ch+var_2C]
		jmp	loc_67DFA687
; ---------------------------------------------------------------------------

loc_67DFA739:				; CODE XREF: sub_67DFA3A0+1E2j
		mov	edx, [ebx+2Ch]
		mov	eax, [ebx+20h]
		sub	dword ptr [ebx+28h], 2
		shl	dword ptr [ebx+20h], 2
		lea	edx, ds:3[edx*4]
		mov	[ebx+24h], eax
		mov	[ebx+2Ch], edx
		jmp	loc_67DFA5A7
; ---------------------------------------------------------------------------

loc_67DFA759:				; CODE XREF: sub_67DFA3A0+305j
		cmp	edx, 4
		jbe	short loc_67DFA796
		mov	[esp+6Ch+var_64], 467h
		mov	[esp+6Ch+var_68], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_6C], offset aUnknownHashTab ; "Unknown hash table type"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DFA77A:				; CODE XREF: sub_67DFA3A0+2FFj
		mov	[esp+6Ch+var_64], 45Dh
		mov	[esp+6Ch+var_68], offset aRBuildWin32_25 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_6C], offset aTwoStringsIsNo ; "two-strings	is not enabled"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DFA796:				; CODE XREF: sub_67DFA3A0+3BCj
		imul	esi, [eax+4], 41C64E6Dh
		mov	ecx, [ebx+28h]
		sar	esi, cl
		and	esi, [ebx+2Ch]
		shl	esi, 2
		jmp	loc_67DFA704
; ---------------------------------------------------------------------------

loc_67DFA7AD:				; CODE XREF: sub_67DFA3A0+E0j
		mov	eax, [ebx+40h]
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFE920
		test	eax, eax
		mov	esi, eax
		jnz	loc_67DFA486
		cmp	[esp+6Ch+arg_8], 0
		jz	loc_67DFA459
		mov	edx, [esp+6Ch+arg_8]
		mov	dword ptr [edx], 0
		jmp	loc_67DFA459
; ---------------------------------------------------------------------------

loc_67DFA7DC:				; CODE XREF: sub_67DFA3A0+1D7j
		mov	edx, [esp+6Ch+var_28]
		mov	[ebx+4], edx
		jmp	loc_67DFA459
; ---------------------------------------------------------------------------

loc_67DFA7E8:				; CODE XREF: sub_67DFA3A0+385j
		mov	esi, [esp+6Ch+var_20]

loc_67DFA7EC:				; CODE XREF: sub_67DFA3A0+2CFj
		add	ebx, 8
		cmp	[esp+6Ch+var_28], ebx
		jz	loc_67DFA459
		mov	eax, [esp+6Ch+var_28]
		mov	[esp+6Ch+var_6C], eax
		call	dbus_free
		jmp	loc_67DFA459
; ---------------------------------------------------------------------------

loc_67DFA80A:				; CODE XREF: sub_67DFA3A0+326j
		mov	ecx, [esp+6Ch+var_40]
		and	ecx, [ebx+2Ch]
		lea	esi, ds:0[ecx*4]
		jmp	loc_67DFA704
sub_67DFA3A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFA820	proc near		; DATA XREF: sub_67DF9F80+DBo

var_30		= dword	ptr -30h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ecx, [esp+3Ch+arg_8]
		mov	ebx, [esp+3Ch+arg_C]
		mov	edx, [esp+3Ch+arg_4]
		mov	eax, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_24], ecx
		xor	ecx, ecx
		mov	ebp, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_20], ebx
		movsx	ebx, byte ptr [edx]
		test	ebx, ebx
		jz	short loc_67DFA886
		movzx	edi, byte ptr [edx+1]
		lea	esi, [edx+1]
		mov	ecx, edi
		test	cl, cl
		jz	short loc_67DFA881
		mov	ecx, esi
		mov	[esp+3Ch+var_30], eax
		nop

loc_67DFA860:				; CODE XREF: sub_67DFA820+5Bj
		mov	eax, edi
		mov	esi, ebx
		movsx	edi, al
		add	ecx, 1
		shl	esi, 5
		lea	esi, [edi+esi]
		movzx	edi, byte ptr [ecx]
		sub	esi, ebx
		mov	ebx, esi
		mov	eax, edi
		test	al, al
		jnz	short loc_67DFA860
		mov	eax, [esp+3Ch+var_30]

loc_67DFA881:				; CODE XREF: sub_67DFA820+37j
		mov	ecx, [eax+2Ch]
		and	ecx, ebx

loc_67DFA886:				; CODE XREF: sub_67DFA820+2Aj
		mov	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+arg_C], ebp
		mov	[esp+3Ch+arg_0], offset	strcmp
		mov	[esp+3Ch+arg_8], ebx
		mov	ebx, [esp+3Ch+var_24]
		mov	[esp+3Ch+arg_4], ebx
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	sub_67DFA3A0
sub_67DFA820	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFA8B0	proc near		; DATA XREF: sub_67DF9F80+124o

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		mov	edx, [esp+0Ch+arg_4]
		mov	[esp+0Ch+var_C], ebx
		mov	[esp+0Ch+var_8], esi
		mov	esi, [esp+0Ch+arg_8]
		mov	[esp+0Ch+var_4], edi
		mov	ecx, [eax+28h]
		imul	ebx, edx, 41C64E6Dh
		mov	edi, [esp+0Ch+arg_C]
		sar	ebx, cl
		mov	ecx, [esp+0Ch+arg_10]
		and	ebx, [eax+2Ch]
		mov	[esp+0Ch+arg_8], edi
		mov	edi, [esp+0Ch+var_4]
		mov	[esp+0Ch+arg_4], esi
		mov	esi, [esp+0Ch+var_8]
		mov	[esp+0Ch+arg_C], ecx
		mov	ecx, ebx
		mov	ebx, [esp+0Ch+var_C]
		mov	[esp+0Ch+arg_0], 0
		add	esp, 0Ch
		jmp	sub_67DFA3A0
sub_67DFA8B0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	ds:dword_67E34120, 0
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFA920	proc near		; CODE XREF: sub_67DED4C0+B5p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= byte ptr -20h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	eax, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_4], esi
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_8], ebx
		lea	ebx, [esp+3Ch+var_20]
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_34], 10h
		call	sub_67E01AC0
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E00CE0
		mov	[esp+3Ch+var_34], esi
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_30], eax
		call	sub_67E080C0
		mov	ebx, [esp+3Ch+var_8]
		mov	esi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_67DFA920	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DFA980(void	*)
sub_67DFA980	proc near		; CODE XREF: sub_67DED4C0+A6p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		lea	eax, [esp+2Ch+var_10]
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], 0
		call	sub_67E0C850
		mov	edx, [esp+2Ch+var_10]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	[ebx+0Ch], eax
		mov	[esp+2Ch+var_2C], ebx ;	void *
		mov	[esp+2Ch+var_28], 0Ch ;	size_t
		call	sub_67E09EA0
		add	esp, 28h
		pop	ebx
		retn
sub_67DFA980	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DFA9E0(int,	char *)
sub_67DFA9E0	proc near		; CODE XREF: sub_67DC4CD0+20Ap
					; sub_67DC50C0+171p

Str1		= dword	ptr -1Ch
Str2		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		mov	esi, [esp+1Ch+arg_4]
		mov	eax, [ebx]
		test	eax, eax
		jnz	short loc_67DFA9FF
		jmp	short loc_67DFAA17
; ---------------------------------------------------------------------------

loc_67DFA9F5:				; CODE XREF: sub_67DFA9E0+2Dj
		mov	eax, [ebx+4]
		add	ebx, 4
		test	eax, eax
		jz	short loc_67DFAA17

loc_67DFA9FF:				; CODE XREF: sub_67DFA9E0+11j
		mov	[esp+1Ch+Str2],	esi ; Str2
		mov	[esp+1Ch+Str1],	eax ; Str1
		call	strcmp
		test	eax, eax
		jnz	short loc_67DFA9F5
		add	esp, 14h
		mov	al, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DFAA17:				; CODE XREF: sub_67DFA9E0+13j
					; sub_67DFA9E0+1Dj
		add	esp, 14h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
sub_67DFA9E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DFAA20(void	*, size_t)
sub_67DFAA20	proc near		; CODE XREF: sub_67DD58D0+22p
					; sub_67DE8A80+243p

Dst		= dword	ptr -1Ch
Src		= dword	ptr -18h
Size		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_8], ebx
		mov	[esp+1Ch+Dst], esi ; Size
		call	dbus_malloc
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DFAA51
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+Size],	esi ; Size
		mov	[esp+1Ch+Dst], ebx ; Dst
		mov	[esp+1Ch+Src], eax ; Src
		call	memcpy

loc_67DFAA51:				; CODE XREF: sub_67DFAA20+1Bj
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn
sub_67DFAA20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DFAA60(char	*)
sub_67DFAA60	proc near		; CODE XREF: dbus_bus_get_id+125p
					; dbus_bus_set_unique_name+CFp	...

Str		= dword	ptr -1Ch
Src		= dword	ptr -18h
Size		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_C], ebx
		xor	ebx, ebx
		mov	[esp+1Ch+var_4], edi
		test	esi, esi
		jnz	short loc_67DFAA90

loc_67DFAA79:				; CODE XREF: sub_67DFAA60+47j
					; sub_67DFAA60+59j
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_8]
		mov	ebx, [esp+1Ch+var_C]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFAA90:				; CODE XREF: sub_67DFAA60+17j
		mov	[esp+1Ch+Str], esi ; Str
		call	strlen
		lea	edi, [eax+1]
		mov	[esp+1Ch+Str], edi ; Size
		call	dbus_malloc
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67DFAA79
		mov	[esp+1Ch+Size],	edi ; Size
		mov	[esp+1Ch+Src], esi ; Src
		mov	[esp+1Ch+Str], eax ; Dst
		call	memcpy
		jmp	short loc_67DFAA79
sub_67DFAA60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFAAC0	proc near		; CODE XREF: sub_67DFABC0+30p
					; sub_67DFD2B0+3Ep

hModule		= dword	ptr -1Ch
lpFilename	= dword	ptr -18h
nSize		= dword	ptr -14h

		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_67E34120
		test	eax, eax
		jz	short loc_67DFAAD7
		mov	eax, dword_67E19020
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFAAD7:				; CODE XREF: sub_67DFAAC0+Bj
		mov	[esp+1Ch+hModule], offset aDbus_verbose	; "DBUS_VERBOSE"
		call	sub_67E09AD0
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DFAAF1
		xor	edx, edx
		cmp	byte ptr [eax],	31h
		setz	dl

loc_67DFAAF1:				; CODE XREF: sub_67DFAAC0+27j
		mov	dword_67E19020,	edx
		mov	ds:dword_67E34120, 1
		mov	[esp+1Ch+nSize], 3FFh ;	nSize
		mov	[esp+1Ch+lpFilename], offset Source ; lpFilename
		mov	[esp+1Ch+hModule], 0 ; hModule
		call	ds:GetModuleFileNameA
		mov	ebx, ds:_mbsrchr
		sub	esp, 0Ch
		mov	[esp+1Ch+lpFilename], 2Eh
		mov	[esp+1Ch+hModule], offset Source
		call	ebx ; _mbsrchr
		test	eax, eax
		jz	short loc_67DFAB3F
		mov	byte ptr [eax],	0

loc_67DFAB3F:				; CODE XREF: sub_67DFAAC0+7Aj
		mov	[esp+1Ch+lpFilename], 5Ch
		mov	[esp+1Ch+hModule], offset Source
		call	ebx ; _mbsrchr
		test	eax, eax
		jz	short loc_67DFAB67
		add	eax, 1
		mov	[esp+1Ch+lpFilename], eax ; Source
		mov	[esp+1Ch+hModule], offset Source ; Dest
		call	strcpy

loc_67DFAB67:				; CODE XREF: sub_67DFAAC0+92j
		mov	edx, offset Source

loc_67DFAB6C:				; CODE XREF: sub_67DFAAC0+C0j
		mov	ecx, [edx]
		add	edx, 4
		lea	eax, [ecx-1010101h]
		not	ecx
		and	eax, ecx
		and	eax, 80808080h
		jz	short loc_67DFAB6C
		test	eax, 8080h
		jnz	short loc_67DFAB8F
		shr	eax, 10h
		add	edx, 2

loc_67DFAB8F:				; CODE XREF: sub_67DFAAC0+C7j
		add	al, al
		sbb	edx, 3
		sub	edx, offset Source
		mov	ds:Source[edx],	203Ah
		mov	ds:byte_67E34142[edx], 0
		mov	eax, dword_67E19020
		add	esp, 18h
		pop	ebx
		retn
sub_67DFAAC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DFABC0(char	*, int,	int, char *Format, char)
sub_67DFABC0	proc near		; CODE XREF: sub_67DC2840+44p
					; sub_67DC28A0+69p ...

Str		= dword	ptr -43Ch
Source		= dword	ptr -438h
Args		= dword	ptr -434h
var_430		= dword	ptr -430h
var_42C		= dword	ptr -42Ch
Dest		= byte ptr -41Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
Format		= dword	ptr  10h
arg_10		= byte ptr  14h

		sub	esp, 43Ch
		mov	[esp+43Ch+var_10], ebx
		mov	ebx, [esp+43Ch+arg_0]
		mov	[esp+43Ch+var_C], esi
		mov	esi, [esp+43Ch+Format]
		mov	[esp+43Ch+var_8], edi
		mov	[esp+43Ch+var_4], ebp
		call	sub_67DFAAC0
		test	eax, eax
		jz	loc_67DFACD9
		mov	[esp+43Ch+Str],	esi ; Str
		lea	edi, [esp+43Ch+Dest]
		call	strlen
		cmp	byte ptr [esi+eax-1], 0Ah
		mov	[esp+43Ch+Source], offset Source ; Source
		mov	[esp+43Ch+Str],	edi ; Dest
		setz	al
		movzx	eax, al
		mov	dword_67E19018,	eax
		call	strcpy
		mov	ebp, dword_67E1901C
		cmp	ebp, 0FFFFFFFFh
		jz	loc_67DFAD00

loc_67DFAC38:				; CODE XREF: sub_67DFABC0+178j
					; sub_67DFABC0+19Bj
		mov	edx, edi

loc_67DFAC3A:				; CODE XREF: sub_67DFABC0+8Ej
		mov	ecx, [edx]
		add	edx, 4
		lea	eax, [ecx-1010101h]
		not	ecx
		and	eax, ecx
		and	eax, 80808080h
		jz	short loc_67DFAC3A
		test	eax, 8080h
		jz	loc_67DFAD40

loc_67DFAC5B:				; CODE XREF: sub_67DFABC0+186j
		add	al, al
		mov	eax, [esp+43Ch+arg_8]
		sbb	edx, 3
		add	ebx, ebp
		mov	[esp+43Ch+Str],	edx ; Dest
		mov	[esp+43Ch+Args], ebx
		mov	[esp+43Ch+var_42C], eax
		mov	eax, [esp+43Ch+arg_4]
		mov	[esp+43Ch+Source], offset Format ; "[%s(%d):%s]	"
		mov	[esp+43Ch+var_430], eax
		call	sprintf
		mov	edx, edi

loc_67DFAC8E:				; CODE XREF: sub_67DFABC0+E2j
		mov	ecx, [edx]
		add	edx, 4
		lea	eax, [ecx-1010101h]
		not	ecx
		and	eax, ecx
		and	eax, 80808080h
		jz	short loc_67DFAC8E
		test	eax, 8080h
		jnz	short loc_67DFACB1
		shr	eax, 10h
		add	edx, 2

loc_67DFACB1:				; CODE XREF: sub_67DFABC0+E9j
		add	al, al
		sbb	edx, 3
		lea	eax, [esp+43Ch+arg_10]
		mov	[esp+43Ch+Args], eax ; Args
		mov	[esp+43Ch+Source], esi ; Format
		mov	[esp+43Ch+Str],	edx ; Dest
		call	vsprintf
		mov	[esp+43Ch+Str],	edi ; lpOutputString
		call	ds:OutputDebugStringA
		sub	esp, 4

loc_67DFACD9:				; CODE XREF: sub_67DFABC0+37j
		mov	ebx, [esp+43Ch+var_10]
		mov	esi, [esp+43Ch+var_C]
		mov	edi, [esp+43Ch+var_8]
		mov	ebp, [esp+43Ch+var_4]
		add	esp, 43Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFAD00:				; CODE XREF: sub_67DFABC0+72j
		mov	[esp+43Ch+Str],	ebx ; Str
		call	strlen
		mov	dword_67E1901C,	0
		add	eax, ebx
		jb	short loc_67DFAD36
		xor	ebp, ebp

loc_67DFAD18:				; CODE XREF: sub_67DFABC0+174j
		movzx	edx, byte ptr [eax]
		cmp	dl, 2Fh
		jz	short loc_67DFAD25
		cmp	dl, 5Ch
		jnz	short loc_67DFAD2F

loc_67DFAD25:				; CODE XREF: sub_67DFABC0+15Ej
		cmp	ebp, 1
		jz	short loc_67DFAD50
		mov	ebp, 1

loc_67DFAD2F:				; CODE XREF: sub_67DFABC0+163j
		sub	eax, 1
		cmp	ebx, eax
		jbe	short loc_67DFAD18

loc_67DFAD36:				; CODE XREF: sub_67DFABC0+154j
		xor	ebp, ebp
		jmp	loc_67DFAC38
; ---------------------------------------------------------------------------
		align 10h

loc_67DFAD40:				; CODE XREF: sub_67DFABC0+95j
		shr	eax, 10h
		add	edx, 2
		jmp	loc_67DFAC5B
; ---------------------------------------------------------------------------
		align 10h

loc_67DFAD50:				; CODE XREF: sub_67DFABC0+168j
		sub	ebp, ebx
		lea	ebp, [eax+ebp]
		mov	dword_67E1901C,	ebp
		jmp	loc_67DFAC38
sub_67DFABC0	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DFAD60(char	*, char)
sub_67DFAD60	proc near		; CODE XREF: sub_67DC7A30+772p
					; sub_67DC7A30+78Bp ...

File		= dword	ptr -1Ch
Format		= dword	ptr -18h
ArgList		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		sub	esp, 1Ch
		mov	ecx, ds:dword_67E34124
		test	ecx, ecx
		jz	short loc_67DFADA0

loc_67DFAD6D:				; CODE XREF: sub_67DFAD60+80j
		lea	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+ArgList], eax ; ArgList
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+Format], eax ;	Format
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+1Ch+File],	eax ; File
		call	vfprintf
		mov	edx, ds:dword_67E34128
		test	edx, edx
		jnz	short loc_67DFAE16
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFADA0:				; CODE XREF: sub_67DFAD60+Bj
		mov	[esp+1Ch+File],	offset aDbus_fatal_war ; "DBUS_FATAL_WARNINGS"
		call	sub_67E09AD0
		test	eax, eax
		jz	short loc_67DFADD6
		movzx	edx, byte ptr [eax]
		test	dl, dl
		jz	short loc_67DFADD6
		cmp	dl, 30h
		jz	short loc_67DFAE00
		cmp	dl, 31h
		nop
		jnz	short loc_67DFADE2
		mov	ds:dword_67E34128, 1
		mov	dword_67E19024,	1

loc_67DFADD6:				; CODE XREF: sub_67DFAD60+4Ej
					; sub_67DFAD60+55j ...
		mov	ds:dword_67E34124, 1
		jmp	short loc_67DFAD6D
; ---------------------------------------------------------------------------

loc_67DFADE2:				; CODE XREF: sub_67DFAD60+60j
		mov	[esp+1Ch+ArgList], eax
		mov	eax, ds:_iob
		mov	[esp+1Ch+Format], offset aDbus_fatal_w_0 ; "DBUS_FATAL_WARNINGS	should be set to 0 "...
		add	eax, 40h
		mov	[esp+1Ch+File],	eax ; File
		call	fprintf
		jmp	short loc_67DFADD6
; ---------------------------------------------------------------------------

loc_67DFAE00:				; CODE XREF: sub_67DFAD60+5Aj
		mov	ds:dword_67E34128, 0
		mov	dword_67E19024,	0
		jmp	short loc_67DFADD6
; ---------------------------------------------------------------------------

loc_67DFAE16:				; CODE XREF: sub_67DFAD60+35j
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+1Ch+File],	eax ; File
		call	fflush
		call	sub_67E09C00
sub_67DFAD60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_67DFAE30	proc near		; CODE XREF: sub_67DCF230+41Cp
					; sub_67DD5860+41p ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 2Ch
		call	sub_67E0C920
		mov	edx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], offset aFileSLineDProc ; "File \"%s\"	line %d	process	%lu should "...
		mov	[esp+2Ch+var_1C], edx
		mov	[esp+2Ch+var_20], eax
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_24], eax
		mov	eax, dword ptr [esp+2Ch+arg_4]
		mov	dword ptr [esp+2Ch+var_28], eax	; char
		call	sub_67DFAD60
		call	sub_67E09C00
sub_67DFAE30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFAE70	proc near		; CODE XREF: sub_67DC1510+15Bp
					; dbus_address_unescape_value+AAp ...

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_0]
		test	eax, eax
		jnz	short loc_67DFAEB5
		call	sub_67E0C920
		mov	edx, [esp+2Ch+arg_10]
		mov	[esp+2Ch+var_2C], offset aLuAssertionFai ; "%lu: assertion failed \"%s\" file \"%s\"...
		mov	[esp+2Ch+var_18], edx
		mov	edx, [esp+2Ch+arg_C]
		mov	dword ptr [esp+2Ch+var_28], eax	; char
		mov	[esp+2Ch+var_1C], edx
		mov	edx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_20], edx
		mov	edx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_24], edx
		call	sub_67DFAD60
		call	sub_67E09C00
; ---------------------------------------------------------------------------

loc_67DFAEB5:				; CODE XREF: sub_67DFAE70+9j
		add	esp, 2Ch
		retn
sub_67DFAE70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFAEC0	proc near		; CODE XREF: .text:67DFB265p
					; .text:67DFB4C4p

var_2C		= dword	ptr -2Ch
var_28		= byte ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		test	eax, eax
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, edx
		mov	[esp+2Ch+var_4], esi
		mov	esi, ecx
		jnz	short loc_67DFAF05
		call	sub_67E0C920
		mov	edx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], esi
		mov	[esp+2Ch+var_20], offset aRBuildWin32_34 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_24], ebx
		mov	[esp+2Ch+var_18], edx
		mov	[esp+2Ch+var_2C], offset aLuAssertionFai ; "%lu: assertion failed \"%s\" file \"%s\"...
		mov	dword ptr [esp+2Ch+var_28], eax	; char
		call	sub_67DFAD60
		call	sub_67E09C00
; ---------------------------------------------------------------------------

loc_67DFAF05:				; CODE XREF: sub_67DFAEC0+11j
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
sub_67DFAEC0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DFAF20
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFAF20	proc near		; CODE XREF: sub_67DC29C0+1Cp
					; dbus_server_set_auth_mechanisms+8Ep ...

Str		= dword	ptr -3Ch
Src		= dword	ptr -38h
Size		= dword	ptr -34h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	edi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_28], 0
		test	edi, edi
		jnz	short loc_67DFAF43

loc_67DFAF37:				; CODE XREF: sub_67DFAF20+4Fj
					; sub_67DFAF20+53j ...
		mov	eax, [esp+3Ch+var_28]
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DFAF43:				; CODE XREF: sub_67DFAF20+15j
		mov	ecx, [edi]
		xor	ebx, ebx
		mov	eax, 4
		test	ecx, ecx
		jz	short loc_67DFAF61

loc_67DFAF50:				; CODE XREF: sub_67DFAF20+38j
		add	ebx, 1
		mov	edx, [edi+ebx*4]
		test	edx, edx
		jnz	short loc_67DFAF50
		lea	eax, ds:4[ebx*4]

loc_67DFAF61:				; CODE XREF: sub_67DFAF20+2Ej
		mov	[esp+3Ch+Str], eax ; size_t
		call	dbus_malloc0
		test	eax, eax
		mov	[esp+3Ch+var_28], eax
		jz	short loc_67DFAF37
		test	ebx, ebx
		jz	short loc_67DFAF37
		xor	esi, esi
		mov	ebp, eax
		mov	[esp+3Ch+var_20], ebx

loc_67DFAF7D:				; CODE XREF: sub_67DFAF20+DCj
		mov	ebx, [edi+esi*4]
		lea	ecx, [ebp+esi*4+0]
		test	ebx, ebx
		jnz	short loc_67DFAFB0

loc_67DFAF88:				; CODE XREF: sub_67DFAF20+B3j
		mov	dword ptr [ecx], 0
		mov	[esp+3Ch+Str], ebp
		call	dbus_free_string_array
		mov	[esp+3Ch+var_28], 0
		mov	eax, [esp+3Ch+var_28]
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFAFB0:				; CODE XREF: sub_67DFAF20+66j
		mov	[esp+3Ch+Str], ebx ; Str
		mov	[esp+3Ch+var_2C], ecx
		call	strlen
		add	eax, 1
		mov	[esp+3Ch+var_24], eax
		mov	[esp+3Ch+Str], eax ; Size
		call	dbus_malloc
		mov	ecx, [esp+3Ch+var_2C]
		test	eax, eax
		mov	edx, eax
		jz	short loc_67DFAF88
		mov	eax, [esp+3Ch+var_24]
		mov	[esp+3Ch+Str], edx ; Dst
		mov	[esp+3Ch+var_2C], edx
		mov	[esp+3Ch+Src], ebx ; Src
		mov	[esp+3Ch+Size],	eax ; Size
		call	memcpy
		mov	edx, [esp+3Ch+var_2C]
		mov	[ebp+esi*4+0], edx
		add	esi, 1
		cmp	[esp+3Ch+var_20], esi
		jg	loc_67DFAF7D
		jmp	loc_67DFAF37
sub_67DFAF20	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 8Ch
		mov	[esp+80h], esi
		lea	esi, [esp+30h]
		mov	[esp+88h], ebp
		mov	ebp, [esp+9Ch]
		mov	dword ptr [esp+60h], 0
		mov	[esp+7Ch], ebx
		mov	[esp+84h], edi
		mov	dword ptr [esp+58h], 0
		mov	dword ptr [esp+5Ch], 0
		mov	dword ptr [esp+64h], 0
		mov	byte ptr [esp+60h], 1
		mov	[esp], esi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DFB0F8
		lea	edi, [esp+44h]
		mov	[esp], edi
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67DFB0F0
		mov	eax, [esp+90h]
		lea	ebx, [esp+58h]
		mov	[esp+8], ebx
		mov	[esp], esi
		mov	[esp+4], eax
		call	sub_67E0A6A0
		test	eax, eax
		jnz	loc_67DFB310

loc_67DFB0A2:				; CODE XREF: .text:67DFB36Ej
					; .text:67DFB3EFj ...
		mov	[esp], ebx
		call	dbus_error_is_set
		test	eax, eax
		jnz	loc_67DFB2A0
		call	sub_67E0C920
		mov	dword ptr [esp+14h], offset a_dbus_read_uui ; "_dbus_read_uuid_file_without_creating"
		mov	dword ptr [esp+10h], 2B4h

loc_67DFB0C7:				; CODE XREF: .text:67DFB388j
		mov	[esp+4], eax
		mov	dword ptr [esp+0Ch], offset aRBuildWin32_34 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+8], offset aErrorNullDb_29 ; "(error) ==	NULL ||	dbus_error_is_set (("...
		mov	dword ptr [esp], offset	aLuAssertionFai	; "%lu:	assertion failed \"%s\"	file \"%s\"...
		call	sub_67DFAD60
		call	sub_67E09C00
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB0F0:				; CODE XREF: .text:67DFB07Dj
		mov	[esp], esi
		call	sub_67E02BF0

loc_67DFB0F8:				; CODE XREF: .text:67DFB069j
		mov	eax, off_67E19010
		lea	ebx, [esp+58h]
		mov	dword ptr [esp+4], offset aOrg_freedes_70 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp], ebx
		mov	[esp+8], eax
		call	dbus_set_error_const

loc_67DFB115:				; CODE XREF: .text:67DFB2B0j
		mov	edi, [esp+98h]
		test	edi, edi
		jz	loc_67DFB271
		mov	dword ptr [esp+4], offset aOrg_freedes_71 ; "org.freedesktop.DBus.Error.InvalidFileC"...
		mov	[esp], ebx
		call	dbus_error_has_name
		test	eax, eax
		jnz	loc_67DFB271
		lea	edi, [esp+44h]
		mov	[esp], ebx
		call	dbus_error_free
		mov	[esp], edi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67DFB2B5
		lea	eax, [esp+68h]
		mov	[esp], eax
		mov	dword ptr [esp+4], 0
		call	sub_67E0C850
		mov	edx, [esp+68h]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	edx, [esp+94h]
		mov	[edx+0Ch], eax
		mov	[esp], edx
		mov	dword ptr [esp+4], 0Ch
		call	sub_67E09EA0
		mov	eax, [esp+94h]
		mov	dword ptr [esp+8], 10h
		mov	[esp], esi
		mov	[esp+4], eax
		call	sub_67E01AC0
		mov	[esp], edi
		call	sub_67E00CE0
		mov	[esp+8], edi
		mov	dword ptr [esp+4], 0
		mov	[esp], esi
		mov	[esp+0Ch], eax
		call	sub_67E080C0
		test	eax, eax
		jz	loc_67DFB2D2
		mov	dword ptr [esp+4], 0Ah
		mov	[esp], edi
		call	sub_67E067A0
		test	eax, eax
		jz	loc_67DFB2D2
		mov	edx, [esp+90h]
		mov	[esp+0Ch], ebp
		mov	dword ptr [esp+8], 1
		mov	[esp], edi
		mov	[esp+4], edx
		call	sub_67E0A200
		test	eax, eax
		jz	loc_67DFB2EB
		mov	[esp], edi
		call	sub_67E02BF0
		test	ebp, ebp
		jz	loc_67DFB46E
		mov	[esp], ebp
		call	dbus_error_is_set
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	loc_67DFB46E

loc_67DFB254:				; CODE XREF: .text:67DFB473j
		mov	ecx, 2DAh
		mov	edx, offset aErrorNullDb_30 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	dword ptr [esp], offset	a_dbus_create_u	; "_dbus_create_uuid_file_exclusively"
		call	sub_67DFAEC0
		mov	eax, 1
		jmp	short loc_67DFB27F
; ---------------------------------------------------------------------------

loc_67DFB271:				; CODE XREF: .text:67DFB11Ej
					; .text:67DFB136j
		mov	[esp+4], ebp
		mov	[esp], ebx
		call	dbus_move_error
		xor	eax, eax

loc_67DFB27F:				; CODE XREF: .text:67DFB26Fj
					; .text:67DFB2D0j ...
		mov	ebx, [esp+7Ch]
		mov	esi, [esp+80h]
		mov	edi, [esp+84h]
		mov	ebp, [esp+88h]
		add	esp, 8Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB2A0:				; CODE XREF: .text:67DFB0ACj
		mov	[esp], esi
		call	sub_67E02BF0
		mov	[esp], edi
		call	sub_67E02BF0
		jmp	loc_67DFB115
; ---------------------------------------------------------------------------

loc_67DFB2B5:				; CODE XREF: .text:67DFB152j
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_70 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp], ebp
		mov	[esp+8], eax
		call	dbus_set_error_const
		xor	eax, eax
		jmp	short loc_67DFB27F
; ---------------------------------------------------------------------------

loc_67DFB2D2:				; CODE XREF: .text:67DFB1EBj
					; .text:67DFB203j
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_70 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp], ebp
		mov	[esp+8], eax
		call	dbus_set_error_const

loc_67DFB2EB:				; CODE XREF: .text:67DFB22Aj
		test	ebp, ebp
		jz	short loc_67DFB2FB
		mov	[esp], ebp
		call	dbus_error_is_set
		test	eax, eax
		jz	short loc_67DFB373

loc_67DFB2FB:				; CODE XREF: .text:67DFB2EDj
		mov	[esp], edi
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67DFB27F
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB310:				; CODE XREF: .text:67DFB09Cj
		mov	[esp], esi
		call	sub_67E07400
		mov	[esp], esi
		call	sub_67E00CE0
		cmp	eax, 20h
		jz	short loc_67DFB390
		mov	[esp], esi
		call	sub_67E00CE0
		mov	edx, eax
		mov	eax, [esp+90h]
		mov	[esp+2Ch], edx
		mov	[esp], eax
		call	sub_67E01770
		mov	edx, [esp+2Ch]
		mov	dword ptr [esp+10h], 20h
		mov	dword ptr [esp+8], offset aUuidFileSShoul ; "UUID file '%s' should contain a hex str"...
		mov	dword ptr [esp+4], offset aOrg_freedes_71 ; "org.freedesktop.DBus.Error.InvalidFileC"...
		mov	[esp+14h], edx
		mov	[esp], ebx
		mov	[esp+0Ch], eax
		call	dbus_set_error
		jmp	loc_67DFB0A2
; ---------------------------------------------------------------------------

loc_67DFB373:				; CODE XREF: .text:67DFB2F9j
		call	sub_67E0C920
		mov	dword ptr [esp+14h], offset a_dbus_create_u ; "_dbus_create_uuid_file_exclusively"
		mov	dword ptr [esp+10h], 2DEh
		jmp	loc_67DFB0C7
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB390:				; CODE XREF: .text:67DFB323j
		lea	eax, [esp+6Ch]
		mov	dword ptr [esp+10h], 0
		mov	[esp+0Ch], edi
		mov	[esp+8], eax
		mov	dword ptr [esp+4], 0
		mov	[esp], esi
		call	sub_67E06B70
		test	eax, eax
		jz	loc_67DFB450
		mov	eax, [esp+6Ch]
		test	eax, eax
		jnz	short loc_67DFB3F4
		mov	edx, [esp+90h]
		mov	[esp], edx
		call	sub_67E01770
		mov	dword ptr [esp+8], offset aUuidFileSConta ; "UUID file '%s' contains invalid hex dat"...
		mov	dword ptr [esp+4], offset aOrg_freedes_71 ; "org.freedesktop.DBus.Error.InvalidFileC"...
		mov	[esp], ebx
		mov	[esp+0Ch], eax
		call	dbus_set_error
		jmp	loc_67DFB0A2
; ---------------------------------------------------------------------------

loc_67DFB3F4:				; CODE XREF: .text:67DFB3C2j
		mov	[esp], edi
		call	sub_67E00CE0
		cmp	eax, 10h
		nop
		jz	short loc_67DFB478
		mov	[esp], edi
		call	sub_67E00CE0
		mov	edx, eax
		mov	eax, [esp+90h]
		mov	[esp+2Ch], edx
		mov	[esp], eax
		call	sub_67E01770
		mov	edx, [esp+2Ch]
		mov	dword ptr [esp+14h], 10h
		mov	dword ptr [esp+8], offset aUuidFileSCon_0 ; "UUID file '%s' contains %d bytes of hex"...
		mov	dword ptr [esp+4], offset aOrg_freedes_71 ; "org.freedesktop.DBus.Error.InvalidFileC"...
		mov	[esp+10h], edx
		mov	[esp], ebx
		mov	[esp+0Ch], eax
		call	dbus_set_error
		jmp	loc_67DFB0A2
; ---------------------------------------------------------------------------

loc_67DFB450:				; CODE XREF: .text:67DFB3B6j
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_70 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp], ebx
		mov	[esp+8], eax
		call	dbus_set_error_const
		jmp	loc_67DFB0A2
; ---------------------------------------------------------------------------

loc_67DFB46E:				; CODE XREF: .text:67DFB23Aj
					; .text:67DFB24Ej
		mov	eax, 1
		jmp	loc_67DFB254
; ---------------------------------------------------------------------------

loc_67DFB478:				; CODE XREF: .text:67DFB400j
		mov	edx, [esp+94h]
		mov	dword ptr [esp+8], 10h
		mov	[esp], edi
		mov	[esp+4], edx
		call	sub_67E02820
		mov	[esp], edi
		call	sub_67E02BF0
		mov	[esp], esi
		call	sub_67E02BF0
		mov	[esp], ebx
		call	dbus_error_is_set
		mov	ecx, 2AFh
		mov	edx, offset aErrorNullDb_30 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	dword ptr [esp], offset	a_dbus_read_uui	; "_dbus_read_uuid_file_without_creating"
		test	eax, eax
		setz	al
		movzx	eax, al
		call	sub_67DFAEC0
		mov	eax, 1
		jmp	loc_67DFB27F
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DFB4E0(char	*, char)
sub_67DFB4E0	proc near		; CODE XREF: dbus_bus_remove_match+F8p
					; dbus_bus_add_match+FFp ...

File		= dword	ptr -1Ch
Format		= dword	ptr -18h
ArgList		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		sub	esp, 1Ch
		mov	ecx, ds:dword_67E34124
		test	ecx, ecx
		jz	short loc_67DFB540

loc_67DFB4ED:				; CODE XREF: sub_67DFB4E0+A0j
		call	sub_67E0C920
		mov	[esp+1Ch+Format], offset aProcessLu ; "process %lu: "
		mov	[esp+1Ch+ArgList], eax
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+1Ch+File],	eax ; File
		call	fprintf
		lea	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+ArgList], eax ; ArgList
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+Format], eax ;	Format
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+1Ch+File],	eax ; File
		call	vfprintf
		mov	edx, dword_67E19024
		test	edx, edx
		jnz	loc_67DFB5B9
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DFB540:				; CODE XREF: sub_67DFB4E0+Bj
		mov	[esp+1Ch+File],	offset aDbus_fatal_war ; "DBUS_FATAL_WARNINGS"
		call	sub_67E09AD0
		test	eax, eax
		jz	short loc_67DFB576
		movzx	edx, byte ptr [eax]
		test	dl, dl
		jz	short loc_67DFB576
		cmp	dl, 30h
		jz	short loc_67DFB5A3
		cmp	dl, 31h
		nop
		jnz	short loc_67DFB585
		mov	ds:dword_67E34128, 1
		mov	dword_67E19024,	1

loc_67DFB576:				; CODE XREF: sub_67DFB4E0+6Ej
					; sub_67DFB4E0+75j ...
		mov	ds:dword_67E34124, 1
		jmp	loc_67DFB4ED
; ---------------------------------------------------------------------------

loc_67DFB585:				; CODE XREF: sub_67DFB4E0+80j
		mov	[esp+1Ch+ArgList], eax
		mov	eax, ds:_iob
		mov	[esp+1Ch+Format], offset aDbus_fatal_w_0 ; "DBUS_FATAL_WARNINGS	should be set to 0 "...
		add	eax, 40h
		mov	[esp+1Ch+File],	eax ; File
		call	fprintf
		jmp	short loc_67DFB576
; ---------------------------------------------------------------------------

loc_67DFB5A3:				; CODE XREF: sub_67DFB4E0+7Aj
		mov	ds:dword_67E34128, 0
		mov	dword_67E19024,	0
		jmp	short loc_67DFB576
; ---------------------------------------------------------------------------

loc_67DFB5B9:				; CODE XREF: sub_67DFB4E0+56j
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+1Ch+File],	eax ; File
		call	fflush
		call	sub_67E09C00
sub_67DFB4E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFB5D0	proc near		; CODE XREF: dbus_connection_dispatch+A1Fp
					; dbus_get_local_machine_id+28p

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_34		= byte ptr -34h
var_20		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 44h
		mov	eax, ds:dword_67E34D88
		mov	esi, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1A90
		mov	ebx, dword_67E19028
		test	ebx, ebx
		jz	short loc_67DFB635
		lea	ebx, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_18], 0
		mov	[esp+4Ch+var_20], 0
		mov	dword ptr [esp+4Ch+var_1C], 0
		mov	[esp+4Ch+var_14], 0
		mov	byte ptr [esp+4Ch+var_18], 1
		mov	[esp+4Ch+var_44], ebx
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], offset dword_67E34540
		call	sub_67E0B630
		test	eax, eax
		jz	short loc_67DFB688

loc_67DFB635:				; CODE XREF: sub_67DFB5D0+1Ej
					; sub_67DFB5D0+129j
		lea	ebx, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_4C], ebx
		mov	[esp+4Ch+var_44], 10h
		mov	[esp+4Ch+var_48], offset dword_67E34540
		call	sub_67E01AC0
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E00CE0
		mov	[esp+4Ch+var_44], esi
		mov	[esp+4Ch+var_4C], ebx
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_40], eax
		call	sub_67E080C0
		mov	ebx, eax
		mov	eax, ds:dword_67E34D88
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DF1AD0
		mov	eax, ebx
		add	esp, 44h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DFB688:				; CODE XREF: sub_67DFB5D0+63j
		mov	eax, dword ptr [esp+4Ch+var_1C]
		mov	[esp+4Ch+var_4C], offset aDBusLibraryApp ; "D-Bus library appears to be	incorrectly"...
		mov	[esp+4Ch+var_48], eax ;	char
		call	sub_67DFB4E0
		mov	[esp+4Ch+var_4C], ebx
		call	dbus_error_free
		lea	eax, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_48], 0
		call	sub_67E0C850
		mov	edx, [esp+4Ch+var_10]
		mov	[esp+4Ch+var_48], 0Ch ;	size_t
		mov	[esp+4Ch+var_4C], offset dword_67E34540	; void *
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	ds:dword_67E3454C, eax
		call	sub_67E09EA0
		jmp	loc_67DFB635
sub_67DFB5D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFB700	proc near		; CODE XREF: sub_67DCD4E0+4Cp
					; sub_67DCE140+54p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		mov	ecx, [esp+4+arg_0]
		mov	eax, [esp+4+arg_4]
		mov	edx, [ecx]
		test	edx, edx
		jz	short loc_67DFB740
		mov	ebx, [edx]
		mov	[eax+4], edx
		mov	[eax], ebx
		mov	[edx], eax
		mov	ebx, [eax]
		mov	[ebx+4], eax
		mov	ebx, [ecx]
		cmp	edx, ebx
		jz	short loc_67DFB730
		mov	eax, [ebx+4]
		mov	[ecx], eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB730:				; CODE XREF: sub_67DFB700+21j
		mov	ebx, eax
		mov	[ecx], eax
		mov	eax, [ebx+4]
		mov	[ecx], eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB740:				; CODE XREF: sub_67DFB700+Dj
		mov	ebx, eax
		mov	[eax], eax
		mov	[eax+4], eax
		mov	[ecx], eax
		mov	eax, [ebx+4]
		mov	[ecx], eax
		pop	ebx
		retn
sub_67DFB700	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DFB750	proc near		; CODE XREF: sub_67DCD2A0+D6p
					; sub_67DCD2A0+1D5p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		mov	ecx, [esp+4+arg_0]
		mov	eax, [esp+4+arg_4]
		mov	edx, [ecx]
		test	edx, edx
		jz	short loc_67DFB777
		mov	ebx, [edx]
		mov	[eax+4], edx
		mov	[eax], ebx
		mov	[edx], eax
		mov	ebx, [eax]
		mov	[ebx+4], eax
		cmp	edx, [ecx]
		jz	short loc_67DFB773
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFB773:				; CODE XREF: sub_67DFB750+1Fj
		mov	[ecx], eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFB777:				; CODE XREF: sub_67DFB750+Dj
		mov	[eax], eax
		mov	[eax+4], eax
		mov	[ecx], eax
		pop	ebx
		nop
		retn
sub_67DFB750	endp

; ---------------------------------------------------------------------------
		jmp	short loc_67DFB790
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB790:				; CODE XREF: .text:67DFB781j
		push	ebx
		mov	edx, [esp+0Ch]
		mov	ecx, [esp+8]
		mov	eax, [esp+10h]
		test	edx, edx
		jz	short loc_67DFB7C4
		mov	ebx, [ecx]
		test	ebx, ebx
		jz	short loc_67DFB7E5
		mov	ebx, [edx]
		mov	[eax+4], edx
		mov	[eax], ebx
		mov	[edx], eax
		mov	ebx, [eax]
		mov	[ebx+4], eax
		cmp	edx, [ecx]
		jz	short loc_67DFB7C0
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB7C0:				; CODE XREF: .text:67DFB7B7j
		mov	[ecx], eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFB7C4:				; CODE XREF: .text:67DFB79Fj
		mov	edx, [ecx]
		test	edx, edx
		jz	short loc_67DFB7F6
		mov	ebx, [edx]
		mov	[eax+4], edx
		mov	[eax], ebx
		mov	[edx], eax
		mov	ebx, [eax]
		mov	[ebx+4], eax
		mov	ebx, [ecx]
		cmp	edx, ebx
		jz	short loc_67DFB7F0

loc_67DFB7DE:				; CODE XREF: .text:67DFB7F4j
					; .text:67DFB7FFj
		mov	eax, [ebx+4]
		mov	[ecx], eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFB7E5:				; CODE XREF: .text:67DFB7A5j
		mov	[eax], eax
		mov	[eax+4], eax
		mov	[ecx], eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB7F0:				; CODE XREF: .text:67DFB7DCj
		mov	[ecx], eax
		mov	ebx, eax
		jmp	short loc_67DFB7DE
; ---------------------------------------------------------------------------

loc_67DFB7F6:				; CODE XREF: .text:67DFB7C8j
		mov	[eax], eax
		mov	ebx, eax
		mov	[eax+4], eax
		mov	[ecx], eax
		jmp	short loc_67DFB7DE
; ---------------------------------------------------------------------------
		jmp	short loc_67DFB810
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB810:				; CODE XREF: .text:67DFB801j
		push	ebx
		mov	edx, [esp+0Ch]
		mov	ecx, [esp+8]
		mov	eax, [esp+10h]
		test	edx, edx
		jz	short loc_67DFB840
		mov	ebx, [ecx]
		test	ebx, ebx
		jz	short loc_67DFB862
		mov	ecx, [edx+4]
		mov	[eax], edx
		mov	[eax+4], ecx
		mov	[edx+4], eax
		mov	edx, [eax+4]
		mov	[edx], eax

loc_67DFB837:				; CODE XREF: .text:67DFB856j
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB840:				; CODE XREF: .text:67DFB81Fj
		mov	edx, [ecx]
		test	edx, edx
		jz	short loc_67DFB870
		mov	ebx, [edx]
		mov	[eax+4], edx
		mov	[eax], ebx
		mov	[edx], eax
		mov	ebx, [eax]
		mov	[ebx+4], eax
		cmp	edx, [ecx]
		jnz	short loc_67DFB837
		mov	[ecx], eax
		lea	esi, [esi+0]

loc_67DFB860:				; CODE XREF: .text:67DFB869j
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFB862:				; CODE XREF: .text:67DFB825j
		mov	[eax], eax
		mov	[eax+4], eax
		mov	[ecx], eax
		jmp	short loc_67DFB860
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB870:				; CODE XREF: .text:67DFB844j
		mov	[eax], eax
		mov	[eax+4], eax
		mov	[ecx], eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFB880	proc near		; CODE XREF: sub_67DE49F0+29p
					; sub_67DE5570+6CDp ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_0]
		mov	ecx, [esp+arg_4]
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DFB896
		mov	eax, [edx]
		jmp	short loc_67DFB896
; ---------------------------------------------------------------------------

loc_67DFB894:				; CODE XREF: sub_67DFB880+24j
		mov	eax, [eax]

loc_67DFB896:				; CODE XREF: sub_67DFB880+Ej
					; sub_67DFB880+12j
		test	eax, eax
		jz	short locret_67DFB8A8
		cmp	[eax+8], ecx
		lea	esi, [esi+0]
		jz	short locret_67DFB8A8
		cmp	edx, eax
		jnz	short loc_67DFB894
		xor	eax, eax

locret_67DFB8A8:			; CODE XREF: sub_67DFB880+18j
					; sub_67DFB880+20j
		rep retn
sub_67DFB880	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFB8B0	proc near		; CODE XREF: sub_67DCD2A0+C6p
					; sub_67DE49F0+6Cp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		mov	eax, [esp+4+arg_4]
		mov	ebx, [esp+4+arg_0]
		mov	edx, [eax+4]
		cmp	edx, eax
		jz	short loc_67DFB8F1
		mov	ecx, [eax]
		mov	[ecx+4], edx
		mov	edx, [eax+4]
		mov	[edx], ecx
		cmp	[ebx], eax
		jz	short loc_67DFB8E0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], 0
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB8E0:				; CODE XREF: sub_67DFB8B0+1Cj
		mov	[ebx], edx
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], 0
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFB8F1:				; CODE XREF: sub_67DFB8B0+Ej
		mov	dword ptr [ebx], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], 0
		pop	ebx
		retn
sub_67DFB8B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFB910	proc near		; CODE XREF: sub_67DC1870+16p
					; sub_67DC1870+50p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		retn
sub_67DFB910	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFB920	proc near		; CODE XREF: sub_67DCD2A0+4Ap
					; sub_67DCE450+194p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short locret_67DFB92E
		mov	eax, [edx]

locret_67DFB92E:			; CODE XREF: sub_67DFB920+Aj
		rep retn
sub_67DFB920	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_67DCD490

loc_67DFB930:				; CODE XREF: sub_67DCD490+48j
		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short locret_67DFB941
		mov	eax, [edx]
		mov	eax, [eax+8]

locret_67DFB941:			; CODE XREF: sub_67DCD490+2E4AAj
		rep retn
; END OF FUNCTION CHUNK	FOR sub_67DCD490
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFB950	proc near		; CODE XREF: dbus_connection_borrow_message+123p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short locret_67DFB95F
		mov	eax, [edx+8]

locret_67DFB95F:			; CODE XREF: sub_67DFB950+Aj
		rep retn
sub_67DFB950	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DFB970
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFB970	proc near		; CODE XREF: sub_67DCC490+8Ap
					; sub_67DCC490+A6p ...

arg_0		= dword	ptr  4

		push	ebx
		mov	edx, [esp+4+arg_0]
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_67DFB99D
		mov	ecx, [eax+4]
		cmp	eax, ecx
		jz	short loc_67DFB9A0
		mov	ebx, [eax]
		mov	[ebx+4], ecx
		mov	ecx, [eax+4]
		mov	[ecx], ebx
		cmp	eax, [edx]
		jz	short loc_67DFB9A8

loc_67DFB990:				; CODE XREF: sub_67DFB970+36j
					; sub_67DFB970+3Aj
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], 0

loc_67DFB99D:				; CODE XREF: sub_67DFB970+9j
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB9A0:				; CODE XREF: sub_67DFB970+10j
		mov	dword ptr [edx], 0
		jmp	short loc_67DFB990
; ---------------------------------------------------------------------------

loc_67DFB9A8:				; CODE XREF: sub_67DFB970+1Ej
		mov	[edx], ecx
		jmp	short loc_67DFB990
sub_67DFB970	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFB9B0	proc near		; CODE XREF: dbus_parse_address+2E8p
					; sub_67DE9510+139p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	ecx, [eax]
		xor	eax, eax
		test	ecx, ecx
		mov	edx, ecx
		jnz	short loc_67DFB9C4
		jmp	short locret_67DFB9CE
; ---------------------------------------------------------------------------

loc_67DFB9C0:				; CODE XREF: sub_67DFB9B0+1Cj
		test	edx, edx
		jz	short locret_67DFB9CE

loc_67DFB9C4:				; CODE XREF: sub_67DFB9B0+Cj
		mov	edx, [edx+4]
		add	eax, 1
		cmp	ecx, edx
		jnz	short loc_67DFB9C0

locret_67DFB9CE:			; CODE XREF: sub_67DFB9B0+Ej
					; sub_67DFB9B0+12j
		rep retn
sub_67DFB9B0	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DFB9D0	proc near		; CODE XREF: sub_67DCDAC0+26Ep
					; sub_67DCDAC0+291p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebp, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	edi, [esp+2Ch+arg_8]
		mov	edx, [ebp+0]
		test	edx, edx
		jz	short loc_67DFBA22
		mov	eax, edx
		jmp	short loc_67DFBA05
; ---------------------------------------------------------------------------
		align 10h

loc_67DFB9F0:				; CODE XREF: sub_67DFB9D0+3Aj
		mov	[esp+2Ch+var_28], edi
		mov	eax, [eax+8]
		mov	[esp+2Ch+var_2C], eax
		call	esi
		test	ebx, ebx
		jz	short loc_67DFBA22
		mov	edx, [ebp+0]
		mov	eax, ebx

loc_67DFBA05:				; CODE XREF: sub_67DFB9D0+1Cj
		mov	ebx, [eax+4]
		cmp	edx, ebx
		jnz	short loc_67DFB9F0
		mov	[esp+2Ch+arg_4], edi
		mov	eax, [eax+8]
		mov	[esp+2Ch+arg_0], eax
		add	esp, 1Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
; ---------------------------------------------------------------------------

loc_67DFBA22:				; CODE XREF: sub_67DFB9D0+18j
					; sub_67DFB9D0+2Ej
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DFB9D0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	edx, [eax]
		xor	eax, eax
		test	edx, edx
		jz	short locret_67DFBA44
		xor	eax, eax
		cmp	edx, [edx+4]
		setz	al

locret_67DFBA44:			; CODE XREF: .text:67DFBA3Aj
		rep retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBA50	proc near		; CODE XREF: sub_67DFBB10+Cp
					; sub_67DFBB70+Aj ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, eax
		mov	eax, ds:dword_67E34D8C
		mov	[esp+1Ch+var_4], esi
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34560
		test	eax, eax
		jz	short loc_67DFBAA0
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFE920
		test	eax, eax
		mov	esi, eax
		jz	short loc_67DFBA84

loc_67DFBA81:				; CODE XREF: sub_67DFBA50+79j
		mov	[esi+8], ebx

loc_67DFBA84:				; CODE XREF: sub_67DFBA50+2Fj
		mov	eax, ds:dword_67E34D8C
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1AD0

loc_67DFBA91:				; CODE XREF: sub_67DFBA50+9Fj
					; sub_67DFBA50+B0j
		mov	eax, esi
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFBAA0:				; CODE XREF: sub_67DFBA50+21j
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+var_1C], 0Ch
		call	sub_67DFE7F0
		test	eax, eax
		mov	ds:dword_67E34560, eax
		jz	short loc_67DFBAF1
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFE920
		test	eax, eax
		mov	esi, eax
		jnz	short loc_67DFBA81
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFEA20
		mov	eax, ds:dword_67E34D8C
		mov	ds:dword_67E34560, 0
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1AD0
		jmp	short loc_67DFBA91
; ---------------------------------------------------------------------------

loc_67DFBAF1:				; CODE XREF: sub_67DFBA50+6Bj
		mov	eax, ds:dword_67E34D8C
		xor	esi, esi
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1AD0
		jmp	short loc_67DFBA91
sub_67DFBA50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBB10	proc near		; CODE XREF: sub_67DD4800+B22p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 8
		mov	eax, [esp+0Ch+arg_4]
		mov	ebx, [esp+0Ch+arg_0]
		call	sub_67DFBA50
		xor	ecx, ecx
		test	eax, eax
		jz	short loc_67DFBB44
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_67DFBB60
		mov	ecx, [edx]
		mov	[eax+4], edx
		mov	[eax], ecx
		mov	[edx], eax
		mov	ecx, [eax]
		mov	[ecx+4], eax
		mov	ecx, 1
		cmp	edx, [ebx]
		jz	short loc_67DFBB50

loc_67DFBB44:				; CODE XREF: sub_67DFBB10+15j
					; sub_67DFBB10+59j
		mov	eax, ecx
		add	esp, 8
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFBB50:				; CODE XREF: sub_67DFBB10+32j
		mov	[ebx], eax
		mov	eax, ecx
		add	esp, 8
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFBB60:				; CODE XREF: sub_67DFBB10+1Bj
		mov	[eax], eax
		mov	cl, 1
		mov	[eax+4], eax
		mov	[ebx], eax
		jmp	short loc_67DFBB44
sub_67DFBB10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBB70	proc near		; CODE XREF: sub_67DCC490+D7p
					; sub_67DCC490+F6p ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		add	esp, 0Ch
		jmp	sub_67DFBA50
sub_67DFBB70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBB80	proc near		; CODE XREF: dbus_parse_address+C5p
					; dbus_parse_address+296p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 8
		mov	eax, [esp+0Ch+arg_4]
		mov	ebx, [esp+0Ch+arg_0]
		call	sub_67DFBA50
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DFBBBB
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_67DFBBC8
		mov	ecx, [edx]
		mov	[eax+4], edx
		mov	[eax], ecx
		mov	[edx], eax
		mov	ecx, [eax]
		mov	[ecx+4], eax
		mov	ecx, [ebx]
		cmp	edx, ecx
		jz	short loc_67DFBBC2

loc_67DFBBB1:				; CODE XREF: sub_67DFBB80+46j
					; sub_67DFBB80+51j
		mov	eax, [ecx+4]
		mov	edx, 1
		mov	[ebx], eax

loc_67DFBBBB:				; CODE XREF: sub_67DFBB80+15j
		mov	eax, edx
		add	esp, 8
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFBBC2:				; CODE XREF: sub_67DFBB80+2Fj
		mov	[ebx], eax
		mov	ecx, eax
		jmp	short loc_67DFBBB1
; ---------------------------------------------------------------------------

loc_67DFBBC8:				; CODE XREF: sub_67DFBB80+1Bj
		mov	[eax], eax
		mov	ecx, eax
		mov	[eax+4], eax
		mov	[ebx], eax
		jmp	short loc_67DFBBB1
sub_67DFBB80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBBE0	proc near		; CODE XREF: sub_67DCF230+3FBp
					; sub_67DF1820+14p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ecx, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_4]
		mov	eax, [ecx]
		mov	ebx, eax

loc_67DFBBF0:				; CODE XREF: sub_67DFBBE0+1Ej
		test	ebx, ebx
		jz	short loc_67DFBC00
		cmp	[ebx+8], edx
		jz	short loc_67DFBC07
		mov	ebx, [ebx+4]
		cmp	eax, ebx
		jnz	short loc_67DFBBF0

loc_67DFBC00:				; CODE XREF: sub_67DFBBE0+12j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFBC07:				; CODE XREF: sub_67DFBBE0+17j
		mov	eax, [ebx+4]
		cmp	ebx, eax
		jz	short loc_67DFBC7D
		mov	edx, [ebx]
		mov	[edx+4], eax
		mov	eax, [ebx+4]
		mov	[eax], edx
		cmp	ebx, [ecx]
		jz	short loc_67DFBC79

loc_67DFBC1C:				; CODE XREF: sub_67DFBBE0+9Bj
					; sub_67DFBBE0+A3j
		mov	eax, ds:dword_67E34D8C
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx], 0
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFE790
		test	eax, eax
		jz	short loc_67DFBC62
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFEA20
		mov	ds:dword_67E34560, 0

loc_67DFBC62:				; CODE XREF: sub_67DFBBE0+69j
		mov	eax, ds:dword_67E34D8C
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1AD0
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFBC79:				; CODE XREF: sub_67DFBBE0+3Aj
		mov	[ecx], eax
		jmp	short loc_67DFBC1C
; ---------------------------------------------------------------------------

loc_67DFBC7D:				; CODE XREF: sub_67DFBBE0+2Cj
		mov	dword ptr [ecx], 0
		jmp	short loc_67DFBC1C
sub_67DFBBE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBC90	proc near		; CODE XREF: sub_67DC1870+48p
					; sub_67DC1870+7Cp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [esp+1Ch+arg_0]
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_67DFBD02
		mov	edi, eax
		jmp	short loc_67DFBCA8
; ---------------------------------------------------------------------------

loc_67DFBCA4:				; CODE XREF: sub_67DFBC90+70j
		mov	eax, [esi]
		mov	edi, ebx

loc_67DFBCA8:				; CODE XREF: sub_67DFBC90+12j
		mov	ebx, [edi+4]
		cmp	ebx, eax
		setz	al
		movzx	eax, al
		sub	eax, 1
		and	ebx, eax
		mov	eax, ds:dword_67E34D8C
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_18], edi
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFE790
		test	eax, eax
		jz	short loc_67DFBCF1
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFEA20
		mov	ds:dword_67E34560, 0

loc_67DFBCF1:				; CODE XREF: sub_67DFBC90+48j
		mov	eax, ds:dword_67E34D8C
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1AD0
		test	ebx, ebx
		jnz	short loc_67DFBCA4

loc_67DFBD02:				; CODE XREF: sub_67DFBC90+Ej
		mov	dword ptr [esi], 0
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DFBC90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBD10	proc near		; CODE XREF: dbus_connection_dispatch+594p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	edi, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_list_cop ; "_dbus_list_copy"
		mov	[esp+2Ch+var_20], 2DDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_26 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		cmp	edi, esi
		setnz	al
		mov	[esp+2Ch+var_28], offset aListDest ; "list != dest"
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	dword ptr [esi], 0
		mov	ebx, [edi]
		jmp	short loc_67DFBD65
; ---------------------------------------------------------------------------

loc_67DFBD57:				; CODE XREF: sub_67DFBD10+81j
		mov	eax, ecx

loc_67DFBD59:				; CODE XREF: sub_67DFBD10+127j
		mov	eax, [eax+4]
		mov	[esi], eax
		mov	ebx, [ebx+4]
		cmp	ebx, [edi]
		jz	short loc_67DFBDA1

loc_67DFBD65:				; CODE XREF: sub_67DFBD10+45j
					; sub_67DFBD10+8Fj
		test	ebx, ebx
		jz	short loc_67DFBDA1
		mov	eax, [ebx+8]
		call	sub_67DFBA50
		test	eax, eax
		jz	short loc_67DFBDB0
		mov	edx, [esi]
		test	edx, edx
		jz	loc_67DFBE30
		mov	ecx, [edx]
		mov	[eax+4], edx
		mov	[eax], ecx
		mov	[edx], eax
		mov	ecx, [eax]
		mov	[ecx+4], eax
		mov	ecx, [esi]
		cmp	edx, ecx
		jnz	short loc_67DFBD57
		mov	[esi], eax
		mov	eax, [eax+4]
		mov	[esi], eax
		mov	ebx, [ebx+4]
		cmp	ebx, [edi]
		jnz	short loc_67DFBD65

loc_67DFBDA1:				; CODE XREF: sub_67DFBD10+53j
					; sub_67DFBD10+57j
		add	esp, 20h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFBDB0:				; CODE XREF: sub_67DFBD10+63j
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_67DFBE1E
		mov	edi, eax
		jmp	short loc_67DFBDC4
; ---------------------------------------------------------------------------
		align 10h

loc_67DFBDC0:				; CODE XREF: sub_67DFBD10+10Cj
		mov	eax, [esi]
		mov	edi, ebx

loc_67DFBDC4:				; CODE XREF: sub_67DFBD10+A8j
		mov	ebx, [edi+4]
		cmp	ebx, eax
		setz	al
		movzx	eax, al
		sub	eax, 1
		and	ebx, eax
		mov	eax, ds:dword_67E34D8C
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34560
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFE790
		test	eax, eax
		jz	short loc_67DFBE0D
		mov	eax, ds:dword_67E34560
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFEA20
		mov	ds:dword_67E34560, 0

loc_67DFBE0D:				; CODE XREF: sub_67DFBD10+E4j
		mov	eax, ds:dword_67E34D8C
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DF1AD0
		test	ebx, ebx
		jnz	short loc_67DFBDC0

loc_67DFBE1E:				; CODE XREF: sub_67DFBD10+A4j
		mov	dword ptr [esi], 0
		xor	eax, eax
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFBE30:				; CODE XREF: sub_67DFBD10+69j
		mov	[eax], eax
		mov	[eax+4], eax
		mov	[esi], eax
		jmp	loc_67DFBD59
sub_67DFBD10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBE40	proc near		; CODE XREF: dbus_connection_remove_filter+127p
					; sub_67DD2510+8Fp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_4]
		mov	ecx, [esp+1Ch+arg_0]
		mov	eax, [ebx+4]
		cmp	ebx, eax
		jz	short loc_67DFBEC4
		mov	edx, [ebx]
		mov	[edx+4], eax
		mov	eax, [ebx+4]
		mov	[eax], edx
		cmp	ebx, [ecx]
		jz	short loc_67DFBEC0

loc_67DFBE61:				; CODE XREF: sub_67DFBE40+82j
					; sub_67DFBE40+8Aj
		mov	eax, ds:dword_67E34D8C
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx], 0
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFE790
		test	eax, eax
		jz	short loc_67DFBEA7
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFEA20
		mov	ds:dword_67E34560, 0

loc_67DFBEA7:				; CODE XREF: sub_67DFBE40+4Ej
		mov	eax, ds:dword_67E34D8C
		mov	[esp+1Ch+arg_0], eax
		add	esp, 18h
		pop	ebx
		jmp	sub_67DF1AD0
; ---------------------------------------------------------------------------
		align 10h

loc_67DFBEC0:				; CODE XREF: sub_67DFBE40+1Fj
		mov	[ecx], eax
		jmp	short loc_67DFBE61
; ---------------------------------------------------------------------------

loc_67DFBEC4:				; CODE XREF: sub_67DFBE40+11j
		mov	dword ptr [ecx], 0
		jmp	short loc_67DFBE61
sub_67DFBE40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBED0	proc near		; CODE XREF: sub_67DCC490+108p
					; dbus_connection_free_preallocated_send+DEp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_67E34D8C
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFE790
		test	eax, eax
		jz	short loc_67DFBF11
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFEA20
		mov	ds:dword_67E34560, 0

loc_67DFBF11:				; CODE XREF: sub_67DFBED0+28j
		mov	eax, ds:dword_67E34D8C
		mov	[esp+1Ch+arg_0], eax
		add	esp, 18h
		pop	ebx
		jmp	sub_67DF1AD0
sub_67DFBED0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBF30	proc near		; CODE XREF: sub_67DDEA20+23Dp
					; sub_67DDEA20+25Fp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 14h
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, [eax]
		test	edx, edx
		jz	loc_67DFBFD0
		mov	esi, [edx]
		test	esi, esi
		jz	loc_67DFBFD0
		mov	edx, [esi+4]
		mov	ebx, [esi+8]
		cmp	esi, edx
		jz	loc_67DFBFE4
		mov	ecx, [esi]
		mov	[ecx+4], edx
		mov	edx, [esi+4]
		mov	[edx], ecx
		cmp	esi, [eax]
		jz	short loc_67DFBFE0

loc_67DFBF69:				; CODE XREF: sub_67DFBF30+B2j
					; sub_67DFBF30+BAj
		mov	eax, ds:dword_67E34D8C
		mov	dword ptr [esi+4], 0
		mov	dword ptr [esi], 0
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFE790
		test	eax, eax
		jnz	short loc_67DFBFB0

loc_67DFBF98:				; CODE XREF: sub_67DFBF30+97j
		mov	eax, ds:dword_67E34D8C
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1AD0
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFBFB0:				; CODE XREF: sub_67DFBF30+66j
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFEA20
		mov	ds:dword_67E34560, 0
		jmp	short loc_67DFBF98
; ---------------------------------------------------------------------------
		align 10h

loc_67DFBFD0:				; CODE XREF: sub_67DFBF30+Dj
					; sub_67DFBF30+17j
		xor	ebx, ebx
		add	esp, 14h
		mov	eax, ebx
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFBFE0:				; CODE XREF: sub_67DFBF30+37j
		mov	[eax], edx
		jmp	short loc_67DFBF69
; ---------------------------------------------------------------------------

loc_67DFBFE4:				; CODE XREF: sub_67DFBF30+25j
		mov	dword ptr [eax], 0
		jmp	loc_67DFBF69
sub_67DFBF30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFBFF0	proc near		; CODE XREF: sub_67DC50C0+49p
					; dbus_connection_steal_borrowed_message+1CEp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		xor	ebx, ebx
		sub	esp, 14h
		mov	eax, [esp+1Ch+arg_0]
		mov	esi, [eax]
		test	esi, esi
		jz	short loc_67DFC055
		mov	edx, [esi+4]
		mov	ebx, [esi+8]
		cmp	esi, edx
		jz	short loc_67DFC084
		mov	ecx, [esi]
		mov	[ecx+4], edx
		mov	edx, [esi+4]
		mov	[edx], ecx
		cmp	esi, [eax]
		jz	short loc_67DFC080

loc_67DFC019:				; CODE XREF: sub_67DFBFF0+92j
					; sub_67DFBFF0+9Aj
		mov	eax, ds:dword_67E34D8C
		mov	dword ptr [esi+4], 0
		mov	dword ptr [esi], 0
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFE790
		test	eax, eax
		jnz	short loc_67DFC060

loc_67DFC048:				; CODE XREF: sub_67DFBFF0+87j
		mov	eax, ds:dword_67E34D8C
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1AD0

loc_67DFC055:				; CODE XREF: sub_67DFBFF0+Fj
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC060:				; CODE XREF: sub_67DFBFF0+56j
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFEA20
		mov	ds:dword_67E34560, 0
		jmp	short loc_67DFC048
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC080:				; CODE XREF: sub_67DFBFF0+27j
		mov	[eax], edx
		jmp	short loc_67DFC019
; ---------------------------------------------------------------------------

loc_67DFC084:				; CODE XREF: sub_67DFBFF0+19j
		mov	dword ptr [eax], 0
		jmp	short loc_67DFC019
sub_67DFBFF0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 4
		mov	ebx, [esp+14h]
		mov	esi, [esp+10h]
		mov	eax, [esp+18h]
		test	ebx, ebx
		jz	short loc_67DFC0D3
		call	sub_67DFBA50
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DFC0CB
		mov	ecx, [esi]
		test	ecx, ecx
		jz	short loc_67DFC100
		mov	edx, [ebx+4]
		mov	[eax], ebx
		mov	[eax+4], edx
		mov	[ebx+4], eax
		mov	edx, [eax+4]
		mov	[edx], eax
		mov	edx, 1

loc_67DFC0CB:				; CODE XREF: .text:67DFC0AEj
					; .text:67DFC0DCj ...
		add	esp, 4
		mov	eax, edx
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DFC0D3:				; CODE XREF: .text:67DFC0A3j
		call	sub_67DFBA50
		xor	edx, edx
		test	eax, eax
		jz	short loc_67DFC0CB
		mov	ecx, [esi]
		test	ecx, ecx
		jz	short loc_67DFC100
		mov	edx, [ecx]
		mov	[eax+4], ecx
		mov	[eax], edx
		mov	[ecx], eax
		mov	edx, [eax]
		mov	[edx+4], eax
		mov	edx, 1
		cmp	ecx, [esi]
		jnz	short loc_67DFC0CB
		mov	[esi], eax
		jmp	short loc_67DFC0CB
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC100:				; CODE XREF: .text:67DFC0B4j
					; .text:67DFC0E2j
		mov	[eax], eax
		mov	dl, 1
		mov	[eax+4], eax
		mov	[esi], eax
		jmp	short loc_67DFC0CB
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFC110	proc near		; CODE XREF: sub_67DE5570+24Ap
					; sub_67DE5570+45Bp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		xor	ebx, ebx
		sub	esp, 18h
		mov	ecx, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_4]
		mov	eax, [ecx]
		test	eax, eax
		jz	short loc_67DFC126
		mov	ebx, [eax]

loc_67DFC126:				; CODE XREF: sub_67DFC110+12j
					; sub_67DFC110+32j
		test	ebx, ebx
		jz	short loc_67DFC133
		cmp	edx, [ebx+8]
		jz	short loc_67DFC144
		cmp	eax, ebx
		jnz	short loc_67DFC140

loc_67DFC133:				; CODE XREF: sub_67DFC110+18j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC140:				; CODE XREF: sub_67DFC110+21j
		mov	ebx, [ebx]
		jmp	short loc_67DFC126
; ---------------------------------------------------------------------------

loc_67DFC144:				; CODE XREF: sub_67DFC110+1Dj
		mov	edx, [ebx+4]
		cmp	ebx, edx
		jz	short loc_67DFC1BA
		mov	eax, [ebx]
		mov	[eax+4], edx
		mov	edx, [ebx+4]
		mov	[edx], eax
		cmp	ebx, [ecx]
		jz	short loc_67DFC1B6

loc_67DFC159:				; CODE XREF: sub_67DFC110+A8j
					; sub_67DFC110+B0j
		mov	eax, ds:dword_67E34D8C
		mov	dword ptr [ebx+4], 0
		mov	dword ptr [ebx], 0
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFE790
		test	eax, eax
		jz	short loc_67DFC19F
		mov	eax, ds:dword_67E34560
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DFEA20
		mov	ds:dword_67E34560, 0

loc_67DFC19F:				; CODE XREF: sub_67DFC110+76j
		mov	eax, ds:dword_67E34D8C
		mov	[esp+1Ch+var_1C], eax
		call	sub_67DF1AD0
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFC1B6:				; CODE XREF: sub_67DFC110+47j
		mov	[ecx], edx
		jmp	short loc_67DFC159
; ---------------------------------------------------------------------------

loc_67DFC1BA:				; CODE XREF: sub_67DFC110+39j
		mov	dword ptr [ecx], 0
		jmp	short loc_67DFC159
sub_67DFC110	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFC1D0	proc near		; CODE XREF: dbus_connection_can_send_type+3Fp
					; sub_67DDEA20+2A6p ...

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		xor	eax, eax
		sub	edx, 61h
		cmp	edx, 18h
		ja	short locret_67DFC1E5
		mov	eax, ds:dword_67E2AA20[edx*4]

locret_67DFC1E5:			; CODE XREF: sub_67DFC1D0+Cj
		rep retn
sub_67DFC1D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFC1F0	proc near		; CODE XREF: sub_67DDB7F0+B0p
					; sub_67DDB7F0+BAp ...

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, offset aUnknown ; "unknown"
		cmp	edx, 7Dh
		ja	short locret_67DFC205
		mov	eax, ds:off_67E2AB60[edx*4]

locret_67DFC205:			; CODE XREF: sub_67DFC1F0+Cj
		rep retn
sub_67DFC1F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFC210	proc near		; CODE XREF: dbus_signature_iter_get_current_type+14p
					; dbus_signature_iter_get_element_type+82p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_4]
		mov	edx, [esp+2Ch+arg_0]
		movsx	ebx, byte ptr [edx+eax]
		cmp	ebx, 28h
		jz	short loc_67DFC2A0
		cmp	ebx, 7Bh
		jz	short loc_67DFC291
		xor	eax, eax
		cmp	ebx, 29h
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aMap_type_char_ ; "map_type_char_to_type"
		mov	[esp+2Ch+var_20], 5D7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTDbus_struct_0 ; "t != DBUS_STRUCT_END_CHAR"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	ebx, 7Dh
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aMap_type_char_ ; "map_type_char_to_type"
		mov	[esp+2Ch+var_20], 5D8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTDbus_dict_e_1 ; "t != DBUS_DICT_ENTRY_END_CHAR"
		call	sub_67DFAE70
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFC291:				; CODE XREF: sub_67DFC210+18j
		mov	bl, 65h
		add	esp, 28h
		mov	eax, ebx
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC2A0:				; CODE XREF: sub_67DFC210+13j
		mov	bl, 72h
		add	esp, 28h
		mov	eax, ebx
		pop	ebx
		retn
sub_67DFC210	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFC2B0	proc near		; CODE XREF: sub_67DDA8D0+482p
					; sub_67DFC650+15Fp

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebx, [esp+6Ch+arg_8]
		mov	edi, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_5C], offset a_dbus_swap_arr ; "_dbus_swap_array"
		mov	[esp+6Ch+var_60], 3B5h
		mov	eax, ebx
		neg	eax
		lea	edx, [edi+ebx-1]
		and	eax, edx
		cmp	edi, eax
		setz	al
		movzx	eax, al
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset a_dbus_align_ad ; "_DBUS_ALIGN_ADDRESS	(data, alignment) ="...
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	esi, [esp+6Ch+arg_4]
		imul	esi, ebx
		cmp	ebx, 8
		lea	esi, [edi+esi]
		jz	loc_67DFC397
		cmp	ebx, 4
		jz	short loc_67DFC358
		xor	eax, eax
		cmp	ebx, 2
		setz	al
		mov	[esp+6Ch+var_5C], offset a_dbus_swap_arr ; "_dbus_swap_array"
		mov	[esp+6Ch+var_60], 3D3h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aAlignment2 ; "alignment == 2"
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		cmp	edi, esi
		jz	short loc_67DFC350

loc_67DFC345:				; CODE XREF: sub_67DFC2B0+9Ej
		ror	word ptr [edi],	8
		add	edi, 2
		cmp	esi, edi
		jnz	short loc_67DFC345

loc_67DFC350:				; CODE XREF: sub_67DFC2B0+93j
					; sub_67DFC2B0+AAj ...
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DFC358:				; CODE XREF: sub_67DFC2B0+5Fj
		cmp	edi, esi
		jz	short loc_67DFC350
		lea	esi, [esi+0]

loc_67DFC360:				; CODE XREF: sub_67DFC2B0+DDj
		mov	edx, [edi]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	[edi], eax
		add	edi, 4
		cmp	esi, edi
		jnz	short loc_67DFC360
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DFC397:				; CODE XREF: sub_67DFC2B0+56j
		cmp	edi, esi
		jz	short loc_67DFC350
		mov	ecx, edi
		mov	[esp+6Ch+var_20], esi

loc_67DFC3A1:				; CODE XREF: sub_67DFC2B0+1B9j
		mov	esi, [ecx]
		mov	ebx, [ecx+4]
		mov	[esp+6Ch+var_40], 0
		mov	ebp, [esp+6Ch+var_40]
		mov	[esp+6Ch+var_38], 0
		mov	edi, esi
		mov	eax, esi
		and	edi, 0FF00h
		mov	edx, ebx
		shl	edi, 8
		shl	eax, 18h
		or	eax, edi
		mov	edi, esi
		and	edi, 0FF0000h
		and	esi, 0FF000000h
		mov	[esp+6Ch+var_44], edi
		mov	edi, [esp+6Ch+var_44]
		shr	edx, 18h
		mov	[esp+6Ch+var_3C], esi
		mov	esi, [esp+6Ch+var_3C]
		mov	[esp+6Ch+var_34], 0
		mov	[esp+6Ch+var_2C], 0
		shld	ebp, edi, 18h
		shl	edi, 18h
		or	eax, ebp
		or	edx, edi
		mov	edi, [esp+6Ch+var_38]
		shld	edi, esi, 8
		shl	esi, 8
		or	eax, edi
		or	edx, esi
		movzx	esi, bl
		mov	[esp+6Ch+var_30], esi
		mov	esi, [esp+6Ch+var_34]
		mov	edi, [esp+6Ch+var_30]
		shrd	esi, edi, 8
		shr	edi, 8
		or	edx, esi
		mov	esi, [esp+6Ch+var_2C]
		or	eax, edi
		mov	edi, ebx
		and	edi, 0FF00h
		and	ebx, 0FF0000h
		mov	[esp+6Ch+var_28], edi
		mov	edi, [esp+6Ch+var_28]
		shr	ebx, 8
		shrd	esi, edi, 18h
		or	edx, esi
		shr	edi, 18h
		or	edx, ebx
		or	eax, edi
		mov	[ecx], edx
		mov	[ecx+4], eax
		add	ecx, 8
		cmp	[esp+6Ch+var_20], ecx
		jnz	loc_67DFC3A1
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DFC2B0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+38h]
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset aPack_4_octets ; "pack_4_octets"
		mov	dword ptr [esp+0Ch], 65h
		lea	eax, [esi+3]
		and	eax, 0FFFFFFFCh
		cmp	esi, eax
		setz	al
		movzx	eax, al
		mov	dword ptr [esp+8], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS (data,	4) == data"
		mov	[esp], eax
		call	sub_67DFAE70
		cmp	dword ptr [esp+34h], 6Ch
		jz	short loc_67DFC4F6
		mov	eax, ebx
		mov	edx, ebx
		shl	edx, 18h
		shr	eax, 18h
		or	eax, edx
		mov	edx, ebx
		and	edx, 0FF00h
		and	ebx, 0FF0000h
		shl	edx, 8
		shr	ebx, 8
		or	eax, edx
		or	eax, ebx
		mov	[esi], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67DFC4F6:				; CODE XREF: .text:67DFC4C8j
		mov	[esi], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFC500	proc near		; CODE XREF: sub_67DDA8D0+333p
					; dbus_message_iter_get_array_len-73C4p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_unpack_u ; "_dbus_unpack_uint32"
		mov	[esp+2Ch+var_20], 0EAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [ebx+3]
		and	eax, 0FFFFFFFCh
		cmp	ebx, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_28], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS	(data, 4) == data"
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		cmp	[esp+2Ch+arg_0], 6Ch
		jz	short loc_67DFC570
		mov	edx, [ebx]
		add	esp, 28h
		pop	ebx
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		retn
; ---------------------------------------------------------------------------

loc_67DFC570:				; CODE XREF: sub_67DFC500+43j
		mov	eax, [ebx]
		add	esp, 28h
		pop	ebx
		retn
sub_67DFC500	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+34h]
		mov	dword ptr [esp+10h], offset a_dbus_unpack_0 ; "_dbus_unpack_uint16"
		mov	dword ptr [esp+0Ch], 0D5h
		mov	dword ptr [esp+8], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [ebx+1]
		and	eax, 0FFFFFFFEh
		cmp	ebx, eax
		setz	al
		movzx	eax, al
		mov	dword ptr [esp+4], offset a_dbus_align__5 ; "_DBUS_ALIGN_ADDRESS (data,	2) == data"
		mov	[esp], eax
		call	sub_67DFAE70
		cmp	dword ptr [esp+30h], 6Ch
		jz	short loc_67DFC5D1
		movzx	eax, word ptr [ebx]
		add	esp, 28h
		pop	ebx
		rol	ax, 8
		retn
; ---------------------------------------------------------------------------

loc_67DFC5D1:				; CODE XREF: .text:67DFC5C3j
		movzx	eax, word ptr [ebx]
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFC5E0	proc near		; CODE XREF: sub_67DDA8D0+C6p
					; sub_67DDA8D0+3FDp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		sub	eax, 61h
		cmp	eax, 18h	; switch 25 cases
		jbe	short loc_67DFC610

loc_67DFC5EF:				; CODE XREF: sub_67DFC5E0:loc_67DFC610j
					; DATA XREF: .rdata:off_67E2A1B4o
		mov	[esp+1Ch+var_14], 4F1h ; jumptable 67DFC610 default case
		mov	[esp+1Ch+var_18], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+1Ch+var_1C], offset aUnknownTypecod ; "unknown typecode in	_dbus_type_get_alig"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC610:				; CODE XREF: sub_67DFC5E0+Dj
		jmp	ds:off_67E2A1B4[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67DFC617:				; CODE XREF: sub_67DFC5E0:loc_67DFC610j
					; DATA XREF: .rdata:off_67E2A1B4o
		mov	eax, 2		; jumptable 67DFC610 cases 13,16
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67DFC620:				; CODE XREF: sub_67DFC5E0:loc_67DFC610j
					; DATA XREF: .rdata:off_67E2A1B4o
		mov	eax, 1		; jumptable 67DFC610 cases 6,21,24
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC630:				; CODE XREF: sub_67DFC5E0:loc_67DFC610j
					; DATA XREF: .rdata:off_67E2A1B4o
		mov	eax, 8		; jumptable 67DFC610 cases 3,4,17,19,23
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC640:				; CODE XREF: sub_67DFC5E0:loc_67DFC610j
					; DATA XREF: .rdata:off_67E2A1B4o
		mov	eax, 4		; jumptable 67DFC610 cases 0,1,7,8,14,18,20
		add	esp, 1Ch
		retn
sub_67DFC5E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFC650	proc near		; CODE XREF: sub_67DFC7E0+140p

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_34		= byte ptr -34h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 6Ch
		mov	[esp+6Ch+var_8], edi
		mov	edi, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_C], esi
		mov	esi, edx
		mov	edx, 4000000h
		mov	[esp+6Ch+var_10], ebx
		mov	ebx, eax
		mov	eax, edx
		sar	edx, 1Fh
		idiv	edi
		mov	[esp+6Ch+var_44], ecx
		mov	[esp+6Ch+var_4], ebp
		mov	[esp+6Ch+var_5C], offset aMarshal_fixed_ ; "marshal_fixed_multi"
		mov	[esp+6Ch+var_60], 3FEh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aN_elementsDb_0 ; "n_elements <= DBUS_MAXIMUM_ARRAY_LENGTH"...
		cmp	eax, [esp+6Ch+arg_0]
		setnl	al
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67E00CE0
		mov	[esp+6Ch+var_20], esi
		mov	[esp+6Ch+var_64], edi
		mov	[esp+6Ch+var_6C], ebx
		mov	ebp, eax
		lea	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_68], eax
		call	sub_67E041F0
		mov	ecx, [esp+6Ch+var_44]
		test	eax, eax
		jz	short loc_67DFC71E
		mov	eax, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_68], ecx
		imul	eax, edi
		mov	[esp+6Ch+var_40], eax
		mov	[esp+6Ch+var_64], eax
		lea	eax, [esp+6Ch+var_34]
		mov	[esp+6Ch+var_6C], eax
		mov	[esp+6Ch+var_44], eax
		call	sub_67E01AC0
		mov	edx, [esp+6Ch+var_20]
		mov	eax, [esp+6Ch+var_44]
		mov	[esp+6Ch+var_64], ebx
		mov	[esp+6Ch+var_68], 0
		mov	[esp+6Ch+var_60], edx
		mov	[esp+6Ch+var_6C], eax
		call	sub_67E036F0
		test	eax, eax
		jnz	short loc_67DFC750

loc_67DFC71E:				; CODE XREF: sub_67DFC650+85j
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67E00CE0
		mov	[esp+6Ch+var_68], esi
		mov	[esp+6Ch+var_6C], ebx
		sub	eax, ebp
		mov	[esp+6Ch+var_64], eax
		call	sub_67E02D80
		xor	eax, eax

loc_67DFC73A:				; CODE XREF: sub_67DFC650+16Fj
					; sub_67DFC650+188j
		mov	ebx, [esp+6Ch+var_10]
		mov	esi, [esp+6Ch+var_C]
		mov	edi, [esp+6Ch+var_8]
		mov	ebp, [esp+6Ch+var_4]
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC750:				; CODE XREF: sub_67DFC650+CCj
		mov	esi, [esp+6Ch+var_20]
		mov	eax, edi
		neg	eax
		mov	[esp+6Ch+var_5C], offset aSwap_array ; "swap_array"
		mov	[esp+6Ch+var_60], 3E4h
		lea	edx, [esi+edi-1]
		and	eax, edx
		cmp	esi, eax
		setz	al
		movzx	eax, al
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset a_dbus_align__3 ; "_DBUS_ALIGN_VALUE (array_start, alignme"...
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		cmp	[esp+6Ch+arg_4], 6Ch
		jz	short loc_67DFC7B4
		mov	[esp+6Ch+var_6C], ebx
		call	sub_67E01770
		mov	edx, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_64], edi
		mov	[esp+6Ch+var_68], edx
		lea	esi, [eax+esi]
		mov	[esp+6Ch+var_6C], esi
		call	sub_67DFC2B0

loc_67DFC7B4:				; CODE XREF: sub_67DFC650+143j
		mov	edx, [esp+6Ch+arg_C]
		mov	eax, 1
		test	edx, edx
		jz	loc_67DFC73A
		mov	eax, [esp+6Ch+var_40]
		mov	edx, [esp+6Ch+arg_C]
		add	eax, [esp+6Ch+var_20]
		mov	[edx], eax
		mov	eax, 1
		jmp	loc_67DFC73A
sub_67DFC650	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67DFC7E0(int,	int, int, int, size_t, int, int)
sub_67DFC7E0	proc near		; CODE XREF: dbus_message_iter_append_fixed_array-9BEDp

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch

		sub	esp, 6Ch
		mov	eax, [esp+6Ch+arg_C]
		mov	[esp+6Ch+var_10], ebx
		mov	ebx, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_C], esi
		mov	esi, [esp+6Ch+arg_10]
		mov	[esp+6Ch+var_8], edi
		mov	edi, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_4], ebp
		mov	ecx, [eax]
		mov	ebp, [esp+6Ch+arg_18]
		mov	[esp+6Ch+var_6C], edi
		mov	[esp+6Ch+var_40], ecx
		call	dbus_type_is_fixed
		mov	[esp+6Ch+var_5C], offset a_dbus_marsha_0 ; "_dbus_marshal_write_fixed_multi"
		mov	[esp+6Ch+var_60], 440h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aDbus_type_is_6 ; "dbus_type_is_fixed (element_type)"
		test	eax, eax
		setnz	al
		sub	edi, 62h
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+var_5C], offset a_dbus_marsha_0 ; "_dbus_marshal_write_fixed_multi"
		mov	[esp+6Ch+var_60], 441h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aN_elements0_1	; "n_elements >= 0"
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		cmp	edi, 17h	; switch 24 cases
		mov	ecx, [esp+6Ch+var_40]
		jbe	short loc_67DFC8A2

loc_67DFC886:				; CODE XREF: sub_67DFC7E0:loc_67DFC8A2j
					; DATA XREF: .rdata:off_67E2A2E4o
		mov	[esp+6Ch+var_64], 45Dh ; jumptable 67DFC8A2 default case
		mov	[esp+6Ch+var_68], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_6C], offset aNonFixedTypeIn ; "non	fixed type in array write"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DFC8A2:				; CODE XREF: sub_67DFC7E0+A4j
		jmp	ds:off_67E2A2E4[edi*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC8B0:				; CODE XREF: sub_67DFC7E0:loc_67DFC8A2j
					; DATA XREF: .rdata:off_67E2A2E4o
		lea	edi, [esp+6Ch+var_30] ;	jumptable 67DFC8A2 case	23
		mov	[esp+6Ch+var_68], ecx
		mov	[esp+6Ch+var_64], esi
		mov	[esp+6Ch+var_6C], edi
		call	sub_67E01AC0
		mov	eax, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_5C], ebx ;	int
		mov	[esp+6Ch+var_64], esi ;	size_t
		mov	[esp+6Ch+var_68], 0 ; int
		mov	[esp+6Ch+var_60], eax ;	int
		mov	[esp+6Ch+var_6C], edi ;	int
		call	sub_67E05A20
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DFC925
		test	ebp, ebp
		mov	al, 1
		jz	short loc_67DFC925
		lea	ebx, [esi+ebx]
		mov	[ebp+0], ebx
		jmp	short loc_67DFC925
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC900:				; CODE XREF: sub_67DFC7E0:loc_67DFC8A2j
					; DATA XREF: .rdata:off_67E2A2E4o
		mov	[esp+6Ch+var_60], ebp ;	jumptable 67DFC8A2 cases 12,15
		mov	[esp+6Ch+var_64], 2

loc_67DFC90C:				; CODE XREF: sub_67DFC7E0+16Cj
					; sub_67DFC7E0+17Cj
		mov	eax, [esp+6Ch+arg_14]
		mov	edx, ebx
		mov	[esp+6Ch+var_6C], esi
		mov	[esp+6Ch+var_68], eax
		mov	eax, [esp+6Ch+arg_0]
		call	sub_67DFC650

loc_67DFC925:				; CODE XREF: sub_67DFC7E0+10Aj
					; sub_67DFC7E0+110j ...
		mov	ebx, [esp+6Ch+var_10]
		mov	esi, [esp+6Ch+var_C]
		mov	edi, [esp+6Ch+var_8]
		mov	ebp, [esp+6Ch+var_4]
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC940:				; CODE XREF: sub_67DFC7E0:loc_67DFC8A2j
					; DATA XREF: .rdata:off_67E2A2E4o
		mov	[esp+6Ch+var_60], ebp ;	jumptable 67DFC8A2 cases 2,18,22
		mov	[esp+6Ch+var_64], 8
		jmp	short loc_67DFC90C
; ---------------------------------------------------------------------------
		align 10h

loc_67DFC950:				; CODE XREF: sub_67DFC7E0:loc_67DFC8A2j
					; DATA XREF: .rdata:off_67E2A2E4o
		mov	[esp+6Ch+var_60], ebp ;	jumptable 67DFC8A2 cases 0,6,7,19
		mov	[esp+6Ch+var_64], 4
		jmp	short loc_67DFC90C
sub_67DFC7E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFC960	proc near		; CODE XREF: sub_67DFCA70+AAp
					; sub_67DFCC80+ECp ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+4Ch+var_C], esi
		mov	esi, edx
		mov	[esp+4Ch+var_8], edi
		mov	edi, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_4], ebp
		mov	[esp+4Ch+var_20], ecx
		mov	[esp+4Ch+var_3C], offset aMarshal_4_octe ; "marshal_4_octets"
		mov	[esp+4Ch+var_40], 2ADh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aSizeofValue4 ; "sizeof (value) == 4"
		mov	[esp+4Ch+var_4C], 1
		call	sub_67DFAE70
		cmp	[esp+4Ch+arg_0], 6Ch
		jz	short loc_67DFC9DE
		mov	edx, [esp+4Ch+var_20]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	[esp+4Ch+var_20], eax

loc_67DFC9DE:				; CODE XREF: sub_67DFC960+50j
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], ebx
		mov	[esp+4Ch+var_24], eax
		lea	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_44], eax
		call	sub_67E04680
		test	edi, edi
		mov	ebp, eax
		jz	short loc_67DFCA4C
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		sub	esi, [esp+4Ch+var_24]
		add	esi, eax
		mov	[edi], esi
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_3C], offset aMarshal_4_octe ; "marshal_4_octets"
		mov	[esp+4Ch+var_40], 2BAh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aPos_after_dbus ; "*pos_after <= _dbus_string_get_length ("...
		cmp	esi, eax
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70

loc_67DFCA4C:				; CODE XREF: sub_67DFC960+A2j
		mov	eax, ebp
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
sub_67DFC960	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __usercall sub_67DFCA70@<eax>(char@<cl>, int@<edx>, int, int, int, int)
sub_67DFCA70	proc near		; CODE XREF: sub_67DFCC80+260p
					; sub_67DFCC80+3A9p

var_6C		= dword	ptr -6Ch
var_68		= byte ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, ecx
		sub	esp, 5Ch
		cmp	[esp+6Ch+arg_8], 42h
		mov	[esp+6Ch+var_44], eax
		mov	edi, [esp+6Ch+arg_0]
		mov	ebp, [esp+6Ch+arg_4]
		setz	al
		cmp	[esp+6Ch+arg_8], 6Ch
		mov	[esp+6Ch+var_5C], offset aMarshal_len_fo ; "marshal_len_followed_by_bytes"
		mov	[esp+6Ch+var_60], 2EDh
		setz	dl
		or	eax, edx
		and	eax, 1
		mov	[esp+6Ch+var_6C], eax
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_68], offset aByte_orderDbus ; "byte_order == DBUS_LITTLE_ENDIAN || byt"...
		call	sub_67DFAE70
		mov	[esp+6Ch+var_6C], esi
		call	sub_67E00CE0
		cmp	eax, ebx
		jl	loc_67DFCC20
		cmp	[esp+6Ch+var_44], 2
		jz	loc_67DFCC4B

loc_67DFCADF:				; CODE XREF: sub_67DFCA70+1D5j
		lea	eax, [ebp+1]
		mov	dword ptr [esp+6Ch+var_68], edi
		lea	edi, [esp+6Ch+var_34]
		mov	[esp+6Ch+var_40], eax
		mov	[esp+6Ch+var_64], eax
		mov	[esp+6Ch+var_6C], edi
		call	sub_67E01AC0
		cmp	[esp+6Ch+var_44], 1
		mov	[esp+6Ch+var_20], ebx
		jz	short loc_67DFCB80

loc_67DFCB05:				; CODE XREF: sub_67DFCA70+1F7j
		lea	eax, [esp+6Ch+var_20]
		mov	ecx, ebp
		mov	dword ptr [esp+6Ch+var_68], eax
		mov	eax, [esp+6Ch+arg_8]
		mov	edx, ebx
		mov	[esp+6Ch+var_6C], eax
		mov	eax, esi
		call	sub_67DFC960
		test	eax, eax
		jz	loc_67DFCC00
		mov	eax, [esp+6Ch+var_20]

loc_67DFCB2B:				; CODE XREF: sub_67DFCA70+20Bj
		mov	[esp+6Ch+var_5C], eax ;	int
		mov	eax, [esp+6Ch+var_40]
		mov	[esp+6Ch+var_60], esi ;	int
		mov	dword ptr [esp+6Ch+var_68], 0 ;	int
		mov	[esp+6Ch+var_6C], edi ;	int
		mov	[esp+6Ch+var_64], eax ;	size_t
		call	sub_67E05A20
		test	eax, eax
		jz	loc_67DFCC00
		mov	ecx, [esp+6Ch+arg_C]
		mov	eax, 1
		mov	edx, [esp+6Ch+var_20]
		test	ecx, ecx
		jz	loc_67DFCC18
		mov	eax, [esp+6Ch+arg_C]
		add	edx, [esp+6Ch+var_40]
		mov	[eax], edx
		add	esp, 5Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFCB80:				; CODE XREF: sub_67DFCA70+93j
		xor	eax, eax
		cmp	ebp, 0FFh
		setle	al
		mov	[esp+6Ch+var_6C], eax
		mov	[esp+6Ch+var_48], eax
		mov	[esp+6Ch+var_5C], offset aMarshal_len_fo ; "marshal_len_followed_by_bytes"
		mov	[esp+6Ch+var_60], 2FDh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_68], offset aData_lenDbus_m ; "data_len <= DBUS_MAXIMUM_SIGNATURE_LENG"...
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+var_48]
		mov	[esp+6Ch+var_5C], offset aMarshal_len_fo ; "marshal_len_followed_by_bytes"
		mov	[esp+6Ch+var_60], 2FEh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_6C], eax
		mov	dword ptr [esp+6Ch+var_68], offset aData_len255	; "data_len <= 255"
		call	sub_67DFAE70
		mov	eax, ebp
		movzx	ebp, al
		mov	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_64], ebp
		mov	[esp+6Ch+var_6C], esi
		mov	dword ptr [esp+6Ch+var_68], eax
		call	sub_67E03BA0
		test	eax, eax
		jnz	short loc_67DFCC70

loc_67DFCC00:				; CODE XREF: sub_67DFCA70+B1j
					; sub_67DFCA70+DDj
		mov	eax, [esp+6Ch+var_20]
		mov	dword ptr [esp+6Ch+var_68], ebx
		mov	[esp+6Ch+var_6C], esi
		sub	eax, ebx
		mov	[esp+6Ch+var_64], eax
		call	sub_67E02D80
		xor	eax, eax

loc_67DFCC18:				; CODE XREF: sub_67DFCA70+F2j
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DFCC20:				; CODE XREF: sub_67DFCA70+5Ej
		mov	[esp+6Ch+var_6C], esi
		call	sub_67E00CE0
		mov	[esp+6Ch+var_60], ebp
		mov	dword ptr [esp+6Ch+var_68], ebx	; char
		mov	[esp+6Ch+var_6C], offset aInsert_atDStri ; "insert_at =	%d string len =	%d data_len"...
		mov	[esp+6Ch+var_64], eax
		call	sub_67DFAD60
		cmp	[esp+6Ch+var_44], 2
		jnz	loc_67DFCADF

loc_67DFCC4B:				; CODE XREF: sub_67DFCA70+69j
		mov	dword ptr [esp+6Ch+var_68], edi
		lea	edi, [esp+6Ch+var_34]
		mov	[esp+6Ch+var_64], ebp
		mov	[esp+6Ch+var_6C], edi
		call	sub_67E01AC0
		mov	[esp+6Ch+var_20], ebx
		mov	[esp+6Ch+var_40], ebp
		jmp	loc_67DFCB05
; ---------------------------------------------------------------------------
		align 10h

loc_67DFCC70:				; CODE XREF: sub_67DFCA70+18Ej
		mov	eax, [esp+6Ch+var_20]
		add	eax, 1
		mov	[esp+6Ch+var_20], eax
		jmp	loc_67DFCB2B
sub_67DFCA70	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DFCC80	proc near		; CODE XREF: sub_67DDB9F0+87p
					; sub_67DDBB80+758p ...

Str		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_1E		= word ptr -1Eh
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		sub	esp, 4Ch
		mov	[esp+4Ch+var_8], edi
		mov	edi, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_C], esi
		mov	esi, dword ptr [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_C]
		mov	[esp+4Ch+Str], edi
		call	dbus_type_is_basic
		mov	[esp+4Ch+var_3C], offset a_dbus_marsha_1 ; "_dbus_marshal_write_basic"
		mov	[esp+4Ch+var_40], 359h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aDbus_type_is_7 ; "dbus_type_is_basic (type)"
		test	eax, eax
		setnz	al
		sub	edi, 62h
		movzx	eax, al
		mov	[esp+4Ch+Str], eax
		call	sub_67DFAE70
		cmp	edi, 17h	; switch 24 cases
		jbe	short loc_67DFCD00

loc_67DFCCE3:				; CODE XREF: sub_67DFCC80:loc_67DFCD00j
					; DATA XREF: .rdata:off_67E2A498o
		mov	[esp+4Ch+var_44], 385h ; jumptable 67DFCD00 default case
		mov	[esp+4Ch+var_48], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Str], offset aNotABasicType ; "not a basic type"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h

loc_67DFCD00:				; CODE XREF: sub_67DFCC80+61j
		jmp	ds:off_67E2A498[edi*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67DFCD07:				; CODE XREF: sub_67DFCC80:loc_67DFCD00j
					; DATA XREF: .rdata:off_67E2A498o
		movzx	eax, byte ptr [ebp+0] ;	jumptable 67DFCD00 case	23
		xor	edi, edi
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+Str], ebx
		mov	[esp+4Ch+var_44], eax
		call	sub_67E03BA0
		test	eax, eax
		jz	short loc_67DFCD36
		mov	ecx, [esp+4Ch+arg_14]
		mov	di, 1
		test	ecx, ecx
		jz	short loc_67DFCD36
		mov	eax, [esp+4Ch+arg_14]
		add	esi, 1
		mov	[eax], esi

loc_67DFCD36:				; CODE XREF: sub_67DFCC80+9Fj
					; sub_67DFCC80+ABj ...
		mov	eax, edi
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFCD50:				; CODE XREF: sub_67DFCC80:loc_67DFCD00j
					; DATA XREF: .rdata:off_67E2A498o
		mov	eax, [esp+4Ch+arg_14] ;	jumptable 67DFCD00 case	0
		xor	ecx, ecx
		mov	edx, [esp+4Ch+arg_10]
		cmp	dword ptr [ebp+0], 0
		mov	[esp+4Ch+var_48], eax
		mov	eax, ebx
		mov	[esp+4Ch+Str], edx
		setnz	cl
		mov	edx, esi
		call	sub_67DFC960
		mov	edi, eax
		jmp	short loc_67DFCD36
; ---------------------------------------------------------------------------

loc_67DFCD75:				; CODE XREF: sub_67DFCC80:loc_67DFCD00j
					; DATA XREF: .rdata:off_67E2A498o
		mov	eax, [ebp+0]	; jumptable 67DFCD00 cases 2,18,22
		mov	edx, [ebp+4]
		mov	[esp+4Ch+var_3C], offset aMarshal_8_octe ; "marshal_8_octets"
		mov	[esp+4Ch+var_40], 2CAh
		mov	[esp+4Ch+var_2C], eax
		mov	[esp+4Ch+var_28], edx
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aSizeofValue8 ; "sizeof (value) == 8"
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		cmp	[esp+4Ch+arg_10], 6Ch
		jz	loc_67DFCE41
		mov	ecx, [esp+4Ch+var_2C]
		xor	ebp, ebp
		mov	edx, [esp+4Ch+var_28]
		mov	edi, ecx
		mov	eax, ecx
		and	edi, 0FF00h
		shl	edi, 8
		shl	eax, 18h
		or	eax, edi
		mov	edi, ecx
		and	edi, 0FF0000h
		shld	ebp, edi, 18h
		shr	edx, 18h
		or	eax, ebp
		shl	edi, 18h
		xor	ebp, ebp
		or	edx, edi
		mov	edi, ecx
		mov	ecx, [esp+4Ch+var_28]
		and	edi, 0FF000000h
		shld	ebp, edi, 8
		or	eax, ebp
		movzx	ebp, byte ptr [esp+4Ch+var_28]
		shl	edi, 8
		and	ecx, 0FF0000h
		or	edx, edi
		xor	edi, edi
		shr	ecx, 8
		shrd	edi, ebp, 8
		shr	ebp, 8
		or	edx, edi
		or	eax, ebp
		mov	ebp, [esp+4Ch+var_28]
		xor	edi, edi
		and	ebp, 0FF00h
		shrd	edi, ebp, 18h
		or	edx, edi
		shr	ebp, 18h
		or	edx, ecx
		or	eax, ebp
		mov	[esp+4Ch+var_2C], edx
		mov	[esp+4Ch+var_28], eax

loc_67DFCE41:				; CODE XREF: sub_67DFCC80+134j
		mov	[esp+4Ch+Str], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+Str], ebx
		mov	ebp, eax
		lea	eax, [esp+4Ch+var_2C]
		mov	[esp+4Ch+var_44], eax
		call	sub_67E04430
		mov	edi, eax
		mov	eax, [esp+4Ch+arg_14]
		test	eax, eax
		jz	loc_67DFCD36
		mov	[esp+4Ch+Str], ebx
		sub	esi, ebp
		call	sub_67E00CE0
		add	esi, eax
		mov	eax, [esp+4Ch+arg_14]
		mov	[eax], esi
		jmp	loc_67DFCD36
; ---------------------------------------------------------------------------

loc_67DFCE84:				; CODE XREF: sub_67DFCC80:loc_67DFCD00j
					; DATA XREF: .rdata:off_67E2A498o
		mov	[esp+4Ch+var_3C], offset a_dbus_marsha_1 ; jumptable 67DFCD00 case 5
		xor	eax, eax
		mov	[esp+4Ch+var_40], 381h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aVpStrNull ; "vp->str != NULL"
		cmp	dword ptr [ebp+0], 0
		setnz	al
		mov	[esp+4Ch+Str], eax
		call	sub_67DFAE70
		mov	edi, [ebp+0]
		mov	[esp+4Ch+Str], edi ; Str
		call	strlen
		mov	edx, [esp+4Ch+arg_14]
		mov	ecx, esi	; char
		mov	[esp+4Ch+Str], edi ; int
		mov	[esp+4Ch+var_44], 6Ch ;	int
		mov	[esp+4Ch+var_40], edx ;	int
		mov	edx, ebx	; int
		mov	[esp+4Ch+var_48], eax ;	int
		mov	eax, 1
		call	sub_67DFCA70
		mov	edi, eax
		jmp	loc_67DFCD36
; ---------------------------------------------------------------------------
		align 10h

loc_67DFCEF0:				; CODE XREF: sub_67DFCC80:loc_67DFCD00j
					; DATA XREF: .rdata:off_67E2A498o
		mov	eax, [esp+4Ch+arg_14] ;	jumptable 67DFCD00 cases 6,7,19
		mov	edx, [esp+4Ch+arg_10]
		mov	[esp+4Ch+var_48], eax
		mov	eax, ebx
		mov	[esp+4Ch+Str], edx
		mov	ecx, [ebp+0]
		mov	edx, esi
		call	sub_67DFC960
		mov	edi, eax
		jmp	loc_67DFCD36
; ---------------------------------------------------------------------------

loc_67DFCF12:				; CODE XREF: sub_67DFCC80:loc_67DFCD00j
					; DATA XREF: .rdata:off_67E2A498o
		movzx	eax, word ptr [ebp+0] ;	jumptable 67DFCD00 cases 12,15
		mov	[esp+4Ch+var_3C], offset aMarshal_2_octe ; "marshal_2_octets"
		mov	[esp+4Ch+var_40], 290h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_1E], ax
		mov	[esp+4Ch+var_48], offset aSizeofValue2 ; "sizeof (value) == 2"
		mov	[esp+4Ch+Str], 1
		call	sub_67DFAE70
		cmp	[esp+4Ch+arg_10], 6Ch
		jz	short loc_67DFCF54
		ror	[esp+4Ch+var_1E], 8

loc_67DFCF54:				; CODE XREF: sub_67DFCC80+2CCj
		mov	[esp+4Ch+Str], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+Str], ebx
		mov	ebp, eax
		lea	eax, [esp+4Ch+var_1E]
		mov	[esp+4Ch+var_44], eax
		call	sub_67E04890
		mov	edx, [esp+4Ch+arg_14]
		test	edx, edx
		mov	edi, eax
		jz	loc_67DFCD36
		mov	[esp+4Ch+Str], ebx
		sub	esi, ebp
		call	sub_67E00CE0
		mov	edx, [esp+4Ch+arg_14]
		add	esi, eax
		mov	[edx], esi
		mov	[esp+4Ch+Str], ebx
		call	sub_67E00CE0
		mov	[esp+4Ch+var_3C], offset aMarshal_2_octe ; "marshal_2_octets"
		mov	[esp+4Ch+var_40], 29Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aPos_after_dbus ; "*pos_after <= _dbus_string_get_length ("...
		cmp	esi, eax
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+Str], eax
		call	sub_67DFAE70
		jmp	loc_67DFCD36
; ---------------------------------------------------------------------------
		align 10h

loc_67DFCFD0:				; CODE XREF: sub_67DFCC80:loc_67DFCD00j
					; DATA XREF: .rdata:off_67E2A498o
		mov	[esp+4Ch+var_3C], offset a_dbus_marsha_1 ; jumptable 67DFCD00 cases 13,17
		xor	eax, eax
		mov	[esp+4Ch+var_40], 37Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aVpStrNull ; "vp->str != NULL"
		cmp	dword ptr [ebp+0], 0
		setnz	al
		mov	[esp+4Ch+Str], eax
		call	sub_67DFAE70
		mov	edi, [ebp+0]
		mov	[esp+4Ch+Str], edi ; Str
		call	strlen
		mov	edx, [esp+4Ch+arg_14]
		mov	ecx, esi	; char
		mov	[esp+4Ch+Str], edi ; int
		mov	[esp+4Ch+var_40], edx ;	int
		mov	edx, [esp+4Ch+arg_10]
		mov	[esp+4Ch+var_48], eax ;	int
		xor	eax, eax
		mov	[esp+4Ch+var_44], edx ;	int
		mov	edx, ebx	; int
		call	sub_67DFCA70
		mov	edi, eax
		jmp	loc_67DFCD36
sub_67DFCC80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFD040	proc near		; CODE XREF: sub_67DDA8D0+BEp
					; sub_67DDB560+3Dp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E00E50
		movzx	ebx, al
		cmp	ebx, 28h
		jz	loc_67DFD0E0
		cmp	ebx, 7Bh
		jz	short loc_67DFD0D0
		xor	eax, eax
		cmp	ebx, 29h
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aMap_type_char_ ; "map_type_char_to_type"
		mov	[esp+2Ch+var_20], 5D7h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTDbus_struct_0 ; "t != DBUS_STRUCT_END_CHAR"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	ebx, 7Dh
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset aMap_type_char_ ; "map_type_char_to_type"
		mov	[esp+2Ch+var_20], 5D8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aTDbus_dict_e_1 ; "t != DBUS_DICT_ENTRY_END_CHAR"
		call	sub_67DFAE70
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67DFD0D0:				; CODE XREF: sub_67DFD040+27j
		mov	bl, 65h
		add	esp, 28h
		mov	eax, ebx
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFD0E0:				; CODE XREF: sub_67DFD040+1Ej
		mov	bl, 72h
		add	esp, 28h
		mov	eax, ebx
		pop	ebx
		retn
sub_67DFD040	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFD0F0	proc near		; CODE XREF: sub_67DD8850+159p
					; sub_67DD8850+1CDp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_4]
		mov	eax, [esp+2Ch+arg_C]
		mov	esi, [esp+2Ch+arg_0]
		add	ebx, 3
		and	ebx, 0FFFFFFFCh
		test	eax, eax
		jz	short loc_67DFD110
		lea	edx, [ebx+4]
		mov	[eax], edx

loc_67DFD110:				; CODE XREF: sub_67DFD0F0+19j
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		lea	edx, [ebx+3]
		mov	[esp+2Ch+var_1C], offset a_dbus_marsha_2 ; "_dbus_marshal_read_uint32"
		mov	[esp+2Ch+var_20], 201h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aPos4_dbus_stri ; "pos	+ 4 <= _dbus_string_get_length (str"...
		cmp	edx, eax
		setl	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E01770
		mov	[esp+2Ch+var_1C], offset a_dbus_unpack_u ; "_dbus_unpack_uint32"
		mov	[esp+2Ch+var_20], 0EAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS	(data, 4) == data"
		lea	ebx, [eax+ebx]
		xor	eax, eax
		lea	edx, [ebx+3]
		and	edx, 0FFFFFFFCh
		cmp	ebx, edx
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		cmp	[esp+2Ch+arg_8], 6Ch
		jz	short loc_67DFD1C0
		mov	edx, [ebx]
		add	esp, 24h
		pop	ebx
		pop	esi
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFD1C0:				; CODE XREF: sub_67DFD0F0+A0j
		mov	eax, [ebx]
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DFD0F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFD1D0	proc near		; CODE XREF: sub_67DD8790+29p
					; sub_67DD8C00+129p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [esp+2Ch+arg_C]
		mov	ebx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset aSet_4_octets ; "set_4_octets"
		mov	[esp+2Ch+var_20], 10Ch
		cmp	esi, 42h
		setz	al
		cmp	esi, 6Ch
		setz	dl
		or	eax, edx
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aByte_orderDbus ; "byte_order == DBUS_LITTLE_ENDIAN ||	byt"...
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_24], 4
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	sub_67E014C0
		mov	[esp+2Ch+var_1C], offset aPack_4_octets	; "pack_4_octets"
		mov	[esp+2Ch+var_20], 65h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS	(data, 4) == data"
		lea	edx, [eax+3]
		mov	edi, eax
		and	edx, 0FFFFFFFCh
		xor	eax, eax
		cmp	edi, edx
		setz	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		cmp	esi, 6Ch
		jz	short loc_67DFD2A0
		mov	edx, ebx
		mov	eax, ebx
		shl	eax, 18h
		shr	edx, 18h
		or	edx, eax
		mov	eax, ebx
		and	eax, 0FF00h
		and	ebx, 0FF0000h
		shl	eax, 8
		shr	ebx, 8
		or	edx, eax
		or	edx, ebx
		mov	[edi], edx
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFD2A0:				; CODE XREF: sub_67DFD1D0+9Dj
		mov	[edi], ebx
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DFD1D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFD2B0	proc near		; CODE XREF: sub_67DFD600+92j

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Format		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_4]
		mov	edi, [esp+4Ch+arg_0]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		mov	[esp+4Ch+Format], 567h
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aLen0_1 ; "len	>= 0"
		call	sub_67DFAE70
		call	sub_67DFAAC0
		test	eax, eax
		jz	loc_67DFD4AA
		lea	ebp, [edi+3]
		mov	esi, edi
		and	ebp, 0FFFFFFFCh
		cmp	edi, ebp
		jnb	short loc_67DFD30A
		sub	ebp, 4

loc_67DFD30A:				; CODE XREF: sub_67DFD2B0+55j
		xor	eax, eax
		cmp	ebp, edi
		setbe	al
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		mov	[esp+4Ch+Format], 570h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aAlignedData ;	"aligned <= data"
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		cmp	ebp, edi
		jz	short loc_67DFD39B
		mov	eax, ebp
		sub	eax, edi
		mov	dword ptr [esp+4Ch+var_3C+4], ebp
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		mov	[esp+4Ch+Format], offset a4ldP ; "%4ld\t%p: "
		mov	[esp+4Ch+var_44], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		mov	[esp+4Ch+var_48], 574h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	esi, [esi+0]

loc_67DFD370:				; CODE XREF: sub_67DFD2B0+E9j
		add	ebp, 1
		mov	[esp+4Ch+Format], offset asc_67E2A544 ;	"    "
		mov	[esp+4Ch+var_44], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		mov	[esp+4Ch+var_48], 577h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	edi, ebp
		jnz	short loc_67DFD370

loc_67DFD39B:				; CODE XREF: sub_67DFD2B0+8Bj
		xor	edi, edi
		test	ebx, ebx
		jg	short loc_67DFD3FD
		jmp	loc_67DFD486
; ---------------------------------------------------------------------------

loc_67DFD3A6:				; CODE XREF: sub_67DFD2B0+164j
		cmp	al, 0Fh
		movzx	ecx, al
		mov	edx, offset a0_1 ; "0"
		jbe	short loc_67DFD3B7
		mov	edx, offset byte_67E2A559

loc_67DFD3B7:				; CODE XREF: sub_67DFD2B0+100j
		mov	dword ptr [esp+4Ch+var_3C+4], ecx
		lea	ebp, [esi+1]
		add	edi, 1
		mov	dword ptr [esp+4Ch+var_3C], edx	; char
		mov	[esp+4Ch+Format], offset a0xSX ; "0x%s%x "
		mov	[esp+4Ch+var_44], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		mov	[esp+4Ch+var_48], 58Bh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esi+4]
		and	eax, 0FFFFFFFCh
		cmp	ebp, eax
		jz	short loc_67DFD451

loc_67DFD3F3:				; CODE XREF: sub_67DFD2B0+19Fj
		cmp	ebx, edi
		jle	loc_67DFD486

loc_67DFD3FB:				; CODE XREF: sub_67DFD2B0+1D0j
		mov	esi, ebp

loc_67DFD3FD:				; CODE XREF: sub_67DFD2B0+EFj
		lea	eax, [esi+3]
		and	eax, 0FFFFFFFCh
		cmp	esi, eax
		jz	loc_67DFD4B2

loc_67DFD40B:				; CODE XREF: sub_67DFD2B0+235j
		movzx	eax, byte ptr [esi]
		lea	edx, [eax-20h]
		cmp	dl, 5Eh
		ja	short loc_67DFD3A6
		movzx	eax, al
		add	edi, 1
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		lea	ebp, [esi+1]
		mov	[esp+4Ch+Format], offset aC ; "	'%c' "
		mov	[esp+4Ch+var_44], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		mov	[esp+4Ch+var_48], 588h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esi+4]
		and	eax, 0FFFFFFFCh
		cmp	ebp, eax
		jnz	short loc_67DFD3F3

loc_67DFD451:				; CODE XREF: sub_67DFD2B0+141j
		cmp	edi, 3
		jg	loc_67DFD4F0

loc_67DFD45A:				; CODE XREF: sub_67DFD2B0+309j
					; sub_67DFD2B0+317j ...
		mov	[esp+4Ch+Format], offset asc_67E2A57B ;	"\n"
		mov	[esp+4Ch+var_44], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		mov	[esp+4Ch+var_48], 5A1h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	ebx, edi
		jg	loc_67DFD3FB

loc_67DFD486:				; CODE XREF: sub_67DFD2B0+F1j
					; sub_67DFD2B0+145j
		mov	[esp+4Ch+Format], offset asc_67E2A57B ;	"\n"
		mov	[esp+4Ch+var_44], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		mov	[esp+4Ch+var_48], 5A5h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67DFD4AA:				; CODE XREF: sub_67DFD2B0+45j
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DFD4B2:				; CODE XREF: sub_67DFD2B0+155j
		mov	eax, [esp+4Ch+arg_8]
		mov	dword ptr [esp+4Ch+var_3C+4], esi
		mov	[esp+4Ch+Format], offset a4dP ;	"%4d\t%p: "
		mov	[esp+4Ch+var_44], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		lea	eax, [edi+eax]
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		mov	[esp+4Ch+var_48], 583h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DFD40B
; ---------------------------------------------------------------------------
		align 10h

loc_67DFD4F0:				; CODE XREF: sub_67DFD2B0+1A4j
		mov	eax, esi
		and	eax, 0FFFFFFFCh
		lea	edx, [esi-3]
		cmp	edx, eax
		setz	dl
		movzx	edx, dl
		mov	[esp+4Ch+var_4C], edx
		mov	[esp+4Ch+var_20], edx
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_unpack_u ; "_dbus_unpack_uint32"
		mov	[esp+4Ch+Format], 0EAh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS	(data, 4) == data"
		call	sub_67DFAE70
		mov	eax, [esi-3]
		mov	edx, [esp+4Ch+var_20]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_unpack_u ; "_dbus_unpack_uint32"
		mov	[esp+4Ch+Format], 0EAh
		mov	[esp+4Ch+var_20], eax
		mov	[esp+4Ch+var_4C], edx
		mov	[esp+4Ch+var_44], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS	(data, 4) == data"
		call	sub_67DFAE70
		mov	edx, [esi-3]
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+Format], offset aBeDLeD ; "BE:	%d LE: %d"
		mov	[esp+4Ch+var_44], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		mov	ecx, edx
		mov	dword ptr [esp+4Ch+var_3C+4], eax
		mov	eax, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		mov	[esp+4Ch+var_48], 594h ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	edi, 7
		jle	loc_67DFD45A
		lea	eax, [esi+8]
		and	eax, 0FFFFFFF8h
		cmp	ebp, eax
		jnz	loc_67DFD45A
		fld	qword ptr [esi-7]
		fstp	qword ptr [esp+4Ch+var_3C] ; char
		mov	[esp+4Ch+Format], offset aDblG ; " dbl:	%g"
		mov	[esp+4Ch+var_44], offset a_dbus_verbos_0 ; "_dbus_verbose_bytes"
		mov	[esp+4Ch+var_48], 59Eh ; int
		mov	[esp+4Ch+var_4C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67DFD45A
sub_67DFD2B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFD600	proc near		; CODE XREF: sub_67DE5570+295p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 3Ch
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, dword ptr [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_4], ebp
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E00CE0
		mov	edx, ebx
		not	edx
		shr	edx, 1Fh
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_verbose_ ; "_dbus_verbose_bytes_of_string"
		mov	[esp+3Ch+Format], 5B9h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	ebp, eax
		mov	[esp+3Ch+var_38], offset aStart0_1 ; "start >= 0"
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		cmp	ebp, ebx
		jl	short loc_67DFD6D0
		lea	eax, [esi+ebx]
		cmp	ebp, eax
		jl	short loc_67DFD697

loc_67DFD663:				; CODE XREF: sub_67DFD600+CBj
		mov	[esp+3Ch+var_34], esi
		mov	[esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E01280
		mov	edi, [esp+3Ch+var_8]
		mov	[esp+3Ch+arg_8], ebx
		mov	ebp, [esp+3Ch+var_4]
		mov	dword ptr [esp+3Ch+arg_4], esi
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	[esp+3Ch+arg_0], eax
		add	esp, 3Ch
		jmp	sub_67DFD2B0
; ---------------------------------------------------------------------------

loc_67DFD697:				; CODE XREF: sub_67DFD600+61j
		mov	[esp+3Ch+var_28], esi
		mov	esi, ebp
		mov	[esp+3Ch+var_24], ebp
		sub	esi, ebx
		mov	dword ptr [esp+3Ch+var_2C], ebx	; char
		mov	[esp+3Ch+Format], offset aDDExtendsOutsi ; "  [%d,%d) extends outside string of	len"...
		mov	[esp+3Ch+var_34], offset a_dbus_verbose_ ; "_dbus_verbose_bytes_of_string"
		mov	[esp+3Ch+var_38], 5C5h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	short loc_67DFD663
; ---------------------------------------------------------------------------
		align 10h

loc_67DFD6D0:				; CODE XREF: sub_67DFD600+5Aj
		mov	[esp+3Ch+var_24], ebp
		mov	[esp+3Ch+var_28], esi
		mov	dword ptr [esp+3Ch+var_2C], ebx	; char
		mov	[esp+3Ch+Format], offset aDDIsNotInsideS ; "  [%d,%d) is not inside string of lengt"...
		mov	[esp+3Ch+var_34], offset a_dbus_verbose_ ; "_dbus_verbose_bytes_of_string"
		mov	[esp+3Ch+var_38], 5BEh ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_67DFD600	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFD720	proc near		; CODE XREF: sub_67DDCD20+C7p
					; sub_67DDDCC0+21Fp

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 3Ch
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_4], ebp
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [edi]
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E00CE0
		mov	[esp+3Ch+var_2C], offset a_dbus_marsha_2 ; "_dbus_marshal_read_uint32"
		add	ebx, 3
		and	ebx, 0FFFFFFFCh
		lea	ebp, [ebx+3]
		mov	[esp+3Ch+var_30], 201h
		cmp	ebp, eax
		setl	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_34], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPos4_dbus_stri ; "pos	+ 4 <= _dbus_string_get_length (str"...
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E01770
		mov	[esp+3Ch+var_2C], offset a_dbus_unpack_u ; "_dbus_unpack_uint32"
		mov	[esp+3Ch+var_30], 0EAh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS	(data, 4) == data"
		lea	ebx, [eax+ebx]
		xor	eax, eax
		lea	edx, [ebx+3]
		and	edx, 0FFFFFFFCh
		cmp	ebx, edx
		setz	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		cmp	[esp+3Ch+arg_8], 6Ch
		jz	loc_67DFD870
		mov	edx, [ebx]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx

loc_67DFD7EF:				; CODE XREF: sub_67DFD720+152j
		mov	edx, [esp+3Ch+arg_4]
		sub	edx, 61h
		cmp	edx, 18h	; switch 25 cases
		jbe	short loc_67DFD817

loc_67DFD7FB:				; CODE XREF: sub_67DFD720:loc_67DFD817j
					; DATA XREF: .rdata:off_67E2A5E8o
		mov	[esp+3Ch+var_34], 4F1h ; jumptable 67DFD817 default case
		mov	[esp+3Ch+var_38], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_3C], offset aUnknownTypecod ; "unknown typecode in	_dbus_type_get_alig"...
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DFD817:				; CODE XREF: sub_67DFD720+D9j
		jmp	ds:off_67E2A5E8[edx*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_67DFD820:				; CODE XREF: sub_67DFD720:loc_67DFD817j
					; DATA XREF: .rdata:off_67E2A5E8o
		mov	edx, 0FFFFFFFEh	; jumptable 67DFD817 cases 13,16
		mov	ecx, 2

loc_67DFD82A:				; CODE XREF: sub_67DFD720+130j
					; sub_67DFD720+13Cj ...
		add	ebp, ecx
		and	ebp, edx
		add	ebp, eax
		mov	[edi], ebp
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DFD846:				; CODE XREF: sub_67DFD720:loc_67DFD817j
					; DATA XREF: .rdata:off_67E2A5E8o
		mov	edx, 0FFFFFFFFh	; jumptable 67DFD817 cases 6,21,24
		mov	ecx, 1
		jmp	short loc_67DFD82A
; ---------------------------------------------------------------------------

loc_67DFD852:				; CODE XREF: sub_67DFD720:loc_67DFD817j
					; DATA XREF: .rdata:off_67E2A5E8o
		mov	edx, 0FFFFFFF8h	; jumptable 67DFD817 cases 3,4,17,19,23
		mov	ecx, 8
		jmp	short loc_67DFD82A
; ---------------------------------------------------------------------------
		align 10h

loc_67DFD860:				; CODE XREF: sub_67DFD720:loc_67DFD817j
					; DATA XREF: .rdata:off_67E2A5E8o
		mov	edx, 0FFFFFFFCh	; jumptable 67DFD817 cases 0,1,7,8,14,18,20
		mov	ecx, 4
		jmp	short loc_67DFD82A
; ---------------------------------------------------------------------------
		align 10h

loc_67DFD870:				; CODE XREF: sub_67DFD720+A3j
		mov	eax, [ebx]
		jmp	loc_67DFD7EF
sub_67DFD720	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFD880	proc near		; CODE XREF: sub_67DDE050+263p

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_60		= dword	ptr -60h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch

		sub	esp, 8Ch
		mov	edx, [esp+8Ch+arg_8]
		mov	[esp+8Ch+var_10], ebx
		mov	eax, [esp+8Ch+arg_C]
		mov	[esp+8Ch+var_C], esi
		mov	ebx, [esp+8Ch+arg_10]
		mov	[esp+8Ch+var_8], edi
		mov	esi, [esp+8Ch+arg_18]
		sub	edx, 62h
		mov	edi, [esp+8Ch+arg_0]
		cmp	edx, 17h	; switch 24 cases
		mov	[esp+8Ch+var_4], ebp
		mov	ebp, [esp+8Ch+arg_4]
		jbe	short loc_67DFD8F0

loc_67DFD8D1:				; CODE XREF: sub_67DFD880:loc_67DFD8F0j
					; DATA XREF: .rdata:off_67E2A6A4o
		mov	[esp+8Ch+var_84], 1E7h ; jumptable 67DFD8F0 default case
		mov	[esp+8Ch+var_88], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_8C], offset aNotABasicType	; "not a basic type"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h

loc_67DFD8F0:				; CODE XREF: sub_67DFD880+4Fj
		jmp	ds:off_67E2A6A4[edx*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67DFD8F7:				; CODE XREF: sub_67DFD880:loc_67DFD8F0j
					; DATA XREF: .rdata:off_67E2A6A4o
		movzx	eax, byte ptr [eax] ; jumptable	67DFD8F0 case 23
		mov	[esp+8Ch+var_8C], edi
		mov	[esp+8Ch+var_88], ebp
		mov	[esp+8Ch+var_84], eax
		call	sub_67E01030
		mov	edi, [esp+8Ch+arg_14]
		test	edi, edi
		jz	short loc_67DFD921
		mov	edx, [esp+8Ch+arg_14]
		lea	eax, [ebp+1]
		mov	[edx], eax

loc_67DFD921:				; CODE XREF: sub_67DFD880+93j
		test	esi, esi
		jz	loc_67DFE013
		add	ebp, 1
		mov	eax, 1
		mov	[esi], ebp

loc_67DFD933:				; CODE XREF: sub_67DFD880+1BFj
					; sub_67DFD880+370j ...
		mov	ebx, [esp+8Ch+var_10]
		mov	esi, [esp+8Ch+var_C]
		mov	edi, [esp+8Ch+var_8]
		mov	ebp, [esp+8Ch+var_4]
		add	esp, 8Ch
		retn
; ---------------------------------------------------------------------------

loc_67DFD953:				; CODE XREF: sub_67DFD880:loc_67DFD8F0j
					; DATA XREF: .rdata:off_67E2A6A4o
		add	ebp, 3		; jumptable 67DFD8F0 cases 0,6,7,19
		mov	edx, [eax]
		and	ebp, 0FFFFFFFCh
		cmp	ebx, 42h
		setz	al
		cmp	ebx, 6Ch
		setz	cl
		or	eax, ecx
		and	eax, 1
		mov	[esp+8Ch+var_50], edx
		mov	[esp+8Ch+var_8C], eax
		mov	[esp+8Ch+var_7C], offset aSet_4_octets ; "set_4_octets"
		mov	[esp+8Ch+var_80], 10Ch
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aByte_orderDbus ; "byte_order == DBUS_LITTLE_ENDIAN ||	byt"...
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], edi
		mov	[esp+8Ch+var_84], 4
		mov	[esp+8Ch+var_88], ebp
		call	sub_67E014C0
		mov	[esp+8Ch+var_7C], offset aPack_4_octets	; "pack_4_octets"
		mov	[esp+8Ch+var_80], 65h
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS	(data, 4) == data"
		mov	edi, eax
		lea	eax, [eax+3]
		and	eax, 0FFFFFFFCh
		cmp	edi, eax
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		cmp	ebx, 6Ch
		mov	edx, [esp+8Ch+var_50]
		jz	loc_67DFE043
		mov	ecx, edx
		mov	eax, edx
		shl	eax, 18h
		shr	ecx, 18h
		or	ecx, eax
		mov	eax, edx
		and	eax, 0FF00h
		and	edx, 0FF0000h
		shl	eax, 8
		or	ecx, eax
		shr	edx, 8
		or	ecx, edx
		mov	[edi], ecx

loc_67DFDA16:				; CODE XREF: sub_67DFD880+7C5j
		mov	ecx, [esp+8Ch+arg_14]
		test	ecx, ecx
		jz	short loc_67DFDA2D
		mov	edx, [esp+8Ch+arg_14]
		lea	eax, [ebp+4]
		mov	[edx], eax

loc_67DFDA2D:				; CODE XREF: sub_67DFD880+19Fj
		test	esi, esi
		jz	loc_67DFE013
		add	ebp, 4
		mov	eax, 1
		mov	[esi], ebp
		jmp	loc_67DFD933
; ---------------------------------------------------------------------------

loc_67DFDA44:				; CODE XREF: sub_67DFD880:loc_67DFD8F0j
					; DATA XREF: .rdata:off_67E2A6A4o
		mov	ecx, [eax]	; jumptable 67DFD8F0 cases 2,18,22
		add	ebp, 7
		and	ebp, 0FFFFFFF8h
		cmp	ebx, 42h
		mov	[esp+8Ch+var_4C], ecx
		mov	eax, [eax+4]
		mov	[esp+8Ch+var_7C], offset aSet_8_octets ; "set_8_octets"
		mov	[esp+8Ch+var_80], 11Ch
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_40], eax
		setz	al
		cmp	ebx, 6Ch
		setz	dl
		or	eax, edx
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		mov	[esp+8Ch+var_88], offset aByte_orderDbus ; "byte_order == DBUS_LITTLE_ENDIAN ||	byt"...
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], edi
		mov	[esp+8Ch+var_84], 8
		mov	[esp+8Ch+var_88], ebp
		call	sub_67E014C0
		mov	[esp+8Ch+var_7C], offset aPack_8_octets	; "pack_8_octets"
		mov	[esp+8Ch+var_80], 72h
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset a_dbus_align__4 ; "_DBUS_ALIGN_ADDRESS	(data, 8) == data"
		mov	edi, eax
		lea	eax, [eax+7]
		and	eax, 0FFFFFFF8h
		cmp	edi, eax
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		cmp	ebx, 6Ch
		jz	loc_67DFE024
		mov	eax, [esp+8Ch+var_4C]
		mov	edx, [esp+8Ch+var_40]
		mov	[esp+8Ch+var_48], 0
		mov	ebx, eax
		mov	ecx, eax
		shr	edx, 18h
		and	ebx, 0FF00h
		mov	[esp+8Ch+var_60], edx
		mov	edx, eax
		and	ecx, 0FF0000h
		shl	ebx, 8
		and	eax, 0FF000000h
		shl	edx, 18h
		mov	[esp+8Ch+var_4C], ecx
		or	edx, ebx
		mov	ecx, [esp+8Ch+var_4C]
		mov	ebx, [esp+8Ch+var_48]
		mov	[esp+8Ch+var_4C], eax
		mov	eax, [esp+8Ch+var_40]
		mov	[esp+8Ch+var_48], 0
		shld	ebx, ecx, 18h
		or	edx, ebx
		mov	ebx, [esp+8Ch+var_48]
		and	eax, 0FF0000h
		shl	ecx, 18h
		or	[esp+8Ch+var_60], ecx
		mov	ecx, [esp+8Ch+var_4C]
		shr	eax, 8
		mov	[esp+8Ch+var_4C], 0
		shld	ebx, ecx, 8
		or	edx, ebx
		movzx	ebx, byte ptr [esp+8Ch+var_40]
		shl	ecx, 8
		or	[esp+8Ch+var_60], ecx
		mov	ecx, [esp+8Ch+var_4C]
		mov	[esp+8Ch+var_48], ebx
		mov	ebx, [esp+8Ch+var_48]
		mov	[esp+8Ch+var_4C], 0
		shrd	ecx, ebx, 8
		shr	ebx, 8
		or	edx, ebx
		mov	ebx, [esp+8Ch+var_40]
		or	[esp+8Ch+var_60], ecx
		mov	ecx, [esp+8Ch+var_4C]
		and	ebx, 0FF00h
		mov	[esp+8Ch+var_48], ebx
		mov	ebx, [esp+8Ch+var_48]
		shrd	ecx, ebx, 18h
		or	[esp+8Ch+var_60], ecx
		shr	ebx, 18h
		or	[esp+8Ch+var_60], eax
		or	edx, ebx
		mov	[esp+8Ch+var_48], ebx
		mov	ebx, [esp+8Ch+var_60]
		mov	[esp+8Ch+var_4C], ecx
		mov	[edi], ebx
		mov	[edi+4], edx

loc_67DFDBC7:				; CODE XREF: sub_67DFD880+7B1j
		mov	edx, [esp+8Ch+arg_14]
		test	edx, edx
		jz	short loc_67DFDBDE
		mov	edx, [esp+8Ch+arg_14]
		lea	eax, [ebp+8]
		mov	[edx], eax

loc_67DFDBDE:				; CODE XREF: sub_67DFD880+350j
		test	esi, esi
		jz	loc_67DFE013
		add	ebp, 8
		mov	eax, 1
		mov	[esi], ebp
		jmp	loc_67DFD933
; ---------------------------------------------------------------------------

loc_67DFDBF5:				; CODE XREF: sub_67DFD880:loc_67DFD8F0j
					; DATA XREF: .rdata:off_67E2A6A4o
		mov	[esp+8Ch+var_7C], offset a_dbus_marsha_3 ; jumptable 67DFD8F0 case 5
		xor	edx, edx
		mov	[esp+8Ch+var_80], 1E2h
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aVpStrNull ; "vp->str != NULL"
		cmp	dword ptr [eax], 0
		mov	[esp+8Ch+var_50], eax
		setnz	dl
		mov	[esp+8Ch+var_8C], edx
		call	sub_67DFAE70
		mov	eax, [esp+8Ch+var_50]
		lea	edx, [esp+8Ch+var_30]
		mov	eax, [eax]
		mov	[esp+8Ch+var_8C], edx ;	int
		mov	[esp+8Ch+var_50], edx
		mov	[esp+8Ch+var_88], eax ;	char *
		call	sub_67E03060
		mov	[esp+8Ch+var_88], ebp
		mov	[esp+8Ch+var_8C], edi
		call	sub_67E00E50
		mov	edx, [esp+8Ch+var_50]
		mov	[esp+8Ch+var_8C], edx
		movzx	eax, al
		mov	[esp+8Ch+var_4C], eax
		call	sub_67E00CE0
		mov	edx, [esp+8Ch+var_50]
		mov	ecx, [esp+8Ch+var_4C]
		mov	[esp+8Ch+var_80], edi ;	int
		mov	[esp+8Ch+var_88], 0 ; int
		mov	[esp+8Ch+var_8C], edx ;	int
		mov	[esp+8Ch+var_78], ecx ;	int
		mov	ebx, eax
		lea	eax, [ebp+1]
		mov	[esp+8Ch+var_40], eax
		mov	[esp+8Ch+var_7C], eax ;	int
		mov	[esp+8Ch+var_84], ebx ;	size_t
		call	sub_67E053E0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	loc_67DFD933
		movzx	eax, bl
		mov	[esp+8Ch+var_8C], edi
		mov	[esp+8Ch+var_84], eax
		mov	[esp+8Ch+var_88], ebp
		call	sub_67E01030
		mov	edi, [esp+8Ch+arg_14]
		test	edi, edi
		jz	short loc_67DFDCCE
		mov	edx, [esp+8Ch+var_4C]
		mov	ecx, [esp+8Ch+arg_14]
		lea	eax, [edx+ebp+2]
		mov	[ecx], eax

loc_67DFDCCE:				; CODE XREF: sub_67DFD880+43Bj
		test	esi, esi
		jz	loc_67DFE013
		mov	edx, [esp+8Ch+var_40]
		lea	eax, [edx+ebx+1]
		mov	[esi], eax
		mov	eax, 1
		jmp	loc_67DFD933
; ---------------------------------------------------------------------------
		align 10h

loc_67DFDCF0:				; CODE XREF: sub_67DFD880:loc_67DFD8F0j
					; DATA XREF: .rdata:off_67E2A6A4o
		movzx	eax, word ptr [eax] ; jumptable	67DFD8F0 cases 12,15
		add	ebp, 1
		and	ebp, 0FFFFFFFEh
		cmp	ebx, 42h
		mov	[esp+8Ch+var_7C], offset aSet_2_octets ; "set_2_octets"
		mov	[esp+8Ch+var_80], 0FCh
		mov	word ptr [esp+8Ch+var_40], ax
		setz	al
		cmp	ebx, 6Ch
		setz	dl
		or	eax, edx
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aByte_orderDbus ; "byte_order == DBUS_LITTLE_ENDIAN ||	byt"...
		call	sub_67DFAE70
		mov	[esp+8Ch+var_8C], edi
		mov	[esp+8Ch+var_84], 2
		mov	[esp+8Ch+var_88], ebp
		call	sub_67E014C0
		mov	[esp+8Ch+var_7C], offset aPack_2_octets	; "pack_2_octets"
		mov	[esp+8Ch+var_80], 58h
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset a_dbus_align__5 ; "_DBUS_ALIGN_ADDRESS	(data, 2) == data"
		mov	edi, eax
		lea	eax, [eax+1]
		and	eax, 0FFFFFFFEh
		cmp	edi, eax
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		cmp	ebx, 6Ch
		jz	loc_67DFE036
		movzx	eax, word ptr [esp+8Ch+var_40]
		rol	ax, 8
		mov	[edi], ax

loc_67DFDD98:				; CODE XREF: sub_67DFD880+7BEj
		mov	ebx, [esp+8Ch+arg_14]
		test	ebx, ebx
		jz	short loc_67DFDDAF
		mov	ebx, [esp+8Ch+arg_14]
		lea	eax, [ebp+2]
		mov	[ebx], eax

loc_67DFDDAF:				; CODE XREF: sub_67DFD880+521j
		test	esi, esi
		jz	loc_67DFE013
		add	ebp, 2
		mov	eax, 1
		mov	[esi], ebp
		jmp	loc_67DFD933
; ---------------------------------------------------------------------------

loc_67DFDDC6:				; CODE XREF: sub_67DFD880:loc_67DFD8F0j
					; DATA XREF: .rdata:off_67E2A6A4o
		add	ebp, 3		; jumptable 67DFD8F0 cases 13,17
		xor	edx, edx
		mov	[esp+8Ch+var_40], ebp
		and	[esp+8Ch+var_40], 0FFFFFFFCh
		mov	[esp+8Ch+var_7C], offset a_dbus_marsha_3 ; "_dbus_marshal_set_basic"
		mov	[esp+8Ch+var_80], 1DDh
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aVpStrNull ; "vp->str != NULL"
		cmp	dword ptr [eax], 0
		mov	[esp+8Ch+var_50], eax
		setnz	dl
		mov	[esp+8Ch+var_8C], edx
		call	sub_67DFAE70
		mov	eax, [esp+8Ch+var_50]
		lea	edx, [esp+8Ch+var_30]
		mov	eax, [eax]
		mov	[esp+8Ch+var_8C], edx ;	int
		mov	[esp+8Ch+var_50], edx
		mov	[esp+8Ch+var_88], eax ;	char *
		call	sub_67E03060
		mov	[esp+8Ch+var_7C], offset aSet_string ; "set_string"
		mov	[esp+8Ch+var_80], 156h
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset a_dbus_align__6 ; "_DBUS_ALIGN_VALUE (pos, 4) == (unsigned"...
		mov	[esp+8Ch+var_8C], 1
		call	sub_67DFAE70
		mov	ecx, [esp+8Ch+var_40]
		mov	[esp+8Ch+var_84], 4
		mov	[esp+8Ch+var_8C], edi
		mov	[esp+8Ch+var_88], ecx
		call	sub_67E01280
		mov	[esp+8Ch+var_7C], offset a_dbus_unpack_u ; "_dbus_unpack_uint32"
		mov	[esp+8Ch+var_80], 0EAh
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS	(data, 4) == data"
		mov	ebp, eax
		lea	eax, [eax+3]
		and	eax, 0FFFFFFFCh
		cmp	ebp, eax
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		cmp	ebx, 6Ch
		mov	edx, [esp+8Ch+var_50]
		jz	loc_67DFE050
		mov	eax, [ebp+0]
		mov	ebp, eax
		mov	ecx, eax
		shl	ecx, 18h
		shr	ebp, 18h
		or	ebp, ecx
		mov	ecx, eax
		and	ecx, 0FF00h
		and	eax, 0FF0000h
		shl	ecx, 8
		or	ebp, ecx
		shr	eax, 8
		or	ebp, eax

loc_67DFDECF:				; CODE XREF: sub_67DFD880+7D3j
		mov	[esp+8Ch+var_8C], edx
		mov	[esp+8Ch+var_50], edx
		call	sub_67E00CE0
		mov	edx, [esp+8Ch+var_50]
		mov	[esp+8Ch+var_78], ebp ;	int
		mov	[esp+8Ch+var_80], edi ;	int
		mov	[esp+8Ch+var_88], 0 ; int
		mov	[esp+8Ch+var_8C], edx ;	int
		mov	ecx, eax
		mov	eax, [esp+8Ch+var_40]
		mov	[esp+8Ch+var_84], ecx ;	size_t
		mov	[esp+8Ch+var_50], ecx
		add	eax, 4
		mov	[esp+8Ch+var_4C], eax
		mov	[esp+8Ch+var_7C], eax ;	int
		call	sub_67E053E0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	loc_67DFD933
		cmp	ebx, 42h
		setz	dl
		cmp	ebx, 6Ch
		setz	al
		or	eax, edx
		and	eax, 1
		mov	[esp+8Ch+var_8C], eax
		mov	[esp+8Ch+var_7C], offset aSet_4_octets ; "set_4_octets"
		mov	[esp+8Ch+var_80], 10Ch
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset aByte_orderDbus ; "byte_order == DBUS_LITTLE_ENDIAN ||	byt"...
		call	sub_67DFAE70
		mov	edx, [esp+8Ch+var_40]
		mov	[esp+8Ch+var_8C], edi
		mov	[esp+8Ch+var_84], 4
		mov	[esp+8Ch+var_88], edx
		call	sub_67E014C0
		mov	[esp+8Ch+var_7C], offset aPack_4_octets	; "pack_4_octets"
		mov	[esp+8Ch+var_80], 65h
		mov	[esp+8Ch+var_84], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+8Ch+var_88], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS	(data, 4) == data"
		mov	edi, eax
		lea	eax, [eax+3]
		and	eax, 0FFFFFFFCh
		cmp	edi, eax
		setz	al
		movzx	eax, al
		mov	[esp+8Ch+var_8C], eax
		call	sub_67DFAE70
		cmp	ebx, 6Ch
		mov	ecx, [esp+8Ch+var_50]
		jz	short loc_67DFE020
		mov	eax, ecx
		mov	edx, ecx
		shl	edx, 18h
		shr	eax, 18h
		or	eax, edx
		mov	edx, ecx
		and	edx, 0FF00h
		shl	edx, 8
		or	eax, edx
		mov	edx, ecx
		and	edx, 0FF0000h
		shr	edx, 8
		or	eax, edx
		mov	[edi], eax

loc_67DFDFD6:				; CODE XREF: sub_67DFD880+7A2j
		mov	eax, [esp+8Ch+arg_14]
		test	eax, eax
		jz	short loc_67DFDFF2
		mov	ebx, [esp+8Ch+var_4C]
		mov	edx, [esp+8Ch+arg_14]
		lea	eax, [ebp+ebx+1]
		mov	[edx], eax

loc_67DFDFF2:				; CODE XREF: sub_67DFD880+75Fj
		test	esi, esi
		mov	eax, 1
		jz	loc_67DFD933
		mov	ebx, [esp+8Ch+var_4C]
		lea	eax, [ebx+ecx+1]
		mov	[esi], eax
		mov	eax, 1
		jmp	loc_67DFD933
; ---------------------------------------------------------------------------

loc_67DFE013:				; CODE XREF: sub_67DFD880+A3j
					; sub_67DFD880+1AFj ...
		mov	eax, 1
		jmp	loc_67DFD933
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE020:				; CODE XREF: sub_67DFD880+72Cj
		mov	[edi], ecx
		jmp	short loc_67DFDFD6
; ---------------------------------------------------------------------------

loc_67DFE024:				; CODE XREF: sub_67DFD880+25Fj
		mov	ebx, [esp+8Ch+var_4C]
		mov	eax, [esp+8Ch+var_40]
		mov	[edi], ebx
		mov	[edi+4], eax
		jmp	loc_67DFDBC7
; ---------------------------------------------------------------------------

loc_67DFE036:				; CODE XREF: sub_67DFD880+506j
		movzx	ecx, word ptr [esp+8Ch+var_40]
		mov	[edi], cx
		jmp	loc_67DFDD98
; ---------------------------------------------------------------------------

loc_67DFE043:				; CODE XREF: sub_67DFD880+16Bj
		mov	[edi], edx
		jmp	loc_67DFDA16
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE050:				; CODE XREF: sub_67DFD880+623j
		mov	ebp, [ebp+0]
		jmp	loc_67DFDECF
sub_67DFD880	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFE060	proc near		; CODE XREF: sub_67DDCD20+168p
					; sub_67DDDCC0+159p

var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_C]
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_0]
		cmp	ebx, 42h
		setz	al
		cmp	ebx, 6Ch
		setz	dl
		or	eax, edx
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_marsha_5 ; "_dbus_marshal_skip_basic"
		mov	[esp+3Ch+var_30], 475h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aByte_orderDbus ; "byte_order == DBUS_LITTLE_ENDIAN || byt"...
		call	sub_67DFAE70
		lea	eax, [ebp-62h]
		cmp	eax, 17h	; switch 24 cases
		jbe	short loc_67DFE101

loc_67DFE0C4:				; CODE XREF: sub_67DFE060:loc_67DFE101j
					; DATA XREF: .rdata:off_67E2A720o
		cmp	ebp, 7Dh	; jumptable 67DFE101 default case
		mov	eax, offset aUnknown ; "unknown"
		ja	short loc_67DFE0D5
		mov	eax, ds:off_67E2AB60[ebp*4]

loc_67DFE0D5:				; CODE XREF: sub_67DFE060+6Cj
		mov	dword ptr [esp+3Ch+var_38], eax	; char
		mov	[esp+3Ch+var_3C], offset aTypeSNotABasic ; "type %s not	a basic	type\n"
		call	sub_67DFAD60
		mov	[esp+3Ch+var_34], 4A4h
		mov	dword ptr [esp+3Ch+var_38], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_3C], offset aNotABasicType	; "not a basic type"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DFE101:				; CODE XREF: sub_67DFE060+62j
		jmp	ds:off_67E2A720[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67DFE108:				; CODE XREF: sub_67DFE060:loc_67DFE101j
					; DATA XREF: .rdata:off_67E2A720o
		add	dword ptr [esi], 1 ; jumptable 67DFE101	case 23
		nop
		lea	esi, [esi+0]

loc_67DFE110:				; CODE XREF: sub_67DFE060+D1j
					; sub_67DFE060+E0j ...
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67DFE124:				; CODE XREF: sub_67DFE060:loc_67DFE101j
					; DATA XREF: .rdata:off_67E2A720o
		mov	eax, [esi]	; jumptable 67DFE101 cases 0,6,7,19
		add	eax, 3
		and	eax, 0FFFFFFFCh
		add	eax, 4
		mov	[esi], eax
		jmp	short loc_67DFE110
; ---------------------------------------------------------------------------

loc_67DFE133:				; CODE XREF: sub_67DFE060:loc_67DFE101j
					; DATA XREF: .rdata:off_67E2A720o
		mov	eax, [esi]	; jumptable 67DFE101 cases 2,18,22
		add	eax, 7
		and	eax, 0FFFFFFF8h
		add	eax, 8
		mov	[esi], eax
		jmp	short loc_67DFE110
; ---------------------------------------------------------------------------

loc_67DFE142:				; CODE XREF: sub_67DFE060:loc_67DFE101j
					; DATA XREF: .rdata:off_67E2A720o
		mov	eax, [esi]	; jumptable 67DFE101 case 5
		mov	[esp+3Ch+var_3C], edi
		mov	dword ptr [esp+3Ch+var_38], eax
		call	sub_67E00E50
		mov	edx, [esi]
		movzx	eax, al
		lea	eax, [edx+eax+2]
		mov	[esi], eax
		jmp	short loc_67DFE110
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE160:				; CODE XREF: sub_67DFE060:loc_67DFE101j
					; DATA XREF: .rdata:off_67E2A720o
		mov	eax, [esi]	; jumptable 67DFE101 cases 12,15
		add	eax, 1
		and	eax, 0FFFFFFFEh
		add	eax, 2
		mov	[esi], eax
		jmp	short loc_67DFE110
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE170:				; CODE XREF: sub_67DFE060:loc_67DFE101j
					; DATA XREF: .rdata:off_67E2A720o
		mov	ebp, [esi]	; jumptable 67DFE101 cases 13,17
		add	ebp, 3
		and	ebp, 0FFFFFFFCh
		lea	eax, [ebp+4]
		mov	[esi], eax
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E00CE0
		lea	edx, [ebp+3]
		mov	[esp+3Ch+var_2C], offset a_dbus_marsha_2 ; "_dbus_marshal_read_uint32"
		mov	[esp+3Ch+var_30], 201h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset aPos4_dbus_stri ; "pos + 4 <= _dbus_string_get_length (str"...
		cmp	edx, eax
		setl	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E01770
		mov	[esp+3Ch+var_2C], offset a_dbus_unpack_u ; "_dbus_unpack_uint32"
		mov	[esp+3Ch+var_30], 0EAh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+3Ch+var_38], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS (data, 4) == data"
		lea	ebp, [eax+ebp]
		lea	eax, [ebp+3]
		and	eax, 0FFFFFFFCh
		cmp	ebp, eax
		setz	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		cmp	ebx, 6Ch
		jz	short loc_67DFE232
		mov	edx, [ebp+0]
		mov	eax, edx
		mov	ecx, edx
		shl	ecx, 18h
		shr	eax, 18h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 0FF00h
		and	edx, 0FF0000h
		shl	ecx, 8
		or	eax, ecx
		shr	edx, 8
		or	eax, edx

loc_67DFE225:				; CODE XREF: sub_67DFE060+1D5j
		mov	edx, [esi]
		lea	eax, [eax+edx+1]
		mov	[esi], eax
		jmp	loc_67DFE110
; ---------------------------------------------------------------------------

loc_67DFE232:				; CODE XREF: sub_67DFE060+19Cj
		mov	eax, [ebp+0]
		jmp	short loc_67DFE225
sub_67DFE060	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFE240	proc near		; CODE XREF: sub_67DD9250+17Bp
					; sub_67DDC900+6Ep ...

var_6C		= dword	ptr -6Ch
var_68		= byte ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		sub	esp, 6Ch
		mov	[esp+6Ch+var_10], ebx
		mov	ebx, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_C], esi
		mov	esi, [esp+6Ch+arg_C]
		mov	[esp+6Ch+var_8], edi
		mov	edi, [esp+6Ch+arg_14]
		mov	[esp+6Ch+var_4], ebp
		mov	ebp, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_6C], ebx
		call	dbus_type_is_basic
		mov	[esp+6Ch+var_5C], offset a_dbus_marsha_4 ; "_dbus_marshal_read_basic"
		mov	[esp+6Ch+var_60], 226h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_68], offset aDbus_type_is_7 ; "dbus_type_is_basic (type)"
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67E01770
		mov	edx, eax
		lea	eax, [ebx-62h]
		cmp	eax, 17h	; switch 24 cases
		jbe	short loc_67DFE2F1

loc_67DFE2B0:				; CODE XREF: sub_67DFE240:loc_67DFE2F1j
					; DATA XREF: .rdata:off_67E2A7A0o
		cmp	ebx, 7Dh	; jumptable 67DFE2F1 default case
		mov	eax, offset aUnknown ; "unknown"
		ja	short loc_67DFE2C1
		mov	eax, ds:off_67E2AB60[ebx*4]

loc_67DFE2C1:				; CODE XREF: sub_67DFE240+78j
		mov	[esp+6Ch+var_64], ebx
		mov	dword ptr [esp+6Ch+var_68], eax	; char
		mov	[esp+6Ch+var_6C], offset aTypeSDNotABasi ; "type %s %d not a basic type\n"
		call	sub_67DFB4E0
		mov	[esp+6Ch+var_64], 27Eh
		mov	dword ptr [esp+6Ch+var_68], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_6C], offset aNotABasicType	; "not a basic type"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67DFE2F1:				; CODE XREF: sub_67DFE240+6Ej
		jmp	ds:off_67E2A7A0[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67DFE2F8:				; CODE XREF: sub_67DFE240:loc_67DFE2F1j
					; DATA XREF: .rdata:off_67E2A7A0o
		mov	eax, [esp+6Ch+arg_4] ; jumptable 67DFE2F1 case 23
		mov	[esp+6Ch+var_6C], ebp
		mov	dword ptr [esp+6Ch+var_68], eax
		call	sub_67E00E50
		mov	[esi], al
		mov	ecx, [esp+6Ch+arg_4]
		add	ecx, 1
		mov	[esp+6Ch+arg_4], ecx

loc_67DFE315:				; CODE XREF: sub_67DFE240+13Cj
					; sub_67DFE240+258j ...
		test	edi, edi
		jz	short loc_67DFE31B
		mov	[edi], ecx

loc_67DFE31B:				; CODE XREF: sub_67DFE240+D7j
		mov	ebx, [esp+6Ch+var_10]
		mov	esi, [esp+6Ch+var_C]
		mov	edi, [esp+6Ch+var_8]
		mov	ebp, [esp+6Ch+var_4]
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE330:				; CODE XREF: sub_67DFE240:loc_67DFE2F1j
					; DATA XREF: .rdata:off_67E2A7A0o
		mov	ecx, [esp+6Ch+arg_4] ; jumptable 67DFE2F1 cases	0,6,7,19
		add	ecx, 3
		and	ecx, 0FFFFFFFCh
		mov	[esp+6Ch+arg_4], ecx
		mov	eax, [edx+ecx]
		mov	[esi], eax
		cmp	[esp+6Ch+arg_10], 6Ch
		jz	short loc_67DFE375
		mov	ebp, [esi]
		mov	ebx, [esi]
		mov	edx, [esi]
		mov	eax, [esi]
		shl	ebp, 18h
		and	ebx, 0FF00h
		shl	ebx, 8
		and	edx, 0FF0000h
		shr	eax, 18h
		or	eax, ebp
		or	eax, ebx
		shr	edx, 8
		or	eax, edx
		mov	[esi], eax

loc_67DFE375:				; CODE XREF: sub_67DFE240+10Bj
		add	ecx, 4
		mov	[esp+6Ch+arg_4], ecx
		jmp	short loc_67DFE315
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE380:				; CODE XREF: sub_67DFE240:loc_67DFE2F1j
					; DATA XREF: .rdata:off_67E2A7A0o
		mov	ecx, [esp+6Ch+arg_4] ; jumptable 67DFE2F1 cases	2,18,22
		add	ecx, 7
		and	ecx, 0FFFFFFF8h
		cmp	[esp+6Ch+arg_10], 6Ch
		mov	[esp+6Ch+var_40], ecx
		jz	loc_67DFE5F0
		mov	eax, [edx+ecx]
		mov	edx, [edx+ecx+4]
		mov	[esp+6Ch+var_28], 0
		mov	ebx, [esp+6Ch+var_28]
		mov	[esp+6Ch+var_28], 0
		mov	[esp+6Ch+var_44], eax
		mov	ecx, [esp+6Ch+var_44]
		shl	eax, 18h
		mov	ebp, [esp+6Ch+var_44]
		mov	[esp+6Ch+var_24], edx
		shr	edx, 18h
		and	ecx, 0FF0000h
		mov	[esp+6Ch+var_2C], ecx
		mov	ecx, [esp+6Ch+var_2C]
		and	ebp, 0FF00h
		shl	ebp, 8
		or	eax, ebp
		shld	ebx, ecx, 18h
		or	eax, ebx
		mov	ebx, [esp+6Ch+var_44]
		shl	ecx, 18h
		or	edx, ecx
		and	ebx, 0FF000000h
		mov	[esp+6Ch+var_2C], ebx
		mov	ebx, [esp+6Ch+var_28]
		mov	ecx, [esp+6Ch+var_2C]
		mov	[esp+6Ch+var_2C], 0
		shld	ebx, ecx, 8
		or	eax, ebx
		movzx	ebx, byte ptr [esp+6Ch+var_24]
		shl	ecx, 8
		or	edx, ecx
		mov	ecx, [esp+6Ch+var_2C]
		mov	[esp+6Ch+var_2C], 0
		mov	[esp+6Ch+var_28], ebx
		mov	ebx, [esp+6Ch+var_28]
		shrd	ecx, ebx, 8
		shr	ebx, 8
		or	edx, ecx
		mov	ecx, [esp+6Ch+var_2C]
		or	eax, ebx
		mov	ebx, [esp+6Ch+var_24]
		and	ebx, 0FF00h
		mov	[esp+6Ch+var_28], ebx
		mov	ebx, [esp+6Ch+var_28]
		shrd	ecx, ebx, 18h
		shr	ebx, 18h
		or	edx, ecx
		mov	[esp+6Ch+var_28], ebx
		mov	ebx, [esp+6Ch+var_24]
		or	eax, [esp+6Ch+var_28]
		mov	[esp+6Ch+var_2C], ecx
		and	ebx, 0FF0000h
		shr	ebx, 8
		or	edx, ebx
		mov	[esp+6Ch+var_24], edx
		mov	[esp+6Ch+var_20], eax
		mov	eax, [esp+6Ch+var_24]
		mov	edx, [esp+6Ch+var_20]
		mov	[esi], eax
		mov	ecx, [esp+6Ch+var_40]
		mov	[esi+4], edx

loc_67DFE491:				; CODE XREF: sub_67DFE240+3BCj
		add	ecx, 8
		mov	[esp+6Ch+arg_4], ecx
		jmp	loc_67DFE315
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE4A0:				; CODE XREF: sub_67DFE240:loc_67DFE2F1j
					; DATA XREF: .rdata:off_67E2A7A0o
		mov	eax, [esp+6Ch+arg_4] ; jumptable 67DFE2F1 case 5
		mov	[esp+6Ch+var_30], edx
		mov	[esp+6Ch+var_6C], ebp
		mov	dword ptr [esp+6Ch+var_68], eax
		call	sub_67E00E50
		mov	ecx, [esp+6Ch+arg_4]
		mov	edx, [esp+6Ch+var_30]
		lea	edx, [edx+ecx+1]
		movzx	eax, al
		lea	ecx, [ecx+eax+2]
		mov	[esi], edx
		mov	[esp+6Ch+arg_4], ecx
		jmp	loc_67DFE315
; ---------------------------------------------------------------------------

loc_67DFE4D2:				; CODE XREF: sub_67DFE240:loc_67DFE2F1j
					; DATA XREF: .rdata:off_67E2A7A0o
		mov	ecx, [esp+6Ch+arg_4] ; jumptable 67DFE2F1 cases	12,15
		add	ecx, 1
		and	ecx, 0FFFFFFFEh
		movzx	eax, word ptr [edx+ecx]
		cmp	[esp+6Ch+arg_10], 6Ch
		mov	[esi], ax
		jz	short loc_67DFE4FF
		movzx	edx, word ptr [esi]
		movzx	eax, word ptr [esi]
		shr	dx, 8
		shl	eax, 8
		or	eax, edx
		mov	[esi], ax

loc_67DFE4FF:				; CODE XREF: sub_67DFE240+2ABj
		add	ecx, 2
		mov	[esp+6Ch+arg_4], ecx
		jmp	loc_67DFE315
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE510:				; CODE XREF: sub_67DFE240:loc_67DFE2F1j
					; DATA XREF: .rdata:off_67E2A7A0o
		mov	ebx, [esp+6Ch+arg_4] ; jumptable 67DFE2F1 cases	13,17
		mov	[esp+6Ch+var_30], edx
		mov	[esp+6Ch+var_6C], ebp
		add	ebx, 3
		and	ebx, 0FFFFFFFCh
		lea	eax, [ebx+4]
		mov	[esp+6Ch+arg_4], eax
		call	sub_67E00CE0
		lea	ecx, [ebx+3]
		mov	[esp+6Ch+var_5C], offset a_dbus_marsha_2 ; "_dbus_marshal_read_uint32"
		mov	[esp+6Ch+var_60], 201h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_68], offset aPos4_dbus_stri ; "pos + 4 <= _dbus_string_get_length (str"...
		cmp	ecx, eax
		setl	al
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_6C], ebp
		call	sub_67E01770
		mov	[esp+6Ch+var_5C], offset a_dbus_unpack_u ; "_dbus_unpack_uint32"
		mov	[esp+6Ch+var_60], 0EAh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_27 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_68], offset a_dbus_align__2 ; "_DBUS_ALIGN_ADDRESS (data, 4) == data"
		lea	ebx, [eax+ebx]
		lea	eax, [ebx+3]
		and	eax, 0FFFFFFFCh
		cmp	ebx, eax
		setz	al
		movzx	eax, al
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		mov	edx, [esp+6Ch+var_30]
		cmp	[esp+6Ch+arg_10], 6Ch
		jz	short loc_67DFE601
		mov	ecx, [ebx]
		mov	eax, ecx
		mov	ebx, ecx
		shl	ebx, 18h
		shr	eax, 18h
		or	eax, ebx
		mov	ebx, ecx
		and	ebx, 0FF00h
		and	ecx, 0FF0000h
		shl	ebx, 8
		or	eax, ebx
		shr	ecx, 8
		or	eax, ecx

loc_67DFE5D5:				; CODE XREF: sub_67DFE240+3C3j
		mov	ecx, [esp+6Ch+arg_4]
		add	edx, ecx
		lea	ecx, [ecx+eax+1]
		mov	[esi], edx
		mov	[esp+6Ch+arg_4], ecx
		jmp	loc_67DFE315
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE5F0:				; CODE XREF: sub_67DFE240+156j
		mov	eax, [edx+ecx]
		mov	edx, [edx+ecx+4]
		mov	[esi], eax
		mov	[esi+4], edx
		jmp	loc_67DFE491
; ---------------------------------------------------------------------------

loc_67DFE601:				; CODE XREF: sub_67DFE240+36Dj
		mov	eax, [ebx]
		jmp	short loc_67DFE5D5
sub_67DFE240	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  88. dbus_free

; =============== S U B	R O U T	I N E =======================================


		public dbus_free
dbus_free	proc near		; CODE XREF: sub_67DC1870+35p
					; sub_67DC1870+6Cp ...

arg_0		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+arg_0]
		test	eax, eax
		jz	short loc_67DFE623
		add	esp, 0Ch
		jmp	free
; ---------------------------------------------------------------------------

loc_67DFE623:				; CODE XREF: dbus_free+9j
		add	esp, 0Ch
		retn
dbus_free	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 198. dbus_shutdown

; =============== S U B	R O U T	I N E =======================================


		public dbus_shutdown
dbus_shutdown	proc near

var_1C		= dword	ptr -1Ch

		push	ebx
		sub	esp, 18h
		mov	ebx, ds:dword_67E34564
		test	ebx, ebx
		jz	short loc_67DFE662
		xchg	ax, ax

loc_67DFE640:				; CODE XREF: dbus_shutdown+30j
		mov	eax, [ebx]
		mov	ds:dword_67E34564, eax
		mov	eax, [ebx+8]
		mov	[esp+1Ch+var_1C], eax
		call	dword ptr [ebx+4]
		mov	[esp+1Ch+var_1C], ebx
		call	dbus_free
		mov	ebx, ds:dword_67E34564
		test	ebx, ebx
		jnz	short loc_67DFE640

loc_67DFE662:				; CODE XREF: dbus_shutdown+Cj
		add	dword_67E19028,	1
		add	esp, 18h
		pop	ebx
		retn
dbus_shutdown	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  89. dbus_free_string_array

; =============== S U B	R O U T	I N E =======================================


		public dbus_free_string_array
dbus_free_string_array proc near	; CODE XREF: sub_67DC29C0+32p
					; sub_67DC59A0+1A0p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_0]
		test	esi, esi
		jz	short loc_67DFE6A5
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_67DFE697
		mov	ebx, esi

loc_67DFE685:				; CODE XREF: dbus_free_string_array+25j
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		mov	eax, [ebx+4]
		add	ebx, 4
		test	eax, eax
		jnz	short loc_67DFE685

loc_67DFE697:				; CODE XREF: dbus_free_string_array+11j
		mov	[esp+1Ch+arg_0], esi
		add	esp, 14h
		pop	ebx
		pop	esi
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67DFE6A5:				; CODE XREF: dbus_free_string_array+Bj
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
dbus_free_string_array endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 179. dbus_realloc

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_realloc(void	*Memory, size_t	NewSize)
		public dbus_realloc
dbus_realloc	proc near		; CODE XREF: sub_67DD6770+479p
					; sub_67DD6770+BA6p ...

var_1C		= dword	ptr -1Ch
Memory		= dword	ptr  4
NewSize		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+NewSize]
		mov	edx, [esp+1Ch+Memory]
		test	eax, eax
		jz	short loc_67DFE6D0
		mov	[esp+1Ch+NewSize], eax ; NewSize
		mov	[esp+1Ch+Memory], edx ;	Memory
		add	esp, 1Ch
		jmp	realloc
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE6D0:				; CODE XREF: dbus_realloc+Dj
		mov	[esp+1Ch+var_1C], edx
		call	dbus_free
		xor	eax, eax
		add	esp, 1Ch
		retn
dbus_realloc	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  93. dbus_malloc0

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_malloc0(size_t)
		public dbus_malloc0
dbus_malloc0	proc near		; CODE XREF: dbus_parse_address+9Bp
					; dbus_parse_address+1F1p ...

NumOfElements	= dword	ptr -1Ch
SizeOfElements	= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		xor	eax, eax
		mov	edx, [esp+1Ch+arg_0]
		test	edx, edx
		jz	short loc_67DFE6FD
		mov	[esp+1Ch+SizeOfElements], 1 ; SizeOfElements
		mov	[esp+1Ch+NumOfElements], edx ; NumOfElements
		call	calloc

loc_67DFE6FD:				; CODE XREF: dbus_malloc0+Bj
		add	esp, 1Ch
		retn
dbus_malloc0	endp

; ---------------------------------------------------------------------------
		jmp	short dbus_malloc
; ---------------------------------------------------------------------------
		align 10h
; Exported entry  92. dbus_malloc

; =============== S U B	R O U T	I N E =======================================


; int __cdecl dbus_malloc(size_t Size)
		public dbus_malloc
dbus_malloc	proc near		; CODE XREF: dbus_parse_address+300p
					; sub_67DCC490+70p ...

Size		= dword	ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+Size]
		test	eax, eax
		jnz	short loc_67DFE720
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE720:				; CODE XREF: dbus_malloc+9j
		mov	[esp+0Ch+Size],	eax ; Size
		add	esp, 0Ch
		jmp	malloc
dbus_malloc	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFE730	proc near		; CODE XREF: sub_67DC7A30+1DEp
					; sub_67DD4800+90Dp ...

Size		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	[esp+1Ch+Size],	0Ch ; Size
		call	dbus_malloc
		mov	ebx, eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_67DFE782
		mov	eax, [esp+1Ch+arg_0]
		mov	[ebx+4], eax
		mov	eax, [esp+1Ch+arg_4]
		mov	[ebx+8], eax
		mov	eax, ds:dword_67E34D90
		mov	[esp+1Ch+Size],	eax
		call	sub_67DF1A90
		mov	eax, ds:dword_67E34564
		mov	ds:dword_67E34564, ebx
		mov	[ebx], eax
		mov	eax, ds:dword_67E34D90
		mov	[esp+1Ch+Size],	eax
		call	sub_67DF1AD0
		mov	eax, 1

loc_67DFE782:				; CODE XREF: sub_67DFE730+16j
		add	esp, 18h
		pop	ebx
		retn
sub_67DFE730	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFE790	proc near		; CODE XREF: .text:67DF9B58j
					; sub_67DF9B60+134p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, [esp+2Ch+arg_4]
		mov	edx, [ebx+0Ch]
		mov	[eax], edx
		mov	[ebx+0Ch], eax
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_mem_pool ; "_dbus_mem_pool_dealloc"
		mov	[esp+2Ch+var_20], 182h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_28 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aPoolAllocated_ ; "pool->allocated_elements > 0"
		cmp	dword ptr [ebx+14h], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+14h]
		sub	eax, 1
		test	eax, eax
		mov	[ebx+14h], eax
		setz	al
		add	esp, 28h
		movzx	eax, al
		pop	ebx
		retn
sub_67DFE790	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFE7F0	proc near		; CODE XREF: sub_67DF9F80+2Cp
					; sub_67DFBA50+5Fp

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	[esp+3Ch+var_3C], 18h ;	size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		jz	loc_67DFE8E5
		cmp	esi, 7
		jle	loc_67DFE900
		add	esi, 3
		and	esi, 0FFFFFFFCh
		lea	edi, ds:0[esi*8]
		mov	edx, edi
		mov	eax, edi
		sar	edx, 1Fh
		idiv	esi
		test	edx, edx
		setz	al
		movzx	ebp, al

loc_67DFE844:				; CODE XREF: sub_67DFE7F0+11Fj
		mov	[esp+3Ch+var_2C], offset a_dbus_mem_po_0 ; "_dbus_mem_pool_new"
		mov	[esp+3Ch+var_30], 99h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_28 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aElement_sizeIn ; "element_size >= (int) sizeof (void*)"
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_mem_po_0 ; "_dbus_mem_pool_new"
		mov	[esp+3Ch+var_30], 9Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32_28 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aElement_size_0 ; "element_size >= (int) sizeof (DBusFreed"...
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_4]
		mov	[ebx], esi
		mov	dword ptr [ebx+14h], 0
		mov	[ebx+4], edi
		test	eax, eax
		movzx	eax, byte ptr [ebx+8]
		setnz	dl
		mov	[esp+3Ch+var_2C], offset a_dbus_mem_po_0 ; "_dbus_mem_pool_new"
		mov	[esp+3Ch+var_30], 0ADh
		and	eax, 0FFFFFFFEh
		or	eax, edx
		mov	[ebx+8], al
		mov	[esp+3Ch+var_34], offset aRBuildWin32_28 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aPoolBlock_size ; "(pool->block_size %	pool->element_size)"...
		mov	[esp+3Ch+var_3C], ebp
		call	sub_67DFAE70

loc_67DFE8E5:				; CODE XREF: sub_67DFE7F0+27j
		mov	eax, ebx
		mov	esi, [esp+3Ch+var_C]
		mov	ebx, [esp+3Ch+var_10]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE900:				; CODE XREF: sub_67DFE7F0+30j
		mov	ebp, 1
		mov	edi, 40h
		mov	esi, 8
		jmp	loc_67DFE844
sub_67DFE7F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFE920	proc near		; CODE XREF: .text:67DF9EF1j
					; sub_67DF9F00+3Fp ...

Dst		= dword	ptr -2Ch
Val		= dword	ptr -28h
Size		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_4], esi
		mov	esi, [ebx+0Ch]
		test	esi, esi
		jz	short loc_67DFE970
		mov	eax, [esi]
		test	byte ptr [ebx+8], 1
		mov	[ebx+0Ch], eax
		jz	short loc_67DFE957
		mov	eax, [ebx]
		mov	[esp+2Ch+Val], 0 ; Val
		mov	[esp+2Ch+Dst], esi ; Dst
		mov	[esp+2Ch+Size],	eax ; Size
		call	memset

loc_67DFE957:				; CODE XREF: sub_67DFE920+1Fj
		add	dword ptr [ebx+14h], 1
		mov	eax, esi

loc_67DFE95D:				; CODE XREF: sub_67DFE920+9Aj
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFE970:				; CODE XREF: sub_67DFE920+14j
		mov	edx, [ebx+10h]
		test	edx, edx
		jz	short loc_67DFE998
		mov	ecx, [edx+4]
		cmp	ecx, [ebx+4]
		jz	short loc_67DFE99B

loc_67DFE97F:				; CODE XREF: sub_67DFE920+ADj
		lea	eax, [edx+ecx+8]
		add	ecx, [ebx]
		add	dword ptr [ebx+14h], 1
		mov	[edx+4], ecx
		mov	ebx, [esp+2Ch+var_8]
		mov	esi, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67DFE998:				; CODE XREF: sub_67DFE920+55j
		mov	ecx, [ebx+4]

loc_67DFE99B:				; CODE XREF: sub_67DFE920+5Dj
		cmp	ecx, 1FFFFFFFh
		jle	short loc_67DFE9DB

loc_67DFE9A3:				; CODE XREF: sub_67DFE920+FAj
		add	ecx, 8
		test	byte ptr [ebx+8], 1
		jz	short loc_67DFE9CF
		mov	[esp+2Ch+Dst], ecx ; size_t
		call	dbus_malloc0
		mov	edx, eax

loc_67DFE9B6:				; CODE XREF: sub_67DFE920+B9j
		xor	eax, eax
		test	edx, edx
		jz	short loc_67DFE95D
		mov	eax, [ebx+10h]
		xor	ecx, ecx
		mov	dword ptr [edx+4], 0
		mov	[edx], eax
		mov	[ebx+10h], edx
		jmp	short loc_67DFE97F
; ---------------------------------------------------------------------------

loc_67DFE9CF:				; CODE XREF: sub_67DFE920+8Aj
		mov	[esp+2Ch+Dst], ecx ; Size
		call	dbus_malloc
		mov	edx, eax
		jmp	short loc_67DFE9B6
; ---------------------------------------------------------------------------

loc_67DFE9DB:				; CODE XREF: sub_67DFE920+81j
		lea	edx, [ecx+ecx]
		mov	[ebx+4], edx
		mov	eax, edx
		mov	[esp+2Ch+var_1C], offset a_dbus_mem_po_1 ; "_dbus_mem_pool_alloc"
		sar	edx, 1Fh
		mov	[esp+2Ch+var_20], 11Bh
		mov	[esp+2Ch+Size],	offset aRBuildWin32_28 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Val], offset aPoolBlock_size ;	"(pool->block_size % pool->element_size)"...
		idiv	dword ptr [ebx]
		xor	eax, eax
		test	edx, edx
		setz	al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	ecx, [ebx+4]
		jmp	short loc_67DFE9A3
sub_67DFE920	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFEA20	proc near		; CODE XREF: sub_67DFA0D0+64p
					; sub_67DFBA50+83p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_0]
		mov	eax, [esi+10h]
		test	eax, eax
		jz	short loc_67DFEA40

loc_67DFEA30:				; CODE XREF: sub_67DFEA20+1Ej
		mov	ebx, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	dbus_free
		test	ebx, ebx
		mov	eax, ebx
		jnz	short loc_67DFEA30

loc_67DFEA40:				; CODE XREF: sub_67DFEA20+Ej
		mov	[esp+1Ch+arg_0], esi
		add	esp, 14h
		pop	ebx
		pop	esi
		jmp	dbus_free
sub_67DFEA20	endp

; ---------------------------------------------------------------------------
		align 10h
		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+30h]
		mov	edi, [esp+34h]
		mov	esi, [esp+38h]
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		test	ebx, ebx
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+0Ch], 0AFBh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealNull ; "(real) != NULL"
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFBh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFBh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLen0 ; "(real)->len >= 0"
		mov	edx, [ebx+4]
		not	edx
		shr	edx, 1Fh
		mov	[esp], edx
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFBh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	edx, [ebx+8]
		not	edx
		shr	edx, 1Fh
		mov	[esp], edx
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFBh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealMax_length ; "(real)->max_length	>= 0"
		mov	edx, [ebx+0Ch]
		not	edx
		shr	edx, 1Fh
		mov	[esp], edx
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFBh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLenRealAll ; "(real)->len <= ((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFBh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLenRealMax ; "(real)->len <= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFBh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealConstant	; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFBh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLocked ;	"!(real)->locked"
		movzx	edx, byte ptr [ebx+10h]
		shr	dl, 1
		xor	edx, 1
		and	edx, 1
		mov	[esp], edx
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFCh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStart0_2 ; "start >=	0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFDh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStartRealLen	; "start <= real->len"
		cmp	[ebx+4], edi
		setnl	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFEh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLen0_2 ; "len >= 0"
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_47 ; "_dbus_string_toupper_ascii"
		mov	dword ptr [esp+0Ch], 0AFFh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLenRealLenStar ; "len <= real->len -	start"
		mov	eax, [ebx+4]
		sub	eax, edi
		cmp	eax, esi
		setnl	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		add	eax, edi
		lea	ebx, [eax+esi]
		cmp	eax, ebx
		jz	short loc_67DFED0C

loc_67DFECF5:				; CODE XREF: .text:67DFED0Aj
		movzx	edx, byte ptr [eax]
		lea	ecx, [edx-61h]
		cmp	cl, 19h
		ja	short loc_67DFED05
		sub	edx, 20h
		mov	[eax], dl

loc_67DFED05:				; CODE XREF: .text:67DFECFEj
		add	eax, 1
		cmp	ebx, eax
		jnz	short loc_67DFECF5

loc_67DFED0C:				; CODE XREF: .text:67DFECF3j
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFED20	proc near		; CODE XREF: sub_67E0B480+73p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 0ADCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	edx, [ebx+4]
		not	edx
		shr	edx, 1Fh
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	edx, [ebx+8]
		not	edx
		shr	edx, 1Fh
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	edx, [ebx+0Ch]
		not	edx
		shr	edx, 1Fh
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLocked ; "!(real)->locked"
		movzx	edx, byte ptr [ebx+10h]
		shr	dl, 1
		xor	edx, 1
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart0_2 ; "start >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStartRealLen ; "start	<= real->len"
		cmp	[ebx+4], edi
		setnl	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0ADFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen0_2 ; "len	>= 0"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_t ; "_dbus_string_tolower_ascii"
		mov	[esp+2Ch+var_20], 0AE0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLenRealLenStar ; "len	<= real->len - start"
		mov	eax, [ebx+4]
		sub	eax, edi
		cmp	eax, esi
		setnl	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		add	eax, edi
		lea	ebx, [eax+esi]
		cmp	eax, ebx
		jz	short loc_67DFEFDC

loc_67DFEFC5:				; CODE XREF: sub_67DFED20+2BAj
		movzx	edx, byte ptr [eax]
		lea	ecx, [edx-41h]
		cmp	cl, 19h
		ja	short loc_67DFEFD5
		add	edx, 20h
		mov	[eax], dl

loc_67DFEFD5:				; CODE XREF: sub_67DFED20+2AEj
		add	eax, 1
		cmp	ebx, eax
		jnz	short loc_67DFEFC5

loc_67DFEFDC:				; CODE XREF: sub_67DFED20+2A3j
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DFED20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFEFF0	proc near		; CODE XREF: dbus_address_entry_get_value+8Bp
					; sub_67DC4660+39Dp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_string_e ; "_dbus_string_equal_c_str"
		mov	[esp+2Ch+var_20], 98Eh
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aNull ; "(real_a) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_e ; "_dbus_string_equal_c_str"
		mov	[esp+2Ch+var_20], 98Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aInvalid	; "!(real_a)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_e ; "_dbus_string_equal_c_str"
		mov	[esp+2Ch+var_20], 98Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aLen0 ; "(real_a)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_e ; "_dbus_string_equal_c_str"
		mov	[esp+2Ch+var_20], 98Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aAllocate ; "(real_a)->allocated	>= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_e ; "_dbus_string_equal_c_str"
		mov	[esp+2Ch+var_20], 98Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aMax_leng ; "(real_a)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_e ; "_dbus_string_equal_c_str"
		mov	[esp+2Ch+var_20], 98Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aLenReal_ ; "(real_a)->len <= ((real_a)->allocated -"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_e ; "_dbus_string_equal_c_str"
		mov	[esp+2Ch+var_20], 98Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aLenRea_0 ; "(real_a)->len <= (real_a)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_e ; "_dbus_string_equal_c_str"
		mov	[esp+2Ch+var_20], 98Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aC_strNull ; "c_str !=	NULL"
		call	sub_67DFAE70
		mov	eax, [ebx]
		mov	edx, esi
		mov	ebx, [ebx+4]
		lea	ebx, [eax+ebx]
		cmp	eax, ebx
		jnz	short loc_67DFF1AE
		jmp	short loc_67DFF1C0
; ---------------------------------------------------------------------------
		align 10h

loc_67DFF1A0:				; CODE XREF: sub_67DFEFF0+1C3j
		cmp	cl, [eax]
		jnz	short loc_67DFF1B5
		add	eax, 1
		add	edx, 1
		cmp	ebx, eax
		jz	short loc_67DFF1C0

loc_67DFF1AE:				; CODE XREF: sub_67DFEFF0+1A7j
		movzx	ecx, byte ptr [edx]
		test	cl, cl
		jnz	short loc_67DFF1A0

loc_67DFF1B5:				; CODE XREF: sub_67DFEFF0+1B2j
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFF1C0:				; CODE XREF: sub_67DFEFF0+1A9j
					; sub_67DFEFF0+1BCj
		xor	eax, eax
		cmp	byte ptr [edx],	0
		setz	al
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67DFEFF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFF1D0	proc near		; CODE XREF: sub_67DD94B0+E00p
					; sub_67DD94B0+E4Ep ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+3Ch+arg_0]
		mov	ebx, [esp+3Ch+arg_C]
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		test	esi, esi
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_30], 962h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_aNull ; "(real_a) != NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 962h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_aInvalid	; "!(real_a)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 962h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_aLen0 ; "(real_a)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 962h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_aAllocate ; "(real_a)->allocated	>= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 962h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_aMax_leng ; "(real_a)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 962h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_aLenReal_ ; "(real_a)->len <= ((real_a)->allocated -"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 962h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_aLenRea_0 ; "(real_a)->len <= (real_a)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 963h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_bNull ; "(real_b) != NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 963h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_bInvalid	; "!(real_b)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 963h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_bLen0 ; "(real_b)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 963h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_bAllocate ; "(real_b)->allocated	>= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 963h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_bMax_leng ; "(real_b)->max_length >= 0"
		mov	edx, [ebx+0Ch]
		not	edx
		shr	edx, 1Fh
		mov	[esp+3Ch+var_3C], edx
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 963h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_bLenReal_ ; "(real_b)->len <= ((real_b)->allocated -"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 963h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aReal_bLenRea_0 ; "(real_b)->len <= (real_b)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 964h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_38], offset aA_start0 ; "a_start >= 0"
		call	sub_67DFAE70
		mov	eax, ebp
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 965h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aA_len0 ; "a_len >= 0"
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 966h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aA_startReal_aL ; "a_start <= real_a->len"
		cmp	[esi+4], eax
		setnl	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 967h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aA_lenReal_aLen ; "a_len <= real_a->len - a_start"
		mov	eax, [esi+4]
		sub	eax, [esp+3Ch+arg_4]
		cmp	eax, ebp
		setnl	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 968h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_38], offset aB_start0 ; "b_start >= 0"
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 969h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aB_startReal_bL ; "b_start <= real_b->len"
		cmp	[ebx+4], eax
		setnl	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	edi, [ebx+4]
		mov	eax, edi
		sub	eax, [esp+3Ch+arg_10]
		cmp	ebp, eax
		jg	short loc_67DFF609
		mov	eax, [esp+3Ch+arg_4]
		add	eax, [esi]
		mov	edx, [esp+3Ch+arg_10]
		mov	esi, [ebx]
		lea	ebx, [eax+ebp]
		cmp	eax, ebx
		lea	edx, [esi+edx]
		jnz	short loc_67DFF602
		jmp	short loc_67DFF613
; ---------------------------------------------------------------------------

loc_67DFF5F8:				; CODE XREF: sub_67DFF1D0+437j
		add	eax, 1
		add	edx, 1
		cmp	ebx, eax
		jz	short loc_67DFF613

loc_67DFF602:				; CODE XREF: sub_67DFF1D0+424j
		movzx	ecx, byte ptr [eax]
		cmp	cl, [edx]
		jz	short loc_67DFF5F8

loc_67DFF609:				; CODE XREF: sub_67DFF1D0+40Ej
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DFF613:				; CODE XREF: sub_67DFF1D0+426j
					; sub_67DFF1D0+430j
		add	esi, edi
		xor	eax, eax
		cmp	edx, esi
		setbe	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_string_6 ; "_dbus_string_equal_substring"
		mov	[esp+3Ch+var_30], 97Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aBpReal_bStrRea ; "bp <= (real_b->str + real_b->len)"
		call	sub_67DFAE70
		add	esp, 2Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67DFF1D0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67DFF660
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFF660	proc near		; CODE XREF: sub_67DE7F60+18Dp
					; .text:67DFF651j

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		test	esi, esi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 930h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aNull ; "(real_a) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 930h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aInvalid	; "!(real_a)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 930h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aLen0 ; "(real_a)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 930h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aAllocate ; "(real_a)->allocated	>= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 930h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aMax_leng ; "(real_a)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 930h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aLenReal_ ; "(real_a)->len <= ((real_a)->allocated -"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 930h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aLenRea_0 ; "(real_a)->len <= (real_a)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 931h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bNull ; "(real_b) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 931h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bInvalid	; "!(real_b)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 931h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bLen0 ; "(real_b)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 931h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bAllocate ; "(real_b)->allocated	>= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 931h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bMax_leng ; "(real_b)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 931h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bLenReal_ ; "(real_b)->len <= ((real_b)->allocated -"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_40 ; "_dbus_string_equal_len"
		mov	[esp+2Ch+var_20], 931h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bLenRea_0 ; "(real_b)->len <= (real_b)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	ecx, [esi+4]
		mov	eax, [ebx+4]
		cmp	ecx, eax
		jz	short loc_67DFF942
		cmp	ecx, edi
		jl	short loc_67DFF964
		cmp	eax, edi
		jl	short loc_67DFF964

loc_67DFF942:				; CODE XREF: sub_67DFF660+2D8j
		cmp	edi, ecx
		mov	eax, [esi]
		mov	edx, [ebx]
		jg	short loc_67DFF970

loc_67DFF94A:				; CODE XREF: sub_67DFF660+312j
		lea	ebx, [eax+edi]
		cmp	eax, ebx
		jnz	short loc_67DFF95D
		jmp	short loc_67DFF974
; ---------------------------------------------------------------------------

loc_67DFF953:				; CODE XREF: sub_67DFF660+302j
		add	eax, 1
		cmp	ebx, eax
		jz	short loc_67DFF974
		add	edx, 1

loc_67DFF95D:				; CODE XREF: sub_67DFF660+2EFj
		movzx	ecx, byte ptr [eax]
		cmp	cl, [edx]
		jz	short loc_67DFF953

loc_67DFF964:				; CODE XREF: sub_67DFF660+2DCj
					; sub_67DFF660+2E0j
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFF970:				; CODE XREF: sub_67DFF660+2E8j
		mov	edi, ecx
		jmp	short loc_67DFF94A
; ---------------------------------------------------------------------------

loc_67DFF974:				; CODE XREF: sub_67DFF660+2F1j
					; sub_67DFF660+2F8j
		add	esp, 20h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67DFF660	endp


; =============== S U B	R O U T	I N E =======================================


sub_67DFF980	proc near		; CODE XREF: sub_67DC39B0+6DDp
					; dbus_error_has_name+DFp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 904h
		test	esi, esi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aNull ; "(real_a) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 904h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aInvalid	; "!(real_a)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 904h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aLen0 ; "(real_a)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 904h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aAllocate ; "(real_a)->allocated	>= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 904h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aMax_leng ; "(real_a)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 904h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aLenReal_ ; "(real_a)->len <= ((real_a)->allocated -"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 904h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_aLenRea_0 ; "(real_a)->len <= (real_a)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 905h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bNull ; "(real_b) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 905h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bInvalid	; "!(real_b)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 905h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bLen0 ; "(real_b)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 905h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bAllocate ; "(real_b)->allocated	>= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 905h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bMax_leng ; "(real_b)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 905h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bLenReal_ ; "(real_b)->len <= ((real_b)->allocated -"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_7 ; "_dbus_string_equal"
		mov	[esp+2Ch+var_20], 905h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aReal_bLenRea_0 ; "(real_b)->len <= (real_b)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	ecx, [esi+4]
		cmp	ecx, [ebx+4]
		jz	short loc_67DFFC60

loc_67DFFC53:				; CODE XREF: sub_67DFF980+301j
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67DFFC60:				; CODE XREF: sub_67DFF980+2D1j
		mov	eax, [esi]
		mov	edx, [ebx]
		lea	ebx, [eax+ecx]
		cmp	eax, ebx
		jnz	short loc_67DFFC7A
		jmp	short loc_67DFFC83
; ---------------------------------------------------------------------------
		align 10h

loc_67DFFC70:				; CODE XREF: sub_67DFF980+2FFj
		add	eax, 1
		cmp	ebx, eax
		jz	short loc_67DFFC83
		add	edx, 1

loc_67DFFC7A:				; CODE XREF: sub_67DFF980+2E9j
		movzx	ecx, byte ptr [eax]
		cmp	cl, [edx]
		jz	short loc_67DFFC70
		jmp	short loc_67DFFC53
; ---------------------------------------------------------------------------

loc_67DFFC83:				; CODE XREF: sub_67DFF980+2EBj
					; sub_67DFF980+2F5j
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
sub_67DFF980	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67DFFC90	proc near		; CODE XREF: sub_67E07400+4F6p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+3Ch+arg_0]
		mov	edi, [esp+3Ch+arg_4]
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_46 ; "_dbus_string_skip_white_reverse"
		test	esi, esi
		setnz	al
		mov	ebx, edi
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_30], 872h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_46 ; "_dbus_string_skip_white_reverse"
		mov	[esp+3Ch+var_30], 872h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_46 ; "_dbus_string_skip_white_reverse"
		mov	[esp+3Ch+var_30], 872h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_46 ; "_dbus_string_skip_white_reverse"
		mov	[esp+3Ch+var_30], 872h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_46 ; "_dbus_string_skip_white_reverse"
		mov	[esp+3Ch+var_30], 872h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_46 ; "_dbus_string_skip_white_reverse"
		mov	[esp+3Ch+var_30], 872h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_46 ; "_dbus_string_skip_white_reverse"
		mov	[esp+3Ch+var_30], 872h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_46 ; "_dbus_string_skip_white_reverse"
		mov	[esp+3Ch+var_30], 873h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aEndRealLen ; "end <= real->len"
		cmp	[esi+4], edi
		setnl	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_46 ; "_dbus_string_skip_white_reverse"
		mov	[esp+3Ch+var_30], 874h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aEnd0 ; "end >= 0"
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		test	edi, edi
		jle	short loc_67DFFE8E
		mov	ecx, [esi]
		lea	edx, [ecx+edi]
		lea	esi, [esi+0]

loc_67DFFE70:				; CODE XREF: sub_67DFFC90+1FCj
		movzx	eax, byte ptr [edx-1]
		cmp	al, 9
		jz	short loc_67DFFE84
		cmp	al, 20h
		jz	short loc_67DFFE84
		cmp	al, 0Ah
		jz	short loc_67DFFE84
		cmp	al, 0Dh
		jnz	short loc_67DFFEA0

loc_67DFFE84:				; CODE XREF: sub_67DFFC90+1E6j
					; sub_67DFFC90+1EAj ...
		sub	ebx, 1
		sub	edx, 1
		test	ebx, ebx
		jg	short loc_67DFFE70

loc_67DFFE8E:				; CODE XREF: sub_67DFFC90+1D5j
		test	ebx, ebx
		jnz	short loc_67DFFEAD

loc_67DFFE92:				; CODE XREF: sub_67DFFC90+212j
					; sub_67DFFC90+260j
		mov	eax, 1
		jmp	short loc_67DFFEAF
; ---------------------------------------------------------------------------
		align 10h

loc_67DFFEA0:				; CODE XREF: sub_67DFFC90+1F2j
		test	ebx, ebx
		jz	short loc_67DFFE92
		movzx	eax, byte ptr [ecx+ebx-1]
		cmp	al, 9
		jnz	short loc_67DFFEE6

loc_67DFFEAD:				; CODE XREF: sub_67DFFC90+200j
					; sub_67DFFC90+258j ...
		xor	eax, eax

loc_67DFFEAF:				; CODE XREF: sub_67DFFC90+207j
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_46 ; "_dbus_string_skip_white_reverse"
		mov	[esp+3Ch+var_30], 87Eh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aI0I0Dbus_is_as ; "i >= 0 && (i == 0 || !(DBUS_IS_ASCII_WH"...
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		test	ebp, ebp
		jz	short loc_67DFFEDE
		mov	[ebp+0], ebx

loc_67DFFEDE:				; CODE XREF: sub_67DFFC90+249j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67DFFEE6:				; CODE XREF: sub_67DFFC90+21Bj
		cmp	al, 20h
		jz	short loc_67DFFEAD
		cmp	al, 0Ah
		jz	short loc_67DFFEAD
		cmp	al, 0Dh
		jnz	short loc_67DFFE92
		jmp	short loc_67DFFEAD
sub_67DFFC90	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+40h]
		mov	edi, [esp+44h]
		mov	ebp, [esp+48h]
		mov	dword ptr [esp+10h], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		test	esi, esi
		setnz	al
		mov	ebx, edi
		mov	[esp], eax
		mov	dword ptr [esp+0Ch], 851h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealNull ; "(real) != NULL"
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	dword ptr [esp+0Ch], 851h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	dword ptr [esp+0Ch], 851h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	dword ptr [esp+0Ch], 851h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	dword ptr [esp+0Ch], 851h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealMax_length ; "(real)->max_length	>= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	dword ptr [esp+0Ch], 851h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLenRealAll ; "(real)->len <= ((real)->allocated - _DB"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	dword ptr [esp+0Ch], 851h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLenRealMax ; "(real)->len <= (real)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	dword ptr [esp+0Ch], 852h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStartRealLen	; "start <= real->len"
		cmp	[esi+4], edi
		setnl	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	dword ptr [esp+10h], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	dword ptr [esp+0Ch], 853h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStart0_2 ; "start >=	0"
		mov	[esp], eax
		call	sub_67DFAE70
		mov	ecx, [esi+4]
		cmp	edi, ecx
		jge	short loc_67E000FD
		mov	edx, [esi]
		add	edx, edi
		xchg	ax, ax

loc_67E000E0:				; CODE XREF: .text:67E000FBj
		movzx	eax, byte ptr [edx]
		cmp	al, 9
		jz	short loc_67E000F3
		cmp	al, 20h
		jz	short loc_67E000F3
		cmp	al, 0Ah
		jz	short loc_67E000F3
		cmp	al, 0Dh
		jnz	short loc_67E00155

loc_67E000F3:				; CODE XREF: .text:67E000E5j
					; .text:67E000E9j ...
		add	ebx, 1
		add	edx, 1
		cmp	ebx, ecx
		jl	short loc_67E000E0

loc_67E000FD:				; CODE XREF: .text:67E000D8j
		cmp	ecx, ebx
		mov	eax, 1
		jz	short loc_67E00112
		mov	eax, [esi]
		movzx	eax, byte ptr [eax+ebx]
		cmp	al, 9
		jnz	short loc_67E00149

loc_67E00110:				; CODE XREF: .text:67E0014Bj
					; .text:67E0014Fj ...
		xor	eax, eax

loc_67E00112:				; CODE XREF: .text:67E00104j
					; .text:67E0015Aj
		mov	dword ptr [esp+10h], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	dword ptr [esp+0Ch], 85Eh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aIRealLenDbus_0 ; "i == real->len || !(DBUS_IS_ASCII_WHITE"...
		mov	[esp], eax
		call	sub_67DFAE70
		test	ebp, ebp
		jz	short loc_67E00141
		mov	[ebp+0], ebx

loc_67E00141:				; CODE XREF: .text:67E0013Cj
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E00149:				; CODE XREF: .text:67E0010Ej
		cmp	al, 20h
		jz	short loc_67E00110
		cmp	al, 0Ah
		jz	short loc_67E00110
		cmp	al, 0Dh
		jz	short loc_67E00110

loc_67E00155:				; CODE XREF: .text:67E000F1j
		mov	eax, 1
		jmp	short loc_67E00112
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E00160	proc near		; CODE XREF: sub_67DC3290+109p
					; sub_67DC3290+1EFp ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+3Ch+arg_0]
		mov	edi, [esp+3Ch+arg_4]
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset a_dbus_string_s ; "_dbus_string_skip_blank"
		test	esi, esi
		setnz	al
		mov	ebx, edi
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_30], 82Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_s ; "_dbus_string_skip_blank"
		mov	[esp+3Ch+var_30], 82Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_s ; "_dbus_string_skip_blank"
		mov	[esp+3Ch+var_30], 82Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_s ; "_dbus_string_skip_blank"
		mov	[esp+3Ch+var_30], 82Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_s ; "_dbus_string_skip_blank"
		mov	[esp+3Ch+var_30], 82Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_s ; "_dbus_string_skip_blank"
		mov	[esp+3Ch+var_30], 82Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_s ; "_dbus_string_skip_blank"
		mov	[esp+3Ch+var_30], 82Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_string_s ; "_dbus_string_skip_blank"
		mov	[esp+3Ch+var_30], 830h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStartRealLen ; "start	<= real->len"
		cmp	[esi+4], edi
		setnl	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_2C], offset a_dbus_string_s ; "_dbus_string_skip_blank"
		mov	[esp+3Ch+var_30], 831h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStart0_2 ; "start >= 0"
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	ecx, [esi+4]
		cmp	edi, ecx
		jge	short loc_67E00363
		mov	eax, [esi]
		add	eax, edi
		movzx	edx, byte ptr [eax]
		cmp	dl, 9
		jnz	loc_67E003D2

loc_67E0034A:				; CODE XREF: sub_67E00160+275j
		mov	ebx, edi
		jmp	short loc_67E0035C
; ---------------------------------------------------------------------------
		align 10h

loc_67E00350:				; CODE XREF: sub_67E00160+201j
		movzx	edx, byte ptr [eax+1]
		add	eax, 1
		cmp	dl, 9
		jnz	short loc_67E003B8

loc_67E0035C:				; CODE XREF: sub_67E00160+1ECj
					; sub_67E00160+25Bj
		add	ebx, 1
		cmp	ebx, ecx
		jl	short loc_67E00350

loc_67E00363:				; CODE XREF: sub_67E00160+1D8j
		cmp	ecx, ebx
		mov	eax, 1
		jnz	short loc_67E003A3

loc_67E0036C:				; CODE XREF: sub_67E00160+256j
					; sub_67E00160+26Aj ...
		mov	[esp+3Ch+var_2C], offset a_dbus_string_s ; "_dbus_string_skip_blank"
		mov	[esp+3Ch+var_30], 83Ch
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aIRealLenDbus_i ; "i == real->len || !DBUS_IS_ASCII_WHITE "...
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		test	ebp, ebp
		jz	short loc_67E0039B
		mov	[ebp+0], ebx

loc_67E0039B:				; CODE XREF: sub_67E00160+236j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E003A3:				; CODE XREF: sub_67E00160+20Aj
		mov	eax, [esi]
		movzx	edx, byte ptr [eax+ebx]
		cmp	dl, 20h
		setnz	al
		cmp	dl, 9
		jnz	short loc_67E003E2

loc_67E003B4:				; CODE XREF: sub_67E00160+260j
		xor	eax, eax
		jmp	short loc_67E0036C
; ---------------------------------------------------------------------------

loc_67E003B8:				; CODE XREF: sub_67E00160+1FAj
		cmp	dl, 20h
		jz	short loc_67E0035C

loc_67E003BD:				; CODE XREF: sub_67E00160+280j
					; sub_67E00160+284j
		cmp	dl, 0Ah
		jz	short loc_67E003B4
		cmp	dl, 0Dh
		mov	eax, 1
		jnz	short loc_67E0036C
		xor	eax, eax
		xchg	ax, ax
		jmp	short loc_67E0036C
; ---------------------------------------------------------------------------

loc_67E003D2:				; CODE XREF: sub_67E00160+1E4j
		cmp	dl, 20h
		jz	loc_67E0034A
		mov	ebx, edi
		lea	esi, [esi+0]
		jmp	short loc_67E003BD
; ---------------------------------------------------------------------------

loc_67E003E2:				; CODE XREF: sub_67E00160+252j
		test	al, al
		jnz	short loc_67E003BD
		xor	eax, eax
		jmp	short loc_67E0036C
sub_67E00160	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E003F0	proc near		; CODE XREF: sub_67DC3290+46p
					; sub_67DC3290+127p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		mov	ebp, [esp+3Ch+arg_4]
		mov	edi, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset a_dbus_string_f ; "_dbus_string_find_blank"
		test	ebx, ebx
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_30], 809h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_f ; "_dbus_string_find_blank"
		mov	[esp+3Ch+var_30], 809h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_f ; "_dbus_string_find_blank"
		mov	[esp+3Ch+var_30], 809h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_f ; "_dbus_string_find_blank"
		mov	[esp+3Ch+var_30], 809h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_f ; "_dbus_string_find_blank"
		mov	[esp+3Ch+var_30], 809h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_f ; "_dbus_string_find_blank"
		mov	[esp+3Ch+var_30], 809h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_f ; "_dbus_string_find_blank"
		mov	[esp+3Ch+var_30], 809h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_string_f ; "_dbus_string_find_blank"
		mov	[esp+3Ch+var_30], 80Ah
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStartRealLen ; "start	<= real->len"
		cmp	[ebx+4], ebp
		setnl	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, ebp
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_2C], offset a_dbus_string_f ; "_dbus_string_find_blank"
		mov	[esp+3Ch+var_30], 80Bh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStart0_2 ; "start >= 0"
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	esi, [ebx+4]
		cmp	ebp, esi
		jge	short loc_67E005F9
		mov	eax, [ebx]
		add	eax, ebp
		movzx	ecx, byte ptr [eax]
		cmp	cl, 9
		jz	short loc_67E00609
		cmp	cl, 20h
		mov	edx, ebp
		jnz	short loc_67E005F2
		jmp	short loc_67E00609
; ---------------------------------------------------------------------------
		align 10h

loc_67E005E0:				; CODE XREF: sub_67E003F0+207j
		movzx	ecx, byte ptr [eax+1]
		add	eax, 1
		cmp	cl, 9
		jz	short loc_67E00610
		cmp	cl, 20h
		nop
		jz	short loc_67E00610

loc_67E005F2:				; CODE XREF: sub_67E003F0+1E9j
		add	edx, 1
		cmp	edx, esi
		jl	short loc_67E005E0

loc_67E005F9:				; CODE XREF: sub_67E003F0+1D6j
		xor	eax, eax
		test	edi, edi
		jz	short loc_67E00601
		mov	[edi], esi

loc_67E00601:				; CODE XREF: sub_67E003F0+20Dj
					; sub_67E003F0+227j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E00609:				; CODE XREF: sub_67E003F0+1E2j
					; sub_67E003F0+1EBj
		mov	edx, ebp
		nop
		lea	esi, [esi+0]

loc_67E00610:				; CODE XREF: sub_67E003F0+1FAj
					; sub_67E003F0+200j
		test	edi, edi
		mov	eax, 1
		jz	short loc_67E00601
		mov	[edi], edx
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E003F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E00630	proc near		; CODE XREF: dbus_parse_address+115p
					; dbus_parse_address+192p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [esp+4Ch+arg_0]
		mov	ebx, [esp+4Ch+arg_4]
		mov	ebp, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		test	esi, esi
		setnz	al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_40], 7C7h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7C7h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7C7h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7C7h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7C7h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7C7h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7C7h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	edi, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7C8h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	edi, edi
		setnz	al
		movzx	edi, al
		mov	[esp+4Ch+var_48], offset aSubstrNull ; "substr != NULL"
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7C9h
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStartRealLen ; "start	<= real->len"
		cmp	[esi+4], ebx
		setnl	al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7CAh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStart0_2 ; "start >= 0"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7CBh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aSubstrNull ; "substr != NULL"
		mov	[esp+4Ch+var_4C], edi
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7CCh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aEndRealLen ; "end <= real->len"
		cmp	[esi+4], ebp
		setnl	al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		xor	eax, eax
		cmp	ebx, ebp
		setle	al
		mov	[esp+4Ch+var_4C], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	[esp+4Ch+var_40], 7CDh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+var_48], offset aStartEnd ; "start <= end"
		call	sub_67DFAE70
		mov	edx, [esp+4Ch+arg_C]
		movzx	eax, byte ptr [edx]
		test	al, al
		jz	loc_67E00990
		cmp	ebx, ebp
		jge	loc_67E009B0
		mov	esi, [esi]
		movsx	eax, al
		mov	edi, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_20], eax
		add	esi, ebx
		mov	[esp+4Ch+var_2C], esi
		sub	edi, ebx
		lea	esi, [ebx+1]
		jmp	short loc_67E00905
; ---------------------------------------------------------------------------
		align 10h

loc_67E008F0:				; CODE XREF: sub_67E00630+2EBj
					; sub_67E00630+33Aj
		add	[esp+4Ch+var_2C], 1
		add	esi, 1
		sub	edi, 1
		cmp	ebp, [esp+4Ch+var_28]
		jle	loc_67E009B0

loc_67E00905:				; CODE XREF: sub_67E00630+2BBj
					; sub_67E00630+3ABj
		lea	edx, [esi-1]
		mov	[esp+4Ch+var_24], edx
		mov	edx, [esp+4Ch+var_2C]
		movzx	eax, byte ptr [edx]
		cmp	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_28], esi
		jnz	short loc_67E008F0
		cmp	ebp, esi
		mov	eax, esi
		jle	short loc_67E0095E
		mov	eax, [esp+4Ch+arg_C]
		movzx	ecx, byte ptr [eax+1]
		test	cl, cl
		jz	short loc_67E00970
		movzx	ebx, byte ptr [edx+1]
		movsx	ecx, cl
		mov	eax, esi
		cmp	ebx, ecx
		jz	short loc_67E00957
		jmp	loc_67E009D0
; ---------------------------------------------------------------------------

loc_67E00941:				; CODE XREF: sub_67E00630+32Cj
		movzx	ecx, byte ptr [edi+eax]
		test	cl, cl
		jz	short loc_67E00970
		movzx	ebx, byte ptr [edx+2]
		movsx	ecx, cl
		add	edx, 1
		cmp	ebx, ecx
		jnz	short loc_67E009D0

loc_67E00957:				; CODE XREF: sub_67E00630+30Aj
		add	eax, 1
		cmp	ebp, eax
		jg	short loc_67E00941

loc_67E0095E:				; CODE XREF: sub_67E00630+2F1j
		mov	edx, [esp+4Ch+arg_C]
		sub	eax, [esp+4Ch+var_24]
		cmp	byte ptr [edx+eax], 0
		jnz	short loc_67E008F0
		lea	esi, [esi+0]

loc_67E00970:				; CODE XREF: sub_67E00630+2FDj
					; sub_67E00630+317j
		mov	ecx, [esp+4Ch+arg_10]
		test	ecx, ecx
		jz	short loc_67E009E0
		mov	eax, [esp+4Ch+arg_10]
		mov	edx, [esp+4Ch+var_24]
		mov	[eax], edx
		mov	eax, 1
		jmp	short loc_67E009A3
; ---------------------------------------------------------------------------
		align 10h

loc_67E00990:				; CODE XREF: sub_67E00630+295j
		mov	esi, [esp+4Ch+arg_10]
		test	esi, esi
		jz	short loc_67E009E0
		mov	eax, [esp+4Ch+arg_10]
		mov	[eax], ebx
		mov	eax, 1

loc_67E009A3:				; CODE XREF: sub_67E00630+357j
					; sub_67E00630+388j ...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E009B0:				; CODE XREF: sub_67E00630+29Dj
					; sub_67E00630+2CFj
		mov	edx, [esp+4Ch+arg_10]
		xor	eax, eax
		test	edx, edx
		jz	short loc_67E009A3
		mov	eax, [esp+4Ch+arg_10]
		mov	[eax], ebp
		add	esp, 3Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E009D0:				; CODE XREF: sub_67E00630+30Cj
					; sub_67E00630+325j
		add	[esp+4Ch+var_2C], 1
		add	esi, 1
		sub	edi, 1
		jmp	loc_67E00905
; ---------------------------------------------------------------------------

loc_67E009E0:				; CODE XREF: sub_67E00630+346j
					; sub_67E00630+366j
		mov	eax, 1
		jmp	short loc_67E009A3
sub_67E00630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E009F0	proc near		; CODE XREF: dbus_parse_address+E9p
					; sub_67DC4660+77p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	edx, [esp+2Ch+arg_C]
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], edx
		mov	edx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_20], edx
		mov	edx, [eax+4]
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], edx
		mov	edx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], edx
		call	sub_67E00630
		add	esp, 2Ch
		retn
sub_67E009F0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	edi, [esp+50h]
		mov	esi, [esp+54h]
		mov	dword ptr [esp+10h], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	dword ptr [esp+0Ch], 781h
		test	edi, edi
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealNull ; "(real) != NULL"
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	dword ptr [esp+0Ch], 781h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [edi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	dword ptr [esp+0Ch], 781h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [edi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	dword ptr [esp+0Ch], 781h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [edi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	dword ptr [esp+0Ch], 781h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealMax_length ; "(real)->max_length	>= 0"
		mov	eax, [edi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	dword ptr [esp+0Ch], 781h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLenRealAll ; "(real)->len <= ((real)->allocated - _DB"...
		mov	eax, [edi+8]
		sub	eax, 7
		cmp	eax, [edi+4]
		setnle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	dword ptr [esp+0Ch], 781h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLenRealMax ; "(real)->len <= (real)->max_length"
		mov	eax, [edi+4]
		cmp	eax, [edi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	dword ptr [esp+0Ch], 782h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStartRealLen	; "start <= real->len"
		cmp	[edi+4], esi
		setnl	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	dword ptr [esp+10h], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	dword ptr [esp+0Ch], 783h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStart0_2 ; "start >=	0"
		mov	[esp], eax
		call	sub_67DFAE70
		mov	ebx, [edi+4]
		cmp	esi, ebx
		jge	short loc_67E00C49
		mov	ebp, [edi]
		mov	ecx, esi
		lea	eax, [ebp+esi+0]
		mov	[esp+2Ch], eax
		movzx	edi, byte ptr [eax]
		mov	eax, esi
		mov	edx, edi
		cmp	dl, 0Dh
		jz	short loc_67E00C75
		mov	ecx, edi
		mov	edx, [esp+2Ch]
		cmp	cl, 0Ah
		jnz	short loc_67E00C42
		jmp	short loc_67E00C83
; ---------------------------------------------------------------------------
		align 10h

loc_67E00C30:				; CODE XREF: .text:67E00C47j
		movzx	ecx, byte ptr [edx+1]
		cmp	cl, 0Dh
		jz	short loc_67E00C73
		add	edx, 1
		cmp	cl, 0Ah
		nop
		jz	short loc_67E00C83

loc_67E00C42:				; CODE XREF: .text:67E00C25j
		add	eax, 1
		cmp	ebx, eax
		jg	short loc_67E00C30

loc_67E00C49:				; CODE XREF: .text:67E00C02j
		mov	eax, [esp+58h]
		test	eax, eax
		jz	short loc_67E00C57
		mov	eax, [esp+58h]
		mov	[eax], ebx

loc_67E00C57:				; CODE XREF: .text:67E00C4Fj
		mov	ebp, [esp+5Ch]
		xor	eax, eax
		test	ebp, ebp
		jz	short loc_67E00CA8
		mov	edx, [esp+5Ch]
		mov	dword ptr [edx], 0
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E00C73:				; CODE XREF: .text:67E00C37j
		mov	ecx, eax

loc_67E00C75:				; CODE XREF: .text:67E00C1Aj
		lea	edx, [eax+1]
		cmp	edx, ebx
		jge	short loc_67E00C83
		cmp	byte ptr [ebp+ecx+1], 0Ah
		jz	short loc_67E00CB7

loc_67E00C83:				; CODE XREF: .text:67E00C27j
					; .text:67E00C40j ...
		mov	ecx, [esp+58h]
		test	ecx, ecx
		jz	short loc_67E00C91
		mov	edx, [esp+58h]
		mov	[edx], eax

loc_67E00C91:				; CODE XREF: .text:67E00C89j
		mov	edx, [esp+5Ch]
		test	edx, edx
		jz	short loc_67E00CB0
		mov	ecx, [esp+5Ch]
		mov	eax, 1
		mov	dword ptr [ecx], 1

loc_67E00CA8:				; CODE XREF: .text:67E00C5Fj
					; .text:67E00CB5j ...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E00CB0:				; CODE XREF: .text:67E00C97j
					; .text:67E00CCBj
		mov	eax, 1
		jmp	short loc_67E00CA8
; ---------------------------------------------------------------------------

loc_67E00CB7:				; CODE XREF: .text:67E00C81j
		mov	esi, [esp+58h]
		test	esi, esi
		jz	short loc_67E00CC5
		mov	edx, [esp+58h]
		mov	[edx], eax

loc_67E00CC5:				; CODE XREF: .text:67E00CBDj
		mov	ebx, [esp+5Ch]
		test	ebx, ebx
		jz	short loc_67E00CB0
		mov	ecx, [esp+5Ch]
		mov	eax, 1
		mov	dword ptr [ecx], 2
		jmp	short loc_67E00CA8
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E00CE0	proc near		; CODE XREF: sub_67DC1510+A0p
					; dbus_address_unescape_value+56p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_string_9 ; "_dbus_string_get_length"
		mov	[esp+2Ch+var_20], 34Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_9 ; "_dbus_string_get_length"
		mov	[esp+2Ch+var_20], 34Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_9 ; "_dbus_string_get_length"
		mov	[esp+2Ch+var_20], 34Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_9 ; "_dbus_string_get_length"
		mov	[esp+2Ch+var_20], 34Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_9 ; "_dbus_string_get_length"
		mov	[esp+2Ch+var_20], 34Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_9 ; "_dbus_string_get_length"
		mov	[esp+2Ch+var_20], 34Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_9 ; "_dbus_string_get_length"
		mov	[esp+2Ch+var_20], 34Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		add	esp, 28h
		pop	ebx
		retn
sub_67E00CE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E00E50	proc near		; CODE XREF: sub_67DD7EF0+13p
					; sub_67DD7F50+2Bp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_10 ; "_dbus_string_get_byte"
		mov	[esp+2Ch+var_20], 234h
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_10 ; "_dbus_string_get_byte"
		mov	[esp+2Ch+var_20], 234h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_10 ; "_dbus_string_get_byte"
		mov	[esp+2Ch+var_20], 234h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_10 ; "_dbus_string_get_byte"
		mov	[esp+2Ch+var_20], 234h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_10 ; "_dbus_string_get_byte"
		mov	[esp+2Ch+var_20], 234h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_10 ; "_dbus_string_get_byte"
		mov	[esp+2Ch+var_20], 234h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_10 ; "_dbus_string_get_byte"
		mov	[esp+2Ch+var_20], 234h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_10 ; "_dbus_string_get_byte"
		mov	[esp+2Ch+var_20], 235h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStartRealLen ; "start	<= real->len"
		cmp	[ebx+4], esi
		setnl	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_10 ; "_dbus_string_get_byte"
		mov	[esp+2Ch+var_20], 236h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart0_2 ; "start >= 0"
		call	sub_67DFAE70
		mov	eax, [ebx]
		movzx	eax, byte ptr [eax+esi]
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67E00E50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E01030	proc near		; CODE XREF: sub_67DD7F50+B7p
					; sub_67DFD880+85p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 21Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		mov	[esp+2Ch+var_20], 21Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		mov	[esp+2Ch+var_20], 21Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		mov	[esp+2Ch+var_20], 21Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		mov	[esp+2Ch+var_20], 21Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		mov	[esp+2Ch+var_20], 21Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		mov	[esp+2Ch+var_20], 21Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		mov	[esp+2Ch+var_20], 21Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		mov	[esp+2Ch+var_20], 21Dh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		mov	[esp+2Ch+var_20], 21Eh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aIRealLen ; "i	< real->len"
		cmp	[ebx+4], esi
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_11 ; "_dbus_string_set_byte"
		mov	[esp+2Ch+var_20], 21Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aI0 ; "i >= 0"
		call	sub_67DFAE70
		mov	eax, [ebx]
		mov	edx, edi
		mov	[eax+esi], dl
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E01030	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E01280	proc near		; CODE XREF: sub_67DD8020+1Ap
					; .text:67DDB413p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 205h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		mov	[esp+2Ch+var_20], 205h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	edx, byte ptr [ebx+10h]
		shr	dl, 2
		xor	edx, 1
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		mov	[esp+2Ch+var_20], 205h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	edx, [ebx+4]
		not	edx
		shr	edx, 1Fh
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		mov	[esp+2Ch+var_20], 205h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	edx, [ebx+8]
		not	edx
		shr	edx, 1Fh
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		mov	[esp+2Ch+var_20], 205h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	edx, [ebx+0Ch]
		not	edx
		shr	edx, 1Fh
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		mov	[esp+2Ch+var_20], 205h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		mov	[esp+2Ch+var_20], 205h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		mov	[esp+2Ch+var_20], 206h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart0_2 ; "start >= 0"
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		mov	[esp+2Ch+var_20], 207h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen0_2 ; "len	>= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		mov	[esp+2Ch+var_20], 208h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStartRealLen ; "start	<= real->len"
		cmp	[ebx+4], esi
		setnl	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_12 ; "_dbus_string_get_const_data_len"
		mov	[esp+2Ch+var_20], 209h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLenRealLenStar ; "len	<= real->len - start"
		mov	eax, [ebx+4]
		sub	eax, esi
		cmp	eax, edi
		setnl	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		add	esp, 20h
		pop	ebx
		add	eax, esi
		pop	esi
		pop	edi
		retn
sub_67E01280	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E014C0	proc near		; CODE XREF: sub_67DD8050+1Fp
					; sub_67DDADE0+BDp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 1EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	edx, [ebx+4]
		not	edx
		shr	edx, 1Fh
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	edx, [ebx+8]
		not	edx
		shr	edx, 1Fh
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	edx, [ebx+0Ch]
		not	edx
		shr	edx, 1Fh
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLocked ; "!(real)->locked"
		movzx	edx, byte ptr [ebx+10h]
		shr	dl, 1
		xor	edx, 1
		and	edx, 1
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1EEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart0_2 ; "start >= 0"
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1EFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen0_2 ; "len	>= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1F0h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStartRealLen ; "start	<= real->len"
		cmp	[ebx+4], esi
		setnl	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_13 ; "_dbus_string_get_data_len"
		mov	[esp+2Ch+var_20], 1F1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLenRealLenStar ; "len	<= real->len - start"
		mov	eax, [ebx+4]
		sub	eax, esi
		cmp	eax, edi
		setnl	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		add	esp, 20h
		pop	ebx
		add	eax, esi
		pop	esi
		pop	edi
		retn
sub_67E014C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E01770	proc near		; CODE XREF: dbus_address_entry_get_method+6j
					; sub_67DC1510+Ep ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_14 ; "_dbus_string_get_const_data"
		mov	[esp+2Ch+var_20], 1D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_14 ; "_dbus_string_get_const_data"
		mov	[esp+2Ch+var_20], 1D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_14 ; "_dbus_string_get_const_data"
		mov	[esp+2Ch+var_20], 1D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_14 ; "_dbus_string_get_const_data"
		mov	[esp+2Ch+var_20], 1D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_14 ; "_dbus_string_get_const_data"
		mov	[esp+2Ch+var_20], 1D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_14 ; "_dbus_string_get_const_data"
		mov	[esp+2Ch+var_20], 1D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_14 ; "_dbus_string_get_const_data"
		mov	[esp+2Ch+var_20], 1D5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		add	esp, 28h
		pop	ebx
		retn
sub_67E01770	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E018E0	proc near		; CODE XREF: sub_67E132F0+5Cp
					; .text:67E1368Ap ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_48 ; "_dbus_string_get_data"
		mov	[esp+2Ch+var_20], 1C4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_48 ; "_dbus_string_get_data"
		mov	[esp+2Ch+var_20], 1C4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_48 ; "_dbus_string_get_data"
		mov	[esp+2Ch+var_20], 1C4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_48 ; "_dbus_string_get_data"
		mov	[esp+2Ch+var_20], 1C4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_48 ; "_dbus_string_get_data"
		mov	[esp+2Ch+var_20], 1C4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_48 ; "_dbus_string_get_data"
		mov	[esp+2Ch+var_20], 1C4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_48 ; "_dbus_string_get_data"
		mov	[esp+2Ch+var_20], 1C4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_48 ; "_dbus_string_get_data"
		mov	[esp+2Ch+var_20], 1C4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_48 ; "_dbus_string_get_data"
		mov	[esp+2Ch+var_20], 1C4h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		add	esp, 28h
		pop	ebx
		retn
sub_67E018E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E01AC0	proc near		; CODE XREF: sub_67DD85F0+10Dp
					; sub_67DDA8D0+99p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_8]
		mov	edi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_string_i ; "_dbus_string_init_const_len"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 0ECh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStrNull_0 ; "str != NULL"
		call	sub_67DFAE70
		test	esi, esi
		setz	al
		test	edi, edi
		setnz	dl
		or	eax, edx
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_i ; "_dbus_string_init_const_len"
		mov	[esp+2Ch+var_20], 0EDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen0ValueNull	; "len == 0 || value !=	NULL"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	esi, 7FFFFFF7h
		setle	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_i ; "_dbus_string_init_const_len"
		mov	[esp+2Ch+var_20], 0EEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen_dbus_strin ; "len	<= _DBUS_STRING_MAX_MAX_LENGTH"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_i ; "_dbus_string_init_const_len"
		mov	[esp+2Ch+var_20], 0EFh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen0_2 ; "len	>= 0"
		call	sub_67DFAE70
		lea	eax, [esi+8]
		mov	[ebx+8], eax
		movzx	eax, byte ptr [ebx+10h]
		mov	[ebx+4], esi
		add	esi, 1
		mov	[ebx], edi
		mov	[ebx+0Ch], esi
		or	eax, 3
		and	eax, 0FFFFFFC3h
		mov	[ebx+10h], al
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E01AC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E01BC0	proc near		; CODE XREF: sub_67DC30E0+92p
					; sub_67DC30E0+F5p ...

Dst		= dword	ptr -2Ch
Val		= dword	ptr -28h
Size		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_string_z ; "_dbus_string_zero"
		mov	[esp+2Ch+var_20], 0BA0h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+Val], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_z ; "_dbus_string_zero"
		mov	[esp+2Ch+var_20], 0BA0h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Val], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_z ; "_dbus_string_zero"
		mov	[esp+2Ch+var_20], 0BA0h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Val], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_z ; "_dbus_string_zero"
		mov	[esp+2Ch+var_20], 0BA0h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Val], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_z ; "_dbus_string_zero"
		mov	[esp+2Ch+var_20], 0BA0h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Val], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_z ; "_dbus_string_zero"
		mov	[esp+2Ch+var_20], 0BA0h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Val], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_z ; "_dbus_string_zero"
		mov	[esp+2Ch+var_20], 0BA0h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Val], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_z ; "_dbus_string_zero"
		mov	[esp+2Ch+var_20], 0BA0h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Val], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_z ; "_dbus_string_zero"
		mov	[esp+2Ch+var_20], 0BA0h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Val], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+10h]
		mov	edx, [ebx+8]
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [ebx]
		mov	[esp+2Ch+Size],	edx ; Size
		mov	[esp+2Ch+Val], 0 ; Val
		mov	[esp+2Ch+Dst], eax ; Dst
		call	memset
		add	esp, 28h
		pop	ebx
		retn
sub_67E01BC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E01DC0	proc near		; CODE XREF: sub_67DD94B0+2ACp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_string_v ; "_dbus_string_validate_nul"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 0B84h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_v ; "_dbus_string_validate_nul"
		mov	[esp+2Ch+var_20], 0B84h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	ecx, byte ptr [ebx+10h]
		shr	cl, 2
		xor	ecx, 1
		and	ecx, 1
		mov	[esp+2Ch+var_2C], ecx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_v ; "_dbus_string_validate_nul"
		mov	[esp+2Ch+var_20], 0B84h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	ecx, [ebx+4]
		not	ecx
		shr	ecx, 1Fh
		mov	[esp+2Ch+var_2C], ecx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_v ; "_dbus_string_validate_nul"
		mov	[esp+2Ch+var_20], 0B84h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	ecx, [ebx+8]
		not	ecx
		shr	ecx, 1Fh
		mov	[esp+2Ch+var_2C], ecx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_v ; "_dbus_string_validate_nul"
		mov	[esp+2Ch+var_20], 0B84h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	ecx, [ebx+0Ch]
		not	ecx
		shr	ecx, 1Fh
		mov	[esp+2Ch+var_2C], ecx
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_v ; "_dbus_string_validate_nul"
		mov	[esp+2Ch+var_20], 0B84h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_v ; "_dbus_string_validate_nul"
		mov	[esp+2Ch+var_20], 0B84h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_v ; "_dbus_string_validate_nul"
		mov	[esp+2Ch+var_20], 0B85h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart0_2 ; "start >= 0"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_v ; "_dbus_string_validate_nul"
		mov	[esp+2Ch+var_20], 0B86h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen0_2 ; "len	>= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_v ; "_dbus_string_validate_nul"
		mov	[esp+2Ch+var_20], 0B87h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStartRealLen ; "start	<= real->len"
		cmp	[ebx+4], edi
		setnl	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		sub	eax, edi
		cmp	esi, eax
		jg	short loc_67E01FD8
		mov	eax, [ebx]
		add	eax, edi
		lea	edx, [eax+esi]
		cmp	eax, edx
		jz	short loc_67E01FE8

loc_67E01FD3:				; CODE XREF: sub_67E01DC0+226j
		cmp	byte ptr [eax],	0
		jz	short loc_67E01FE1

loc_67E01FD8:				; CODE XREF: sub_67E01DC0+206j
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67E01FE1:				; CODE XREF: sub_67E01DC0+216j
		add	eax, 1
		cmp	edx, eax
		jnz	short loc_67E01FD3

loc_67E01FE8:				; CODE XREF: sub_67E01DC0+211j
		add	esp, 20h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E01DC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E02000	proc near		; CODE XREF: sub_67DC2E90+30p
					; sub_67DDE360+35p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+3Ch+arg_0]
		mov	ebx, [esp+3Ch+arg_4]
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		test	esi, esi
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_30], 0B22h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		mov	[esp+3Ch+var_30], 0B22h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		mov	[esp+3Ch+var_30], 0B22h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		mov	[esp+3Ch+var_30], 0B22h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		mov	[esp+3Ch+var_30], 0B22h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		mov	[esp+3Ch+var_30], 0B22h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		mov	[esp+3Ch+var_30], 0B22h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		mov	[esp+3Ch+var_30], 0B23h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStart0_2 ; "start >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		mov	[esp+3Ch+var_30], 0B24h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStartRealLen ; "start	<= real->len"
		cmp	[esi+4], ebx
		setnl	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, ebp
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		mov	[esp+3Ch+var_30], 0B25h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aLen0_2 ; "len	>= 0"
		call	sub_67DFAE70
		mov	edx, [esi+4]
		xor	eax, eax
		sub	edx, ebx
		cmp	ebp, edx
		jg	short loc_67E0222D
		add	ebx, [esi]
		lea	ebp, [ebx+ebp]

loc_67E02210:				; CODE XREF: sub_67E02000+37Dj
		cmp	ebx, ebp
		jnb	short loc_67E02226

loc_67E02214:				; CODE XREF: sub_67E02000+224j
		movzx	eax, byte ptr [ebx]
		test	al, al
		jz	short loc_67E02226
		test	al, al
		js	short loc_67E02235
		add	ebx, 1
		cmp	ebx, ebp
		jb	short loc_67E02214

loc_67E02226:				; CODE XREF: sub_67E02000+212j
					; sub_67E02000+219j ...
		xor	eax, eax
		cmp	ebx, ebp
		setz	al

loc_67E0222D:				; CODE XREF: sub_67E02000+209j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E02235:				; CODE XREF: sub_67E02000+21Dj
		movzx	eax, al
		mov	edi, 2
		mov	edx, eax
		mov	ecx, 1Fh
		and	edx, 0E0h
		cmp	edx, 0C0h
		jz	short loc_67E022B0
		mov	edx, eax
		mov	di, 3
		and	edx, 0F0h
		mov	cl, 0Fh
		cmp	edx, 0E0h
		jz	short loc_67E022B0
		mov	edx, eax
		mov	di, 4
		and	edx, 0F8h
		mov	cl, 7
		cmp	edx, 0F0h
		jz	short loc_67E022B0
		mov	edx, eax
		mov	di, 5
		and	edx, 0FCh
		mov	cl, 3
		cmp	edx, 0F8h
		jz	short loc_67E022B0
		mov	edx, eax
		and	edx, 0FEh
		cmp	edx, 0FCh
		jnz	short loc_67E02226
		mov	di, 6
		mov	cl, 1
		lea	esi, [esi+0]

loc_67E022B0:				; CODE XREF: sub_67E02000+250j
					; sub_67E02000+266j ...
		mov	edx, ebp
		sub	edx, ebx
		cmp	edi, edx
		jg	loc_67E02226
		and	eax, ecx
		movzx	ecx, byte ptr [ebx+1]
		mov	esi, 0C0h
		mov	edx, 1
		and	esi, ecx
		add	esi, 0FFFFFF80h
		jnz	short loc_67E022FA

loc_67E022D3:				; CODE XREF: sub_67E02000+2F8j
		mov	esi, eax
		mov	eax, ecx
		shl	esi, 6
		and	eax, 3Fh
		add	edx, 1
		or	eax, esi
		cmp	edi, edx
		jle	loc_67E02382
		movzx	ecx, byte ptr [ebx+edx]
		mov	esi, 0C0h
		and	esi, ecx
		add	esi, 0FFFFFF80h
		jz	short loc_67E022D3

loc_67E022FA:				; CODE XREF: sub_67E02000+2D1j
		mov	eax, 0FFFFFFFFh

loc_67E022FF:				; CODE XREF: sub_67E02000+3E5j
		mov	esi, 6
		mov	edx, 6

loc_67E02309:				; CODE XREF: sub_67E02000+39Cj
					; sub_67E02000+3B2j ...
		cmp	edx, edi
		jnz	loc_67E02226
		cmp	eax, 10FFFFh
		ja	loc_67E02226
		mov	edx, eax
		and	edx, 0FFFFF800h
		cmp	edx, 0D800h
		jz	loc_67E02226
		lea	edx, [eax-0FDD0h]
		cmp	edx, 1Fh
		jbe	loc_67E02226
		and	eax, 0FFFEh
		cmp	eax, 0FFFEh
		jz	loc_67E02226
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_15 ; "_dbus_string_validate_utf8"
		add	ebx, esi
		mov	[esp+3Ch+var_30], 0B62h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aResultDbus_uni ; "result != (dbus_unichar_t)-1"
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		jmp	loc_67E02210
; ---------------------------------------------------------------------------

loc_67E02382:				; CODE XREF: sub_67E02000+2E4j
		cmp	eax, 7Fh
		jbe	loc_67E02226
		cmp	eax, 7FFh
		ja	short loc_67E023A1
		mov	esi, 2
		mov	edx, 2
		jmp	loc_67E02309
; ---------------------------------------------------------------------------

loc_67E023A1:				; CODE XREF: sub_67E02000+390j
		cmp	eax, 0FFFFh
		ja	short loc_67E023B7
		mov	esi, 3
		mov	edx, 3
		jmp	loc_67E02309
; ---------------------------------------------------------------------------

loc_67E023B7:				; CODE XREF: sub_67E02000+3A6j
		cmp	eax, 1FFFFFh
		ja	short loc_67E023D0
		mov	esi, 4
		mov	edx, 4
		jmp	loc_67E02309
; ---------------------------------------------------------------------------
		align 10h

loc_67E023D0:				; CODE XREF: sub_67E02000+3BCj
		cmp	eax, 3FFFFFFh
		mov	esi, 5
		mov	edx, 5
		jbe	loc_67E02309
		jmp	loc_67E022FF
sub_67E02000	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E023F0	proc near		; CODE XREF: sub_67DC2FB0+BBp
					; sub_67DC4660+21Fp ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_16 ; "_dbus_string_validate_ascii"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 0AB9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_16 ; "_dbus_string_validate_ascii"
		mov	[esp+2Ch+var_20], 0AB9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_16 ; "_dbus_string_validate_ascii"
		mov	[esp+2Ch+var_20], 0AB9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_16 ; "_dbus_string_validate_ascii"
		mov	[esp+2Ch+var_20], 0AB9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_16 ; "_dbus_string_validate_ascii"
		mov	[esp+2Ch+var_20], 0AB9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_16 ; "_dbus_string_validate_ascii"
		mov	[esp+2Ch+var_20], 0AB9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_16 ; "_dbus_string_validate_ascii"
		mov	[esp+2Ch+var_20], 0AB9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_16 ; "_dbus_string_validate_ascii"
		mov	[esp+2Ch+var_20], 0ABAh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStart0_2 ; "start >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_16 ; "_dbus_string_validate_ascii"
		mov	[esp+2Ch+var_20], 0ABBh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStartRealLen ; "start	<= real->len"
		cmp	[ebx+4], edi
		setnl	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_16 ; "_dbus_string_validate_ascii"
		mov	[esp+2Ch+var_20], 0ABCh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aLen0_2 ; "len	>= 0"
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		sub	eax, edi
		cmp	esi, eax
		jg	short loc_67E0260A
		mov	edx, [ebx]
		add	edx, edi
		lea	esi, [edx+esi]
		cmp	edx, esi
		jz	short loc_67E0261E

loc_67E02603:				; CODE XREF: sub_67E023F0+22Cj
		movzx	eax, byte ptr [edx]
		test	al, al
		jnz	short loc_67E02613

loc_67E0260A:				; CODE XREF: sub_67E023F0+206j
					; sub_67E023F0+225j
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67E02613:				; CODE XREF: sub_67E023F0+218j
		test	al, 80h
		jnz	short loc_67E0260A
		add	edx, 1
		cmp	esi, edx
		jnz	short loc_67E02603

loc_67E0261E:				; CODE XREF: sub_67E023F0+211j
		add	esp, 20h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E023F0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+30h]
		mov	esi, [esp+38h]
		mov	edi, [esp+34h]
		mov	dword ptr [esp+10h], offset a_dbus_strin_49 ; "_dbus_string_copy_to_buffer_with_nul"
		test	ebx, ebx
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+0Ch], 30Ch
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealNull ; "(real) != NULL"
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_49 ; "_dbus_string_copy_to_buffer_with_nul"
		mov	dword ptr [esp+0Ch], 30Ch
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_49 ; "_dbus_string_copy_to_buffer_with_nul"
		mov	dword ptr [esp+0Ch], 30Ch
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_49 ; "_dbus_string_copy_to_buffer_with_nul"
		mov	dword ptr [esp+0Ch], 30Ch
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_49 ; "_dbus_string_copy_to_buffer_with_nul"
		mov	dword ptr [esp+0Ch], 30Ch
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealMax_length ; "(real)->max_length	>= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_49 ; "_dbus_string_copy_to_buffer_with_nul"
		mov	dword ptr [esp+0Ch], 30Ch
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLenRealAll ; "(real)->len <= ((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_49 ; "_dbus_string_copy_to_buffer_with_nul"
		mov	dword ptr [esp+0Ch], 30Ch
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLenRealMax ; "(real)->len <= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_49 ; "_dbus_string_copy_to_buffer_with_nul"
		mov	dword ptr [esp+0Ch], 30Eh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aAvail_len0 ;	"avail_len >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_49 ; "_dbus_string_copy_to_buffer_with_nul"
		mov	dword ptr [esp+0Ch], 30Fh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aAvail_lenRea_0 ; "avail_len > real->len"
		cmp	[ebx+4], esi
		setl	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	edx, [ebx+4]
		mov	eax, [ebx]
		mov	[esp+30h], edi
		add	edx, 1
		mov	[esp+38h], edx
		mov	[esp+34h], eax
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		jmp	memcpy
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E02820(void	*Dst, void *Src, size_t	Size)
sub_67E02820	proc near		; CODE XREF: .text:67DFB48Ep
					; sub_67E09EA0+3Dp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
Dst		= dword	ptr  4
Src		= dword	ptr  8
Size		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+Dst]
		mov	esi, [esp+2Ch+Size]
		mov	edi, [esp+2Ch+Src]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_38 ; "_dbus_string_copy_to_buffer"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 2F6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_38 ; "_dbus_string_copy_to_buffer"
		mov	[esp+2Ch+var_20], 2F6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_38 ; "_dbus_string_copy_to_buffer"
		mov	[esp+2Ch+var_20], 2F6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_38 ; "_dbus_string_copy_to_buffer"
		mov	[esp+2Ch+var_20], 2F6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_38 ; "_dbus_string_copy_to_buffer"
		mov	[esp+2Ch+var_20], 2F6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_38 ; "_dbus_string_copy_to_buffer"
		mov	[esp+2Ch+var_20], 2F6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_38 ; "_dbus_string_copy_to_buffer"
		mov	[esp+2Ch+var_20], 2F6h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_38 ; "_dbus_string_copy_to_buffer"
		mov	[esp+2Ch+var_20], 2F8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAvail_len0 ; "avail_len >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_38 ; "_dbus_string_copy_to_buffer"
		mov	[esp+2Ch+var_20], 2F9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aAvail_lenRealL ; "avail_len >= real->len"
		cmp	[ebx+4], esi
		setle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		mov	edx, [ebx+4]
		mov	[esp+2Ch+Dst], edi ; Dst
		mov	[esp+2Ch+Src], eax ; Src
		mov	[esp+2Ch+Size],	edx ; Size
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		jmp	memcpy
sub_67E02820	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E02A10	proc near		; CODE XREF: dbus_server_get_id+95p
					; sub_67DF3BF0+237p ...

Dst		= dword	ptr -2Ch
Src		= dword	ptr -28h
Size		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_string_c ; "_dbus_string_copy_data"
		mov	[esp+2Ch+var_20], 2DCh
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_c ; "_dbus_string_copy_data"
		mov	[esp+2Ch+var_20], 2DCh
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_c ; "_dbus_string_copy_data"
		mov	[esp+2Ch+var_20], 2DCh
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_c ; "_dbus_string_copy_data"
		mov	[esp+2Ch+var_20], 2DCh
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_c ; "_dbus_string_copy_data"
		mov	[esp+2Ch+var_20], 2DCh
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_c ; "_dbus_string_copy_data"
		mov	[esp+2Ch+var_20], 2DCh
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_c ; "_dbus_string_copy_data"
		mov	[esp+2Ch+var_20], 2DCh
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_c ; "_dbus_string_copy_data"
		mov	[esp+2Ch+var_20], 2DDh
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aData_returnNul ;	"data_return !=	NULL"
		call	sub_67DFAE70
		mov	eax, [ebx+4]
		add	eax, 1
		mov	[esp+2Ch+Dst], eax ; Size
		call	dbus_malloc
		xor	edx, edx
		test	eax, eax
		mov	[esi], eax
		jz	short loc_67E02BDE
		mov	ecx, [ebx+4]
		mov	edx, [ebx]
		mov	[esp+2Ch+Dst], eax ; Dst
		add	ecx, 1
		mov	[esp+2Ch+Src], edx ; Src
		mov	[esp+2Ch+Size],	ecx ; Size
		call	memcpy
		mov	edx, 1

loc_67E02BDE:				; CODE XREF: sub_67E02A10+1AFj
		add	esp, 24h
		mov	eax, edx
		pop	ebx
		pop	esi
		retn
sub_67E02A10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E02BF0	proc near		; CODE XREF: dbus_address_unescape_value+B2p
					; sub_67DC1870+Ep ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_17 ; "_dbus_string_free"
		mov	[esp+2Ch+var_20], 10Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_17 ; "_dbus_string_free"
		mov	[esp+2Ch+var_20], 10Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_17 ; "_dbus_string_free"
		mov	[esp+2Ch+var_20], 10Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_17 ; "_dbus_string_free"
		mov	[esp+2Ch+var_20], 10Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_17 ; "_dbus_string_free"
		mov	[esp+2Ch+var_20], 10Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_17 ; "_dbus_string_free"
		mov	[esp+2Ch+var_20], 10Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_17 ; "_dbus_string_free"
		mov	[esp+2Ch+var_20], 10Ah
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+10h]
		test	al, 1
		jnz	short loc_67E02D75
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	dbus_free
		or	byte ptr [ebx+10h], 4

loc_67E02D75:				; CODE XREF: sub_67E02BF0+16Dj
		add	esp, 28h
		pop	ebx
		retn
sub_67E02BF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E02D80	proc near		; CODE XREF: sub_67DC2940+64p
					; sub_67DC4660+28Ap ...

Dst		= dword	ptr -2Ch
Src		= dword	ptr -28h
Size		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+var_20], 5A1h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A1h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A1h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A1h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A1h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A1h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A1h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A1h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A1h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A2h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aStart0_2	; "start >= 0"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A3h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aLen0_2 ;	"len >=	0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A4h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aStartRealLen ; "start <=	real->len"
		cmp	[ebx+4], edi
		setnl	al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+2Ch+var_20], 5A5h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aLenRealLenStar ;	"len <=	real->len - start"
		mov	eax, [ebx+4]
		sub	eax, edi
		cmp	eax, esi
		setnl	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		test	esi, esi
		jz	short loc_67E0304E
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		sub	eax, edi
		sub	eax, esi
		mov	[esp+2Ch+Size],	eax ; Size
		lea	eax, [esi+edi]
		lea	eax, [edx+eax]
		lea	edi, [edx+edi]
		mov	[esp+2Ch+Src], eax ; Src
		mov	[esp+2Ch+Dst], edi ; Dst
		call	memmove
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		sub	eax, esi
		mov	[ebx+4], eax
		mov	byte ptr [edx+eax], 0

loc_67E0304E:				; CODE XREF: sub_67E02D80+29Cj
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E02D80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E03060(int,	char *)
sub_67E03060	proc near		; CODE XREF: sub_67DC1510+98p
					; dbus_address_unescape_value+2Ep ...

Str		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_4], ebp
		test	esi, esi
		setnz	al
		movzx	edi, al
		mov	[esp+3Ch+Str], edi
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_18 ; "_dbus_string_init_const"
		mov	[esp+3Ch+var_30], 0D5h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aValueNull_0 ;	"value != NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+Str], esi ; Str
		call	strlen
		mov	[esp+3Ch+var_2C], offset a_dbus_string_i ; "_dbus_string_init_const_len"
		mov	[esp+3Ch+var_30], 0ECh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStrNull_0 ; "str != NULL"
		mov	ebp, eax
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+3Ch+Str], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	ebp, ebp
		setz	al
		or	eax, edi
		mov	[esp+3Ch+Str], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_string_i ; "_dbus_string_init_const_len"
		mov	[esp+3Ch+var_30], 0EDh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aLen0ValueNull	; "len == 0 || value !=	NULL"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	ebp, 7FFFFFF7h
		setle	al
		mov	[esp+3Ch+Str], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_string_i ; "_dbus_string_init_const_len"
		mov	[esp+3Ch+var_30], 0EEh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aLen_dbus_strin ; "len	<= _DBUS_STRING_MAX_MAX_LENGTH"
		call	sub_67DFAE70
		mov	eax, ebp
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Str], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_string_i ; "_dbus_string_init_const_len"
		mov	[esp+3Ch+var_30], 0EFh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aLen0_2 ; "len	>= 0"
		call	sub_67DFAE70
		lea	eax, [ebp+8]
		mov	[ebx+8], eax
		movzx	eax, byte ptr [ebx+10h]
		mov	[ebx+4], ebp
		add	ebp, 1
		mov	[ebx], esi
		mov	[ebx+0Ch], ebp
		or	eax, 3
		and	eax, 0FFFFFFC3h
		mov	[ebx+10h], al
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_67E03060	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E031B0	proc near		; CODE XREF: sub_67DD8C00+7Ap
					; sub_67DD8DF0+13p ...

Dst		= dword	ptr -4Ch
Src		= dword	ptr -48h
Size		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	esi, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_19 ; "_dbus_string_init_preallocated"
		mov	[esp+4Ch+var_40], 89h
		test	ebx, ebx
		setnz	al
		lea	edi, [esi+8]
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aStrNull_0 ; "str	!= NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_19 ; "_dbus_string_init_preallocated"
		mov	[esp+4Ch+var_40], 8Bh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aSizeofDbusstri ;	"sizeof	(DBusString) ==	sizeof (DBusReal"...
		mov	[esp+4Ch+Dst], 1
		call	sub_67DFAE70
		mov	[esp+4Ch+Dst], edi ; Size
		call	dbus_malloc
		xor	edx, edx
		test	eax, eax
		mov	[ebx], eax
		jz	loc_67E03344
		mov	[ebx+8], edi
		add	esi, 1
		mov	edi, 7
		mov	dword ptr [ebx+4], 0
		mov	byte ptr [eax],	0
		xor	eax, eax
		and	byte ptr [ebx+10h], 0C0h
		cmp	esi, 0
		setnle	al
		mov	dword ptr [ebx+0Ch], 7FFFFFF7h
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+4Ch+var_40], 56h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealLenRealA_0 ;	"real->len <= real->allocated -	_DBUS_ST"...
		call	sub_67DFAE70
		movzx	esi, byte ptr [ebx+10h]
		mov	eax, esi
		and	esi, 0FFFFFFC7h
		shr	al, 3
		and	edi, eax
		mov	eax, edi
		neg	eax
		add	eax, [ebx]
		lea	ecx, [eax+7]
		and	ecx, 0FFFFFFF8h
		mov	edx, ecx
		sub	dl, al
		and	edx, 7
		lea	ebp, ds:0[edx*8]
		or	esi, ebp
		mov	[esp+4Ch+var_1D], dl
		mov	edx, esi
		mov	[ebx+10h], dl
		movzx	edx, [esp+4Ch+var_1D]
		mov	[ebx], ecx
		cmp	edi, edx
		jz	short loc_67E032DB
		mov	ecx, [ebx+4]
		lea	edi, [eax+edi]
		lea	edx, [eax+edx]
		mov	[esp+4Ch+Src], edi ; Src
		mov	[esp+4Ch+Dst], edx ; Dst
		add	ecx, 1
		mov	[esp+4Ch+Size],	ecx ; Size
		call	memmove

loc_67E032DB:				; CODE XREF: sub_67E031B0+10Dj
		mov	[esp+4Ch+var_3C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+4Ch+var_40], 68h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealAlign_offs ;	"real->align_offset < 8"
		mov	[esp+4Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	[esp+4Ch+var_3C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+4Ch+var_40], 69h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+Src], offset a_dbus_align__7 ;	"_DBUS_ALIGN_ADDRESS (real->str, 8) == r"...
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	edx, 1

loc_67E03344:				; CODE XREF: sub_67E031B0+7Bj
		add	esp, 3Ch
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E031B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E03350	proc near		; CODE XREF: dbus_address_unescape_value+36p
					; dbus_parse_address+ADp ...

Dst		= dword	ptr -4Ch
Src		= dword	ptr -48h
Size		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_19 ; "_dbus_string_init_preallocated"
		mov	[esp+4Ch+var_40], 89h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+Src], offset aStrNull_0 ; "str	!= NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_19 ; "_dbus_string_init_preallocated"
		mov	[esp+4Ch+var_40], 8Bh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aSizeofDbusstri ;	"sizeof	(DBusString) ==	sizeof (DBusReal"...
		mov	[esp+4Ch+Dst], 1
		call	sub_67DFAE70
		mov	[esp+4Ch+Dst], 8 ; Size
		call	dbus_malloc
		xor	edx, edx
		test	eax, eax
		mov	[ebx], eax
		jz	loc_67E034DE
		mov	dword ptr [ebx+8], 8
		mov	edi, 7
		mov	dword ptr [ebx+4], 0
		mov	byte ptr [eax],	0
		and	byte ptr [ebx+10h], 0C0h
		mov	dword ptr [ebx+0Ch], 7FFFFFF7h
		mov	[esp+4Ch+var_3C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+4Ch+var_40], 56h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealLenRealA_0 ;	"real->len <= real->allocated -	_DBUS_ST"...
		mov	[esp+4Ch+Dst], 1
		call	sub_67DFAE70
		movzx	esi, byte ptr [ebx+10h]
		mov	eax, esi
		and	esi, 0FFFFFFC7h
		shr	al, 3
		and	edi, eax
		mov	eax, edi
		neg	eax
		add	eax, [ebx]
		lea	ecx, [eax+7]
		and	ecx, 0FFFFFFF8h
		mov	edx, ecx
		sub	dl, al
		and	edx, 7
		lea	ebp, ds:0[edx*8]
		or	esi, ebp
		mov	[esp+4Ch+var_1D], dl
		mov	edx, esi
		mov	[ebx+10h], dl
		movzx	edx, [esp+4Ch+var_1D]
		mov	[ebx], ecx
		cmp	edi, edx
		jz	short loc_67E03475
		mov	ecx, [ebx+4]
		lea	edi, [eax+edi]
		lea	edx, [eax+edx]
		mov	[esp+4Ch+Src], edi ; Src
		mov	[esp+4Ch+Dst], edx ; Dst
		add	ecx, 1
		mov	[esp+4Ch+Size],	ecx ; Size
		call	memmove

loc_67E03475:				; CODE XREF: sub_67E03350+107j
		mov	[esp+4Ch+var_3C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+4Ch+var_40], 68h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealAlign_offs ;	"real->align_offset < 8"
		mov	[esp+4Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	[esp+4Ch+var_3C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+4Ch+var_40], 69h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+Src], offset a_dbus_align__7 ;	"_DBUS_ALIGN_ADDRESS (real->str, 8) == r"...
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	edx, 1

loc_67E034DE:				; CODE XREF: sub_67E03350+78j
		add	esp, 3Ch
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E03350	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E034F0	proc near		; CODE XREF: sub_67E036F0+45Fp
					; sub_67E03BA0+255p ...

Dst		= dword	ptr -5Ch
Src		= dword	ptr -58h
Size		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_2D		= byte ptr -2Dh
var_1D		= byte ptr -1Dh
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 5Ch
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+5Ch+var_C], esi
		mov	esi, edx
		mov	[esp+5Ch+var_8], edi
		mov	[esp+5Ch+var_4], ebp
		cmp	[eax+0Ch], edx
		jge	short loc_67E03513

loc_67E0350C:				; CODE XREF: sub_67E034F0+8Fj
		xor	eax, eax
		jmp	loc_67E0369F
; ---------------------------------------------------------------------------

loc_67E03513:				; CODE XREF: sub_67E034F0+1Aj
		mov	eax, [eax+8]
		lea	edx, [eax-7]
		cmp	esi, edx
		jl	loc_67E03691
		cmp	eax, 3FFFFFFFh
		jle	loc_67E036B3
		mov	ebp, 7FFFFFFFh
		mov	eax, 1
		mov	edi, 7FFFFFFFh

loc_67E0353B:				; CODE XREF: sub_67E034F0+1D7j
					; sub_67E034F0+1ECj
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+var_4C], offset aReallocate_for ; "reallocate_for_length"
		mov	[esp+5Ch+var_50], 16Ch
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aNew_allocatedR ;	"new_allocated >= real->allocated"
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+10h]
		mov	[esp+5Ch+Src], ebp ; NewSize
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [ebx]
		mov	[esp+5Ch+Dst], eax ; Memory
		call	dbus_realloc
		test	eax, eax
		jz	short loc_67E0350C
		movzx	edx, byte ptr [ebx+10h]
		mov	ebp, 7
		mov	[ebx+8], edi
		sub	edi, 7
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 56h
		shr	dl, 3
		and	edx, 7
		add	eax, edx
		mov	[ebx], eax
		xor	eax, eax
		cmp	edi, [ebx+4]
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealA_0 ;	"real->len <= real->allocated -	_DBUS_ST"...
		setnle	al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		and	ebp, eax
		mov	eax, ebp
		neg	eax
		add	eax, [ebx]
		lea	ecx, [eax+7]
		and	ecx, 0FFFFFFF8h
		mov	edx, ecx
		sub	dl, al
		and	edx, 7
		mov	[esp+5Ch+var_2D], dl
		shl	edx, 3
		mov	[esp+5Ch+var_1D], dl
		movzx	edx, byte ptr [ebx+10h]
		mov	[ebx], ecx
		and	edx, 0FFFFFFC7h
		mov	edi, edx
		movzx	edx, [esp+5Ch+var_1D]
		or	edi, edx
		mov	edx, edi
		mov	[ebx+10h], dl
		movzx	edx, [esp+5Ch+var_2D]
		cmp	ebp, edx
		jz	short loc_67E0362D
		mov	ecx, [ebx+4]
		lea	ebp, [eax+ebp]
		lea	edx, [eax+edx]
		mov	[esp+5Ch+Src], ebp ; Src
		mov	[esp+5Ch+Dst], edx ; Dst
		add	ecx, 1
		mov	[esp+5Ch+Size],	ecx ; Size
		call	memmove

loc_67E0362D:				; CODE XREF: sub_67E034F0+11Fj
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 68h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAlign_offs ;	"real->align_offset < 8"
		mov	[esp+5Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 69h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+Src], offset a_dbus_align__7 ;	"_DBUS_ALIGN_ADDRESS (real->str, 8) == r"...
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70

loc_67E03691:				; CODE XREF: sub_67E034F0+2Bj
		mov	eax, [ebx]
		mov	[ebx+4], esi
		mov	byte ptr [eax+esi], 0
		mov	eax, 1

loc_67E0369F:				; CODE XREF: sub_67E034F0+1Ej
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_67E036B3:				; CODE XREF: sub_67E034F0+36j
		lea	edi, [esi+8]
		lea	edx, [eax+eax]
		cmp	edi, edx
		jl	short loc_67E036D0
		cmp	eax, edi
		mov	ebp, edi
		setle	al
		movzx	eax, al
		jmp	loc_67E0353B
; ---------------------------------------------------------------------------
		align 10h

loc_67E036D0:				; CODE XREF: sub_67E034F0+1CBj
		mov	edi, edx
		cmp	eax, edi
		mov	ebp, edi
		setle	al
		movzx	eax, al
		jmp	loc_67E0353B
sub_67E034F0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67E036F0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E036F0	proc near		; CODE XREF: sub_67DC25D0+C7p
					; sub_67DC26C0+C7p ...

Dst		= dword	ptr -4Ch
Src		= dword	ptr -48h
Size		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_8]
		mov	esi, [esp+4Ch+arg_0]
		mov	edi, [esp+4Ch+arg_4]
		mov	ebp, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		cmp	esi, ebx
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aSourceDest ; "(source) != (dest)"
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceNul ;	"(real_source) != NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceInv ;	"!(real_source)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceLen ;	"(real_source)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceAll ;	"(real_source)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceMax ;	"(real_source)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceL_0 ;	"(real_source)->len <= ((real_source)->a"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceL_1 ;	"(real_source)->len <= (real_source)->ma"...
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destNull ; "(real_dest) != NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destInval ;	"!(real_dest)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLen0 ; "(real_dest)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destAlloc ;	"(real_dest)->allocated	>= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destMax_l ;	"(real_dest)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLenRe ;	"(real_dest)->len <= ((real_dest)->alloc"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLen_0 ;	"(real_dest)->len <= (real_dest)->max_le"...
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destConst ;	"!real_dest->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLocke ;	"!real_dest->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aStart0_3	; "(start) >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aStartReal_sour ;	"(start) <= real_source->len"
		cmp	[esi+4], edi
		setnl	al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, ebp
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aInsert_at0 ; "(insert_at) >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_20 ; "_dbus_string_copy"
		mov	[esp+4Ch+var_40], 5FCh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aInsert_atReal_ ;	"(insert_at) <=	real_dest->len"
		cmp	[ebx+4], ebp
		setnl	al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	ecx, [esi+4]
		mov	eax, 1
		sub	ecx, edi
		jnz	short loc_67E03B30

loc_67E03B24:				; CODE XREF: sub_67E036F0+4ABj
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E03B30:				; CODE XREF: sub_67E036F0+432j
		mov	edx, [ebx+4]
		mov	eax, [ebx+0Ch]
		sub	eax, edx
		cmp	ecx, eax
		jle	short loc_67E03B46

loc_67E03B3C:				; CODE XREF: sub_67E036F0+46Aj
		add	esp, 3Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E03B46:				; CODE XREF: sub_67E036F0+44Aj
		lea	edx, [ecx+edx]
		mov	eax, ebx
		mov	[esp+4Ch+var_20], ecx
		call	sub_67E034F0
		mov	ecx, [esp+4Ch+var_20]
		test	eax, eax
		jz	short loc_67E03B3C
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		sub	eax, ecx
		sub	eax, ebp
		mov	[esp+4Ch+Size],	eax ; Size
		lea	eax, [edx+ebp]
		mov	[esp+4Ch+Src], eax ; Src
		lea	eax, [ebp+ecx+0]
		add	edx, eax
		mov	[esp+4Ch+Dst], edx ; Dst
		call	memmove
		mov	ecx, [esp+4Ch+var_20]
		mov	[esp+4Ch+Size],	ecx ; Size
		add	edi, [esi]
		mov	[esp+4Ch+Src], edi ; Src
		add	ebp, [ebx]
		mov	[esp+4Ch+Dst], ebp ; Dst
		call	memmove
		mov	eax, 1
		jmp	short loc_67E03B24
sub_67E036F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E03BA0	proc near		; CODE XREF: sub_67DDB7F0+64p
					; sub_67DDBB80+460p ...

Dst		= dword	ptr -2Ch
Src		= dword	ptr -28h
Size		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+var_20], 269h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		mov	[esp+2Ch+var_20], 269h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		mov	[esp+2Ch+var_20], 269h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		mov	[esp+2Ch+var_20], 269h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		mov	[esp+2Ch+var_20], 269h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		mov	[esp+2Ch+var_20], 269h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		mov	[esp+2Ch+var_20], 269h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		mov	[esp+2Ch+var_20], 269h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		mov	[esp+2Ch+var_20], 269h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		mov	[esp+2Ch+var_20], 26Ah
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aIRealLen_0 ; "i <= real->len"
		cmp	[ebx+4], esi
		setnl	al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_21 ; "_dbus_string_insert_byte"
		mov	[esp+2Ch+var_20], 26Bh
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aI0 ; "i >= 0"
		call	sub_67DFAE70
		mov	edx, [ebx+4]
		mov	eax, [ebx+0Ch]
		sub	eax, edx
		test	eax, eax
		jg	short loc_67E03DF0

loc_67E03DE2:				; CODE XREF: sub_67E03BA0+25Cj
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E03DF0:				; CODE XREF: sub_67E03BA0+240j
		add	edx, 1
		mov	eax, ebx
		call	sub_67E034F0
		test	eax, eax
		jz	short loc_67E03DE2
		mov	edx, [ebx]
		mov	eax, esi
		not	eax
		add	eax, [ebx+4]
		mov	[esp+2Ch+Size],	eax ; Size
		lea	eax, [edx+esi]
		mov	[esp+2Ch+Src], eax ; Src
		lea	eax, [edx+esi+1]
		mov	[esp+2Ch+Dst], eax ; Dst
		call	memmove
		mov	eax, [ebx]
		mov	edx, edi
		mov	[eax+esi], dl
		add	esp, 20h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E03BA0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67E03E40
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E03E40	proc near		; CODE XREF: .text:67E03E31j
					; sub_67E041F0+1E4p ...

Dst		= dword	ptr -5Ch
Src		= dword	ptr -58h
Size		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  4

		push	ebp
		mov	ebp, edx
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 4Ch
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+5Ch+var_24], ecx
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		cmp	[esp+5Ch+var_24], 0
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Eh
		setnle	al
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aAlignment1 ; "alignment >= 1"
		call	sub_67DFAE70
		xor	eax, eax
		cmp	[esp+5Ch+var_24], 8
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 39Fh
		setle	al
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aAlignment8 ; "alignment <= 8"
		call	sub_67DFAE70
		mov	edi, [ebp+0]
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 3A3h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aInsert_atRealL ;	"insert_at <= real->len"
		cmp	[ebx+4], edi
		setnl	al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, [esp+5Ch+var_24]
		mov	edx, [ebx+4]
		lea	esi, [edi+eax-1]
		neg	eax
		and	esi, eax
		mov	eax, [esp+5Ch+arg_0]
		mov	ecx, esi
		sub	ecx, edi
		mov	[esp+5Ch+var_30], ecx
		add	eax, edx
		add	eax, ecx
		cmp	eax, [ebx+0Ch]
		jbe	short loc_67E040D6

loc_67E040CF:				; CODE XREF: sub_67E03E40+2EDj
					; sub_67E03E40+302j
		xor	eax, eax
		jmp	loc_67E041B5
; ---------------------------------------------------------------------------

loc_67E040D6:				; CODE XREF: sub_67E03E40+28Dj
		mov	ecx, eax
		sub	ecx, edx
		mov	edx, ecx
		not	edx
		shr	edx, 1Fh
		mov	[esp+5Ch+var_28], eax
		mov	[esp+5Ch+var_24], ecx
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		mov	[esp+5Ch+var_50], 3ACh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aDelta0 ;	"delta >= 0"
		mov	[esp+5Ch+Dst], edx
		call	sub_67DFAE70
		mov	eax, [esp+5Ch+var_24]
		test	eax, eax
		mov	eax, [esp+5Ch+var_28]
		jz	short loc_67E04180
		mov	edx, [ebx+4]
		mov	ecx, eax
		sub	ecx, edx
		jz	short loc_67E04166
		mov	eax, [ebx+0Ch]
		sub	eax, edx
		cmp	ecx, eax
		jg	short loc_67E040CF
		add	edx, ecx
		mov	eax, ebx
		mov	[esp+5Ch+var_28], ecx
		call	sub_67E034F0
		mov	ecx, [esp+5Ch+var_28]
		test	eax, eax
		jz	short loc_67E040CF
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		sub	eax, ecx
		sub	eax, edi
		mov	[esp+5Ch+Size],	eax ; Size
		lea	eax, [edx+edi]
		mov	[esp+5Ch+Src], eax ; Src
		lea	eax, [ecx+edi]
		lea	eax, [edx+eax]
		mov	[esp+5Ch+Dst], eax ; Dst
		call	memmove

loc_67E04166:				; CODE XREF: sub_67E03E40+2E4j
		mov	eax, [esp+5Ch+var_24]
		cmp	[esp+5Ch+arg_0], eax
		jl	short loc_67E041C0
		mov	[ebp+0], esi
		mov	eax, 1

loc_67E04178:				; CODE XREF: sub_67E03E40+3A2j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E04180:				; CODE XREF: sub_67E03E40+2DBj
		mov	[esp+5Ch+var_4C], offset aAlign_insert_p ; "align_insert_point_then_open_gap"
		xor	eax, eax
		mov	[esp+5Ch+var_50], 3B0h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aUnsignedLongIn ;	"((unsigned long) *insert_at_p)	== gap_p"...
		cmp	[ebp+0], esi
		setz	al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, 1

loc_67E041B5:				; CODE XREF: sub_67E03E40+291j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E041C0:				; CODE XREF: sub_67E03E40+32Ej
		mov	ecx, [esp+5Ch+var_30]
		add	edi, [ebx]
		mov	[esp+5Ch+Src], 0 ; Val
		mov	[esp+5Ch+Size],	ecx ; Size
		mov	[esp+5Ch+Dst], edi ; Dst
		call	memset
		mov	eax, 1
		mov	[ebp+0], esi
		jmp	short loc_67E04178
sub_67E03E40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E041F0	proc near		; CODE XREF: sub_67DFC650+7Ap

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	edi, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_22 ; "_dbus_string_insert_alignment"
		test	edi, edi
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_20], 4C8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_22 ; "_dbus_string_insert_alignment"
		mov	[esp+2Ch+var_20], 4C8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [edi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_22 ; "_dbus_string_insert_alignment"
		mov	[esp+2Ch+var_20], 4C8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [edi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_22 ; "_dbus_string_insert_alignment"
		mov	[esp+2Ch+var_20], 4C8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [edi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_22 ; "_dbus_string_insert_alignment"
		mov	[esp+2Ch+var_20], 4C8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [edi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_22 ; "_dbus_string_insert_alignment"
		mov	[esp+2Ch+var_20], 4C8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [edi+8]
		sub	eax, 7
		cmp	eax, [edi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_22 ; "_dbus_string_insert_alignment"
		mov	[esp+2Ch+var_20], 4C8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [edi+4]
		cmp	eax, [edi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_22 ; "_dbus_string_insert_alignment"
		mov	[esp+2Ch+var_20], 4C8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [edi+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_22 ; "_dbus_string_insert_alignment"
		mov	[esp+2Ch+var_20], 4C8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [edi+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	edx, esi
		mov	ecx, ebx
		mov	eax, edi
		mov	[esp+2Ch+var_2C], 0
		call	sub_67E03E40
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67E04420
		mov	edx, [esi]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_22 ; "_dbus_string_insert_alignment"
		mov	[esp+2Ch+var_20], 4CDh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+ebx-1]
		neg	ebx
		and	eax, ebx
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset a_dbus_align__8 ; "_DBUS_ALIGN_VALUE (*insert_at, alignmen"...
		call	sub_67DFAE70
		mov	eax, 1

loc_67E04420:				; CODE XREF: sub_67E041F0+1EFj
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E041F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E04430	proc near		; CODE XREF: sub_67DFCC80+1DAp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_23 ; "_dbus_string_insert_8_aligned"
		mov	[esp+2Ch+var_20], 4ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_23 ; "_dbus_string_insert_8_aligned"
		mov	[esp+2Ch+var_20], 4ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_23 ; "_dbus_string_insert_8_aligned"
		mov	[esp+2Ch+var_20], 4ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_23 ; "_dbus_string_insert_8_aligned"
		mov	[esp+2Ch+var_20], 4ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_23 ; "_dbus_string_insert_8_aligned"
		mov	[esp+2Ch+var_20], 4ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_23 ; "_dbus_string_insert_8_aligned"
		mov	[esp+2Ch+var_20], 4ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_23 ; "_dbus_string_insert_8_aligned"
		mov	[esp+2Ch+var_20], 4ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_23 ; "_dbus_string_insert_8_aligned"
		mov	[esp+2Ch+var_20], 4ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_23 ; "_dbus_string_insert_8_aligned"
		mov	[esp+2Ch+var_20], 4ACh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	edx, [esp+2Ch+arg_4]
		mov	ecx, 8
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 8
		call	sub_67E03E40
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67E04671
		mov	edx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_23 ; "_dbus_string_insert_8_aligned"
		mov	[esp+2Ch+var_20], 4B1h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset a_dbus_align__9 ; "_DBUS_ALIGN_VALUE (insert_at, 8) ==	(un"...
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_8]
		mov	edx, [ebx]
		mov	ecx, [eax]
		mov	ebx, [eax+4]
		mov	eax, [esp+2Ch+arg_4]
		mov	[edx+eax], ecx
		mov	[edx+eax+4], ebx
		mov	eax, 1

loc_67E04671:				; CODE XREF: sub_67E04430+1EAj
		add	esp, 28h
		pop	ebx
		retn
sub_67E04430	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E04680	proc near		; CODE XREF: sub_67DFC960+99p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_24 ; "_dbus_string_insert_4_aligned"
		mov	[esp+2Ch+var_20], 494h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_24 ; "_dbus_string_insert_4_aligned"
		mov	[esp+2Ch+var_20], 494h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_24 ; "_dbus_string_insert_4_aligned"
		mov	[esp+2Ch+var_20], 494h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_24 ; "_dbus_string_insert_4_aligned"
		mov	[esp+2Ch+var_20], 494h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_24 ; "_dbus_string_insert_4_aligned"
		mov	[esp+2Ch+var_20], 494h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_24 ; "_dbus_string_insert_4_aligned"
		mov	[esp+2Ch+var_20], 494h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_24 ; "_dbus_string_insert_4_aligned"
		mov	[esp+2Ch+var_20], 494h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_24 ; "_dbus_string_insert_4_aligned"
		mov	[esp+2Ch+var_20], 494h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_24 ; "_dbus_string_insert_4_aligned"
		mov	[esp+2Ch+var_20], 494h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	edx, [esp+2Ch+arg_4]
		mov	ecx, 4
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 4
		call	sub_67E03E40
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67E04880
		mov	eax, [esp+2Ch+arg_8]
		mov	edx, [ebx]
		mov	ecx, [eax]
		mov	eax, [esp+2Ch+arg_4]
		mov	[edx+eax], ecx
		mov	eax, 1

loc_67E04880:				; CODE XREF: sub_67E04680+1EAj
		add	esp, 28h
		pop	ebx
		retn
sub_67E04680	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E04890	proc near		; CODE XREF: sub_67DFCC80+2EDp

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_25 ; "_dbus_string_insert_2_aligned"
		mov	[esp+2Ch+var_20], 47Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+var_2C], eax
		mov	[esp+2Ch+var_28], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_25 ; "_dbus_string_insert_2_aligned"
		mov	[esp+2Ch+var_20], 47Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_25 ; "_dbus_string_insert_2_aligned"
		mov	[esp+2Ch+var_20], 47Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_25 ; "_dbus_string_insert_2_aligned"
		mov	[esp+2Ch+var_20], 47Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_25 ; "_dbus_string_insert_2_aligned"
		mov	[esp+2Ch+var_20], 47Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_25 ; "_dbus_string_insert_2_aligned"
		mov	[esp+2Ch+var_20], 47Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_25 ; "_dbus_string_insert_2_aligned"
		mov	[esp+2Ch+var_20], 47Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_25 ; "_dbus_string_insert_2_aligned"
		mov	[esp+2Ch+var_20], 47Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_25 ; "_dbus_string_insert_2_aligned"
		mov	[esp+2Ch+var_20], 47Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		lea	edx, [esp+2Ch+arg_4]
		mov	ecx, 2
		mov	eax, ebx
		mov	[esp+2Ch+var_2C], 2
		call	sub_67E03E40
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67E04A92
		mov	eax, [esp+2Ch+arg_8]
		mov	edx, [ebx]
		movzx	ecx, word ptr [eax]
		mov	eax, [esp+2Ch+arg_4]
		mov	[edx+eax], cx
		mov	eax, 1

loc_67E04A92:				; CODE XREF: sub_67E04890+1EAj
		add	esp, 28h
		pop	ebx
		retn
sub_67E04890	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E04AA0	proc near		; CODE XREF: sub_67DD81B0+66p

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		mov	ecx, [esp+2Ch+arg_4]
		lea	edx, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_2C], 0
		mov	[esp+2Ch+var_10], eax
		mov	eax, ebx
		call	sub_67E03E40
		add	esp, 28h
		pop	ebx
		retn
sub_67E04AA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E04AD0(int,	int, size_t, int, int)
sub_67E04AD0	proc near		; CODE XREF: sub_67E05080+5Dp
					; sub_67E06B70+231p ...

Dst		= dword	ptr -4Ch
Src		= dword	ptr -48h
Size		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_C]
		mov	esi, [esp+4Ch+arg_0]
		mov	edi, [esp+4Ch+arg_4]
		mov	ebp, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		cmp	esi, ebx
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aSourceDest ; "(source) != (dest)"
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceNul ;	"(real_source) != NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceInv ;	"!(real_source)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceLen ;	"(real_source)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceAll ;	"(real_source)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceMax ;	"(real_source)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceL_0 ;	"(real_source)->len <= ((real_source)->a"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceL_1 ;	"(real_source)->len <= (real_source)->ma"...
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destNull ; "(real_dest) != NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destInval ;	"!(real_dest)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLen0 ; "(real_dest)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destAlloc ;	"(real_dest)->allocated	>= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destMax_l ;	"(real_dest)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLenRe ;	"(real_dest)->len <= ((real_dest)->alloc"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLen_0 ;	"(real_dest)->len <= (real_dest)->max_le"...
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destConst ;	"!real_dest->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLocke ;	"!real_dest->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aStart0_3	; "(start) >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aStartReal_sour ;	"(start) <= real_source->len"
		cmp	[esi+4], edi
		setnl	al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, [esp+4Ch+arg_10]
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+Src], offset aInsert_at0 ; "(insert_at) >= 0"
		call	sub_67DFAE70
		mov	eax, [esp+4Ch+arg_10]
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ah
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aInsert_atReal_ ;	"(insert_at) <=	real_dest->len"
		cmp	[ebx+4], eax
		setnl	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, ebp
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Bh
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aLen0_2 ;	"len >=	0"
		call	sub_67DFAE70
		lea	edx, [ebp+edi+0]
		xor	eax, eax
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_26 ; "_dbus_string_move_len"
		mov	[esp+4Ch+var_40], 61Ch
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aStartLenReal_s ;	"(start	+ len) <= real_source->len"
		cmp	edx, [esi+4]
		mov	[esp+4Ch+var_20], edx
		setle	al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		test	ebp, ebp
		mov	eax, 1
		jz	short loc_67E04F8C
		test	edi, edi
		jnz	short loc_67E04F7E
		mov	eax, [esi+4]
		cmp	eax, ebp
		jz	loc_67E05020

loc_67E04F7E:				; CODE XREF: sub_67E04AD0+4A1j
		mov	edx, [ebx+4]

loc_67E04F81:				; CODE XREF: sub_67E04AD0+555j
		mov	eax, [ebx+0Ch]
		sub	eax, edx
		cmp	ebp, eax
		jle	short loc_67E04F94

loc_67E04F8A:				; CODE XREF: sub_67E04AD0+4CFj
		xor	eax, eax

loc_67E04F8C:				; CODE XREF: sub_67E04AD0+49Dj
					; sub_67E04AD0+54Bj ...
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E04F94:				; CODE XREF: sub_67E04AD0+4B8j
		add	edx, ebp
		mov	eax, ebx
		call	sub_67E034F0
		test	eax, eax
		jz	short loc_67E04F8A
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		sub	eax, ebp
		sub	eax, [esp+4Ch+arg_10]
		mov	[esp+4Ch+Size],	eax ; Size
		mov	eax, [esp+4Ch+arg_10]
		lea	eax, [edx+eax]
		mov	[esp+4Ch+Src], eax ; Src
		mov	eax, [esp+4Ch+arg_10]
		add	eax, ebp
		lea	eax, [edx+eax]
		mov	[esp+4Ch+Dst], eax ; Dst
		call	memmove
		mov	[esp+4Ch+Size],	ebp ; Size
		mov	eax, [esi]
		add	eax, edi
		mov	[esp+4Ch+Src], eax ; Src
		mov	eax, [esp+4Ch+arg_10]
		add	eax, [ebx]
		mov	[esp+4Ch+Dst], eax ; Dst
		call	memmove
		mov	eax, [esi+4]
		sub	eax, [esp+4Ch+var_20]
		mov	edx, [esi]
		mov	[esp+4Ch+Size],	eax ; Size
		mov	eax, [esp+4Ch+var_20]
		lea	eax, [edx+eax]
		add	edx, edi
		mov	[esp+4Ch+Dst], edx ; Dst
		mov	[esp+4Ch+Src], eax ; Src
		call	memmove
		mov	eax, [esi+4]
		mov	edx, [esi]
		sub	eax, ebp
		mov	[esi+4], eax
		mov	byte ptr [edx+eax], 0
		mov	eax, 1
		jmp	loc_67E04F8C
; ---------------------------------------------------------------------------

loc_67E05020:				; CODE XREF: sub_67E04AD0+4A8j
		mov	edx, [ebx+4]
		test	edx, edx
		jnz	loc_67E04F81
		mov	edx, [esi+8]
		mov	ebp, [esi]
		mov	dword ptr [esi+4], 0
		mov	[esp+4Ch+var_24], edx
		mov	edx, [ebx]
		movzx	edi, byte ptr [esi+10h]
		mov	[esi], edx
		mov	edx, [ebx+8]
		mov	[esi+8], edx
		movzx	ecx, byte ptr [ebx+10h]
		mov	edx, edi
		and	edx, 0FFFFFFC7h
		and	edi, 38h
		and	ecx, 38h
		or	edx, ecx
		mov	[esi+10h], dl
		mov	[ebx+4], eax
		mov	eax, [esp+4Ch+var_24]
		mov	[ebx], ebp
		mov	[ebx+8], eax
		movzx	eax, byte ptr [ebx+10h]
		and	eax, 0FFFFFFC7h
		or	eax, edi
		mov	[ebx+10h], al
		mov	eax, 1
		jmp	loc_67E04F8C
sub_67E04AD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E05080	proc near		; CODE XREF: sub_67DC4660+380p
					; sub_67DD6770+C23p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_string_m ; "_dbus_string_move"
		mov	[esp+2Ch+var_20], 5E5h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aStartReal_so_0 ; "start <= real_source->len"
		cmp	[ebx+4], esi
		setnl	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_1C], eax ;	int
		mov	eax, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_20], eax ;	int
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_28], esi ;	int
		mov	[esp+2Ch+var_2C], ebx ;	int
		sub	eax, esi
		mov	[esp+2Ch+var_24], eax ;	size_t
		call	sub_67E04AD0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67E05080	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E050F0(int,	int, size_t, char)
sub_67E050F0	proc near		; CODE XREF: sub_67DDB920+72p
					; sub_67DDBB80+5E9p ...

Dst		= dword	ptr -3Ch
Src		= dword	ptr -38h
Size		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		mov	edi, [esp+3Ch+arg_4]
		mov	esi, [esp+3Ch+arg_8]
		movzx	ebp, [esp+3Ch+arg_C]
		test	ebx, ebx
		setnz	al
		mov	[esp+3Ch+Dst], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Dh
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aIRealLen_0 ; "i <= real->len"
		cmp	[ebx+4], edi
		setnl	al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Eh
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aI0 ; "i >= 0"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_27 ; "_dbus_string_insert_bytes"
		mov	[esp+3Ch+var_30], 24Fh
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aN_bytes0	; "n_bytes >= 0"
		call	sub_67DFAE70
		test	esi, esi
		mov	eax, 1
		jnz	short loc_67E05370

loc_67E05364:				; CODE XREF: sub_67E050F0+2E2j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E05370:				; CODE XREF: sub_67E050F0+272j
		mov	edx, [ebx+4]
		mov	eax, [ebx+0Ch]
		sub	eax, edx
		cmp	esi, eax
		jle	short loc_67E05386

loc_67E0537C:				; CODE XREF: sub_67E050F0+2A2j
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E05386:				; CODE XREF: sub_67E050F0+28Aj
		lea	edx, [esi+edx]
		mov	eax, ebx
		call	sub_67E034F0
		test	eax, eax
		jz	short loc_67E0537C
		mov	eax, [ebx+4]
		and	ebp, 0FFh
		mov	edx, [ebx]
		sub	eax, esi
		sub	eax, edi
		mov	[esp+3Ch+Size],	eax ; Size
		lea	eax, [edx+edi]
		mov	[esp+3Ch+Src], eax ; Src
		lea	eax, [esi+edi]
		add	edx, eax
		mov	[esp+3Ch+Dst], edx ; Dst
		call	memmove
		add	edi, [ebx]
		mov	[esp+3Ch+Size],	esi ; Size
		mov	[esp+3Ch+Src], ebp ; Val
		mov	[esp+3Ch+Dst], edi ; Dst
		call	memset
		mov	eax, 1
		jmp	short loc_67E05364
sub_67E050F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E053E0(int,	int, size_t, int, int, int)
sub_67E053E0	proc near		; CODE XREF: .text:67DC22A7p
					; sub_67DDD6B0+165p ...

Dst		= dword	ptr -4Ch
Src		= dword	ptr -48h
Size		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_C]
		mov	esi, [esp+4Ch+arg_0]
		mov	ebp, [esp+4Ch+arg_4]
		mov	edi, [esp+4Ch+arg_10]
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		cmp	esi, ebx
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aSourceDest ; "(source) != (dest)"
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceNul ;	"(real_source) != NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceInv ;	"!(real_source)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceLen ;	"(real_source)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceAll ;	"(real_source)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceMax ;	"(real_source)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceL_0 ;	"(real_source)->len <= ((real_source)->a"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_sourceL_1 ;	"(real_source)->len <= (real_source)->ma"...
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destNull ; "(real_dest) != NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destInval ;	"!(real_dest)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLen0 ; "(real_dest)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destAlloc ;	"(real_dest)->allocated	>= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destMax_l ;	"(real_dest)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLenRe ;	"(real_dest)->len <= ((real_dest)->alloc"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLen_0 ;	"(real_dest)->len <= (real_dest)->max_le"...
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destConst ;	"!real_dest->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReal_destLocke ;	"!real_dest->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, ebp
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aStart0_3	; "(start) >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aStartReal_sour ;	"(start) <= real_source->len"
		cmp	[esi+4], ebp
		setnl	al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+var_20], eax
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReplace_at0 ; "(replace_at) >= 0"
		call	sub_67DFAE70
		xor	edx, edx
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 683h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReplace_atReal ;	"(replace_at) <= real_dest->len"
		cmp	[ebx+4], edi
		setnl	dl
		mov	[esp+4Ch+Dst], edx
		call	sub_67DFAE70
		mov	edx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 684h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	edx
		shr	edx, 1Fh
		mov	[esp+4Ch+Dst], edx
		mov	[esp+4Ch+Src], offset aLen0_2 ;	"len >=	0"
		call	sub_67DFAE70
		xor	edx, edx
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 685h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aStartReal_so_0 ;	"start <= real_source->len"
		cmp	[esi+4], ebp
		setnl	dl
		mov	[esp+4Ch+Dst], edx
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 686h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aLenReal_source ;	"len <=	real_source->len - start"
		mov	edx, [esi+4]
		sub	edx, ebp
		cmp	edx, [esp+4Ch+arg_8]
		setnl	dl
		movzx	edx, dl
		mov	[esp+4Ch+Dst], edx
		call	sub_67DFAE70
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 687h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+Src], offset aReplace_at0_0 ; "replace_at >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 688h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReplace_atRe_0 ;	"replace_at <= real_dest->len"
		cmp	[ebx+4], edi
		setnl	al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_string_r ; "_dbus_string_replace_len"
		mov	[esp+4Ch+var_40], 689h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aReplace_lenRea ;	"replace_len <=	real_dest->len - replace"...
		mov	eax, [ebx+4]
		sub	eax, edi
		cmp	eax, [esp+4Ch+arg_14]
		setnl	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	ecx, [esp+4Ch+arg_8]
		test	ecx, ecx
		jnz	short loc_67E05954

loc_67E0593F:				; CODE XREF: sub_67E053E0+631j
		mov	edx, [esp+4Ch+arg_14]
		mov	eax, 1
		test	edx, edx
		jnz	short loc_67E05970
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E05954:				; CODE XREF: sub_67E053E0+55Dj
		mov	edx, [ebx+4]
		mov	eax, [ebx+0Ch]
		sub	eax, edx
		cmp	[esp+4Ch+arg_8], eax
		jle	short loc_67E059C0

loc_67E05962:				; CODE XREF: sub_67E053E0+5EDj
		add	esp, 3Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E05970:				; CODE XREF: sub_67E053E0+56Aj
		add	edi, [esp+4Ch+arg_8]
		mov	edx, [ebx]
		mov	eax, edi
		neg	eax
		sub	eax, [esp+4Ch+arg_14]
		add	eax, [ebx+4]
		mov	[esp+4Ch+Size],	eax ; Size
		mov	eax, [esp+4Ch+arg_14]
		add	eax, edi
		lea	eax, [edx+eax]
		lea	edi, [edx+edi]
		mov	[esp+4Ch+Dst], edi ; Dst
		mov	[esp+4Ch+Src], eax ; Src
		call	memmove
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		sub	eax, [esp+4Ch+arg_14]
		mov	[ebx+4], eax
		mov	byte ptr [edx+eax], 0
		add	esp, 3Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E059C0:				; CODE XREF: sub_67E053E0+580j
		add	edx, [esp+4Ch+arg_8]
		mov	eax, ebx
		call	sub_67E034F0
		test	eax, eax
		jz	short loc_67E05962
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		sub	eax, [esp+4Ch+arg_8]
		sub	eax, edi
		mov	[esp+4Ch+Size],	eax ; Size
		lea	eax, [edx+edi]
		mov	[esp+4Ch+Src], eax ; Src
		mov	eax, [esp+4Ch+arg_8]
		lea	eax, [edi+eax]
		lea	eax, [edx+eax]
		mov	[esp+4Ch+Dst], eax ; Dst
		call	memmove
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+Size],	eax ; Size
		add	ebp, [esi]
		mov	[esp+4Ch+Src], ebp ; Src
		mov	eax, [ebx]
		add	eax, edi
		mov	[esp+4Ch+Dst], eax ; Dst
		call	memmove
		jmp	loc_67E0593F
sub_67E053E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E05A20(int,	int, size_t, int, int)
sub_67E05A20	proc near		; CODE XREF: dbus_parse_address+13Fp
					; dbus_parse_address+259p ...

Dst		= dword	ptr -3Ch
Src		= dword	ptr -38h
Size		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+3Ch+arg_0]
		mov	ebx, [esp+3Ch+arg_C]
		mov	edi, [esp+3Ch+arg_4]
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		cmp	esi, ebx
		setnz	al
		mov	[esp+3Ch+Dst], eax
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aSourceDest ; "(source) != (dest)"
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+3Ch+Dst], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_sourceNul ;	"(real_source) != NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_sourceInv ;	"!(real_source)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_sourceLen ;	"(real_source)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_sourceAll ;	"(real_source)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_sourceMax ;	"(real_source)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_sourceL_0 ;	"(real_source)->len <= ((real_source)->a"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_sourceL_1 ;	"(real_source)->len <= (real_source)->ma"...
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	ebx, ebx
		setnz	al
		mov	[esp+3Ch+Dst], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_destNull ; "(real_dest) != NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_destInval ;	"!(real_dest)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_destLen0 ; "(real_dest)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_destAlloc ;	"(real_dest)->allocated	>= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_destMax_l ;	"(real_dest)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_destLenRe ;	"(real_dest)->len <= ((real_dest)->alloc"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_destLen_0 ;	"(real_dest)->len <= (real_dest)->max_le"...
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_destConst ;	"!real_dest->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aReal_destLocke ;	"!real_dest->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aStart0_3	; "(start) >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aStartReal_sour ;	"(start) <= real_source->len"
		cmp	[esi+4], edi
		setnl	al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		mov	[esp+3Ch+Src], offset aInsert_at0 ; "(insert_at) >= 0"
		call	sub_67DFAE70
		mov	eax, [esp+3Ch+arg_10]
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Ch
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aInsert_atReal_ ;	"(insert_at) <=	real_dest->len"
		cmp	[ebx+4], eax
		setnl	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, ebp
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Dh
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aLen0_2 ;	"len >=	0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Eh
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aStartReal_so_0 ;	"start <= real_source->len"
		cmp	[esi+4], edi
		setnl	al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_28 ; "_dbus_string_copy_len"
		mov	[esp+3Ch+var_30], 65Fh
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aLenReal_source ;	"len <=	real_source->len - start"
		mov	eax, [esi+4]
		sub	eax, edi
		cmp	eax, ebp
		setnl	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		test	ebp, ebp
		mov	eax, 1
		jnz	short loc_67E05EF4

loc_67E05EEC:				; CODE XREF: sub_67E05A20+546j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E05EF4:				; CODE XREF: sub_67E05A20+4CAj
		mov	edx, [ebx+4]
		mov	eax, [ebx+0Ch]
		sub	eax, edx
		cmp	ebp, eax
		jle	short loc_67E05F10

loc_67E05F00:				; CODE XREF: sub_67E05A20+4FDj
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E05F10:				; CODE XREF: sub_67E05A20+4DEj
		lea	edx, [ebp+edx+0]
		mov	eax, ebx
		call	sub_67E034F0
		test	eax, eax
		jz	short loc_67E05F00
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		sub	eax, ebp
		sub	eax, [esp+3Ch+arg_10]
		mov	[esp+3Ch+Size],	eax ; Size
		mov	eax, [esp+3Ch+arg_10]
		lea	eax, [edx+eax]
		mov	[esp+3Ch+Src], eax ; Src
		mov	eax, [esp+3Ch+arg_10]
		add	eax, ebp
		add	edx, eax
		mov	[esp+3Ch+Dst], edx ; Dst
		call	memmove
		mov	eax, [esp+3Ch+arg_10]
		mov	[esp+3Ch+Size],	ebp ; Size
		add	edi, [esi]
		mov	[esp+3Ch+Src], edi ; Src
		add	eax, [ebx]
		mov	[esp+3Ch+Dst], eax ; Dst
		call	memmove
		mov	eax, 1
		jmp	short loc_67E05EEC
sub_67E05A20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E05F70	proc near		; CODE XREF: dbus_address_unescape_value+10Dp
					; dbus_address_escape_value+7Bp ...

Dst		= dword	ptr -5Ch
Src		= dword	ptr -58h
Size		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_2D		= byte ptr -2Dh
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, [esp+5Ch+arg_0]
		mov	edi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_29 ; "_dbus_string_steal_data"
		mov	[esp+5Ch+var_50], 284h
		test	ebx, ebx
		setnz	al
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_29 ; "_dbus_string_steal_data"
		mov	[esp+5Ch+var_50], 284h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_29 ; "_dbus_string_steal_data"
		mov	[esp+5Ch+var_50], 284h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_29 ; "_dbus_string_steal_data"
		mov	[esp+5Ch+var_50], 284h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_29 ; "_dbus_string_steal_data"
		mov	[esp+5Ch+var_50], 284h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_29 ; "_dbus_string_steal_data"
		mov	[esp+5Ch+var_50], 284h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_29 ; "_dbus_string_steal_data"
		mov	[esp+5Ch+var_50], 284h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_29 ; "_dbus_string_steal_data"
		mov	[esp+5Ch+var_50], 284h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_29 ; "_dbus_string_steal_data"
		mov	[esp+5Ch+var_50], 284h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	edi, edi
		setnz	al
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_29 ; "_dbus_string_steal_data"
		mov	[esp+5Ch+var_50], 285h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aData_returnNul ;	"data_return !=	NULL"
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+10h]
		test	al, 38h
		jnz	loc_67E06318
		mov	eax, [ebx]

loc_67E06181:				; CODE XREF: sub_67E05F70+3E0j
		mov	[edi], eax
		mov	esi, [ebx+0Ch]
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_19 ; "_dbus_string_init_preallocated"
		mov	[esp+5Ch+var_50], 89h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aStrNull_0 ; "str	!= NULL"
		mov	[esp+5Ch+Dst], 1
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_19 ; "_dbus_string_init_preallocated"
		mov	[esp+5Ch+var_50], 8Bh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aSizeofDbusstri ;	"sizeof	(DBusString) ==	sizeof (DBusReal"...
		mov	[esp+5Ch+Dst], 1
		call	sub_67DFAE70
		mov	[esp+5Ch+Dst], 8 ; Size
		call	dbus_malloc
		test	eax, eax
		mov	[ebx], eax
		jz	loc_67E06355
		mov	dword ptr [ebx+8], 8
		mov	ebp, 7
		mov	dword ptr [ebx+4], 0
		mov	byte ptr [eax],	0
		and	byte ptr [ebx+10h], 0C0h
		mov	dword ptr [ebx+0Ch], 7FFFFFF7h
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 56h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealA_0 ;	"real->len <= real->allocated -	_DBUS_ST"...
		mov	[esp+5Ch+Dst], 1
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		and	ebp, eax
		mov	eax, ebp
		neg	eax
		add	eax, [ebx]
		lea	ecx, [eax+7]
		and	ecx, 0FFFFFFF8h
		mov	edx, ecx
		sub	dl, al
		and	edx, 7
		mov	[esp+5Ch+var_2D], dl
		shl	edx, 3
		mov	[esp+5Ch+var_1D], dl
		movzx	edx, byte ptr [ebx+10h]
		mov	[ebx], ecx
		and	edx, 0FFFFFFC7h
		mov	edi, edx
		movzx	edx, [esp+5Ch+var_1D]
		or	edi, edx
		mov	edx, edi
		mov	[ebx+10h], dl
		movzx	edx, [esp+5Ch+var_2D]
		cmp	ebp, edx
		jz	short loc_67E062A4
		mov	ecx, [ebx+4]
		lea	ebp, [eax+ebp]
		lea	edx, [eax+edx]
		mov	[esp+5Ch+Src], ebp ; Src
		mov	[esp+5Ch+Dst], edx ; Dst
		add	ecx, 1
		mov	[esp+5Ch+Size],	ecx ; Size
		call	memmove

loc_67E062A4:				; CODE XREF: sub_67E05F70+316j
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 68h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAlign_offs ;	"real->align_offset < 8"
		mov	[esp+5Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 69h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+Src], offset a_dbus_align__7 ;	"_DBUS_ALIGN_ADDRESS (real->str, 8) == r"...
		call	sub_67DFAE70
		mov	eax, 1
		mov	[ebx+0Ch], esi
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E06318:				; CODE XREF: sub_67E05F70+209j
		mov	edx, [ebx]
		shr	al, 3
		mov	ecx, [ebx+4]
		and	eax, 7
		mov	[esp+5Ch+Src], edx ; Src
		sub	edx, eax
		add	ecx, 1
		mov	[esp+5Ch+Dst], edx ; Dst
		mov	[esp+5Ch+Size],	ecx ; Size
		call	memmove
		movzx	edx, byte ptr [ebx+10h]
		mov	eax, edx
		and	edx, 0FFFFFFC7h
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [ebx]
		mov	[ebx+10h], dl
		mov	[ebx], eax
		jmp	loc_67E06181
; ---------------------------------------------------------------------------

loc_67E06355:				; CODE XREF: sub_67E05F70+27Ej
		mov	eax, [edi]
		mov	dword ptr [edi], 0
		mov	edi, 7
		mov	[ebx], eax
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 56h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealA_0 ;	"real->len <= real->allocated -	_DBUS_ST"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		movzx	esi, byte ptr [ebx+10h]
		mov	eax, esi
		and	esi, 0FFFFFFC7h
		shr	al, 3
		and	edi, eax
		mov	eax, edi
		neg	eax
		add	eax, [ebx]
		lea	ecx, [eax+7]
		and	ecx, 0FFFFFFF8h
		mov	edx, ecx
		sub	dl, al
		and	edx, 7
		lea	ebp, ds:0[edx*8]
		or	esi, ebp
		mov	[esp+5Ch+var_1D], dl
		mov	edx, esi
		mov	[ebx+10h], dl
		movzx	edx, [esp+5Ch+var_1D]
		mov	[ebx], ecx
		cmp	edi, edx
		jz	short loc_67E063F5
		mov	ecx, [ebx+4]
		lea	edi, [eax+edi]
		lea	edx, [eax+edx]
		mov	[esp+5Ch+Src], edi ; Src
		mov	[esp+5Ch+Dst], edx ; Dst
		add	ecx, 1
		mov	[esp+5Ch+Size],	ecx ; Size
		call	memmove

loc_67E063F5:				; CODE XREF: sub_67E05F70+467j
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 68h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAlign_offs ;	"real->align_offset < 8"
		mov	[esp+5Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 69h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+Src], offset a_dbus_align__7 ;	"_DBUS_ALIGN_ADDRESS (real->str, 8) == r"...
		call	sub_67DFAE70
		add	esp, 4Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E05F70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E06470	proc near		; CODE XREF: sub_67DE5570+588p
					; sub_67DF5890+1DCp ...

Dst		= dword	ptr -4Ch
Src		= dword	ptr -48h
Size		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_30 ; "_dbus_string_compact"
		mov	[esp+4Ch+var_40], 187h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_30 ; "_dbus_string_compact"
		mov	[esp+4Ch+var_40], 187h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_30 ; "_dbus_string_compact"
		mov	[esp+4Ch+var_40], 187h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_30 ; "_dbus_string_compact"
		mov	[esp+4Ch+var_40], 187h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_30 ; "_dbus_string_compact"
		mov	[esp+4Ch+var_40], 187h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_30 ; "_dbus_string_compact"
		mov	[esp+4Ch+var_40], 187h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_30 ; "_dbus_string_compact"
		mov	[esp+4Ch+var_40], 187h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_30 ; "_dbus_string_compact"
		mov	[esp+4Ch+var_40], 187h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+4Ch+var_3C], offset a_dbus_strin_30 ; "_dbus_string_compact"
		mov	[esp+4Ch+var_40], 187h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		mov	edx, [ebx+8]
		mov	eax, 1
		mov	esi, [ebx+4]
		sub	edx, 8
		sub	edx, esi
		cmp	[esp+4Ch+arg_4], edx
		jl	short loc_67E06660

loc_67E06656:				; CODE XREF: sub_67E06470+213j
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E06660:				; CODE XREF: sub_67E06470+1E4j
		lea	edi, [esi+8]
		mov	[esp+4Ch+Src], edi ; NewSize
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [ebx]
		mov	[esp+4Ch+Dst], eax ; Memory
		call	dbus_realloc
		mov	ecx, eax
		xor	eax, eax
		test	ecx, ecx
		jz	short loc_67E06656
		movzx	edx, byte ptr [ebx+10h]
		add	esi, 1
		xor	eax, eax
		mov	[ebx+8], edi
		mov	edi, 7
		shr	dl, 3
		and	edx, 7
		add	ecx, edx
		mov	[ebx], ecx
		mov	[esp+4Ch+var_3C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+4Ch+var_40], 56h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealLenRealA_0 ;	"real->len <= real->allocated -	_DBUS_ST"...
		cmp	esi, [ebx+4]
		setnle	al
		mov	[esp+4Ch+Dst], eax
		call	sub_67DFAE70
		movzx	esi, byte ptr [ebx+10h]
		mov	eax, esi
		and	esi, 0FFFFFFC7h
		shr	al, 3
		and	edi, eax
		mov	eax, edi
		neg	eax
		add	eax, [ebx]
		lea	ecx, [eax+7]
		and	ecx, 0FFFFFFF8h
		mov	edx, ecx
		sub	dl, al
		and	edx, 7
		lea	ebp, ds:0[edx*8]
		or	esi, ebp
		mov	[esp+4Ch+var_1D], dl
		mov	edx, esi
		mov	[ebx+10h], dl
		movzx	edx, [esp+4Ch+var_1D]
		mov	[ebx], ecx
		cmp	edi, edx
		jz	short loc_67E06728
		mov	ecx, [ebx+4]
		lea	edi, [eax+edi]
		lea	edx, [eax+edx]
		mov	[esp+4Ch+Src], edi ; Src
		mov	[esp+4Ch+Dst], edx ; Dst
		add	ecx, 1
		mov	[esp+4Ch+Size],	ecx ; Size
		call	memmove

loc_67E06728:				; CODE XREF: sub_67E06470+29Aj
		mov	[esp+4Ch+var_3C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+4Ch+var_40], 68h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+Src], offset aRealAlign_offs ;	"real->align_offset < 8"
		mov	[esp+4Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	[esp+4Ch+var_3C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+4Ch+var_40], 69h
		mov	[esp+4Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+4Ch+Dst], eax
		mov	[esp+4Ch+Src], offset a_dbus_align__7 ;	"_DBUS_ALIGN_ADDRESS (real->str, 8) == r"...
		call	sub_67DFAE70
		add	esp, 3Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E06470	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E067A0	proc near		; CODE XREF: sub_67DC1510+108p
					; sub_67DC1FA0+61p ...

Dst		= dword	ptr -6Ch
Src		= dword	ptr -68h
Size		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_44		= dword	ptr -44h
var_3D		= byte ptr -3Dh
var_30		= dword	ptr -30h
NewSize		= dword	ptr -2Ch
var_24		= dword	ptr -24h
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebx, [esp+6Ch+arg_0]
		movzx	ebp, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_5C], offset a_dbus_string_a ; "_dbus_string_append_byte"
		mov	[esp+6Ch+var_60], 533h
		test	ebx, ebx
		setnz	al
		mov	[esp+6Ch+Dst], eax
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_string_a ; "_dbus_string_append_byte"
		mov	[esp+6Ch+var_60], 533h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+6Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_string_a ; "_dbus_string_append_byte"
		mov	[esp+6Ch+var_60], 533h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_string_a ; "_dbus_string_append_byte"
		mov	[esp+6Ch+var_60], 533h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_string_a ; "_dbus_string_append_byte"
		mov	[esp+6Ch+var_60], 533h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_string_a ; "_dbus_string_append_byte"
		mov	[esp+6Ch+var_60], 533h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+6Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_string_a ; "_dbus_string_append_byte"
		mov	[esp+6Ch+var_60], 533h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+6Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_string_a ; "_dbus_string_append_byte"
		mov	[esp+6Ch+var_60], 533h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+6Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_string_a ; "_dbus_string_append_byte"
		mov	[esp+6Ch+var_60], 533h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+6Ch+Dst], eax
		call	sub_67DFAE70
		mov	edi, [ebx+4]
		lea	esi, [edi+1]
		cmp	esi, [ebx+0Ch]
		jle	short loc_67E06987

loc_67E06980:				; CODE XREF: sub_67E067A0+263j
		xor	eax, eax
		jmp	loc_67E06B3A
; ---------------------------------------------------------------------------

loc_67E06987:				; CODE XREF: sub_67E067A0+1DEj
		mov	eax, [ebx+8]
		lea	edx, [eax-7]
		cmp	esi, edx
		jl	loc_67E06B20
		cmp	eax, 3FFFFFFFh
		jle	loc_67E06B42
		mov	eax, 7FFFFFFFh
		mov	ecx, 1
		mov	edx, 7FFFFFFFh

loc_67E069AF:				; CODE XREF: sub_67E067A0+3B5j
					; sub_67E067A0+3CBj
		mov	[esp+6Ch+var_30], edx
		mov	[esp+6Ch+Dst], ecx
		mov	[esp+6Ch+NewSize], eax
		mov	[esp+6Ch+var_5C], offset aReallocate_for ; "reallocate_for_length"
		mov	[esp+6Ch+var_60], 16Ch
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aNew_allocatedR ;	"new_allocated >= real->allocated"
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+NewSize]
		mov	[esp+6Ch+Src], eax ; NewSize
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [ebx]
		mov	[esp+6Ch+Dst], eax ; Memory
		call	dbus_realloc
		mov	edx, [esp+6Ch+var_30]
		test	eax, eax
		jz	loc_67E06980
		movzx	ecx, byte ptr [ebx+10h]
		mov	[ebx+8], edx
		sub	edx, 7
		shr	cl, 3
		and	ecx, 7
		add	eax, ecx
		mov	[ebx], eax
		xor	eax, eax
		mov	[esp+6Ch+var_5C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+6Ch+var_60], 56h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealLenRealA_0 ;	"real->len <= real->allocated -	_DBUS_ST"...
		cmp	edx, [ebx+4]
		setnle	al
		mov	[esp+6Ch+Dst], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		mov	edx, eax
		and	edx, 7
		mov	eax, edx
		neg	eax
		add	eax, [ebx]
		mov	[esp+6Ch+var_24], edx
		lea	ecx, [eax+7]
		and	ecx, 0FFFFFFF8h
		mov	[esp+6Ch+var_44], ecx
		sub	cl, al
		and	ecx, 7
		mov	[esp+6Ch+var_3D], cl
		shl	ecx, 3
		mov	[esp+6Ch+var_1D], cl
		movzx	ecx, byte ptr [ebx+10h]
		and	ecx, 0FFFFFFC7h
		or	cl, [esp+6Ch+var_1D]
		mov	[ebx+10h], cl
		mov	edx, [esp+6Ch+var_44]
		mov	[ebx], edx
		movzx	edx, [esp+6Ch+var_3D]
		cmp	[esp+6Ch+var_24], edx
		jz	short loc_67E06ABC
		mov	ecx, [ebx+4]
		lea	edx, [eax+edx]
		mov	[esp+6Ch+Dst], edx ; Dst
		add	ecx, 1
		mov	[esp+6Ch+Size],	ecx ; Size
		mov	ecx, [esp+6Ch+var_24]
		lea	ecx, [eax+ecx]
		mov	[esp+6Ch+Src], ecx ; Src
		call	memmove

loc_67E06ABC:				; CODE XREF: sub_67E067A0+2FAj
		mov	[esp+6Ch+var_5C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+6Ch+var_60], 68h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+Src], offset aRealAlign_offs ;	"real->align_offset < 8"
		mov	[esp+6Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	[esp+6Ch+var_5C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+6Ch+var_60], 69h
		mov	[esp+6Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+6Ch+Src], offset a_dbus_align__7 ;	"_DBUS_ALIGN_ADDRESS (real->str, 8) == r"...
		mov	[esp+6Ch+Dst], eax
		call	sub_67DFAE70

loc_67E06B20:				; CODE XREF: sub_67E067A0+1EFj
		mov	eax, [ebx]
		mov	ecx, ebp
		mov	[ebx+4], esi
		mov	byte ptr [eax+edi+1], 0
		mov	eax, [ebx+4]
		mov	edx, [ebx]
		mov	[edx+eax-1], cl
		mov	eax, 1

loc_67E06B3A:				; CODE XREF: sub_67E067A0+1E2j
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E06B42:				; CODE XREF: sub_67E067A0+1FAj
		lea	edx, [edi+9]
		lea	ecx, [eax+eax]
		cmp	edx, ecx
		jl	short loc_67E06B60
		xor	ecx, ecx
		cmp	eax, edx
		setle	cl
		mov	eax, edx
		jmp	loc_67E069AF
; ---------------------------------------------------------------------------
		align 10h

loc_67E06B60:				; CODE XREF: sub_67E067A0+3AAj
		mov	edx, ecx
		xor	ecx, ecx
		cmp	eax, edx
		mov	eax, edx
		setle	cl
		jmp	loc_67E069AF
sub_67E067A0	endp


; =============== S U B	R O U T	I N E =======================================


sub_67E06B70	proc near		; CODE XREF: sub_67DC1510+C0p
					; sub_67DC2FB0+60p ...

Size		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_44		= byte ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	eax, [esp+6Ch+arg_0]
		mov	ebx, [esp+6Ch+arg_4]
		mov	[esp+6Ch+Size],	eax
		call	sub_67E00CE0
		mov	[esp+6Ch+var_5C], offset a_dbus_string_h ; "_dbus_string_hex_decode"
		mov	[esp+6Ch+var_60], 0A32h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aStart_dbus_s_0 ; "start <= _dbus_string_get_length (sourc"...
		cmp	eax, ebx
		setnl	al
		xor	esi, esi
		movzx	eax, al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_strin_19 ; "_dbus_string_init_preallocated"
		mov	[esp+6Ch+var_60], 89h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aStrNull_0 ; "str != NULL"
		mov	[esp+6Ch+Size],	1
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_strin_19 ; "_dbus_string_init_preallocated"
		mov	[esp+6Ch+var_60], 8Bh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aSizeofDbusstri ; "sizeof (DBusString)	== sizeof (DBusReal"...
		mov	[esp+6Ch+Size],	1
		call	sub_67DFAE70
		mov	[esp+6Ch+Size],	8 ; Size
		call	dbus_malloc
		test	eax, eax
		mov	[esp+6Ch+var_30], eax
		jz	loc_67E06DB8
		mov	[esp+6Ch+var_28], 8
		lea	edi, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_2C], 0
		mov	byte ptr [eax],	0
		mov	[esp+6Ch+var_24], 7FFFFFF7h
		and	[esp+6Ch+var_20], 0C0h
		mov	[esp+6Ch+var_5C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+6Ch+var_60], 56h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aRealLenRealA_0 ; "real->len <= real->allocated - _DBUS_ST"...
		mov	[esp+6Ch+Size],	1
		call	sub_67DFAE70
		movzx	esi, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_5C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+6Ch+var_60], 68h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	eax, esi
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_68], offset aRealAlign_offs ; "real->align_offset < 8"
		mov	[esp+6Ch+Size],	1
		lea	edx, [eax+7]
		and	edx, 0FFFFFFF8h
		mov	ecx, edx
		sub	cl, al
		mov	eax, esi
		and	ecx, 7
		and	eax, 0FFFFFFC7h
		shl	ecx, 3
		or	eax, ecx
		mov	[esp+6Ch+var_20], al
		mov	[esp+6Ch+var_30], edx
		call	sub_67DFAE70
		mov	edx, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_5C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+6Ch+var_60], 69h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+6Ch+Size],	eax
		mov	[esp+6Ch+var_68], offset a_dbus_align__7 ; "_DBUS_ALIGN_ADDRESS	(real->str, 8) == r"...
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+arg_0]
		mov	[esp+6Ch+Size],	eax
		call	sub_67E01770
		mov	esi, eax
		mov	eax, [esp+6Ch+arg_0]
		lea	ebx, [esi+ebx]
		mov	[esp+6Ch+Size],	eax
		call	sub_67E00CE0
		lea	eax, [esi+eax]
		cmp	eax, ebx
		mov	[esp+6Ch+var_40], eax
		jz	short loc_67E06D4A ; jumptable 67E06DC5	default	case
		mov	esi, 1
		xchg	ax, ax

loc_67E06D40:				; CODE XREF: sub_67E06B70+294j
		movzx	eax, byte ptr [ebx]
		sub	eax, 30h
		cmp	al, 36h		; switch 55 cases
		jbe	short loc_67E06DC2

loc_67E06D4A:				; CODE XREF: sub_67E06B70+1C7j
					; sub_67E06B70+255j ...
		mov	eax, [esp+6Ch+var_2C] ;	jumptable 67E06DC5 default case
		mov	[esp+6Ch+var_5C], offset a_dbus_string_m ; "_dbus_string_move"
		mov	[esp+6Ch+var_60], 5E5h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+Size],	eax
		mov	[esp+6Ch+var_68], offset aStartReal_so_0 ; "start <= real_source->len"
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+arg_10]
		mov	[esp+6Ch+var_68], 0 ; int
		mov	[esp+6Ch+Size],	edi ; int
		mov	[esp+6Ch+var_5C], eax ;	int
		mov	eax, [esp+6Ch+arg_C]
		mov	[esp+6Ch+var_60], eax ;	int
		mov	eax, [esp+6Ch+var_2C]
		mov	[esp+6Ch+var_64], eax ;	size_t
		call	sub_67E04AD0
		test	eax, eax
		jnz	loc_67E06F30

loc_67E06DAE:				; CODE XREF: sub_67E06B70+282j
		xor	esi, esi

loc_67E06DB0:				; CODE XREF: sub_67E06B70+3CBj
					; sub_67E06B70+3E5j
		mov	[esp+6Ch+Size],	edi
		call	sub_67E02BF0

loc_67E06DB8:				; CODE XREF: sub_67E06B70+B3j
		add	esp, 5Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E06DC2:				; CODE XREF: sub_67E06B70+1D8j
		movzx	eax, al
		jmp	ds:off_67E2B9C8[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_67E06DD0:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 0F0h	; jumptable 67E06DC5 cases 22,54
		mov	edx, 0Fh
		lea	esi, [esi+0]

loc_67E06DE0:				; CODE XREF: sub_67E06B70+2EAj
					; sub_67E06B70+2FAj ...
		test	esi, esi
		jz	short loc_67E06E18

loc_67E06DE4:				; CODE XREF: sub_67E06B70+2A6j
		mov	[esp+6Ch+var_68], eax
		mov	[esp+6Ch+Size],	edi
		call	sub_67E067A0
		test	eax, eax
		jz	short loc_67E06DAE

loc_67E06DF4:				; CODE XREF: sub_67E06B70+2DDj
		add	ebx, 1
		cmp	[esp+6Ch+var_40], ebx
		jz	loc_67E06D4A	; jumptable 67E06DC5 default case
		xor	esi, 1
		jmp	loc_67E06D40
; ---------------------------------------------------------------------------
		align 10h

loc_67E06E10:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		xor	eax, eax	; jumptable 67E06DC5 case 0
		xor	edx, edx
		test	esi, esi
		jnz	short loc_67E06DE4

loc_67E06E18:				; CODE XREF: sub_67E06B70+272j
		mov	[esp+6Ch+var_44], dl
		mov	[esp+6Ch+Size],	edi
		call	sub_67E00CE0
		mov	[esp+6Ch+Size],	edi
		lea	ebp, [eax-1]
		mov	[esp+6Ch+var_68], ebp
		call	sub_67E00E50
		movzx	edx, [esp+6Ch+var_44]
		mov	[esp+6Ch+var_68], ebp
		mov	[esp+6Ch+Size],	edi
		or	eax, edx
		movzx	eax, al
		mov	[esp+6Ch+var_64], eax
		call	sub_67E01030
		jmp	short loc_67E06DF4
; ---------------------------------------------------------------------------
		align 10h

loc_67E06E50:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 20h	; jumptable 67E06DC5 case 2
		mov	edx, 2
		jmp	short loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06E60:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 10h	; jumptable 67E06DC5 case 1
		mov	edx, 1
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06E70:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 60h	; jumptable 67E06DC5 case 6
		mov	edx, 6
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06E80:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 50h	; jumptable 67E06DC5 case 5
		mov	edx, 5
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06E90:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 40h	; jumptable 67E06DC5 case 4
		mov	edx, 4
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06EA0:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 30h	; jumptable 67E06DC5 case 3
		mov	edx, 3
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06EB0:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 0E0h	; jumptable 67E06DC5 cases 21,53
		mov	edx, 0Eh
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06EC0:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 0D0h	; jumptable 67E06DC5 cases 20,52
		mov	edx, 0Dh
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06ED0:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 0C0h	; jumptable 67E06DC5 cases 19,51
		mov	edx, 0Ch
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06EE0:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 0B0h	; jumptable 67E06DC5 cases 18,50
		mov	edx, 0Bh
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06EF0:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 0A0h	; jumptable 67E06DC5 cases 17,49
		mov	edx, 0Ah
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06F00:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 90h	; jumptable 67E06DC5 case 9
		mov	edx, 9
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06F10:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 80h	; jumptable 67E06DC5 case 8
		mov	edx, 8
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06F20:				; CODE XREF: sub_67E06B70+255j
					; DATA XREF: .rdata:off_67E2B9C8o
		mov	eax, 70h	; jumptable 67E06DC5 case 7
		mov	edx, 7
		jmp	loc_67E06DE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E06F30:				; CODE XREF: sub_67E06B70+238j
		mov	ebp, [esp+6Ch+arg_8]
		mov	esi, 1
		test	ebp, ebp
		jz	loc_67E06DB0
		mov	eax, [esp+6Ch+arg_0]
		mov	[esp+6Ch+Size],	eax
		call	sub_67E01770
		sub	ebx, eax
		mov	eax, [esp+6Ch+arg_8]
		mov	[eax], ebx
		jmp	loc_67E06DB0
sub_67E06B70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E06F60	proc near		; CODE XREF: sub_67DC1FA0+BCp
					; sub_67DC27B0+23p ...

Dst		= dword	ptr -5Ch
Src		= dword	ptr -58h
Size		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_2D		= byte ptr -2Dh
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, [esp+5Ch+arg_0]
		mov	esi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_31 ; "_dbus_string_set_length"
		mov	[esp+5Ch+var_50], 38Dh
		test	ebx, ebx
		setnz	al
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_31 ; "_dbus_string_set_length"
		mov	[esp+5Ch+var_50], 38Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_31 ; "_dbus_string_set_length"
		mov	[esp+5Ch+var_50], 38Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_31 ; "_dbus_string_set_length"
		mov	[esp+5Ch+var_50], 38Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_31 ; "_dbus_string_set_length"
		mov	[esp+5Ch+var_50], 38Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_31 ; "_dbus_string_set_length"
		mov	[esp+5Ch+var_50], 38Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_31 ; "_dbus_string_set_length"
		mov	[esp+5Ch+var_50], 38Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_31 ; "_dbus_string_set_length"
		mov	[esp+5Ch+var_50], 38Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_31 ; "_dbus_string_set_length"
		mov	[esp+5Ch+var_50], 38Dh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_31 ; "_dbus_string_set_length"
		mov	[esp+5Ch+var_50], 38Eh
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aLength0 ; "length >= 0"
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		cmp	esi, [ebx+0Ch]
		jle	loc_67E07173

loc_67E0716C:				; CODE XREF: sub_67E06F60+27Fj
		xor	eax, eax
		jmp	loc_67E072FF
; ---------------------------------------------------------------------------

loc_67E07173:				; CODE XREF: sub_67E06F60+206j
		mov	eax, [ebx+8]
		lea	edx, [eax-7]
		cmp	esi, edx
		jl	loc_67E072F1
		cmp	eax, 3FFFFFFFh
		jle	loc_67E07307
		mov	ebp, 7FFFFFFFh
		mov	eax, 1
		mov	edi, 7FFFFFFFh

loc_67E0719B:				; CODE XREF: sub_67E06F60+3BBj
					; sub_67E06F60+3CCj
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+var_4C], offset aReallocate_for ; "reallocate_for_length"
		mov	[esp+5Ch+var_50], 16Ch
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aNew_allocatedR ;	"new_allocated >= real->allocated"
		call	sub_67DFAE70
		mov	[esp+5Ch+Src], ebp ; NewSize
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [ebx]
		mov	[esp+5Ch+Dst], eax ; Memory
		call	dbus_realloc
		test	eax, eax
		jz	short loc_67E0716C
		movzx	edx, byte ptr [ebx+10h]
		mov	ebp, 7
		mov	[ebx+8], edi
		sub	edi, 7
		shr	dl, 3
		and	edx, 7
		add	eax, edx
		mov	[ebx], eax
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 56h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealA_0 ;	"real->len <= real->allocated -	_DBUS_ST"...
		cmp	edi, [ebx+4]
		setnle	al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		and	ebp, eax
		mov	eax, ebp
		neg	eax
		add	eax, [ebx]
		lea	ecx, [eax+7]
		and	ecx, 0FFFFFFF8h
		mov	edx, ecx
		sub	dl, al
		and	edx, 7
		mov	[esp+5Ch+var_2D], dl
		shl	edx, 3
		mov	[esp+5Ch+var_1D], dl
		movzx	edx, byte ptr [ebx+10h]
		mov	[ebx], ecx
		and	edx, 0FFFFFFC7h
		mov	edi, edx
		movzx	edx, [esp+5Ch+var_1D]
		or	edi, edx
		mov	edx, edi
		mov	[ebx+10h], dl
		movzx	edx, [esp+5Ch+var_2D]
		cmp	ebp, edx
		jz	short loc_67E0728D
		mov	ecx, [ebx+4]
		lea	ebp, [eax+ebp]
		lea	edx, [eax+edx]
		mov	[esp+5Ch+Src], ebp ; Src
		mov	[esp+5Ch+Dst], edx ; Dst
		add	ecx, 1
		mov	[esp+5Ch+Size],	ecx ; Size
		call	memmove

loc_67E0728D:				; CODE XREF: sub_67E06F60+30Fj
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 68h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAlign_offs ;	"real->align_offset < 8"
		mov	[esp+5Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 69h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+Src], offset a_dbus_align__7 ;	"_DBUS_ALIGN_ADDRESS (real->str, 8) == r"...
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70

loc_67E072F1:				; CODE XREF: sub_67E06F60+21Bj
		mov	eax, [ebx]
		mov	[ebx+4], esi
		mov	byte ptr [eax+esi], 0
		mov	eax, 1

loc_67E072FF:				; CODE XREF: sub_67E06F60+20Ej
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E07307:				; CODE XREF: sub_67E06F60+226j
		lea	edi, [esi+8]
		lea	edx, [eax+eax]
		cmp	edi, edx
		jl	short loc_67E07320
		cmp	eax, edi
		mov	ebp, edi
		setle	al
		movzx	eax, al
		jmp	loc_67E0719B
; ---------------------------------------------------------------------------

loc_67E07320:				; CODE XREF: sub_67E06F60+3AFj
		mov	edi, edx
		cmp	eax, edi
		mov	ebp, edi
		setle	al
		movzx	eax, al
		jmp	loc_67E0719B
sub_67E06F60	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67E07340
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E07340	proc near		; CODE XREF: sub_67DC1FA0+74p
					; .text:67E07331j

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_1C		= byte ptr -1Ch
var_1B		= byte ptr -1Bh
var_1A		= byte ptr -1Ah
var_19		= byte ptr -19h
var_18		= byte ptr -18h
var_17		= byte ptr -17h
var_16		= byte ptr -16h
var_15		= byte ptr -15h
var_14		= byte ptr -14h
var_13		= byte ptr -13h
var_12		= byte ptr -12h
var_11		= byte ptr -11h
var_10		= byte ptr -10h
var_F		= byte ptr -0Fh
var_E		= byte ptr -0Eh
var_D		= byte ptr -0Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], 30h
		mov	[esp+2Ch+var_1B], 31h
		mov	eax, esi
		sar	eax, 4
		mov	[esp+2Ch+var_1A], 32h
		mov	[esp+2Ch+var_19], 33h
		mov	[esp+2Ch+var_18], 34h
		mov	[esp+2Ch+var_17], 35h
		mov	[esp+2Ch+var_16], 36h
		mov	[esp+2Ch+var_15], 37h
		mov	[esp+2Ch+var_14], 38h
		mov	[esp+2Ch+var_13], 39h
		mov	[esp+2Ch+var_12], 61h
		mov	[esp+2Ch+var_11], 62h
		mov	[esp+2Ch+var_10], 63h
		mov	[esp+2Ch+var_F], 64h
		mov	[esp+2Ch+var_E], 65h
		mov	[esp+2Ch+var_D], 66h
		movzx	eax, [esp+eax+2Ch+var_1C]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], eax
		call	sub_67E067A0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67E073C1

loc_67E073BB:				; CODE XREF: sub_67E07340+9Ej
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E073C1:				; CODE XREF: sub_67E07340+79j
		and	esi, 0Fh
		movzx	eax, [esp+esi+2Ch+var_1C]
		mov	[esp+2Ch+var_2C], ebx
		mov	[esp+2Ch+var_28], eax
		call	sub_67E067A0
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jnz	short loc_67E073BB
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		mov	[esp+2Ch+var_2C], ebx
		sub	eax, 1
		mov	[esp+2Ch+var_28], eax
		call	sub_67E06F60
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
sub_67E07340	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E07400	proc near		; CODE XREF: .text:67DFB313p
					; sub_67E097E0+85p

Dst		= dword	ptr -3Ch
Src		= dword	ptr -38h
Size		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	edi
		push	esi
		push	ebx
		sub	esp, 30h
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	[esp+3Ch+var_30], 851h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	esi, esi
		setnz	al
		movzx	edi, al
		mov	[esp+3Ch+Src], offset aRealNull	; "(real) != NULL"
		mov	[esp+3Ch+Dst], edi
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	[esp+3Ch+var_30], 851h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	[esp+3Ch+var_30], 851h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	[esp+3Ch+var_30], 851h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	[esp+3Ch+var_30], 851h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	[esp+3Ch+var_30], 851h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	[esp+3Ch+var_30], 851h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		xor	ebx, ebx
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	[esp+3Ch+var_30], 852h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aStartRealLen ; "start <=	real->len"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	[esp+3Ch+var_30], 853h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aStart0_2	; "start >= 0"
		mov	[esp+3Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [esi+4]
		test	edx, edx
		jle	loc_67E075F4
		mov	ecx, [esi]

loc_67E075D5:				; CODE XREF: sub_67E07400+1F2j
		movzx	eax, byte ptr [ecx+ebx]
		cmp	al, 9
		jz	short loc_67E075ED
		cmp	al, 20h
		jz	short loc_67E075ED
		cmp	al, 0Ah
		jz	short loc_67E075ED
		cmp	al, 0Dh
		jnz	loc_67E07930

loc_67E075ED:				; CODE XREF: sub_67E07400+1DBj
					; sub_67E07400+1DFj ...
		add	ebx, 1
		cmp	ebx, edx
		jl	short loc_67E075D5

loc_67E075F4:				; CODE XREF: sub_67E07400+1CDj
		cmp	edx, ebx
		mov	eax, 1
		jz	short loc_67E0760D
		mov	eax, [esi]
		movzx	eax, byte ptr [eax+ebx]
		cmp	al, 9
		jnz	loc_67E07912

loc_67E0760B:				; CODE XREF: sub_67E07400+514j
					; sub_67E07400+51Cj ...
		xor	eax, eax

loc_67E0760D:				; CODE XREF: sub_67E07400+1FBj
					; sub_67E07400+535j
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_45 ; "_dbus_string_skip_white"
		mov	[esp+3Ch+var_30], 85Eh
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aIRealLenDbus_0 ;	"i == real->len	|| !(DBUS_IS_ASCII_WHITE"...
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		test	ebx, ebx
		mov	[esp+3Ch+var_10], ebx
		jle	loc_67E078DF
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A1h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealNull	; "(real) != NULL"
		mov	[esp+3Ch+Dst], edi
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A1h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A1h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A1h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A1h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A1h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A1h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A1h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [esi+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A1h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A2h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aStart0_2	; "start >= 0"
		mov	[esp+3Ch+Dst], 1
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A3h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aLen0_2 ;	"len >=	0"
		mov	[esp+3Ch+Dst], 1
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A4h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aStartRealLen ; "start <=	real->len"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_string_d ; "_dbus_string_delete"
		mov	[esp+3Ch+var_30], 5A5h
		mov	[esp+3Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Src], offset aLenRealLenStar ;	"len <=	real->len - start"
		cmp	[esi+4], ebx
		setnl	al
		mov	[esp+3Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, [esi+4]
		mov	edx, [esi]
		sub	eax, ebx
		mov	[esp+3Ch+Size],	eax ; Size
		lea	eax, [edx+ebx]
		mov	[esp+3Ch+Dst], edx ; Dst
		mov	[esp+3Ch+Src], eax ; Src
		call	memmove
		mov	eax, [esi+4]
		mov	edx, [esi]
		sub	eax, ebx
		mov	[esi+4], eax
		mov	byte ptr [edx+eax], 0

loc_67E078DF:				; CODE XREF: sub_67E07400+23Bj
		mov	[esp+3Ch+Dst], esi
		call	sub_67E00CE0
		lea	edx, [esp+3Ch+var_10]
		mov	[esp+3Ch+Size],	edx
		mov	[esp+3Ch+Dst], esi
		mov	[esp+3Ch+Src], eax
		call	sub_67DFFC90
		mov	eax, [esp+3Ch+var_10]
		mov	[esp+3Ch+Dst], esi
		mov	[esp+3Ch+Src], eax
		call	sub_67E06F60
		add	esp, 30h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67E07912:				; CODE XREF: sub_67E07400+205j
		cmp	al, 20h
		jz	loc_67E0760B
		cmp	al, 0Ah
		jz	loc_67E0760B
		cmp	al, 0Dh
		jz	loc_67E0760B
		lea	esi, [esi+0]

loc_67E07930:				; CODE XREF: sub_67E07400+1E7j
		mov	eax, 1
		jmp	loc_67E0760D
sub_67E07400	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E07940	proc near		; CODE XREF: sub_67DD6770+21Bp

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, [esp+3Ch+arg_0]
		mov	edi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E06F60
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	[esp+3Ch+var_30], 781h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	[esp+3Ch+var_30], 781h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [esi+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	[esp+3Ch+var_30], 781h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	[esp+3Ch+var_30], 781h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [esi+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	[esp+3Ch+var_30], 781h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [esi+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	[esp+3Ch+var_30], 781h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [esi+8]
		sub	eax, 7
		cmp	eax, [esi+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	[esp+3Ch+var_30], 781h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [esi+4]
		cmp	eax, [esi+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	[esp+3Ch+var_30], 782h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStartRealLen ; "start	<= real->len"
		mov	eax, [esi+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_41 ; "_dbus_string_find_eol"
		mov	[esp+3Ch+var_30], 783h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStart0_2 ; "start >= 0"
		mov	[esp+3Ch+var_3C], 1
		call	sub_67DFAE70
		mov	ebx, [esi+4]
		test	ebx, ebx
		jle	loc_67E07C05
		mov	ecx, [esi]
		movzx	edx, byte ptr [ecx]
		cmp	dl, 0Dh
		jz	loc_67E07C50
		xor	eax, eax
		cmp	dl, 0Ah
		jnz	short loc_67E07B58
		jmp	loc_67E07BE8
; ---------------------------------------------------------------------------
		align 10h

loc_67E07B40:				; CODE XREF: sub_67E07940+21Dj
		movzx	edx, byte ptr [ecx+eax]
		mov	ebp, eax
		cmp	dl, 0Dh
		jz	loc_67E07BF0
		cmp	dl, 0Ah
		jz	loc_67E07BE8

loc_67E07B58:				; CODE XREF: sub_67E07940+1F8j
		add	eax, 1
		cmp	eax, ebx
		jl	short loc_67E07B40
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E00CE0
		mov	[esp+3Ch+var_2C], offset a_dbus_string_p ; "_dbus_string_pop_line"
		mov	[esp+3Ch+var_30], 89Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aEol_dbus_strin ; "eol	== _dbus_string_get_length (source)"
		cmp	eax, ebx
		setz	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	edx, ebx

loc_67E07B99:				; CODE XREF: sub_67E07940+2ADj
					; sub_67E07940+2C3j ...
		mov	[esp+3Ch+var_2C], 0 ; int
		mov	[esp+3Ch+var_30], edi ;	int
		mov	[esp+3Ch+var_34], edx ;	size_t
		mov	[esp+3Ch+var_38], 0 ; int
		mov	[esp+3Ch+var_3C], esi ;	int
		call	sub_67E04AD0
		test	eax, eax
		jnz	short loc_67E07BC7

loc_67E07BBD:				; CODE XREF: sub_67E07940+2FFj
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E07BC7:				; CODE XREF: sub_67E07940+27Bj
		mov	[esp+3Ch+var_38], ebx
		mov	[esp+3Ch+var_3C], edi
		call	sub_67E06F60
		test	eax, eax
		jz	loc_67E07C5B
		add	esp, 2Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E07BE8:				; CODE XREF: sub_67E07940+1FAj
					; sub_67E07940+212j
		lea	edx, [eax+1]

loc_67E07BEB:				; CODE XREF: sub_67E07940+2B5j
					; sub_67E07940+2BCj
		mov	ebx, eax
		jmp	short loc_67E07B99
; ---------------------------------------------------------------------------
		align 10h

loc_67E07BF0:				; CODE XREF: sub_67E07940+209j
		lea	edx, [eax+1]

loc_67E07BF3:				; CODE XREF: sub_67E07940+319j
		cmp	edx, ebx
		jge	short loc_67E07BEB
		cmp	byte ptr [ecx+ebp+1], 0Ah
		jnz	short loc_67E07BEB
		lea	edx, [eax+2]
		mov	ebx, eax
		jmp	short loc_67E07B99
; ---------------------------------------------------------------------------

loc_67E07C05:				; CODE XREF: sub_67E07940+1DFj
		mov	[esp+3Ch+var_3C], esi
		call	sub_67E00CE0
		mov	[esp+3Ch+var_2C], offset a_dbus_string_p ; "_dbus_string_pop_line"
		mov	[esp+3Ch+var_30], 89Fh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aEol_dbus_strin ; "eol	== _dbus_string_get_length (source)"
		cmp	eax, ebx
		setz	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		test	ebx, ebx
		jz	loc_67E07BBD
		mov	edx, ebx
		jmp	loc_67E07B99
; ---------------------------------------------------------------------------
		align 10h

loc_67E07C50:				; CODE XREF: sub_67E07940+1EDj
		mov	edx, 1
		xor	ebp, ebp
		xor	eax, eax
		jmp	short loc_67E07BF3
; ---------------------------------------------------------------------------

loc_67E07C5B:				; CODE XREF: sub_67E07940+295j
		mov	[esp+3Ch+var_34], 8B2h
		mov	[esp+3Ch+var_38], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_3C], offset aOutOfMemoryWhe ; "out	of memory when shortening a string"
		call	sub_67DFAE30
sub_67E07940	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		movzx	eax, ds:word_67E2BAFF
		mov	[esp+5Eh], ax
		mov	eax, [esp+84h]
		mov	[esp+5Eh], al
		mov	eax, [esp+80h]
		mov	esi, [eax+4]
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7C7h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealNull ; "(real) != NULL"
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		mov	edx, [esp+80h]
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7C7h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [edx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	ecx, [esp+80h]
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7C7h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ecx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	edx, [esp+80h]
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7C7h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [edx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	ecx, [esp+80h]
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7C7h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealMax_length ; "(real)->max_length	>= 0"
		mov	eax, [ecx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	edx, [esp+80h]
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7C7h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLenRealAll ; "(real)->len <= ((real)->allocated - _DB"...
		mov	eax, [edx+8]
		sub	eax, 7
		cmp	eax, [edx+4]
		setnle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	ecx, [esp+80h]
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7C7h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aRealLenRealMax ; "(real)->len <= (real)->max_length"
		mov	eax, [ecx+4]
		cmp	eax, [ecx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7C8h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSubstrNull ;	"substr	!= NULL"
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		mov	edx, [esp+80h]
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7C9h
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStartRealLen	; "start <= real->len"
		mov	eax, [edx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7CAh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStart0_2 ; "start >=	0"
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7CBh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSubstrNull ;	"substr	!= NULL"
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		mov	ecx, [esp+80h]
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7CCh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aEndRealLen ;	"end <=	real->len"
		cmp	esi, [ecx+4]
		setle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_string_8 ; "_dbus_string_find_to"
		mov	dword ptr [esp+0Ch], 7CDh
		mov	dword ptr [esp+8], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aStartEnd ; "start <=	end"
		call	sub_67DFAE70
		movzx	eax, byte ptr [esp+5Eh]
		mov	dword ptr [esp+44h], 1
		mov	dword ptr [esp+48h], 0
		test	al, al
		jz	loc_67E08030
		test	esi, esi
		jle	loc_67E08078
		movsx	eax, al
		mov	edi, 1
		mov	[esp+4Ch], eax
		mov	eax, [esp+80h]
		lea	edx, [esp+5Eh]
		mov	dword ptr [esp+40h], 0
		mov	[esp+2Ch], edx
		mov	eax, [eax]
		mov	[esp+3Ch], eax
		jmp	short loc_67E07FB7
; ---------------------------------------------------------------------------
		align 10h

loc_67E07FA0:				; CODE XREF: .text:67E07FCEj
					; .text:67E08027j
		add	dword ptr [esp+40h], 1
		add	edi, 1
		add	dword ptr [esp+3Ch], 1
		cmp	esi, [esp+44h]
		jle	loc_67E08078

loc_67E07FB7:				; CODE XREF: .text:67E07F9Dj
					; .text:67E0808Fj
		mov	ecx, [esp+40h]
		mov	edx, [esp+3Ch]
		mov	[esp+48h], ecx
		movzx	eax, byte ptr [edx]
		cmp	eax, [esp+4Ch]
		mov	[esp+44h], edi
		jnz	short loc_67E07FA0
		cmp	esi, edi
		mov	eax, edi
		jle	short loc_67E0801E
		movzx	eax, byte ptr [esp+5Fh]
		test	al, al
		jz	short loc_67E08030
		mov	ecx, edx
		movzx	edx, byte ptr [edx+1]
		movsx	eax, al
		cmp	edx, eax
		jnz	loc_67E08082
		mov	ebp, [esp+2Ch]
		mov	edx, ecx
		mov	eax, edi
		sub	ebp, [esp+40h]
		jmp	short loc_67E08017
; ---------------------------------------------------------------------------
		align 10h

loc_67E08000:				; CODE XREF: .text:67E0801Cj
		movzx	ecx, byte ptr [ebp+eax+0]
		test	cl, cl
		jz	short loc_67E08030
		movzx	ebx, byte ptr [edx+2]
		movsx	ecx, cl
		add	edx, 1
		cmp	ebx, ecx
		jnz	short loc_67E08082

loc_67E08017:				; CODE XREF: .text:67E07FFCj
		add	eax, 1
		cmp	esi, eax
		jg	short loc_67E08000

loc_67E0801E:				; CODE XREF: .text:67E07FD4j
		sub	eax, [esp+40h]
		cmp	byte ptr [esp+eax+5Eh],	0
		jnz	loc_67E07FA0
		lea	esi, [esi+0]

loc_67E08030:				; CODE XREF: .text:67E07F66j
					; .text:67E07FDDj ...
		mov	ecx, [esp+80h]
		mov	[esp], ecx
		call	sub_67E00CE0
		mov	edx, [esp+88h]
		mov	dword ptr [esp+10h], 0
		mov	[esp+0Ch], edx
		mov	edx, [esp+80h]
		sub	eax, 1
		sub	eax, [esp+48h]
		mov	[esp], edx
		mov	[esp+8], eax
		mov	eax, [esp+44h]
		mov	[esp+4], eax
		call	sub_67E04AD0
		test	eax, eax
		jnz	short loc_67E08094

loc_67E08078:				; CODE XREF: .text:67E07F6Ej
					; .text:67E07FB1j
		add	esp, 6Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E08082:				; CODE XREF: .text:67E07FEAj
					; .text:67E08015j
		add	dword ptr [esp+40h], 1
		add	edi, 1
		add	dword ptr [esp+3Ch], 1
		jmp	loc_67E07FB7
; ---------------------------------------------------------------------------

loc_67E08094:				; CODE XREF: .text:67E08076j
		mov	eax, [esp+48h]
		mov	edx, [esp+80h]
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_67E06F60
		test	eax, eax
		setnz	al
		add	esp, 6Ch
		movzx	eax, al
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E080C0	proc near		; CODE XREF: sub_67DC2D20+7Bp
					; sub_67DC2DC0+82p ...

Size		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= byte ptr -30h
var_2C		= byte ptr -2Ch
var_2B		= byte ptr -2Bh
var_2A		= byte ptr -2Ah
var_29		= byte ptr -29h
var_28		= byte ptr -28h
var_27		= byte ptr -27h
var_26		= byte ptr -26h
var_25		= byte ptr -25h
var_24		= byte ptr -24h
var_23		= byte ptr -23h
var_22		= byte ptr -22h
var_21		= byte ptr -21h
var_20		= byte ptr -20h
var_1F		= byte ptr -1Fh
var_1E		= byte ptr -1Eh
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebx, [esp+6Ch+arg_0]
		mov	esi, [esp+6Ch+arg_4]
		mov	[esp+6Ch+Size],	ebx
		call	sub_67E00CE0
		mov	[esp+6Ch+var_5C], offset a_dbus_strin_32 ; "_dbus_string_hex_encode"
		mov	[esp+6Ch+var_60], 9FEh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aStart_dbus_s_0 ; "start <= _dbus_string_get_length (sourc"...
		cmp	eax, esi
		setnl	al
		xor	edi, edi
		movzx	eax, al
		mov	[esp+6Ch+Size],	eax
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_strin_19 ; "_dbus_string_init_preallocated"
		mov	[esp+6Ch+var_60], 89h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aStrNull_0 ; "str != NULL"
		mov	[esp+6Ch+Size],	1
		call	sub_67DFAE70
		mov	[esp+6Ch+var_5C], offset a_dbus_strin_19 ; "_dbus_string_init_preallocated"
		mov	[esp+6Ch+var_60], 8Bh
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aSizeofDbusstri ; "sizeof (DBusString)	== sizeof (DBusReal"...
		mov	[esp+6Ch+Size],	1
		call	sub_67DFAE70
		mov	[esp+6Ch+Size],	8 ; Size
		call	dbus_malloc
		test	eax, eax
		mov	[esp+6Ch+var_40], eax
		jz	loc_67E082F7
		mov	[esp+6Ch+var_38], 8
		mov	[esp+6Ch+var_3C], 0
		mov	byte ptr [eax],	0
		mov	[esp+6Ch+var_34], 7FFFFFF7h
		and	[esp+6Ch+var_30], 0C0h
		mov	[esp+6Ch+var_5C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+6Ch+var_60], 56h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aRealLenRealA_0 ; "real->len <= real->allocated - _DBUS_ST"...
		mov	[esp+6Ch+Size],	1
		call	sub_67DFAE70
		movzx	edi, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_5C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+6Ch+var_60], 68h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	eax, edi
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [esp+6Ch+var_40]
		mov	[esp+6Ch+var_68], offset aRealAlign_offs ; "real->align_offset < 8"
		mov	[esp+6Ch+Size],	1
		lea	edx, [eax+7]
		and	edx, 0FFFFFFF8h
		mov	ecx, edx
		sub	cl, al
		mov	eax, edi
		and	ecx, 7
		and	eax, 0FFFFFFC7h
		shl	ecx, 3
		or	eax, ecx
		mov	[esp+6Ch+var_30], al
		mov	[esp+6Ch+var_40], edx
		call	sub_67DFAE70
		mov	edx, [esp+6Ch+var_40]
		mov	[esp+6Ch+var_5C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+6Ch+var_60], 69h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+6Ch+Size],	eax
		mov	[esp+6Ch+var_68], offset a_dbus_align__7 ; "_DBUS_ALIGN_ADDRESS	(real->str, 8) == r"...
		call	sub_67DFAE70
		mov	[esp+6Ch+Size],	ebx
		call	sub_67E01770
		mov	[esp+6Ch+Size],	ebx
		mov	edi, eax
		call	sub_67E00CE0
		lea	ebp, [edi+eax]
		add	edi, esi
		cmp	ebp, edi
		lea	esi, [esp+6Ch+var_40]
		jz	loc_67E08324

loc_67E08280:				; CODE XREF: sub_67E080C0+25Ej
		movzx	ebx, byte ptr [edi]
		mov	[esp+6Ch+var_2C], 30h
		mov	[esp+6Ch+var_2B], 31h
		mov	[esp+6Ch+var_2A], 32h
		mov	eax, ebx
		sar	eax, 4
		mov	[esp+6Ch+var_29], 33h
		mov	[esp+6Ch+var_28], 34h
		mov	[esp+6Ch+var_27], 35h
		mov	[esp+6Ch+var_26], 36h
		mov	[esp+6Ch+var_25], 37h
		mov	[esp+6Ch+var_24], 38h
		mov	[esp+6Ch+var_23], 39h
		mov	[esp+6Ch+var_22], 61h
		mov	[esp+6Ch+var_21], 62h
		mov	[esp+6Ch+var_20], 63h
		mov	[esp+6Ch+var_1F], 64h
		mov	[esp+6Ch+var_1E], 65h
		mov	[esp+6Ch+var_1D], 66h
		movzx	eax, [esp+eax+6Ch+var_2C]
		mov	[esp+6Ch+Size],	esi
		mov	[esp+6Ch+var_68], eax
		call	sub_67E067A0
		test	eax, eax
		jnz	short loc_67E08301

loc_67E082ED:				; CODE XREF: sub_67E080C0+2CAj
					; sub_67E080C0+2E7j
		xor	edi, edi

loc_67E082EF:				; CODE XREF: sub_67E080C0+2C4j
		mov	[esp+6Ch+Size],	esi
		call	sub_67E02BF0

loc_67E082F7:				; CODE XREF: sub_67E080C0+B3j
		add	esp, 5Ch
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E08301:				; CODE XREF: sub_67E080C0+22Bj
		and	ebx, 0Fh
		movzx	eax, [esp+ebx+6Ch+var_2C]
		mov	[esp+6Ch+Size],	esi
		mov	[esp+6Ch+var_68], eax
		call	sub_67E067A0
		test	eax, eax
		jz	short loc_67E08390
		add	edi, 1
		cmp	ebp, edi
		jnz	loc_67E08280

loc_67E08324:				; CODE XREF: sub_67E080C0+1BAj
		mov	eax, [esp+6Ch+var_3C]
		mov	edi, 1
		mov	[esp+6Ch+var_5C], offset a_dbus_string_m ; "_dbus_string_move"
		mov	[esp+6Ch+var_60], 5E5h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+Size],	eax
		mov	[esp+6Ch+var_68], offset aStartReal_so_0 ; "start <= real_source->len"
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+arg_C]
		mov	[esp+6Ch+var_68], 0 ; int
		mov	[esp+6Ch+Size],	esi ; int
		mov	[esp+6Ch+var_5C], eax ;	int
		mov	eax, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_60], eax ;	int
		mov	eax, [esp+6Ch+var_3C]
		mov	[esp+6Ch+var_64], eax ;	size_t
		call	sub_67E04AD0
		test	eax, eax
		jnz	loc_67E082EF
		jmp	loc_67E082ED
; ---------------------------------------------------------------------------
		align 10h

loc_67E08390:				; CODE XREF: sub_67E080C0+257j
		mov	[esp+6Ch+Size],	esi
		call	sub_67E00CE0
		mov	[esp+6Ch+Size],	esi
		sub	eax, 1
		mov	[esp+6Ch+var_68], eax
		call	sub_67E06F60
		jmp	loc_67E082ED
sub_67E080C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E083B0	proc near		; CODE XREF: sub_67DD81B0+4Cp
					; sub_67E08BC0+2Ep ...

Dst		= dword	ptr -5Ch
Src		= dword	ptr -58h
Size		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_2D		= byte ptr -2Dh
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, [esp+5Ch+arg_0]
		mov	edi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 377h
		test	ebx, ebx
		setnz	al
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 377h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 377h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 377h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 377h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 377h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 377h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 377h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 377h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 378h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aLength_to_remo ;	"length_to_remove >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset a_dbus_strin_33 ; "_dbus_string_shorten"
		mov	[esp+5Ch+var_50], 379h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aLength_to_re_0 ;	"length_to_remove <= real->len"
		cmp	[ebx+4], edi
		setnl	al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	esi, [ebx+4]
		sub	esi, edi
		cmp	esi, [ebx+0Ch]
		jg	loc_67E0877C
		mov	eax, [ebx+8]
		lea	edx, [eax-7]
		cmp	esi, edx
		jl	loc_67E08773
		cmp	eax, 3FFFFFFFh
		jle	loc_67E08784
		mov	ebp, 7FFFFFFFh
		mov	eax, 1
		mov	edi, 7FFFFFFFh

loc_67E08619:				; CODE XREF: sub_67E083B0+3E8j
					; sub_67E083B0+3FCj
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+var_4C], offset aReallocate_for ; "reallocate_for_length"
		mov	[esp+5Ch+var_50], 16Ch
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aNew_allocatedR ;	"new_allocated >= real->allocated"
		call	sub_67DFAE70
		mov	[esp+5Ch+Src], ebp ; NewSize
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [ebx]
		mov	[esp+5Ch+Dst], eax ; Memory
		call	dbus_realloc
		test	eax, eax
		jz	loc_67E0877C
		movzx	edx, byte ptr [ebx+10h]
		mov	ebp, 7
		mov	[ebx+8], edi
		sub	edi, 7
		shr	dl, 3
		and	edx, 7
		add	eax, edx
		mov	[ebx], eax
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 56h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealA_0 ;	"real->len <= real->allocated -	_DBUS_ST"...
		cmp	edi, [ebx+4]
		setnle	al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		and	ebp, eax
		mov	eax, ebp
		neg	eax
		add	eax, [ebx]
		lea	ecx, [eax+7]
		and	ecx, 0FFFFFFF8h
		mov	edx, ecx
		sub	dl, al
		and	edx, 7
		mov	[esp+5Ch+var_2D], dl
		shl	edx, 3
		mov	[esp+5Ch+var_1D], dl
		movzx	edx, byte ptr [ebx+10h]
		mov	[ebx], ecx
		and	edx, 0FFFFFFC7h
		mov	edi, edx
		movzx	edx, [esp+5Ch+var_1D]
		or	edi, edx
		mov	edx, edi
		mov	[ebx+10h], dl
		movzx	edx, [esp+5Ch+var_2D]
		cmp	ebp, edx
		jz	short loc_67E0870F
		mov	ecx, [ebx+4]
		lea	ebp, [eax+ebp]
		lea	edx, [eax+edx]
		mov	[esp+5Ch+Src], ebp ; Src
		mov	[esp+5Ch+Dst], edx ; Dst
		add	ecx, 1
		mov	[esp+5Ch+Size],	ecx ; Size
		call	memmove

loc_67E0870F:				; CODE XREF: sub_67E083B0+341j
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 68h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAlign_offs ;	"real->align_offset < 8"
		mov	[esp+5Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 69h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+Src], offset a_dbus_align__7 ;	"_DBUS_ALIGN_ADDRESS (real->str, 8) == r"...
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70

loc_67E08773:				; CODE XREF: sub_67E083B0+249j
		mov	eax, [ebx]
		mov	[ebx+4], esi
		mov	byte ptr [eax+esi], 0

loc_67E0877C:				; CODE XREF: sub_67E083B0+23Bj
					; sub_67E083B0+2ADj
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E08784:				; CODE XREF: sub_67E083B0+254j
		lea	edi, [esi+8]
		lea	edx, [eax+eax]
		cmp	edi, edx
		jl	short loc_67E087A0
		cmp	eax, edi
		mov	ebp, edi
		setle	al
		movzx	eax, al
		jmp	loc_67E08619
; ---------------------------------------------------------------------------
		align 10h

loc_67E087A0:				; CODE XREF: sub_67E083B0+3DCj
		mov	edi, edx
		cmp	eax, edi
		mov	ebp, edi
		setle	al
		movzx	eax, al
		jmp	loc_67E08619
sub_67E083B0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67E087C0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E087C0	proc near		; CODE XREF: sub_67DD8410+ECp
					; sub_67DD8E90+DDp ...

Dst		= dword	ptr -5Ch
Src		= dword	ptr -58h
Size		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_2D		= byte ptr -2Dh
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, [esp+5Ch+arg_0]
		mov	esi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_4C], offset a_dbus_string_l ; "_dbus_string_lengthen"
		mov	[esp+5Ch+var_50], 363h
		test	ebx, ebx
		setnz	al
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_string_l ; "_dbus_string_lengthen"
		mov	[esp+5Ch+var_50], 363h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_string_l ; "_dbus_string_lengthen"
		mov	[esp+5Ch+var_50], 363h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_string_l ; "_dbus_string_lengthen"
		mov	[esp+5Ch+var_50], 363h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_string_l ; "_dbus_string_lengthen"
		mov	[esp+5Ch+var_50], 363h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_string_l ; "_dbus_string_lengthen"
		mov	[esp+5Ch+var_50], 363h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_string_l ; "_dbus_string_lengthen"
		mov	[esp+5Ch+var_50], 363h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_string_l ; "_dbus_string_lengthen"
		mov	[esp+5Ch+var_50], 363h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+var_4C], offset a_dbus_string_l ; "_dbus_string_lengthen"
		mov	[esp+5Ch+var_50], 363h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_string_l ; "_dbus_string_lengthen"
		mov	[esp+5Ch+var_50], 364h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aAdditional_len ;	"additional_length >= 0"
		call	sub_67DFAE70
		mov	edx, [ebx+0Ch]
		xor	eax, eax
		mov	ecx, [ebx+4]
		mov	edi, edx
		sub	edi, ecx
		cmp	esi, edi
		jg	loc_67E08B71
		add	esi, ecx
		cmp	edx, esi
		jl	loc_67E08BB1
		mov	eax, [ebx+8]
		lea	edx, [eax-7]
		cmp	esi, edx
		jl	loc_67E08B63
		cmp	eax, 3FFFFFFFh
		jle	loc_67E08B80
		mov	ebp, 7FFFFFFFh
		mov	eax, 1
		mov	edi, 7FFFFFFFh

loc_67E08A09:				; CODE XREF: sub_67E087C0+3D4j
					; sub_67E087C0+3ECj
		mov	[esp+5Ch+Dst], eax
		mov	[esp+5Ch+var_4C], offset aReallocate_for ; "reallocate_for_length"
		mov	[esp+5Ch+var_50], 16Ch
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aNew_allocatedR ;	"new_allocated >= real->allocated"
		call	sub_67DFAE70
		mov	[esp+5Ch+Src], ebp ; NewSize
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		and	eax, 7
		neg	eax
		add	eax, [ebx]
		mov	[esp+5Ch+Dst], eax ; Memory
		call	dbus_realloc
		test	eax, eax
		jz	loc_67E08BB1
		movzx	edx, byte ptr [ebx+10h]
		mov	ebp, 7
		mov	[ebx+8], edi
		sub	edi, 7
		shr	dl, 3
		and	edx, 7
		add	eax, edx
		mov	[ebx], eax
		xor	eax, eax
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 56h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealLenRealA_0 ;	"real->len <= real->allocated -	_DBUS_ST"...
		cmp	edi, [ebx+4]
		setnle	al
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 3
		and	ebp, eax
		mov	eax, ebp
		neg	eax
		add	eax, [ebx]
		lea	ecx, [eax+7]
		and	ecx, 0FFFFFFF8h
		mov	edx, ecx
		sub	dl, al
		and	edx, 7
		mov	[esp+5Ch+var_2D], dl
		shl	edx, 3
		mov	[esp+5Ch+var_1D], dl
		movzx	edx, byte ptr [ebx+10h]
		mov	[ebx], ecx
		and	edx, 0FFFFFFC7h
		mov	edi, edx
		movzx	edx, [esp+5Ch+var_1D]
		or	edi, edx
		mov	edx, edi
		mov	[ebx+10h], dl
		movzx	edx, [esp+5Ch+var_2D]
		cmp	ebp, edx
		jz	short loc_67E08AFF
		mov	ecx, [ebx+4]
		lea	ebp, [eax+ebp]
		lea	edx, [eax+edx]
		mov	[esp+5Ch+Src], ebp ; Src
		mov	[esp+5Ch+Dst], edx ; Dst
		add	ecx, 1
		mov	[esp+5Ch+Size],	ecx ; Size
		call	memmove

loc_67E08AFF:				; CODE XREF: sub_67E087C0+321j
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 68h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+Src], offset aRealAlign_offs ;	"real->align_offset < 8"
		mov	[esp+5Ch+Dst], 1
		call	sub_67DFAE70
		mov	edx, [ebx]
		mov	[esp+5Ch+var_4C], offset aFixup_alignmen ; "fixup_alignment"
		mov	[esp+5Ch+var_50], 69h
		mov	[esp+5Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		lea	eax, [edx+7]
		and	eax, 0FFFFFFF8h
		cmp	edx, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+Src], offset a_dbus_align__7 ;	"_DBUS_ALIGN_ADDRESS (real->str, 8) == r"...
		mov	[esp+5Ch+Dst], eax
		call	sub_67DFAE70

loc_67E08B63:				; CODE XREF: sub_67E087C0+229j
		mov	eax, [ebx]
		mov	[ebx+4], esi
		mov	byte ptr [eax+esi], 0
		mov	eax, 1

loc_67E08B71:				; CODE XREF: sub_67E087C0+211j
					; sub_67E087C0+3F3j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E08B80:				; CODE XREF: sub_67E087C0+234j
		lea	edi, [esi+8]
		lea	edx, [eax+eax]
		cmp	edi, edx
		jl	short loc_67E08BA0
		cmp	eax, edi
		mov	ebp, edi
		setle	al
		movzx	eax, al
		jmp	loc_67E08A09
; ---------------------------------------------------------------------------
		align 10h

loc_67E08BA0:				; CODE XREF: sub_67E087C0+3C8j
		mov	edi, edx
		cmp	eax, edi
		mov	ebp, edi
		setle	al
		movzx	eax, al
		jmp	loc_67E08A09
; ---------------------------------------------------------------------------

loc_67E08BB1:				; CODE XREF: sub_67E087C0+21Bj
					; sub_67E087C0+28Dj
		xor	eax, eax
		jmp	short loc_67E08B71
sub_67E087C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E08BC0	proc near		; CODE XREF: sub_67DDB920+23p
					; sub_67DDB9F0+2Dp ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	[esp+1Ch+var_8], ebx
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx
		mov	[esp+1Ch+var_18], esi
		call	sub_67E087C0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67E08BF8
		mov	[esp+1Ch+var_18], esi
		mov	[esp+1Ch+var_1C], ebx
		call	sub_67E083B0
		mov	eax, 1

loc_67E08BF8:				; CODE XREF: sub_67E08BC0+25j
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67E08BC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E08C10(int,	char *)
sub_67E08C10	proc near		; CODE XREF: sub_67DC2A10+30p
					; sub_67DC2A10+57p ...

Str		= dword	ptr -2Ch
Src		= dword	ptr -28h
Size		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_34 ; "_dbus_string_append"
		mov	[esp+2Ch+var_20], 414h
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+Str], eax
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_34 ; "_dbus_string_append"
		mov	[esp+2Ch+var_20], 414h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Str], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_34 ; "_dbus_string_append"
		mov	[esp+2Ch+var_20], 414h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Str], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_34 ; "_dbus_string_append"
		mov	[esp+2Ch+var_20], 414h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Str], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_34 ; "_dbus_string_append"
		mov	[esp+2Ch+var_20], 414h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Str], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_34 ; "_dbus_string_append"
		mov	[esp+2Ch+var_20], 414h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+Str], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_34 ; "_dbus_string_append"
		mov	[esp+2Ch+var_20], 414h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+Str], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_34 ; "_dbus_string_append"
		mov	[esp+2Ch+var_20], 414h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Str], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_34 ; "_dbus_string_append"
		mov	[esp+2Ch+var_20], 414h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Str], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp+2Ch+Str], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_34 ; "_dbus_string_append"
		mov	[esp+2Ch+var_20], 415h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aBufferNull ; "buffer != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+Str], esi ; Str
		call	strlen
		mov	edi, eax
		xor	eax, eax
		cmp	edi, [ebx+0Ch]
		jbe	loc_67E08E30

loc_67E08E27:				; CODE XREF: sub_67E08C10+224j
					; sub_67E08C10+238j ...
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E08E30:				; CODE XREF: sub_67E08C10+211j
		test	edi, edi
		mov	al, 1
		jz	short loc_67E08E27
		mov	[esp+2Ch+Src], edi
		mov	[esp+2Ch+Str], ebx
		call	sub_67E087C0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67E08E27
		mov	eax, [ebx+4]
		sub	eax, edi
		add	eax, [ebx]
		mov	[esp+2Ch+Size],	edi ; Size
		mov	[esp+2Ch+Src], esi ; Src
		mov	[esp+2Ch+Str], eax ; Dst
		call	memcpy
		mov	eax, 1
		jmp	short loc_67E08E27
sub_67E08C10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E08E70(int,	char *,	va_list)
sub_67E08E70	proc near		; CODE XREF: dbus_set_error+11Bp
					; dbus_message_new_error_printf+113p ...

Dest		= dword	ptr -3Ch
Format		= dword	ptr -38h
Args		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		mov	edi, [esp+3Ch+arg_4]
		mov	ebp, [esp+3Ch+arg_8]
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_35 ; "_dbus_string_append_printf_valist"
		test	ebx, ebx
		setnz	al
		mov	[esp+3Ch+Dest],	eax
		mov	[esp+3Ch+var_30], 4E3h
		mov	[esp+3Ch+Args],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Format], offset aRealNull ; "(real) !=	NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_35 ; "_dbus_string_append_printf_valist"
		mov	[esp+3Ch+var_30], 4E3h
		mov	[esp+3Ch+Args],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Format], offset aRealInvalid ;	"!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dest],	eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_35 ; "_dbus_string_append_printf_valist"
		mov	[esp+3Ch+var_30], 4E3h
		mov	[esp+3Ch+Args],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Format], offset aRealLen0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dest],	eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_35 ; "_dbus_string_append_printf_valist"
		mov	[esp+3Ch+var_30], 4E3h
		mov	[esp+3Ch+Args],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Format], offset aRealAllocated0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dest],	eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_35 ; "_dbus_string_append_printf_valist"
		mov	[esp+3Ch+var_30], 4E3h
		mov	[esp+3Ch+Args],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Format], offset aRealMax_length ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+Dest],	eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_35 ; "_dbus_string_append_printf_valist"
		mov	[esp+3Ch+var_30], 4E3h
		mov	[esp+3Ch+Args],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Format], offset aRealLenRealAll ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+Dest],	eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_35 ; "_dbus_string_append_printf_valist"
		mov	[esp+3Ch+var_30], 4E3h
		mov	[esp+3Ch+Args],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Format], offset aRealLenRealMax ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+Dest],	eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_35 ; "_dbus_string_append_printf_valist"
		mov	[esp+3Ch+var_30], 4E3h
		mov	[esp+3Ch+Args],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Format], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dest],	eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_35 ; "_dbus_string_append_printf_valist"
		mov	[esp+3Ch+var_30], 4E3h
		mov	[esp+3Ch+Args],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Format], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+Dest],	eax
		call	sub_67DFAE70
		mov	[esp+3Ch+Format], ebp ;	va_list
		mov	[esp+3Ch+Dest],	edi ; char *
		call	sub_67E0D9B0
		test	eax, eax
		mov	esi, eax
		js	loc_67E09092
		mov	[esp+3Ch+Format], eax
		mov	[esp+3Ch+Dest],	ebx
		call	sub_67E087C0
		test	eax, eax
		jz	short loc_67E09092
		mov	[esp+3Ch+Args],	ebp ; Args
		mov	[esp+3Ch+Format], edi ;	Format
		mov	eax, [ebx+4]
		sub	eax, esi
		add	eax, [ebx]
		mov	[esp+3Ch+Dest],	eax ; Dest
		call	vsprintf
		add	esp, 2Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E09092:				; CODE XREF: sub_67E08E70+1E8j
					; sub_67E08E70+1FCj
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E08E70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E090A0(int,	char *,	char)
sub_67E090A0	proc near		; CODE XREF: sub_67DC2FB0+95p
					; sub_67DC3290+65p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		sub	esp, 1Ch
		lea	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_14], eax ;	va_list
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], eax ;	char *
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax ;	int
		call	sub_67E08E70
		add	esp, 1Ch
		retn
sub_67E090A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E090D0(int,	void *,	size_t)
sub_67E090D0	proc near		; CODE XREF: dbus_message_iter_get_signature+D2p
					; dbus_message_demarshal+F4p ...

Dst		= dword	ptr -2Ch
Src		= dword	ptr -28h
Size		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_8]
		mov	edi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+var_20], 520h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealNull	; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		mov	[esp+2Ch+var_20], 520h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealInvalid ; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		mov	[esp+2Ch+var_20], 520h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLen0	; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		mov	[esp+2Ch+var_20], 520h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealAllocated0 ;	"(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		mov	[esp+2Ch+var_20], 520h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealMax_length ;	"(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		mov	[esp+2Ch+var_20], 520h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLenRealAll ;	"(real)->len <=	((real)->allocated - _DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		mov	[esp+2Ch+var_20], 520h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLenRealMax ;	"(real)->len <=	(real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		mov	[esp+2Ch+var_20], 520h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealConstant ; "!(real)->constant"
		movzx	eax, byte ptr [ebx+10h]
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		mov	[esp+2Ch+var_20], 520h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aRealLocked ; "!(real)->locked"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 1
		xor	eax, 1
		and	eax, 1
		mov	[esp+2Ch+Dst], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	edi, edi
		setnz	al
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		mov	[esp+2Ch+var_20], 521h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aBufferNull ; "buffer != NULL"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+2Ch+Dst], eax
		mov	[esp+2Ch+var_1C], offset a_dbus_strin_36 ; "_dbus_string_append_len"
		mov	[esp+2Ch+var_20], 522h
		mov	[esp+2Ch+Size],	offset aRBuildWin32_29 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+Src], offset aLen0_2 ;	"len >=	0"
		call	sub_67DFAE70
		test	esi, esi
		mov	eax, 1
		jnz	loc_67E09320

loc_67E09312:				; CODE XREF: sub_67E090D0+262j
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E09320:				; CODE XREF: sub_67E090D0+23Cj
		mov	[esp+2Ch+Src], esi
		mov	[esp+2Ch+Dst], ebx
		call	sub_67E087C0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67E09312
		mov	eax, [ebx+4]
		sub	eax, esi
		add	eax, [ebx]
		mov	[esp+2Ch+Size],	esi ; Size
		mov	[esp+2Ch+Src], edi ; Src
		mov	[esp+2Ch+Dst], eax ; Dst
		call	memcpy
		add	esp, 20h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E090D0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, ds:_environ
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_67E09371
		mov	dword ptr [eax], 0

loc_67E09371:				; CODE XREF: .text:67E09369j
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E09380	proc near		; CODE XREF: sub_67E0CC70+90p
					; sub_67E0D430+C7p ...

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, offset aOrg_freedes_49 ; "org.freedesktop.DBus.Error.LimitsExceed"...
		cmp	edx, 18h
		jz	short locret_67E093E5
		jle	short loc_67E093E7
		cmp	edx, 2740h
		mov	eax, offset aOrg_freedes_50 ; "org.freedesktop.DBus.Error.AddressInUse"
		jz	short locret_67E093E5
		lea	esi, [esi+0]
		jle	short loc_67E093D0
		cmp	edx, 274Ch
		mov	eax, offset aOrg_freedes_51 ; "org.freedesktop.DBus.Error.Timeout"
		jz	short locret_67E093E5
		cmp	edx, 274Dh
		mov	eax, offset aOrg_freedes_52 ; "org.freedesktop.DBus.Error.NoServer"
		jz	short locret_67E093E5
		cmp	edx, 2743h
		mov	eax, offset aOrg_freedes_53 ; "org.freedesktop.DBus.Error.NoNetwork"
		jnz	short loc_67E093E0
		rep retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E093D0:				; CODE XREF: sub_67E09380+20j
		cmp	edx, 273Bh
		jz	short loc_67E09430
		cmp	edx, 273Fh
		jz	short loc_67E09430

loc_67E093E0:				; CODE XREF: sub_67E09380+47j
					; sub_67E09380+8Fj ...
		mov	eax, offset aOrg_freedes_54 ; "org.freedesktop.DBus.Error.Failed"

locret_67E093E5:			; CODE XREF: sub_67E09380+Cj
					; sub_67E09380+1Bj ...
		rep retn
; ---------------------------------------------------------------------------

loc_67E093E7:				; CODE XREF: sub_67E09380+Ej
		cmp	edx, 0Ch
		mov	eax, offset aOrg_freedes_55 ; "org.freedesktop.DBus.Error.NoMemory"
		jz	short locret_67E093E5
		jle	short loc_67E09413
		cmp	edx, 11h
		mov	eax, offset aOrg_freedes_56 ; "org.freedesktop.DBus.Error.FileExists"
		jz	short locret_67E093E5
		cmp	edx, 17h
		mov	eax, offset aOrg_freedes_49 ; "org.freedesktop.DBus.Error.LimitsExceed"...
		jz	short locret_67E093E5
		cmp	edx, 0Dh
		mov	eax, offset aOrg_freedes_57 ; "org.freedesktop.DBus.Error.AccessDenied"
		jnz	short loc_67E093E0
		rep retn
; ---------------------------------------------------------------------------

loc_67E09413:				; CODE XREF: sub_67E09380+71j
		cmp	edx, 1
		mov	eax, offset aOrg_freedes_57 ; "org.freedesktop.DBus.Error.AccessDenied"
		jz	short locret_67E093E5
		cmp	edx, 2
		mov	eax, offset aOrg_freedes_58 ; "org.freedesktop.DBus.Error.FileNotFound"
		jnz	short loc_67E093E0
		rep retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E09430:				; CODE XREF: sub_67E09380+56j
					; sub_67E09380+5Ej
		mov	eax, offset aOrg_freedes_59 ; "org.freedesktop.DBus.Error.NotSupported"
		retn
sub_67E09380	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E09440	proc near		; CODE XREF: sub_67DF5CD0+2A5p
		sub	esp, 0Ch
		call	ds:_errno
		cmp	dword ptr [eax], 20h
		setz	al
		add	esp, 0Ch
		movzx	eax, al
		retn
sub_67E09440	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E09460	proc near		; CODE XREF: sub_67DE7F60+F7p
					; sub_67DF7020+16Ap
		sub	esp, 0Ch
		call	ds:_errno
		cmp	dword ptr [eax], 4
		setz	al
		add	esp, 0Ch
		movzx	eax, al
		retn
sub_67E09460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E09480	proc near		; CODE XREF: sub_67DF5890:loc_67DF5BF0p
					; sub_67DF6A20:loc_67DF6FC0p
		sub	esp, 0Ch
		call	ds:_errno
		cmp	dword ptr [eax], 0Ch
		setz	al
		add	esp, 0Ch
		movzx	eax, al
		retn
sub_67E09480	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		call	ds:_errno
		mov	eax, [eax]
		test	eax, eax
		setnz	al
		add	esp, 0Ch
		movzx	eax, al
		retn
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		call	ds:_errno
		mov	dword ptr [eax], 0
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E094E0	proc near		; CODE XREF: sub_67DE8390+17Fp
					; sub_67DEE790+302p ...

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		call	ds:_errno
		mov	eax, [eax]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E0AF00
		add	esp, 1Ch
		retn
sub_67E094E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E09500(int,	DWORD)
sub_67E09500	proc near		; CODE XREF: sub_67DE8670+ADp
					; sub_67E0A200+B0p

var_4C		= dword	ptr -4Ch
dwLen		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [esp+4Ch+arg_0]
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_4C], esi ;	int
		mov	[esp+4Ch+dwLen], eax ; dwLen
		call	sub_67E0C6A0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67E09530
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E09530:				; CODE XREF: sub_67E09500+21j
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E00CE0
		mov	ecx, eax
		mov	edi, eax
		sub	ecx, [esp+4Ch+arg_4]
		cmp	eax, ecx
		mov	[esp+4Ch+var_20], ecx
		jle	short loc_67E09596
		mov	ebx, ecx
		mov	ebp, 0FFFFFF85h
		nop

loc_67E09550:				; CODE XREF: sub_67E09500+94j
		mov	[esp+4Ch+dwLen], ebx
		mov	[esp+4Ch+var_4C], esi
		call	sub_67E00E50
		mov	ecx, ebp
		mov	[esp+4Ch+dwLen], ebx
		add	ebx, 1
		mov	[esp+4Ch+var_4C], esi
		mov	edx, eax
		shr	al, 1
		mul	cl
		shr	ax, 8
		shr	al, 4
		lea	ecx, [eax+eax]
		shl	eax, 6
		sub	al, cl
		sub	dl, al
		movzx	edx, dl
		movzx	eax, ds:byte_67E2C440[edx]
		mov	[esp+4Ch+var_44], eax
		call	sub_67E01030
		cmp	edi, ebx
		jg	short loc_67E09550

loc_67E09596:				; CODE XREF: sub_67E09500+46j
		mov	ecx, [esp+4Ch+var_20]
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+dwLen], ecx
		mov	[esp+4Ch+var_44], eax
		call	sub_67E023F0
		mov	[esp+4Ch+var_3C], offset a_dbus_generate ; "_dbus_generate_random_ascii"
		mov	[esp+4Ch+var_40], 37Dh
		mov	[esp+4Ch+var_44], offset aRBuildWin32_30 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+dwLen], offset	a_dbus_strin_37	; "_dbus_string_validate_ascii (str, len -"...
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFAE70
		add	esp, 3Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E09500	endp

; ---------------------------------------------------------------------------
		align 10h
		push	edi
		push	esi
		push	ebx
		sub	esp, 40h
		mov	esi, [esp+54h]
		mov	edi, [esp+50h]
		mov	dword ptr [esp+0Ch], offset aFallingBackToP ; "Falling back to pseudorandom for	%d byt"...
		mov	dword ptr [esp+8], offset a_dbus_genera_0 ; "_dbus_generate_pseudorandom_bytes_buffe"...
		mov	[esp+10h], esi
		mov	dword ptr [esp+4], 32Bh
		mov	dword ptr [esp], offset	aRBuildWin32_30	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+3Ch]
		mov	[esp+4], eax
		mov	dword ptr [esp], 0
		call	sub_67E0E540
		mov	eax, [esp+3Ch]
		mov	[esp], eax
		call	srand
		test	esi, esi
		jle	short loc_67E09693
		xor	ebx, ebx
		lea	esi, [esi+0]

loc_67E09650:				; CODE XREF: .text:67E09691j
		call	rand
		mov	[esp+2Ch], eax
		fild	dword ptr [esp+2Ch]
		fdiv	ds:flt_67E2C4CC
		fnstcw	word ptr [esp+2Ah]
		movzx	eax, word ptr [esp+2Ah]
		mov	ah, 0Ch
		mov	[esp+28h], ax
		fmul	ds:flt_67E2C4D0
		fldcw	word ptr [esp+28h]
		fistp	qword ptr [esp+20h]
		fldcw	word ptr [esp+2Ah]
		mov	eax, [esp+20h]
		mov	[edi+ebx], al
		add	ebx, 1
		cmp	esi, ebx
		jg	short loc_67E09650

loc_67E09693:				; CODE XREF: .text:67E09648j
		add	esp, 40h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+20h]
		mov	[esp], esi
		call	sub_67E00CE0
		mov	dword ptr [esp+4], 18h
		mov	[esp], esi
		mov	ebx, eax
		call	sub_67E087C0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67E096D1
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E096D1:				; CODE XREF: .text:67E096C9j
		mov	[esp+4], ebx
		mov	dword ptr [esp+8], 18h
		mov	[esp], esi
		call	sub_67E014C0
		mov	dword ptr [esp+8], offset aLu ;	"%lu"
		mov	dword ptr [esp+4], 18h
		mov	ebx, eax
		mov	eax, [esp+24h]
		mov	[esp], ebx
		mov	[esp+0Ch], eax
		call	sub_67E18A60
		xor	eax, eax
		mov	edx, 18h
		cmp	byte ptr [ebx],	0
		jz	short loc_67E09723

loc_67E09713:				; CODE XREF: .text:67E0971Aj
		add	eax, 1
		cmp	byte ptr [ebx+eax], 0
		jnz	short loc_67E09713
		mov	edx, 18h
		sub	edx, eax

loc_67E09723:				; CODE XREF: .text:67E09711j
		mov	[esp], esi
		mov	[esp+4], edx
		call	sub_67E083B0
		add	esp, 14h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E09740	proc near		; CODE XREF: sub_67DC39B0+2F3p
					; sub_67DD6770+C63p ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= byte ptr -10h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], esi
		call	sub_67E00CE0
		mov	[esp+1Ch+var_18], 0Ch
		mov	[esp+1Ch+var_1C], esi
		mov	ebx, eax
		call	sub_67E087C0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67E09771
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E09771:				; CODE XREF: sub_67E09740+29j
		mov	[esp+1Ch+var_18], ebx
		mov	[esp+1Ch+var_14], 0Ch
		mov	[esp+1Ch+var_1C], esi
		call	sub_67E014C0
		mov	[esp+1Ch+var_14], offset aLd ; "%ld"
		mov	[esp+1Ch+var_18], 0Ch ;	size_t
		mov	ebx, eax
		mov	eax, dword ptr [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_1C], ebx ;	char *
		mov	dword ptr [esp+1Ch+var_10], eax	; char
		call	sub_67E18A60
		xor	eax, eax
		mov	edx, 0Ch
		cmp	byte ptr [ebx],	0
		jz	short loc_67E097C3

loc_67E097B3:				; CODE XREF: sub_67E09740+7Aj
		add	eax, 1
		cmp	byte ptr [ebx+eax], 0
		jnz	short loc_67E097B3
		mov	edx, 0Ch
		sub	edx, eax

loc_67E097C3:				; CODE XREF: sub_67E09740+71j
		mov	[esp+1Ch+var_1C], esi
		mov	[esp+1Ch+var_18], edx
		call	sub_67E083B0
		add	esp, 14h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
sub_67E09740	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame fpd=1Ch

; int __cdecl sub_67E097E0(int,	char *,	int)
sub_67E097E0	proc near		; CODE XREF: .text:67E0FCA5p

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		xor	esi, esi
		push	ebx
		sub	esp, 6Ch
		mov	eax, [esp+78h+arg_4]
		lea	ebp, [esp+5Ch]
		mov	edi, [esp+78h+arg_0]
		lea	ebx, [esp+78h+var_48]
		mov	[esp+78h+var_1C], 0
		mov	[esp+78h+var_74], eax ;	char *
		lea	eax, [esp+78h+var_34]
		mov	[esp+78h+var_78], eax ;	int
		call	sub_67E03060
		mov	[esp+78h+var_78], edi
		call	sub_67E00CE0
		mov	[esp+78h+var_4C], eax
		jmp	loc_67E098D4
; ---------------------------------------------------------------------------

loc_67E09828:				; CODE XREF: sub_67E097E0+10Ej
		mov	[esp+78h+var_78], ebx
		call	sub_67E03350
		test	eax, eax
		jz	loc_67E09910
		mov	eax, [esp+78h+var_1C]
		mov	[esp+78h+var_68], 0 ; int
		mov	[esp+78h+var_6C], ebx ;	int
		mov	[esp+78h+var_74], esi ;	int
		sub	eax, esi
		mov	[esp+78h+var_70], eax ;	size_t
		mov	[esp+78h+var_78], edi ;	int
		call	sub_67E05A20
		test	eax, eax
		jz	loc_67E09948
		mov	[esp+78h+var_78], ebx
		call	sub_67E07400
		mov	[esp+78h+var_78], ebx
		call	sub_67E00CE0
		test	eax, eax
		jz	short loc_67E098C5
		lea	eax, [esp+78h+var_34]
		mov	[esp+78h+var_74], eax
		mov	[esp+78h+var_78], ebx
		call	sub_67E0C960
		test	eax, eax
		jz	loc_67E09948
		lea	eax, [esp+78h+var_20]
		mov	[esp+78h+var_74], eax
		mov	[esp+78h+var_78], ebx
		call	sub_67E02A10
		test	eax, eax
		jz	loc_67E09948
		mov	eax, [esp+78h+var_20]
		mov	[esp+78h+var_74], eax
		mov	eax, [esp+78h+arg_8]
		mov	[esp+78h+var_78], eax
		call	sub_67DFBB80
		test	eax, eax
		jz	loc_67E09952

loc_67E098C5:				; CODE XREF: sub_67E097E0+94j
		mov	[esp+78h+var_78], ebx
		call	sub_67E02BF0
		mov	esi, [esp+78h+var_1C]
		add	esi, 1

loc_67E098D4:				; CODE XREF: sub_67E097E0+43j
		mov	[esp+78h+var_6C], ebp
		mov	[esp+78h+var_70], offset asc_67E2C3AB ;	";"
		mov	[esp+78h+var_74], esi
		mov	[esp+78h+var_78], edi
		call	sub_67E009F0
		test	eax, eax
		jnz	loc_67E09828
		cmp	esi, [esp+78h+var_4C]
		mov	al, 1
		jz	short loc_67E09940
		lea	ebx, [esp+78h+var_48]
		mov	[esp+78h+var_78], ebx
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67E09968
		lea	esi, [esi+0]

loc_67E09910:				; CODE XREF: sub_67E097E0+52j
					; sub_67E097E0+170j ...
		mov	eax, [esp+78h+arg_8]
		mov	[esp+78h+var_70], 0
		mov	[esp+78h+var_74], offset dbus_free
		mov	[esp+78h+var_78], eax
		call	sub_67DFB9D0
		mov	eax, [esp+78h+arg_8]
		mov	[esp+78h+var_78], eax
		call	sub_67DFBC90
		xor	eax, eax

loc_67E09940:				; CODE XREF: sub_67E097E0+11Aj
					; sub_67E097E0+200j
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E09948:				; CODE XREF: sub_67E097E0+7Cj
					; sub_67E097E0+A8j ...
		mov	[esp+78h+var_78], ebx
		call	sub_67E02BF0
		jmp	short loc_67E09910
; ---------------------------------------------------------------------------

loc_67E09952:				; CODE XREF: sub_67E097E0+DFj
					; sub_67E097E0+1EFj
		mov	[esp+78h+var_78], ebx
		call	sub_67E02BF0
		mov	eax, [esp+78h+var_20]
		mov	[esp+78h+var_78], eax
		call	dbus_free
		jmp	short loc_67E09910
; ---------------------------------------------------------------------------

loc_67E09968:				; CODE XREF: sub_67E097E0+12Aj
		mov	eax, [esp+78h+var_4C]
		mov	[esp+78h+var_68], 0 ; int
		mov	[esp+78h+var_6C], ebx ;	int
		mov	[esp+78h+var_74], esi ;	int
		sub	eax, esi
		mov	[esp+78h+var_70], eax ;	size_t
		mov	[esp+78h+var_78], edi ;	int
		call	sub_67E05A20
		test	eax, eax
		jz	short loc_67E09948
		lea	eax, [esp+78h+var_34]
		mov	[esp+78h+var_74], eax
		mov	[esp+78h+var_78], ebx
		call	sub_67E0C960
		test	eax, eax
		jz	short loc_67E09948
		lea	eax, [esp+78h+var_20]
		mov	[esp+78h+var_74], eax
		mov	[esp+78h+var_78], ebx
		call	sub_67E02A10
		test	eax, eax
		jz	short loc_67E09948
		mov	eax, [esp+78h+var_20]
		mov	[esp+78h+var_74], eax
		mov	eax, [esp+78h+arg_8]
		mov	[esp+78h+var_78], eax
		call	sub_67DFBB80
		test	eax, eax
		jz	short loc_67E09952
		mov	[esp+78h+var_78], ebx
		call	sub_67E02BF0
		mov	eax, 1
		xchg	ax, ax
		jmp	loc_67E09940
sub_67E097E0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, ds:_environ
		mov	dword ptr [esp+10h], offset a_dbus_get_envi ; "_dbus_get_environment"
		mov	dword ptr [esp+0Ch], 0E3h
		mov	dword ptr [esp+8], offset aRBuildWin32_30 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aEnvironNull ; "environ != NULL"
		mov	esi, [eax]
		test	esi, esi
		setnz	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, ds:_environ
		mov	ecx, 4
		mov	edx, [eax]
		xor	eax, eax
		mov	ebx, [edx]
		test	ebx, ebx
		jz	short loc_67E09A53

loc_67E09A42:				; CODE XREF: .text:67E09A4Aj
		add	eax, 1
		mov	ecx, [edx+eax*4]
		test	ecx, ecx
		jnz	short loc_67E09A42
		lea	ecx, ds:4[eax*4]

loc_67E09A53:				; CODE XREF: .text:67E09A40j
		mov	[esp], ecx
		call	dbus_malloc0
		test	eax, eax
		mov	edi, eax
		mov	ebp, eax
		jz	short loc_67E09ABC
		mov	eax, ds:_environ
		mov	eax, [eax]
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_67E09ABC
		mov	ebx, 4
		xor	esi, esi
		jmp	short loc_67E09A95
; ---------------------------------------------------------------------------
		align 10h

loc_67E09A80:				; CODE XREF: .text:67E09AA2j
		mov	eax, ds:_environ
		lea	edx, [ebx+4]
		mov	eax, [eax]
		mov	eax, [eax+ebx]
		test	eax, eax
		jz	short loc_67E09ABC
		mov	esi, ebx
		mov	ebx, edx

loc_67E09A95:				; CODE XREF: .text:67E09A77j
		mov	[esp], eax
		call	sub_67DFAA60
		test	eax, eax
		mov	[edi+esi], eax
		jnz	short loc_67E09A80
		mov	eax, ds:_environ
		mov	eax, [eax]
		mov	edx, [eax+esi]
		test	edx, edx
		jz	short loc_67E09ABC
		mov	[esp], edi
		xor	ebp, ebp
		call	dbus_free_string_array

loc_67E09ABC:				; CODE XREF: .text:67E09A61j
					; .text:67E09A6Ej ...
		add	esp, 2Ch
		mov	eax, ebp
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E09AD0(char	*VarName)
sub_67E09AD0	proc near		; CODE XREF: sub_67DC79C0+3Cp
					; sub_67DC7A30+116p ...

VarName		= dword	ptr  4

		push	ebx
		sub	esp, 8
		mov	ebx, [esp+0Ch+VarName]
		call	sub_67E0ABE0
		test	eax, eax
		jz	short loc_67E09AE8
		xor	eax, eax
		add	esp, 8
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67E09AE8:				; CODE XREF: sub_67E09AD0+Fj
		mov	[esp+0Ch+VarName], ebx ; VarName
		add	esp, 8
		pop	ebx
		jmp	getenv
sub_67E09AD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E09B00(char	*, char	*)
sub_67E09B00	proc near		; CODE XREF: sub_67DC7A30+17Cp
					; sub_67DC7A30+1C6p

Str		= dword	ptr -3Ch
Source		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		xor	eax, eax
		mov	[esp+3Ch+var_C], esi
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], edi
		mov	edi, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_10], ebx
		mov	[esp+3Ch+var_4], ebp
		test	esi, esi
		setnz	al
		mov	[esp+3Ch+var_2C], offset a_dbus_setenv ; "_dbus_setenv"
		mov	[esp+3Ch+var_30], 73h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_30 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+Source], offset aVarnameNull ;	"varname != NULL"
		mov	[esp+3Ch+Str], eax
		call	sub_67DFAE70
		test	edi, edi
		jz	short loc_67E09BC0
		mov	[esp+3Ch+Str], esi ; Str
		call	strlen
		mov	[esp+3Ch+Str], edi ; Str
		mov	ebp, eax
		call	strlen
		lea	eax, [ebp+eax+2]
		mov	[esp+3Ch+Str], eax ; Size
		call	malloc
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67E09BB8
		mov	[esp+3Ch+Source], esi ;	Source
		mov	[esp+3Ch+Str], eax ; Dest
		call	strcpy
		lea	eax, [ebx+ebp+1]
		mov	word ptr [ebx+ebp], 3Dh
		mov	[esp+3Ch+Source], edi ;	Source
		mov	[esp+3Ch+Str], eax ; Dest
		call	strcpy

loc_67E09B94:				; CODE XREF: sub_67E09B00+F3j
		mov	[esp+3Ch+Str], ebx ; EnvString
		call	_putenv
		test	eax, eax
		setz	al
		movzx	eax, al

loc_67E09BA4:				; CODE XREF: sub_67E09B00+BAj
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67E09BB8:				; CODE XREF: sub_67E09B00+70j
					; sub_67E09B00+D7j
		xor	eax, eax
		jmp	short loc_67E09BA4
; ---------------------------------------------------------------------------
		align 10h

loc_67E09BC0:				; CODE XREF: sub_67E09B00+4Cj
		mov	[esp+3Ch+Str], esi ; Str
		call	strlen
		add	eax, 2
		mov	[esp+3Ch+Str], eax ; Size
		call	malloc
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67E09BB8
		mov	[esp+3Ch+Source], esi ;	Source
		mov	[esp+3Ch+Str], eax ; Dest
		call	strcpy
		mov	[esp+3Ch+Str], ebx ; Str
		call	strlen
		mov	word ptr [ebx+eax], 3Dh
		jmp	short loc_67E09B94
sub_67E09B00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_67E09C00	proc near		; CODE XREF: sub_67DFAD60+C6p
					; sub_67DFAE30+30p ...

VarName		= dword	ptr -1Ch
Format		= dword	ptr -18h
var_14		= dword	ptr -14h

		sub	esp, 1Ch
		call	sub_67E0C170
		call	sub_67E0ABE0
		test	eax, eax
		jz	short loc_67E09C16

loc_67E09C11:				; CODE XREF: sub_67E09C00+24j
					; sub_67E09C00+29j ...
		call	abort
; ---------------------------------------------------------------------------

loc_67E09C16:				; CODE XREF: sub_67E09C00+Fj
		mov	[esp+1Ch+VarName], offset VarName ; "DBUS_BLOCK_ON_ABORT"
		call	getenv
		test	eax, eax
		jz	short loc_67E09C11
		cmp	byte ptr [eax],	0
		jz	short loc_67E09C11
		nop
		lea	esi, [esi+0]
		call	sub_67E0C920
		mov	[esp+1Ch+Format], offset aProcessLuSleep ; "  Process %lu sleeping for gdb attach\n"
		mov	[esp+1Ch+var_14], eax
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+1Ch+VarName], eax ; File
		call	fprintf
		mov	[esp+1Ch+VarName], 2BF20h ; DWORD
		call	sub_67E0B530
		jmp	short loc_67E09C11
sub_67E09C00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E09C60	proc near		; CODE XREF: sub_67DC3290+29Bp
					; sub_67DD6770+263p ...

Str		= dword	ptr -4Ch
EndPtr		= dword	ptr -48h
Radix		= dword	ptr -44h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 4Ch
		mov	[esp+4Ch+var_C], esi
		mov	esi, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_8], edi
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_C]
		mov	[esp+4Ch+Str], esi
		call	sub_67E00CE0
		mov	[esp+4Ch+Str], esi
		mov	[esp+4Ch+EndPtr], ebx
		sub	eax, ebx
		mov	[esp+4Ch+Radix], eax
		call	sub_67E01280
		mov	edi, ds:_errno
		mov	[esp+4Ch+var_20], 0
		mov	esi, eax
		call	edi ; _errno
		mov	dword ptr [eax], 0
		lea	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+Radix], 0 ; Radix
		mov	[esp+4Ch+EndPtr], eax ;	EndPtr
		mov	[esp+4Ch+Str], esi ; Str
		call	strtol
		mov	[esp+4Ch+var_30], eax
		mov	eax, [esp+4Ch+var_20]
		test	eax, eax
		jz	short loc_67E09D08
		cmp	esi, eax
		jz	short loc_67E09D08
		call	edi ; _errno
		mov	eax, [eax]
		test	eax, eax
		nop
		jnz	short loc_67E09D08
		mov	edi, [esp+4Ch+arg_8]
		test	edi, edi
		jz	short loc_67E09CF4
		mov	edx, [esp+4Ch+var_30]
		mov	eax, [esp+4Ch+arg_8]
		mov	[eax], edx

loc_67E09CF4:				; CODE XREF: sub_67E09C60+88j
		test	ebp, ebp
		mov	eax, 1
		jz	short loc_67E09D0A
		add	ebx, [esp+4Ch+var_20]
		sub	ebx, esi
		mov	[ebp+0], ebx
		jmp	short loc_67E09D0A
; ---------------------------------------------------------------------------

loc_67E09D08:				; CODE XREF: sub_67E09C60+73j
					; sub_67E09C60+77j ...
		xor	eax, eax

loc_67E09D0A:				; CODE XREF: sub_67E09C60+9Bj
					; sub_67E09C60+A6j
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
sub_67E09C60	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 4Ch
		mov	[esp+40h], esi
		mov	esi, [esp+50h]
		mov	[esp+3Ch], ebx
		mov	ebx, [esp+54h]
		mov	[esp+44h], edi
		mov	[esp+48h], ebp
		mov	ebp, [esp+5Ch]
		mov	[esp], esi
		call	sub_67E00CE0
		mov	[esp], esi
		mov	[esp+4], ebx
		sub	eax, ebx
		mov	[esp+8], eax
		call	sub_67E01280
		mov	edi, ds:_errno
		mov	dword ptr [esp+2Ch], 0
		mov	esi, eax
		call	edi ; _errno
		mov	dword ptr [eax], 0
		lea	eax, [esp+2Ch]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], eax
		mov	[esp], esi
		call	strtoul
		mov	[esp+1Ch], eax
		mov	eax, [esp+2Ch]
		test	eax, eax
		jz	short loc_67E09DC8
		cmp	esi, eax
		jz	short loc_67E09DC8
		call	edi ; _errno
		mov	ecx, [eax]
		test	ecx, ecx
		nop
		jnz	short loc_67E09DC8
		mov	edx, [esp+58h]
		test	edx, edx
		jz	short loc_67E09DB4
		mov	edx, [esp+1Ch]
		mov	eax, [esp+58h]
		mov	[eax], edx

loc_67E09DB4:				; CODE XREF: .text:67E09DA8j
		test	ebp, ebp
		mov	eax, 1
		jz	short loc_67E09DCA
		add	ebx, [esp+2Ch]
		sub	ebx, esi
		mov	[ebp+0], ebx
		jmp	short loc_67E09DCA
; ---------------------------------------------------------------------------

loc_67E09DC8:				; CODE XREF: .text:67E09D93j
					; .text:67E09D97j ...
		xor	eax, eax

loc_67E09DCA:				; CODE XREF: .text:67E09DBBj
					; .text:67E09DC6j
		mov	ebx, [esp+3Ch]
		mov	esi, [esp+40h]
		mov	edi, [esp+44h]
		mov	ebp, [esp+48h]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E09DE0	proc near		; CODE XREF: sub_67DE8390+186p
					; .text:67E11410p ...
		sub	esp, 0Ch
		call	ds:_errno
		mov	edx, [eax]
		mov	eax, offset aOrg_freedes_49 ; "org.freedesktop.DBus.Error.LimitsExceed"...
		cmp	edx, 18h
		jz	short loc_67E09E30
		jle	short loc_67E09E34
		cmp	edx, 2740h
		mov	eax, offset aOrg_freedes_50 ; "org.freedesktop.DBus.Error.AddressInUse"
		jz	short loc_67E09E30
		jle	short loc_67E09E62
		cmp	edx, 274Ch
		mov	eax, offset aOrg_freedes_51 ; "org.freedesktop.DBus.Error.Timeout"
		jz	short loc_67E09E30
		cmp	edx, 274Dh
		mov	eax, offset aOrg_freedes_52 ; "org.freedesktop.DBus.Error.NoServer"
		jz	short loc_67E09E30
		cmp	edx, 2743h
		mov	eax, offset aOrg_freedes_53 ; "org.freedesktop.DBus.Error.NoNetwork"
		jnz	short loc_67E09E72
		lea	esi, [esi+0]

loc_67E09E30:				; CODE XREF: sub_67E09DE0+13j
					; sub_67E09DE0+22j ...
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_67E09E34:				; CODE XREF: sub_67E09DE0+15j
		cmp	edx, 0Ch
		mov	eax, offset aOrg_freedes_55 ; "org.freedesktop.DBus.Error.NoMemory"
		jz	short loc_67E09E30
		xchg	ax, ax
		jle	short loc_67E09E80
		cmp	edx, 11h
		mov	eax, offset aOrg_freedes_56 ; "org.freedesktop.DBus.Error.FileExists"
		jz	short loc_67E09E30
		cmp	edx, 17h
		mov	eax, offset aOrg_freedes_49 ; "org.freedesktop.DBus.Error.LimitsExceed"...
		jz	short loc_67E09E30
		cmp	edx, 0Dh
		mov	eax, offset aOrg_freedes_57 ; "org.freedesktop.DBus.Error.AccessDenied"
		jnz	short loc_67E09E72
		jmp	short loc_67E09E30
; ---------------------------------------------------------------------------

loc_67E09E62:				; CODE XREF: sub_67E09DE0+24j
		cmp	edx, 273Bh
		jz	short loc_67E09E96
		cmp	edx, 273Fh
		jz	short loc_67E09E96

loc_67E09E72:				; CODE XREF: sub_67E09DE0+4Bj
					; sub_67E09DE0+7Ej ...
		mov	eax, offset aOrg_freedes_54 ; "org.freedesktop.DBus.Error.Failed"
		jmp	short loc_67E09E30
; ---------------------------------------------------------------------------
		align 10h

loc_67E09E80:				; CODE XREF: sub_67E09DE0+60j
		cmp	edx, 1
		mov	eax, offset aOrg_freedes_57 ; "org.freedesktop.DBus.Error.AccessDenied"
		jz	short loc_67E09E30
		cmp	edx, 2
		mov	eax, offset aOrg_freedes_58 ; "org.freedesktop.DBus.Error.FileNotFound"
		jnz	short loc_67E09E72
		jmp	short loc_67E09E30
; ---------------------------------------------------------------------------

loc_67E09E96:				; CODE XREF: sub_67E09DE0+88j
					; sub_67E09DE0+90j
		mov	eax, offset aOrg_freedes_59 ; "org.freedesktop.DBus.Error.NotSupported"
		add	esp, 0Ch
		retn
sub_67E09DE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E09EA0(void	*, size_t)
sub_67E09EA0	proc near		; CODE XREF: sub_67DFA980+52p
					; .text:67DFB1A9p ...

Seed		= dword	ptr -5Ch
Src		= dword	ptr -58h
Size		= dword	ptr -54h
Format		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_3C		= qword	ptr -3Ch
var_34		= word ptr -34h
var_32		= word ptr -32h
var_30		= dword	ptr -30h
Dst		= byte ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 50h
		lea	ebx, [esp+5Ch+Dst]
		mov	edi, [esp+5Ch+arg_0]
		mov	esi, [esp+5Ch+arg_4]
		mov	[esp+5Ch+Seed],	ebx
		call	sub_67E03350
		test	eax, eax
		jz	loc_67E09F91
		mov	[esp+5Ch+Src], esi ; dwLen
		mov	[esp+5Ch+Seed],	ebx ; int
		call	sub_67E0C6A0
		test	eax, eax
		jz	short loc_67E09EF1
		mov	[esp+5Ch+Size],	esi ; Size
		mov	[esp+5Ch+Src], edi ; Src
		mov	[esp+5Ch+Seed],	ebx ; Dst
		call	sub_67E02820
		mov	[esp+5Ch+Seed],	ebx
		call	sub_67E02BF0

loc_67E09EEA:				; CODE XREF: sub_67E09EA0+A3j
					; sub_67E09EA0+13Bj
		add	esp, 50h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67E09EF1:				; CODE XREF: sub_67E09EA0+30j
		mov	[esp+5Ch+Seed],	ebx
		call	sub_67E02BF0
		mov	dword ptr [esp+5Ch+var_4C], esi	; char
		mov	[esp+5Ch+Format], offset aFallingBackToP ; "Falling back to pseudorandom for %d	byt"...
		mov	[esp+5Ch+Size],	offset a_dbus_genera_0 ; "_dbus_generate_pseudorandom_bytes_buffe"...
		mov	[esp+5Ch+Src], 32Bh ; int
		mov	[esp+5Ch+Seed],	offset aRBuildWin32_30 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+5Ch+var_10]
		mov	[esp+5Ch+Src], eax
		mov	[esp+5Ch+Seed],	0
		call	sub_67E0E540
		mov	eax, [esp+5Ch+var_10]
		mov	[esp+5Ch+Seed],	eax ; Seed
		call	srand
		test	esi, esi
		jle	short loc_67E09EEA
		xor	ebx, ebx

loc_67E09F47:				; CODE XREF: sub_67E09EA0+E8j
		call	rand
		mov	[esp+5Ch+var_30], eax
		fild	[esp+5Ch+var_30]
		fdiv	ds:flt_67E2C4CC
		fnstcw	[esp+5Ch+var_32]
		movzx	eax, [esp+5Ch+var_32]
		mov	ah, 0Ch
		mov	[esp+5Ch+var_34], ax
		fmul	ds:flt_67E2C4D0
		fldcw	[esp+5Ch+var_34]
		fistp	[esp+5Ch+var_3C]
		fldcw	[esp+5Ch+var_32]
		mov	eax, dword ptr [esp+5Ch+var_3C]
		mov	[edi+ebx], al
		add	ebx, 1
		cmp	esi, ebx
		jg	short loc_67E09F47
		add	esp, 50h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67E09F91:				; CODE XREF: sub_67E09EA0+1Cj
		mov	dword ptr [esp+5Ch+var_4C], esi	; char
		mov	[esp+5Ch+Format], offset aFallingBackToP ; "Falling back to pseudorandom for %d	byt"...
		mov	[esp+5Ch+Size],	offset a_dbus_genera_0 ; "_dbus_generate_pseudorandom_bytes_buffe"...
		mov	[esp+5Ch+Src], 32Bh ; int
		mov	[esp+5Ch+Seed],	offset aRBuildWin32_30 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+5Ch+var_10]
		mov	[esp+5Ch+Src], eax
		mov	[esp+5Ch+Seed],	0
		call	sub_67E0E540
		mov	eax, [esp+5Ch+var_10]
		mov	[esp+5Ch+Seed],	eax ; Seed
		call	srand
		test	esi, esi
		jle	loc_67E09EEA
		xor	ebx, ebx

loc_67E09FE3:				; CODE XREF: sub_67E09EA0+184j
		call	rand
		mov	[esp+5Ch+var_30], eax
		fild	[esp+5Ch+var_30]
		fdiv	ds:flt_67E2C4CC
		fnstcw	[esp+5Ch+var_32]
		movzx	eax, [esp+5Ch+var_32]
		mov	ah, 0Ch
		mov	[esp+5Ch+var_34], ax
		fmul	ds:flt_67E2C4D0
		fldcw	[esp+5Ch+var_34]
		fistp	[esp+5Ch+var_3C]
		fldcw	[esp+5Ch+var_32]
		mov	eax, dword ptr [esp+5Ch+var_3C]
		mov	[edi+ebx], al
		add	ebx, 1
		cmp	esi, ebx
		jg	short loc_67E09FE3
		add	esp, 50h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E09EA0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+8]
		mov	eax, [esp+4]
		mov	[eax], edx
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], 1
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0A050	proc near		; CODE XREF: .text:67E16671p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		not	eax
		shr	eax, 1Fh
		retn
sub_67E0A050	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	eax, [eax]
		sub	eax, 1
		cmp	eax, 1
		setbe	al
		movzx	eax, al
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0A080	proc near		; CODE XREF: .text:67E113E6p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0FFFFFFFFh
		retn
sub_67E0A080	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0A090	proc near		; CODE XREF: sub_67DD6770+182p
					; sub_67DD6770+AE4p

lpFileName	= dword	ptr -2Ch
dwDesiredAccess	= dword	ptr -28h
dwShareMode	= dword	ptr -24h
lpSecurityAttributes= dword ptr	-20h
dwCreationDisposition= dword ptr -1Ch
dwFlagsAndAttributes= dword ptr	-18h
hTemplateFile	= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [esp+2Ch+arg_4]
		test	esi, esi
		jz	loc_67E0A180
		mov	[esp+2Ch+lpFileName], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E0A180

loc_67E0A0B4:				; CODE XREF: sub_67E0A090+F5j
		mov	[esp+2Ch+lpFileName], edx
		mov	[esp+2Ch+dwCreationDisposition], offset	a_dbus_create_f	; "_dbus_create_file_exclusively"
		mov	[esp+2Ch+lpSecurityAttributes],	176h
		mov	[esp+2Ch+dwShareMode], offset aRBuildWin32_31 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+dwDesiredAccess], offset aErrorNullDb_23 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+lpFileName], eax
		call	sub_67E01770
		mov	[esp+2Ch+hTemplateFile], 0FFFFFFFFh ; hTemplateFile
		mov	[esp+2Ch+dwFlagsAndAttributes],	80h ; dwFlagsAndAttributes
		mov	[esp+2Ch+dwCreationDisposition], 1 ; dwCreationDisposition
		mov	[esp+2Ch+lpSecurityAttributes],	0 ; lpSecurityAttributes
		mov	[esp+2Ch+dwShareMode], 3 ; dwShareMode
		mov	ebx, eax
		mov	[esp+2Ch+dwDesiredAccess], 40000000h ; dwDesiredAccess
		mov	[esp+2Ch+lpFileName], eax ; lpFileName
		call	ds:CreateFileA
		sub	esp, 1Ch
		cmp	eax, 0FFFFFFFFh
		mov	edi, eax
		jz	loc_67E0A1D2
		mov	[esp+2Ch+dwFlagsAndAttributes],	eax
		mov	[esp+2Ch+dwCreationDisposition], ebx ; char
		mov	[esp+2Ch+lpSecurityAttributes],	offset aExclusiveFileS ; "exclusive file %s hnd	%p opened\n"
		mov	[esp+2Ch+dwShareMode], offset a_dbus_create_f ;	"_dbus_create_file_exclusively"
		mov	[esp+2Ch+dwDesiredAccess], 188h	; int
		mov	[esp+2Ch+lpFileName], offset aRBuildWin32_31 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+2Ch+lpFileName], edi ; hObject
		call	ds:CloseHandle
		mov	edx, eax
		sub	esp, 4
		test	edx, edx
		mov	eax, 1
		jz	short loc_67E0A190
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0A180:				; CODE XREF: sub_67E0A090+Cj
					; sub_67E0A090+1Ej
		mov	edx, 1
		jmp	loc_67E0A0B4
; ---------------------------------------------------------------------------
		align 10h

loc_67E0A190:				; CODE XREF: sub_67E0A090+E2j
		call	ds:GetLastError
		mov	[esp+2Ch+lpFileName], eax ; DWORD
		call	sub_67E0AD30
		mov	edi, eax
		call	sub_67E0ACC0
		mov	[esp+2Ch+dwCreationDisposition], edi
		mov	[esp+2Ch+lpSecurityAttributes],	ebx ; char
		mov	[esp+2Ch+dwShareMode], offset aCouldNotCloseF ;	"Could not close file %s: %s"

loc_67E0A1B5:				; CODE XREF: sub_67E0A090+167j
		mov	[esp+2Ch+dwDesiredAccess], eax ; char *
		mov	[esp+2Ch+lpFileName], esi ; int
		call	dbus_set_error
		mov	[esp+2Ch+lpFileName], edi ; HLOCAL
		call	sub_67E0AEE0
		add	esp, 20h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67E0A1D2:				; CODE XREF: sub_67E0A090+9Bj
		call	ds:GetLastError
		mov	[esp+2Ch+lpFileName], eax ; DWORD
		call	sub_67E0AD30
		mov	edi, eax
		call	sub_67E0ACC0
		mov	[esp+2Ch+dwCreationDisposition], edi
		mov	[esp+2Ch+lpSecurityAttributes],	ebx
		mov	[esp+2Ch+dwShareMode], offset aCouldNotCrea_0 ;	"Could not create file %s: %s"
		jmp	short loc_67E0A1B5
sub_67E0A090	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0A200	proc near		; CODE XREF: sub_67DD6770+D39p
					; sub_67DE8670+22Fp ...

lpFileName	= dword	ptr -6Ch
dwDesiredAccess	= dword	ptr -68h
dwShareMode	= dword	ptr -64h
lpSecurityAttributes= dword ptr	-60h
dwCreationDisposition= dword ptr -5Ch
dwFlagsAndAttributes= dword ptr	-58h
hTemplateFile	= dword	ptr -54h
hFile		= dword	ptr -4Ch
lpExistingFileName= dword ptr -48h
var_44		= dword	ptr -44h
lpNewFileName	= dword	ptr -40h
var_34		= dword	ptr -34h
NumberOfBytesWritten= dword ptr	-20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	edi, [esp+6Ch+arg_C]
		mov	ebx, [esp+6Ch+arg_0]
		mov	ebp, [esp+6Ch+arg_4]
		test	edi, edi
		jz	loc_67E0A490
		mov	[esp+6Ch+lpFileName], edi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E0A490

loc_67E0A22D:				; CODE XREF: sub_67E0A200+295j
		lea	esi, [esp+6Ch+var_34]
		mov	[esp+6Ch+lpFileName], edx
		mov	[esp+6Ch+dwCreationDisposition], offset	a_dbus_strin_39	; "_dbus_string_save_to_file"
		mov	[esp+6Ch+lpSecurityAttributes],	0E3h ; char
		mov	[esp+6Ch+dwShareMode], offset aRBuildWin32_31 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+dwDesiredAccess], offset aErrorNullDb_23 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp+6Ch+lpFileName], esi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67E0A4D0
		mov	[esp+6Ch+lpSecurityAttributes],	0 ; char
		mov	[esp+6Ch+dwShareMode], esi
		mov	[esp+6Ch+dwDesiredAccess], 0
		mov	[esp+6Ch+lpFileName], ebp
		call	sub_67E036F0
		test	eax, eax
		jz	loc_67E0A4A0
		mov	[esp+6Ch+dwDesiredAccess], offset a_ ; "."
		mov	[esp+6Ch+lpFileName], esi ; int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67E0A4A0
		mov	[esp+6Ch+dwDesiredAccess], 8 ; DWORD
		mov	[esp+6Ch+lpFileName], esi ; int
		call	sub_67E09500
		test	eax, eax
		jz	loc_67E0A4A0
		mov	[esp+6Ch+lpFileName], ebp
		call	sub_67E01770
		mov	[esp+6Ch+lpFileName], esi
		mov	[esp+6Ch+lpNewFileName], eax
		call	sub_67E01770
		mov	[esp+6Ch+hTemplateFile], 0FFFFFFFFh ; hTemplateFile
		mov	[esp+6Ch+dwFlagsAndAttributes],	80h ; dwFlagsAndAttributes
		mov	[esp+6Ch+dwCreationDisposition], 1 ; dwCreationDisposition
		mov	[esp+6Ch+lpSecurityAttributes],	0 ; lpSecurityAttributes
		mov	[esp+6Ch+dwShareMode], 3 ; dwShareMode
		mov	[esp+6Ch+lpExistingFileName], eax
		mov	[esp+6Ch+dwDesiredAccess], 40000000h ; dwDesiredAccess
		mov	[esp+6Ch+lpFileName], eax ; lpFileName
		call	ds:CreateFileA
		sub	esp, 1Ch
		cmp	eax, 0FFFFFFFFh
		mov	[esp+6Ch+hFile], eax
		jz	loc_67E0A655
		mov	eax, [esp+6Ch+arg_8]
		test	eax, eax
		jz	short loc_67E0A33A
		mov	[esp+6Ch+dwDesiredAccess], edi
		mov	[esp+6Ch+lpFileName], esi
		call	sub_67E0AB90
		test	eax, eax
		jz	loc_67E0A507

loc_67E0A33A:				; CODE XREF: sub_67E0A200+124j
		mov	edx, [esp+6Ch+lpExistingFileName]
		mov	eax, [esp+6Ch+hFile]
		mov	[esp+6Ch+lpSecurityAttributes],	offset aTmpFileSHndPOp ; "tmp file %s hnd %p opened\n"
		mov	[esp+6Ch+dwShareMode], offset a_dbus_strin_39 ;	"_dbus_string_save_to_file"
		mov	[esp+6Ch+dwCreationDisposition], edx ; char
		mov	[esp+6Ch+dwFlagsAndAttributes],	eax
		mov	[esp+6Ch+dwDesiredAccess], 11Bh	; int
		mov	[esp+6Ch+lpFileName], offset aRBuildWin32_31 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+6Ch+lpFileName], ebx
		call	sub_67E00CE0
		mov	[esp+6Ch+lpFileName], ebx
		mov	ebp, eax
		call	sub_67E01770
		test	ebp, ebp
		jle	loc_67E0A5F4
		mov	[esp+6Ch+var_44], edi
		xor	ebx, ebx
		mov	edi, eax
		jmp	short loc_67E0A3A4
; ---------------------------------------------------------------------------

loc_67E0A392:				; CODE XREF: sub_67E0A200+1D5j
		mov	eax, [esp+6Ch+NumberOfBytesWritten]
		test	eax, eax
		jz	short loc_67E0A3D7
		add	ebx, eax
		cmp	ebp, ebx
		jle	loc_67E0A5F0

loc_67E0A3A4:				; CODE XREF: sub_67E0A200+190j
		lea	eax, [esp+6Ch+NumberOfBytesWritten]
		mov	edx, [esp+6Ch+hFile]
		mov	[esp+6Ch+lpSecurityAttributes],	eax ; lpNumberOfBytesWritten
		mov	eax, ebp
		sub	eax, ebx
		mov	[esp+6Ch+dwShareMode], eax ; nNumberOfBytesToWrite
		lea	eax, [edi+ebx]
		mov	[esp+6Ch+dwCreationDisposition], 0 ; lpOverlapped
		mov	[esp+6Ch+dwDesiredAccess], eax ; lpBuffer
		mov	[esp+6Ch+lpFileName], edx ; hFile
		call	ds:WriteFile
		sub	esp, 14h
		test	eax, eax
		jnz	short loc_67E0A392

loc_67E0A3D7:				; CODE XREF: sub_67E0A200+198j
		mov	edi, [esp+6Ch+var_44]
		mov	ebp, 1
		call	ds:GetLastError
		mov	[esp+6Ch+lpFileName], eax ; DWORD
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	edx, [esp+6Ch+lpExistingFileName]
		mov	[esp+6Ch+dwCreationDisposition], ebx
		mov	[esp+6Ch+dwShareMode], offset aCouldNotWriteT ;	"Could not write to %s:	%s"
		mov	[esp+6Ch+lpFileName], edi ; int
		mov	[esp+6Ch+lpSecurityAttributes],	edx ; char
		mov	[esp+6Ch+dwDesiredAccess], eax ; char *
		call	dbus_set_error
		mov	[esp+6Ch+lpFileName], ebx ; HLOCAL
		call	sub_67E0AEE0
		mov	ebx, ds:CloseHandle

loc_67E0A423:				; CODE XREF: sub_67E0A200+30Fj
					; sub_67E0A200+450j
		mov	eax, [esp+6Ch+hFile]
		mov	[esp+6Ch+lpFileName], eax ; hObject
		call	ebx ; CloseHandle
		xor	ebx, ebx
		sub	esp, 4
		test	ebp, ebp
		jnz	loc_67E0A588

loc_67E0A439:				; CODE XREF: sub_67E0A200+33Bj
					; sub_67E0A200+39Aj ...
		mov	[esp+6Ch+lpFileName], esi
		call	sub_67E02BF0
		test	ebx, ebx
		jnz	loc_67E0A500
		test	edi, edi
		jz	loc_67E0A4F4
		mov	[esp+6Ch+lpFileName], edi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67E0A4F4

loc_67E0A463:				; CODE XREF: sub_67E0A200+2F9j
		mov	[esp+6Ch+dwCreationDisposition], offset	a_dbus_strin_39	; "_dbus_string_save_to_file"
		mov	[esp+6Ch+lpSecurityAttributes],	163h
		mov	[esp+6Ch+dwShareMode], offset aRBuildWin32_31 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+dwDesiredAccess], offset aErrorNullDb_24 ; "(error) ==	NULL ||	dbus_error_is_set (("...
		mov	[esp+6Ch+lpFileName], edx
		call	sub_67DFAE70
		jmp	short loc_67E0A4C2
; ---------------------------------------------------------------------------
		align 10h

loc_67E0A490:				; CODE XREF: sub_67E0A200+15j
					; sub_67E0A200+27j
		mov	edx, 1
		jmp	loc_67E0A22D
; ---------------------------------------------------------------------------
		align 10h

loc_67E0A4A0:				; CODE XREF: sub_67E0A200+87j
					; sub_67E0A200+9Fj ...
		mov	[esp+6Ch+dwShareMode], 0 ; char	*
		xor	ebx, ebx
		mov	[esp+6Ch+dwDesiredAccess], offset aOrg_freedes_42 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+6Ch+lpFileName], edi ; int
		call	dbus_set_error
		mov	[esp+6Ch+lpFileName], esi
		call	sub_67E02BF0

loc_67E0A4C2:				; CODE XREF: sub_67E0A200+28Bj
					; sub_67E0A200+305j
		add	esp, 5Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0A4D0:				; CODE XREF: sub_67E0A200+63j
		xor	ebx, ebx
		mov	[esp+6Ch+lpFileName], edi ; int
		mov	[esp+6Ch+dwShareMode], 0 ; char	*
		mov	[esp+6Ch+dwDesiredAccess], offset aOrg_freedes_42 ; "org.freedesktop.DBus.Error.NoMemory"
		call	dbus_set_error
		add	esp, 5Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0A4F4:				; CODE XREF: sub_67E0A200+24Bj
					; sub_67E0A200+25Dj
		mov	edx, 1
		jmp	loc_67E0A463
; ---------------------------------------------------------------------------
		align 10h

loc_67E0A500:				; CODE XREF: sub_67E0A200+243j
		mov	ebx, 1
		jmp	short loc_67E0A4C2
; ---------------------------------------------------------------------------

loc_67E0A507:				; CODE XREF: sub_67E0A200+134j
		xor	ebp, ebp
		mov	ebx, ds:CloseHandle
		jmp	loc_67E0A423
; ---------------------------------------------------------------------------

loc_67E0A514:				; CODE XREF: sub_67E0A200+408j
		mov	eax, [esp+6Ch+lpNewFileName]
		mov	ebx, 1
		mov	edx, [esp+6Ch+lpExistingFileName]
		mov	[esp+6Ch+dwShareMode], 1 ; dwFlags
		mov	[esp+6Ch+dwDesiredAccess], eax ; lpNewFileName
		mov	[esp+6Ch+lpFileName], edx ; lpExistingFileName
		call	ds:MoveFileExA
		sub	esp, 0Ch
		test	eax, eax
		jnz	loc_67E0A439
		call	ds:GetLastError
		mov	[esp+6Ch+lpFileName], eax ; DWORD
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	edx, [esp+6Ch+lpNewFileName]
		mov	[esp+6Ch+dwFlagsAndAttributes],	ebx
		mov	[esp+6Ch+dwShareMode], offset aCouldNotRename ;	"Could not rename %s to	%s: %s"
		mov	[esp+6Ch+lpFileName], edi ; int
		mov	[esp+6Ch+dwCreationDisposition], edx
		mov	edx, [esp+6Ch+lpExistingFileName]
		mov	[esp+6Ch+dwDesiredAccess], eax ; char *
		mov	[esp+6Ch+lpSecurityAttributes],	edx ; char
		call	dbus_set_error
		mov	[esp+6Ch+lpFileName], ebx ; HLOCAL
		xor	ebx, ebx
		call	sub_67E0AEE0

loc_67E0A588:				; CODE XREF: sub_67E0A200+233j
		mov	eax, [esp+6Ch+lpExistingFileName]
		mov	[esp+6Ch+lpFileName], eax ; lpFileName
		call	ds:DeleteFileA
		sub	esp, 4
		test	eax, eax
		jnz	loc_67E0A439
		call	ds:GetLastError
		mov	[esp+6Ch+lpFileName], eax ; DWORD
		call	sub_67E0AD30
		mov	edx, [esp+6Ch+lpExistingFileName]
		mov	[esp+6Ch+lpSecurityAttributes],	offset aFailedToUnlink ; "Failed to unlink temp	file %s: %s"
		mov	[esp+6Ch+dwShareMode], offset a_dbus_strin_39 ;	"_dbus_string_save_to_file"
		mov	[esp+6Ch+dwDesiredAccess], 15Ch	; int
		mov	[esp+6Ch+dwCreationDisposition], edx ; char
		mov	[esp+6Ch+lpFileName], offset aRBuildWin32_31 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	ebp, eax
		mov	[esp+6Ch+dwFlagsAndAttributes],	eax
		call	sub_67DFABC0
		mov	[esp+6Ch+lpFileName], ebp ; HLOCAL
		call	sub_67E0AEE0
		jmp	loc_67E0A439
; ---------------------------------------------------------------------------
		align 10h

loc_67E0A5F0:				; CODE XREF: sub_67E0A200+19Ej
		mov	edi, [esp+6Ch+var_44]

loc_67E0A5F4:				; CODE XREF: sub_67E0A200+182j
		mov	eax, [esp+6Ch+hFile]
		mov	ebx, ds:CloseHandle
		mov	[esp+6Ch+lpFileName], eax ; hObject
		call	ebx ; CloseHandle
		sub	esp, 4
		test	eax, eax
		jnz	loc_67E0A514
		call	ds:GetLastError
		mov	[esp+6Ch+lpFileName], eax ; DWORD
		call	sub_67E0AD30
		mov	ebp, eax
		call	sub_67E0ACC0
		mov	edx, [esp+6Ch+lpExistingFileName]
		mov	[esp+6Ch+dwCreationDisposition], ebp
		mov	[esp+6Ch+dwShareMode], offset aCouldNotCloseF ;	"Could not close file %s: %s"
		mov	[esp+6Ch+lpFileName], edi ; int
		mov	[esp+6Ch+lpSecurityAttributes],	edx ; char
		mov	[esp+6Ch+dwDesiredAccess], eax ; char *
		call	dbus_set_error
		mov	[esp+6Ch+lpFileName], ebp ; HLOCAL
		mov	ebp, 1
		call	sub_67E0AEE0
		jmp	loc_67E0A423
; ---------------------------------------------------------------------------

loc_67E0A655:				; CODE XREF: sub_67E0A200+118j
		call	ds:GetLastError
		mov	[esp+6Ch+lpFileName], eax ; DWORD
		xchg	ax, ax
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	edx, [esp+6Ch+lpNewFileName]
		mov	[esp+6Ch+dwCreationDisposition], ebx
		mov	[esp+6Ch+dwShareMode], offset aCouldNotCreate ;	"Could not create \"%s\": %s"
		mov	[esp+6Ch+lpFileName], edi ; int
		mov	[esp+6Ch+lpSecurityAttributes],	edx ; char
		mov	[esp+6Ch+dwDesiredAccess], eax ; char *
		call	dbus_set_error
		mov	[esp+6Ch+lpFileName], ebx ; HLOCAL
		xor	ebx, ebx
		call	sub_67E0AEE0
		jmp	loc_67E0A439
sub_67E0A200	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0A6A0	proc near		; CODE XREF: sub_67DD6770+1C0p
					; .text:67DFB095p

lpFileName	= dword	ptr -5Ch
dwDesiredAccess	= dword	ptr -58h
dwShareMode	= dword	ptr -54h
lpSecurityAttributes= dword ptr	-50h
dwCreationDisposition= dword ptr -4Ch
dwFlagsAndAttributes= dword ptr	-48h
hTemplateFile	= dword	ptr -44h
hFile		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= byte ptr -34h
var_30		= dword	ptr -30h
NumberOfBytesRead= dword ptr -24h
FileSizeHigh	= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, [esp+5Ch+arg_8]
		mov	edi, [esp+5Ch+arg_0]
		test	ebx, ebx
		jz	loc_67E0A907
		mov	eax, [esp+5Ch+arg_8]
		mov	[esp+5Ch+lpFileName], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E0A907

loc_67E0A6CD:				; CODE XREF: sub_67E0A6A0+26Cj
		mov	[esp+5Ch+lpFileName], edx
		mov	[esp+5Ch+dwCreationDisposition], offset	a_dbus_file_get	; "_dbus_file_get_contents"
		mov	[esp+5Ch+lpSecurityAttributes],	76h
		mov	[esp+5Ch+dwShareMode], offset aRBuildWin32_31 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+dwDesiredAccess], offset aErrorNullDb_23 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	eax, [esp+5Ch+arg_4]
		mov	[esp+5Ch+lpFileName], eax
		call	sub_67E01770
		mov	[esp+5Ch+hTemplateFile], 0 ; hTemplateFile
		mov	[esp+5Ch+dwFlagsAndAttributes],	80h ; dwFlagsAndAttributes
		mov	[esp+5Ch+dwCreationDisposition], 3 ; dwCreationDisposition
		mov	[esp+5Ch+lpSecurityAttributes],	0 ; lpSecurityAttributes
		mov	[esp+5Ch+dwShareMode], 3 ; dwShareMode
		mov	dword ptr [esp+5Ch+var_34], eax
		mov	[esp+5Ch+dwDesiredAccess], 80000000h ; dwDesiredAccess
		mov	[esp+5Ch+lpFileName], eax ; lpFileName
		call	ds:CreateFileA
		sub	esp, 1Ch
		cmp	eax, 0FFFFFFFFh
		mov	[esp+5Ch+hFile], eax
		jz	loc_67E0AAB0
		mov	[esp+5Ch+dwFlagsAndAttributes],	eax
		mov	eax, dword ptr [esp+5Ch+var_34]
		mov	[esp+5Ch+lpSecurityAttributes],	offset aFileSHndPOpene ; "file %s hnd %p opened\n"
		mov	[esp+5Ch+dwShareMode], offset a_dbus_file_get ;	"_dbus_file_get_contents"
		mov	[esp+5Ch+dwDesiredAccess], 86h ; int
		mov	[esp+5Ch+dwCreationDisposition], eax ; char
		mov	[esp+5Ch+lpFileName], offset aRBuildWin32_31 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edx, [esp+5Ch+hFile]
		lea	eax, [esp+5Ch+FileSizeHigh]
		mov	[esp+5Ch+dwDesiredAccess], eax ; lpFileSizeHigh
		mov	[esp+5Ch+lpFileName], edx ; hFile
		call	ds:GetFileSize
		sub	esp, 8
		cmp	eax, 0FFFFFFFFh
		mov	ebp, eax
		jz	loc_67E0AA30

loc_67E0A7A1:				; CODE XREF: sub_67E0A6A0+39Aj
		cmp	ebp, 100000h
		mov	eax, [esp+5Ch+FileSizeHigh]
		ja	loc_67E0A911
		test	eax, eax
		jnz	loc_67E0A911
		mov	[esp+5Ch+lpFileName], edi
		call	sub_67E00CE0
		test	ebp, ebp
		mov	[esp+5Ch+var_30], eax
		jz	loc_67E0A9A0
		xor	esi, esi
		mov	[esp+5Ch+var_38], ebp

loc_67E0A7D3:				; CODE XREF: sub_67E0A6A0+2D8j
		mov	ebx, [esp+5Ch+var_38]
		mov	ecx, [esp+5Ch+arg_8]
		sub	ebx, esi
		test	ecx, ecx
		jz	short loc_67E0A7F3
		mov	eax, [esp+5Ch+arg_8]
		mov	[esp+5Ch+lpFileName], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67E0A7F8

loc_67E0A7F3:				; CODE XREF: sub_67E0A6A0+13Fj
		mov	edx, 1

loc_67E0A7F8:				; CODE XREF: sub_67E0A6A0+151j
		mov	[esp+5Ch+lpFileName], edx
		mov	[esp+5Ch+dwCreationDisposition], offset	a_dbus_file_rea	; "_dbus_file_read"
		mov	[esp+5Ch+lpSecurityAttributes],	39h
		mov	[esp+5Ch+dwShareMode], offset aRBuildWin32_31 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+dwDesiredAccess], offset aErrorNullDb_23 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp+5Ch+lpFileName], eax
		mov	[esp+5Ch+dwCreationDisposition], offset	a_dbus_file_rea	; "_dbus_file_read"
		mov	[esp+5Ch+lpSecurityAttributes],	3Bh ; char
		mov	[esp+5Ch+dwShareMode], offset aRBuildWin32_31 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+dwDesiredAccess], offset aCount0_0 ; "count >=	0"
		call	sub_67DFAE70
		mov	[esp+5Ch+lpFileName], edi
		call	sub_67E00CE0
		mov	[esp+5Ch+dwDesiredAccess], ebx
		mov	[esp+5Ch+lpFileName], edi
		mov	ebp, eax
		call	sub_67E087C0
		test	eax, eax
		jz	loc_67E0A9C0
		mov	[esp+5Ch+dwShareMode], ebx
		mov	[esp+5Ch+dwDesiredAccess], ebp
		mov	[esp+5Ch+lpFileName], edi
		call	sub_67E014C0
		lea	edx, [esp+5Ch+NumberOfBytesRead]
		mov	[esp+5Ch+dwCreationDisposition], 0 ; lpOverlapped
		mov	[esp+5Ch+lpSecurityAttributes],	edx ; lpNumberOfBytesRead
		mov	[esp+5Ch+dwShareMode], ebx ; nNumberOfBytesToRead
		mov	[esp+5Ch+dwDesiredAccess], eax ; lpBuffer
		mov	eax, [esp+5Ch+hFile]
		mov	[esp+5Ch+lpFileName], eax ; hFile
		call	ds:ReadFile
		sub	esp, 14h
		test	eax, eax
		jz	loc_67E0AB00
		mov	eax, [esp+5Ch+NumberOfBytesRead]
		test	eax, eax
		jnz	loc_67E0A957

loc_67E0A8B9:				; CODE XREF: sub_67E0A6A0:loc_67E0AB46j
		mov	edx, dword ptr [esp+5Ch+var_34]
		mov	eax, [esp+5Ch+arg_8]
		mov	[esp+5Ch+dwShareMode], offset aPrematureEofRe ;	"Premature EOF reading \"%s\""
		mov	[esp+5Ch+dwDesiredAccess], offset aOrg_freedes_68 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+5Ch+lpSecurityAttributes],	edx ; char
		mov	[esp+5Ch+lpFileName], eax ; int
		call	dbus_set_error

loc_67E0A8DD:				; CODE XREF: sub_67E0A6A0+37Ej
		mov	eax, [esp+5Ch+hFile]
		mov	[esp+5Ch+lpFileName], eax ; hObject
		call	ds:CloseHandle
		sub	esp, 4
		mov	edx, [esp+5Ch+var_30]
		mov	[esp+5Ch+lpFileName], edi
		mov	[esp+5Ch+dwDesiredAccess], edx
		call	sub_67E06F60
		add	esp, 4Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0A907:				; CODE XREF: sub_67E0A6A0+11j
					; sub_67E0A6A0+27j
		mov	edx, 1
		jmp	loc_67E0A6CD
; ---------------------------------------------------------------------------

loc_67E0A911:				; CODE XREF: sub_67E0A6A0+10Bj
					; sub_67E0A6A0+113j
		mov	edx, dword ptr [esp+5Ch+var_34]
		mov	[esp+5Ch+lpSecurityAttributes],	eax ; char
		mov	eax, [esp+5Ch+arg_8]
		mov	[esp+5Ch+dwCreationDisposition], ebp
		mov	[esp+5Ch+dwShareMode], offset aFileSizeLuLuOf ;	"File size %lu/%lu of \"%s\" is	too larg"...
		mov	[esp+5Ch+dwFlagsAndAttributes],	edx
		mov	[esp+5Ch+dwDesiredAccess], offset aOrg_freedes_68 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+5Ch+lpFileName], eax ; int
		call	dbus_set_error

loc_67E0A93D:				; CODE XREF: sub_67E0A6A0+405j
		mov	edx, [esp+5Ch+hFile]
		mov	[esp+5Ch+lpFileName], edx ; hObject
		call	ds:CloseHandle
		xor	eax, eax
		sub	esp, 4
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0A957:				; CODE XREF: sub_67E0A6A0+213j
		add	ebp, eax
		mov	[esp+5Ch+dwDesiredAccess], ebp
		mov	[esp+5Ch+lpFileName], edi
		call	sub_67E06F60
		mov	eax, [esp+5Ch+NumberOfBytesRead]
		cmp	eax, 0
		jle	loc_67E0AB46
		add	esi, eax
		cmp	[esp+5Ch+var_38], esi
		ja	loc_67E0A7D3
		mov	eax, [esp+5Ch+hFile]
		mov	[esp+5Ch+lpFileName], eax ; hObject
		call	ds:CloseHandle
		mov	eax, 1
		sub	esp, 4
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0A9A0:				; CODE XREF: sub_67E0A6A0+127j
		mov	edx, [esp+5Ch+hFile]
		mov	[esp+5Ch+lpFileName], edx ; hObject
		call	ds:CloseHandle
		mov	eax, 1
		sub	esp, 4
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0A9C0:				; CODE XREF: sub_67E0A6A0+1C7j
		mov	edx, [esp+5Ch+arg_8]
		mov	[esp+5Ch+dwShareMode], 0 ; char	*
		mov	[esp+5Ch+dwDesiredAccess], offset aOrg_freedes_42 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+5Ch+lpFileName], edx ; int
		call	dbus_set_error

loc_67E0A9DC:				; CODE XREF: sub_67E0A6A0+4A1j
					; sub_67E0A6A0+4B0j
		mov	edx, [esp+5Ch+arg_8]
		test	edx, edx
		jz	short loc_67E0AA23
		mov	edx, [esp+5Ch+arg_8]
		mov	[esp+5Ch+lpFileName], edx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67E0AA23

loc_67E0A9F6:				; CODE XREF: sub_67E0A6A0+388j
		mov	[esp+5Ch+dwCreationDisposition], offset	a_dbus_file_get	; "_dbus_file_get_contents"
		mov	[esp+5Ch+lpSecurityAttributes],	0B4h
		mov	[esp+5Ch+dwShareMode], offset aRBuildWin32_31 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+dwDesiredAccess], offset aErrorNullDb_24 ; "(error) ==	NULL ||	dbus_error_is_set (("...
		mov	[esp+5Ch+lpFileName], edx
		call	sub_67DFAE70
		jmp	loc_67E0A8DD
; ---------------------------------------------------------------------------

loc_67E0AA23:				; CODE XREF: sub_67E0A6A0+342j
					; sub_67E0A6A0+354j
		mov	edx, 1
		jmp	short loc_67E0A9F6
; ---------------------------------------------------------------------------
		align 10h

loc_67E0AA30:				; CODE XREF: sub_67E0A6A0+FBj
		mov	ebx, ds:GetLastError
		call	ebx ; GetLastError
		test	eax, eax
		jz	loc_67E0A7A1
		call	ebx ; GetLastError
		mov	[esp+5Ch+lpFileName], eax ; DWORD
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	edx, dword ptr [esp+5Ch+var_34]
		mov	[esp+5Ch+dwCreationDisposition], ebx
		mov	[esp+5Ch+dwShareMode], offset aFailedToGetFil ;	"Failed	to get file size for \"%s\": %s"
		mov	[esp+5Ch+lpSecurityAttributes],	edx ; char
		mov	[esp+5Ch+dwDesiredAccess], eax ; char *
		mov	eax, [esp+5Ch+arg_8]
		mov	[esp+5Ch+lpFileName], eax ; int
		call	dbus_set_error
		mov	[esp+5Ch+lpFileName], ebx ; HLOCAL
		call	sub_67E0AEE0
		mov	[esp+5Ch+dwCreationDisposition], ebx ; char
		mov	[esp+5Ch+lpSecurityAttributes],	offset aGetfilesizeFai ; "GetFileSize()	failed:	%s"
		mov	[esp+5Ch+dwShareMode], offset a_dbus_file_get ;	"_dbus_file_get_contents"
		mov	[esp+5Ch+dwDesiredAccess], 91h ; int
		mov	[esp+5Ch+lpFileName], offset aRBuildWin32_31 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67E0A93D
; ---------------------------------------------------------------------------
		align 10h

loc_67E0AAB0:				; CODE XREF: sub_67E0A6A0+A8j
		call	ds:GetLastError
		mov	[esp+5Ch+lpFileName], eax ; DWORD
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	edx, dword ptr [esp+5Ch+var_34]
		mov	[esp+5Ch+dwCreationDisposition], ebx
		mov	[esp+5Ch+dwShareMode], offset aFailedToOpenSS ;	"Failed	to open	\"%s\":	%s"
		mov	[esp+5Ch+lpSecurityAttributes],	edx ; char
		mov	[esp+5Ch+dwDesiredAccess], eax ; char *
		mov	eax, [esp+5Ch+arg_8]
		mov	[esp+5Ch+lpFileName], eax ; int
		call	dbus_set_error
		mov	[esp+5Ch+lpFileName], ebx ; HLOCAL
		call	sub_67E0AEE0
		add	esp, 4Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0AB00:				; CODE XREF: sub_67E0A6A0+207j
		call	ds:GetLastError
		mov	[esp+5Ch+lpFileName], eax ; DWORD
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	edx, [esp+5Ch+hFile]
		mov	[esp+5Ch+dwCreationDisposition], ebx
		mov	[esp+5Ch+dwShareMode], offset aFailedToReadFr ;	"Failed	to read	from 0x%x: %s"
		mov	[esp+5Ch+lpSecurityAttributes],	edx ; char
		mov	[esp+5Ch+dwDesiredAccess], eax ; char *
		mov	eax, [esp+5Ch+arg_8]
		mov	[esp+5Ch+lpFileName], eax ; int
		call	dbus_set_error
		mov	[esp+5Ch+lpFileName], ebx ; HLOCAL
		call	sub_67E0AEE0
		jmp	loc_67E0A9DC
; ---------------------------------------------------------------------------

loc_67E0AB46:				; CODE XREF: sub_67E0A6A0+2CCj
		jz	loc_67E0A8B9
		lea	esi, [esi+0]
		jmp	loc_67E0A9DC
sub_67E0A6A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0AB60	proc near		; CODE XREF: sub_67DE8580+93p

arg_0		= dword	ptr  4

		xor	eax, eax
		cmp	[esp+arg_0], 0FFFFFFFFh
		setz	al
		retn
sub_67E0AB60	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000002 BYTES: COLLAPSED FUNCTION nullsub_1]
		align 10h
		mov	eax, [esp+4]
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0AB90	proc near		; CODE XREF: sub_67E0A200+12Dp
		mov	eax, 1
		retn
sub_67E0AB90	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	dword ptr [eax], 0
		mov	eax, 1
		retn

; =============== S U B	R O U T	I N E =======================================


sub_67E0ABB0	proc near		; CODE XREF: sub_67DCDAC0+34p
					; sub_67DD0180+7Ap ...

arg_0		= dword	ptr  4

		nop
		mov	eax, [esp+arg_0]
		mov	eax, [eax]
		retn
sub_67E0ABB0	endp

; ---------------------------------------------------------------------------
		align 10h
		rep retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0ABD0	proc near		; CODE XREF: sub_67DC7A30+6E9p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	dword ptr [eax], 0
		mov	eax, 1
		retn
sub_67E0ABD0	endp


; =============== S U B	R O U T	I N E =======================================


sub_67E0ABE0	proc near		; CODE XREF: sub_67DD7930+57p
					; sub_67E09AD0+8p ...
		xor	eax, eax
		retn
sub_67E0ABE0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+20h]
		mov	[esp], ebx
		call	sub_67E00CE0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jle	short loc_67E0AC48
		mov	dword ptr [esp+4], 1
		mov	[esp], ebx
		call	sub_67E00E50
		cmp	al, 3Ah
		jz	short loc_67E0AC50
		mov	dword ptr [esp+4], 0
		mov	[esp], ebx
		call	sub_67E00E50
		cmp	al, 5Ch
		jz	short loc_67E0AC50
		mov	dword ptr [esp+4], 0
		mov	[esp], ebx
		call	sub_67E00E50
		cmp	al, 2Fh
		setz	al
		movzx	eax, al

loc_67E0AC48:				; CODE XREF: .text:67E0AC06j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0AC50:				; CODE XREF: .text:67E0AC1Aj
					; .text:67E0AC2Ej
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0AC60	proc near		; CODE XREF: sub_67DD6770+64p

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	eax, [esp+2Ch+arg_4]
		test	eax, eax
		jz	short loc_67E0ACB0
		mov	[esp+2Ch+var_2C], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67E0ACB0

loc_67E0AC79:				; CODE XREF: sub_67E0AC60+55j
		mov	[esp+2Ch+var_1C], offset a_dbus_check_di ; "_dbus_check_dir_is_private_to_user"
		mov	[esp+2Ch+var_20], 6BEh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aErrorNullDb_25 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+2Ch+var_2C], edx
		call	sub_67DFAE70
		mov	eax, 1
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0ACB0:				; CODE XREF: sub_67E0AC60+9j
					; sub_67E0AC60+17j
		mov	edx, 1
		jmp	short loc_67E0AC79
sub_67E0AC60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0ACC0	proc near		; CODE XREF: sub_67E0A090+110p
					; sub_67E0A090+152p ...
		sub	esp, 0Ch
		call	ds:GetLastError
		cmp	eax, 52h	; switch 83 cases
		jbe	short loc_67E0ACD7

loc_67E0ACCE:				; CODE XREF: sub_67E0ACC0:loc_67E0ACD7j
					; DATA XREF: .rdata:off_67E2C990o
		mov	eax, offset aOrg_freedes_43 ; jumptable	67E0ACD7 default case
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_67E0ACD7:				; CODE XREF: sub_67E0ACC0+Cj
		jmp	ds:off_67E2C990[eax*4] ; switch	jump
; ---------------------------------------------------------------------------
		align 10h

loc_67E0ACE0:				; CODE XREF: sub_67E0ACC0:loc_67E0ACD7j
					; DATA XREF: .rdata:off_67E2C990o
		mov	eax, offset aOrg_freedes_44 ; jumptable	67E0ACD7 case 8
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0ACF0:				; CODE XREF: sub_67E0ACC0:loc_67E0ACD7j
					; DATA XREF: .rdata:off_67E2C990o
		mov	eax, offset aOrg_freedes_45 ; jumptable	67E0ACD7 case 80
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0AD00:				; CODE XREF: sub_67E0ACC0:loc_67E0ACD7j
					; DATA XREF: .rdata:off_67E2C990o
		mov	eax, offset aOrg_freedes_46 ; jumptable	67E0ACD7 cases 2,3
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0AD10:				; CODE XREF: sub_67E0ACC0:loc_67E0ACD7j
					; DATA XREF: .rdata:off_67E2C990o
		mov	eax, offset aOrg_freedes_47 ; jumptable	67E0ACD7 cases 4,18
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0AD20:				; CODE XREF: sub_67E0ACC0:loc_67E0ACD7j
					; DATA XREF: .rdata:off_67E2C990o
		mov	eax, offset aOrg_freedes_48 ; jumptable	67E0ACD7 cases 5,82
		add	esp, 0Ch
		retn
sub_67E0ACC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0AD30(DWORD)
sub_67E0AD30	proc near		; CODE XREF: sub_67E0A090+109p
					; sub_67E0A090+14Bp ...

dwFlags		= dword	ptr -3Ch
lpSource	= dword	ptr -38h
dwMessageId	= dword	ptr -34h
dwLanguageId	= dword	ptr -30h
lpBuffer	= dword	ptr -2Ch
nSize		= dword	ptr -28h
Arguments	= dword	ptr -24h
Buffer		= byte ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 38h
		lea	eax, [esp+3Ch+Buffer]
		mov	[esp+3Ch+lpBuffer], eax	; lpBuffer
		mov	eax, [esp+3Ch+arg_0]
		mov	[esp+3Ch+Arguments], 0 ; Arguments
		mov	[esp+3Ch+nSize], 0 ; nSize
		mov	[esp+3Ch+dwLanguageId],	0 ; dwLanguageId
		mov	[esp+3Ch+dwMessageId], eax ; dwMessageId
		mov	[esp+3Ch+lpSource], 0 ;	lpSource
		mov	[esp+3Ch+dwFlags], 1300h ; dwFlags
		call	ds:FormatMessageA
		sub	esp, 1Ch
		mov	ebx, dword ptr [esp+3Ch+Buffer]
		mov	[esp+3Ch+dwFlags], ebx ; Str
		call	strlen
		lea	edx, [ebx+eax-1]
		movzx	eax, byte ptr [edx]
		cmp	al, 0Ah
		jz	short loc_67E0ADA0

loc_67E0AD8B:				; CODE XREF: sub_67E0AD30+86j
		cmp	al, 0Dh
		jnz	short loc_67E0AD96
		mov	byte ptr [edx],	0
		mov	ebx, dword ptr [esp+3Ch+Buffer]

loc_67E0AD96:				; CODE XREF: sub_67E0AD30+5Dj
		mov	eax, ebx
		add	esp, 38h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0ADA0:				; CODE XREF: sub_67E0AD30+59j
		mov	byte ptr [edx],	0
		mov	ebx, dword ptr [esp+3Ch+Buffer]
		mov	[esp+3Ch+dwFlags], ebx ; Str
		call	strlen
		lea	edx, [ebx+eax-1]
		movzx	eax, byte ptr [edx]
		jmp	short loc_67E0AD8B
sub_67E0AD30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0ADC0(int,	DWORD)
sub_67E0ADC0	proc near		; CODE XREF: .text:67E0AEABp
					; .text:67E0D663p ...

dwFlags		= dword	ptr -3Ch
lpSource	= dword	ptr -38h
dwMessageId	= dword	ptr -34h
dwLanguageId	= dword	ptr -30h
lpBuffer	= dword	ptr -2Ch
nSize		= dword	ptr -28h
Arguments	= dword	ptr -24h
Buffer		= byte ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 34h
		mov	ebx, [esp+3Ch+arg_4]
		lea	eax, [esp+3Ch+Buffer]
		mov	esi, [esp+3Ch+arg_0]
		mov	[esp+3Ch+Arguments], 0 ; Arguments
		mov	[esp+3Ch+nSize], 0 ; nSize
		mov	[esp+3Ch+lpBuffer], eax	; lpBuffer
		mov	[esp+3Ch+dwLanguageId],	409h ; dwLanguageId
		mov	[esp+3Ch+dwMessageId], ebx ; dwMessageId
		mov	[esp+3Ch+lpSource], 0 ;	lpSource
		mov	[esp+3Ch+dwFlags], 1300h ; dwFlags
		call	ds:FormatMessageA
		sub	esp, 1Ch
		mov	eax, dword ptr [esp+3Ch+Buffer]
		test	eax, eax
		jz	short loc_67E0AE65
		mov	[esp+3Ch+dwFlags], eax ; Str
		call	strlen
		mov	[esp+3Ch+dwFlags], eax ; Size
		call	dbus_malloc
		mov	ebx, eax
		mov	eax, dword ptr [esp+3Ch+Buffer]
		mov	[esp+3Ch+dwFlags], ebx ; Dest
		mov	[esp+3Ch+lpSource], eax	; Source
		call	strcpy
		mov	eax, dword ptr [esp+3Ch+Buffer]
		mov	[esp+3Ch+dwFlags], eax ; hMem
		call	ds:LocalFree
		sub	esp, 4
		mov	[esp+3Ch+dwLanguageId],	ebx ; char
		mov	[esp+3Ch+dwFlags], esi ; int
		mov	[esp+3Ch+dwMessageId], offset byte_67E2CADC ; char *
		mov	[esp+3Ch+lpSource], offset aWin32_error	; "win32.error"
		call	dbus_set_error
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E0AE65:				; CODE XREF: sub_67E0ADC0+4Fj
		mov	[esp+3Ch+dwLanguageId],	ebx ; char
		mov	[esp+3Ch+dwFlags], esi ; int
		mov	[esp+3Ch+dwMessageId], offset aUnknownErrorCo ;	"Unknown error code %d or FormatMessage	"...
		mov	[esp+3Ch+lpSource], offset aWin32_error	; "win32.error"
		call	dbus_set_error
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
sub_67E0ADC0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 28h
		lea	ebx, [esp+10h]
		mov	[esp], ebx
		call	dbus_error_init
		mov	eax, [esp+34h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_67E0ADC0
		mov	eax, [esp+14h]
		mov	dword ptr [esp], offset	aSS ; "%s: %s\n"
		mov	[esp+8], eax
		mov	eax, [esp+30h]
		mov	[esp+4], eax
		call	sub_67DFAD60
		mov	[esp], ebx
		call	dbus_error_free
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0AEE0(HLOCAL)
sub_67E0AEE0	proc near		; CODE XREF: sub_67E0A090+134p
					; sub_67E0A200+218p ...

hMem		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+hMem],	eax ; hMem
		call	ds:LocalFree
		sub	esp, 4
		add	esp, 1Ch
		retn
sub_67E0AEE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0AF00	proc near		; CODE XREF: sub_67E094E0+Ep
					; sub_67E0E140+14Bp ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, offset aAddressFamilyN ; "Address family not supported by protoco"...
		mov	edx, [esp+1Ch+arg_0]
		cmp	edx, 273Fh
		jz	short loc_67E0AF70
		jle	short loc_67E0AF74
		cmp	edx, 274Ch
		mov	eax, offset aConnectionTi_0 ; "Connection timed	out"
		jz	short loc_67E0AF70
		jle	loc_67E0AFE0
		cmp	edx, 277Bh
		mov	eax, offset aSystemCallFail ; "System call failure"
		jz	short loc_67E0AF70
		jle	loc_67E0B0F7
		cmp	edx, 2AFAh
		mov	eax, offset aNonauthoritati ; "Nonauthoritative	host not found"
		jz	short loc_67E0AF70
		jg	loc_67E0B290
		cmp	edx, 277Dh
		mov	eax, offset aClassTypeNotFo ; "Class type not found"
		jz	short loc_67E0AF70
		cmp	edx, 2AF9h
		mov	eax, offset aHostNotFound ; "Host not found"
		jnz	short loc_67E0AFC7
		lea	esi, [esi+0]

loc_67E0AF70:				; CODE XREF: sub_67E0AF00+12j
					; sub_67E0AF00+21j ...
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67E0AF74:				; CODE XREF: sub_67E0AF00+14j
		cmp	edx, 2733h
		mov	eax, offset aResourceTempor ; "Resource	temporarily unavailable"
		jz	short loc_67E0AF70
		jle	loc_67E0B030
		cmp	edx, 2739h
		mov	eax, offset aProtocolWrongT ; "Protocol	wrong type for socket"
		jz	short loc_67E0AF70
		jg	loc_67E0B081
		cmp	edx, 2736h
		mov	eax, offset aSocketOperatio ; "Socket operation	on nonsocket"
		jz	short loc_67E0AF70
		jg	loc_67E0B173
		cmp	edx, 2734h
		mov	eax, offset aOperationNowIn ; "Operation now in	progress"
		jz	short loc_67E0AF70
		cmp	edx, 2735h
		mov	eax, offset aOperationAlrea ; "Operation already in progress"
		jz	short loc_67E0AF70

loc_67E0AFC7:				; CODE XREF: sub_67E0AF00+67j
					; sub_67E0AF00+126j ...
		mov	[esp+1Ch+var_1C], edx ;	int
		call	strerror
		test	eax, eax
		jnz	short loc_67E0AF70
		mov	eax, offset aUnknown_0 ; "unknown"
		jmp	short loc_67E0AF70
; ---------------------------------------------------------------------------
		align 10h

loc_67E0AFE0:				; CODE XREF: sub_67E0AF00+23j
		cmp	edx, 2745h
		mov	eax, offset aSoftwareCaused ; "Software	caused connection abort"
		jz	short loc_67E0AF70
		jle	loc_67E0B135
		cmp	edx, 2748h
		mov	eax, offset aSocketIsAlread ; "Socket is already connected"
		jz	loc_67E0AF70
		jg	loc_67E0B1A0
		cmp	edx, 2746h
		mov	eax, offset aConnectionRese ; "Connection reset	by peer"
		jz	loc_67E0AF70
		cmp	edx, 2747h
		mov	eax, offset aNoBufferSpaceA ; "No buffer space available"
		jnz	short loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------
		align 10h

loc_67E0B030:				; CODE XREF: sub_67E0AF00+81j
		cmp	edx, 3E5h
		mov	eax, offset aOverlappedOper ; "Overlapped operations will complete lat"...
		jz	loc_67E0AF70
		jle	short loc_67E0B0C0
		cmp	edx, 271Eh
		mov	eax, offset aBadAddress	; "Bad address"
		jz	loc_67E0AF70
		jg	loc_67E0B217
		cmp	edx, 2714h
		mov	eax, offset aInterruptedFun ; "Interrupted function call"
		jz	loc_67E0AF70
		cmp	edx, 271Dh
		mov	eax, offset aPermissionDe_0 ; "Permission denied"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------

loc_67E0B081:				; CODE XREF: sub_67E0AF00+94j
		cmp	edx, 273Ch
		mov	eax, offset aSocketTypeNotS ; "Socket type not supported"
		jz	loc_67E0AF70
		jg	loc_67E0B1C7
		cmp	edx, 273Ah
		mov	eax, offset aBadProtocolOpt ; "Bad protocol option"
		jz	loc_67E0AF70
		cmp	edx, 273Bh
		mov	eax, offset aProtocolNotSup ; "Protocol	not supported"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------
		align 10h

loc_67E0B0C0:				; CODE XREF: sub_67E0AF00+141j
		cmp	edx, 57h
		mov	eax, offset aOneOrMoreParam ; "One or more parameters are invalid"
		jz	loc_67E0AF70
		xchg	ax, ax
		jg	loc_67E0B1F0
		cmp	edx, 6
		mov	eax, offset aSpecifiedEvent ; "Specified event object handle is	invali"...
		jz	loc_67E0AF70
		cmp	edx, 8
		mov	eax, offset aInsufficientMe ; "Insufficient memory available"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------

loc_67E0B0F7:				; CODE XREF: sub_67E0AF00+36j
		cmp	edx, 2751h
		mov	eax, offset aNoRouteToHost ; "No route to host"
		jz	loc_67E0AF70
		jg	loc_67E0B267
		cmp	edx, 274Dh
		mov	eax, offset aConnectionRefu ; "Connection refused"
		jz	loc_67E0AF70
		cmp	edx, 2750h
		mov	eax, offset aHostIsDown	; "Host	is down"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------

loc_67E0B135:				; CODE XREF: sub_67E0AF00+EDj
		cmp	edx, 2742h
		mov	eax, offset aNetworkIsDown ; "Network is down"
		jz	loc_67E0AF70
		jg	loc_67E0B240
		cmp	edx, 2740h
		mov	eax, offset aAddressAlrea_0 ; "Address already in use"
		jz	loc_67E0AF70
		cmp	edx, 2741h
		mov	eax, offset aCannotAssignRe ; "Cannot assign requested address"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------

loc_67E0B173:				; CODE XREF: sub_67E0AF00+A7j
		cmp	edx, 2737h
		mov	eax, offset aDestinationAdd ; "Destination address required"
		jz	loc_67E0AF70
		cmp	edx, 2738h
		mov	eax, offset aMessageTooLong ; "Message too long"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------
		align 10h

loc_67E0B1A0:				; CODE XREF: sub_67E0AF00+104j
		cmp	edx, 2749h
		mov	eax, offset aSocketIsNotCon ; "Socket is not connected"
		jz	loc_67E0AF70
		cmp	edx, 274Ah
		mov	eax, offset aCannotSendAfte ; "Cannot send after socket	shutdown"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------

loc_67E0B1C7:				; CODE XREF: sub_67E0AF00+192j
		cmp	edx, 273Dh
		mov	eax, offset aOperationNotSu ; "Operation not supported"
		jz	loc_67E0AF70
		cmp	edx, 273Eh
		mov	eax, offset aProtocolFamily ; "Protocol	family not supported"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------
		align 10h

loc_67E0B1F0:				; CODE XREF: sub_67E0AF00+1D0j
		cmp	edx, 3E3h
		mov	eax, offset aOverlappedOp_0 ; "Overlapped operation aborted"
		jz	loc_67E0AF70
		cmp	edx, 3E4h
		mov	eax, offset aOverlappedIOEv ; "Overlapped I/O event object not in sign"...
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------

loc_67E0B217:				; CODE XREF: sub_67E0AF00+154j
		cmp	edx, 2726h
		mov	eax, offset aInvalidArgum_0 ; "Invalid argument"
		jz	loc_67E0AF70
		cmp	edx, 2728h
		mov	eax, offset aTooManyOpenFil ; "Too many	open files"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------
		align 10h

loc_67E0B240:				; CODE XREF: sub_67E0AF00+246j
		cmp	edx, 2743h
		mov	eax, offset aNetworkIsUnrea ; "Network is unreachable"
		jz	loc_67E0AF70
		cmp	edx, 2744h
		mov	eax, offset aNetworkDropped ; "Network dropped connection on reset"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------

loc_67E0B267:				; CODE XREF: sub_67E0AF00+208j
		cmp	edx, 2753h
		mov	eax, offset aTooManyProcess ; "Too many	processes"
		jz	loc_67E0AF70
		cmp	edx, 2775h
		mov	eax, offset aGracefulShutdo ; "Graceful	shutdown in progress"
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
; ---------------------------------------------------------------------------
		align 10h

loc_67E0B290:				; CODE XREF: sub_67E0AF00+49j
		cmp	edx, 2AFBh
		mov	eax, offset aThisIsANonreco ; "This is a nonrecoverable	error"
		jz	loc_67E0AF70
		cmp	edx, 2AFCh
		mov	eax, offset aValidNameNoDat ; "Valid name, no data record of requested"...
		jnz	loc_67E0AFC7
		jmp	loc_67E0AF70
sub_67E0AF00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0B2C0(LPCSTR)
sub_67E0B2C0	proc near		; CODE XREF: sub_67E0E600+1DAp
					; sub_67E0E600+287p

lpFileName	= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+lpFileName], eax ; lpFileName
		call	ds:GetFileAttributesA
		mov	edx, eax
		sub	esp, 4
		xor	eax, eax
		cmp	edx, 0FFFFFFFFh
		jz	short loc_67E0B2EB
		call	ds:GetLastError
		cmp	eax, 3
		setnz	al
		movzx	eax, al

loc_67E0B2EB:				; CODE XREF: sub_67E0B2C0+1Aj
		add	esp, 1Ch
		retn
sub_67E0B2C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0B2F0(LPSTR, DWORD)
sub_67E0B2F0	proc near		; CODE XREF: sub_67E0B480+2Cp
					; sub_67E0E600+3Fp ...

dwErrCode	= dword	ptr -1Ch
lpFilename	= dword	ptr -18h
nSize		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwErrCode], 0 ; dwErrCode
		call	ds:SetLastError
		sub	esp, 4
		call	sub_67E114C0
		mov	edx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+lpFilename], ebx ; lpFilename
		mov	[esp+1Ch+nSize], edx ; nSize
		mov	[esp+1Ch+dwErrCode], eax ; hModule
		call	ds:GetModuleFileNameA
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_67E0B335

loc_67E0B32A:				; CODE XREF: sub_67E0B2F0+4Dj
					; sub_67E0B2F0+64j
		mov	byte ptr [ebx],	0
		xor	eax, eax

loc_67E0B32F:				; CODE XREF: sub_67E0B2F0+78j
					; sub_67E0B2F0+EDj ...
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E0B335:				; CODE XREF: sub_67E0B2F0+38j
		call	ds:GetLastError
		test	eax, eax
		jnz	short loc_67E0B32A
		mov	[esp+1Ch+lpFilename], 5Ch
		mov	[esp+1Ch+dwErrCode], ebx
		call	ds:_mbsrchr
		test	eax, eax
		mov	esi, eax
		jz	short loc_67E0B32A
		mov	byte ptr [eax+1], 0
		sub	eax, ebx
		cmp	eax, 3
		mov	ebx, eax
		jg	short loc_67E0B370

loc_67E0B363:				; CODE XREF: sub_67E0B2F0+A2j
					; sub_67E0B2F0+C6j ...
		mov	eax, 1
		jmp	short loc_67E0B32F
; ---------------------------------------------------------------------------
		align 10h

loc_67E0B370:				; CODE XREF: sub_67E0B2F0+71j
		lea	eax, [esi-4]
		mov	[esp+1Ch+nSize], 4 ; MaxCount
		mov	[esp+1Ch+lpFilename], offset Str ; "\\bin"
		mov	[esp+1Ch+dwErrCode], eax ; Str1
		call	_strnicmp
		test	eax, eax
		jz	short loc_67E0B3E2
		cmp	ebx, 9
		jle	short loc_67E0B363
		lea	eax, [esi-0Ah]
		mov	[esp+1Ch+nSize], 0Ah ; MaxCount
		mov	[esp+1Ch+lpFilename], offset aBinDebug ; "\\bin\\debug"
		mov	[esp+1Ch+dwErrCode], eax ; Str1
		call	_strnicmp
		test	eax, eax
		jz	short loc_67E0B3F0
		cmp	ebx, 0Bh
		jle	short loc_67E0B363
		lea	eax, [esi-0Ch]
		mov	[esp+1Ch+nSize], 0Ch ; MaxCount
		mov	[esp+1Ch+lpFilename], offset aBinRelease ; "\\bin\\release"
		mov	[esp+1Ch+dwErrCode], eax ; Str1
		call	_strnicmp
		test	eax, eax
		jnz	short loc_67E0B363
		mov	byte ptr [esi-0Bh], 0
		mov	al, 1
		jmp	loc_67E0B32F
; ---------------------------------------------------------------------------

loc_67E0B3E2:				; CODE XREF: sub_67E0B2F0+9Dj
		mov	byte ptr [esi-3], 0
		mov	al, 1
		jmp	loc_67E0B32F
; ---------------------------------------------------------------------------
		align 10h

loc_67E0B3F0:				; CODE XREF: sub_67E0B2F0+C1j
		mov	byte ptr [esi-9], 0
		mov	al, 1
		jmp	loc_67E0B32F
sub_67E0B2F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0B400	proc near		; CODE XREF: sub_67DE7F60+102p
					; sub_67DEE790:loc_67DEEA85p ...
		sub	esp, 0Ch
		call	ds:_errno
		cmp	dword ptr [eax], 2733h
		setz	al
		add	esp, 0Ch
		movzx	eax, al
		retn
sub_67E0B400	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		call	ds:_errno
		mov	edx, [esp+10h]
		mov	[eax], edx
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0B440	proc near		; CODE XREF: sub_67DCAEB0+12p
					; sub_67DCDAC0+1BEp ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E18AB0
		sub	esp, 4
		add	eax, 1
		add	esp, 1Ch
		retn
sub_67E0B440	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0B460	proc near		; CODE XREF: sub_67DCAF40+Bp
					; dbus_connection_ref+75p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E18AF0
		sub	esp, 4
		sub	eax, 1
		add	esp, 1Ch
		retn
sub_67E0B460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0B480	proc near		; CODE XREF: sub_67E0F520+77p

var_23C		= dword	ptr -23Ch
var_238		= dword	ptr -238h
var_234		= dword	ptr -234h
var_228		= byte ptr -228h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 23Ch
		mov	[esp+23Ch+var_C], ebx
		lea	ebx, [esp+23Ch+var_228]
		mov	[esp+23Ch+var_4], edi
		mov	edi, eax
		mov	[esp+23Ch+var_8], esi
		mov	[esp+23Ch+var_238], 208h ; DWORD
		mov	[esp+23Ch+var_23C], ebx	; LPSTR
		call	sub_67E0B2F0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67E0B50C
		lea	esi, [esp+23Ch+var_20]
		mov	[esp+23Ch+var_23C], esi
		call	sub_67E03350
		mov	[esp+23Ch+var_238], ebx	; char *
		mov	[esp+23Ch+var_23C], esi	; int
		call	sub_67E08C10
		mov	[esp+23Ch+var_23C], edi
		call	sub_67E03350
		mov	[esp+23Ch+var_23C], esi
		call	sub_67E00CE0
		mov	[esp+23Ch+var_238], 0
		mov	[esp+23Ch+var_23C], esi
		mov	[esp+23Ch+var_234], eax
		call	sub_67DFED20
		mov	[esp+23Ch+var_238], edi
		mov	[esp+23Ch+var_23C], esi
		call	sub_67DF0D70
		test	eax, eax
		setnz	al
		movzx	eax, al

loc_67E0B50C:				; CODE XREF: sub_67E0B480+37j
		mov	ebx, [esp+23Ch+var_C]
		mov	esi, [esp+23Ch+var_8]
		mov	edi, [esp+23Ch+var_4]
		add	esp, 23Ch
		retn
sub_67E0B480	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0B530(DWORD)
sub_67E0B530	proc near		; CODE XREF: sub_67DD26C0+340p
					; sub_67DD26C0+491p ...

dwMilliseconds	= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwMilliseconds], eax ;	dwMilliseconds
		call	ds:Sleep
		sub	esp, 4
		add	esp, 1Ch
		retn
sub_67E0B530	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0B550	proc near		; CODE XREF: sub_67E0FCC0+447p
					; sub_67E0FCC0+54Ep

dwDesiredAccess	= dword	ptr -4Ch
bInheritHandle	= dword	ptr -48h
lpName		= dword	ptr -44h
dwFileOffsetLow	= dword	ptr -40h
dwNumberOfBytesToMap= dword ptr	-3Ch
var_20		= dword	ptr -20h

		push	ebp
		mov	ebp, edx
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 3Ch
		mov	edi, ds:OpenFileMappingA
		mov	[esp+4Ch+var_20], 0

loc_67E0B569:				; CODE XREF: sub_67E0B550+CAj
		mov	[esp+4Ch+dwDesiredAccess], ebp
		call	sub_67E01770
		mov	[esp+4Ch+bInheritHandle], 0 ; bInheritHandle
		mov	[esp+4Ch+dwDesiredAccess], 4 ; dwDesiredAccess
		mov	[esp+4Ch+lpName], eax ;	lpName
		call	edi ; OpenFileMappingA
		sub	esp, 0Ch
		test	eax, eax
		mov	esi, eax
		jz	short loc_67E0B600
		mov	[esp+4Ch+dwNumberOfBytesToMap],	0 ; dwNumberOfBytesToMap
		mov	[esp+4Ch+dwFileOffsetLow], 0 ; dwFileOffsetLow
		mov	[esp+4Ch+lpName], 0 ; dwFileOffsetHigh
		mov	[esp+4Ch+bInheritHandle], 4 ; dwDesiredAccess
		mov	[esp+4Ch+dwDesiredAccess], eax ; hFileMappingObject
		call	ds:MapViewOfFile
		sub	esp, 14h
		test	eax, eax
		mov	edi, eax
		jz	short loc_67E0B620
		mov	[esp+4Ch+dwDesiredAccess], ebx
		call	sub_67E03350
		mov	[esp+4Ch+bInheritHandle], edi ;	char *
		mov	[esp+4Ch+dwDesiredAccess], ebx ; int
		call	sub_67E08C10
		mov	[esp+4Ch+dwDesiredAccess], edi ; lpBaseAddress
		call	ds:UnmapViewOfFile
		sub	esp, 4
		mov	[esp+4Ch+dwDesiredAccess], esi ; hObject
		call	ds:CloseHandle
		mov	eax, 1
		sub	esp, 4
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0B600:				; CODE XREF: sub_67E0B550+3Dj
		mov	[esp+4Ch+dwDesiredAccess], 64h ; dwMilliseconds
		call	ds:Sleep
		sub	esp, 4
		add	[esp+4Ch+var_20], 1
		cmp	[esp+4Ch+var_20], 14h
		jnz	loc_67E0B569

loc_67E0B620:				; CODE XREF: sub_67E0B550+6Fj
		add	esp, 3Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E0B550	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0B630	proc near		; CODE XREF: sub_67DFB5D0+5Cp

lpHwProfileInfo	= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
HwProfileInfo	= tagHW_PROFILE_INFOA ptr -88h
arg_0		= dword	ptr  4
arg_8		= dword	ptr  0Ch

		push	edi
		push	esi
		push	ebx
		sub	esp, 90h
		lea	eax, [esp+9Ch+HwProfileInfo]
		mov	ebx, [esp+9Ch+arg_0]
		mov	[esp+9Ch+lpHwProfileInfo], eax ; lpHwProfileInfo
		call	ds:GetCurrentHwProfileA
		sub	esp, 4
		test	eax, eax
		jz	loc_67E0BE41
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+1]
		lea	eax, [ecx-30h]
		movsx	edx, cl
		cmp	al, 9
		ja	loc_67E0B9C2
		sub	edx, 30h

loc_67E0B66E:				; CODE XREF: sub_67E0B630+A3Dj
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+2]
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0B9E3

loc_67E0B681:				; CODE XREF: sub_67E0B630+3ADj
		lea	eax, [esi-30h]
		shl	eax, 4

loc_67E0B687:				; CODE XREF: sub_67E0B630+3C6j
					; sub_67E0B630+3D2j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+3]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	esi, cl
		cmp	dl, 9
		ja	loc_67E0BE20
		lea	edx, [esi-30h]
		shl	edx, 8

loc_67E0B6A3:				; CODE XREF: sub_67E0B630+800j
					; sub_67E0B630+80Cj ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+4]
		or	edx, eax
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BDF8
		lea	eax, [esi-30h]
		shl	eax, 0Ch

loc_67E0B6BE:				; CODE XREF: sub_67E0B630+7DBj
					; sub_67E0B630+7E7j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+5]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	esi, cl
		cmp	dl, 9
		ja	loc_67E0BDD3
		lea	ecx, [esi-30h]
		shl	ecx, 10h

loc_67E0B6DA:				; CODE XREF: sub_67E0B630+7B7j
					; sub_67E0B630+7C3j ...
		movzx	edx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+6]
		or	ecx, eax
		lea	eax, [edx-30h]
		movsx	esi, dl
		cmp	al, 9
		ja	loc_67E0BDB0
		lea	edx, [esi-30h]
		shl	edx, 14h

loc_67E0B6F5:				; CODE XREF: sub_67E0B630+792j
					; sub_67E0B630+79Ej ...
		or	edx, ecx
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+7]
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BD88
		lea	eax, [esi-30h]
		shl	eax, 18h

loc_67E0B710:				; CODE XREF: sub_67E0B630+76Bj
					; sub_67E0B630+777j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+8]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	edi, cl
		cmp	dl, 9
		ja	loc_67E0BD63
		mov	esi, edi
		shl	esi, 1Ch

loc_67E0B72B:				; CODE XREF: sub_67E0B630+747j
					; sub_67E0B630+753j ...
		or	esi, eax
		mov	[ebx], esi
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+0Ah]
		lea	eax, [ecx-30h]
		movsx	edx, cl
		cmp	al, 9
		ja	loc_67E0BD50
		sub	edx, 30h

loc_67E0B745:				; CODE XREF: sub_67E0B630+72Ej
					; sub_67E0B630+8ADj
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+0Bh]
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BD25
		lea	eax, [esi-30h]
		shl	eax, 4

loc_67E0B75E:				; CODE XREF: sub_67E0B630+708j
					; sub_67E0B630+714j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+0Ch]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	esi, cl
		cmp	dl, 9
		ja	loc_67E0BD00
		lea	edx, [esi-30h]
		shl	edx, 8

loc_67E0B77A:				; CODE XREF: sub_67E0B630+6E4j
					; sub_67E0B630+6F0j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+0Dh]
		or	edx, eax
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BCD8
		lea	eax, [esi-30h]
		shl	eax, 0Ch

loc_67E0B795:				; CODE XREF: sub_67E0B630+6BBj
					; sub_67E0B630+6C7j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+0Fh]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	esi, cl
		cmp	dl, 9
		ja	loc_67E0BCB3
		lea	ecx, [esi-30h]
		shl	ecx, 10h

loc_67E0B7B1:				; CODE XREF: sub_67E0B630+697j
					; sub_67E0B630+6A3j ...
		movzx	edx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+10h]
		or	ecx, eax
		lea	eax, [edx-30h]
		movsx	esi, dl
		cmp	al, 9
		ja	loc_67E0BC90
		lea	edx, [esi-30h]
		shl	edx, 14h

loc_67E0B7CC:				; CODE XREF: sub_67E0B630+672j
					; sub_67E0B630+67Ej ...
		or	edx, ecx
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+11h]
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BC68
		lea	eax, [esi-30h]
		shl	eax, 18h

loc_67E0B7E7:				; CODE XREF: sub_67E0B630+64Bj
					; sub_67E0B630+657j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+12h]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	edi, cl
		cmp	dl, 9
		ja	loc_67E0BC43
		mov	esi, edi
		shl	esi, 1Ch

loc_67E0B802:				; CODE XREF: sub_67E0B630+627j
					; sub_67E0B630+633j ...
		or	esi, eax
		mov	[ebx+4], esi
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+14h]
		lea	eax, [ecx-30h]
		movsx	edx, cl
		cmp	al, 9
		ja	loc_67E0BC30
		sub	edx, 30h

loc_67E0B81D:				; CODE XREF: sub_67E0B630+60Ej
					; sub_67E0B630+92Dj
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+15h]
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BC05
		lea	eax, [esi-30h]
		shl	eax, 4

loc_67E0B836:				; CODE XREF: sub_67E0B630+5E8j
					; sub_67E0B630+5F4j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+16h]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	esi, cl
		cmp	dl, 9
		ja	loc_67E0BBE0
		lea	edx, [esi-30h]
		shl	edx, 8

loc_67E0B852:				; CODE XREF: sub_67E0B630+5C4j
					; sub_67E0B630+5D0j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+17h]
		or	edx, eax
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BBB8
		lea	eax, [esi-30h]
		shl	eax, 0Ch

loc_67E0B86D:				; CODE XREF: sub_67E0B630+59Bj
					; sub_67E0B630+5A7j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+19h]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	esi, cl
		cmp	dl, 9
		ja	loc_67E0BB93
		lea	ecx, [esi-30h]
		shl	ecx, 10h

loc_67E0B889:				; CODE XREF: sub_67E0B630+577j
					; sub_67E0B630+583j ...
		movzx	edx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+1Ah]
		or	ecx, eax
		lea	eax, [edx-30h]
		movsx	esi, dl
		cmp	al, 9
		ja	loc_67E0BB70
		lea	edx, [esi-30h]
		shl	edx, 14h

loc_67E0B8A4:				; CODE XREF: sub_67E0B630+552j
					; sub_67E0B630+55Ej ...
		or	edx, ecx
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+1Bh]
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BB48
		lea	eax, [esi-30h]
		shl	eax, 18h

loc_67E0B8BF:				; CODE XREF: sub_67E0B630+52Bj
					; sub_67E0B630+537j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+1Ch]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	edi, cl
		cmp	dl, 9
		ja	loc_67E0BB23
		mov	esi, edi
		shl	esi, 1Ch

loc_67E0B8DA:				; CODE XREF: sub_67E0B630+507j
					; sub_67E0B630+513j ...
		or	esi, eax
		mov	[ebx+8], esi
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+1Dh]
		lea	eax, [ecx-30h]
		movsx	edx, cl
		cmp	al, 9
		ja	loc_67E0BB10
		sub	edx, 30h

loc_67E0B8F5:				; CODE XREF: sub_67E0B630+4EEj
					; sub_67E0B630+9ADj
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+1Eh]
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BAE5
		lea	eax, [esi-30h]
		shl	eax, 4

loc_67E0B90E:				; CODE XREF: sub_67E0B630+4C8j
					; sub_67E0B630+4D4j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+1Fh]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	esi, cl
		cmp	dl, 9
		ja	loc_67E0BAC0
		lea	edx, [esi-30h]
		shl	edx, 8

loc_67E0B92A:				; CODE XREF: sub_67E0B630+4A4j
					; sub_67E0B630+4B0j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+20h]
		or	edx, eax
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BA98
		lea	eax, [esi-30h]
		shl	eax, 0Ch

loc_67E0B945:				; CODE XREF: sub_67E0B630+47Bj
					; sub_67E0B630+487j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+21h]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	esi, cl
		cmp	dl, 9
		ja	loc_67E0BA73
		lea	ecx, [esi-30h]
		shl	ecx, 10h

loc_67E0B961:				; CODE XREF: sub_67E0B630+457j
					; sub_67E0B630+463j ...
		movzx	edx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+22h]
		or	ecx, eax
		lea	eax, [edx-30h]
		movsx	esi, dl
		cmp	al, 9
		ja	loc_67E0BA50
		lea	edx, [esi-30h]
		shl	edx, 14h

loc_67E0B97C:				; CODE XREF: sub_67E0B630+432j
					; sub_67E0B630+43Ej ...
		or	edx, ecx
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+23h]
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		ja	loc_67E0BA25
		lea	eax, [esi-30h]
		shl	eax, 18h

loc_67E0B997:				; CODE XREF: sub_67E0B630+408j
					; sub_67E0B630+414j ...
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+24h]
		or	eax, edx
		lea	edx, [ecx-30h]
		movsx	edi, cl
		cmp	dl, 9
		ja	short loc_67E0BA07
		mov	esi, edi
		shl	esi, 1Ch

loc_67E0B9AE:				; CODE XREF: sub_67E0B630+3EBj
					; sub_67E0B630+3F3j ...
		or	esi, eax
		mov	eax, 1
		mov	[ebx+0Ch], esi
		add	esp, 90h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67E0B9C2:				; CODE XREF: sub_67E0B630+35j
		lea	eax, [ecx-41h]
		cmp	al, 5
		ja	loc_67E0C060
		movzx	ecx, [esp+9Ch+HwProfileInfo.szHwProfileGuid+2]
		sub	edx, 37h
		lea	eax, [ecx-30h]
		movsx	esi, cl
		cmp	al, 9
		jbe	loc_67E0B681

loc_67E0B9E3:				; CODE XREF: sub_67E0B630+4Bj
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0C050
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B687
		lea	eax, [esi-57h]
		shl	eax, 4
		jmp	loc_67E0B687
; ---------------------------------------------------------------------------

loc_67E0BA07:				; CODE XREF: sub_67E0B630+377j
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0C040
		sub	ecx, 61h
		xor	esi, esi
		cmp	cl, 5
		ja	short loc_67E0B9AE
		lea	esi, [edi-57h]
		shl	esi, 1Ch
		jmp	short loc_67E0B9AE
; ---------------------------------------------------------------------------

loc_67E0BA25:				; CODE XREF: sub_67E0B630+35Bj
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0C030
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B997
		lea	eax, [esi-57h]
		shl	eax, 18h
		jmp	loc_67E0B997
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BA50:				; CODE XREF: sub_67E0B630+340j
		lea	eax, [edx-41h]
		cmp	al, 5
		jbe	loc_67E0C020
		lea	eax, [edx-61h]
		xor	edx, edx
		cmp	al, 5
		ja	loc_67E0B97C
		lea	edx, [esi-57h]
		shl	edx, 14h
		jmp	loc_67E0B97C
; ---------------------------------------------------------------------------

loc_67E0BA73:				; CODE XREF: sub_67E0B630+325j
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0C010
		lea	edx, [ecx-61h]
		xor	ecx, ecx
		cmp	dl, 5
		ja	loc_67E0B961
		lea	ecx, [esi-57h]
		shl	ecx, 10h
		jmp	loc_67E0B961
; ---------------------------------------------------------------------------

loc_67E0BA98:				; CODE XREF: sub_67E0B630+309j
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0C000
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B945
		lea	eax, [esi-57h]
		shl	eax, 0Ch
		jmp	loc_67E0B945
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BAC0:				; CODE XREF: sub_67E0B630+2EEj
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0BFF0
		sub	ecx, 61h
		xor	edx, edx
		cmp	cl, 5
		ja	loc_67E0B92A
		lea	edx, [esi-57h]
		shl	edx, 8
		jmp	loc_67E0B92A
; ---------------------------------------------------------------------------

loc_67E0BAE5:				; CODE XREF: sub_67E0B630+2D2j
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0BFE2
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B90E
		lea	eax, [esi-57h]
		shl	eax, 4
		jmp	loc_67E0B90E
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BB10:				; CODE XREF: sub_67E0B630+2BCj
		lea	eax, [ecx-41h]
		cmp	al, 5
		ja	loc_67E0BFD0
		sub	edx, 37h
		jmp	loc_67E0B8F5
; ---------------------------------------------------------------------------

loc_67E0BB23:				; CODE XREF: sub_67E0B630+29Fj
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0BFC0
		sub	ecx, 61h
		xor	esi, esi
		cmp	cl, 5
		ja	loc_67E0B8DA
		lea	esi, [edi-57h]
		shl	esi, 1Ch
		jmp	loc_67E0B8DA
; ---------------------------------------------------------------------------

loc_67E0BB48:				; CODE XREF: sub_67E0B630+283j
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0BFB0
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B8BF
		lea	eax, [esi-57h]
		shl	eax, 18h
		jmp	loc_67E0B8BF
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BB70:				; CODE XREF: sub_67E0B630+268j
		lea	eax, [edx-41h]
		cmp	al, 5
		jbe	loc_67E0BFA0
		lea	eax, [edx-61h]
		xor	edx, edx
		cmp	al, 5
		ja	loc_67E0B8A4
		lea	edx, [esi-57h]
		shl	edx, 14h
		jmp	loc_67E0B8A4
; ---------------------------------------------------------------------------

loc_67E0BB93:				; CODE XREF: sub_67E0B630+24Dj
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0BF90
		lea	edx, [ecx-61h]
		xor	ecx, ecx
		cmp	dl, 5
		ja	loc_67E0B889
		lea	ecx, [esi-57h]
		shl	ecx, 10h
		jmp	loc_67E0B889
; ---------------------------------------------------------------------------

loc_67E0BBB8:				; CODE XREF: sub_67E0B630+231j
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0BF80
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B86D
		lea	eax, [esi-57h]
		shl	eax, 0Ch
		jmp	loc_67E0B86D
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BBE0:				; CODE XREF: sub_67E0B630+216j
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0BF70
		sub	ecx, 61h
		xor	edx, edx
		cmp	cl, 5
		ja	loc_67E0B852
		lea	edx, [esi-57h]
		shl	edx, 8
		jmp	loc_67E0B852
; ---------------------------------------------------------------------------

loc_67E0BC05:				; CODE XREF: sub_67E0B630+1FAj
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0BF62
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B836
		lea	eax, [esi-57h]
		shl	eax, 4
		jmp	loc_67E0B836
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BC30:				; CODE XREF: sub_67E0B630+1E4j
		lea	eax, [ecx-41h]
		cmp	al, 5
		ja	loc_67E0BF50
		sub	edx, 37h
		jmp	loc_67E0B81D
; ---------------------------------------------------------------------------

loc_67E0BC43:				; CODE XREF: sub_67E0B630+1C7j
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0BF40
		sub	ecx, 61h
		xor	esi, esi
		cmp	cl, 5
		ja	loc_67E0B802
		lea	esi, [edi-57h]
		shl	esi, 1Ch
		jmp	loc_67E0B802
; ---------------------------------------------------------------------------

loc_67E0BC68:				; CODE XREF: sub_67E0B630+1ABj
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0BF30
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B7E7
		lea	eax, [esi-57h]
		shl	eax, 18h
		jmp	loc_67E0B7E7
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BC90:				; CODE XREF: sub_67E0B630+190j
		lea	eax, [edx-41h]
		cmp	al, 5
		jbe	loc_67E0BF20
		lea	eax, [edx-61h]
		xor	edx, edx
		cmp	al, 5
		ja	loc_67E0B7CC
		lea	edx, [esi-57h]
		shl	edx, 14h
		jmp	loc_67E0B7CC
; ---------------------------------------------------------------------------

loc_67E0BCB3:				; CODE XREF: sub_67E0B630+175j
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0BF10
		lea	edx, [ecx-61h]
		xor	ecx, ecx
		cmp	dl, 5
		ja	loc_67E0B7B1
		lea	ecx, [esi-57h]
		shl	ecx, 10h
		jmp	loc_67E0B7B1
; ---------------------------------------------------------------------------

loc_67E0BCD8:				; CODE XREF: sub_67E0B630+159j
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0BF00
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B795
		lea	eax, [esi-57h]
		shl	eax, 0Ch
		jmp	loc_67E0B795
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BD00:				; CODE XREF: sub_67E0B630+13Ej
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0BEF0
		sub	ecx, 61h
		xor	edx, edx
		cmp	cl, 5
		ja	loc_67E0B77A
		lea	edx, [esi-57h]
		shl	edx, 8
		jmp	loc_67E0B77A
; ---------------------------------------------------------------------------

loc_67E0BD25:				; CODE XREF: sub_67E0B630+122j
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0BEE2
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B75E
		lea	eax, [esi-57h]
		shl	eax, 4
		jmp	loc_67E0B75E
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BD50:				; CODE XREF: sub_67E0B630+10Cj
		lea	eax, [ecx-41h]
		cmp	al, 5
		ja	loc_67E0BED0
		sub	edx, 37h
		jmp	loc_67E0B745
; ---------------------------------------------------------------------------

loc_67E0BD63:				; CODE XREF: sub_67E0B630+F0j
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0BEC0
		sub	ecx, 61h
		xor	esi, esi
		cmp	cl, 5
		ja	loc_67E0B72B
		lea	esi, [edi-57h]
		shl	esi, 1Ch
		jmp	loc_67E0B72B
; ---------------------------------------------------------------------------

loc_67E0BD88:				; CODE XREF: sub_67E0B630+D4j
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0BEB0
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B710
		lea	eax, [esi-57h]
		shl	eax, 18h
		jmp	loc_67E0B710
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BDB0:				; CODE XREF: sub_67E0B630+B9j
		lea	eax, [edx-41h]
		cmp	al, 5
		jbe	loc_67E0BEA0
		lea	eax, [edx-61h]
		xor	edx, edx
		cmp	al, 5
		ja	loc_67E0B6F5
		lea	edx, [esi-57h]
		shl	edx, 14h
		jmp	loc_67E0B6F5
; ---------------------------------------------------------------------------

loc_67E0BDD3:				; CODE XREF: sub_67E0B630+9Ej
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	loc_67E0BE90
		lea	edx, [ecx-61h]
		xor	ecx, ecx
		cmp	dl, 5
		ja	loc_67E0B6DA
		lea	ecx, [esi-57h]
		shl	ecx, 10h
		jmp	loc_67E0B6DA
; ---------------------------------------------------------------------------

loc_67E0BDF8:				; CODE XREF: sub_67E0B630+82j
		lea	eax, [ecx-41h]
		cmp	al, 5
		jbe	loc_67E0BE80
		sub	ecx, 61h
		xor	eax, eax
		cmp	cl, 5
		ja	loc_67E0B6BE
		lea	eax, [esi-57h]
		shl	eax, 0Ch
		jmp	loc_67E0B6BE
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BE20:				; CODE XREF: sub_67E0B630+67j
		lea	edx, [ecx-41h]
		cmp	dl, 5
		jbe	short loc_67E0BE70
		sub	ecx, 61h
		xor	edx, edx
		cmp	cl, 5
		ja	loc_67E0B6A3
		lea	edx, [esi-57h]
		shl	edx, 8
		jmp	loc_67E0B6A3
; ---------------------------------------------------------------------------

loc_67E0BE41:				; CODE XREF: sub_67E0B630+22j
		mov	eax, [esp+9Ch+arg_8]
		mov	[esp+9Ch+var_94], 0 ; char *
		mov	[esp+9Ch+var_98], offset aOrg_freedes_44 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+9Ch+lpHwProfileInfo], eax ; int
		call	dbus_set_error
		add	esp, 90h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BE70:				; CODE XREF: sub_67E0B630+7F6j
		lea	edx, [esi-37h]
		shl	edx, 8
		jmp	loc_67E0B6A3
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BE80:				; CODE XREF: sub_67E0B630+7CDj
		lea	eax, [esi-37h]
		shl	eax, 0Ch
		jmp	loc_67E0B6BE
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BE90:				; CODE XREF: sub_67E0B630+7A9j
		lea	ecx, [esi-37h]
		shl	ecx, 10h
		jmp	loc_67E0B6DA
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BEA0:				; CODE XREF: sub_67E0B630+785j
		lea	edx, [esi-37h]
		shl	edx, 14h
		jmp	loc_67E0B6F5
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BEB0:				; CODE XREF: sub_67E0B630+75Dj
		lea	eax, [esi-37h]
		shl	eax, 18h
		jmp	loc_67E0B710
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BEC0:				; CODE XREF: sub_67E0B630+739j
		lea	esi, [edi-37h]
		shl	esi, 1Ch
		jmp	loc_67E0B72B
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BED0:				; CODE XREF: sub_67E0B630+725j
		sub	ecx, 61h
		sub	edx, 57h
		cmp	cl, 6
		sbb	eax, eax
		and	edx, eax
		jmp	loc_67E0B745
; ---------------------------------------------------------------------------

loc_67E0BEE2:				; CODE XREF: sub_67E0B630+6FAj
		lea	eax, [esi-37h]
		shl	eax, 4
		jmp	loc_67E0B75E
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BEF0:				; CODE XREF: sub_67E0B630+6D6j
		lea	edx, [esi-37h]
		shl	edx, 8
		jmp	loc_67E0B77A
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BF00:				; CODE XREF: sub_67E0B630+6ADj
		lea	eax, [esi-37h]
		shl	eax, 0Ch
		jmp	loc_67E0B795
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BF10:				; CODE XREF: sub_67E0B630+689j
		lea	ecx, [esi-37h]
		shl	ecx, 10h
		jmp	loc_67E0B7B1
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BF20:				; CODE XREF: sub_67E0B630+665j
		lea	edx, [esi-37h]
		shl	edx, 14h
		jmp	loc_67E0B7CC
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BF30:				; CODE XREF: sub_67E0B630+63Dj
		lea	eax, [esi-37h]
		shl	eax, 18h
		jmp	loc_67E0B7E7
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BF40:				; CODE XREF: sub_67E0B630+619j
		lea	esi, [edi-37h]
		shl	esi, 1Ch
		jmp	loc_67E0B802
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BF50:				; CODE XREF: sub_67E0B630+605j
		sub	ecx, 61h
		sub	edx, 57h
		cmp	cl, 6
		sbb	eax, eax
		and	edx, eax
		jmp	loc_67E0B81D
; ---------------------------------------------------------------------------

loc_67E0BF62:				; CODE XREF: sub_67E0B630+5DAj
		lea	eax, [esi-37h]
		shl	eax, 4
		jmp	loc_67E0B836
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BF70:				; CODE XREF: sub_67E0B630+5B6j
		lea	edx, [esi-37h]
		shl	edx, 8
		jmp	loc_67E0B852
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BF80:				; CODE XREF: sub_67E0B630+58Dj
		lea	eax, [esi-37h]
		shl	eax, 0Ch
		jmp	loc_67E0B86D
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BF90:				; CODE XREF: sub_67E0B630+569j
		lea	ecx, [esi-37h]
		shl	ecx, 10h
		jmp	loc_67E0B889
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BFA0:				; CODE XREF: sub_67E0B630+545j
		lea	edx, [esi-37h]
		shl	edx, 14h
		jmp	loc_67E0B8A4
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BFB0:				; CODE XREF: sub_67E0B630+51Dj
		lea	eax, [esi-37h]
		shl	eax, 18h
		jmp	loc_67E0B8BF
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BFC0:				; CODE XREF: sub_67E0B630+4F9j
		lea	esi, [edi-37h]
		shl	esi, 1Ch
		jmp	loc_67E0B8DA
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BFD0:				; CODE XREF: sub_67E0B630+4E5j
		sub	ecx, 61h
		sub	edx, 57h
		cmp	cl, 6
		sbb	eax, eax
		and	edx, eax
		jmp	loc_67E0B8F5
; ---------------------------------------------------------------------------

loc_67E0BFE2:				; CODE XREF: sub_67E0B630+4BAj
		lea	eax, [esi-37h]
		shl	eax, 4
		jmp	loc_67E0B90E
; ---------------------------------------------------------------------------
		align 10h

loc_67E0BFF0:				; CODE XREF: sub_67E0B630+496j
		lea	edx, [esi-37h]
		shl	edx, 8
		jmp	loc_67E0B92A
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C000:				; CODE XREF: sub_67E0B630+46Dj
		lea	eax, [esi-37h]
		shl	eax, 0Ch
		jmp	loc_67E0B945
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C010:				; CODE XREF: sub_67E0B630+449j
		lea	ecx, [esi-37h]
		shl	ecx, 10h
		jmp	loc_67E0B961
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C020:				; CODE XREF: sub_67E0B630+425j
		lea	edx, [esi-37h]
		shl	edx, 14h
		jmp	loc_67E0B97C
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C030:				; CODE XREF: sub_67E0B630+3FAj
		lea	eax, [esi-37h]
		shl	eax, 18h
		jmp	loc_67E0B997
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C040:				; CODE XREF: sub_67E0B630+3DDj
		lea	esi, [edi-37h]
		shl	esi, 1Ch
		jmp	loc_67E0B9AE
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C050:				; CODE XREF: sub_67E0B630+3B8j
		lea	eax, [esi-37h]
		shl	eax, 4
		jmp	loc_67E0B687
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C060:				; CODE XREF: sub_67E0B630+397j
		sub	ecx, 61h
		sub	edx, 57h
		cmp	cl, 6
		sbb	eax, eax
		and	edx, eax
		jmp	loc_67E0B66E
sub_67E0B630	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0C080	proc near		; CODE XREF: sub_67E0C170+6p
					; sub_67E0C240:loc_67E0C4E0p

lpLibFileName	= dword	ptr -1Ch
lpProcName	= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	esi
		push	ebx
		sub	esp, 14h
		mov	[esp+1Ch+lpLibFileName], offset	LibFileName ; "dbghelp"
		call	ds:LoadLibraryA
		mov	ebx, ds:GetProcAddress
		sub	esp, 4
		mov	esi, eax
		mov	[esp+1Ch+lpProcName], offset aStackwalk	; "StackWalk"
		mov	[esp+1Ch+lpLibFileName], eax ; hModule
		call	ebx ; GetProcAddress
		sub	esp, 8
		mov	[esp+1Ch+lpLibFileName], esi ; hModule
		mov	ds:dword_67E34990, eax
		mov	[esp+1Ch+lpProcName], offset aSymgetmoduleba ; "SymGetModuleBase"
		call	ebx ; GetProcAddress
		sub	esp, 8
		mov	[esp+1Ch+lpLibFileName], esi ; hModule
		mov	ds:dword_67E34994, eax
		mov	[esp+1Ch+lpProcName], offset aSymfunctiontab ; "SymFunctionTableAccess"
		call	ebx ; GetProcAddress
		sub	esp, 8
		mov	[esp+1Ch+lpLibFileName], esi ; hModule
		mov	ds:dword_67E34998, eax
		mov	[esp+1Ch+lpProcName], offset aSyminitialize ; "SymInitialize"
		call	ebx ; GetProcAddress
		sub	esp, 8
		mov	[esp+1Ch+lpLibFileName], esi ; hModule
		mov	ds:dword_67E3499C, eax
		mov	[esp+1Ch+lpProcName], offset aSymgetsymfroma ; "SymGetSymFromAddr"
		call	ebx ; GetProcAddress
		sub	esp, 8
		mov	[esp+1Ch+lpLibFileName], esi ; hModule
		mov	ds:dword_67E349A0, eax
		mov	[esp+1Ch+lpProcName], offset aSymgetmodulein ; "SymGetModuleInfo"
		call	ebx ; GetProcAddress
		sub	esp, 8
		mov	[esp+1Ch+lpLibFileName], esi ; hModule
		mov	ds:dword_67E349A4, eax
		mov	[esp+1Ch+lpProcName], offset aSymsetoptions ; "SymSetOptions"
		call	ebx ; GetProcAddress
		sub	esp, 8
		mov	ds:dword_67E349A8, eax
		mov	[esp+1Ch+lpLibFileName], 2
		call	eax
		mov	ebx, ds:dword_67E3499C
		sub	esp, 4
		call	ds:GetCurrentProcess
		mov	[esp+14h+var_C], 1
		mov	[esp+14h+var_10], 0
		mov	[esp+14h+var_14], eax
		call	ebx ; dword_67E3499C
		mov	eax, 1
		sub	esp, 0Ch
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
sub_67E0C080	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0C170	proc near		; CODE XREF: sub_67E09C00+3p

hSourceProcessHandle= dword ptr	-3Ch
hSourceHandle	= dword	ptr -38h
hTargetProcessHandle= dword ptr	-34h
lpTargetHandle	= dword	ptr -30h
dwDesiredAccess	= dword	ptr -2Ch
bInheritHandle	= dword	ptr -28h
dwOptions	= dword	ptr -24h
ThreadId	= dword	ptr -14h
TargetHandle	= dword	ptr -10h

		push	edi
		push	esi
		push	ebx
		sub	esp, 30h
		call	sub_67E0C080
		mov	ebx, ds:GetCurrentProcess
		call	ebx ; GetCurrentProcess
		mov	edi, eax
		call	ds:GetCurrentThread
		mov	esi, eax
		call	ebx ; GetCurrentProcess
		lea	edx, [esp+3Ch+TargetHandle]
		mov	[esp+3Ch+lpTargetHandle], edx ;	lpTargetHandle
		mov	[esp+3Ch+hTargetProcessHandle],	edi ; hTargetProcessHandle
		mov	[esp+3Ch+hSourceHandle], esi ; hSourceHandle
		mov	[esp+3Ch+dwOptions], 2 ; dwOptions
		mov	[esp+3Ch+bInheritHandle], 0 ; bInheritHandle
		mov	[esp+3Ch+dwDesiredAccess], 0 ; dwDesiredAccess
		mov	[esp+3Ch+hSourceProcessHandle],	eax ; hSourceProcessHandle
		call	ds:DuplicateHandle
		sub	esp, 1Ch
		lea	eax, [esp+3Ch+ThreadId]
		mov	[esp+3Ch+bInheritHandle], eax ;	lpThreadId
		mov	eax, [esp+3Ch+TargetHandle]
		mov	[esp+3Ch+dwDesiredAccess], 0 ; dwCreationFlags
		mov	[esp+3Ch+hTargetProcessHandle],	offset StartAddress ; lpStartAddress
		mov	[esp+3Ch+hSourceHandle], 0 ; dwStackSize
		mov	[esp+3Ch+lpTargetHandle], eax ;	lpParameter
		mov	[esp+3Ch+hSourceProcessHandle],	0 ; lpThreadAttributes
		call	ds:CreateThread
		sub	esp, 18h
		mov	ebx, eax
		mov	[esp+3Ch+hSourceHandle], 0FFFFFFFFh ; dwMilliseconds
		mov	[esp+3Ch+hSourceProcessHandle],	eax ; hHandle
		call	ds:WaitForSingleObject
		sub	esp, 8
		mov	[esp+3Ch+hSourceProcessHandle],	ebx ; hObject
		mov	ebx, ds:CloseHandle
		call	ebx ; CloseHandle
		sub	esp, 4
		mov	eax, [esp+3Ch+TargetHandle]
		mov	[esp+3Ch+hSourceProcessHandle],	eax ; hObject
		call	ebx ; CloseHandle
		sub	esp, 4
		add	esp, 30h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E0C170	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0C240	proc near		; CODE XREF: StartAddress+7p

hThread		= dword	ptr -71Ch
lpContext	= dword	ptr -718h
var_714		= dword	ptr -714h
var_710		= dword	ptr -710h
var_70C		= dword	ptr -70Ch
var_708		= dword	ptr -708h
var_704		= dword	ptr -704h
var_700		= dword	ptr -700h
var_6F8		= dword	ptr -6F8h
var_6F4		= dword	ptr -6F4h
var_6F0		= dword	ptr -6F0h
var_6EC		= dword	ptr -6ECh
var_6E8		= dword	ptr -6E8h
var_6E4		= dword	ptr -6E4h
var_6E0		= dword	ptr -6E0h
var_6DC		= dword	ptr -6DCh
var_6D8		= dword	ptr -6D8h
var_6D4		= dword	ptr -6D4h
var_6D0		= dword	ptr -6D0h
Context		= CONTEXT ptr -6CCh
var_400		= dword	ptr -400h
var_3FC		= dword	ptr -3FCh
var_3F4		= byte ptr -3F4h
var_3C4		= byte ptr -3C4h
var_1C4		= byte ptr -1C4h
var_1B0		= byte ptr -1B0h
var_C4		= byte ptr -0C4h
var_BC		= dword	ptr -0BCh
var_AC		= dword	ptr -0ACh
var_A4		= dword	ptr -0A4h
var_A0		= byte ptr -0A0h
var_20		= dword	ptr -20h
var_10		= byte ptr -10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 70Ch
		mov	[esp+71Ch+var_6D0], eax
		mov	eax, ds:dword_67E34990
		test	eax, eax
		jz	loc_67E0C4E0

loc_67E0C25B:				; CODE XREF: sub_67E0C240+2A7j
		call	ds:GetCurrentThread
		cmp	eax, [esp+71Ch+var_6D0]
		jz	loc_67E0C400
		mov	[esp+71Ch+hThread], offset aBacktrace ;	"Backtrace:\n"
		xor	ebx, ebx
		call	sub_67DFAD60
		lea	eax, [esp+71Ch+Context]
		mov	edx, [esp+71Ch+var_6D0]
		mov	[esp+71Ch+var_6E0], eax
		mov	edi, eax
		mov	ecx, 0B3h
		mov	eax, ebx
		rep stosd
		mov	[esp+71Ch+hThread], edx	; hThread
		mov	[esp+71Ch+Context.ContextFlags], 10007h
		call	ds:SuspendThread
		sub	esp, 4
		mov	edx, [esp+71Ch+var_6D0]
		lea	eax, [esp+71Ch+Context]
		mov	[esp+71Ch+lpContext], eax ; lpContext
		mov	[esp+71Ch+hThread], edx	; hThread
		call	ds:GetThreadContext
		sub	esp, 8
		test	eax, eax
		jz	loc_67E0C410
		lea	edx, [esp+71Ch+var_C4]
		mov	eax, ebx
		mov	esi, ds:GetCurrentProcess
		mov	ecx, 29h
		mov	edi, edx
		rep stosd
		mov	eax, [esp+71Ch+Context._Ebp]
		lea	ebx, [esp+71Ch+var_1C4]
		mov	[esp+71Ch+var_6E4], edx
		mov	[esp+71Ch+var_A4], 3
		mov	[esp+71Ch+var_BC], 3
		mov	[esp+71Ch+var_AC], eax
		mov	eax, [esp+71Ch+Context._Eip]
		mov	dword ptr [esp+71Ch+var_C4], eax
		lea	esi, [esi+0]

loc_67E0C320:				; CODE XREF: sub_67E0C240+1A8j
					; sub_67E0C240+218j ...
		mov	edx, ds:dword_67E34994
		mov	edi, ds:dword_67E34990
		mov	ebp, ds:dword_67E34998
		mov	[esp+71Ch+var_6D4], edx
		call	esi
		mov	edx, [esp+6F8h+Context.FloatSave.ControlWord]
		mov	[esp+6F8h+var_6D8], 0
		mov	[esp+6F8h+var_6E0], ebp
		mov	[esp+6F8h+var_6E4], 0
		mov	[esp+6F8h+var_6DC], edx
		lea	edx, [esp+6F8h+Context.FloatSave.TagWord]
		mov	[esp+6F8h+var_6E8], edx
		lea	edx, [esp+6F8h+var_A0]
		mov	[esp+6F8h+var_6EC], edx
		mov	edx, [esp+6F8h+Context.FloatSave.StatusWord]
		mov	[esp+6F8h+var_6F4], eax
		mov	[esp+6F8h+var_6F8], 14Ch
		mov	[esp+6F8h+var_6F0], edx
		call	edi ; dword_67E34990
		sub	esp, 24h
		test	eax, eax
		jz	short loc_67E0C3F0
		mov	dword ptr [ebx], 18h
		mov	edi, ds:dword_67E349A0
		mov	dword ptr [ebx+10h], 0E9h
		mov	ebp, dword ptr [esp+71Ch+var_C4]
		call	esi
		lea	edx, [esp+70Ch+var_10]
		mov	[esp+70Ch+var_700], ebx
		mov	[esp+70Ch+var_704], edx
		mov	[esp+70Ch+var_708], ebp
		mov	[esp+70Ch+var_70C], eax
		call	edi ; dword_67E349A0
		sub	esp, 10h
		test	eax, eax
		jz	loc_67E0C460
		mov	eax, [esp+71Ch+var_20]
		test	eax, eax
		jz	short loc_67E0C441
		lea	edx, [esp+71Ch+var_1B0]
		mov	[esp+71Ch+var_714], eax
		mov	[esp+71Ch+lpContext], edx ; char
		mov	[esp+71Ch+hThread], offset a3S0xLx ; "3\t%s+0x%lx\n"
		call	sub_67DFAD60
		jmp	loc_67E0C320
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C3F0:				; CODE XREF: sub_67E0C240+141j
		mov	eax, [esp+71Ch+var_6D0]
		mov	[esp+71Ch+hThread], eax	; hThread
		call	ds:ResumeThread
		sub	esp, 4

loc_67E0C400:				; CODE XREF: sub_67E0C240+25j
					; sub_67E0C240+2B0j
		add	esp, 70Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C410:				; CODE XREF: sub_67E0C240+7Ej
		call	ds:GetLastError
		mov	[esp+71Ch+hThread], offset aCouldnTGetThre ; "Couldn't get thread context (error %ld)"...
		mov	[esp+71Ch+lpContext], eax ; char
		call	sub_67DFAD60
		mov	eax, [esp+71Ch+var_6D0]
		mov	[esp+71Ch+hThread], eax	; hThread
		call	ds:ResumeThread
		sub	esp, 4
		add	esp, 70Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0C441:				; CODE XREF: sub_67E0C240+18Bj
		lea	eax, [esp+71Ch+var_1B0]
		mov	[esp+71Ch+lpContext], eax ; char
		mov	[esp+71Ch+hThread], offset a4S ; "4\t%s\n"
		call	sub_67DFAD60
		jmp	loc_67E0C320
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C460:				; CODE XREF: sub_67E0C240+17Cj
		mov	ebp, dword ptr [esp+71Ch+var_C4]
		mov	[esp+71Ch+var_400], 23Ch
		mov	edi, ds:dword_67E349A4
		call	esi
		lea	edx, [esp+710h+var_3F4]
		mov	[esp+710h+var_708], edx
		mov	[esp+710h+var_70C], ebp
		mov	[esp+710h+var_710], eax
		call	edi ; dword_67E349A4
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_67E0C4B1
		mov	eax, dword ptr [esp+71Ch+var_C4]
		mov	[esp+71Ch+hThread], offset a1P ; "1\t%p\n"
		mov	[esp+71Ch+lpContext], eax ; char
		call	sub_67DFAD60
		jmp	loc_67E0C320
; ---------------------------------------------------------------------------

loc_67E0C4B1:				; CODE XREF: sub_67E0C240+253j
		mov	eax, dword ptr [esp+71Ch+var_C4]
		sub	eax, [esp+71Ch+var_3FC]
		mov	[esp+71Ch+hThread], offset a2S0xLx ; "2\t%s+0x%lx\n"
		mov	[esp+71Ch+var_714], eax
		lea	eax, [esp+71Ch+var_3C4]
		mov	[esp+71Ch+lpContext], eax ; char
		call	sub_67DFAD60
		jmp	loc_67E0C320
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C4E0:				; CODE XREF: sub_67E0C240+15j
		call	sub_67E0C080
		test	eax, eax
		jnz	loc_67E0C25B
		lea	esi, [esi+0]
		jmp	loc_67E0C400
sub_67E0C240	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; DWORD	__stdcall StartAddress(LPVOID lpThreadParameter)
StartAddress	proc near		; DATA XREF: sub_67E0C170+67o

lpThreadParameter= dword ptr  4

		sub	esp, 0Ch
		mov	eax, [esp+0Ch+lpThreadParameter]
		call	sub_67E0C240
		xor	eax, eax
		add	esp, 0Ch
		retn	4
StartAddress	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0C520	proc near		; CODE XREF: sub_67DD6770+6E9p
					; sub_67DD6770+AD0p ...

lpFileName	= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_4]
		test	ebx, ebx
		jz	loc_67E0C5C0
		mov	[esp+2Ch+lpFileName], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E0C5C0

loc_67E0C543:				; CODE XREF: sub_67E0C520+A5j
		mov	[esp+2Ch+lpFileName], edx
		mov	[esp+2Ch+var_1C], offset a_dbus_delete_f ; "_dbus_delete_file"
		mov	dword ptr [esp+2Ch+var_20], 80Ch
		mov	[esp+2Ch+var_24], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aErrorNullDb_25 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+lpFileName], eax
		call	sub_67E01770
		mov	esi, eax
		mov	[esp+2Ch+lpFileName], eax ; lpFileName
		call	ds:DeleteFileA
		mov	edx, eax
		sub	esp, 4
		test	edx, edx
		mov	eax, 1
		jnz	short loc_67E0C5B7
		call	sub_67E094E0
		mov	dword ptr [esp+2Ch+var_20], esi	; char
		mov	[esp+2Ch+var_24], offset aFailedToDelete ; "Failed to delete file %s: %s\n"
		mov	[esp+2Ch+var_28], offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+2Ch+lpFileName], ebx ; int
		mov	[esp+2Ch+var_1C], eax
		call	dbus_set_error
		xor	eax, eax

loc_67E0C5B7:				; CODE XREF: sub_67E0C520+6Ej
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C5C0:				; CODE XREF: sub_67E0C520+Bj
					; sub_67E0C520+1Dj
		mov	edx, 1
		jmp	loc_67E0C543
sub_67E0C520	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0C5D0	proc near		; CODE XREF: sub_67DE8670+123p

nBufferLength	= dword	ptr -2Ch
lpBuffer	= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebx
		sub	esp, 28h
		mov	edx, ds:dword_67E34988
		test	edx, edx
		jz	short loc_67E0C614

loc_67E0C5DE:				; CODE XREF: sub_67E0C5D0+B2j
		mov	[esp+2Ch+var_1C], offset a_dbus_get_tmpd ; "_dbus_get_tmpdir"
		mov	[esp+2Ch+var_20], 7F8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+lpBuffer], offset aTmpdirNull ; "tmpdir != NULL"
		mov	[esp+2Ch+nBufferLength], 1
		call	sub_67DFAE70
		mov	eax, ds:dword_67E34988
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67E0C614:				; CODE XREF: sub_67E0C5D0+Cj
		mov	[esp+2Ch+lpBuffer], offset Buffer ; char
		mov	[esp+2Ch+nBufferLength], 3E8h ;	nBufferLength
		call	ds:GetTempPathA
		sub	esp, 8
		test	eax, eax
		jz	short loc_67E0C687
		mov	ebx, ds:_mbsrchr
		mov	[esp+2Ch+lpBuffer], 5Ch
		mov	[esp+2Ch+nBufferLength], offset	Buffer
		call	ebx ; _mbsrchr
		cmp	eax, offset Buffer
		jbe	short loc_67E0C657
		cmp	byte ptr [eax+1], 0
		jnz	short loc_67E0C657
		mov	byte ptr [eax],	0

loc_67E0C657:				; CODE XREF: sub_67E0C5D0+7Cj
					; sub_67E0C5D0+82j
		mov	[esp+2Ch+lpBuffer], 2Fh
		mov	[esp+2Ch+nBufferLength], offset	Buffer
		call	ebx ; _mbsrchr
		cmp	eax, offset Buffer
		jbe	short loc_67E0C678
		cmp	byte ptr [eax+1], 0
		jnz	short loc_67E0C678
		mov	byte ptr [eax],	0

loc_67E0C678:				; CODE XREF: sub_67E0C5D0+9Dj
					; sub_67E0C5D0+A3j
		mov	ds:dword_67E34988, offset Buffer
		jmp	loc_67E0C5DE
; ---------------------------------------------------------------------------

loc_67E0C687:				; CODE XREF: sub_67E0C5D0+5Ej
		mov	[esp+2Ch+nBufferLength], offset	aGettemppathFai	; "GetTempPath failed\n"
		call	sub_67DFAD60
		call	sub_67E09C00
sub_67E0C5D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0C6A0(int,	DWORD dwLen)
sub_67E0C6A0	proc near		; CODE XREF: sub_67DC3290+31Cp
					; sub_67DC39B0+31Bp ...

phProv		= dword	ptr -3Ch
szContainer	= dword	ptr -38h
szProvider	= dword	ptr -34h
dwProvType	= dword	ptr -30h
dwFlags		= dword	ptr -2Ch
hProv		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
dwLen		= dword	ptr  8

		sub	esp, 3Ch
		mov	[esp+3Ch+var_C], ebx
		mov	ebx, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_8], esi
		mov	esi, [esp+3Ch+dwLen]
		mov	[esp+3Ch+var_4], edi
		mov	[esp+3Ch+phProv], ebx
		call	sub_67E00CE0
		mov	[esp+3Ch+szContainer], esi
		mov	[esp+3Ch+phProv], ebx
		mov	edi, eax
		call	sub_67E087C0
		test	eax, eax
		jnz	short loc_67E0C6E3

loc_67E0C6D1:				; CODE XREF: sub_67E0C6A0+87j
		xor	eax, eax

loc_67E0C6D3:				; CODE XREF: sub_67E0C6A0+C2j
					; sub_67E0C6A0+E1j
		mov	ebx, [esp+3Ch+var_C]
		mov	esi, [esp+3Ch+var_8]
		mov	edi, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67E0C6E3:				; CODE XREF: sub_67E0C6A0+2Fj
		mov	[esp+3Ch+phProv], ebx
		mov	[esp+3Ch+szProvider], esi
		mov	[esp+3Ch+szContainer], edi
		call	sub_67E014C0
		mov	[esp+3Ch+dwFlags], 0F0000000h ;	dwFlags
		mov	[esp+3Ch+dwProvType], 1	; dwProvType
		mov	[esp+3Ch+szProvider], 0	; szProvider
		mov	[esp+3Ch+szContainer], 0 ; szContainer
		mov	ebx, eax
		lea	eax, [esp+3Ch+hProv]
		mov	[esp+3Ch+phProv], eax ;	phProv
		call	ds:CryptAcquireContextA
		sub	esp, 14h
		test	eax, eax
		jz	short loc_67E0C6D1
		mov	eax, [esp+3Ch+hProv]
		mov	[esp+3Ch+szProvider], ebx ; pbBuffer
		mov	[esp+3Ch+szContainer], esi ; dwLen
		mov	[esp+3Ch+phProv], eax ;	hProv
		call	ds:CryptGenRandom
		sub	esp, 0Ch
		test	eax, eax
		jz	short loc_67E0C767
		mov	eax, [esp+3Ch+hProv]
		mov	[esp+3Ch+szContainer], 0 ; dwFlags
		mov	[esp+3Ch+phProv], eax ;	hProv
		call	ds:CryptReleaseContext
		mov	eax, 1
		sub	esp, 8
		jmp	loc_67E0C6D3
; ---------------------------------------------------------------------------

loc_67E0C767:				; CODE XREF: sub_67E0C6A0+A3j
		mov	eax, [esp+3Ch+hProv]
		mov	[esp+3Ch+szContainer], 0 ; dwFlags
		mov	[esp+3Ch+phProv], eax ;	hProv
		call	ds:CryptReleaseContext
		xor	eax, eax
		sub	esp, 8
		jmp	loc_67E0C6D3
sub_67E0C6A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0C790	proc near		; CODE XREF: sub_67DD7930+263p

lpPathName	= dword	ptr -2Ch
lpSecurityAttributes= dword ptr	-28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_4]
		test	ebx, ebx
		jz	short loc_67E0C804
		mov	[esp+2Ch+lpPathName], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67E0C804

loc_67E0C7AB:				; CODE XREF: sub_67E0C790+79j
		mov	[esp+2Ch+lpPathName], edx
		mov	[esp+2Ch+var_1C], offset a_dbus_create_d ; "_dbus_create_directory"
		mov	dword ptr [esp+2Ch+var_20], 79Fh
		mov	[esp+2Ch+var_24], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+lpSecurityAttributes],	offset aErrorNullDb_25 ; "(error) == NULL || !dbus_error_is_set	("...
		call	sub_67DFAE70
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+lpPathName], eax
		call	sub_67E01770
		mov	[esp+2Ch+lpSecurityAttributes],	0 ; lpSecurityAttributes
		mov	esi, eax
		mov	[esp+2Ch+lpPathName], eax ; lpPathName
		call	ds:CreateDirectoryA
		sub	esp, 8
		test	eax, eax
		jz	short loc_67E0C810

loc_67E0C7F9:				; CODE XREF: sub_67E0C790+8Bj
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E0C804:				; CODE XREF: sub_67E0C790+Bj
					; sub_67E0C790+19j
		mov	edx, 1
		jmp	short loc_67E0C7AB
; ---------------------------------------------------------------------------
		align 10h

loc_67E0C810:				; CODE XREF: sub_67E0C790+67j
		call	ds:GetLastError
		cmp	eax, 0B7h
		jz	short loc_67E0C7F9
		lea	esi, [esi+0]
		call	sub_67E094E0
		mov	dword ptr [esp+2Ch+var_20], esi	; char
		mov	[esp+2Ch+lpPathName], ebx ; int
		mov	[esp+2Ch+var_24], offset aFailedToCreate ; "Failed to create directory %s: %s\n"
		mov	[esp+2Ch+lpSecurityAttributes],	offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+2Ch+var_1C], eax
		call	dbus_set_error
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
sub_67E0C790	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0C850	proc near		; CODE XREF: sub_67DD6770+C1p
					; sub_67DD6770+BEBp ...

lpSystemTimeAsFileTime=	dword ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
SystemTimeAsFileTime= _FILETIME	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		lea	eax, [esp+3Ch+SystemTimeAsFileTime]
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_0]
		mov	[esp+3Ch+lpSystemTimeAsFileTime], eax ;	lpSystemTimeAsFileTime
		call	ds:GetSystemTimeAsFileTime
		sub	esp, 4
		mov	eax, [esp+3Ch+SystemTimeAsFileTime.dwLowDateTime]
		mov	edx, [esp+3Ch+SystemTimeAsFileTime.dwHighDateTime]
		mov	[esp+3Ch+var_34], 0Ah
		mov	[esp+3Ch+var_30], 0
		add	eax, 2AC18000h
		adc	edx, 0FE624E21h
		mov	[esp+3Ch+lpSystemTimeAsFileTime], eax
		mov	[esp+3Ch+var_38], edx
		call	sub_67E185F0
		test	ebp, ebp
		mov	esi, eax
		mov	edi, edx
		jz	short loc_67E0C8D1
		mov	[esp+3Ch+var_34], 0F4240h
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+lpSystemTimeAsFileTime], eax
		mov	[esp+3Ch+var_38], edx
		call	sub_67E185F0
		mov	[ebp+0], eax

loc_67E0C8D1:				; CODE XREF: sub_67E0C850+60j
		test	ebx, ebx
		jz	short loc_67E0C8F3
		mov	[esp+3Ch+var_34], 0F4240h
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+lpSystemTimeAsFileTime], esi
		mov	[esp+3Ch+var_38], edi
		call	sub_67E18710
		mov	[ebx], eax

loc_67E0C8F3:				; CODE XREF: sub_67E0C850+83j
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_67E0C850	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, ds:GetCurrentProcessId
		add	esp, 0Ch
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0C920	proc near		; CODE XREF: sub_67DFAE30+3p
					; sub_67DFAE70+Bp ...
		sub	esp, 0Ch
		mov	eax, ds:GetCurrentProcessId
		add	esp, 0Ch
		jmp	eax
sub_67E0C920	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0C930(int,	char *)
sub_67E0C930	proc near		; CODE XREF: sub_67DC39B0+18Ap
					; sub_67DC4130+105p

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E01770
		mov	[esp+1Ch+arg_0], ebx ; int
		mov	[esp+1Ch+arg_4], eax ; char *
		add	esp, 18h
		pop	ebx
		jmp	sub_67DD5930
sub_67E0C930	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0C960	proc near		; CODE XREF: sub_67DD7930+1DAp
					; sub_67E097E0+A1p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_8], edi
		mov	[esp+2Ch+var_4], ebp
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		test	eax, eax
		jnz	short loc_67E0C9A0

loc_67E0C987:				; CODE XREF: sub_67E0C960+4Aj
		mov	eax, 1

loc_67E0C98C:				; CODE XREF: sub_67E0C960+D0j
					; sub_67E0C960+F6j
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67E0C9A0:				; CODE XREF: sub_67E0C960+25j
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00CE0
		test	eax, eax
		jz	short loc_67E0C987
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		mov	[esp+2Ch+var_2C], ebx
		sub	eax, 1
		mov	[esp+2Ch+var_28], eax
		call	sub_67E00E50
		cmp	al, 2Fh
		jz	loc_67E0CA78
		mov	[esp+2Ch+var_2C], ebx
		xor	ebp, ebp
		xor	edi, edi
		call	sub_67E00CE0
		mov	[esp+2Ch+var_2C], ebx
		sub	eax, 1
		mov	[esp+2Ch+var_28], eax
		call	sub_67E00E50
		cmp	al, 5Ch
		jz	loc_67E0CA78

loc_67E0C9EE:				; CODE XREF: sub_67E0C960+122j
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00E50
		cmp	al, 2Fh
		jz	short loc_67E0CA60
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], esi
		call	sub_67E00E50
		cmp	al, 5Ch
		jz	short loc_67E0CA60
		test	ebp, ebp
		jnz	short loc_67E0CA36
		mov	[esp+2Ch+var_28], 5Ch
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E067A0
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	loc_67E0C98C

loc_67E0CA36:				; CODE XREF: sub_67E0C960+B8j
					; sub_67E0C960+104j ...
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E00CE0
		mov	[esp+2Ch+var_24], ebx
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], esi
		mov	[esp+2Ch+var_20], eax
		call	sub_67E036F0
		jmp	loc_67E0C98C
; ---------------------------------------------------------------------------
		align 10h

loc_67E0CA60:				; CODE XREF: sub_67E0C960+A0j
					; sub_67E0C960+B4j
		mov	eax, edi
		test	al, al
		jz	short loc_67E0CA36
		mov	[esp+2Ch+var_28], 1
		mov	[esp+2Ch+var_2C], ebx
		call	sub_67E083B0
		jmp	short loc_67E0CA36
; ---------------------------------------------------------------------------

loc_67E0CA78:				; CODE XREF: sub_67E0C960+65j
					; sub_67E0C960+88j
		mov	ebp, 1
		mov	edi, 1
		jmp	loc_67E0C9EE
sub_67E0C960	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0CA90	proc near		; CODE XREF: sub_67DD7930+A9p

VarName		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 50h
		mov	ebx, [esp+5Ch+arg_4]
		mov	esi, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_4C], offset a_dbus_append_k ; "_dbus_append_keyring_directory_for_cred"...
		mov	[esp+5Ch+var_50], 0D08h
		test	ebx, ebx
		setnz	al
		mov	[esp+5Ch+VarName], eax
		mov	[esp+5Ch+var_54], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset aCredentialsNul ; "credentials	!= NULL"
		call	sub_67DFAE70
		mov	[esp+5Ch+VarName], ebx
		lea	ebx, [esp+5Ch+var_20]
		call	sub_67DD5640
		mov	[esp+5Ch+var_4C], offset a_dbus_append_k ; "_dbus_append_keyring_directory_for_cred"...
		mov	[esp+5Ch+var_50], 0D09h
		mov	[esp+5Ch+var_54], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+var_58], offset a_dbus_creden_1 ; "!_dbus_credentials_are_anonymous (crede"...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+VarName], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+VarName], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67E0CB20

loc_67E0CB19:				; CODE XREF: sub_67E0CA90+124j
		add	esp, 50h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67E0CB20:				; CODE XREF: sub_67E0CA90+87j
		mov	[esp+5Ch+VarName], offset aHomedrive ; "HOMEDRIVE"
		call	sub_67E09AD0
		test	eax, eax
		jz	short loc_67E0CB39
		cmp	byte ptr [eax],	0
		jnz	loc_67E0CBD0

loc_67E0CB39:				; CODE XREF: sub_67E0CA90+9Ej
					; sub_67E0CA90+14Cj
		mov	[esp+5Ch+VarName], offset aHomepath ; "HOMEPATH"
		call	sub_67E09AD0
		test	eax, eax
		jz	short loc_67E0CB4E
		cmp	byte ptr [eax],	0
		jnz	short loc_67E0CBC0

loc_67E0CB4E:				; CODE XREF: sub_67E0CA90+B7j
					; sub_67E0CA90+13Cj
		lea	edi, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_58], offset a_dbusKeyrings	; ".dbus-keyrings"
		mov	[esp+5Ch+VarName], edi ; int
		call	sub_67E03060
		mov	[esp+5Ch+var_58], edi
		mov	[esp+5Ch+VarName], ebx
		call	sub_67E0C960
		test	eax, eax
		jnz	short loc_67E0CB83

loc_67E0CB72:				; CODE XREF: sub_67E0CA90+115j
		mov	[esp+5Ch+VarName], ebx
		call	sub_67E02BF0
		add	esp, 50h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67E0CB83:				; CODE XREF: sub_67E0CA90+E0j
		mov	[esp+5Ch+VarName], esi
		call	sub_67E00CE0
		mov	[esp+5Ch+var_54], esi
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+VarName], ebx
		mov	[esp+5Ch+var_50], eax
		call	sub_67E036F0
		test	eax, eax
		jz	short loc_67E0CB72
		mov	[esp+5Ch+VarName], ebx
		call	sub_67E02BF0
		mov	eax, 1
		jmp	loc_67E0CB19
; ---------------------------------------------------------------------------
		align 10h

loc_67E0CBC0:				; CODE XREF: sub_67E0CA90+BCj
		mov	[esp+5Ch+var_58], eax ;	char *
		mov	[esp+5Ch+VarName], ebx ; int
		call	sub_67E08C10
		jmp	short loc_67E0CB4E
; ---------------------------------------------------------------------------
		align 10h

loc_67E0CBD0:				; CODE XREF: sub_67E0CA90+A3j
		mov	[esp+5Ch+var_58], eax ;	char *
		mov	[esp+5Ch+VarName], ebx ; int
		call	sub_67E08C10
		jmp	loc_67E0CB39
sub_67E0CA90	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67E0CBF0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0CBF0(SOCKET)
sub_67E0CBF0	proc near		; CODE XREF: sub_67DE8580+89p
					; sub_67DEE790+3DEp ...

s		= dword	ptr -3Ch
addr		= dword	ptr -38h
addrlen		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebp, ds:accept
		mov	esi, ds:_errno

loc_67E0CC03:				; CODE XREF: sub_67E0CBF0+47j
		mov	eax, [esp+3Ch+arg_0]
		mov	[esp+3Ch+addrlen], 0 ; addrlen
		mov	[esp+3Ch+addr],	0 ; addr
		mov	[esp+3Ch+s], eax ; s
		call	ebp ; accept
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jnz	short loc_67E0CC39
		call	ds:WSAGetLastError
		mov	edi, eax
		call	esi ; _errno
		mov	[eax], edi
		call	esi ; _errno
		cmp	dword ptr [eax], 4
		jz	short loc_67E0CC03

loc_67E0CC39:				; CODE XREF: sub_67E0CBF0+34j
		mov	dword ptr [esp+3Ch+var_2C], ebx	; char
		mov	[esp+3Ch+Format], offset aClientFdDAccep ; "client fd %d accepted\n"
		mov	[esp+3Ch+addrlen], offset a_dbus_accept	; "_dbus_accept"
		mov	[esp+3Ch+addr],	644h ; int
		mov	[esp+3Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 2Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E0CBF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0CC70(SOCKET, int)
sub_67E0CC70	proc near		; CODE XREF: sub_67DE8580+DEp
					; sub_67DEDF60+306p ...

s		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_2C		= byte ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ecx, [esp+3Ch+arg_4]
		mov	edi, [esp+3Ch+arg_0]
		test	ecx, ecx
		jz	loc_67E0CD30
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+s], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E0CD30

loc_67E0CC9D:				; CODE XREF: sub_67E0CC70+C5j
		mov	dword ptr [esp+3Ch+var_2C], offset a_dbus_close_so ; "_dbus_close_socket"
		mov	[esp+3Ch+Format], 12Eh
		mov	[esp+3Ch+var_34], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aErrorNullDb_25 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+3Ch+s], edx
		call	sub_67DFAE70
		mov	ebp, ds:closesocket
		mov	ebx, ds:_errno

loc_67E0CCD1:				; CODE XREF: sub_67E0CC70+80j
		mov	[esp+3Ch+s], edi ; s
		call	ebp ; closesocket
		sub	esp, 4
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_67E0CD40
		call	ds:WSAGetLastError
		mov	esi, eax
		call	ebx ; _errno
		mov	[eax], esi
		call	ebx ; _errno
		cmp	dword ptr [eax], 4
		nop
		jz	short loc_67E0CCD1
		call	sub_67E094E0
		mov	esi, eax
		call	ebx ; _errno
		mov	eax, [eax]
		mov	[esp+3Ch+s], eax
		call	sub_67E09380
		mov	dword ptr [esp+3Ch+var_2C], esi
		mov	[esp+3Ch+Format], edi ;	char
		mov	[esp+3Ch+var_34], offset aCouldNotCloseS ; "Could not close socket: socket=%d, , %s"
		mov	[esp+3Ch+var_38], eax ;	char *
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+s], eax ; int
		call	dbus_set_error
		add	esp, 2Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0CD30:				; CODE XREF: sub_67E0CC70+11j
					; sub_67E0CC70+27j
		mov	edx, 1
		jmp	loc_67E0CC9D
; ---------------------------------------------------------------------------
		align 10h

loc_67E0CD40:				; CODE XREF: sub_67E0CC70+6Cj
		mov	dword ptr [esp+3Ch+var_2C], edi	; char
		mov	[esp+3Ch+Format], offset a_dbus_close__0 ; "_dbus_close_socket:	socket=%d, \n"
		mov	[esp+3Ch+var_34], offset a_dbus_close_so ; "_dbus_close_socket"
		mov	[esp+3Ch+var_38], 13Dh ; int
		mov	[esp+3Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 2Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E0CC70	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_67E0CD80	proc near		; CODE XREF: sub_67DCF230+2D4p

Code		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+Code],	eax ; Code
		call	ds:_exit
sub_67E0CD80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame fpd=0AFCh

sub_67E0CD90	proc near		; CODE XREF: sub_67DF7020+15Fp
					; .text:67E12525p ...

Dest		= dword	ptr -0B48h
Format		= dword	ptr -0B44h
writefds	= dword	ptr -0B40h
exceptfds	= dword	ptr -0B3Ch
timeout		= dword	ptr -0B38h
var_B28		= dword	ptr -0B28h
var_B24		= dword	ptr -0B24h
var_B20		= dword	ptr -0B20h
var_B1C		= dword	ptr -0B1Ch
readfds		= dword	ptr -0B18h
var_B14		= dword	ptr -0B14h
var_B10		= dword	ptr -0B10h
var_B0C		= dword	ptr -0B0Ch
var_AFC		= byte ptr -0AFCh
var_AF8		= dword	ptr -0AF8h
var_32C		= dword	ptr -32Ch
var_328		= dword	ptr -328h
var_228		= dword	ptr -228h
var_224		= dword	ptr -224h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_20		= timeval ptr -20h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0B3Ch
		mov	eax, [esp+0B48h+arg_8]
		lea	edx, [esp+0B48h+var_AFC]
		mov	esi, [esp+0B48h+arg_0]
		lea	ebp, [esp+4Ch]
		mov	[esp+0B48h+var_124], 0
		mov	[esp+0B48h+var_228], 0
		mov	[esp+0B48h+var_32C], 0
		mov	[esp+0B48h+writefds], eax
		mov	[esp+0B48h+Format], offset aSelectToD ;	"select: to=%d\n\t"
		mov	[esp+0B48h+Dest], edx ;	Dest
		call	sprintf
		add	ebp, eax
		mov	eax, [esp+0B48h+arg_4]
		test	eax, eax
		jle	loc_67E0D379
		lea	ebx, [esp+0B48h+var_32C]
		xor	edi, edi
		mov	[esp+0B48h+var_B28], ebx
		mov	ebx, [esp+0B48h+arg_4]
		jmp	short loc_67E0CE3E
; ---------------------------------------------------------------------------
		align 10h

loc_67E0CE10:				; CODE XREF: sub_67E0CD90+B5j
		test	al, 4
		jnz	short loc_67E0CE69

loc_67E0CE14:				; CODE XREF: sub_67E0CD90+D7j
					; sub_67E0CD90+F2j
		mov	eax, [esi+edi*8]
		mov	[esp+0B48h+Dest], ebp ;	Dest
		mov	[esp+0B48h+Format], offset aED ; "E:%d\n\t"
		mov	[esp+0B48h+writefds], eax
		call	sprintf
		add	ebp, eax
		cmp	ebp, [esp+0B48h+var_B28]
		jnb	loc_67E0D413
		add	edi, 1
		cmp	ebx, edi
		jle	short loc_67E0CE84

loc_67E0CE3E:				; CODE XREF: sub_67E0CD90+7Aj
		movsx	eax, word ptr [esi+edi*8+4]
		test	al, 1
		jz	short loc_67E0CE10
		mov	eax, [esi+edi*8]
		mov	[esp+0B48h+Dest], ebp ;	Dest
		mov	[esp+0B48h+Format], offset aRD ; "R:%d "
		mov	[esp+0B48h+writefds], eax
		call	sprintf
		add	ebp, eax
		movsx	eax, word ptr [esi+edi*8+4]
		test	al, 4
		jz	short loc_67E0CE14

loc_67E0CE69:				; CODE XREF: sub_67E0CD90+82j
		mov	eax, [esi+edi*8]
		mov	[esp+0B48h+Dest], ebp ;	Dest
		mov	[esp+0B48h+Format], offset aWD ; "W:%d "
		mov	[esp+0B48h+writefds], eax
		call	sprintf
		add	ebp, eax
		jmp	short loc_67E0CE14
; ---------------------------------------------------------------------------

loc_67E0CE84:				; CODE XREF: sub_67E0CD90+ACj
		movzx	eax, ds:word_67E2D292
		lea	ecx, [esp+0B48h+var_AFC]
		mov	ebx, [esp+0B48h+var_B28]
		mov	word ptr [ebp+0AFCh+var_AFC], ax
		mov	[esp+0B48h+timeout], ecx ; char
		mov	[esp+0B48h+exceptfds], offset byte_67E2CADC ; Format
		mov	[esp+0B48h+writefds], offset a_dbus_poll ; "_dbus_poll"
		mov	[esp+0B48h+Format], 460h ; int
		mov	[esp+0B48h+Dest], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+0B48h+var_32C]
		lea	edx, [esp+0B48h+var_124]
		mov	ebp, [esp+0B48h+var_124]
		lea	ecx, [esp+0B48h+var_228]
		mov	[esp+0B48h+var_B20], esi
		mov	[esp+0B48h+var_B28], 0
		mov	[esp+0B48h+var_B0C], eax
		mov	eax, [esp+0B48h+var_228]
		mov	edi, [esp+0B48h+var_B0C]
		mov	[esp+0B48h+var_B1C], 0
		mov	[esp+0B48h+readfds], edx
		mov	[esp+0B48h+var_B14], ecx
		mov	esi, eax

loc_67E0CF08:				; CODE XREF: sub_67E0CD90+21Ej
		mov	eax, [esp+0B48h+var_B28]
		mov	edx, [esp+0B48h+var_B20]
		movsx	eax, word ptr [edx+eax*8+4]
		test	al, 1
		mov	[esp+0B48h+var_B24], eax
		jnz	loc_67E0CFD0
		mov	eax, [esp+0B48h+var_B28]
		mov	ecx, [edx+eax*8]
		mov	edx, ebp

loc_67E0CF2A:				; CODE XREF: sub_67E0CD90+287j
					; sub_67E0CD90+2A0j ...
		test	byte ptr [esp+0B48h+var_B24], 4
		jz	short loc_67E0CF66
		test	esi, esi
		jz	loc_67E0D03E
		xor	eax, eax
		cmp	[esp+0B48h+var_224], ecx
		jz	short loc_67E0CF66
		mov	ebp, [esp+0B48h+var_B14]
		jmp	short loc_67E0CF56
; ---------------------------------------------------------------------------
		align 10h

loc_67E0CF50:				; CODE XREF: sub_67E0CD90+1CBj
		cmp	[ebp+eax*4+0AFCh+var_AF8], ecx
		jz	short loc_67E0CF5D

loc_67E0CF56:				; CODE XREF: sub_67E0CD90+1B8j
		add	eax, 1
		cmp	esi, eax
		ja	short loc_67E0CF50

loc_67E0CF5D:				; CODE XREF: sub_67E0CD90+1C4j
		cmp	esi, eax
		nop
		jz	loc_67E0D035

loc_67E0CF66:				; CODE XREF: sub_67E0CD90+19Fj
					; sub_67E0CD90+1B2j ...
		test	edi, edi
		jz	short loc_67E0CFB8
		xor	eax, eax
		cmp	[esp+0B48h+var_328], ecx
		jnz	short loc_67E0CF7D
		jmp	short loc_67E0CF88
; ---------------------------------------------------------------------------

loc_67E0CF77:				; CODE XREF: sub_67E0CD90+1F2j
		cmp	[ebx+eax*4+4], ecx
		jz	short loc_67E0CF84

loc_67E0CF7D:				; CODE XREF: sub_67E0CD90+1E3j
		add	eax, 1
		cmp	eax, edi
		jb	short loc_67E0CF77

loc_67E0CF84:				; CODE XREF: sub_67E0CD90+1EBj
		cmp	eax, edi
		jz	short loc_67E0CFB3

loc_67E0CF88:				; CODE XREF: sub_67E0CD90+1E5j
		mov	eax, edi

loc_67E0CF8A:				; CODE XREF: sub_67E0CD90+226j
					; sub_67E0CD90+238j
		cmp	[esp+0B48h+var_B1C], ecx
		jge	short loc_67E0CF94
		mov	[esp+0B48h+var_B1C], ecx

loc_67E0CF94:				; CODE XREF: sub_67E0CD90+1FEj
		add	[esp+0B48h+var_B28], 1
		mov	ecx, [esp+0B48h+arg_4]
		cmp	[esp+0B48h+var_B28], ecx
		jz	loc_67E0D04D
		mov	ebp, edx
		mov	edi, eax
		jmp	loc_67E0CF08
; ---------------------------------------------------------------------------

loc_67E0CFB3:				; CODE XREF: sub_67E0CD90+1F6j
		cmp	eax, 3Fh
		ja	short loc_67E0CF8A

loc_67E0CFB8:				; CODE XREF: sub_67E0CD90+1D8j
		add	[esp+0B48h+var_B0C], 1
		mov	eax, [esp+0B48h+var_B0C]
		mov	[esp+edi*4+0B48h+var_328], ecx
		jmp	short loc_67E0CF8A
; ---------------------------------------------------------------------------
		align 10h

loc_67E0CFD0:				; CODE XREF: sub_67E0CD90+18Bj
		test	ebp, ebp
		jz	loc_67E0D21C
		mov	edx, [esp+0B48h+var_B28]
		mov	ecx, [esp+0B48h+var_B20]
		mov	eax, [ecx+edx*8]
		xor	edx, edx
		cmp	[esp+0B48h+var_120], eax
		mov	ecx, eax
		jz	short loc_67E0D015
		mov	[esp+0B48h+var_B10], edi
		mov	edi, [esp+0B48h+readfds]
		jmp	short loc_67E0D006
; ---------------------------------------------------------------------------
		align 10h

loc_67E0D000:				; CODE XREF: sub_67E0CD90+27Bj
		cmp	[edi+edx*4+4], eax
		jz	short loc_67E0D00D

loc_67E0D006:				; CODE XREF: sub_67E0CD90+268j
		add	edx, 1
		cmp	edx, ebp
		jb	short loc_67E0D000

loc_67E0D00D:				; CODE XREF: sub_67E0CD90+274j
		cmp	edx, ebp
		mov	edi, [esp+0B48h+var_B10]
		jz	short loc_67E0D020

loc_67E0D015:				; CODE XREF: sub_67E0CD90+25Ej
		mov	edx, ebp
		jmp	loc_67E0CF2A
; ---------------------------------------------------------------------------
		align 10h

loc_67E0D020:				; CODE XREF: sub_67E0CD90+283j
		cmp	edx, 3Fh
		jbe	loc_67E0D227
		mov	ecx, eax
		nop
		lea	esi, [esi+0]
		jmp	loc_67E0CF2A
; ---------------------------------------------------------------------------

loc_67E0D035:				; CODE XREF: sub_67E0CD90+1D0j
		cmp	esi, 3Fh
		ja	loc_67E0CF66

loc_67E0D03E:				; CODE XREF: sub_67E0CD90+1A3j
		mov	[esp+esi*4+0B48h+var_224], ecx
		add	esi, 1
		jmp	loc_67E0CF66
; ---------------------------------------------------------------------------

loc_67E0D04D:				; CODE XREF: sub_67E0CD90+214j
		mov	eax, esi
		mov	ecx, [esp+0B48h+var_B1C]
		mov	[esp+0B48h+var_228], eax
		mov	eax, [esp+0B48h+var_B0C]
		mov	esi, [esp+0B48h+var_B20]
		mov	[esp+0B48h+var_124], edx
		add	ecx, 1
		mov	[esp+0B48h+var_32C], eax

loc_67E0D073:				; CODE XREF: sub_67E0CD90+642j
		mov	ebp, [esp+0B48h+arg_8]
		test	ebp, ebp
		js	loc_67E0D334
		mov	eax, [esp+0B48h+arg_8]
		mov	edx, 10624DD3h
		imul	edx
		mov	eax, [esp+0B48h+arg_8]
		sar	edx, 6
		sar	eax, 1Fh
		sub	edx, eax
		mov	eax, [esp+0B48h+arg_8]
		mov	[esp+0B48h+var_20.tv_sec], edx
		imul	edx, 3E8h
		sub	eax, edx
		imul	eax, 3E8h

loc_67E0D0BB:				; CODE XREF: sub_67E0CD90+5B1j
		mov	[esp+0B48h+var_20.tv_usec], eax
		lea	eax, [esp+0B48h+var_20]
		mov	edx, [esp+0B48h+var_B14]
		mov	[esp+0B48h+timeout], eax ; char
		mov	eax, [esp+0B48h+readfds]
		mov	[esp+0B48h+exceptfds], ebx ; exceptfds
		mov	[esp+0B48h+Dest], ecx ;	nfds
		mov	[esp+0B48h+writefds], edx ; writefds
		mov	[esp+0B48h+Format], eax	; readfds
		call	ds:select
		sub	esp, 14h
		cmp	eax, 0FFFFFFFFh
		mov	[esp+0B48h+var_B28], eax
		jz	loc_67E0D1BD
		cmp	[esp+0B48h+var_B28], 0
		jz	loc_67E0D346
		jle	loc_67E0D20D
		mov	edx, [esp+0B48h+var_B28]
		lea	ecx, [esp+0B48h+var_AFC]
		mov	[esp+0B48h+Format], offset aSelectD ; "select: = %d:\n\t"
		lea	ebp, [esp+4Ch]
		mov	[esp+0B48h+Dest], ecx ;	Dest
		mov	[esp+0B48h+writefds], edx
		call	sprintf
		mov	edi, [esp+0B48h+arg_4]
		add	ebp, eax
		test	edi, edi
		jle	loc_67E0D3D7
		xor	edi, edi
		jmp	short loc_67E0D188
; ---------------------------------------------------------------------------

loc_67E0D140:				; CODE XREF: sub_67E0CD90+410j
					; sub_67E0CD90+42Bj
		mov	edx, [esp+0B48h+var_B14]
		mov	[esp+0B48h+Format], edx	; fd_set *
		mov	eax, [esi+edi*8]
		mov	[esp+0B48h+Dest], eax ;	fd
		call	__WSAFDIsSet
		sub	esp, 8
		test	eax, eax
		jnz	loc_67E0D316

loc_67E0D15E:				; CODE XREF: sub_67E0CD90+59Fj
		mov	[esp+0B48h+Format], ebx	; fd_set *
		mov	eax, [esi+edi*8]
		mov	[esp+0B48h+Dest], eax ;	fd
		call	__WSAFDIsSet
		sub	esp, 8
		test	eax, eax
		jnz	loc_67E0D236
		add	edi, 1
		cmp	[esp+0B48h+arg_4], edi
		jle	loc_67E0D25F

loc_67E0D188:				; CODE XREF: sub_67E0CD90+3AEj
					; sub_67E0CD90+4C9j
		mov	eax, [esp+0B48h+readfds]
		mov	[esp+0B48h+Format], eax	; fd_set *
		mov	eax, [esi+edi*8]
		mov	[esp+0B48h+Dest], eax ;	fd
		call	__WSAFDIsSet
		sub	esp, 8
		test	eax, eax
		jz	short loc_67E0D140
		mov	eax, [esi+edi*8]
		mov	[esp+0B48h+Dest], ebp ;	Dest
		mov	[esp+0B48h+Format], offset aRD ; "R:%d "
		mov	[esp+0B48h+writefds], eax
		call	sprintf
		add	ebp, eax
		jmp	short loc_67E0D140
; ---------------------------------------------------------------------------

loc_67E0D1BD:				; CODE XREF: sub_67E0CD90+364j
		call	ds:WSAGetLastError
		mov	ebx, ds:_errno
		mov	esi, eax
		call	ebx ; _errno
		mov	[eax], esi
		call	ebx ; _errno
		cmp	dword ptr [eax], 2733h
		jz	short loc_67E0D20D
		lea	esi, [esi+0]
		call	sub_67E094E0
		mov	[esp+0B48h+exceptfds], offset aSelectFailedS ; "select:	failed:	%s\n"
		mov	[esp+0B48h+writefds], offset a_dbus_poll ; "_dbus_poll"
		mov	[esp+0B48h+Format], 47Bh ; int
		mov	[esp+0B48h+Dest], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0B48h+timeout], eax ; char
		call	sub_67DFABC0

loc_67E0D20D:				; CODE XREF: sub_67E0CD90+375j
					; sub_67E0CD90+447j ...
		mov	eax, [esp+0B48h+var_B28]
		add	esp, 0B3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0D21C:				; CODE XREF: sub_67E0CD90+242j
		mov	edx, [esp+0B48h+var_B28]
		mov	eax, [esp+0B48h+var_B20]
		mov	ecx, [eax+edx*8]

loc_67E0D227:				; CODE XREF: sub_67E0CD90+293j
		mov	[esp+ebp*4+0B48h+var_120], ecx
		lea	edx, [ebp+0AFCh+var_AFC+1]
		jmp	loc_67E0CF2A
; ---------------------------------------------------------------------------

loc_67E0D236:				; CODE XREF: sub_67E0CD90+3E2j
		mov	eax, [esi+edi*8]
		add	edi, 1
		mov	[esp+0B48h+Dest], ebp ;	Dest
		mov	[esp+0B48h+Format], offset aED ; "E:%d\n\t"
		mov	[esp+0B48h+writefds], eax
		call	sprintf
		add	ebp, eax
		cmp	[esp+0B48h+arg_4], edi
		jg	loc_67E0D188

loc_67E0D25F:				; CODE XREF: sub_67E0CD90+3F2j
		movzx	eax, ds:word_67E2D292
		lea	ecx, [esp+0B48h+var_AFC]
		xor	edi, edi
		mov	word ptr [ebp+0AFCh+var_AFC], ax
		mov	[esp+0B48h+timeout], ecx ; char
		mov	[esp+0B48h+exceptfds], offset byte_67E2CADC ; Format
		mov	[esp+0B48h+writefds], offset a_dbus_poll ; "_dbus_poll"
		mov	[esp+0B48h+Format], 494h ; int
		mov	[esp+0B48h+Dest], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	ebp, [esp+0B48h+var_B14]
		lea	esi, [esi+0]

loc_67E0D2A0:				; CODE XREF: sub_67E0CD90+575j
		mov	eax, [esp+0B48h+readfds]
		mov	word ptr [esi+6], 0
		mov	[esp+0B48h+Format], eax	; fd_set *
		mov	eax, [esi]
		mov	[esp+0B48h+Dest], eax ;	fd
		call	__WSAFDIsSet
		sub	esp, 8
		test	eax, eax
		jz	short loc_67E0D2C4
		or	word ptr [esi+6], 1

loc_67E0D2C4:				; CODE XREF: sub_67E0CD90+52Dj
		mov	[esp+0B48h+Format], ebp	; fd_set *
		mov	eax, [esi]
		mov	[esp+0B48h+Dest], eax ;	fd
		call	__WSAFDIsSet
		sub	esp, 8
		test	eax, eax
		jz	short loc_67E0D2DE
		or	word ptr [esi+6], 4

loc_67E0D2DE:				; CODE XREF: sub_67E0CD90+547j
		mov	[esp+0B48h+Format], ebx	; fd_set *
		mov	eax, [esi]
		mov	[esp+0B48h+Dest], eax ;	fd
		call	__WSAFDIsSet
		sub	esp, 8
		test	eax, eax
		jz	short loc_67E0D2F8
		or	word ptr [esi+6], 8

loc_67E0D2F8:				; CODE XREF: sub_67E0CD90+561j
		add	edi, 1
		add	esi, 8
		cmp	[esp+0B48h+arg_4], edi
		jg	short loc_67E0D2A0
		mov	eax, [esp+0B48h+var_B28]
		add	esp, 0B3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0D316:				; CODE XREF: sub_67E0CD90+3C8j
		mov	eax, [esi+edi*8]
		mov	[esp+0B48h+Dest], ebp ;	Dest
		mov	[esp+0B48h+Format], offset aWD ; "W:%d "
		mov	[esp+0B48h+writefds], eax
		call	sprintf
		add	ebp, eax
		jmp	loc_67E0D15E
; ---------------------------------------------------------------------------

loc_67E0D334:				; CODE XREF: sub_67E0CD90+2ECj
		mov	[esp+0B48h+var_20.tv_sec], 1
		xor	eax, eax
		jmp	loc_67E0D0BB
; ---------------------------------------------------------------------------

loc_67E0D346:				; CODE XREF: sub_67E0CD90+36Fj
		mov	[esp+0B48h+exceptfds], offset aSelect0 ; "select: = 0\n"
		mov	[esp+0B48h+writefds], offset a_dbus_poll ; "_dbus_poll"
		mov	[esp+0B48h+Format], 47Eh ; int
		mov	[esp+0B48h+Dest], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+0B48h+var_B28]
		add	esp, 0B3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0D379:				; CODE XREF: sub_67E0CD90+60j
		movzx	eax, ds:word_67E2D292
		lea	edx, [esp+0B48h+var_AFC]
		lea	ebx, [esp+0B48h+var_32C]
		mov	word ptr [ebp+0AFCh+var_AFC], ax
		mov	[esp+0B48h+timeout], edx ; char
		mov	[esp+0B48h+exceptfds], offset byte_67E2CADC ; Format
		mov	[esp+0B48h+writefds], offset a_dbus_poll ; "_dbus_poll"
		mov	[esp+0B48h+Format], 460h ; int
		mov	[esp+0B48h+Dest], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	eax, [esp+0B48h+var_124]
		mov	ecx, 1
		lea	edx, [esp+0B48h+var_228]
		mov	[esp+0B48h+readfds], eax
		mov	[esp+0B48h+var_B14], edx
		jmp	loc_67E0D073
; ---------------------------------------------------------------------------

loc_67E0D3D7:				; CODE XREF: sub_67E0CD90+3A6j
		movzx	eax, ds:word_67E2D292
		lea	ecx, [esp+0B48h+var_AFC]
		mov	word ptr [ebp+0AFCh+var_AFC], ax
		mov	[esp+0B48h+timeout], ecx ; char
		mov	[esp+0B48h+exceptfds], offset byte_67E2CADC ; Format
		mov	[esp+0B48h+writefds], offset a_dbus_poll ; "_dbus_poll"
		mov	[esp+0B48h+Format], 494h ; int
		mov	[esp+0B48h+Dest], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67E0D20D
; ---------------------------------------------------------------------------

loc_67E0D413:				; CODE XREF: sub_67E0CD90+A1j
		mov	[esp+0B48h+writefds], 45Bh
		mov	[esp+0B48h+Format], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0B48h+Dest], offset aBufferOverflow ; "buffer overflow in _dbus_poll"
		call	sub_67DFAE30
sub_67E0CD90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0D430(SOCKET, int)
sub_67E0D430	proc near		; CODE XREF: sub_67DEE790+1CDp
					; sub_67E0E8E0+69Bp ...

s		= dword	ptr -4Ch
cmd		= dword	ptr -48h
argp		= dword	ptr -44h
var_40		= byte ptr -40h
var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_C], esi
		mov	esi, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_8], edi
		mov	[esp+4Ch+var_4], ebp
		test	ebx, ebx
		mov	[esp+4Ch+var_20], 1
		jz	short loc_67E0D4D0
		mov	[esp+4Ch+s], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67E0D4D0

loc_67E0D465:				; CODE XREF: sub_67E0D430+A5j
		mov	[esp+4Ch+s], edx
		mov	[esp+4Ch+var_3C], offset a_dbus_set_fd_n ; "_dbus_set_fd_nonblocking"
		mov	dword ptr [esp+4Ch+var_40], 161h
		mov	[esp+4Ch+argp],	offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+cmd], offset aErrorNullDb_25 ;	"(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		lea	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+argp],	eax ; argp
		mov	[esp+4Ch+cmd], 8004667Eh ; cmd
		mov	[esp+4Ch+s], esi ; s
		call	ds:ioctlsocket
		mov	edx, eax
		sub	esp, 0Ch
		cmp	edx, 0FFFFFFFFh
		mov	eax, 1
		jz	short loc_67E0D4D7

loc_67E0D4B5:				; CODE XREF: sub_67E0D430+EAj
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0D4D0:				; CODE XREF: sub_67E0D430+25j
					; sub_67E0D430+33j
		mov	edx, 1
		jmp	short loc_67E0D465
; ---------------------------------------------------------------------------

loc_67E0D4D7:				; CODE XREF: sub_67E0D430+83j
		call	ds:WSAGetLastError
		mov	edi, ds:_errno
		mov	ebp, eax
		call	edi ; _errno
		mov	[eax], ebp
		call	sub_67E094E0
		mov	ebp, eax
		call	edi ; _errno
		mov	eax, [eax]
		mov	[esp+4Ch+s], eax
		call	sub_67E09380
		mov	[esp+4Ch+var_3C], ebp
		mov	dword ptr [esp+4Ch+var_40], esi	; char
		mov	[esp+4Ch+argp],	offset aFailedToSetSoc ; "Failed to set	socket %d:%d to	nonblocki"...
		mov	[esp+4Ch+s], ebx ; int
		mov	[esp+4Ch+cmd], eax ; char *
		call	dbus_set_error
		xor	eax, eax
		jmp	short loc_67E0D4B5
sub_67E0D430	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 5Ch
		mov	[esp+4Ch], ebx
		mov	ebx, [esp+64h]
		lea	eax, [esp+34h]
		mov	[esp+54h], edi
		lea	edi, [esp+3Ch]
		mov	[esp+58h], ebp
		lea	ebp, [esp+38h]
		mov	[esp+50h], esi
		mov	dword ptr [ebx], 0
		mov	[esp+18h], eax
		mov	eax, [esp+60h]
		mov	dword ptr [esp+3Ch], 0
		mov	dword ptr [esp+38h], 0
		mov	[esp+14h], ebp
		mov	[esp+4], eax
		mov	eax, ds:LookupAccountNameW
		mov	dword ptr [esp+10h], 0
		mov	[esp+0Ch], edi
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp], 0
		mov	[esp+2Ch], eax
		call	eax ; LookupAccountNameW
		sub	esp, 1Ch
		test	eax, eax
		jnz	short loc_67E0D5A7
		mov	esi, ds:GetLastError
		call	esi ; GetLastError
		cmp	eax, 7Ah
		jnz	loc_67E0D670

loc_67E0D5A7:				; CODE XREF: .text:67E0D594j
		mov	eax, [esp+3Ch]
		mov	[esp], eax
		call	dbus_malloc
		test	eax, eax
		mov	[ebx], eax
		jz	loc_67E0D6E4
		mov	eax, [esp+38h]
		add	eax, eax
		mov	[esp], eax
		call	dbus_malloc
		test	eax, eax
		mov	esi, eax
		jz	loc_67E0D686
		lea	eax, [esp+34h]
		mov	[esp+18h], eax
		mov	[esp+14h], ebp
		mov	[esp+10h], esi
		mov	[esp+0Ch], edi
		mov	eax, [ebx]
		mov	dword ptr [esp], 0
		mov	[esp+8], eax
		mov	eax, [esp+60h]
		mov	[esp+4], eax
		call	dword ptr [esp+2Ch]
		sub	esp, 1Ch
		test	eax, eax
		jz	short loc_67E0D650
		mov	eax, [ebx]
		mov	edi, 1
		mov	[esp], eax
		call	ds:IsValidSid
		sub	esp, 4
		test	eax, eax
		jz	loc_67E0D6C0

loc_67E0D624:				; CODE XREF: .text:67E0D668j
					; .text:67E0D6DFj
		mov	[esp], esi
		call	dbus_free
		test	edi, edi
		mov	eax, 1
		jz	short loc_67E0D6A3

loc_67E0D635:				; CODE XREF: .text:67E0D684j
					; .text:67E0D6B5j ...
		mov	ebx, [esp+4Ch]
		mov	esi, [esp+50h]
		mov	edi, [esp+54h]
		mov	ebp, [esp+58h]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0D650:				; CODE XREF: .text:67E0D607j
		call	ds:GetLastError
		xor	edi, edi
		mov	[esp+4], eax
		mov	eax, [esp+68h]
		mov	[esp], eax
		call	sub_67E0ADC0
		jmp	short loc_67E0D624
; ---------------------------------------------------------------------------
		align 10h

loc_67E0D670:				; CODE XREF: .text:67E0D5A1j
		call	esi ; GetLastError
		mov	[esp+4], eax
		mov	eax, [esp+68h]
		mov	[esp], eax
		call	sub_67E0ADC0
		xor	eax, eax
		jmp	short loc_67E0D635
; ---------------------------------------------------------------------------

loc_67E0D686:				; CODE XREF: .text:67E0D5CFj
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_44 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	eax, [esp+68h]
		mov	[esp], eax
		call	dbus_set_error_const

loc_67E0D6A3:				; CODE XREF: .text:67E0D633j
		mov	eax, [ebx]
		mov	[esp], eax
		call	dbus_free
		xor	eax, eax
		mov	dword ptr [ebx], 0
		jmp	loc_67E0D635
; ---------------------------------------------------------------------------
		align 10h

loc_67E0D6C0:				; CODE XREF: .text:67E0D61Ej
		mov	eax, [esp+68h]
		xor	di, di
		mov	dword ptr [esp+8], offset aInvalidSid ;	"Invalid SID"
		mov	dword ptr [esp+4], offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp], eax
		call	dbus_set_error_const
		jmp	loc_67E0D624
; ---------------------------------------------------------------------------

loc_67E0D6E4:				; CODE XREF: .text:67E0D5B7j
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_44 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	eax, [esp+68h]
		mov	[esp], eax
		call	dbus_set_error_const
		xor	eax, eax
		jmp	loc_67E0D635
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 3Ch
		mov	[esp+38h], ebp
		mov	ebp, [esp+40h]
		mov	[esp+34h], edi
		mov	edi, ds:WideCharToMultiByte
		mov	[esp+2Ch], ebx
		mov	[esp+30h], esi
		mov	dword ptr [esp+1Ch], 0
		mov	dword ptr [esp+18h], 0
		mov	dword ptr [esp+14h], 0
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	[esp+8], ebp
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 0FDE9h
		call	edi ; WideCharToMultiByte
		sub	esp, 20h
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67E0D7D7
		mov	[esp], eax
		call	dbus_malloc
		test	eax, eax
		mov	esi, eax
		jz	loc_67E0D820
		mov	dword ptr [esp+1Ch], 0
		mov	dword ptr [esp+18h], 0
		mov	[esp+14h], ebx
		mov	[esp+10h], eax
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	[esp+8], ebp
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 0FDE9h
		call	edi ; WideCharToMultiByte
		sub	esp, 20h
		cmp	ebx, eax
		jnz	short loc_67E0D7F1

loc_67E0D7C1:				; CODE XREF: .text:67E0D7EFj
					; .text:67E0D817j ...
		mov	eax, esi
		mov	ebx, [esp+2Ch]
		mov	esi, [esp+30h]
		mov	edi, [esp+34h]
		mov	ebp, [esp+38h]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67E0D7D7:				; CODE XREF: .text:67E0D771j
		call	ds:GetLastError
		xor	esi, esi
		mov	[esp+4], eax
		mov	eax, [esp+44h]
		mov	[esp], eax
		call	sub_67E0ADC0
		jmp	short loc_67E0D7C1
; ---------------------------------------------------------------------------

loc_67E0D7F1:				; CODE XREF: .text:67E0D7BFj
		mov	[esp], esi
		xor	esi, esi
		call	dbus_free
		mov	eax, [esp+44h]
		mov	dword ptr [esp+8], offset aWidechartomult ; "WideCharToMultiByte inconsistency"
		mov	dword ptr [esp+4], offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp], eax
		call	dbus_set_error_const
		jmp	short loc_67E0D7C1
; ---------------------------------------------------------------------------
		align 10h

loc_67E0D820:				; CODE XREF: .text:67E0D77Fj
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_44 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	eax, [esp+44h]
		mov	[esp], eax
		call	dbus_set_error_const
		jmp	short loc_67E0D7C1
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 6Ch
		mov	[esp+64h], edi
		mov	edi, [esp+70h]
		mov	[esp+5Ch], ebx
		lea	ebx, [esp+3Ch]
		mov	[esp+68h], ebp
		mov	ebp, [esp+74h]
		mov	[esp+60h], esi
		mov	[esp+4], edi
		mov	[esp], ebx
		call	sub_67E03060
		mov	[esp], ebx
		call	sub_67E00CE0
		mov	dword ptr [esp+4], 0
		mov	[esp], ebx
		mov	[esp+8], eax
		call	sub_67E02000
		test	eax, eax
		jz	loc_67E0D927
		mov	eax, ds:MultiByteToWideChar
		mov	dword ptr [esp+14h], 0
		mov	dword ptr [esp+10h], 0
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	[esp+8], edi
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 0FDE9h
		mov	[esp+2Ch], eax
		call	eax ; MultiByteToWideChar
		sub	esp, 18h
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67E0D943
		lea	eax, [eax+eax]
		mov	[esp], eax
		call	dbus_malloc
		test	eax, eax
		mov	esi, eax
		jz	loc_67E0D984
		mov	[esp+14h], ebx
		mov	[esp+10h], eax
		mov	dword ptr [esp+0Ch], 0FFFFFFFFh
		mov	[esp+8], edi
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 0FDE9h
		call	dword ptr [esp+2Ch]
		sub	esp, 18h
		cmp	ebx, eax
		jnz	short loc_67E0D960

loc_67E0D911:				; CODE XREF: .text:67E0D941j
					; .text:67E0D957j ...
		mov	eax, esi
		mov	ebx, [esp+5Ch]
		mov	esi, [esp+60h]
		mov	edi, [esp+64h]
		mov	ebp, [esp+68h]
		add	esp, 6Ch
		retn
; ---------------------------------------------------------------------------

loc_67E0D927:				; CODE XREF: .text:67E0D889j
		mov	dword ptr [esp+8], offset aInvalidUtf8 ; "Invalid UTF-8"
		xor	esi, esi
		mov	dword ptr [esp+4], offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp], ebp
		call	dbus_set_error_const
		jmp	short loc_67E0D911
; ---------------------------------------------------------------------------

loc_67E0D943:				; CODE XREF: .text:67E0D8CCj
		call	ds:GetLastError
		xor	esi, esi
		mov	[esp], ebp
		mov	[esp+4], eax
		call	sub_67E0ADC0
		jmp	short loc_67E0D911
; ---------------------------------------------------------------------------
		align 10h

loc_67E0D960:				; CODE XREF: .text:67E0D90Fj
		mov	[esp], esi
		xor	esi, esi
		call	dbus_free
		mov	dword ptr [esp+8], offset aMultibytetowid ; "MultiByteToWideChar inconsistency"
		mov	dword ptr [esp+4], offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp], ebp
		call	dbus_set_error_const
		jmp	short loc_67E0D911
; ---------------------------------------------------------------------------

loc_67E0D984:				; CODE XREF: .text:67E0D8DDj
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_44 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp], ebp
		mov	[esp+8], eax
		call	dbus_set_error_const
		jmp	loc_67E0D911
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0D9B0(char	*, va_list)
sub_67E0D9B0	proc near		; CODE XREF: sub_67E08E70+1DFp

DstBuf		= dword	ptr -43Ch
MaxCount	= dword	ptr -438h
Format		= dword	ptr -434h
ArgList		= dword	ptr -430h
var_428		= dword	ptr -428h
var_424		= dword	ptr -424h
var_420		= dword	ptr -420h
var_41C		= byte ptr -41Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 42Ch
		lea	eax, [esp+43Ch+var_41C]
		mov	edi, [esp+43Ch+arg_0]
		mov	ebp, [esp+43Ch+arg_4]
		mov	[esp+43Ch+DstBuf], eax ; DstBuf
		mov	eax, ds:__imp__vsnprintf
		mov	[esp+43Ch+MaxCount], 3FFh ; MaxCount
		mov	[esp+43Ch+Format], edi ; Format
		mov	[esp+43Ch+ArgList], ebp	; ArgList
		mov	[esp+43Ch+var_424], eax
		call	eax ; __imp__vsnprintf
		cmp	eax, 0FFFFFFFFh
		mov	[esp+43Ch+var_420], eax
		jnz	short loc_67E0DA3B
		mov	ebx, 400h
		jmp	short loc_67E0DA2B
; ---------------------------------------------------------------------------
		align 10h

loc_67E0DA00:				; CODE XREF: sub_67E0D9B0+89j
		lea	eax, [ebx-1]
		mov	[esp+43Ch+ArgList], ebp
		mov	[esp+43Ch+Format], edi
		mov	[esp+43Ch+MaxCount], eax
		mov	[esp+43Ch+DstBuf], esi
		call	[esp+43Ch+var_424]
		mov	[esp+43Ch+DstBuf], esi ; Memory
		mov	[esp+43Ch+var_428], eax
		call	free
		mov	eax, [esp+43Ch+var_428]
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_67E0DA3F

loc_67E0DA2B:				; CODE XREF: sub_67E0D9B0+48j
		add	ebx, ebx
		mov	[esp+43Ch+DstBuf], ebx ; Size
		call	malloc
		test	eax, eax
		mov	esi, eax
		jnz	short loc_67E0DA00

loc_67E0DA3B:				; CODE XREF: sub_67E0D9B0+41j
		mov	eax, [esp+43Ch+var_420]

loc_67E0DA3F:				; CODE XREF: sub_67E0D9B0+79j
		add	esp, 42Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E0D9B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0DA50	proc near		; CODE XREF: sub_67E0DAE0+Bp

wVersionRequested= word	ptr -1ACh
lpWSAData	= dword	ptr -1A8h
var_1A4		= dword	ptr -1A4h
WSAData		= WSAData ptr -19Ch

		sub	esp, 1ACh
		mov	edx, ds:dword_67E3498C
		test	edx, edx
		jz	short loc_67E0DA67
		add	esp, 1ACh
		retn
; ---------------------------------------------------------------------------

loc_67E0DA67:				; CODE XREF: sub_67E0DA50+Ej
		lea	eax, [esp+1ACh+WSAData]
		mov	[esp+1ACh+lpWSAData], eax ; lpWSAData
		mov	dword ptr [esp+1ACh+wVersionRequested],	2 ; wVersionRequested
		call	ds:WSAStartup
		sub	esp, 8
		test	eax, eax
		jnz	short loc_67E0DAC1
		movzx	eax, [esp+1ACh+WSAData.wVersion]
		cmp	al, 2
		jnz	short loc_67E0DAA5
		shr	ax, 8
		test	al, al
		jnz	short loc_67E0DAA5
		mov	ds:dword_67E3498C, 1
		add	esp, 1ACh
		retn
; ---------------------------------------------------------------------------

loc_67E0DAA5:				; CODE XREF: sub_67E0DA50+3Aj
					; sub_67E0DA50+42j
		mov	[esp+1ACh+var_1A4], 1FEh
		mov	[esp+1ACh+lpWSAData], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+1ACh+wVersionRequested],	offset aNoUsableWinsoc ; "No usable WinSock found"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67E0DAC1:				; CODE XREF: sub_67E0DA50+31j
		mov	[esp+1ACh+var_1A4], 1F2h
		mov	[esp+1ACh+lpWSAData], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+1ACh+wVersionRequested],	offset aCouldNotInitia ; "Could	not initialize WinSock"
		call	sub_67DFAE30
sub_67E0DA50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0DAE0	proc near		; CODE XREF: .text:67E144A2p

hostlong	= dword	ptr -6Ch
type		= dword	ptr -68h
protocol	= dword	ptr -64h
Format		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
name		= sockaddr ptr -34h
argp		= dword	ptr -24h
namelen		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	esi, [esp+6Ch+arg_0]
		call	sub_67E0DA50
		mov	edi, ds:socket
		mov	[esp+6Ch+protocol], 0 ;	protocol
		mov	[esp+6Ch+type],	1 ; type
		mov	[esp+6Ch+hostlong], 2 ;	af
		call	edi ; socket
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jz	loc_67E0DCF0
		lea	ebp, [esp+6Ch+name]
		mov	dword ptr [esp+6Ch+name.sa_data+2], 0
		mov	dword ptr [esp+6Ch+name.sa_data+6], 0
		mov	dword ptr [esp+6Ch+name.sa_data+0Ah], 0
		mov	[esp+6Ch+name.sa_family], 2
		mov	word ptr [esp+6Ch+name.sa_data], 0
		mov	[esp+6Ch+hostlong], 7F000001h ;	hostlong
		call	ds:htonl
		sub	esp, 4
		mov	dword ptr [esp+6Ch+name.sa_data+2], eax
		mov	[esp+6Ch+protocol], 10h	; namelen
		mov	[esp+6Ch+type],	ebp ; name
		mov	[esp+6Ch+hostlong], ebx	; s
		call	ds:bind
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E0DCF0
		mov	[esp+6Ch+type],	1 ; backlog
		mov	[esp+6Ch+hostlong], ebx	; s
		call	ds:listen
		sub	esp, 8
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E0DCF0
		lea	eax, [esp+6Ch+namelen]
		mov	[esp+6Ch+namelen], 10h
		mov	[esp+6Ch+protocol], eax	; namelen
		mov	[esp+6Ch+type],	ebp ; name
		mov	[esp+6Ch+hostlong], ebx	; s
		call	ds:getsockname
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E0DCF0
		mov	[esp+6Ch+protocol], 0 ;	protocol
		mov	[esp+6Ch+type],	1 ; type
		mov	[esp+6Ch+hostlong], 2 ;	af
		call	edi ; socket
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	edi, eax
		jz	loc_67E0DCF0
		mov	eax, [esp+6Ch+namelen]
		mov	[esp+6Ch+type],	ebp ; name
		mov	[esp+6Ch+hostlong], edi	; s
		mov	[esp+6Ch+protocol], eax	; namelen
		call	ds:connect
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E0DD50
		lea	eax, [esp+6Ch+namelen]
		mov	[esp+6Ch+type],	ebp ; addr
		mov	[esp+6Ch+protocol], eax	; addrlen
		mov	[esp+6Ch+hostlong], ebx	; s
		call	ds:accept
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	ebp, eax
		jz	loc_67E0DD50
		mov	ecx, [esp+6Ch+arg_8]
		test	ecx, ecx
		jnz	short loc_67E0DC99
		mov	ecx, ds:ioctlsocket
		lea	edx, [esp+6Ch+argp]
		mov	[esp+6Ch+protocol], edx	; argp
		mov	[esp+6Ch+var_44], edx
		mov	[esp+6Ch+argp],	1
		mov	[esp+6Ch+var_40], ecx
		mov	[esp+6Ch+type],	8004667Eh ; cmd
		mov	[esp+6Ch+hostlong], edi	; s
		call	ecx ; ioctlsocket
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	edx, [esp+6Ch+var_44]
		mov	ecx, [esp+6Ch+var_40]
		jz	loc_67E0DD72
		mov	[esp+6Ch+argp],	1
		mov	[esp+6Ch+protocol], edx
		mov	[esp+6Ch+type],	8004667Eh
		mov	[esp+6Ch+hostlong], ebp
		call	ecx
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E0DD72

loc_67E0DC99:				; CODE XREF: sub_67E0DAE0+153j
		mov	eax, [esp+6Ch+arg_4]
		mov	[esi], edi
		mov	[eax], ebp
		mov	[esp+6Ch+var_50], ebp
		mov	[esp+6Ch+var_54], ebp
		mov	[esp+6Ch+var_58], edi
		mov	eax, [esi]
		mov	[esp+6Ch+Format], offset aFullDuplexPipe ; "full-duplex	pipe %d:%d <-> %d:%d\n"
		mov	[esp+6Ch+protocol], offset a_dbus_full_dup ; "_dbus_full_duplex_pipe"
		mov	[esp+6Ch+type],	385h ; int
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+hostlong], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+6Ch+hostlong], ebx	; s
		call	ds:closesocket
		mov	eax, 1
		sub	esp, 4
		jmp	short loc_67E0DD41
; ---------------------------------------------------------------------------
		align 10h

loc_67E0DCF0:				; CODE XREF: sub_67E0DAE0+37j
					; sub_67E0DAE0+96j ...
		call	ds:WSAGetLastError
		mov	esi, ds:_errno
		mov	edi, eax
		call	esi ; _errno
		mov	ebp, ds:closesocket
		mov	[eax], edi

loc_67E0DD08:				; CODE XREF: sub_67E0DAE0+290j
		mov	[esp+6Ch+hostlong], ebx	; s
		call	ebp ; closesocket
		sub	esp, 4
		call	sub_67E094E0
		mov	ebx, eax
		call	esi ; _errno
		mov	eax, [eax]
		mov	[esp+6Ch+hostlong], eax
		call	sub_67E09380
		mov	[esp+6Ch+Format], ebx ;	char
		mov	[esp+6Ch+protocol], offset aCouldNotSetupS ; "Could not	setup socket pair: %s"
		mov	[esp+6Ch+type],	eax ; char *
		mov	eax, [esp+6Ch+arg_C]
		mov	[esp+6Ch+hostlong], eax	; int
		call	dbus_set_error
		xor	eax, eax

loc_67E0DD41:				; CODE XREF: sub_67E0DAE0+208j
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0DD50:				; CODE XREF: sub_67E0DAE0+124j
					; sub_67E0DAE0+147j
		call	ds:WSAGetLastError
		mov	esi, ds:_errno
		mov	ebp, eax
		call	esi ; _errno
		mov	[eax], ebp
		mov	ebp, ds:closesocket

loc_67E0DD68:				; CODE XREF: sub_67E0DAE0+2B8j
		mov	[esp+6Ch+hostlong], edi	; s
		call	ebp ; closesocket
		sub	esp, 4
		jmp	short loc_67E0DD08
; ---------------------------------------------------------------------------

loc_67E0DD72:				; CODE XREF: sub_67E0DAE0+18Ej
					; sub_67E0DAE0+1B3j
		call	ds:WSAGetLastError
		mov	esi, ds:_errno
		mov	[esp+6Ch+var_44], eax
		call	esi ; _errno
		mov	edx, [esp+6Ch+var_44]
		mov	[eax], edx
		mov	[esp+6Ch+hostlong], ebp	; s
		mov	ebp, ds:closesocket
		call	ebp ; closesocket
		sub	esp, 4
		jmp	short loc_67E0DD68
sub_67E0DAE0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0DDA0(SOCKET, int,	int, char, int,	int, int)
sub_67E0DDA0	proc near		; CODE XREF: sub_67DF5CD0+167p

s		= dword	ptr -6Ch
lpBuffers	= dword	ptr -68h
dwBufferCount	= dword	ptr -64h
lpNumberOfBytesSent= dword ptr -60h
dwFlags		= dword	ptr -5Ch
lpOverlapped	= dword	ptr -58h
lpCompletionRoutine= dword ptr -54h
var_40		= dword	ptr -40h
Buffers		= _WSABUF ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
NumberOfBytesSent= dword ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	edx, [esp+6Ch+arg_4]
		mov	ebx, dword ptr [esp+6Ch+arg_C]
		mov	ebp, [esp+6Ch+arg_10]
		mov	esi, [esp+6Ch+arg_18]
		test	edx, edx
		mov	edi, [esp+6Ch+arg_0]
		setnz	al
		mov	[esp+6Ch+var_40], edx
		mov	[esp+6Ch+s], eax
		mov	[esp+6Ch+dwFlags], offset a_dbus_write__0 ; "_dbus_write_socket_two"
		mov	[esp+6Ch+lpNumberOfBytesSent], 193h
		mov	[esp+6Ch+dwBufferCount], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+lpBuffers], offset aBuffer1Null ; "buffer1 != NULL"
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+arg_8]
		mov	[esp+6Ch+dwFlags], offset a_dbus_write__0 ; "_dbus_write_socket_two"
		mov	[esp+6Ch+lpNumberOfBytesSent], 194h
		mov	[esp+6Ch+dwBufferCount], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+s], eax
		mov	[esp+6Ch+lpBuffers], offset aStart10 ; "start1 >= 0"
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+arg_14]
		mov	[esp+6Ch+dwFlags], offset a_dbus_write__0 ; "_dbus_write_socket_two"
		mov	[esp+6Ch+lpNumberOfBytesSent], 195h
		mov	[esp+6Ch+dwBufferCount], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+s], eax
		mov	[esp+6Ch+lpBuffers], offset aStart20 ; "start2 >= 0"
		call	sub_67DFAE70
		mov	eax, ebx
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+s], eax
		mov	[esp+6Ch+dwFlags], offset a_dbus_write__0 ; "_dbus_write_socket_two"
		mov	[esp+6Ch+lpNumberOfBytesSent], 196h
		mov	[esp+6Ch+dwBufferCount], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+lpBuffers], offset aLen10 ; "len1 >= 0"
		call	sub_67DFAE70
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+6Ch+s], eax
		mov	[esp+6Ch+dwFlags], offset a_dbus_write__0 ; "_dbus_write_socket_two"
		mov	[esp+6Ch+lpNumberOfBytesSent], 197h
		mov	[esp+6Ch+dwBufferCount], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+lpBuffers], offset aLen20 ; "len2 >= 0"
		call	sub_67DFAE70
		mov	edx, [esp+6Ch+var_40]
		mov	eax, [esp+6Ch+arg_8]
		mov	[esp+6Ch+dwBufferCount], ebx
		mov	[esp+6Ch+s], edx
		mov	[esp+6Ch+lpBuffers], eax
		call	sub_67E01280
		test	ebp, ebp
		mov	edx, eax
		jz	loc_67E0DFC0
		mov	eax, [esp+6Ch+arg_14]
		mov	[esp+6Ch+s], ebp
		mov	[esp+6Ch+var_40], edx
		mov	[esp+6Ch+dwBufferCount], esi
		mov	[esp+6Ch+lpBuffers], eax
		call	sub_67E01280
		mov	edx, [esp+6Ch+var_40]
		mov	ebp, eax
		mov	eax, esi

loc_67E0DEFC:				; CODE XREF: sub_67E0DDA0+224j
		mov	[esp+6Ch+Buffers.buf], edx
		mov	[esp+6Ch+var_28], eax
		mov	[esp+6Ch+Buffers.len], ebx
		mov	[esp+6Ch+var_24], ebp
		mov	[esp+6Ch+lpCompletionRoutine], edi
		mov	[esp+6Ch+lpOverlapped],	esi
		mov	[esp+6Ch+dwFlags], ebx ; char
		mov	[esp+6Ch+lpNumberOfBytesSent], offset aWsasendLen12DD ;	"WSASend: len1+2=%d+%d fd=%d\n"
		mov	[esp+6Ch+dwBufferCount], offset	a_dbus_write__0	; "_dbus_write_socket_two"
		mov	[esp+6Ch+lpBuffers], 1ACh ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	ebp, 1
		sbb	eax, eax
		add	eax, 2
		lea	edx, [esp+6Ch+NumberOfBytesSent]
		mov	[esp+6Ch+dwBufferCount], eax ; dwBufferCount
		lea	eax, [esp+6Ch+Buffers]
		mov	[esp+6Ch+lpCompletionRoutine], 0 ; lpCompletionRoutine
		mov	[esp+6Ch+lpOverlapped],	0 ; lpOverlapped
		mov	[esp+6Ch+dwFlags], 0 ; dwFlags
		mov	[esp+6Ch+lpNumberOfBytesSent], edx ; lpNumberOfBytesSent
		mov	[esp+6Ch+lpBuffers], eax ; lpBuffers
		mov	[esp+6Ch+s], edi ; s
		call	ds:WSASend
		sub	esp, 1Ch
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E0DFD0
		mov	eax, [esp+6Ch+NumberOfBytesSent]
		mov	[esp+6Ch+lpNumberOfBytesSent], offset aWsasendLd ; "WSASend: = %ld\n"
		mov	[esp+6Ch+dwBufferCount], offset	a_dbus_write__0	; "_dbus_write_socket_two"
		mov	[esp+6Ch+lpBuffers], 1BCh ; int
		mov	[esp+6Ch+dwFlags], eax ; char
		mov	[esp+6Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+6Ch+NumberOfBytesSent]
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0DFC0:				; CODE XREF: sub_67E0DDA0+133j
		xor	eax, eax
		xor	esi, esi
		jmp	loc_67E0DEFC
; ---------------------------------------------------------------------------
		align 10h

loc_67E0DFD0:				; CODE XREF: sub_67E0DDA0+1DFj
		call	ds:WSAGetLastError
		mov	ebx, eax
		call	ds:_errno
		mov	[eax], ebx
		call	sub_67E094E0
		mov	[esp+6Ch+lpNumberOfBytesSent], offset aWsasendFailedS ;	"WSASend: failed: %s\n"
		mov	[esp+6Ch+dwBufferCount], offset	a_dbus_write__0	; "_dbus_write_socket_two"
		mov	[esp+6Ch+lpBuffers], 1B8h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+dwFlags], eax ; char
		call	sub_67DFABC0
		add	esp, 5Ch
		mov	eax, 0FFFFFFFFh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E0DDA0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0E020(SOCKET, int,	int, char)
sub_67E0E020	proc near		; CODE XREF: sub_67DE8390+162p
					; sub_67DF5CD0+28Dp ...

s		= dword	ptr -4Ch
buf		= dword	ptr -48h
len		= dword	ptr -44h
flags		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	eax, [esp+4Ch+arg_8]
		mov	esi, dword ptr [esp+4Ch+arg_C]
		mov	edi, [esp+4Ch+arg_0]
		mov	[esp+4Ch+buf], eax
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+len], esi
		mov	[esp+4Ch+s], eax
		call	sub_67E01280
		mov	[esp+4Ch+var_24], eax
		mov	eax, ds:_errno
		mov	[esp+4Ch+var_20], eax

loc_67E0E054:				; CODE XREF: sub_67E0E020+C0j
		mov	[esp+4Ch+var_38], edi
		mov	dword ptr [esp+4Ch+var_3C], esi	; char
		mov	[esp+4Ch+flags], offset	aSendLenDFdD ; "send: len=%d fd=%d\n"
		mov	[esp+4Ch+len], offset a_dbus_write_so ;	"_dbus_write_socket"
		mov	[esp+4Ch+buf], 10Bh ; int
		mov	[esp+4Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+4Ch+var_24]
		mov	[esp+4Ch+flags], 0 ; flags
		mov	[esp+4Ch+len], esi ; len
		mov	[esp+4Ch+s], edi ; s
		mov	[esp+4Ch+buf], eax ; buf
		call	ds:send
		sub	esp, 10h
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jz	short loc_67E0E0F0
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		mov	[esp+4Ch+flags], offset	aSendD ; "send:	= %d\n"
		mov	[esp+4Ch+len], offset a_dbus_write_so ;	"_dbus_write_socket"
		mov	[esp+4Ch+buf], 115h ; int
		mov	[esp+4Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		test	ebx, ebx
		jns	short loc_67E0E0E6
		mov	ebp, ds:_errno

loc_67E0E0D9:				; CODE XREF: sub_67E0E020+113j
		call	ebp ; _errno
		cmp	dword ptr [eax], 4
		xchg	ax, ax
		jz	loc_67E0E054

loc_67E0E0E6:				; CODE XREF: sub_67E0E020+B1j
		add	esp, 3Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0E0F0:				; CODE XREF: sub_67E0E020+85j
		call	ds:WSAGetLastError
		mov	ebp, [esp+4Ch+var_20]
		mov	[esp+4Ch+var_28], eax
		call	ebp
		mov	edx, [esp+4Ch+var_28]
		mov	[eax], edx
		call	sub_67E094E0
		mov	[esp+4Ch+flags], offset	aSendFailedS ; "send: failed: %s\n"
		mov	[esp+4Ch+len], offset a_dbus_write_so ;	"_dbus_write_socket"
		mov	[esp+4Ch+buf], 111h ; int
		mov	[esp+4Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		jmp	short loc_67E0E0D9
sub_67E0E020	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0E140(SOCKET, int,	char)
sub_67E0E140	proc near		; CODE XREF: sub_67DE7F60+EBp
					; sub_67DF5890+28Bp ...

s		= dword	ptr -4Ch
buf		= dword	ptr -48h
len		= dword	ptr -44h
flags		= dword	ptr -40h
var_3C		= byte ptr -3Ch
var_38		= dword	ptr -38h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, dword ptr [esp+4Ch+arg_8]
		mov	edi, [esp+4Ch+arg_0]
		mov	dword ptr [esp+4Ch+var_3C], offset a_dbus_read_soc ; "_dbus_read_socket"
		mov	[esp+4Ch+flags], 0C1h
		mov	eax, esi
		not	eax
		shr	eax, 1Fh
		mov	[esp+4Ch+s], eax
		mov	[esp+4Ch+len], offset aRBuildWin32_32 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4Ch+buf], offset aCount0 ;	"count >= 0"
		call	sub_67DFAE70
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+s], eax
		call	sub_67E00CE0
		mov	[esp+4Ch+buf], esi
		mov	[esp+4Ch+var_20], eax
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+s], eax
		call	sub_67E087C0
		test	eax, eax
		jz	loc_67E0E311
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+len], esi
		mov	[esp+4Ch+buf], eax
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+s], eax
		call	sub_67E014C0
		mov	ebp, ds:_errno
		mov	[esp+4Ch+var_24], eax
		jmp	short loc_67E0E211
; ---------------------------------------------------------------------------
		align 10h

loc_67E0E1D0:				; CODE XREF: sub_67E0E140+122j
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		mov	[esp+4Ch+flags], offset	aRecvD ; "recv:	= %d\n"
		mov	[esp+4Ch+len], offset a_dbus_read_soc ;	"_dbus_read_socket"
		mov	[esp+4Ch+buf], 0D9h ; int
		mov	[esp+4Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		test	ebx, ebx
		jns	loc_67E0E2F0
		mov	ebx, ds:_errno
		call	ebx ; _errno
		cmp	dword ptr [eax], 4
		jnz	loc_67E0E2CB

loc_67E0E211:				; CODE XREF: sub_67E0E140+88j
					; sub_67E0E140+185j
		mov	[esp+4Ch+var_38], edi
		mov	dword ptr [esp+4Ch+var_3C], esi	; char
		mov	[esp+4Ch+flags], offset	aRecvCountDFdD ; "recv:	count=%d fd=%d\n"
		mov	[esp+4Ch+len], offset a_dbus_read_soc ;	"_dbus_read_socket"
		mov	[esp+4Ch+buf], 0CFh ; int
		mov	[esp+4Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+4Ch+var_24]
		mov	[esp+4Ch+flags], 0 ; flags
		mov	[esp+4Ch+len], esi ; len
		mov	[esp+4Ch+s], edi ; s
		mov	[esp+4Ch+buf], eax ; buf
		call	ds:recv
		sub	esp, 10h
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jnz	loc_67E0E1D0
		call	ds:WSAGetLastError
		mov	ebx, ebp
		mov	[esp+4Ch+var_28], eax
		call	ebp ; _errno
		mov	edx, [esp+4Ch+var_28]
		mov	[eax], edx
		call	ebp ; _errno
		mov	edx, [eax]
		mov	[esp+4Ch+var_28], edx
		call	ebp ; _errno
		mov	eax, [eax]
		mov	[esp+4Ch+s], eax
		call	sub_67E0AF00
		mov	edx, [esp+4Ch+var_28]
		mov	[esp+4Ch+flags], offset	aRecvFailedSD ;	"recv: failed: %s (%d)\n"
		mov	[esp+4Ch+len], offset a_dbus_read_soc ;	"_dbus_read_socket"
		mov	[esp+4Ch+buf], 0D5h ; int
		mov	[esp+4Ch+var_38], edx
		mov	[esp+4Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4Ch+var_3C], eax	; char
		call	sub_67DFABC0
		call	ebx
		cmp	dword ptr [eax], 4
		jz	loc_67E0E211

loc_67E0E2CB:				; CODE XREF: sub_67E0E140+CBj
		mov	eax, [esp+4Ch+var_20]
		mov	ebx, 0FFFFFFFFh
		mov	[esp+4Ch+buf], eax
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+s], eax
		call	sub_67E06F60

loc_67E0E2E4:				; CODE XREF: sub_67E0E140+1E2j
		add	esp, 3Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0E2F0:				; CODE XREF: sub_67E0E140+BAj
		mov	eax, [esp+4Ch+var_20]
		lea	eax, [ebx+eax]
		mov	[esp+4Ch+buf], eax
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+s], eax
		call	sub_67E06F60
		add	esp, 3Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0E311:				; CODE XREF: sub_67E0E140+60j
		call	ds:_errno
		mov	ebx, 0FFFFFFFFh
		mov	dword ptr [eax], 0Ch
		jmp	short loc_67E0E2E4
sub_67E0E140	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0E330(SOCKET, int)
sub_67E0E330	proc near		; CODE XREF: sub_67DF6A20+433p

s		= dword	ptr -6Ch
buf		= dword	ptr -68h
len		= dword	ptr -64h
flags		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= byte ptr -30h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		lea	eax, [esp+6Ch+var_30]
		mov	esi, [esp+6Ch+arg_0]
		mov	[esp+6Ch+s], eax
		mov	[esp+6Ch+len], 1
		mov	[esp+6Ch+buf], offset dword_67E2D4C4
		call	sub_67E01AC0
		mov	eax, ds:_errno
		mov	ebp, ds:send
		mov	[esp+6Ch+var_40], eax

loc_67E0E366:				; CODE XREF: sub_67E0E330+F0j
		lea	eax, [esp+6Ch+var_30]
		mov	[esp+6Ch+len], 1
		mov	[esp+6Ch+buf], 0
		mov	[esp+6Ch+s], eax
		call	sub_67E01280
		mov	edi, eax

loc_67E0E384:				; CODE XREF: sub_67E0E330+E3j
		mov	[esp+6Ch+var_58], esi
		mov	dword ptr [esp+6Ch+var_5C], 1 ;	char
		mov	[esp+6Ch+flags], offset	aSendLenDFdD ; "send: len=%d fd=%d\n"
		mov	[esp+6Ch+len], offset a_dbus_write_so ;	"_dbus_write_socket"
		mov	[esp+6Ch+buf], 10Bh ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+6Ch+flags], 0 ; flags
		mov	[esp+6Ch+len], 1 ; len
		mov	[esp+6Ch+buf], edi ; buf
		mov	[esp+6Ch+s], esi ; s
		call	ebp ; send
		sub	esp, 10h
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jz	loc_67E0E4D0
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+flags], offset	aSendD ; "send:	= %d\n"
		mov	[esp+6Ch+len], offset a_dbus_write_so ;	"_dbus_write_socket"
		mov	[esp+6Ch+buf], 115h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	ebx, 0
		jge	short loc_67E0E462
		mov	ebx, ds:_errno

loc_67E0E40E:				; CODE XREF: sub_67E0E330+1E3j
		call	ebx ; _errno
		cmp	dword ptr [eax], 4
		jz	loc_67E0E384
		call	ebx ; _errno
		cmp	dword ptr [eax], 4
		xchg	ax, ax
		jz	loc_67E0E366
		call	sub_67E094E0
		mov	esi, eax
		lea	esi, [esi+0]
		call	ebx ; _errno
		mov	eax, [eax]
		mov	[esp+6Ch+s], eax
		call	sub_67E09380
		mov	[esp+6Ch+flags], esi ; char
		mov	[esp+6Ch+len], offset aFailedToWrit_0 ;	"Failed	to write credentials byte: %s"
		mov	[esp+6Ch+buf], eax ; char *
		mov	eax, [esp+6Ch+arg_4]
		mov	[esp+6Ch+s], eax ; int
		call	dbus_set_error
		add	esp, 5Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0E462:				; CODE XREF: sub_67E0E330+D6j
		jz	loc_67E0E518
		xor	eax, eax
		cmp	ebx, 1
		setz	al
		mov	[esp+6Ch+s], eax
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_send_cre ; "_dbus_send_credentials_socket"
		mov	[esp+6Ch+flags], 680h
		mov	[esp+6Ch+len], offset aRBuildWin32_32 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+buf], offset aBytes_written1 ;	"bytes_written == 1"
		call	sub_67DFAE70
		mov	[esp+6Ch+flags], offset	aWrote1ZeroByte	; "wrote 1 zero	byte, credential sending i"...
		mov	[esp+6Ch+len], offset a_dbus_send_cre ;	"_dbus_send_credentials_socket"
		mov	[esp+6Ch+buf], 681h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 5Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0E4D0:				; CODE XREF: sub_67E0E330+A5j
		call	ds:WSAGetLastError
		mov	ebx, [esp+6Ch+var_40]
		mov	[esp+6Ch+var_44], eax
		call	ebx
		mov	edx, [esp+6Ch+var_44]
		mov	[eax], edx
		call	sub_67E094E0
		mov	[esp+6Ch+flags], offset	aSendFailedS ; "send: failed: %s\n"
		mov	[esp+6Ch+len], offset a_dbus_write_so ;	"_dbus_write_socket"
		mov	[esp+6Ch+buf], 111h ; int
		mov	[esp+6Ch+s], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		call	sub_67DFABC0
		jmp	loc_67E0E40E
; ---------------------------------------------------------------------------

loc_67E0E518:				; CODE XREF: sub_67E0E330:loc_67E0E462j
		mov	eax, [esp+6Ch+arg_4]
		mov	[esp+6Ch+len], offset aWroteZeroBytes ;	"wrote zero bytes writing credentials by"...
		mov	[esp+6Ch+buf], offset aOrg_freedes_69 ;	"org.freedesktop.DBus.Error.IOError"
		mov	[esp+6Ch+s], eax ; int
		call	dbus_set_error
		add	esp, 5Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E0E330	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0E540	proc near		; CODE XREF: sub_67DD26C0+9Bp
					; sub_67DD26C0+1CFp ...

lpSystemTimeAsFileTime=	dword ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
SystemTimeAsFileTime= _FILETIME	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 3Ch
		lea	eax, [esp+3Ch+SystemTimeAsFileTime]
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	[esp+3Ch+var_4], ebp
		mov	ebp, [esp+3Ch+arg_0]
		mov	[esp+3Ch+lpSystemTimeAsFileTime], eax ;	lpSystemTimeAsFileTime
		call	ds:GetSystemTimeAsFileTime
		sub	esp, 4
		mov	eax, [esp+3Ch+SystemTimeAsFileTime.dwLowDateTime]
		mov	edx, [esp+3Ch+SystemTimeAsFileTime.dwHighDateTime]
		mov	[esp+3Ch+var_34], 0Ah
		mov	[esp+3Ch+var_30], 0
		add	eax, 2AC18000h
		adc	edx, 0FE624E21h
		mov	[esp+3Ch+lpSystemTimeAsFileTime], eax
		mov	[esp+3Ch+var_38], edx
		call	sub_67E185F0
		test	ebp, ebp
		mov	esi, eax
		mov	edi, edx
		jz	short loc_67E0E5C1
		mov	[esp+3Ch+var_34], 0F4240h
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+lpSystemTimeAsFileTime], eax
		mov	[esp+3Ch+var_38], edx
		call	sub_67E185F0
		mov	[ebp+0], eax

loc_67E0E5C1:				; CODE XREF: sub_67E0E540+60j
		test	ebx, ebx
		jz	short loc_67E0E5E3
		mov	[esp+3Ch+var_34], 0F4240h
		mov	[esp+3Ch+var_30], 0
		mov	[esp+3Ch+lpSystemTimeAsFileTime], esi
		mov	[esp+3Ch+var_38], edi
		call	sub_67E18710
		mov	[ebx], eax

loc_67E0E5E3:				; CODE XREF: sub_67E0E540+83j
		mov	ebx, [esp+3Ch+var_10]
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
sub_67E0E540	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0E600(int,	char *)
sub_67E0E600	proc near		; CODE XREF: .text:67E0E8B2p
					; .text:67E0E8D2p

Str		= dword	ptr -23Ch
Source		= dword	ptr -238h
Dest		= byte ptr -224h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 23Ch
		mov	[esp+23Ch+var_10], ebx
		lea	ebx, [esp+23Ch+Dest]
		mov	[esp+23Ch+var_C], esi
		mov	esi, [esp+23Ch+arg_4]
		mov	[esp+23Ch+var_8], edi
		mov	edi, [esp+23Ch+arg_0]
		mov	[esp+23Ch+var_4], ebp
		mov	[esp+23Ch+Source], 208h	; DWORD
		mov	[esp+23Ch+Str],	ebx ; LPSTR
		call	sub_67E0B2F0
		test	eax, eax
		jz	short loc_67E0E687
		mov	[esp+23Ch+Str],	esi ; Str
		call	strlen
		mov	ecx, ebx

loc_67E0E652:				; CODE XREF: sub_67E0E600+67j
		mov	ebp, [ecx]
		add	ecx, 4
		lea	edx, [ebp-1010101h]
		not	ebp
		and	edx, ebp
		and	edx, 80808080h
		jz	short loc_67E0E652
		test	edx, 8080h
		jz	loc_67E0E725

loc_67E0E675:				; CODE XREF: sub_67E0E600+12Bj
		add	dl, dl
		sbb	ecx, 3
		sub	ecx, ebx
		lea	eax, [ecx+eax+4]
		cmp	eax, 206h
		jbe	short loc_67E0E6B0

loc_67E0E687:				; CODE XREF: sub_67E0E600+46j
					; sub_67E0E600+142j ...
		xor	eax, eax

loc_67E0E689:				; CODE XREF: sub_67E0E600+120j
					; sub_67E0E600+295j
		mov	ebx, [esp+23Ch+var_10]
		mov	esi, [esp+23Ch+var_C]
		mov	edi, [esp+23Ch+var_8]
		mov	ebp, [esp+23Ch+var_4]
		add	esp, 23Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0E6B0:				; CODE XREF: sub_67E0E600+85j
		mov	edx, ebx

loc_67E0E6B2:				; CODE XREF: sub_67E0E600+C6j
		mov	ecx, [edx]
		add	edx, 4
		lea	eax, [ecx-1010101h]
		not	ecx
		and	eax, ecx
		and	eax, 80808080h
		jz	short loc_67E0E6B2
		test	eax, 8080h
		jnz	short loc_67E0E6D5
		shr	eax, 10h
		add	edx, 2

loc_67E0E6D5:				; CODE XREF: sub_67E0E600+CDj
		add	al, al
		sbb	edx, 3
		mov	dword ptr [edx], 5C637465h
		mov	byte ptr [edx+4], 0
		mov	[esp+23Ch+Source], esi ; Source
		mov	[esp+23Ch+Str],	ebx ; Dest
		call	strcat
		mov	[esp+23Ch+Str],	ebx ; lpFileName
		call	ds:GetFileAttributesA
		sub	esp, 4
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E0E730
		call	ds:GetLastError
		cmp	eax, 3
		jz	short loc_67E0E730

loc_67E0E70C:				; CODE XREF: sub_67E0E600+1E1j
					; sub_67E0E600+29Bj
		mov	[esp+23Ch+Source], ebx ; char *
		mov	[esp+23Ch+Str],	edi ; int
		call	sub_67E08C10
		test	eax, eax
		setnz	al
		movzx	eax, al
		jmp	loc_67E0E689
; ---------------------------------------------------------------------------

loc_67E0E725:				; CODE XREF: sub_67E0E600+6Fj
		shr	edx, 10h
		add	ecx, 2
		jmp	loc_67E0E675
; ---------------------------------------------------------------------------

loc_67E0E730:				; CODE XREF: sub_67E0E600+FFj
					; sub_67E0E600+10Aj
		mov	[esp+23Ch+Source], 208h	; DWORD
		mov	[esp+23Ch+Str],	ebx ; LPSTR
		call	sub_67E0B2F0
		test	eax, eax
		jz	loc_67E0E687
		mov	[esp+23Ch+Str],	esi ; Str
		call	strlen
		mov	ecx, ebx

loc_67E0E752:				; CODE XREF: sub_67E0E600+167j
		mov	ebp, [ecx]
		add	ecx, 4
		lea	edx, [ebp-1010101h]
		not	ebp
		and	edx, ebp
		and	edx, 80808080h
		jz	short loc_67E0E752
		test	edx, 8080h
		jnz	short loc_67E0E777
		shr	edx, 10h
		add	ecx, 2

loc_67E0E777:				; CODE XREF: sub_67E0E600+16Fj
		add	dl, dl
		sbb	ecx, 3
		sub	ecx, ebx
		lea	eax, [ecx+eax+0Bh]
		cmp	eax, 206h
		ja	loc_67E0E687
		mov	edx, ebx

loc_67E0E78F:				; CODE XREF: sub_67E0E600+1A3j
		mov	ecx, [edx]
		add	edx, 4
		lea	eax, [ecx-1010101h]
		not	ecx
		and	eax, ecx
		and	eax, 80808080h
		jz	short loc_67E0E78F
		test	eax, 8080h
		jnz	short loc_67E0E7B2
		shr	eax, 10h
		add	edx, 2

loc_67E0E7B2:				; CODE XREF: sub_67E0E600+1AAj
		add	al, al
		sbb	edx, 3
		mov	dword ptr [edx], 5C637465h
		mov	dword ptr [edx+4], 73756264h
		mov	dword ptr [edx+8], 5C312Dh
		mov	[esp+23Ch+Source], esi ; Source
		mov	[esp+23Ch+Str],	ebx ; Dest
		call	strcat
		mov	[esp+23Ch+Str],	ebx ; LPCSTR
		call	sub_67E0B2C0
		test	eax, eax
		jnz	loc_67E0E70C
		mov	[esp+23Ch+Source], 208h	; DWORD
		mov	[esp+23Ch+Str],	ebx ; LPSTR
		call	sub_67E0B2F0
		test	eax, eax
		jz	loc_67E0E687
		mov	[esp+23Ch+Str],	esi ; Str
		call	strlen
		mov	ecx, ebx

loc_67E0E809:				; CODE XREF: sub_67E0E600+21Ej
		mov	ebp, [ecx]
		add	ecx, 4
		lea	edx, [ebp-1010101h]
		not	ebp
		and	edx, ebp
		and	edx, 80808080h
		jz	short loc_67E0E809
		test	edx, 8080h
		jnz	short loc_67E0E82E
		shr	edx, 10h
		add	ecx, 2

loc_67E0E82E:				; CODE XREF: sub_67E0E600+226j
		add	dl, dl
		sbb	ecx, 3
		sub	ecx, ebx
		lea	eax, [ecx+eax+4]
		cmp	eax, 206h
		ja	loc_67E0E687
		mov	edx, ebx

loc_67E0E846:				; CODE XREF: sub_67E0E600+25Aj
		mov	ecx, [edx]
		add	edx, 4
		lea	eax, [ecx-1010101h]
		not	ecx
		and	eax, ecx
		and	eax, 80808080h
		jz	short loc_67E0E846
		test	eax, 8080h
		jnz	short loc_67E0E869
		shr	eax, 10h
		add	edx, 2

loc_67E0E869:				; CODE XREF: sub_67E0E600+261j
		add	al, al
		sbb	edx, 3
		mov	dword ptr [edx], 5C737562h
		mov	byte ptr [edx+4], 0
		mov	[esp+23Ch+Source], esi ; Source
		mov	[esp+23Ch+Str],	ebx ; Dest
		call	strcat
		mov	[esp+23Ch+Str],	ebx ; LPCSTR
		call	sub_67E0B2C0
		mov	edx, eax
		mov	eax, 1
		test	edx, edx
		jz	loc_67E0E689
		jmp	loc_67E0E70C
sub_67E0E600	endp

; ---------------------------------------------------------------------------
		sub	esp, 1Ch
		mov	eax, [esp+20h]
		mov	dword ptr [esp+4], offset aSession_conf	; "session.conf"
		mov	[esp], eax
		call	sub_67E0E600
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	eax, [esp+20h]
		mov	dword ptr [esp+4], offset aSystem_conf ; "system.conf"
		mov	[esp], eax
		call	sub_67E0E600
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0E8E0(char, char *, char, int, int, int)
sub_67E0E8E0	proc near		; CODE XREF: sub_67DEDF60+117p

s		= dword	ptr -23Ch
name		= dword	ptr -238h
namelen		= dword	ptr -234h
var_230		= byte ptr -230h
var_22C		= dword	ptr -22Ch
var_228		= dword	ptr -228h
var_224		= dword	ptr -224h
var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
NewSize		= dword	ptr -214h
var_210		= dword	ptr -210h
WSAData		= WSAData ptr -204h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_54		= sockaddr ptr -54h
var_38		= byte ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= byte ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 22Ch
		mov	ebp, [esp+23Ch+arg_14]
		mov	eax, [esp+23Ch+arg_10]
		mov	ebx, dword ptr [esp+23Ch+arg_8]
		mov	[esp+23Ch+var_20], 0FFFFFFFFh
		test	ebp, ebp
		mov	dword ptr [eax], 0
		jz	loc_67E0EC41
		mov	edx, [esp+23Ch+arg_14]
		mov	[esp+23Ch+s], edx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E0EC41

loc_67E0E931:				; CODE XREF: sub_67E0E8E0+366j
		mov	[esp+23Ch+var_22C], offset a_dbus_listen_t ; "_dbus_listen_tcp_socket"
		mov	dword ptr [esp+23Ch+var_230], 588h
		mov	[esp+23Ch+namelen], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+23Ch+name], offset	aErrorNullDb_25	; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+23Ch+s], edx
		call	sub_67DFAE70
		mov	edi, ds:dword_67E3498C
		test	edi, edi
		jz	loc_67E0EC50

loc_67E0E967:				; CODE XREF: sub_67E0E8E0+3B3j
		xor	eax, eax

loc_67E0E969:				; CODE XREF: sub_67E0E8E0+9Aj
		mov	[esp+eax+23Ch+var_74], 0
		add	eax, 4
		cmp	eax, 20h
		jb	short loc_67E0E969
		test	ebx, ebx
		jz	loc_67E0EF9F
		mov	edi, offset aIpv4_0 ; "ipv4"
		mov	ecx, 5
		mov	esi, ebx
		repe cmpsb
		jnz	loc_67E0EC98
		mov	[esp+23Ch+var_70], 2

loc_67E0E9A3:				; CODE XREF: sub_67E0E8E0+3D7j
					; sub_67E0E8E0+6CAj
		mov	[esp+23Ch+var_68], 6
		xor	esi, esi
		mov	[esp+23Ch+var_6C], 1
		mov	[esp+23Ch+var_74], 1
		mov	[esp+23Ch+var_218], 0

loc_67E0E9CE:				; CODE XREF: sub_67E0E8E0+5BAj
		lea	eax, [esp+23Ch+var_24]
		mov	ecx, [esp+23Ch+arg_4]
		mov	dword ptr [esp+23Ch+var_230], eax
		mov	eax, dword ptr [esp+23Ch+arg_0]
		lea	edx, [esp+23Ch+var_74]
		mov	[esp+23Ch+namelen], edx
		mov	[esp+23Ch+name], ecx
		mov	[esp+23Ch+s], eax
		call	sub_67E16950
		sub	esp, 10h
		test	eax, eax
		jnz	loc_67E0EFE0
		mov	ebx, [esp+23Ch+var_24]
		test	ebx, ebx
		jz	loc_67E0EFE0
		mov	edx, [esp+23Ch+var_218]
		mov	ecx, [esp+23Ch+var_218]
		shl	edx, 2
		lea	ecx, ds:4[ecx*4]
		mov	[esp+23Ch+var_210], edx
		mov	[esp+23Ch+NewSize], ecx
		jmp	loc_67E0EB6E
; ---------------------------------------------------------------------------

loc_67E0EA37:				; CODE XREF: sub_67E0E8E0+2B6j
		mov	ecx, [esp+23Ch+arg_14]
		test	ecx, ecx
		jz	short loc_67E0EA57
		mov	edx, [esp+23Ch+arg_14]
		mov	[esp+23Ch+s], edx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67E0EA5C

loc_67E0EA57:				; CODE XREF: sub_67E0E8E0+160j
		mov	edx, 1

loc_67E0EA5C:				; CODE XREF: sub_67E0E8E0+175j
		mov	[esp+23Ch+var_22C], offset a_dbus_listen_t ; "_dbus_listen_tcp_socket"
		mov	dword ptr [esp+23Ch+var_230], 5BBh ; char
		mov	[esp+23Ch+namelen], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+23Ch+name], offset	aErrorNullDb_25	; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+23Ch+s], edx
		call	sub_67DFAE70
		mov	eax, [ebx+10h]
		mov	[esp+23Ch+namelen], eax	; namelen
		mov	eax, [ebx+18h]
		mov	[esp+23Ch+s], ebp ; s
		mov	[esp+23Ch+name], eax ; name
		call	ds:bind
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E0ECC0
		mov	[esp+23Ch+name], 1Eh ; backlog
		mov	[esp+23Ch+s], ebp ; s
		call	ds:listen
		sub	esp, 8
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E0ED40
		mov	edx, [esp+23Ch+NewSize]
		add	[esp+23Ch+var_218], 1
		mov	[esp+23Ch+s], esi ; Memory
		mov	[esp+23Ch+name], edx ; NewSize
		call	dbus_realloc
		test	eax, eax
		mov	edx, eax
		jz	loc_67E0EDC0
		mov	eax, [esp+23Ch+var_210]
		mov	ecx, [esp+23Ch+arg_C]
		mov	[esp+23Ch+var_21C], edx
		mov	[edx+eax], ebp
		mov	[esp+23Ch+s], ecx
		call	sub_67E00CE0
		mov	edx, [esp+23Ch+var_21C]
		test	eax, eax
		jnz	short loc_67E0EB57
		mov	esi, [esp+23Ch+arg_4]
		test	esi, esi
		jz	loc_67E0EDF4
		mov	esi, [esp+23Ch+arg_4]
		mov	edi, offset a0_2 ; "0"
		mov	ecx, 2
		repe cmpsb
		jz	loc_67E0EDF4
		mov	ecx, [esp+23Ch+arg_4]
		mov	eax, [esp+23Ch+arg_C]
		mov	[esp+23Ch+var_21C], edx
		mov	[esp+23Ch+name], ecx ; char *
		mov	[esp+23Ch+s], eax ; int
		call	sub_67E08C10
		mov	edx, [esp+23Ch+var_21C]
		test	eax, eax
		jz	loc_67E0EFB6

loc_67E0EB57:				; CODE XREF: sub_67E0E8E0+223j
		mov	ebx, [ebx+1Ch]
		mov	esi, edx
		add	[esp+23Ch+var_210], 4
		add	[esp+23Ch+NewSize], 4
		test	ebx, ebx
		jz	loc_67E0EEA0

loc_67E0EB6E:				; CODE XREF: sub_67E0E8E0+152j
		mov	[esp+23Ch+namelen], 0 ;	protocol
		mov	edi, [esp+23Ch+var_218]
		mov	[esp+23Ch+name], 1 ; type
		mov	eax, [ebx+4]
		mov	[esp+23Ch+s], eax ; af
		call	ds:socket
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	ebp, eax
		jnz	loc_67E0EA37
		call	ds:WSAGetLastError
		mov	ebx, ds:_errno
		mov	edi, eax
		call	ebx ; _errno
		mov	[eax], edi
		call	sub_67E094E0
		mov	edi, eax
		call	ebx ; _errno
		mov	eax, [eax]
		mov	[esp+23Ch+s], eax
		call	sub_67E09380
		mov	dword ptr [esp+23Ch+var_230], edi ; char
		mov	[esp+23Ch+namelen], offset aFailedToOpenSo ; "Failed to	open socket: %s"
		mov	[esp+23Ch+name], eax ; char *
		mov	eax, [esp+23Ch+arg_14]
		mov	[esp+23Ch+s], eax ; int
		call	dbus_set_error

loc_67E0EBE0:				; CODE XREF: sub_67E0E8E0+455j
					; sub_67E0E8E0+4D5j ...
		mov	eax, [esp+23Ch+var_24]
		test	eax, eax
		jz	short loc_67E0EBF6
		mov	[esp+23Ch+s], eax
		call	sub_67E169B0
		sub	esp, 4

loc_67E0EBF6:				; CODE XREF: sub_67E0E8E0+309j
		mov	ebx, [esp+23Ch+var_218]
		test	ebx, ebx
		jz	short loc_67E0EC22
		mov	edi, ds:closesocket
		xor	ebx, ebx
		mov	ebp, [esp+23Ch+var_218]
		lea	esi, [esi+0]

loc_67E0EC10:				; CODE XREF: sub_67E0E8E0+340j
		mov	eax, [esi+ebx*4]
		add	ebx, 1
		mov	[esp+23Ch+s], eax ; s
		call	edi ; closesocket
		sub	esp, 4
		cmp	ebp, ebx
		jg	short loc_67E0EC10

loc_67E0EC22:				; CODE XREF: sub_67E0E8E0+31Cj
		mov	[esp+23Ch+s], esi
		call	dbus_free
		mov	[esp+23Ch+var_218], 0FFFFFFFFh

loc_67E0EC32:				; CODE XREF: sub_67E0E8E0+6BAj
					; sub_67E0E8E0+764j ...
		mov	eax, [esp+23Ch+var_218]
		add	esp, 22Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0EC41:				; CODE XREF: sub_67E0E8E0+32j
					; sub_67E0E8E0+4Bj
		mov	edx, 1
		jmp	loc_67E0E931
; ---------------------------------------------------------------------------
		align 10h

loc_67E0EC50:				; CODE XREF: sub_67E0E8E0+81j
		lea	eax, [esp+23Ch+WSAData]
		mov	[esp+23Ch+name], eax ; lpWSAData
		mov	[esp+23Ch+s], 2	; wVersionRequested
		call	ds:WSAStartup
		sub	esp, 8
		test	eax, eax
		jnz	loc_67E0F156
		movzx	eax, [esp+23Ch+WSAData.wVersion]
		cmp	al, 2
		jnz	loc_67E0F172
		shr	ax, 8
		test	al, al
		jnz	loc_67E0F172
		mov	ds:dword_67E3498C, 1
		jmp	loc_67E0E967
; ---------------------------------------------------------------------------

loc_67E0EC98:				; CODE XREF: sub_67E0E8E0+B2j
		mov	edi, offset aIpv6 ; "ipv6"
		mov	ecx, 5
		mov	esi, ebx
		repe cmpsb
		jnz	loc_67E0F069
		mov	[esp+23Ch+var_70], 17h
		jmp	loc_67E0E9A3
; ---------------------------------------------------------------------------
		align 10h

loc_67E0ECC0:				; CODE XREF: sub_67E0E8E0+1C1j
		call	ds:WSAGetLastError
		mov	ebx, ds:_errno
		mov	edi, eax
		call	ebx ; _errno
		mov	[eax], edi
		call	sub_67E094E0
		mov	edx, dword ptr [esp+23Ch+arg_0]
		test	edx, edx
		mov	edi, eax
		jz	loc_67E0F059

loc_67E0ECE8:				; CODE XREF: sub_67E0E8E0+784j
		call	ebx ; _errno
		mov	eax, [eax]
		mov	[esp+23Ch+s], eax
		call	sub_67E09380
		mov	ecx, [esp+23Ch+arg_4]
		mov	edx, dword ptr [esp+23Ch+arg_0]
		mov	[esp+23Ch+var_228], edi
		mov	[esp+23Ch+namelen], offset aFailedToBindSo ; "Failed to	bind socket \"%s:%s\": %s"
		mov	[esp+23Ch+var_22C], ecx
		mov	ecx, [esp+23Ch+arg_14]
		mov	dword ptr [esp+23Ch+var_230], edx ; char
		mov	[esp+23Ch+name], eax ; char *
		mov	[esp+23Ch+s], ecx ; int
		call	dbus_set_error
		mov	[esp+23Ch+s], ebp ; s
		call	ds:closesocket
		sub	esp, 4
		jmp	loc_67E0EBE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E0ED40:				; CODE XREF: sub_67E0E8E0+1DEj
		call	ds:WSAGetLastError
		mov	ebx, ds:_errno
		mov	edi, eax
		call	ebx ; _errno
		mov	[eax], edi
		call	sub_67E094E0
		mov	edi, eax
		mov	eax, dword ptr [esp+23Ch+arg_0]
		test	eax, eax
		jz	loc_67E0F049

loc_67E0ED68:				; CODE XREF: sub_67E0E8E0+774j
		call	ebx ; _errno
		mov	eax, [eax]
		mov	[esp+23Ch+s], eax
		call	sub_67E09380
		mov	edx, [esp+23Ch+arg_4]
		mov	ecx, dword ptr [esp+23Ch+arg_0]
		mov	[esp+23Ch+var_228], edi
		mov	[esp+23Ch+namelen], offset aFailedToListen ; "Failed to	listen on socket \"%s:%s\": %"...
		mov	[esp+23Ch+var_22C], edx
		mov	dword ptr [esp+23Ch+var_230], ecx ; char
		mov	[esp+23Ch+name], eax ; char *
		mov	eax, [esp+23Ch+arg_14]
		mov	[esp+23Ch+s], eax ; int
		call	dbus_set_error
		mov	[esp+23Ch+s], ebp ; s
		call	ds:closesocket
		sub	esp, 4
		jmp	loc_67E0EBE0
; ---------------------------------------------------------------------------
		align 10h

loc_67E0EDC0:				; CODE XREF: sub_67E0E8E0+1FDj
		mov	[esp+23Ch+s], ebp ; s
		call	ds:closesocket
		sub	esp, 4
		mov	ecx, [esp+23Ch+arg_14]
		mov	[esp+23Ch+namelen], offset aFailedToAlloca ; "Failed to	allocate file handle array"
		mov	[esp+23Ch+name], offset	aOrg_freedes_44	; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+23Ch+s], ecx ; int
		call	dbus_set_error
		mov	[esp+23Ch+var_218], edi
		jmp	loc_67E0EBE0
; ---------------------------------------------------------------------------

loc_67E0EDF4:				; CODE XREF: sub_67E0E8E0+22Ej
					; sub_67E0E8E0+247j
		lea	eax, [esp+23Ch+var_28]
		mov	esi, edx
		mov	[esp+23Ch+namelen], eax	; namelen
		lea	eax, [esp+23Ch+var_54]
		mov	[esp+23Ch+var_28], 1Ch
		mov	[esp+23Ch+name], eax ; name
		mov	[esp+23Ch+s], ebp ; s
		call	ds:getsockname
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E0F0A9
		movzx	eax, word ptr [esp+23Ch+var_54.sa_data]
		lea	ebx, [esp+23Ch+var_38]
		mov	[esp+23Ch+namelen], offset aD ;	"%d"
		mov	[esp+23Ch+name], 9 ; size_t
		mov	[esp+23Ch+s], ebx ; char *
		mov	dword ptr [esp+23Ch+var_230], eax ; char
		call	sub_67E18A60
		mov	edx, [esp+23Ch+arg_C]
		mov	[esp+23Ch+name], ebx ; char *
		mov	[esp+23Ch+s], edx ; int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67E0F128
		mov	eax, [esp+23Ch+arg_C]
		mov	[esp+23Ch+s], eax
		call	sub_67E01770
		mov	[esp+23Ch+arg_4], eax
		mov	eax, [esp+23Ch+var_24]
		mov	[esp+23Ch+s], eax
		call	sub_67E169B0
		sub	esp, 4
		jmp	loc_67E0E9CE
; ---------------------------------------------------------------------------
		align 10h

loc_67E0EEA0:				; CODE XREF: sub_67E0E8E0+288j
		mov	eax, [esp+23Ch+var_24]
		xor	ebx, ebx
		mov	[esp+23Ch+var_21C], edx
		mov	[esp+23Ch+s], eax
		call	sub_67E169B0
		sub	esp, 4
		mov	eax, [esp+23Ch+arg_C]
		lea	esi, [esp+23Ch+var_38]
		mov	[esp+23Ch+var_24], 0
		mov	[esp+23Ch+s], eax
		call	sub_67E01770
		lea	ecx, [esp+23Ch+var_20]
		mov	[esp+23Ch+namelen], ecx
		mov	[esp+23Ch+name], offset	aD ; "%d"
		mov	[esp+23Ch+s], eax ; Src
		call	sscanf
		mov	edx, [esp+23Ch+var_21C]
		mov	edi, ds:SetHandleInformation
		mov	ebp, edx

loc_67E0EF00:				; CODE XREF: sub_67E0E8E0+6ABj
		mov	[esp+23Ch+namelen], 0 ;	dwFlags
		mov	[esp+23Ch+name], 3 ; dwMask
		mov	eax, [ebp+ebx*4+0]
		mov	[esp+23Ch+s], eax ; hObject
		call	edi ; SetHandleInformation
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_67E0EF69
		call	ds:GetLastError
		mov	[esp+23Ch+s], esi
		mov	[esp+23Ch+var_21C], eax
		call	dbus_error_init
		mov	eax, [esp+23Ch+var_21C]
		mov	[esp+23Ch+s], esi ; int
		mov	[esp+23Ch+name], eax ; DWORD
		call	sub_67E0ADC0
		mov	eax, [esp+23Ch+var_34]
		mov	[esp+23Ch+name], offset	aDisablingSocke	; "Disabling socket handle inheritance fai"...
		mov	[esp+23Ch+s], offset aSS ; "%s:	%s\n"
		mov	[esp+23Ch+namelen], eax
		call	sub_67DFAD60
		mov	[esp+23Ch+s], esi
		call	dbus_error_free

loc_67E0EF69:				; CODE XREF: sub_67E0E8E0+63Ej
		mov	edx, [esp+23Ch+arg_14]
		mov	[esp+23Ch+name], edx ; int
		mov	eax, [ebp+ebx*4+0]
		mov	[esp+23Ch+s], eax ; SOCKET
		call	sub_67E0D430
		test	eax, eax
		jz	short loc_67E0EFAF
		add	ebx, 1
		cmp	ebx, [esp+23Ch+var_218]
		jl	loc_67E0EF00
		mov	ecx, [esp+23Ch+arg_10]
		mov	[ecx], ebp
		jmp	loc_67E0EC32
; ---------------------------------------------------------------------------

loc_67E0EF9F:				; CODE XREF: sub_67E0E8E0+9Ej
		mov	[esp+23Ch+var_70], 0
		jmp	loc_67E0E9A3
; ---------------------------------------------------------------------------

loc_67E0EFAF:				; CODE XREF: sub_67E0E8E0+6A2j
		mov	esi, ebp
		jmp	loc_67E0EBE0
; ---------------------------------------------------------------------------

loc_67E0EFB6:				; CODE XREF: sub_67E0E8E0+271j
		mov	ecx, [esp+23Ch+arg_14]
		mov	[esp+23Ch+namelen], 0 ;	char *
		mov	[esp+23Ch+name], offset	aOrg_freedes_44	; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+23Ch+s], ecx ; int
		call	dbus_set_error
		mov	edx, [esp+23Ch+var_21C]
		mov	esi, edx
		jmp	loc_67E0EBE0
; ---------------------------------------------------------------------------

loc_67E0EFE0:				; CODE XREF: sub_67E0E8E0+123j
					; sub_67E0E8E0+132j
		mov	edi, eax
		mov	[esp+23Ch+s], eax
		call	sub_67E0AF00
		mov	esi, dword ptr [esp+23Ch+arg_0]
		test	esi, esi
		mov	ebx, eax
		jz	loc_67E0F099

loc_67E0EFFB:				; CODE XREF: sub_67E0E8E0+7C4j
		mov	[esp+23Ch+s], edi
		call	sub_67E09380
		mov	edx, [esp+23Ch+arg_4]
		mov	ecx, dword ptr [esp+23Ch+arg_0]
		mov	[esp+23Ch+var_224], edi
		mov	[esp+23Ch+var_228], ebx
		mov	[esp+23Ch+var_22C], edx
		mov	dword ptr [esp+23Ch+var_230], ecx ; char
		mov	[esp+23Ch+name], eax ; char *
		mov	eax, [esp+23Ch+arg_14]
		mov	[esp+23Ch+namelen], offset aFailedToLookup ; "Failed to	lookup host/port: \"%s:%s\": "...
		mov	[esp+23Ch+s], eax ; int
		call	dbus_set_error
		mov	[esp+23Ch+var_218], 0FFFFFFFFh
		jmp	loc_67E0EC32
; ---------------------------------------------------------------------------

loc_67E0F049:				; CODE XREF: sub_67E0E8E0+482j
		mov	dword ptr [esp+23Ch+arg_0], offset asc_67E2D5F7	; "*"
		jmp	loc_67E0ED68
; ---------------------------------------------------------------------------

loc_67E0F059:				; CODE XREF: sub_67E0E8E0+402j
		mov	dword ptr [esp+23Ch+arg_0], offset asc_67E2D5F7	; "*"
		jmp	loc_67E0ECE8
; ---------------------------------------------------------------------------

loc_67E0F069:				; CODE XREF: sub_67E0E8E0+3C6j
		mov	ecx, [esp+23Ch+arg_14]
		mov	dword ptr [esp+23Ch+var_230], ebx ; char
		mov	[esp+23Ch+namelen], offset aUnknownAddre_1 ; "Unknown address family %s"
		mov	[esp+23Ch+name], offset	aOrg_freedes_60	; "org.freedesktop.DBus.Error.InvalidArgs"
		mov	[esp+23Ch+s], ecx ; int
		call	dbus_set_error
		mov	[esp+23Ch+var_218], 0FFFFFFFFh
		jmp	loc_67E0EC32
; ---------------------------------------------------------------------------

loc_67E0F099:				; CODE XREF: sub_67E0E8E0+715j
		mov	dword ptr [esp+23Ch+arg_0], offset asc_67E2D5F7	; "*"
		jmp	loc_67E0EFFB
; ---------------------------------------------------------------------------

loc_67E0F0A9:				; CODE XREF: sub_67E0E8E0+546j
		mov	[esp+23Ch+var_21C], esi
		call	ds:WSAGetLastError
		mov	ebx, ds:_errno
		mov	esi, eax
		call	ebx ; _errno
		mov	[eax], esi
		call	sub_67E094E0
		mov	edx, [esp+23Ch+var_21C]
		cmp	dword ptr [esp+23Ch+arg_0], 0
		mov	esi, eax
		jz	loc_67E0F18E

loc_67E0F0D8:				; CODE XREF: sub_67E0E8E0+8B9j
		mov	[esp+23Ch+var_21C], edx
		call	ebx ; _errno
		mov	eax, [eax]
		mov	[esp+23Ch+s], eax
		call	sub_67E09380
		mov	ecx, [esp+23Ch+arg_4]
		mov	[esp+23Ch+var_228], esi
		mov	[esp+23Ch+namelen], offset aFailedToResolv ; "Failed to	resolve	port \"%s:%s\":	%s"
		mov	[esp+23Ch+var_22C], ecx
		mov	ecx, dword ptr [esp+23Ch+arg_0]
		mov	[esp+23Ch+name], eax ; char *
		mov	eax, [esp+23Ch+arg_14]
		mov	dword ptr [esp+23Ch+var_230], ecx ; char
		mov	[esp+23Ch+s], eax ; int
		call	dbus_set_error
		mov	edx, [esp+23Ch+var_21C]
		mov	esi, edx
		jmp	loc_67E0EBE0
; ---------------------------------------------------------------------------

loc_67E0F128:				; CODE XREF: sub_67E0E8E0+58Cj
		mov	ecx, [esp+23Ch+arg_14]
		mov	[esp+23Ch+var_21C], esi
		mov	[esp+23Ch+namelen], 0 ;	char *
		mov	[esp+23Ch+name], offset	aOrg_freedes_44	; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+23Ch+s], ecx ; int
		call	dbus_set_error
		mov	edx, [esp+23Ch+var_21C]
		mov	esi, edx
		jmp	loc_67E0EBE0
; ---------------------------------------------------------------------------

loc_67E0F156:				; CODE XREF: sub_67E0E8E0+38Aj
		mov	[esp+23Ch+namelen], 1F2h
		mov	[esp+23Ch+name], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+23Ch+s], offset aCouldNotInitia ; "Could not initialize WinSock"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67E0F172:				; CODE XREF: sub_67E0E8E0+397j
					; sub_67E0E8E0+3A3j
		mov	[esp+23Ch+namelen], 1FEh
		mov	[esp+23Ch+name], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+23Ch+s], offset aNoUsableWinsoc ; "No usable WinSock found"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67E0F18E:				; CODE XREF: sub_67E0E8E0+7F2j
		mov	dword ptr [esp+23Ch+arg_0], offset asc_67E2D5F7	; "*"
		jmp	loc_67E0F0D8
sub_67E0E8E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0F1A0	proc near		; CODE XREF: sub_67DEE680+CFp
					; sub_67DF8680:loc_67DF8927p

lpMutexAttributes= dword ptr -1Ch
bInitialOwner	= dword	ptr -18h
lpName		= dword	ptr -14h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 1Ch
		mov	eax, ds:lpName
		mov	[esp+1Ch+var_C], ebx
		mov	[esp+1Ch+var_8], esi
		mov	[esp+1Ch+var_4], edi
		mov	[esp+1Ch+lpName], eax ;	lpName
		mov	[esp+1Ch+bInitialOwner], 0 ; bInitialOwner
		mov	[esp+1Ch+lpMutexAttributes], 0 ; lpMutexAttributes
		call	ds:CreateMutexA
		sub	esp, 0Ch
		test	eax, eax
		mov	ebx, eax
		jnz	short loc_67E0F240

loc_67E0F1D6:				; CODE XREF: sub_67E0F1A0+C3j
					; sub_67E0F1A0+F2j
		mov	edi, ds:ReleaseMutex
		mov	esi, ds:CloseHandle

loc_67E0F1E2:				; CODE XREF: sub_67E0F1A0+E7j
		mov	eax, ds:hFileMappingObject
		mov	[esp+1Ch+lpMutexAttributes], eax ; hObject
		call	esi ; CloseHandle
		mov	eax, ds:hHandle
		mov	ds:hFileMappingObject, 0
		sub	esp, 4
		mov	[esp+1Ch+lpMutexAttributes], eax ; hMutex
		call	edi ; ReleaseMutex
		mov	eax, ds:hHandle
		sub	esp, 4
		mov	[esp+1Ch+lpMutexAttributes], eax ; hObject
		call	esi ; CloseHandle
		mov	ds:hHandle, 0
		sub	esp, 4
		mov	[esp+1Ch+lpMutexAttributes], ebx ; hMutex
		call	edi ; ReleaseMutex
		sub	esp, 4
		mov	[esp+1Ch+lpMutexAttributes], ebx ; hObject
		call	esi ; CloseHandle
		sub	esp, 4
		mov	ebx, [esp+1Ch+var_C]
		mov	esi, [esp+1Ch+var_8]
		mov	edi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0F240:				; CODE XREF: sub_67E0F1A0+34j
		mov	[esp+1Ch+bInitialOwner], 0FFFFFFFFh ; dwMilliseconds
		mov	[esp+1Ch+lpMutexAttributes], eax ; hHandle
		call	ds:WaitForSingleObject
		sub	esp, 8
		cmp	eax, 102h
		jz	short loc_67E0F290
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E0F290
		add	eax, 0FFFFFF80h
		jnz	loc_67E0F1D6
		mov	edi, ds:ReleaseMutex
		mov	[esp+1Ch+lpMutexAttributes], ebx ; hMutex
		call	edi ; ReleaseMutex
		mov	esi, ds:CloseHandle
		sub	esp, 4
		mov	[esp+1Ch+lpMutexAttributes], ebx ; hObject
		xor	ebx, ebx
		call	esi ; CloseHandle
		sub	esp, 4
		jmp	loc_67E0F1E2
; ---------------------------------------------------------------------------
		align 10h

loc_67E0F290:				; CODE XREF: sub_67E0F1A0+B9j
					; sub_67E0F1A0+BEj
		xor	ebx, ebx
		jmp	loc_67E0F1D6
sub_67E0F1A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_67E0F2A0	proc near		; CODE XREF: sub_67E0F4D0+12p
					; sub_67E0F7C0+14p ...

ProcessHandle	= dword	ptr -68h
DesiredAccess	= dword	ptr -64h
TokenHandle	= dword	ptr -60h
TokenInformationLength=	dword ptr -5Ch
ReturnLength	= dword	ptr -58h
var_45		= byte ptr -45h
StringSid	= dword	ptr -3Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
hObject		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	[ebp+StringSid], eax
		mov	[ebp+hObject], 0FFFFFFFFh
		call	ds:GetCurrentProcess
		lea	edx, [ebp+hObject]
		mov	[esp+68h+TokenHandle], edx ; TokenHandle
		mov	[esp+68h+DesiredAccess], 8 ; DesiredAccess
		mov	[esp+68h+ProcessHandle], eax ; ProcessHandle
		call	ds:OpenProcessToken
		sub	esp, 0Ch
		test	eax, eax
		jnz	loc_67E0F368
		call	ds:GetLastError
		lea	ebx, [ebp+var_30]
		mov	[esp+68h+ProcessHandle], ebx
		mov	esi, eax
		call	dbus_error_init
		mov	[esp+68h+DesiredAccess], esi ; DWORD
		mov	[esp+68h+ProcessHandle], ebx ; int
		call	sub_67E0ADC0
		mov	eax, [ebp+var_2C]
		mov	[esp+68h+DesiredAccess], offset	aOpenprocesstok	; "OpenProcessToken failed"
		mov	[esp+68h+TokenHandle], eax

loc_67E0F30A:				; CODE XREF: sub_67E0F2A0+164j
		mov	[esp+68h+ProcessHandle], offset	aSS ; "%s: %s\n"
		xor	esi, esi
		call	sub_67DFAD60
		mov	[esp+68h+ProcessHandle], ebx
		xor	ebx, ebx
		call	dbus_error_free

loc_67E0F322:				; CODE XREF: sub_67E0F2A0+1B5j
					; sub_67E0F2A0+1ECj ...
		mov	eax, [ebp+hObject]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E0F336
		mov	[esp+68h+ProcessHandle], eax ; hObject
		call	ds:CloseHandle
		sub	esp, 4

loc_67E0F336:				; CODE XREF: sub_67E0F2A0+88j
		mov	[esp+68h+ReturnLength],	esi ; char
		mov	[esp+68h+TokenInformationLength], offset a_dbus_getsidRe ; "_dbus_getsid() returns %d\n"
		mov	[esp+68h+TokenHandle], offset a_dbus_getsid ; "_dbus_getsid"
		mov	[esp+68h+DesiredAccess], 313h ;	int
		mov	[esp+68h+ProcessHandle], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		lea	esp, [ebp-0Ch]
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0F368:				; CODE XREF: sub_67E0F2A0+36j
		mov	eax, [ebp+hObject]
		lea	edi, [ebp+var_20]
		mov	esi, ds:GetTokenInformation
		mov	[esp+68h+ReturnLength],	edi ; ReturnLength
		mov	[esp+68h+TokenInformationLength], 0 ; TokenInformationLength
		mov	[esp+68h+TokenHandle], 0 ; TokenInformation
		mov	[esp+68h+DesiredAccess], 1 ; TokenInformationClass
		mov	[esp+68h+ProcessHandle], eax ; TokenHandle
		call	esi ; GetTokenInformation
		sub	esp, 14h
		test	eax, eax
		jz	short loc_67E0F410

loc_67E0F39C:				; CODE XREF: sub_67E0F2A0+180j
		mov	edx, [ebp+var_20]
		lea	eax, [edx+1Eh]
		and	eax, 0FFFFFFF0h
		call	sub_67E18840
		mov	eax, [ebp+hObject]
		lea	ebx, [esp+68h+var_45]
		and	ebx, 0FFFFFFF0h
		mov	[esp+68h+ReturnLength],	edi ; ReturnLength
		mov	[esp+68h+TokenInformationLength], edx ;	TokenInformationLength
		mov	[esp+68h+TokenHandle], ebx ; TokenInformation
		mov	[esp+68h+DesiredAccess], 1 ; TokenInformationClass
		mov	[esp+68h+ProcessHandle], eax ; TokenHandle
		call	esi ; GetTokenInformation
		sub	esp, 14h
		test	eax, eax
		jnz	short loc_67E0F425
		mov	ebx, ds:GetLastError

loc_67E0F3DA:				; CODE XREF: sub_67E0F2A0+17Bj
		call	ebx ; GetLastError
		lea	ebx, [ebp+var_30]
		mov	[esp+68h+ProcessHandle], ebx
		mov	esi, eax
		call	dbus_error_init
		mov	[esp+68h+DesiredAccess], esi ; DWORD
		mov	[esp+68h+ProcessHandle], ebx ; int
		call	sub_67E0ADC0
		mov	eax, [ebp+var_2C]
		mov	[esp+68h+DesiredAccess], offset	aGettokeninform	; "GetTokenInformation failed"
		mov	[esp+68h+TokenHandle], eax
		jmp	loc_67E0F30A
; ---------------------------------------------------------------------------
		align 10h

loc_67E0F410:				; CODE XREF: sub_67E0F2A0+FAj
		mov	ebx, ds:GetLastError
		call	ebx ; GetLastError
		cmp	eax, 7Ah
		jnz	short loc_67E0F3DA
		lea	esi, [esi+0]
		jmp	loc_67E0F39C
; ---------------------------------------------------------------------------

loc_67E0F425:				; CODE XREF: sub_67E0F2A0+132j
		mov	ebx, [ebx]
		mov	[esp+68h+ProcessHandle], ebx ; pSid
		call	ds:IsValidSid
		sub	esp, 4
		test	eax, eax
		jz	short loc_67E0F491
		mov	eax, [ebp+StringSid]
		mov	esi, 1
		mov	[esp+68h+ProcessHandle], ebx ; Sid
		mov	ebx, 1
		mov	[esp+68h+DesiredAccess], eax ; StringSid
		call	ConvertSidToStringSidA
		sub	esp, 8
		test	eax, eax
		jnz	loc_67E0F322
		mov	[esp+68h+ReturnLength],	offset a_dbus_getsid ; "_dbus_getsid"
		xor	bl, bl
		xor	si, si
		mov	[esp+68h+TokenInformationLength], offset aSInvalidSid ;	"%s invalid sid\n"
		mov	[esp+68h+TokenHandle], offset a_dbus_getsid ; "_dbus_getsid"
		mov	[esp+68h+DesiredAccess], 309h ;	int
		mov	[esp+68h+ProcessHandle], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67E0F322
; ---------------------------------------------------------------------------

loc_67E0F491:				; CODE XREF: sub_67E0F2A0+195j
		mov	[esp+68h+ReturnLength],	offset a_dbus_getsid ; "_dbus_getsid"
		xor	ebx, ebx
		xor	esi, esi
		mov	[esp+68h+TokenInformationLength], offset aSInvalidSid ;	"%s invalid sid\n"
		mov	[esp+68h+TokenHandle], offset a_dbus_getsid ; "_dbus_getsid"
		mov	[esp+68h+DesiredAccess], 304h ;	int
		mov	[esp+68h+ProcessHandle], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67E0F322
sub_67E0F2A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0F4D0	proc near		; CODE XREF: sub_67DC38A0+3Ap
					; sub_67DC3920+33p ...

hMem		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		xor	ebx, ebx
		sub	esp, 28h
		lea	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_10], 0
		call	sub_67E0F2A0
		test	eax, eax
		jz	short loc_67E0F511
		mov	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_28], eax ;	char *
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+hMem],	eax ; int
		call	sub_67E08C10
		mov	ebx, eax
		mov	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+hMem],	eax ; hMem
		call	ds:LocalFree
		sub	esp, 4

loc_67E0F511:				; CODE XREF: sub_67E0F4D0+19j
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
sub_67E0F4D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __fastcall sub_67E0F520(char *, char *)
sub_67E0F520	proc near		; CODE XREF: sub_67E0F640+23p
					; sub_67E0FCC0+69p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_30		= byte ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 4Ch
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, ecx
		mov	[esp+4Ch+var_C], esi
		mov	esi, edx
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, eax
		mov	[esp+4Ch+var_8], edi
		mov	[esp+4Ch+var_4C], eax
		call	sub_67E03350
		mov	[esp+4Ch+var_48], esi ;	char *
		mov	[esp+4Ch+var_4C], ebp ;	int
		call	sub_67E08C10
		test	ebx, ebx
		jz	short loc_67E0F58A
		mov	edi, offset aInstallPath ; "*install-path"
		mov	ecx, 0Eh
		mov	esi, ebx
		repe cmpsb
		jz	short loc_67E0F591
		mov	edi, offset aInstallPath_0 ; "install-path"
		mov	ecx, 0Dh
		mov	esi, ebx
		repe cmpsb
		jz	short loc_67E0F591
		mov	edi, offset aUser ; "*user"
		mov	ecx, 6
		mov	esi, ebx
		repe cmpsb
		jz	loc_67E0F616
		cmp	byte ptr [ebx],	0
		jnz	short loc_67E0F5F3

loc_67E0F58A:				; CODE XREF: sub_67E0F520+2Fj
					; sub_67E0F520+110j
		mov	eax, 1
		jmp	short loc_67E0F5AA
; ---------------------------------------------------------------------------

loc_67E0F591:				; CODE XREF: sub_67E0F520+3Fj
					; sub_67E0F520+4Fj
		lea	ebx, [esp+4Ch+var_30]
		mov	eax, ebx
		call	sub_67E0B480
		test	eax, eax
		jnz	short loc_67E0F5C0

loc_67E0F5A0:				; CODE XREF: sub_67E0F520+116j
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67E02BF0
		xor	eax, eax

loc_67E0F5AA:				; CODE XREF: sub_67E0F520+6Fj
					; sub_67E0F520+D1j ...
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0F5C0:				; CODE XREF: sub_67E0F520+7Ej
		mov	[esp+4Ch+var_48], offset asc_67E2D785 ;	"-"
		mov	[esp+4Ch+var_4C], ebp ;	int
		call	sub_67E08C10
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E01770
		mov	[esp+4Ch+var_4C], ebp ;	int
		mov	[esp+4Ch+var_48], eax ;	char *
		call	sub_67E08C10
		mov	[esp+4Ch+var_4C], ebx
		call	sub_67E02BF0
		mov	eax, 1
		jmp	short loc_67E0F5AA
; ---------------------------------------------------------------------------

loc_67E0F5F3:				; CODE XREF: sub_67E0F520+68j
		mov	[esp+4Ch+var_48], offset asc_67E2D785 ;	"-"
		mov	[esp+4Ch+var_4C], ebp ;	int
		call	sub_67E08C10
		mov	[esp+4Ch+var_48], ebx ;	char *
		mov	[esp+4Ch+var_4C], ebp ;	int
		call	sub_67E08C10
		mov	eax, 1
		jmp	short loc_67E0F5AA
; ---------------------------------------------------------------------------

loc_67E0F616:				; CODE XREF: sub_67E0F520+5Fj
		mov	[esp+4Ch+var_48], offset asc_67E2D785 ;	"-"
		mov	[esp+4Ch+var_4C], ebp ;	int
		call	sub_67E08C10
		mov	[esp+4Ch+var_4C], ebp
		call	sub_67E0F4D0
		test	eax, eax
		jnz	loc_67E0F58A
		jmp	loc_67E0F5A0
sub_67E0F520	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0F640(char	*)
sub_67E0F640	proc near		; CODE XREF: sub_67DF8680+C5p

lpMutexAttributes= dword ptr -5Ch
bInitialOwner	= dword	ptr -58h
lpName		= dword	ptr -54h
var_40		= dword	ptr -40h
var_30		= byte ptr -30h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 5Ch
		mov	edx, ds:off_67E2DCE8 ; char *
		mov	ecx, [esp+5Ch+arg_0] ; char *
		mov	[esp+5Ch+var_10], ebx
		lea	ebx, [esp+5Ch+var_30]
		mov	eax, ebx
		mov	[esp+5Ch+var_C], esi
		mov	[esp+5Ch+var_8], edi
		mov	[esp+5Ch+var_4], ebp
		call	sub_67E0F520
		test	eax, eax
		jz	short loc_67E0F690
		mov	edx, ds:hHandle
		mov	eax, 1
		test	edx, edx
		jz	short loc_67E0F6A0

loc_67E0F67B:				; CODE XREF: sub_67E0F640+5Aj
					; sub_67E0F640+F3j ...
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0F690:				; CODE XREF: sub_67E0F640+2Aj
		mov	[esp+5Ch+lpMutexAttributes], ebx
		call	sub_67E02BF0
		xor	eax, eax
		jmp	short loc_67E0F67B
; ---------------------------------------------------------------------------
		align 10h

loc_67E0F6A0:				; CODE XREF: sub_67E0F640+39j
		mov	eax, ds:lpName
		mov	edi, ds:CreateMutexA
		mov	[esp+5Ch+bInitialOwner], 0 ; bInitialOwner
		mov	[esp+5Ch+lpMutexAttributes], 0 ; lpMutexAttributes
		mov	[esp+5Ch+lpName], eax ;	lpName
		call	edi ; CreateMutexA
		sub	esp, 0Ch
		test	eax, eax
		mov	esi, eax
		jnz	loc_67E0F760

loc_67E0F6CD:				; CODE XREF: sub_67E0F640+143j
					; sub_67E0F640+171j
		mov	eax, ds:ReleaseMutex
		mov	ebp, ds:CloseHandle
		mov	[esp+5Ch+var_40], eax

loc_67E0F6DC:				; CODE XREF: sub_67E0F640+16Aj
		mov	[esp+5Ch+lpMutexAttributes], ebx
		call	sub_67E01770
		mov	[esp+5Ch+bInitialOwner], 0 ; bInitialOwner
		mov	[esp+5Ch+lpMutexAttributes], 0 ; lpMutexAttributes
		mov	[esp+5Ch+lpName], eax ;	lpName
		call	edi ; CreateMutexA
		sub	esp, 0Ch
		mov	ds:hHandle, eax
		mov	[esp+5Ch+lpMutexAttributes], esi
		call	[esp+5Ch+var_40]
		sub	esp, 4
		mov	[esp+5Ch+lpMutexAttributes], esi ; hObject
		call	ebp ; CloseHandle
		sub	esp, 4
		mov	[esp+5Ch+lpMutexAttributes], ebx
		call	sub_67E02BF0
		mov	eax, ds:hHandle
		test	eax, eax
		jz	short loc_67E0F731
		call	ds:GetLastError
		cmp	eax, 0B7h
		jz	short loc_67E0F738

loc_67E0F731:				; CODE XREF: sub_67E0F640+E2j
		xor	eax, eax
		jmp	loc_67E0F67B
; ---------------------------------------------------------------------------

loc_67E0F738:				; CODE XREF: sub_67E0F640+EFj
		mov	eax, ds:hHandle
		mov	[esp+5Ch+lpMutexAttributes], eax ; hObject
		call	ebp ; CloseHandle
		mov	eax, 1
		mov	ds:hHandle, 0
		sub	esp, 4
		jmp	loc_67E0F67B
; ---------------------------------------------------------------------------
		align 10h

loc_67E0F760:				; CODE XREF: sub_67E0F640+87j
		mov	[esp+5Ch+bInitialOwner], 0FFFFFFFFh ; dwMilliseconds
		mov	[esp+5Ch+lpMutexAttributes], eax ; hHandle
		call	ds:WaitForSingleObject
		sub	esp, 8
		cmp	eax, 102h
		jz	short loc_67E0F7AF
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E0F7AF
		add	eax, 0FFFFFF80h
		jnz	loc_67E0F6CD
		mov	eax, ds:ReleaseMutex
		mov	[esp+5Ch+lpMutexAttributes], esi ; hMutex
		mov	[esp+5Ch+var_40], eax
		call	eax ; ReleaseMutex
		mov	ebp, ds:CloseHandle
		sub	esp, 4
		mov	[esp+5Ch+lpMutexAttributes], esi ; hObject
		xor	esi, esi
		call	ebp ; CloseHandle
		sub	esp, 4
		jmp	loc_67E0F6DC
; ---------------------------------------------------------------------------

loc_67E0F7AF:				; CODE XREF: sub_67E0F640+139j
					; sub_67E0F640+13Ej
		xor	esi, esi
		jmp	loc_67E0F6CD
sub_67E0F640	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E0F7C0	proc near		; CODE XREF: sub_67DD5B20+42p
					; sub_67DD7930+2C3p

hMem		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		lea	eax, [esp+2Ch+var_10]
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_10], 0
		call	sub_67E0F2A0
		test	eax, eax
		jnz	short loc_67E0F800

loc_67E0F7DD:				; CODE XREF: sub_67E0F7C0+54j
					; sub_67E0F7C0+6Fj
		xor	ebx, ebx

loc_67E0F7DF:				; CODE XREF: sub_67E0F7C0+6Dj
		mov	eax, [esp+2Ch+var_10]
		test	eax, eax
		jz	short loc_67E0F7F3
		mov	[esp+2Ch+hMem],	eax ; hMem
		call	ds:LocalFree
		sub	esp, 4

loc_67E0F7F3:				; CODE XREF: sub_67E0F7C0+25j
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0F800:				; CODE XREF: sub_67E0F7C0+1Bj
		call	ds:GetCurrentProcessId
		mov	[esp+2Ch+hMem],	ebx
		mov	[esp+2Ch+var_28], eax
		call	sub_67DD5580
		test	eax, eax
		jz	short loc_67E0F7DD
		mov	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+hMem],	ebx ; int
		mov	ebx, 1
		mov	[esp+2Ch+var_28], eax ;	char *
		call	sub_67DD5930
		test	eax, eax
		jnz	short loc_67E0F7DF
		jmp	short loc_67E0F7DD
sub_67E0F7C0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67E0F840
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0F840(SOCKET s, int)
sub_67E0F840	proc near		; CODE XREF: sub_67DF6A20+466p
					; .text:67E0F831j

hMem		= dword	ptr -6Ch
buf		= dword	ptr -68h
len		= dword	ptr -64h
flags		= dword	ptr -60h
var_5C		= byte ptr -5Ch
var_58		= dword	ptr -58h
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_34		= byte ptr -34h
var_20		= dword	ptr -20h
s		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		lea	edi, [esp+6Ch+var_34]
		mov	esi, [esp+6Ch+s]
		mov	[esp+6Ch+hMem],	edi
		call	sub_67E03350
		test	eax, eax
		jnz	short loc_67E0F8C0

loc_67E0F85B:				; CODE XREF: sub_67E0F840+210j
		lea	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+var_20], 0
		call	sub_67E0F2A0
		test	eax, eax
		jnz	loc_67E0FA55

loc_67E0F874:				; CODE XREF: sub_67E0F840+22Dj
					; sub_67E0F840+247j
		mov	eax, [esp+6Ch+var_20]
		test	eax, eax
		jz	short loc_67E0F888
		mov	[esp+6Ch+hMem],	eax ; hMem
		call	ds:LocalFree
		sub	esp, 4

loc_67E0F888:				; CODE XREF: sub_67E0F840+3Aj
		mov	[esp+6Ch+flags], offset	aFixmeGetFakedC	; "FIXME: get faked credentials	from curre"...
		mov	[esp+6Ch+len], offset a_dbus_read_cre ;	"_dbus_read_credentials_socket"
		mov	[esp+6Ch+buf], 6ADh ; int
		mov	[esp+6Ch+hMem],	offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 5Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E0F8C0:				; CODE XREF: sub_67E0F840+19j
		mov	dword ptr [esp+6Ch+var_5C], offset a_dbus_read_soc ; "_dbus_read_socket"
		mov	[esp+6Ch+flags], 0C1h
		mov	[esp+6Ch+len], offset aRBuildWin32_32 ;	"r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+buf], offset aCount0 ;	"count >= 0"
		mov	[esp+6Ch+hMem],	1
		call	sub_67DFAE70
		mov	[esp+6Ch+hMem],	edi
		call	sub_67E00CE0
		mov	[esp+6Ch+buf], 1
		mov	[esp+6Ch+hMem],	edi
		mov	[esp+6Ch+var_40], eax
		call	sub_67E087C0
		test	eax, eax
		jz	loc_67E0FAD0
		mov	eax, [esp+6Ch+var_40]
		mov	[esp+6Ch+len], 1
		mov	[esp+6Ch+hMem],	edi
		mov	[esp+6Ch+buf], eax
		call	sub_67E014C0
		mov	ebp, ds:_errno
		mov	[esp+6Ch+var_44], eax
		jmp	short loc_67E0F976
; ---------------------------------------------------------------------------

loc_67E0F934:				; CODE XREF: sub_67E0F840+18Fj
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		mov	[esp+6Ch+flags], offset	aRecvD ; "recv:	= %d\n"
		mov	[esp+6Ch+len], offset a_dbus_read_soc ;	"_dbus_read_socket"
		mov	[esp+6Ch+buf], 0D9h ; int
		mov	[esp+6Ch+hMem],	offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		test	ebx, ebx
		jns	loc_67E0FA90
		mov	ebx, ds:_errno
		call	ebx ; _errno
		cmp	dword ptr [eax], 4
		nop
		jnz	loc_67E0FA38

loc_67E0F976:				; CODE XREF: sub_67E0F840+F2j
					; sub_67E0F840+1F2j
		mov	[esp+6Ch+var_58], esi
		mov	dword ptr [esp+6Ch+var_5C], 1 ;	char
		mov	[esp+6Ch+flags], offset	aRecvCountDFdD ; "recv:	count=%d fd=%d\n"
		mov	[esp+6Ch+len], offset a_dbus_read_soc ;	"_dbus_read_socket"
		mov	[esp+6Ch+buf], 0CFh ; int
		mov	[esp+6Ch+hMem],	offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+6Ch+var_44]
		mov	[esp+6Ch+flags], 0 ; flags
		mov	[esp+6Ch+len], 1 ; len
		mov	[esp+6Ch+hMem],	esi ; s
		mov	[esp+6Ch+buf], eax ; buf
		call	ds:recv
		sub	esp, 10h
		cmp	eax, 0FFFFFFFFh
		mov	ebx, eax
		jnz	loc_67E0F934
		call	ds:WSAGetLastError
		mov	ebx, ebp
		mov	[esp+6Ch+var_48], eax
		call	ebp ; _errno
		mov	edx, [esp+6Ch+var_48]
		mov	[eax], edx
		call	ebp ; _errno
		mov	edx, [eax]
		mov	[esp+6Ch+var_48], edx
		call	ebp ; _errno
		mov	eax, [eax]
		mov	[esp+6Ch+hMem],	eax
		call	sub_67E0AF00
		mov	edx, [esp+6Ch+var_48]
		mov	[esp+6Ch+flags], offset	aRecvFailedSD ;	"recv: failed: %s (%d)\n"
		mov	[esp+6Ch+len], offset a_dbus_read_soc ;	"_dbus_read_socket"
		mov	[esp+6Ch+buf], 0D5h ; int
		mov	[esp+6Ch+var_58], edx
		mov	[esp+6Ch+hMem],	offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+6Ch+var_5C], eax	; char
		call	sub_67DFABC0
		call	ebx
		cmp	dword ptr [eax], 4
		jz	loc_67E0F976

loc_67E0FA38:				; CODE XREF: sub_67E0F840+130j
		mov	eax, [esp+6Ch+var_40]
		mov	[esp+6Ch+hMem],	edi
		mov	[esp+6Ch+buf], eax
		call	sub_67E06F60

loc_67E0FA48:				; CODE XREF: sub_67E0F840+265j
					; sub_67E0F840+28Bj ...
		mov	[esp+6Ch+hMem],	edi
		call	sub_67E02BF0
		jmp	loc_67E0F85B
; ---------------------------------------------------------------------------

loc_67E0FA55:				; CODE XREF: sub_67E0F840+2Ej
		call	ds:GetCurrentProcessId
		mov	[esp+6Ch+buf], eax
		mov	eax, [esp+6Ch+arg_4]
		mov	[esp+6Ch+hMem],	eax
		call	sub_67DD5580
		test	eax, eax
		jz	loc_67E0F874
		mov	eax, [esp+6Ch+var_20]
		mov	[esp+6Ch+buf], eax ; char *
		mov	eax, [esp+6Ch+arg_4]
		mov	[esp+6Ch+hMem],	eax ; int
		call	sub_67DD5930
		jmp	loc_67E0F874
; ---------------------------------------------------------------------------
		align 10h

loc_67E0FA90:				; CODE XREF: sub_67E0F840+11Ej
		mov	eax, [esp+6Ch+var_40]
		mov	[esp+6Ch+hMem],	edi
		lea	eax, [ebx+eax]
		mov	[esp+6Ch+buf], eax
		call	sub_67E06F60
		test	ebx, ebx
		jz	short loc_67E0FA48
		mov	[esp+6Ch+flags], offset	aGotOneZeroByte	; "got one zero	byte from server"
		mov	[esp+6Ch+len], offset a_dbus_read_cre ;	"_dbus_read_credentials_socket"
		mov	[esp+6Ch+buf], 6A7h ; int
		mov	[esp+6Ch+hMem],	offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67E0FA48
; ---------------------------------------------------------------------------

loc_67E0FAD0:				; CODE XREF: sub_67E0F840+CAj
		call	ds:_errno
		mov	dword ptr [eax], 0Ch
		lea	esi, [esi+0]
		jmp	loc_67E0FA48
sub_67E0F840	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	eax, [esp+30h]
		mov	[esp+24h], ebx
		mov	[esp+28h], esi
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 3
		mov	[esp], eax
		call	ds:SetHandleInformation
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_67E0FB63
		call	ds:GetLastError
		lea	ebx, [esp+10h]
		mov	[esp], ebx
		mov	esi, eax
		call	dbus_error_init
		mov	[esp+4], esi
		mov	[esp], ebx
		call	sub_67E0ADC0
		mov	eax, [esp+14h]
		mov	dword ptr [esp+4], offset aDisablingSocke ; "Disabling socket handle inheritance fai"...
		mov	dword ptr [esp], offset	aSS ; "%s: %s\n"
		mov	[esp+8], eax
		call	sub_67DFAD60
		mov	[esp], ebx
		call	dbus_error_free

loc_67E0FB63:				; CODE XREF: .text:67E0FB1Dj
		mov	ebx, [esp+24h]
		mov	esi, [esp+28h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 424h
		lea	ebx, [esp+40Ch]
		mov	[esp], ebx
		call	sub_67E03350
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jnz	short loc_67E0FB98

loc_67E0FB8F:				; CODE XREF: .text:67E0FCBBj
		add	esp, 424h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E0FB98:				; CODE XREF: .text:67E0FB8Dj
		lea	esi, [esp+3F8h]
		mov	dword ptr [esp+4], offset aShare ; "share"
		mov	[esp], esi
		call	sub_67E03060
		mov	[esp], esi
		call	sub_67E00CE0
		test	eax, eax
		jle	short loc_67E0FBF7
		mov	dword ptr [esp+4], 1
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 3Ah
		jz	short loc_67E0FC20
		mov	dword ptr [esp+4], 0
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 5Ch
		jz	short loc_67E0FC20
		mov	dword ptr [esp+4], 0
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 2Fh
		jz	short loc_67E0FC20

loc_67E0FBF7:				; CODE XREF: .text:67E0FBB9j
		lea	esi, [esp+10h]
		mov	dword ptr [esp+4], 3E8h
		mov	[esp], esi
		call	sub_67E0B2F0
		test	eax, eax
		jz	short loc_67E0FC20
		mov	[esp+4], esi
		mov	[esp], ebx
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67E0FC34
		nop

loc_67E0FC20:				; CODE XREF: .text:67E0FBCDj
					; .text:67E0FBE1j ...
		mov	dword ptr [esp+4], offset aShare ; "share"
		mov	[esp], ebx
		call	sub_67E08C10
		test	eax, eax
		jnz	short loc_67E0FC47

loc_67E0FC34:				; CODE XREF: .text:67E0FC1Dj
					; .text:67E0FC59j ...
		mov	[esp], ebx
		call	sub_67E02BF0
		add	esp, 424h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E0FC47:				; CODE XREF: .text:67E0FC32j
		mov	dword ptr [esp+4], offset asc_67E2D7E4 ; ";"
		mov	[esp], ebx
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67E0FC34
		mov	dword ptr [esp], offset	aCommonprogramf	; "CommonProgramFiles"
		call	sub_67E09AD0
		test	eax, eax
		jz	short loc_67E0FC8F
		mov	[esp+4], eax
		mov	[esp], ebx
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67E0FC34
		mov	dword ptr [esp+4], offset asc_67E2D7E4 ; ";"
		mov	[esp], ebx
		call	sub_67E08C10
		test	eax, eax
		jz	short loc_67E0FC34

loc_67E0FC8F:				; CODE XREF: .text:67E0FC69j
		mov	eax, [esp+430h]
		mov	dword ptr [esp+4], offset aDbus1Services ; "/dbus-1/services"
		mov	[esp], ebx
		mov	[esp+8], eax
		call	sub_67E097E0
		test	eax, eax
		jz	short loc_67E0FC34
		mov	[esp], ebx
		call	sub_67E02BF0
		mov	eax, 1
		jmp	loc_67E0FB8F

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E0FCC0(char	*, int,	int)
sub_67E0FCC0	proc near		; CODE XREF: sub_67DF3810+12Ap

var_4F0		= dword	ptr -4F0h
lpMutexAttributes= dword ptr -4ECh
bInitialOwner	= dword	ptr -4E8h
lpName		= dword	ptr -4E4h
nBufferLength	= dword	ptr -4E0h
lpBuffer	= dword	ptr -4DCh
lpFilePart	= dword	ptr -4D8h
lpEnvironment	= dword	ptr -4D4h
lpCurrentDirectory= dword ptr -4D0h
lpStartupInfo	= dword	ptr -4CCh
lpProcessInformation= dword ptr	-4C8h
var_4B0		= dword	ptr -4B0h
var_4AC		= dword	ptr -4ACh
var_4A8		= dword	ptr -4A8h
var_4A4		= dword	ptr -4A4h
var_4A0		= dword	ptr -4A0h
Dest		= byte ptr -498h
Filename	= byte ptr -290h
Buffer		= byte ptr -18Ch
var_88		= dword	ptr -88h
var_44		= byte ptr -44h
ProcessInformation= _PROCESS_INFORMATION ptr -30h
FilePart	= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4DCh
		mov	ebx, [esp+4ECh+arg_8]
		mov	edi, [esp+4ECh+arg_0]
		test	ebx, ebx
		jz	loc_67E0FFC1
		mov	[esp+4ECh+lpMutexAttributes], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E0FFC1

loc_67E0FCF2:				; CODE XREF: sub_67E0FCC0+306j
		mov	[esp+4ECh+lpMutexAttributes], edx
		mov	[esp+4ECh+lpBuffer], offset a_dbus_get_auto ; "_dbus_get_autolaunch_address"
		mov	[esp+4ECh+nBufferLength], 0B2Ah
		mov	[esp+4ECh+lpName], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4ECh+bInitialOwner], offset aErrorNullDb_25 ; "(error) == NULL || !dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	edx, ds:off_67E2DCBC ; char *
		mov	ecx, edi	; char *
		lea	eax, [esp+4ECh+var_44]
		call	sub_67E0F520
		test	eax, eax
		jz	loc_67E10160
		mov	eax, ds:off_67E2DC84
		mov	[esp+4ECh+bInitialOwner], 0 ; bInitialOwner
		mov	[esp+4ECh+lpMutexAttributes], 0	; lpMutexAttributes
		mov	[esp+4ECh+lpName], eax ; lpName
		mov	eax, ds:CreateMutexA
		mov	[esp+4ECh+var_4A4], eax
		call	eax ; CreateMutexA
		sub	esp, 0Ch
		test	eax, eax
		mov	ebp, eax
		jnz	loc_67E10187

loc_67E0FD66:				; CODE XREF: sub_67E0FCC0+4F2j
					; sub_67E0FCC0+642j
		mov	eax, ds:ReleaseMutex
		mov	[esp+4ECh+var_4A8], eax
		mov	eax, ds:CloseHandle
		mov	[esp+4ECh+var_4AC], eax

loc_67E0FD78:				; CODE XREF: sub_67E0FCC0+51Cj
		mov	edx, ds:off_67E2DCE8 ; char *
		lea	esi, [esp+4ECh+Filename]
		mov	ecx, edi	; char *
		mov	eax, esi
		call	sub_67E0F520
		test	eax, eax
		jz	loc_67E0FE3B
		mov	eax, ds:lpName
		mov	[esp+4ECh+bInitialOwner], 0
		mov	[esp+4ECh+lpMutexAttributes], 0
		mov	[esp+4ECh+lpName], eax
		call	[esp+4ECh+var_4A4]
		sub	esp, 0Ch
		test	eax, eax
		mov	edi, eax
		jnz	loc_67E10290
		mov	eax, ds:WaitForSingleObject
		mov	[esp+4ECh+var_4A0], eax

loc_67E0FDC8:				; CODE XREF: sub_67E0FCC0+5F8j
					; sub_67E0FCC0+614j
		mov	[esp+4ECh+lpMutexAttributes], esi
		call	sub_67E01770
		mov	[esp+4ECh+bInitialOwner], 0
		mov	[esp+4ECh+lpMutexAttributes], 0
		mov	[esp+4ECh+lpName], eax
		call	[esp+4ECh+var_4A4]
		sub	esp, 0Ch
		mov	[esp+4F0h+var_4A8], eax
		mov	[esp+4F0h+lpMutexAttributes], 0Ah
		mov	[esp+4F0h+var_4F0], eax
		call	[esp+4F0h+var_4A4]
		sub	esp, 8
		cmp	eax, 102h
		jz	loc_67E10200
		mov	eax, [esp+4ECh+var_4A4]
		mov	[esp+4ECh+lpMutexAttributes], eax
		call	[esp+4ECh+var_4A8]
		sub	esp, 4
		mov	eax, [esp+4ECh+var_4A4]
		mov	[esp+4ECh+lpMutexAttributes], eax
		call	[esp+4ECh+var_4AC]
		sub	esp, 4
		mov	[esp+4ECh+lpMutexAttributes], edi
		call	[esp+4ECh+var_4A8]
		sub	esp, 4
		mov	[esp+4ECh+lpMutexAttributes], edi
		call	[esp+4ECh+var_4AC]
		sub	esp, 4

loc_67E0FE3B:				; CODE XREF: sub_67E0FCC0+D0j
		mov	[esp+4ECh+lpMutexAttributes], esi
		call	sub_67E02BF0

loc_67E0FE43:				; CODE XREF: sub_67E0FCC0+589j
		lea	eax, [esp+4ECh+Buffer]
		mov	[esp+4ECh+lpBuffer], eax ; char
		mov	eax, ds:SearchPathA
		lea	edi, [esp+4ECh+FilePart]
		mov	[esp+4ECh+lpFilePart], edi ; lpFilePart
		mov	[esp+4ECh+nBufferLength], 104h ; nBufferLength
		mov	[esp+4ECh+lpName], 0 ; lpExtension
		mov	[esp+4ECh+bInitialOwner], offset FileName ; "dbus-daemon.exe"
		mov	[esp+4ECh+lpMutexAttributes], 0	; lpPath
		mov	[esp+4ECh+var_4A4], eax
		call	eax ; SearchPathA
		sub	esp, 18h
		test	eax, eax
		jnz	loc_67E0FFF8
		mov	[esp+4ECh+nBufferLength], offset aDidNotFoundDbu ; "did	not found dbus daemon executable on"...
		mov	[esp+4ECh+lpName], offset a_dbus_get_auto ; "_dbus_get_autolaunch_address"
		mov	[esp+4ECh+bInitialOwner], 0B44h	; int
		mov	[esp+4ECh+lpMutexAttributes], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		call	sub_67E114C0
		mov	[esp+4ECh+lpName], 104h	; nSize
		mov	[esp+4ECh+bInitialOwner], esi ;	lpFilename
		mov	[esp+4ECh+lpMutexAttributes], eax ; hModule
		call	ds:GetModuleFileNameA
		sub	esp, 0Ch
		test	eax, eax
		jz	loc_67E102E0
		mov	[esp+4ECh+bInitialOwner], 5Ch ;	Ch
		mov	[esp+4ECh+lpMutexAttributes], esi ; Str
		call	strrchr
		test	eax, eax
		jz	short loc_67E0FEEE
		mov	byte ptr [eax],	0

loc_67E0FEEE:				; CODE XREF: sub_67E0FCC0+229j
		lea	eax, [esp+4ECh+Buffer]
		mov	[esp+4ECh+lpFilePart], edi
		mov	[esp+4ECh+lpBuffer], eax
		mov	[esp+4ECh+nBufferLength], 104h
		mov	[esp+4ECh+lpName], 0
		mov	[esp+4ECh+bInitialOwner], offset FileName ; "dbus-daemon.exe"
		mov	[esp+4ECh+lpMutexAttributes], esi
		call	[esp+4ECh+var_4A4]
		sub	esp, 18h
		test	eax, eax
		jnz	loc_67E0FFD0
		mov	[esp+4ECh+lpName], offset aCouldNotFindDb ; "could not find dbus-daemon	executable"
		mov	[esp+4ECh+bInitialOwner], offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+4ECh+lpMutexAttributes], ebx
		call	dbus_set_error_const
		mov	[esp+4ECh+bInitialOwner], offset FileName ; "dbus-daemon.exe"
		mov	[esp+4ECh+lpMutexAttributes], offset aPleaseAddThePa ; "please add the path to %s to your PATH "...
		call	printf
		mov	[esp+4ECh+lpMutexAttributes], offset aOrStartTheDaem ; "or start the daemon manually\n"
		call	puts

loc_67E0FF5F:				; CODE XREF: sub_67E0FCC0+539j
					; sub_67E0FCC0+638j ...
		test	ebx, ebx
		jz	short loc_67E0FF71
		mov	[esp+4ECh+lpMutexAttributes], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67E0FF76

loc_67E0FF71:				; CODE XREF: sub_67E0FCC0+2A1j
		mov	edx, 1

loc_67E0FF76:				; CODE XREF: sub_67E0FCC0+2AFj
		mov	[esp+4ECh+lpBuffer], offset a_dbus_get_auto ; "_dbus_get_autolaunch_address"
		xor	esi, esi
		mov	[esp+4ECh+nBufferLength], 0B7Bh
		mov	[esp+4ECh+lpName], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4ECh+bInitialOwner], offset aErrorNullDb_26 ; "(error) == NULL || dbus_error_is_set (("...
		mov	[esp+4ECh+lpMutexAttributes], edx
		call	sub_67DFAE70

loc_67E0FFA0:				; CODE XREF: sub_67E0FCC0+495j
		mov	[esp+4ECh+lpMutexAttributes], ebp
		call	[esp+4ECh+var_4A8]
		sub	esp, 4
		mov	[esp+4ECh+lpMutexAttributes], ebp
		call	[esp+4ECh+var_4AC]
		mov	eax, esi
		sub	esp, 4
		add	esp, 4DCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E0FFC1:				; CODE XREF: sub_67E0FCC0+1Aj
					; sub_67E0FCC0+2Cj
		mov	edx, 1
		jmp	loc_67E0FCF2
; ---------------------------------------------------------------------------
		align 10h

loc_67E0FFD0:				; CODE XREF: sub_67E0FCC0+261j
		mov	[esp+4ECh+lpBuffer], esi ; char
		mov	[esp+4ECh+nBufferLength], offset aFoundDbusDaemo ; "found dbus daemon executable at %s"
		mov	[esp+4ECh+lpName], offset a_dbus_get_auto ; "_dbus_get_autolaunch_address"
		mov	[esp+4ECh+bInitialOwner], 0B5Bh	; int
		mov	[esp+4ECh+lpMutexAttributes], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0

loc_67E0FFF8:				; CODE XREF: sub_67E0FCC0+1C8j
		lea	edx, [esp+4ECh+var_88]
		xor	eax, eax
		mov	edi, edx
		mov	ecx, 11h
		rep stosd
		lea	esi, [esp+4ECh+Dest]
		lea	eax, [esp+4ECh+Buffer]
		mov	[esp+4ECh+var_4B0], edx
		lea	edi, [esp+4ECh+ProcessInformation]
		mov	[esp+4ECh+var_88], 44h
		mov	[esp+4ECh+ProcessInformation.hProcess],	0
		mov	[esp+4ECh+ProcessInformation.hThread], 0
		mov	[esp+4ECh+ProcessInformation.dwProcessId], 0
		mov	[esp+4ECh+ProcessInformation.dwThreadId], 0
		mov	[esp+4ECh+lpBuffer], offset aSession_0 ; " --session"
		mov	[esp+4ECh+nBufferLength], eax
		mov	[esp+4ECh+lpName], offset aSS_0	; "\"%s\" %s"
		mov	[esp+4ECh+bInitialOwner], 207h ; Count
		mov	[esp+4ECh+lpMutexAttributes], esi ; Dest
		call	ds:_snprintf
		mov	edx, [esp+4ECh+var_4B0]
		lea	eax, [esp+4ECh+Buffer]
		mov	[esp+4ECh+lpProcessInformation], edi ; lpProcessInformation
		mov	[esp+4ECh+lpCurrentDirectory], 0 ; lpCurrentDirectory
		mov	[esp+4ECh+lpEnvironment], 0 ; lpEnvironment
		mov	[esp+4ECh+lpStartupInfo], edx ;	lpStartupInfo
		mov	[esp+4ECh+lpFilePart], 8000000h	; dwCreationFlags
		mov	[esp+4ECh+lpBuffer], 0 ; bInheritHandles
		mov	[esp+4ECh+nBufferLength], 0 ; lpThreadAttributes
		mov	[esp+4ECh+lpName], 0 ; lpProcessAttributes
		mov	[esp+4ECh+bInitialOwner], esi ;	lpCommandLine
		mov	[esp+4ECh+lpMutexAttributes], eax ; lpApplicationName
		call	ds:CreateProcessA
		sub	esp, 28h
		test	eax, eax
		jz	loc_67E101E1
		mov	eax, [esp+4ECh+ProcessInformation.hThread]
		mov	[esp+4ECh+lpMutexAttributes], eax
		call	[esp+4ECh+var_4AC]
		sub	esp, 4
		mov	eax, [esp+4ECh+ProcessInformation.hProcess]
		mov	[esp+4ECh+lpMutexAttributes], eax
		call	[esp+4ECh+var_4AC]
		sub	esp, 4
		mov	eax, [esp+4ECh+arg_4]
		lea	edx, [esp+4ECh+var_44]
		call	sub_67E0B550
		test	eax, eax
		mov	esi, eax
		jz	loc_67E10307

loc_67E10116:				; CODE XREF: sub_67E0FCC0+5CBj
		test	ebx, ebx
		jz	short loc_67E10128
		mov	[esp+4ECh+lpMutexAttributes], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	short loc_67E1012D

loc_67E10128:				; CODE XREF: sub_67E0FCC0+458j
		mov	edx, 1

loc_67E1012D:				; CODE XREF: sub_67E0FCC0+466j
		mov	[esp+4ECh+lpBuffer], offset a_dbus_get_auto ; "_dbus_get_autolaunch_address"
		mov	[esp+4ECh+nBufferLength], 0B79h
		mov	[esp+4ECh+lpName], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4ECh+bInitialOwner], offset aErrorNullDb_25 ; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+4ECh+lpMutexAttributes], edx
		call	sub_67DFAE70
		jmp	loc_67E0FFA0
; ---------------------------------------------------------------------------
		align 10h

loc_67E10160:				; CODE XREF: sub_67E0FCC0+70j
		xor	esi, esi
		mov	[esp+4ECh+lpMutexAttributes], ebx
		mov	[esp+4ECh+lpName], offset aCouldNotDeterm ; "could not determine shm name"
		mov	[esp+4ECh+bInitialOwner], offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		call	dbus_set_error_const
		add	esp, 4DCh
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E10187:				; CODE XREF: sub_67E0FCC0+A0j
		mov	[esp+4ECh+bInitialOwner], 0FFFFFFFFh ; dwMilliseconds
		mov	[esp+4ECh+lpMutexAttributes], eax ; hHandle
		call	ds:WaitForSingleObject
		sub	esp, 8
		cmp	eax, 102h
		jz	loc_67E10300
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E10300
		add	eax, 0FFFFFF80h
		jnz	loc_67E0FD66
		mov	eax, ds:ReleaseMutex
		mov	[esp+4ECh+lpMutexAttributes], ebp ; hMutex
		mov	[esp+4ECh+var_4A8], eax
		call	eax ; ReleaseMutex
		mov	eax, ds:CloseHandle
		sub	esp, 4
		mov	[esp+4ECh+lpMutexAttributes], ebp ; hObject
		xor	ebp, ebp
		mov	[esp+4ECh+var_4AC], eax
		call	eax ; CloseHandle
		sub	esp, 4
		jmp	loc_67E0FD78
; ---------------------------------------------------------------------------

loc_67E101E1:				; CODE XREF: sub_67E0FCC0+411j
		mov	[esp+4ECh+lpName], offset aFailedToLaunch ; "Failed to launch dbus-daemon"
		mov	[esp+4ECh+bInitialOwner], offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+4ECh+lpMutexAttributes], ebx
		call	dbus_set_error_const
		jmp	loc_67E0FF5F
; ---------------------------------------------------------------------------
		align 10h

loc_67E10200:				; CODE XREF: sub_67E0FCC0+145j
		mov	eax, [esp+4ECh+arg_4]
		lea	edx, [esp+4ECh+var_44]
		call	sub_67E0B550
		mov	edx, eax
		mov	eax, [esp+4ECh+var_4A4]
		mov	[esp+4ECh+var_4B0], edx
		mov	[esp+4ECh+lpMutexAttributes], eax
		call	[esp+4ECh+var_4AC]
		sub	esp, 4
		mov	[esp+4ECh+lpMutexAttributes], edi
		call	[esp+4ECh+var_4A8]
		sub	esp, 4
		mov	[esp+4ECh+lpMutexAttributes], edi
		call	[esp+4ECh+var_4AC]
		sub	esp, 4
		mov	[esp+4ECh+lpMutexAttributes], esi
		call	sub_67E02BF0
		mov	edx, [esp+4ECh+var_4B0]
		test	edx, edx
		jz	loc_67E0FE43
		lea	eax, [esp+4ECh+var_44]
		mov	esi, 1
		mov	[esp+4ECh+lpMutexAttributes], eax
		call	sub_67E01770
		mov	[esp+4ECh+nBufferLength], offset aFoundRunningDb ; "found running dbus daemon at %s\n"
		mov	[esp+4ECh+lpName], offset a_dbus_get_auto ; "_dbus_get_autolaunch_address"
		mov	[esp+4ECh+bInitialOwner], 0B37h	; int
		mov	[esp+4ECh+lpMutexAttributes], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+4ECh+lpBuffer], eax ; char
		call	sub_67DFABC0
		jmp	loc_67E10116
; ---------------------------------------------------------------------------

loc_67E10290:				; CODE XREF: sub_67E0FCC0+F9j
		mov	[esp+4ECh+lpMutexAttributes], eax ; hHandle
		mov	eax, ds:WaitForSingleObject
		mov	[esp+4ECh+bInitialOwner], 0FFFFFFFFh ; dwMilliseconds
		mov	[esp+4ECh+var_4A0], eax
		call	eax ; WaitForSingleObject
		sub	esp, 8
		cmp	eax, 102h
		jz	short loc_67E102D2
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E102D2
		add	eax, 0FFFFFF80h
		jnz	loc_67E0FDC8
		mov	[esp+4ECh+lpMutexAttributes], edi
		call	[esp+4ECh+var_4A8]
		sub	esp, 4
		mov	[esp+4ECh+lpMutexAttributes], edi
		call	[esp+4ECh+var_4AC]
		sub	esp, 4

loc_67E102D2:				; CODE XREF: sub_67E0FCC0+5EEj
					; sub_67E0FCC0+5F3j
		xor	edi, edi
		jmp	loc_67E0FDC8
; ---------------------------------------------------------------------------
		align 10h

loc_67E102E0:				; CODE XREF: sub_67E0FCC0+211j
		mov	[esp+4ECh+lpName], offset aCouldNotRetrie ; "could not retrieve	dbus shared library "...
		mov	[esp+4ECh+bInitialOwner], offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+4ECh+lpMutexAttributes], ebx
		call	dbus_set_error_const
		jmp	loc_67E0FF5F
; ---------------------------------------------------------------------------
		align 10h

loc_67E10300:				; CODE XREF: sub_67E0FCC0+4E0j
					; sub_67E0FCC0+4E9j
		xor	ebp, ebp
		jmp	loc_67E0FD66
; ---------------------------------------------------------------------------

loc_67E10307:				; CODE XREF: sub_67E0FCC0+450j
		mov	[esp+4ECh+lpName], offset aFailedToGetAut ; "Failed to get autolaunch address from l"...
		mov	[esp+4ECh+bInitialOwner], offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+4ECh+lpMutexAttributes], ebx
		call	dbus_set_error_const
		jmp	loc_67E0FF5F
sub_67E0FCC0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E10330(char	*Str, char *)
sub_67E10330	proc near		; CODE XREF: sub_67DF8680+165p

lpMutexAttributes= dword ptr -7Ch
bInitialOwner	= dword	ptr -78h
lpName		= dword	ptr -74h
dwMaximumSizeHigh= dword ptr -70h
dwMaximumSizeLow= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_44		= byte ptr -44h
var_30		= byte ptr -30h
Str		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	edi, [esp+7Ch+Str]
		lea	ebx, [esp+7Ch+var_44]
		mov	[esp+7Ch+dwMaximumSizeLow], offset a_dbus_daemon_p ; "_dbus_daemon_publish_session_bus_addres"...
		mov	[esp+7Ch+dwMaximumSizeHigh], 0A84h
		mov	[esp+7Ch+lpName], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	edi, edi
		setnz	al
		mov	[esp+7Ch+lpMutexAttributes], eax
		mov	[esp+7Ch+bInitialOwner], offset	aAddress ; "address"
		call	sub_67DFAE70
		mov	ecx, [esp+7Ch+arg_4] ; char *
		mov	eax, ebx
		mov	edx, ds:off_67E2DCE8 ; char *
		call	sub_67E0F520
		test	eax, eax
		jz	loc_67E10575
		mov	eax, ds:lpName
		mov	[esp+7Ch+bInitialOwner], 0 ; bInitialOwner
		mov	[esp+7Ch+lpMutexAttributes], 0 ; lpMutexAttributes
		mov	[esp+7Ch+lpName], eax ;	lpName
		mov	eax, ds:CreateMutexA
		mov	[esp+7Ch+var_58], eax
		call	eax ; CreateMutexA
		sub	esp, 0Ch
		test	eax, eax
		mov	esi, eax
		jnz	loc_67E105B4
		mov	eax, ds:ReleaseMutex
		mov	ebp, ds:WaitForSingleObject
		mov	[esp+7Ch+var_50], eax
		mov	eax, ds:CloseHandle
		mov	[esp+7Ch+var_54], eax

loc_67E103D5:				; CODE XREF: sub_67E10330+2BDj
					; sub_67E10330+30Cj
		mov	ecx, ds:hHandle
		test	ecx, ecx
		jz	loc_67E10645

loc_67E103E3:				; CODE XREF: sub_67E10330+33Cj
		mov	[esp+7Ch+lpMutexAttributes], ebx
		call	sub_67E02BF0
		mov	eax, ds:hHandle
		mov	[esp+7Ch+bInitialOwner], 0Ah ; dwMilliseconds
		mov	[esp+7Ch+lpMutexAttributes], eax ; hHandle
		call	ebp ; WaitForSingleObject
		sub	esp, 8
		test	eax, eax
		jnz	loc_67E10587
		mov	ecx, [esp+7Ch+arg_4] ; char *
		lea	ebx, [esp+7Ch+var_30]
		mov	edx, ds:off_67E2DCBC ; char *
		mov	eax, ebx
		call	sub_67E0F520
		test	eax, eax
		jz	loc_67E105F2
		mov	[esp+7Ch+lpMutexAttributes], ebx
		call	sub_67E01770
		mov	[esp+7Ch+lpMutexAttributes], edi ; Str
		mov	ebp, eax
		call	strlen
		mov	[esp+7Ch+var_68], ebp ;	lpName
		mov	[esp+7Ch+dwMaximumSizeHigh], 0 ; dwMaximumSizeHigh
		mov	[esp+7Ch+lpName], 4 ; flProtect
		mov	[esp+7Ch+bInitialOwner], 0 ; lpFileMappingAttributes
		mov	[esp+7Ch+lpMutexAttributes], 0FFFFFFFFh	; hFile
		add	eax, 1
		mov	[esp+7Ch+dwMaximumSizeLow], eax	; dwMaximumSizeLow
		call	ds:CreateFileMappingA
		sub	esp, 18h
		test	eax, eax
		mov	ds:hFileMappingObject, eax
		setnz	al
		movzx	eax, al
		mov	[esp+7Ch+lpMutexAttributes], eax
		mov	[esp+7Ch+dwMaximumSizeLow], offset a_dbus_daemon_p ; "_dbus_daemon_publish_session_bus_addres"...
		mov	[esp+7Ch+dwMaximumSizeHigh], 0AA7h
		mov	[esp+7Ch+lpName], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+bInitialOwner], offset	aHdbussharedmem	; "hDBusSharedMem"
		call	sub_67DFAE70
		mov	eax, ds:hFileMappingObject
		mov	[esp+7Ch+dwMaximumSizeLow], 0 ;	dwNumberOfBytesToMap
		mov	[esp+7Ch+dwMaximumSizeHigh], 0 ; dwFileOffsetLow
		mov	[esp+7Ch+lpName], 0 ; dwFileOffsetHigh
		mov	[esp+7Ch+bInitialOwner], 2 ; dwDesiredAccess
		mov	[esp+7Ch+lpMutexAttributes], eax ; hFileMappingObject
		call	ds:MapViewOfFile
		mov	ebp, eax
		sub	esp, 14h
		xor	eax, eax
		test	ebp, ebp
		setnz	al
		mov	[esp+7Ch+lpMutexAttributes], eax
		mov	[esp+7Ch+dwMaximumSizeLow], offset a_dbus_daemon_p ; "_dbus_daemon_publish_session_bus_addres"...
		mov	[esp+7Ch+dwMaximumSizeHigh], 0AABh
		mov	[esp+7Ch+lpName], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+bInitialOwner], offset	aShared_addr ; "shared_addr"
		call	sub_67DFAE70
		mov	[esp+7Ch+bInitialOwner], edi ; Source
		mov	[esp+7Ch+lpMutexAttributes], ebp ; Dest
		call	strcpy
		mov	[esp+7Ch+lpMutexAttributes], ebp ; lpBaseAddress
		call	ds:UnmapViewOfFile
		sub	esp, 4
		mov	[esp+7Ch+lpMutexAttributes], esi
		call	[esp+7Ch+var_50]
		sub	esp, 4
		mov	[esp+7Ch+lpMutexAttributes], esi
		call	[esp+7Ch+var_54]
		sub	esp, 4
		mov	[esp+7Ch+lpMutexAttributes], ebx
		call	sub_67E01770
		mov	[esp+7Ch+dwMaximumSizeHigh], offset aPublishedSessi ; "published session bus address at	%s\n"
		mov	[esp+7Ch+lpName], offset a_dbus_daemon_p ; "_dbus_daemon_publish_session_bus_addres"...
		mov	[esp+7Ch+bInitialOwner], 0AB3h ; int
		mov	[esp+7Ch+lpMutexAttributes], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+7Ch+dwMaximumSizeLow], eax	; char
		call	sub_67DFABC0
		mov	[esp+7Ch+lpMutexAttributes], ebx
		call	sub_67E02BF0
		add	esp, 6Ch
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E10575:				; CODE XREF: sub_67E10330+57j
		mov	[esp+7Ch+lpMutexAttributes], ebx
		call	sub_67E02BF0
		add	esp, 6Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E10587:				; CODE XREF: sub_67E10330+D2j
		mov	[esp+7Ch+lpMutexAttributes], esi
		call	[esp+7Ch+var_50]
		sub	esp, 4
		mov	[esp+7Ch+lpMutexAttributes], esi
		call	[esp+7Ch+var_54]
		mov	eax, ds:hHandle
		sub	esp, 4
		mov	[esp+7Ch+lpMutexAttributes], eax
		call	[esp+7Ch+var_54]
		xor	eax, eax
		sub	esp, 4
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E105B4:				; CODE XREF: sub_67E10330+87j
		mov	ebp, ds:WaitForSingleObject
		mov	[esp+7Ch+bInitialOwner], 0FFFFFFFFh ; dwMilliseconds
		mov	[esp+7Ch+lpMutexAttributes], eax ; hHandle
		call	ebp ; WaitForSingleObject
		sub	esp, 8
		cmp	eax, 102h
		jz	short loc_67E10641
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E10641
		add	eax, 0FFFFFF80h
		jz	short loc_67E10618

loc_67E105DB:				; CODE XREF: sub_67E10330+313j
		mov	eax, ds:ReleaseMutex
		mov	[esp+7Ch+var_50], eax
		mov	eax, ds:CloseHandle
		mov	[esp+7Ch+var_54], eax
		jmp	loc_67E103D5
; ---------------------------------------------------------------------------

loc_67E105F2:				; CODE XREF: sub_67E10330+F2j
		mov	[esp+7Ch+lpMutexAttributes], ebx
		call	sub_67E02BF0
		mov	[esp+7Ch+lpMutexAttributes], esi
		call	[esp+7Ch+var_50]
		sub	esp, 4
		mov	[esp+7Ch+lpMutexAttributes], esi
		call	[esp+7Ch+var_54]
		xor	eax, eax
		sub	esp, 4
		add	esp, 6Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E10618:				; CODE XREF: sub_67E10330+2A9j
		mov	eax, ds:ReleaseMutex
		mov	[esp+7Ch+lpMutexAttributes], esi ; hMutex
		mov	[esp+7Ch+var_50], eax
		call	eax ; ReleaseMutex
		mov	eax, ds:CloseHandle
		sub	esp, 4
		mov	[esp+7Ch+lpMutexAttributes], esi ; hObject
		xor	esi, esi
		mov	[esp+7Ch+var_54], eax
		call	eax ; CloseHandle
		sub	esp, 4
		jmp	loc_67E103D5
; ---------------------------------------------------------------------------

loc_67E10641:				; CODE XREF: sub_67E10330+29Fj
					; sub_67E10330+2A4j
		xor	esi, esi
		jmp	short loc_67E105DB
; ---------------------------------------------------------------------------

loc_67E10645:				; CODE XREF: sub_67E10330+ADj
		mov	[esp+7Ch+lpMutexAttributes], ebx
		call	sub_67E01770
		mov	[esp+7Ch+bInitialOwner], 0
		mov	[esp+7Ch+lpMutexAttributes], 0
		mov	[esp+7Ch+lpName], eax
		call	[esp+7Ch+var_58]
		sub	esp, 0Ch
		mov	ds:hHandle, eax
		jmp	loc_67E103E3
sub_67E10330	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67E10680
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E10680(char, int, char, char *, int)
sub_67E10680	proc near		; CODE XREF: sub_67DF63C0+176p
					; .text:67E10671j

s		= dword	ptr -22Ch
name		= dword	ptr -228h
namelen		= dword	ptr -224h
var_220		= byte ptr -220h
var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_208		= dword	ptr -208h
var_204		= dword	ptr -204h
var_200		= dword	ptr -200h
WSAData		= WSAData ptr -1F4h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_20		= dword	ptr -20h
arg_0		= byte ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 21Ch
		mov	ebx, [esp+22Ch+arg_10]
		mov	ebp, [esp+22Ch+arg_C]
		test	ebx, ebx
		jz	loc_67E10926
		mov	[esp+22Ch+s], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E10926

loc_67E106B2:				; CODE XREF: sub_67E10680+2ABj
		mov	[esp+22Ch+var_21C], offset a_dbus_connect_ ; "_dbus_connect_tcp_socket_with_nonce"
		mov	dword ptr [esp+22Ch+var_220], 4F7h
		mov	[esp+22Ch+namelen], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+22Ch+name], offset	aErrorNullDb_25	; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+22Ch+s], edx
		call	sub_67DFAE70
		mov	edi, ds:dword_67E3498C
		test	edi, edi
		jz	loc_67E10930

loc_67E106E8:				; CODE XREF: sub_67E10680+2F3j
		lea	eax, [esp+22Ch+var_64]
		xor	edx, edx

loc_67E106F1:				; CODE XREF: sub_67E10680+7Ej
		mov	dword ptr [eax+edx], 0
		add	edx, 4
		cmp	edx, 20h
		jb	short loc_67E106F1
		mov	esi, dword ptr [esp+22Ch+arg_8]
		test	esi, esi
		jz	loc_67E10AB7
		mov	esi, dword ptr [esp+22Ch+arg_8]
		mov	edi, offset aIpv4_0 ; "ipv4"
		mov	ecx, 5
		repe cmpsb
		jnz	loc_67E10978
		mov	[esp+22Ch+var_60], 2

loc_67E10733:				; CODE XREF: sub_67E10680+31Cj
					; sub_67E10680+442j
		lea	edx, [esp+22Ch+var_20]
		mov	dword ptr [esp+22Ch+var_220], edx
		mov	edx, [esp+22Ch+arg_4]
		mov	[esp+22Ch+namelen], eax
		mov	eax, dword ptr [esp+22Ch+arg_0]
		mov	[esp+22Ch+var_58], 6
		mov	[esp+22Ch+var_5C], 1
		mov	[esp+22Ch+var_64], 0
		mov	[esp+22Ch+name], edx
		mov	[esp+22Ch+s], eax
		call	sub_67E16950
		sub	esp, 10h
		test	eax, eax
		mov	esi, eax
		jnz	loc_67E10BA0
		mov	edi, [esp+22Ch+var_20]
		test	edi, edi
		jz	loc_67E10BA0
		test	ebx, ebx
		jz	loc_67E109A1
		mov	edx, ds:socket
		mov	[esp+22Ch+var_204], edx

loc_67E107AB:				; CODE XREF: sub_67E10680+4B0j
		mov	[esp+22Ch+namelen], 0
		mov	[esp+22Ch+name], 1
		mov	eax, [edi+4]
		mov	[esp+22Ch+s], eax
		call	[esp+22Ch+var_204]
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	esi, eax
		jz	loc_67E10B40
		mov	[esp+22Ch+s], ebx
		call	dbus_error_is_set
		mov	[esp+22Ch+var_21C], offset a_dbus_connect_ ; "_dbus_connect_tcp_socket_with_nonce"
		mov	dword ptr [esp+22Ch+var_220], 528h ; char
		mov	[esp+22Ch+namelen], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+22Ch+name], offset	aErrorNullDb_25	; "(error) == NULL || !dbus_error_is_set ("...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+22Ch+s], eax
		call	sub_67DFAE70
		mov	eax, [edi+10h]
		mov	[esp+22Ch+namelen], eax	; namelen
		mov	eax, [edi+18h]
		mov	[esp+22Ch+s], esi ; s
		mov	[esp+22Ch+name], eax ; name
		call	ds:connect
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E10B02

loc_67E1082E:				; CODE XREF: sub_67E10680+39Bj
		mov	eax, [esp+22Ch+var_20]
		mov	[esp+22Ch+var_204], esi
		mov	[esp+22Ch+s], eax
		call	sub_67E169B0
		sub	esp, 4
		test	ebp, ebp
		jz	short loc_67E10899
		lea	edi, [esp+22Ch+var_44]
		mov	[esp+22Ch+s], edi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67E10AC7
		mov	[esp+22Ch+name], ebp ; char *
		mov	[esp+22Ch+s], edi ; int
		call	sub_67E08C10
		test	eax, eax
		jz	loc_67E10AC7
		mov	edx, [esp+22Ch+var_204]
		mov	[esp+22Ch+namelen], ebx	; int
		mov	[esp+22Ch+name], edi ; int
		mov	[esp+22Ch+s], edx ; SOCKET
		call	sub_67DE8390
		mov	[esp+22Ch+s], edi
		mov	ebp, eax
		call	sub_67E02BF0
		test	ebp, ebp
		jz	loc_67E10C10

loc_67E10899:				; CODE XREF: sub_67E10680+1C6j
		mov	[esp+22Ch+namelen], 0 ;	dwFlags
		mov	[esp+22Ch+name], 3 ; dwMask
		mov	[esp+22Ch+s], esi ; hObject
		call	ds:SetHandleInformation
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_67E10903
		call	ds:GetLastError
		lea	edi, [esp+22Ch+var_30]
		mov	[esp+22Ch+s], edi
		mov	ebp, eax
		call	dbus_error_init
		mov	[esp+22Ch+name], ebp ; DWORD
		mov	[esp+22Ch+s], edi ; int
		call	sub_67E0ADC0
		mov	eax, [esp+22Ch+var_2C]
		mov	[esp+22Ch+name], offset	aDisablingSocke	; "Disabling socket handle inheritance fai"...
		mov	[esp+22Ch+s], offset aSS ; "%s:	%s\n"
		mov	[esp+22Ch+namelen], eax
		call	sub_67DFAD60
		mov	[esp+22Ch+s], edi
		call	dbus_error_free

loc_67E10903:				; CODE XREF: sub_67E10680+237j
		mov	[esp+22Ch+name], ebx ; int
		mov	[esp+22Ch+s], esi ; SOCKET
		call	sub_67E0D430
		test	eax, eax
		jz	loc_67E10BF1

loc_67E10917:				; CODE XREF: sub_67E10680+432j
					; sub_67E10680+517j ...
		mov	eax, [esp+22Ch+var_204]
		add	esp, 21Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E10926:				; CODE XREF: sub_67E10680+1Aj
					; sub_67E10680+2Cj
		mov	edx, 1
		jmp	loc_67E106B2
; ---------------------------------------------------------------------------

loc_67E10930:				; CODE XREF: sub_67E10680+62j
		lea	eax, [esp+22Ch+WSAData]
		mov	[esp+22Ch+name], eax ; lpWSAData
		mov	[esp+22Ch+s], 2	; wVersionRequested
		call	ds:WSAStartup
		sub	esp, 8
		test	eax, eax
		jnz	loc_67E10C79
		movzx	eax, [esp+22Ch+WSAData.wVersion]
		cmp	al, 2
		jnz	loc_67E10C5D
		shr	ax, 8
		test	al, al
		jnz	loc_67E10C5D
		mov	ds:dword_67E3498C, 1
		jmp	loc_67E106E8
; ---------------------------------------------------------------------------

loc_67E10978:				; CODE XREF: sub_67E10680+A2j
		mov	esi, dword ptr [esp+22Ch+arg_8]
		mov	edi, offset aIpv6 ; "ipv6"
		mov	ecx, 5
		repe cmpsb
		jnz	loc_67E10C2D
		mov	[esp+22Ch+var_60], 17h
		jmp	loc_67E10733
; ---------------------------------------------------------------------------

loc_67E109A1:				; CODE XREF: sub_67E10680+11Bj
		mov	eax, ds:socket
		mov	[esp+22Ch+var_204], eax

loc_67E109AA:				; CODE XREF: sub_67E10680+3CFj
		mov	[esp+22Ch+namelen], 0
		mov	[esp+22Ch+name], 1
		mov	eax, [edi+4]
		mov	[esp+22Ch+s], eax
		call	[esp+22Ch+var_204]
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	esi, eax
		jz	loc_67E10B40
		mov	[esp+22Ch+var_21C], offset a_dbus_connect_ ; "_dbus_connect_tcp_socket_with_nonce"
		mov	dword ptr [esp+22Ch+var_220], 528h
		mov	[esp+22Ch+namelen], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+22Ch+name], offset	aErrorNullDb_25	; "(error) == NULL || !dbus_error_is_set ("...
		mov	[esp+22Ch+s], 1
		call	sub_67DFAE70
		mov	eax, [edi+10h]
		mov	[esp+22Ch+namelen], eax	; namelen
		mov	eax, [edi+18h]
		mov	[esp+22Ch+s], esi ; s
		mov	[esp+22Ch+name], eax ; name
		call	ds:connect
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jnz	loc_67E1082E
		call	ds:WSAGetLastError
		mov	edx, eax
		mov	eax, ds:_errno
		mov	[esp+22Ch+var_208], edx
		mov	[esp+22Ch+var_200], eax
		call	eax ; _errno
		mov	edx, [esp+22Ch+var_208]
		mov	[eax], edx
		mov	[esp+22Ch+s], esi ; s
		call	ds:closesocket
		mov	edi, [edi+1Ch]
		sub	esp, 4
		test	edi, edi
		jnz	loc_67E109AA

loc_67E10A55:				; CODE XREF: sub_67E10680+4B6j
		mov	eax, [esp+22Ch+var_20]
		mov	[esp+22Ch+s], eax
		call	sub_67E169B0
		sub	esp, 4
		call	sub_67E094E0
		mov	esi, eax
		call	[esp+230h+var_204]
		mov	eax, [eax]
		mov	[esp+22Ch+s], eax
		call	sub_67E09380
		mov	edx, [esp+22Ch+arg_4]
		mov	[esp+22Ch+var_218], esi
		mov	[esp+22Ch+namelen], offset aFailedToConnec ; "Failed to	connect	to socket \"%s:%s\" %"...
		mov	[esp+22Ch+s], ebx ; int
		mov	[esp+22Ch+var_21C], edx
		mov	edx, dword ptr [esp+22Ch+arg_0]
		mov	[esp+22Ch+name], eax ; char *
		mov	dword ptr [esp+22Ch+var_220], edx ; char
		call	dbus_set_error
		mov	[esp+22Ch+var_204], 0FFFFFFFFh
		jmp	loc_67E10917
; ---------------------------------------------------------------------------

loc_67E10AB7:				; CODE XREF: sub_67E10680+89j
		mov	[esp+22Ch+var_60], 0
		jmp	loc_67E10733
; ---------------------------------------------------------------------------

loc_67E10AC7:				; CODE XREF: sub_67E10680+1D9j
					; sub_67E10680+1EDj
		mov	[esp+22Ch+s], esi ; s
		call	ds:closesocket
		sub	esp, 4
		mov	[esp+22Ch+s], ebx ; int
		mov	[esp+22Ch+namelen], 0 ;	char *
		mov	[esp+22Ch+name], offset	aOrg_freedes_44	; "org.freedesktop.DBus.Error.NoMemory"
		call	dbus_set_error
		mov	[esp+22Ch+var_204], 0FFFFFFFFh
		mov	eax, [esp+22Ch+var_204]
		add	esp, 21Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E10B02:				; CODE XREF: sub_67E10680+1A8j
		call	ds:WSAGetLastError
		mov	edx, eax
		mov	eax, ds:_errno
		mov	[esp+22Ch+var_208], edx
		mov	[esp+22Ch+var_200], eax
		call	eax ; _errno
		mov	edx, [esp+22Ch+var_208]
		mov	[eax], edx
		mov	[esp+22Ch+s], esi ; s
		call	ds:closesocket
		mov	edi, [edi+1Ch]
		sub	esp, 4
		test	edi, edi
		jnz	loc_67E107AB
		jmp	loc_67E10A55
; ---------------------------------------------------------------------------
		align 10h

loc_67E10B40:				; CODE XREF: sub_67E10680+14Dj
					; sub_67E10680+34Cj
		call	ds:WSAGetLastError
		mov	esi, ds:_errno
		mov	edi, eax
		call	esi ; _errno
		mov	[eax], edi
		call	sub_67E094E0
		mov	edi, eax
		call	esi ; _errno
		mov	eax, [eax]
		mov	[esp+22Ch+s], eax
		call	sub_67E09380
		mov	dword ptr [esp+22Ch+var_220], edi ; char
		mov	[esp+22Ch+namelen], offset aFailedToOpenSo ; "Failed to	open socket: %s"
		mov	[esp+22Ch+s], ebx ; int
		mov	[esp+22Ch+name], eax ; char *
		call	dbus_set_error
		mov	eax, [esp+22Ch+var_20]
		mov	[esp+22Ch+s], eax
		call	sub_67E169B0
		sub	esp, 4
		mov	[esp+22Ch+var_204], 0FFFFFFFFh
		jmp	loc_67E10917
; ---------------------------------------------------------------------------
		align 10h

loc_67E10BA0:				; CODE XREF: sub_67E10680+104j
					; sub_67E10680+113j
		mov	[esp+22Ch+s], esi
		call	sub_67E0AF00
		mov	[esp+22Ch+s], esi
		mov	edi, eax
		call	sub_67E09380
		mov	edx, [esp+22Ch+arg_4]
		mov	[esp+22Ch+var_214], esi
		mov	[esp+22Ch+var_218], edi
		mov	[esp+22Ch+namelen], offset aFailedToLookup ; "Failed to	lookup host/port: \"%s:%s\": "...
		mov	[esp+22Ch+var_21C], edx
		mov	edx, dword ptr [esp+22Ch+arg_0]
		mov	[esp+22Ch+s], ebx ; int
		mov	[esp+22Ch+name], eax ; char *
		mov	dword ptr [esp+22Ch+var_220], edx ; char
		call	dbus_set_error
		mov	[esp+22Ch+var_204], 0FFFFFFFFh
		jmp	loc_67E10917
; ---------------------------------------------------------------------------

loc_67E10BF1:				; CODE XREF: sub_67E10680+291j
		mov	[esp+22Ch+s], esi ; s
		call	ds:closesocket
		sub	esp, 4
		mov	[esp+22Ch+var_204], 0FFFFFFFFh
		jmp	loc_67E10917
; ---------------------------------------------------------------------------
		align 10h

loc_67E10C10:				; CODE XREF: sub_67E10680+213j
		mov	eax, [esp+22Ch+var_204]
		mov	[esp+22Ch+s], eax ; s
		call	ds:closesocket
		sub	esp, 4
		mov	[esp+22Ch+var_204], 0FFFFFFFFh
		jmp	loc_67E10917
; ---------------------------------------------------------------------------

loc_67E10C2D:				; CODE XREF: sub_67E10680+30Bj
		mov	eax, dword ptr [esp+22Ch+arg_8]
		mov	[esp+22Ch+namelen], offset aUnknownAddre_1 ; "Unknown address family %s"
		mov	[esp+22Ch+name], offset	aOrg_freedes_60	; "org.freedesktop.DBus.Error.InvalidArgs"
		mov	[esp+22Ch+s], ebx ; int
		mov	dword ptr [esp+22Ch+var_220], eax ; char
		call	dbus_set_error
		mov	[esp+22Ch+var_204], 0FFFFFFFFh
		jmp	loc_67E10917
; ---------------------------------------------------------------------------

loc_67E10C5D:				; CODE XREF: sub_67E10680+2D7j
					; sub_67E10680+2E3j
		mov	[esp+22Ch+namelen], 1FEh
		mov	[esp+22Ch+name], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+22Ch+s], offset aNoUsableWinsoc ; "No usable WinSock found"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67E10C79:				; CODE XREF: sub_67E10680+2CAj
		mov	[esp+22Ch+namelen], 1F2h
		mov	[esp+22Ch+name], offset	aRBuildWin32_32	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+22Ch+s], offset aCouldNotInitia ; "Could not initialize WinSock"
		call	sub_67DFAE30
sub_67E10680	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 4Ch
		mov	[esp+3Ch], ebx
		mov	ebx, [esp+54h]
		mov	[esp+40h], esi
		mov	[esp+44h], edi
		mov	[esp+48h], ebp
		test	ebx, ebx
		jz	short loc_67E10D30
		mov	[esp], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67E10D30

loc_67E10CC9:				; CODE XREF: .text:67E10D35j
		mov	[esp], edx
		mov	dword ptr [esp+10h], offset a_dbus_delete_d ; "_dbus_delete_directory"
		mov	dword ptr [esp+0Ch], 0E21h
		mov	dword ptr [esp+8], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_25 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	eax, [esp+50h]
		mov	[esp], eax
		call	sub_67E01770
		mov	edi, eax
		mov	[esp], eax
		call	ds:RemoveDirectoryA
		mov	edx, eax
		sub	esp, 4
		test	edx, edx
		mov	eax, 1
		jz	short loc_67E10D37
; START	OF FUNCTION CHUNK FOR sub_67E10DA4

loc_67E10D16:				; CODE XREF: sub_67E10DA4+36j
		mov	ebx, [esp+arg_38]
		mov	esi, [esp+arg_3C]
		mov	edi, [esp+arg_40]
		mov	ebp, [esp+arg_44]
		add	esp, 4Ch
		retn
; END OF FUNCTION CHUNK	FOR sub_67E10DA4
; ---------------------------------------------------------------------------
		align 10h

loc_67E10D30:				; CODE XREF: .text:67E10CB9j
					; .text:67E10CC7j
		mov	edx, 1
		jmp	short loc_67E10CC9
; ---------------------------------------------------------------------------

loc_67E10D37:				; CODE XREF: .text:67E10D14j
		mov	ebp, ds:GetLastError
		call	ebp ; GetLastError
		lea	edx, [esp+2Ch]
		mov	[esp+10h], edx
		mov	dword ptr [esp+18h], 0
		mov	dword ptr [esp+14h], 0
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+4], 0
		mov	[esp+8], eax
		mov	dword ptr [esp], 1300h
		call	ds:FormatMessageA
		sub	esp, 1Ch
		mov	esi, [esp+2Ch]
		mov	[esp], esi
		call	strlen
		lea	edx, [esi+eax-1]
		movzx	eax, byte ptr [edx]
		cmp	al, 0Ah
		jz	short loc_67E10E10

loc_67E10D92:				; CODE XREF: .text:67E10E26j
		cmp	al, 0Dh
		jnz	short loc_67E10D9D
		mov	byte ptr [edx],	0
		mov	esi, [esp+2Ch]

loc_67E10D9D:				; CODE XREF: .text:67E10D94j
		call	ebp ; GetLastError
		cmp	eax, 52h
		jbe	short loc_67E10DE0

; =============== S U B	R O U T	I N E =======================================


sub_67E10DA4	proc near		; CODE XREF: .text:loc_67E10DE0j
					; DATA XREF: .rdata:off_67E2DADCo ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch
arg_C		= dword	ptr  10h
arg_38		= dword	ptr  3Ch
arg_3C		= dword	ptr  40h
arg_40		= dword	ptr  44h
arg_44		= dword	ptr  48h

; FUNCTION CHUNK AT 67E10D16 SIZE 00000014 BYTES

		mov	eax, offset aOrg_freedes_43 ; "org.freedesktop.DBus.Error.Failed"
		lea	esi, [esi+0]

loc_67E10DB0:				; CODE XREF: sub_67E10DE7+5j
					; sub_67E10DF0+5j ...
		mov	[esp+arg_C], esi
		mov	dword ptr [esp+arg_8], edi ; char
		mov	[esp+arg_4], offset aFailedToRemove ; "Failed to remove	directory %s: %s"
		mov	[esp+arg_0], eax ; char	*
		mov	[esp+0], ebx	; int
		call	dbus_set_error
		mov	[esp+0], esi	; hMem
		call	ds:LocalFree
		xor	eax, eax
		sub	esp, 4
		jmp	loc_67E10D16
sub_67E10DA4	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		align 10h

loc_67E10DE0:				; CODE XREF: .text:67E10DA2j
		jmp	ds:off_67E2DADC[eax*4]

; =============== S U B	R O U T	I N E =======================================


sub_67E10DE7	proc near		; CODE XREF: .text:loc_67E10DE0j
					; DATA XREF: .rdata:67E2DAFCo
		mov	eax, offset aOrg_freedes_44 ; "org.freedesktop.DBus.Error.NoMemory"
		jmp	short loc_67E10DB0
sub_67E10DE7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E10DF0	proc near		; CODE XREF: .text:loc_67E10DE0j
					; DATA XREF: .rdata:67E2DAF0o ...
		mov	eax, offset aOrg_freedes_48 ; "org.freedesktop.DBus.Error.AccessDenied"
		jmp	short loc_67E10DB0
sub_67E10DF0	endp


; =============== S U B	R O U T	I N E =======================================


sub_67E10DF7	proc near		; CODE XREF: .text:loc_67E10DE0j
					; DATA XREF: .rdata:67E2DAECo ...
		mov	eax, offset aOrg_freedes_47 ; "org.freedesktop.DBus.Error.LimitsExceed"...
		jmp	short loc_67E10DB0
sub_67E10DF7	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E10E00	proc near		; CODE XREF: .text:loc_67E10DE0j
					; DATA XREF: .rdata:67E2DAE4o ...
		mov	eax, offset aOrg_freedes_46 ; "org.freedesktop.DBus.Error.FileNotFound"
		jmp	short loc_67E10DB0
sub_67E10E00	endp


; =============== S U B	R O U T	I N E =======================================


sub_67E10E07	proc near		; CODE XREF: .text:loc_67E10DE0j
					; DATA XREF: .rdata:67E2DC1Co
		mov	eax, offset aOrg_freedes_45 ; "org.freedesktop.DBus.Error.FileExists"
		jmp	short loc_67E10DB0
sub_67E10E07	endp

; ---------------------------------------------------------------------------
		align 10h

loc_67E10E10:				; CODE XREF: .text:67E10D90j
		mov	byte ptr [edx],	0
		mov	esi, [esp+2Ch]
		mov	[esp], esi
		call	strlen
		lea	edx, [esi+eax-1]
		movzx	eax, byte ptr [edx]
		jmp	loc_67E10D92
; ---------------------------------------------------------------------------
		align 10h

loc_67E10E30:				; CODE XREF: .text:67E1137Aj
		push	ebp
		mov	ebp, ecx
		push	edi
		push	esi
		push	ebx
		sub	esp, 20Ch
		mov	ebx, [esp+220h]
		mov	[esp+24h], eax
		mov	[esp+28h], edx
		test	ebx, ebx
		jz	loc_67E11081
		mov	[esp], ebx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E11081

loc_67E10E65:				; CODE XREF: .text:67E11086j
		mov	dword ptr [esp+10h], offset a_dbus_connect_ ; "_dbus_connect_tcp_socket_with_nonce"
		mov	dword ptr [esp+0Ch], 4F7h
		mov	dword ptr [esp+8], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_25 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		mov	[esp], edx
		call	sub_67DFAE70
		mov	eax, ds:dword_67E3498C
		test	eax, eax
		jz	loc_67E110A0

loc_67E10E9A:				; CODE XREF: .text:67E110E3j
		lea	eax, [esp+1CCh]
		xor	edx, edx

loc_67E10EA3:				; CODE XREF: .text:67E10EB0j
		mov	dword ptr [eax+edx], 0
		add	edx, 4
		cmp	edx, 20h
		jb	short loc_67E10EA3
		test	ebp, ebp
		jz	loc_67E111F0
		mov	edi, offset aIpv4_0 ; "ipv4"
		mov	ecx, 5
		mov	esi, ebp
		repe cmpsb
		jz	loc_67E11090
		mov	edi, offset aIpv6 ; "ipv6"
		mov	ecx, 5
		mov	esi, ebp
		repe cmpsb
		jnz	loc_67E112FE
		mov	dword ptr [esp+1D0h], 17h

loc_67E10EED:				; CODE XREF: .text:67E1109Bj
					; .text:67E111FBj
		lea	edx, [esp+1FCh]
		mov	[esp+0Ch], edx
		mov	edx, [esp+24h]
		mov	[esp+8], eax
		mov	eax, [esp+28h]
		mov	dword ptr [esp+1D8h], 6
		mov	dword ptr [esp+1D4h], 1
		mov	dword ptr [esp+1CCh], 0
		mov	[esp+4], eax
		mov	[esp], edx
		call	sub_67E16950
		sub	esp, 10h
		test	eax, eax
		mov	esi, eax
		jnz	loc_67E112A0
		mov	edi, [esp+1FCh]
		test	edi, edi
		jz	loc_67E112A0
		test	ebx, ebx
		jz	loc_67E110E8
		mov	ebp, ds:socket

loc_67E10F5B:				; CODE XREF: .text:67E1122Ej
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 1
		mov	eax, [edi+4]
		mov	[esp], eax
		call	ebp ; socket
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	esi, eax
		jz	loc_67E11240
		mov	[esp], ebx
		call	dbus_error_is_set
		mov	dword ptr [esp+10h], offset a_dbus_connect_ ; "_dbus_connect_tcp_socket_with_nonce"
		mov	dword ptr [esp+0Ch], 528h
		mov	dword ptr [esp+8], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_25 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [edi+10h]
		mov	[esp+8], eax
		mov	eax, [edi+18h]
		mov	[esp], esi
		mov	[esp+4], eax
		call	ds:connect
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E11200

loc_67E10FDC:				; CODE XREF: .text:67E1115Dj
		mov	eax, [esp+1FCh]
		mov	edi, esi
		mov	[esp], eax
		call	sub_67E169B0
		sub	esp, 4
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 3
		mov	[esp], esi
		call	ds:SetHandleInformation
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_67E11060
		call	ds:GetLastError
		lea	ebp, [esp+1ECh]
		mov	[esp], ebp
		mov	[esp+20h], eax
		call	dbus_error_init
		mov	eax, [esp+20h]
		mov	[esp], ebp
		mov	[esp+4], eax
		call	sub_67E0ADC0
		mov	eax, [esp+1F0h]
		mov	dword ptr [esp+4], offset aDisablingSocke ; "Disabling socket handle inheritance fai"...
		mov	dword ptr [esp], offset	aSS ; "%s: %s\n"
		mov	[esp+8], eax
		call	sub_67DFAD60
		mov	[esp], ebp
		call	dbus_error_free

loc_67E11060:				; CODE XREF: .text:67E1100Ej
		mov	[esp+4], ebx
		mov	[esp], esi
		call	sub_67E0D430
		test	eax, eax
		jz	loc_67E112E8

loc_67E11074:				; CODE XREF: .text:67E111EBj
					; .text:67E11294j ...
		add	esp, 20Ch
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E11081:				; CODE XREF: .text:67E10E4Dj
					; .text:67E10E5Fj
		mov	edx, 1
		jmp	loc_67E10E65
; ---------------------------------------------------------------------------
		align 10h

loc_67E11090:				; CODE XREF: .text:67E10EC8j
		mov	dword ptr [esp+1D0h], 2
		jmp	loc_67E10EED
; ---------------------------------------------------------------------------

loc_67E110A0:				; CODE XREF: .text:67E10E94j
		lea	eax, [esp+3Ch]
		mov	[esp+4], eax
		mov	dword ptr [esp], 2
		call	ds:WSAStartup
		sub	esp, 8
		test	eax, eax
		jnz	loc_67E11340
		movzx	eax, word ptr [esp+3Ch]
		cmp	al, 2
		jnz	loc_67E11324
		shr	ax, 8
		test	al, al
		jnz	loc_67E11324
		mov	ds:dword_67E3498C, 1
		jmp	loc_67E10E9A
; ---------------------------------------------------------------------------

loc_67E110E8:				; CODE XREF: .text:67E10F4Fj
		mov	ebp, ds:socket

loc_67E110EE:				; CODE XREF: .text:67E11191j
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 1
		mov	eax, [edi+4]
		mov	[esp], eax
		call	ebp ; socket
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	esi, eax
		jz	loc_67E11240
		mov	dword ptr [esp+10h], offset a_dbus_connect_ ; "_dbus_connect_tcp_socket_with_nonce"
		mov	dword ptr [esp+0Ch], 528h
		mov	dword ptr [esp+8], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_25 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		mov	eax, [edi+10h]
		mov	[esp+8], eax
		mov	eax, [edi+18h]
		mov	[esp], esi
		mov	[esp+4], eax
		call	ds:connect
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jnz	loc_67E10FDC
		call	ds:WSAGetLastError
		mov	edx, eax
		mov	eax, ds:_errno
		mov	[esp+20h], edx
		mov	[esp+2Ch], eax
		call	eax ; _errno
		mov	edx, [esp+20h]
		mov	[eax], edx
		mov	[esp], esi
		call	ds:closesocket
		mov	edi, [edi+1Ch]
		sub	esp, 4
		test	edi, edi
		jnz	loc_67E110EE

loc_67E11197:				; CODE XREF: .text:67E11234j
		mov	eax, [esp+1FCh]
		mov	edi, 0FFFFFFFFh
		mov	[esp], eax
		call	sub_67E169B0
		sub	esp, 4
		call	sub_67E094E0
		mov	esi, eax
		call	dword ptr [esp+2Ch]
		mov	eax, [eax]
		mov	[esp], eax
		call	sub_67E09380
		mov	edx, [esp+28h]
		mov	[esp+14h], esi
		mov	dword ptr [esp+8], offset aFailedToConnec ; "Failed to connect to socket \"%s:%s\" %"...
		mov	[esp], ebx
		mov	[esp+10h], edx
		mov	edx, [esp+24h]
		mov	[esp+4], eax
		mov	[esp+0Ch], edx
		call	dbus_set_error
		jmp	loc_67E11074
; ---------------------------------------------------------------------------

loc_67E111F0:				; CODE XREF: .text:67E10EB4j
		mov	dword ptr [esp+1D0h], 0
		jmp	loc_67E10EED
; ---------------------------------------------------------------------------

loc_67E11200:				; CODE XREF: .text:67E10FD6j
		call	ds:WSAGetLastError
		mov	edx, eax
		mov	eax, ds:_errno
		mov	[esp+20h], edx
		mov	[esp+2Ch], eax
		call	eax ; _errno
		mov	edx, [esp+20h]
		mov	[eax], edx
		mov	[esp], esi
		call	ds:closesocket
		mov	edi, [edi+1Ch]
		sub	esp, 4
		test	edi, edi
		jnz	loc_67E10F5B
		jmp	loc_67E11197
; ---------------------------------------------------------------------------
		align 10h

loc_67E11240:				; CODE XREF: .text:67E10F7Bj
					; .text:67E1110Ej
		call	ds:WSAGetLastError
		mov	esi, ds:_errno
		mov	edi, eax
		call	esi ; _errno
		mov	[eax], edi
		call	sub_67E094E0
		mov	edi, eax
		call	esi ; _errno
		mov	eax, [eax]
		mov	[esp], eax
		call	sub_67E09380
		mov	[esp+0Ch], edi
		mov	edi, 0FFFFFFFFh
		mov	dword ptr [esp+8], offset aFailedToOpenSo ; "Failed to open socket: %s"
		mov	[esp], ebx
		mov	[esp+4], eax
		call	dbus_set_error
		mov	eax, [esp+1FCh]
		mov	[esp], eax
		call	sub_67E169B0
		sub	esp, 4
		jmp	loc_67E11074
; ---------------------------------------------------------------------------
		align 10h

loc_67E112A0:				; CODE XREF: .text:67E10F38j
					; .text:67E10F47j
		mov	[esp], esi
		call	sub_67E0AF00
		mov	[esp], esi
		mov	edi, eax
		call	sub_67E09380
		mov	edx, [esp+28h]
		mov	[esp+14h], edi
		mov	edi, 0FFFFFFFFh
		mov	[esp+18h], esi
		mov	dword ptr [esp+8], offset aFailedToLookup ; "Failed to lookup host/port: \"%s:%s\": "...
		mov	[esp+10h], edx
		mov	edx, [esp+24h]
		mov	[esp], ebx
		mov	[esp+4], eax
		mov	[esp+0Ch], edx
		call	dbus_set_error
		jmp	loc_67E11074
; ---------------------------------------------------------------------------

loc_67E112E8:				; CODE XREF: .text:67E1106Ej
		mov	[esp], esi
		mov	edi, 0FFFFFFFFh
		call	ds:closesocket
		sub	esp, 4
		jmp	loc_67E11074
; ---------------------------------------------------------------------------

loc_67E112FE:				; CODE XREF: .text:67E10EDCj
		mov	[esp+0Ch], ebp
		mov	edi, 0FFFFFFFFh
		mov	dword ptr [esp+8], offset aUnknownAddre_1 ; "Unknown address family %s"
		mov	dword ptr [esp+4], offset aOrg_freedes_60 ; "org.freedesktop.DBus.Error.InvalidArgs"
		mov	[esp], ebx
		call	dbus_set_error
		jmp	loc_67E11074
; ---------------------------------------------------------------------------

loc_67E11324:				; CODE XREF: .text:67E110C7j
					; .text:67E110D3j
		mov	dword ptr [esp+8], 1FEh
		mov	dword ptr [esp+4], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp], offset	aNoUsableWinsoc	; "No usable WinSock found"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------

loc_67E11340:				; CODE XREF: .text:67E110BAj
		mov	dword ptr [esp+8], 1F2h
		mov	dword ptr [esp+4], offset aRBuildWin32_32 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp], offset	aCouldNotInitia	; "Could not initialize	WinSock"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	edx, [esp+1Ch]
		mov	eax, [esp+10h]
		mov	ecx, [esp+18h]
		mov	[esp+10h], edx
		mov	edx, [esp+14h]
		add	esp, 0Ch
		jmp	loc_67E10E30
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	[esp+24h], esi
		mov	esi, [esp+34h]
		mov	[esp+20h], ebx
		mov	ebx, [esp+30h]
		mov	[esp+28h], edi
		test	esi, esi
		jz	short loc_67E11400
		mov	[esp], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67E11400

loc_67E113A9:				; CODE XREF: .text:67E11405j
		mov	dword ptr [esp+10h], offset a_dbus_pipe_clo ; "_dbus_pipe_close"
		mov	dword ptr [esp+0Ch], 4Ch
		mov	dword ptr [esp+8], offset aRBuildWin32_35 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_31 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		mov	[esp], edx
		call	sub_67DFAE70
		mov	eax, [ebx]
		mov	[esp], eax
		call	ds:CloseHandle
		sub	esp, 4
		test	eax, eax
		jz	short loc_67E11407
		mov	[esp], ebx
		call	sub_67E0A080
		xor	eax, eax

loc_67E113ED:				; CODE XREF: .text:67E11436j
		mov	ebx, [esp+20h]
		mov	esi, [esp+24h]
		mov	edi, [esp+28h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E11400:				; CODE XREF: .text:67E11399j
					; .text:67E113A7j
		mov	edx, 1
		jmp	short loc_67E113A9
; ---------------------------------------------------------------------------

loc_67E11407:				; CODE XREF: .text:67E113E1j
		call	sub_67E094E0
		mov	ebx, [ebx]
		mov	edi, eax
		call	sub_67E09DE0
		mov	[esp+10h], edi
		mov	[esp+0Ch], ebx
		mov	dword ptr [esp+8], offset aCouldNotCloseP ; "Could not close pipe %d: %s"
		mov	[esp], esi
		mov	[esp+4], eax
		call	dbus_set_error
		mov	eax, 0FFFFFFFFh
		jmp	short loc_67E113ED
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E11440(int,	int, int, DWORD, int)
sub_67E11440	proc near		; CODE XREF: .text:67E16878p

hFile		= dword	ptr -3Ch
lpBuffer	= dword	ptr -38h
nNumberOfBytesToWrite= dword ptr -34h
lpNumberOfBytesWritten=	dword ptr -30h
lpOverlapped	= dword	ptr -2Ch
NumberOfBytesWritten= dword ptr	-10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		sub	esp, 3Ch
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+hFile], eax
		call	sub_67E01770
		lea	edx, [esp+3Ch+NumberOfBytesWritten]
		mov	[esp+3Ch+lpNumberOfBytesWritten], edx ;	lpNumberOfBytesWritten
		mov	edx, [esp+3Ch+arg_C]
		mov	[esp+3Ch+lpOverlapped],	0 ; lpOverlapped
		add	eax, [esp+3Ch+arg_8]
		mov	[esp+3Ch+nNumberOfBytesToWrite], edx ; nNumberOfBytesToWrite
		mov	[esp+3Ch+lpBuffer], eax	; lpBuffer
		mov	eax, [esp+3Ch+arg_0]
		mov	eax, [eax]
		mov	[esp+3Ch+hFile], eax ; hFile
		call	ds:WriteFile
		sub	esp, 14h
		test	eax, eax
		jnz	short loc_67E114AA
		call	sub_67E094E0
		mov	[esp+3Ch+nNumberOfBytesToWrite], offset	aWritingToPipeS	; "Writing to pipe: %s\n"
		mov	[esp+3Ch+lpBuffer], offset aOrg_freedes_72 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+3Ch+lpNumberOfBytesWritten], eax ;	char
		mov	eax, [esp+3Ch+arg_10]
		mov	[esp+3Ch+hFile], eax ; int
		call	dbus_set_error

loc_67E114AA:				; CODE XREF: sub_67E11440+43j
		mov	eax, [esp+3Ch+NumberOfBytesWritten]
		add	esp, 3Ch
		retn
sub_67E11440	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E114C0	proc near		; CODE XREF: sub_67E0B2F0+19p
					; sub_67E0FCC0+1F2p
		mov	eax, ds:dword_67E349C0
		retn
sub_67E114C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E114D0	proc near		; CODE XREF: dbus_threads_init_default+6j

var_1C		= dword	ptr -1Ch

		sub	esp, 1Ch
		cmp	dwTlsIndex, 0FFFFFFFFh
		jz	short loc_67E114F0

loc_67E114DC:				; CODE XREF: sub_67E114D0+32j
		mov	[esp+1Ch+var_1C], offset dword_67E2E0A0
		call	dbus_threads_init

loc_67E114E8:				; CODE XREF: sub_67E114D0+34j
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E114F0:				; CODE XREF: sub_67E114D0+Aj
		call	ds:TlsAlloc
		mov	edx, eax
		mov	dwTlsIndex, eax
		xor	eax, eax
		cmp	edx, 0FFFFFFFFh
		jnz	short loc_67E114DC
		jmp	short loc_67E114E8
sub_67E114D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E11510	proc near		; DATA XREF: .rdata:67E2E0C8o

lpCriticalSection= dword ptr -1Ch
arg_0		= dword	ptr  4

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [esp+1Ch+arg_0]
		lea	edi, [ebx+4]
		mov	[esp+1Ch+lpCriticalSection], edi ; lpCriticalSection
		call	ds:EnterCriticalSection
		mov	edx, [ebx]
		sub	esp, 4
		test	edx, edx
		jz	short loc_67E1154B
		mov	esi, ds:SetEvent

loc_67E11535:				; CODE XREF: sub_67E11510+39j
		mov	[esp+1Ch+lpCriticalSection], ebx
		call	sub_67DFBFF0
		mov	[esp+1Ch+lpCriticalSection], eax ; hEvent
		call	esi ; SetEvent
		mov	eax, [ebx]
		sub	esp, 4
		test	eax, eax
		jnz	short loc_67E11535

loc_67E1154B:				; CODE XREF: sub_67E11510+1Dj
		mov	[esp+1Ch+lpCriticalSection], edi ; lpCriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
sub_67E11510	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E11560	proc near		; DATA XREF: .rdata:67E2E0C4o

lpCriticalSection= dword ptr -1Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_8], ebx
		lea	ebx, [esi+4]
		mov	[esp+1Ch+lpCriticalSection], ebx ; lpCriticalSection
		call	ds:EnterCriticalSection
		mov	ecx, [esi]
		sub	esp, 4
		test	ecx, ecx
		jz	short loc_67E115A8
		mov	[esp+1Ch+lpCriticalSection], esi
		call	sub_67DFBFF0
		mov	[esp+1Ch+lpCriticalSection], eax ; hEvent
		call	ds:SetEvent
		sub	esp, 4
		mov	[esp+1Ch+lpCriticalSection], 0 ; dwMilliseconds
		call	ds:Sleep
		sub	esp, 4

loc_67E115A8:				; CODE XREF: sub_67E11560+22j
		mov	[esp+1Ch+lpCriticalSection], ebx ; lpCriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4
		mov	ebx, [esp+1Ch+var_8]
		mov	esi, [esp+1Ch+var_4]
		add	esp, 1Ch
		retn
sub_67E11560	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E115C0(HANDLE)
sub_67E115C0	proc near		; DATA XREF: .rdata:67E2E0ACo

hHandle		= dword	ptr -1Ch
dwMilliseconds	= dword	ptr -18h
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+dwMilliseconds], 0FFFFFFFFh ; dwMilliseconds
		mov	[esp+1Ch+hHandle], eax ; hHandle
		call	ds:WaitForSingleObject
		sub	esp, 8
		cmp	eax, 0FFFFFFFFh
		setnz	al
		add	esp, 1Ch
		movzx	eax, al
		retn
sub_67E115C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E115F0	proc near		; CODE XREF: sub_67E117F0+12j
					; sub_67E11810+13j

var_60		= dword	ptr -60h
dwTlsIndex	= dword	ptr -5Ch
dwMilliseconds	= dword	ptr -58h
bInitialState	= dword	ptr -54h
lpName		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 5Ch
		mov	[esp+5Ch+var_10], ebx
		mov	ebx, eax
		mov	eax, dwTlsIndex
		mov	[esp+5Ch+var_C], esi
		mov	[esp+5Ch+var_8], edi
		mov	[esp+5Ch+var_4], ebp
		mov	[esp+5Ch+var_20], edx
		mov	[esp+5Ch+var_24], ecx
		mov	[esp+5Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsGetValue
		sub	esp, 4
		test	eax, eax
		mov	esi, eax
		jz	loc_67E11761

loc_67E11628:				; CODE XREF: sub_67E115F0+1B8j
		lea	edi, [ebx+4]
		mov	ebp, ds:EnterCriticalSection
		mov	[esp+5Ch+dwTlsIndex], edi ; lpCriticalSection
		call	ebp ; EnterCriticalSection
		mov	eax, ds:WaitForSingleObject
		sub	esp, 4
		mov	[esp+5Ch+dwMilliseconds], 0 ; dwMilliseconds
		mov	[esp+5Ch+dwTlsIndex], esi ; hHandle
		mov	[esp+5Ch+var_28], eax
		call	eax ; WaitForSingleObject
		sub	esp, 8
		cmp	eax, 102h
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+dwTlsIndex], eax
		mov	[esp+5Ch+var_4C], offset a_dbus_condvar_ ; "_dbus_condvar_wait_win32"
		mov	[esp+5Ch+lpName], 0A2h
		mov	[esp+5Ch+bInitialState], offset	aRBuildWin32_36	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+dwMilliseconds], offset aWaitforsingleo ; "WaitForSingleObject	(event,	0) == WAIT_"...
		call	sub_67DFAE70
		mov	[esp+5Ch+dwMilliseconds], esi
		mov	[esp+5Ch+dwTlsIndex], ebx
		call	sub_67DFBB80
		mov	edx, ds:LeaveCriticalSection
		mov	[esp+5Ch+dwTlsIndex], edi ; lpCriticalSection
		mov	[esp+5Ch+var_2C], edx
		mov	[esp+5Ch+var_30], eax
		call	edx ; LeaveCriticalSection
		sub	esp, 4
		mov	eax, [esp+5Ch+var_30]
		test	eax, eax
		jnz	short loc_67E116C5

loc_67E116AF:				; CODE XREF: sub_67E115F0+19Dj
		xor	eax, eax

loc_67E116B1:				; CODE XREF: sub_67E115F0+16Cj
		mov	ebx, [esp+5Ch+var_10]
		mov	esi, [esp+5Ch+var_C]
		mov	edi, [esp+5Ch+var_8]
		mov	ebp, [esp+5Ch+var_4]
		add	esp, 5Ch
		retn
; ---------------------------------------------------------------------------

loc_67E116C5:				; CODE XREF: sub_67E115F0+BDj
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+dwTlsIndex], eax
		call	sub_67DF1AD0
		mov	edx, [esp+5Ch+var_24]
		mov	[esp+5Ch+dwTlsIndex], esi
		mov	[esp+5Ch+dwMilliseconds], edx
		call	[esp+5Ch+var_28]
		sub	esp, 8
		mov	[esp+5Ch+var_24], eax
		mov	eax, [esp+5Ch+var_20]
		mov	[esp+5Ch+dwTlsIndex], eax
		call	sub_67DF1A90
		cmp	[esp+5Ch+var_24], 102h
		jz	loc_67E117B0

loc_67E11701:				; CODE XREF: sub_67E115F0+1F4j
		mov	[esp+5Ch+dwTlsIndex], edi ; lpCriticalSection
		call	ebp ; EnterCriticalSection
		sub	esp, 4
		mov	[esp+5Ch+dwMilliseconds], esi
		mov	[esp+5Ch+dwTlsIndex], ebx
		call	sub_67DFBBE0
		mov	[esp+5Ch+var_4C], offset a_dbus_condvar_ ; "_dbus_condvar_wait_win32"
		mov	[esp+5Ch+lpName], 0C1h
		mov	[esp+5Ch+bInitialState], offset	aRBuildWin32_36	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+5Ch+dwMilliseconds], offset a_dbus_list_rem ; "_dbus_list_remove (&cond->list, event) "...
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[esp+5Ch+dwTlsIndex], eax
		call	sub_67DFAE70
		mov	[esp+5Ch+dwTlsIndex], edi
		call	[esp+5Ch+var_2C]
		xor	eax, eax
		sub	esp, 4
		cmp	[esp+5Ch+var_24], 102h
		setnz	al
		jmp	loc_67E116B1
; ---------------------------------------------------------------------------

loc_67E11761:				; CODE XREF: sub_67E115F0+32j
		mov	[esp+5Ch+lpName], 0 ; lpName
		mov	[esp+5Ch+bInitialState], 0 ; bInitialState
		mov	[esp+5Ch+dwMilliseconds], 0 ; bManualReset
		mov	[esp+5Ch+dwTlsIndex], 0	; lpEventAttributes
		call	ds:CreateEventA
		sub	esp, 10h
		test	eax, eax
		mov	esi, eax
		jz	loc_67E116AF
		mov	[esp+5Ch+dwMilliseconds], eax ;	lpTlsValue
		mov	eax, dwTlsIndex
		mov	[esp+5Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsSetValue
		sub	esp, 8
		jmp	loc_67E11628
; ---------------------------------------------------------------------------
		align 10h

loc_67E117B0:				; CODE XREF: sub_67E115F0+10Bj
		mov	[esp+5Ch+dwTlsIndex], edi ; lpCriticalSection
		call	ebp ; EnterCriticalSection
		sub	esp, 4
		mov	[esp+5Ch+dwMilliseconds], esi
		mov	[esp+5Ch+dwTlsIndex], ebx
		call	sub_67DFBBE0
		mov	[esp+5Ch+dwMilliseconds], 0
		mov	[esp+5Ch+dwTlsIndex], esi
		call	[esp+5Ch+var_28]
		sub	esp, 8
		mov	[esp+60h+var_28], eax
		mov	[esp+60h+var_60], edi
		call	[esp+60h+var_30]
		sub	esp, 4
		jmp	loc_67E11701
sub_67E115F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E117F0	proc near		; DATA XREF: .rdata:67E2E0C0o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 0Ch
		mov	ecx, [esp+0Ch+arg_8]
		mov	edx, [esp+0Ch+arg_4]
		mov	eax, [esp+0Ch+arg_0]
		add	esp, 0Ch
		jmp	sub_67E115F0
sub_67E117F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E11810	proc near		; DATA XREF: .rdata:67E2E0BCo

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 0Ch
		mov	ecx, 0FFFFFFFFh
		mov	edx, [esp+0Ch+arg_4]
		mov	eax, [esp+0Ch+arg_0]
		add	esp, 0Ch
		jmp	sub_67E115F0
sub_67E11810	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E11830	proc near		; DATA XREF: .rdata:67E2E0B8o

lpCriticalSection= dword ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		lea	eax, [ebx+4]
		mov	[esp+1Ch+lpCriticalSection], eax ; lpCriticalSection
		call	ds:DeleteCriticalSection
		sub	esp, 4
		mov	[esp+1Ch+lpCriticalSection], ebx
		call	sub_67DFBC90
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	dbus_free
sub_67E11830	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E11860	proc near		; DATA XREF: .rdata:67E2E0B4o

lpCriticalSection= dword ptr -1Ch

		push	ebx
		sub	esp, 18h
		mov	[esp+1Ch+lpCriticalSection], 1Ch ; Size
		call	dbus_malloc
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67E1188B
		mov	dword ptr [eax], 0
		lea	eax, [eax+4]
		mov	[esp+1Ch+lpCriticalSection], eax ; lpCriticalSection
		call	ds:InitializeCriticalSection
		sub	esp, 4

loc_67E1188B:				; CODE XREF: sub_67E11860+14j
		mov	eax, ebx
		add	esp, 18h
		pop	ebx
		retn
sub_67E11860	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E118A0(HANDLE)
sub_67E118A0	proc near		; DATA XREF: .rdata:67E2E0B0o

hMutex		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+hMutex], eax ;	hMutex
		call	ds:ReleaseMutex
		sub	esp, 4
		test	eax, eax
		setnz	al
		add	esp, 1Ch
		movzx	eax, al
		retn
sub_67E118A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E118C0(HANDLE)
sub_67E118C0	proc near		; DATA XREF: .rdata:67E2E0A8o

hObject		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+hObject], eax ; hObject
		call	ds:CloseHandle
		sub	esp, 4
		add	esp, 1Ch
		retn
sub_67E118C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E118E0	proc near		; DATA XREF: .rdata:67E2E0A4o

lpMutexAttributes= dword ptr -1Ch
bInitialOwner	= dword	ptr -18h
lpName		= dword	ptr -14h

		sub	esp, 1Ch
		mov	[esp+1Ch+lpName], 0 ; lpName
		mov	[esp+1Ch+bInitialOwner], 0 ; bInitialOwner
		mov	[esp+1Ch+lpMutexAttributes], 0 ; lpMutexAttributes
		call	ds:CreateMutexA
		sub	esp, 0Ch
		add	esp, 1Ch
		retn
sub_67E118E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E11910	proc near		; CODE XREF: sub_67DC1260+40p
					; sub_67DC1260+A6p ...

dwTlsIndex	= dword	ptr -1Ch
lpTlsValue	= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		cmp	eax, 1
		jz	short loc_67E11990
		jb	short loc_67E11933
		cmp	eax, 3
		jz	loc_67E119A4

loc_67E11927:				; CODE XREF: sub_67E11910+2Bj
					; sub_67E11910+9Cj
		mov	eax, 1
		add	esp, 1Ch
		nop
		retn	0Ch
; ---------------------------------------------------------------------------

loc_67E11933:				; CODE XREF: sub_67E11910+Cj
		mov	eax, dwTlsIndex
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E11927
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsGetValue
		sub	esp, 4
		mov	[esp+1Ch+dwTlsIndex], eax ; hObject
		call	ds:CloseHandle
		mov	eax, dwTlsIndex
		sub	esp, 4
		mov	[esp+1Ch+lpTlsValue], 0	; lpTlsValue
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsSetValue
		mov	eax, dwTlsIndex
		sub	esp, 8
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsFree
		mov	eax, 1
		sub	esp, 4
		add	esp, 1Ch
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_67E11990:				; CODE XREF: sub_67E11910+Aj
		mov	eax, [esp+1Ch+arg_0]
		mov	ds:dword_67E349C0, eax
		mov	eax, 1
		add	esp, 1Ch
		retn	0Ch
; ---------------------------------------------------------------------------

loc_67E119A4:				; CODE XREF: sub_67E11910+11j
		mov	eax, dwTlsIndex
		cmp	eax, 0FFFFFFFFh
		jz	loc_67E11927
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsGetValue
		sub	esp, 4
		mov	[esp+1Ch+dwTlsIndex], eax ; hObject
		call	ds:CloseHandle
		mov	eax, dwTlsIndex
		sub	esp, 4
		mov	[esp+1Ch+lpTlsValue], 0	; lpTlsValue
		mov	[esp+1Ch+dwTlsIndex], eax ; dwTlsIndex
		call	ds:TlsSetValue
		mov	eax, 1
		sub	esp, 8
		add	esp, 1Ch
		retn	0Ch
sub_67E11910	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, 1F4h
		retn
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	dword ptr [esp+0Ch], offset aWaitingForMore ; "Waiting for more	memory\n"
		mov	dword ptr [esp+8], offset a_dbus_wait_for ; "_dbus_wait_for_memory"
		mov	dword ptr [esp+4], 39Bh
		mov	dword ptr [esp], offset	aRBuildWin32_37	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp], 1F4h
		call	sub_67E0B530
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_loop_qui ; "_dbus_loop_quit"
		mov	dword ptr [esp+0Ch], 385h
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLoopDepth0 ;	"loop->depth > 0"
		cmp	dword ptr [ebx+14h], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx+14h]
		lea	edx, [eax-1]
		mov	[ebx+14h], edx
		mov	[esp+14h], edx
		mov	[esp+10h], eax
		mov	dword ptr [esp+0Ch], offset aQuitMainLoopDe ; "Quit main loop, depth %d	-> %d\n"
		mov	dword ptr [esp+8], offset a_dbus_loop_qui ; "_dbus_loop_quit"
		mov	dword ptr [esp+4], 38Ah
		mov	dword ptr [esp], offset	aRBuildWin32_37	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_loop_ref ; "_dbus_loop_ref"
		mov	dword ptr [esp+0Ch], 0EBh
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+4], offset aLoopNull ; "loop != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_loop_ref ; "_dbus_loop_ref"
		mov	dword ptr [esp+0Ch], 0ECh
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLoopRefcount0 ; "loop->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, ebx
		add	dword ptr [ebx], 1
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		jmp	short loc_67E11B40
; ---------------------------------------------------------------------------
		align 10h

loc_67E11B40:				; CODE XREF: .text:67E11B31j
		sub	esp, 1Ch
		mov	dword ptr [esp], 1Ch
		call	dbus_malloc0
		test	eax, eax
		jz	short loc_67E11B59
		mov	dword ptr [eax], 1

loc_67E11B59:				; CODE XREF: .text:67E11B51j
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E11B60	proc near		; CODE XREF: .text:67E12295p
					; .text:67E125E2p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
Format		= dword	ptr -30h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 3Ch
		mov	[esp+3Ch+var_10], ebx
		mov	ebx, eax
		mov	[esp+3Ch+var_C], esi
		mov	[esp+3Ch+var_8], edi
		mov	edi, ecx
		mov	[esp+3Ch+var_4], ebp
		mov	eax, [ecx+10h]
		mov	ebp, edx
		mov	[esp+3Ch+var_3C], eax
		call	dbus_timeout_get_interval
		mov	edx, 10624DD3h
		mov	esi, eax
		imul	edx
		mov	eax, esi
		sar	eax, 1Fh
		mov	ecx, esi
		sar	edx, 6
		sub	edx, eax
		mov	eax, [edi+18h]
		add	eax, edx
		imul	edx, 3E8h
		sub	ecx, edx
		imul	ecx, 3E8h
		add	ecx, [edi+1Ch]
		cmp	ecx, 0F423Fh
		jbe	short loc_67E11BC0
		sub	ecx, 0F4240h
		add	eax, 1

loc_67E11BC0:				; CODE XREF: sub_67E11B60+55j
		sub	eax, ebx
		mov	[esp+3Ch+var_20], eax
		js	short loc_67E11C3A
		sub	ecx, ebp
		mov	edx, 10624DD3h
		mov	eax, ecx
		imul	edx
		sar	ecx, 1Fh
		sar	edx, 6
		sub	edx, ecx
		js	short loc_67E11C32

loc_67E11BDD:				; CODE XREF: sub_67E11B60+125j
		cmp	[esp+3Ch+var_20], 20C49Bh
		jle	loc_67E11C67
		mov	eax, [esp+3Ch+arg_0]
		mov	edx, 7FFFFFFFh
		cmp	esi, edx
		mov	dword ptr [eax], 7FFFFFFFh
		jge	short loc_67E11C4A
		xchg	ax, ax

loc_67E11C00:				; CODE XREF: sub_67E11B60+E8j
		mov	[esp+3Ch+Format], offset aSystemClockSet ; "System clock set backward! Resetting ti"...
		mov	[esp+3Ch+var_34], offset aCheck_timeout	; "check_timeout"
		mov	[esp+3Ch+var_38], 1C1h ; int
		mov	[esp+3Ch+var_3C], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, [esp+3Ch+arg_0]
		mov	[edi+18h], ebx
		mov	[edi+1Ch], ebp
		mov	[eax], esi
		jmp	short loc_67E11C4C
; ---------------------------------------------------------------------------

loc_67E11C32:				; CODE XREF: sub_67E11B60+7Bj
		mov	eax, [esp+3Ch+var_20]
		test	eax, eax
		jnz	short loc_67E11C7A

loc_67E11C3A:				; CODE XREF: sub_67E11B60+66j
		mov	eax, [esp+3Ch+arg_0]
		xor	edx, edx
		mov	dword ptr [eax], 0

loc_67E11C46:				; CODE XREF: sub_67E11B60+118j
		cmp	esi, edx
		jl	short loc_67E11C00

loc_67E11C4A:				; CODE XREF: sub_67E11B60+9Cj
		mov	esi, edx

loc_67E11C4C:				; CODE XREF: sub_67E11B60+D0j
		xor	eax, eax
		test	esi, esi
		mov	ebx, [esp+3Ch+var_10]
		setz	al
		mov	esi, [esp+3Ch+var_C]
		mov	edi, [esp+3Ch+var_8]
		mov	ebp, [esp+3Ch+var_4]
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_67E11C67:				; CODE XREF: sub_67E11B60+85j
		imul	eax, [esp+3Ch+var_20], 3E8h
		lea	edx, [eax+edx]
		mov	eax, [esp+3Ch+arg_0]
		mov	[eax], edx
		jmp	short loc_67E11C46
; ---------------------------------------------------------------------------

loc_67E11C7A:				; CODE XREF: sub_67E11B60+D8j
		add	edx, 3E8h
		sub	[esp+3Ch+var_20], 1
		jmp	loc_67E11BDD
sub_67E11B60	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+30h]
		mov	dword ptr [esp], 20h
		call	dbus_malloc
		test	eax, eax
		mov	ebx, eax
		jz	loc_67E11D84
		mov	eax, [esp+34h]
		mov	[ebx+10h], eax
		mov	eax, [esp+38h]
		mov	[ebx+14h], eax
		lea	eax, [ebx+1Ch]
		mov	[esp+4], eax
		lea	eax, [ebx+18h]
		mov	[esp], eax
		call	sub_67E0E540
		mov	eax, [esp+3Ch]
		mov	dword ptr [ebx], 1
		mov	dword ptr [ebx+4], 1
		mov	[ebx+8], eax
		mov	eax, [esp+40h]
		mov	[ebx+0Ch], eax
		lea	eax, [esi+4]
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_67DFBB80
		test	eax, eax
		jnz	short loc_67E11D60
		mov	dword ptr [ebx+0Ch], 0
		xor	eax, eax
		mov	dword ptr [esp+10h], offset aCallback_unref ; "callback_unref"
		mov	dword ptr [esp+0Ch], 0A2h
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aCbRefcount0 ; "cb->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jnz	short loc_67E11D84
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	short loc_67E11D4E
		mov	edx, [ebx+8]
		mov	[esp], edx
		call	eax

loc_67E11D4E:				; CODE XREF: .text:67E11D44j
		mov	[esp], ebx
		call	dbus_free
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E11D60:				; CODE XREF: .text:67E11CFBj
		mov	edx, [ebx+4]
		add	dword ptr [esi+8], 1
		test	edx, edx
		jz	short loc_67E11D90
		cmp	edx, 1
		mov	eax, 1
		jnz	short loc_67E11D86
		add	dword ptr [esi+10h], 1
		mov	eax, 1
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E11D84:				; CODE XREF: .text:67E11CA9j
					; .text:67E11D3Dj
		xor	eax, eax

loc_67E11D86:				; CODE XREF: .text:67E11D73j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E11D90:				; CODE XREF: .text:67E11D69j
		add	dword ptr [esi+0Ch], 1
		mov	eax, 1
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		sub	esp, 18h
		mov	eax, [esp+20h]
		mov	ebx, [esp+24h]
		add	eax, 18h
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_67DFBB80
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short loc_67E11DD0
		mov	[esp], ebx
		call	dbus_connection_ref
		mov	eax, 1

loc_67E11DD0:				; CODE XREF: .text:67E11DC1j
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_loop_unr ; "_dbus_loop_unref"
		mov	dword ptr [esp+0Ch], 0F6h
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+4], offset aLoopNull ; "loop != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_loop_unr ; "_dbus_loop_unref"
		mov	dword ptr [esp+0Ch], 0F7h
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLoopRefcount0 ; "loop->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jnz	short loc_67E11E85
		mov	ecx, [ebx+18h]
		test	ecx, ecx
		jz	short loc_67E11E77
		lea	esi, [ebx+18h]
		lea	esi, [esi+0]

loc_67E11E60:				; CODE XREF: .text:67E11E75j
		mov	[esp], esi
		call	sub_67DFBFF0
		mov	[esp], eax
		call	dbus_connection_unref
		mov	edx, [ebx+18h]
		test	edx, edx
		jnz	short loc_67E11E60

loc_67E11E77:				; CODE XREF: .text:67E11E58j
		mov	[esp+30h], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67E11E85:				; CODE XREF: .text:67E11E51j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	edi
		xor	eax, eax
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [esp+20h]
		mov	edi, [esi+18h]
		test	edi, edi
		jz	short loc_67E11F14
		lea	edi, [esi+18h]

loc_67E11EA6:				; CODE XREF: .text:67E11F0Dj
		mov	[esp], edi
		call	sub_67DFBFF0
		mov	ebx, eax

loc_67E11EB0:				; CODE XREF: .text:67E11EC0j
		mov	[esp], ebx
		call	dbus_connection_dispatch
		cmp	eax, 1
		jz	short loc_67E11F00

loc_67E11EBD:				; CODE XREF: .text:67E11EFDj
		cmp	eax, 2
		jnz	short loc_67E11EB0
		mov	dword ptr [esp+0Ch], offset aWaitingForMore ; "Waiting for more	memory\n"
		mov	dword ptr [esp+8], offset a_dbus_wait_for ; "_dbus_wait_for_memory"
		mov	dword ptr [esp+4], 39Bh
		mov	dword ptr [esp], offset	aRBuildWin32_37	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp], 1F4h
		call	sub_67E0B530
		mov	[esp], ebx
		call	dbus_connection_dispatch
		cmp	eax, 1
		jnz	short loc_67E11EBD
		nop

loc_67E11F00:				; CODE XREF: .text:67E11EBBj
		mov	[esp], ebx
		call	dbus_connection_unref
		mov	ebx, [esi+18h]
		test	ebx, ebx
		jnz	short loc_67E11EA6
		mov	eax, 1

loc_67E11F14:				; CODE XREF: .text:67E11EA1j
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E11F20	proc near		; CODE XREF: .text:67E12043j
					; sub_67E12070+74j

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 2Ch
		mov	[esp+2Ch+var_C], ebx
		mov	ebx, eax
		mov	[esp+2Ch+var_4], edi
		mov	edi, edx
		mov	[esp+2Ch+var_8], esi
		mov	esi, [edx+8]
		mov	eax, [esi+4]
		test	eax, eax
		jnz	short loc_67E11FB6
		sub	dword ptr [ebx+0Ch], 1

loc_67E11F41:				; CODE XREF: sub_67E11F20+99j
					; sub_67E11F20+9Fj
		mov	[esp+2Ch+var_1C], offset aCallback_unref ; "callback_unref"
		xor	eax, eax
		mov	[esp+2Ch+var_20], 0A2h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aCbRefcount0 ;	"cb->refcount >	0"
		cmp	dword ptr [esi], 0
		setnle	al
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFAE70
		mov	eax, [esi]
		sub	eax, 1
		test	eax, eax
		mov	[esi], eax
		jnz	short loc_67E11F93
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	short loc_67E11F8B
		mov	edx, [esi+8]
		mov	[esp+2Ch+var_2C], edx
		call	eax

loc_67E11F8B:				; CODE XREF: sub_67E11F20+61j
		mov	[esp+2Ch+var_2C], esi
		call	dbus_free

loc_67E11F93:				; CODE XREF: sub_67E11F20+5Aj
		lea	eax, [ebx+4]
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], eax
		call	sub_67DFBE40
		mov	esi, [esp+2Ch+var_8]
		add	dword ptr [ebx+8], 1
		mov	edi, [esp+2Ch+var_4]
		mov	ebx, [esp+2Ch+var_C]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_67E11FB6:				; CODE XREF: sub_67E11F20+1Bj
		cmp	eax, 1
		jnz	short loc_67E11F41
		sub	dword ptr [ebx+10h], 1
		jmp	short loc_67E11F41
sub_67E11F20	endp

; ---------------------------------------------------------------------------
		jmp	short loc_67E11FD0
; ---------------------------------------------------------------------------
		align 10h

loc_67E11FD0:				; CODE XREF: .text:67E11FC1j
		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	eax, [esp+58h]
		mov	ebx, [esp+50h]
		mov	esi, [esp+54h]
		mov	edi, [esp+5Ch]
		mov	[esp+2Ch], eax
		lea	eax, [ebx+4]
		mov	[esp], eax
		call	sub_67DFB910
		test	eax, eax
		jz	short loc_67E12048
		mov	ebp, [ebx+4]
		mov	[esp+1Ch], ebx
		jmp	short loc_67E12009
; ---------------------------------------------------------------------------

loc_67E12003:				; CODE XREF: .text:67E1201Fj
					; .text:67E12024j ...
		test	edx, edx
		mov	eax, edx
		jz	short loc_67E12048

loc_67E12009:				; CODE XREF: .text:67E12001j
		mov	edx, [eax+4]
		xor	ecx, ecx
		cmp	edx, ebp
		setz	cl
		sub	ecx, 1
		and	edx, ecx
		mov	ecx, [eax+8]
		cmp	dword ptr [ecx+4], 1
		jnz	short loc_67E12003
		cmp	[ecx+10h], esi
		jnz	short loc_67E12003
		cmp	[ecx+8], edi
		jnz	short loc_67E12003
		mov	ebx, [esp+2Ch]
		cmp	[ecx+14h], ebx
		jnz	short loc_67E12003
		mov	ebx, [esp+1Ch]
		mov	edx, eax
		add	esp, 3Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	sub_67E11F20
; ---------------------------------------------------------------------------

loc_67E12048:				; CODE XREF: .text:67E11FF8j
					; .text:67E12007j
		mov	eax, [esp+2Ch]
		mov	[esp+5Ch], edi
		mov	[esp+54h], esi
		mov	dword ptr [esp+50h], offset aCouldNotFindTi ; "could not find timeout %p function %p d"...
		mov	[esp+58h], eax
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	sub_67DFAD60
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E12070	proc near		; CODE XREF: .text:67E126D8p
					; .text:67E12770p ...

var_4C		= dword	ptr -4Ch
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	eax, [esp+4Ch+arg_8]
		mov	ebx, [esp+4Ch+arg_0]
		mov	esi, dword ptr [esp+4Ch+arg_4]
		mov	edi, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_20], eax
		lea	eax, [ebx+4]
		mov	[esp+4Ch+var_4C], eax
		call	sub_67DFB910
		test	eax, eax
		jz	short loc_67E120F0
		mov	ebp, [ebx+4]
		mov	[esp+4Ch+var_30], ebx
		jmp	short loc_67E120A9
; ---------------------------------------------------------------------------

loc_67E120A3:				; CODE XREF: sub_67E12070+50j
					; sub_67E12070+55j ...
		test	edx, edx
		mov	eax, edx
		jz	short loc_67E120F0

loc_67E120A9:				; CODE XREF: sub_67E12070+31j
		mov	edx, [eax+4]
		xor	ecx, ecx
		cmp	edx, ebp
		setz	cl
		sub	ecx, 1
		and	edx, ecx
		mov	ecx, [eax+8]
		mov	ebx, [ecx+4]
		test	ebx, ebx
		jnz	short loc_67E120A3
		cmp	[ecx+14h], esi
		jnz	short loc_67E120A3
		cmp	[ecx+8], edi
		jnz	short loc_67E120A3
		mov	ebx, [esp+4Ch+var_20]
		cmp	[ecx+10h], ebx
		jnz	short loc_67E120A3
		mov	ebx, [esp+4Ch+var_30]
		mov	edx, eax
		add	esp, 3Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	sub_67E11F20
; ---------------------------------------------------------------------------
		align 10h

loc_67E120F0:				; CODE XREF: sub_67E12070+28j
					; sub_67E12070+37j
		mov	eax, [esp+4Ch+var_20]
		mov	[esp+4Ch+arg_C], edi
		mov	dword ptr [esp+4Ch+arg_4], esi ; char
		mov	[esp+4Ch+arg_0], offset	aCouldNotFindWa	; "could not find watch	%p function %p dat"...
		mov	[esp+4Ch+arg_8], eax
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	sub_67DFAD60
sub_67E12070	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 36Ch
		mov	ebx, [esp+380h]
		mov	dword ptr [esp+3Ch], 0
		mov	esi, [ebx+4]
		mov	eax, [ebx+14h]
		test	esi, esi
		mov	[esp+34h], eax
		jz	loc_67E12443
		mov	eax, [ebx+0Ch]
		cmp	eax, 40h
		jg	loc_67E1277A
		lea	edx, [esp+54h]
		lea	edi, [esp+254h]
		mov	ebp, edx
		mov	[esp+48h], edx

loc_67E12168:				; CODE XREF: .text:67E127EEj
					; .text:67E12840j
		lea	edx, [ebx+4]
		mov	[esp+44h], edx
		mov	[esp], edx
		call	sub_67DFB910
		test	eax, eax
		jz	loc_67E128A9
		mov	dword ptr [esp+40h], 0
		mov	dword ptr [esp+38h], 0
		mov	dword ptr [esp+3Ch], 0
		mov	[esp+30h], edi
		mov	[esp+4Ch], ebp
		jmp	short loc_67E121A7
; ---------------------------------------------------------------------------

loc_67E121A1:				; CODE XREF: .text:67E121BFj
					; .text:67E12313j ...
		test	esi, esi
		mov	eax, esi
		jz	short loc_67E121F6

loc_67E121A7:				; CODE XREF: .text:67E1219Fj
					; .text:67E121F4j
		mov	edi, [eax+8]
		xor	edx, edx
		mov	esi, [eax+4]
		cmp	esi, [ebx+4]
		mov	ecx, [edi+4]
		setz	dl
		sub	edx, 1
		and	esi, edx
		test	ecx, ecx
		jnz	short loc_67E121A1
		mov	eax, [edi+14h]
		mov	[esp], eax
		call	dbus_watch_get_socket
		mov	ebp, eax
		movzx	eax, byte ptr [edi+18h]
		test	al, 1
		jz	loc_67E122FB
		and	eax, 0FFFFFFFEh
		test	esi, esi
		mov	[edi+18h], al
		mov	eax, esi
		mov	dword ptr [esp+40h], 1
		mov	dword ptr [esp+3Ch], 1
		jnz	short loc_67E121A7

loc_67E121F6:				; CODE XREF: .text:67E121A5j
		mov	edi, [esp+30h]
		mov	ebp, [esp+4Ch]

loc_67E121FE:				; CODE XREF: .text:67E128C1j
		mov	edx, [ebx+10h]
		test	edx, edx
		jle	loc_67E124D6
		lea	eax, [esp+35Ch]
		mov	[esp+4], eax
		lea	eax, [esp+358h]
		mov	[esp], eax
		call	sub_67E0E540
		mov	eax, [esp+44h]
		mov	[esp], eax
		call	sub_67DFB910
		test	eax, eax
		jz	loc_67E124D6
		mov	dword ptr [esp+30h], 0FFFFFFFFh
		mov	esi, ebx
		jmp	short loc_67E1224D
; ---------------------------------------------------------------------------

loc_67E12243:				; CODE XREF: .text:67E12264j
					; .text:67E1227Bj ...
		test	ebx, ebx
		mov	eax, ebx
		jz	loc_67E122F4

loc_67E1224D:				; CODE XREF: .text:67E12241j
		mov	ebx, [eax+4]
		xor	edx, edx
		cmp	ebx, [esi+4]
		mov	ecx, [eax+8]
		setz	dl
		sub	edx, 1
		and	ebx, edx
		cmp	dword ptr [ecx+4], 1
		jnz	short loc_67E12243
		mov	eax, [ecx+10h]
		mov	[esp+28h], ecx
		mov	[esp], eax
		call	dbus_timeout_get_enabled
		mov	ecx, [esp+28h]
		test	eax, eax
		jz	short loc_67E12243
		lea	edx, [esp+354h]
		mov	eax, [esp+358h]
		mov	[esp], edx
		mov	edx, [esp+35Ch]
		call	sub_67E11B60
		mov	eax, [esp+30h]
		test	eax, eax
		js	loc_67E12899
		mov	eax, [esp+354h]
		cmp	[esp+30h], eax
		jg	loc_67E12852

loc_67E122B7:				; CODE XREF: .text:67E12856j
					; .text:67E128A4j
		mov	eax, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_loop_ite ; "_dbus_loop_iterate"
		mov	dword ptr [esp+0Ch], 2AAh
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	dword ptr [esp+4], offset aTimeout0 ; "timeout >= 0"
		mov	[esp], eax
		call	sub_67DFAE70
		mov	ecx, [esp+30h]
		test	ecx, ecx
		jnz	loc_67E12243

loc_67E122F4:				; CODE XREF: .text:67E12247j
		mov	ebx, esi
		jmp	loc_67E124DE
; ---------------------------------------------------------------------------

loc_67E122FB:				; CODE XREF: .text:67E121D4j
		cmp	ebp, 0FFFFFFFFh
		xchg	ax, ax
		jz	loc_67E12745
		mov	eax, [edi+14h]
		mov	[esp], eax
		call	dbus_watch_get_enabled
		test	eax, eax
		jz	loc_67E121A1
		mov	ecx, [esp+38h]
		mov	eax, [esp+30h]
		mov	[eax+ecx*4], edi
		xor	eax, eax
		mov	dword ptr [esp+10h], offset aCallback_ref ; "callback_ref"
		mov	dword ptr [esp+0Ch], 98h
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aCbRefcount0 ; "cb->refcount > 0"
		cmp	dword ptr [edi], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [edi+14h]
		add	dword ptr [edi], 1
		mov	[esp], eax
		call	dbus_watch_get_flags
		mov	ecx, [esp+38h]
		mov	edi, [esp+4Ch]
		lea	edx, [edi+ecx*8]
		mov	ecx, 4
		test	al, 1
		mov	[edx], ebp
		mov	word ptr [edx+6], 0
		mov	word ptr [edx+4], 0
		jnz	loc_67E12845

loc_67E12388:				; CODE XREF: .text:67E1284Dj
		test	al, 2
		jz	short loc_67E12390
		mov	[edx+4], cx

loc_67E12390:				; CODE XREF: .text:67E1238Aj
		add	dword ptr [esp+38h], 1
		jmp	loc_67E121A1
; ---------------------------------------------------------------------------

loc_67E1239A:				; CODE XREF: .text:67E125A0j
					; .text:67E125ADj
		mov	edi, [esp+44h]
		mov	ebx, esi
		mov	ebp, [esp+4Ch]

loc_67E123A4:				; CODE XREF: .text:67E1262Cj
					; .text:67E12638j ...
		cmp	ebp, [esp+48h]
		jz	short loc_67E123B2
		mov	[esp], ebp
		call	dbus_free

loc_67E123B2:				; CODE XREF: .text:67E123A8j
		test	edi, edi
		jz	loc_67E12443
		mov	ebp, [esp+38h]
		test	ebp, ebp
		jz	short loc_67E12430
		mov	[esp+34h], ebx
		mov	ebx, [esp+38h]
		xor	ebp, ebp
		lea	esi, [esi+0]

loc_67E123D0:				; CODE XREF: .text:67E1242Aj
		mov	esi, [edi+ebp*4]
		xor	eax, eax
		mov	dword ptr [esp+10h], offset aCallback_unref ; "callback_unref"
		mov	dword ptr [esp+0Ch], 0A2h
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aCbRefcount0 ; "cb->refcount > 0"
		cmp	dword ptr [esi], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [esi]
		sub	eax, 1
		test	eax, eax
		mov	[esi], eax
		jnz	short loc_67E12425
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	short loc_67E1241D
		mov	edx, [esi+8]
		mov	[esp], edx
		call	eax

loc_67E1241D:				; CODE XREF: .text:67E12413j
		mov	[esp], esi
		call	dbus_free

loc_67E12425:				; CODE XREF: .text:67E1240Cj
		add	ebp, 1
		cmp	ebx, ebp
		jg	short loc_67E123D0
		mov	ebx, [esp+34h]

loc_67E12430:				; CODE XREF: .text:67E123C0j
		lea	eax, [esp+254h]
		cmp	edi, eax
		jz	short loc_67E12443
		mov	[esp], edi
		call	dbus_free

loc_67E12443:				; CODE XREF: .text:67E12145j
					; .text:67E123B4j ...
		mov	edi, [ebx+18h]
		test	edi, edi
		jz	short loc_67E124C7
		lea	edi, [ebx+18h]
		lea	esi, [esi+0]

loc_67E12450:				; CODE XREF: .text:67E124BDj
		mov	[esp], edi
		call	sub_67DFBFF0
		mov	esi, eax
		lea	esi, [esi+0]

loc_67E12460:				; CODE XREF: .text:67E12470j
		mov	[esp], esi
		call	dbus_connection_dispatch
		cmp	eax, 1
		jz	short loc_67E124B0

loc_67E1246D:				; CODE XREF: .text:67E124ADj
		cmp	eax, 2
		jnz	short loc_67E12460
		mov	dword ptr [esp+0Ch], offset aWaitingForMore ; "Waiting for more	memory\n"
		mov	dword ptr [esp+8], offset a_dbus_wait_for ; "_dbus_wait_for_memory"
		mov	dword ptr [esp+4], 39Bh
		mov	dword ptr [esp], offset	aRBuildWin32_37	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp], 1F4h
		call	sub_67E0B530
		mov	[esp], esi
		call	dbus_connection_dispatch
		cmp	eax, 1
		jnz	short loc_67E1246D
		nop

loc_67E124B0:				; CODE XREF: .text:67E1246Bj
		mov	[esp], esi
		call	dbus_connection_unref
		mov	esi, [ebx+18h]
		test	esi, esi
		jnz	short loc_67E12450
		mov	dword ptr [esp+3Ch], 1

loc_67E124C7:				; CODE XREF: .text:67E12448j
		mov	eax, [esp+3Ch]
		add	esp, 36Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E124D6:				; CODE XREF: .text:67E12203j
					; .text:67E12231j
		mov	dword ptr [esp+30h], 0FFFFFFFFh

loc_67E124DE:				; CODE XREF: .text:67E122F6j
		mov	edx, [esp+384h]
		test	edx, edx
		jz	short loc_67E124F0
		mov	eax, [ebx+18h]
		test	eax, eax
		jz	short loc_67E124F8

loc_67E124F0:				; CODE XREF: .text:67E124E7j
		mov	dword ptr [esp+30h], 0

loc_67E124F8:				; CODE XREF: .text:67E124EEj
		mov	esi, [esp+40h]
		test	esi, esi
		jz	short loc_67E12512
		cmp	dword ptr [esp+30h], 1F3h
		jle	short loc_67E12512
		mov	dword ptr [esp+30h], 1F4h

loc_67E12512:				; CODE XREF: .text:67E124FEj
					; .text:67E12508j
		mov	eax, [esp+30h]
		mov	edx, [esp+38h]
		mov	[esp], ebp
		mov	[esp+8], eax
		mov	[esp+4], edx
		call	sub_67E0CD90
		mov	ecx, [ebx+8]
		mov	[esp+30h], ecx
		mov	ecx, [ebx+10h]
		mov	[esp+40h], eax
		test	ecx, ecx
		jle	loc_67E12626
		lea	eax, [esp+358h]
		mov	[esp+4], eax
		lea	eax, [esp+35Ch]
		mov	[esp], eax
		call	sub_67E0E540
		mov	eax, [esp+44h]
		mov	[esp], eax
		call	sub_67DFB910
		test	eax, eax
		jz	loc_67E12626
		mov	[esp+4Ch], ebp
		mov	esi, ebx
		mov	ebp, [esp+30h]
		mov	[esp+44h], edi
		jmp	short loc_67E1258A
; ---------------------------------------------------------------------------
		align 10h

loc_67E12580:				; CODE XREF: .text:67E125B7j
					; .text:67E125C6j ...
		test	ebx, ebx
		mov	eax, ebx
		jz	loc_67E1261C

loc_67E1258A:				; CODE XREF: .text:67E1257Cj
		mov	ebx, [eax+4]
		xor	edx, edx
		cmp	ebx, [esi+4]
		mov	edi, [eax+8]
		setz	dl
		sub	edx, 1
		and	ebx, edx
		cmp	[esi+8], ebp
		jnz	loc_67E1239A
		mov	edx, [esp+34h]
		cmp	[esi+14h], edx
		jnz	loc_67E1239A
		cmp	dword ptr [edi+4], 1
		jnz	short loc_67E12580
		mov	eax, [edi+10h]
		mov	[esp], eax
		call	dbus_timeout_get_enabled
		test	eax, eax
		jz	short loc_67E12580
		mov	edx, [esp+358h]
		lea	ecx, [esp+354h]
		mov	eax, [esp+35Ch]
		mov	[esp], ecx
		mov	ecx, edi
		call	sub_67E11B60
		test	eax, eax
		jz	short loc_67E12580
		mov	eax, [esp+35Ch]
		mov	[edi+18h], eax
		mov	eax, [esp+358h]
		mov	[edi+1Ch], eax
		mov	eax, [edi+8]
		mov	[esp+4], eax
		mov	eax, [edi+10h]
		mov	[esp], eax
		call	dword ptr [edi+14h]
		mov	dword ptr [esp+3Ch], 1
		jmp	loc_67E12580
; ---------------------------------------------------------------------------

loc_67E1261C:				; CODE XREF: .text:67E12584j
		mov	edi, [esp+44h]
		mov	ebx, esi
		mov	ebp, [esp+4Ch]

loc_67E12626:				; CODE XREF: .text:67E1253Aj
					; .text:67E12568j
		mov	edx, [esp+40h]
		test	edx, edx
		jle	loc_67E123A4
		mov	eax, [esp+38h]
		test	eax, eax
		jz	loc_67E123A4
		mov	ecx, [ebx+8]
		cmp	ecx, [esp+30h]
		jnz	loc_67E123A4
		mov	eax, [ebx+14h]
		xor	esi, esi
		mov	edx, [esp+34h]
		mov	[esp+30h], eax
		cmp	eax, edx
		jnz	loc_67E123A4
		mov	[esp+34h], edi
		mov	edx, ebp
		jmp	loc_67E126FC
; ---------------------------------------------------------------------------

loc_67E1266B:				; CODE XREF: .text:67E12723j
		or	edi, 4

loc_67E1266E:				; CODE XREF: .text:67E12731j
		mov	eax, [ebp+14h]
		mov	[esp+2Ch], edx
		mov	[esp+28h], ecx
		mov	[esp], eax
		call	dbus_watch_get_enabled
		mov	edx, [esp+2Ch]
		mov	ecx, [esp+28h]
		test	eax, eax
		jnz	loc_67E1285B
		movsx	eax, word ptr [edx+esi*8+6]

loc_67E12696:				; CODE XREF: .text:67E1272Bj
					; .text:67E12894j
		test	al, 20h
		jz	short loc_67E126E5
		mov	eax, [edx+esi*8]
		mov	[esp+2Ch], edx
		mov	[esp+28h], ecx
		mov	dword ptr [esp], offset	aInvalidRequest	; "invalid request, socket fd %d not open\"...
		mov	[esp+4], eax
		call	sub_67DFAD60
		mov	eax, [ebp+14h]
		mov	[esp], eax
		call	sub_67DF7750
		mov	eax, [ebp+8]
		mov	[esp+0Ch], eax
		mov	eax, [ebp+10h]
		mov	[esp+8], eax
		mov	eax, [ebp+14h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_67E12070
		mov	ecx, [esp+28h]
		mov	edx, [esp+2Ch]

loc_67E126E5:				; CODE XREF: .text:67E12698j
					; .text:67E12704j
		add	esi, 1
		cmp	[esp+38h], esi
		jle	short loc_67E12736
		cmp	[ebx+8], ecx
		jnz	short loc_67E12736
		mov	edi, [esp+30h]
		cmp	[ebx+14h], edi
		jnz	short loc_67E12736

loc_67E126FC:				; CODE XREF: .text:67E12666j
		movzx	eax, word ptr [edx+esi*8+6]
		test	ax, ax
		jz	short loc_67E126E5
		mov	edi, [esp+34h]
		cwde
		mov	ebp, [edi+esi*4]
		mov	edi, eax
		and	edi, 1
		test	al, 4
		jz	short loc_67E1271A
		or	edi, 2

loc_67E1271A:				; CODE XREF: .text:67E12715j
		test	al, 10h
		jz	short loc_67E12721
		or	edi, 8

loc_67E12721:				; CODE XREF: .text:67E1271Cj
		test	al, 8
		jnz	loc_67E1266B
		test	edi, edi
		jz	loc_67E12696
		jmp	loc_67E1266E
; ---------------------------------------------------------------------------

loc_67E12736:				; CODE XREF: .text:67E126ECj
					; .text:67E126F1j ...
		mov	edi, [esp+34h]
		mov	ebp, edx
		lea	esi, [esi+0]
		jmp	loc_67E123A4
; ---------------------------------------------------------------------------

loc_67E12745:				; CODE XREF: .text:67E12300j
		mov	eax, [edi+14h]
		mov	dword ptr [esp], offset	aWatchPWasInval	; "watch %p was	invalidated but	not remove"...
		mov	[esp+4], eax
		call	sub_67DFAD60
		mov	eax, [edi+8]
		mov	[esp+0Ch], eax
		mov	eax, [edi+10h]
		mov	[esp+8], eax
		mov	eax, [edi+14h]
		mov	[esp], ebx
		mov	[esp+4], eax
		call	sub_67E12070
		jmp	loc_67E121A1
; ---------------------------------------------------------------------------

loc_67E1277A:				; CODE XREF: .text:67E12151j
		shl	eax, 3
		mov	[esp], eax
		call	dbus_malloc0
		test	eax, eax
		mov	ebp, eax
		jnz	short loc_67E127D4
		nop
		lea	esi, [esi+0]

loc_67E12790:				; CODE XREF: .text:67E127D0j
		mov	dword ptr [esp+0Ch], offset aWaitingForMore ; "Waiting for more	memory\n"
		mov	dword ptr [esp+8], offset a_dbus_wait_for ; "_dbus_wait_for_memory"
		mov	dword ptr [esp+4], 39Bh
		mov	dword ptr [esp], offset	aRBuildWin32_37	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp], 1F4h
		call	sub_67E0B530
		mov	eax, [ebx+0Ch]
		shl	eax, 3
		mov	[esp], eax
		call	dbus_malloc0
		test	eax, eax
		jz	short loc_67E12790
		mov	ebp, eax

loc_67E127D4:				; CODE XREF: .text:67E12789j
		mov	eax, [ebx+0Ch]
		shl	eax, 2
		mov	[esp], eax
		call	dbus_malloc
		lea	ecx, [esp+54h]
		mov	[esp+48h], ecx
		test	eax, eax
		mov	edi, eax
		jnz	loc_67E12168

loc_67E127F4:				; CODE XREF: .text:67E12834j
		mov	dword ptr [esp+0Ch], offset aWaitingForMore ; "Waiting for more	memory\n"
		mov	dword ptr [esp+8], offset a_dbus_wait_for ; "_dbus_wait_for_memory"
		mov	dword ptr [esp+4], 39Bh
		mov	dword ptr [esp], offset	aRBuildWin32_37	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	dword ptr [esp], 1F4h
		call	sub_67E0B530
		mov	eax, [ebx+0Ch]
		shl	eax, 2
		mov	[esp], eax
		call	dbus_malloc
		test	eax, eax
		jz	short loc_67E127F4
		mov	edi, eax
		lea	eax, [esp+54h]
		mov	[esp+48h], eax
		jmp	loc_67E12168
; ---------------------------------------------------------------------------

loc_67E12845:				; CODE XREF: .text:67E12382j
		mov	word ptr [edx+4], 1
		mov	cl, 5
		jmp	loc_67E12388
; ---------------------------------------------------------------------------

loc_67E12852:				; CODE XREF: .text:67E122B1j
		mov	[esp+30h], eax
		jmp	loc_67E122B7
; ---------------------------------------------------------------------------

loc_67E1285B:				; CODE XREF: .text:67E1268Bj
		mov	eax, [ebp+8]
		mov	[esp+4], edi
		mov	[esp+2Ch], edx
		mov	[esp+28h], ecx
		mov	[esp+8], eax
		mov	eax, [ebp+14h]
		mov	[esp], eax
		call	dword ptr [ebp+10h]
		mov	edx, [esp+2Ch]
		mov	ecx, [esp+28h]
		test	eax, eax
		jnz	short loc_67E12887
		or	byte ptr [ebp+18h], 1

loc_67E12887:				; CODE XREF: .text:67E12881j
		movsx	eax, word ptr [edx+esi*8+6]
		mov	dword ptr [esp+3Ch], 1
		jmp	loc_67E12696
; ---------------------------------------------------------------------------

loc_67E12899:				; CODE XREF: .text:67E122A0j
		mov	ecx, [esp+354h]
		mov	[esp+30h], ecx
		jmp	loc_67E122B7
; ---------------------------------------------------------------------------

loc_67E128A9:				; CODE XREF: .text:67E12179j
		mov	dword ptr [esp+40h], 0
		mov	dword ptr [esp+38h], 0
		mov	dword ptr [esp+3Ch], 0
		jmp	loc_67E121FE
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E128D0	proc near		; CODE XREF: .text:67E13144p

Size		= dword	ptr -37Ch
var_378		= byte ptr -378h
var_374		= dword	ptr -374h
Format		= dword	ptr -370h
var_36C		= byte ptr -36Ch
var_354		= dword	ptr -354h
var_350		= dword	ptr -350h
var_34C		= dword	ptr -34Ch
var_348		= dword	ptr -348h
var_344		= dword	ptr -344h
var_340		= dword	ptr -340h
var_33C		= dword	ptr -33Ch
var_338		= dword	ptr -338h
var_334		= dword	ptr -334h
var_330		= dword	ptr -330h
var_328		= byte ptr -328h
var_128		= byte ptr -128h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 36Ch
		mov	esi, [ebx+4]
		mov	eax, [eax+14h]
		mov	[esp+37Ch+var_340], 0
		test	esi, esi
		mov	[esp+37Ch+var_348], eax
		jz	loc_67E12BF3
		mov	eax, [ebx+0Ch]
		cmp	eax, 40h
		jg	loc_67E12F20
		lea	edx, [esp+37Ch+var_328]
		lea	edi, [esp+37Ch+var_128]
		mov	ebp, edx
		mov	[esp+37Ch+var_330], edx

loc_67E12913:				; CODE XREF: sub_67E128D0+6BFj
					; sub_67E128D0+711j
		lea	edx, [ebx+4]
		mov	[esp+37Ch+var_338], edx
		mov	[esp+37Ch+Size], edx
		call	sub_67DFB910
		test	eax, eax
		jz	loc_67E13050
		mov	[esp+37Ch+var_340], 0
		mov	[esp+37Ch+var_33C], 0
		mov	[esp+37Ch+var_344], 0
		mov	[esp+37Ch+var_34C], ebp
		mov	[esp+37Ch+var_334], edi
		jmp	short loc_67E12956
; ---------------------------------------------------------------------------
		align 10h

loc_67E12950:				; CODE XREF: sub_67E128D0+9Ej
					; sub_67E128D0+1EEj ...
		test	esi, esi
		jz	short loc_67E129A3

loc_67E12954:				; CODE XREF: sub_67E128D0+D1j
		mov	eax, esi

loc_67E12956:				; CODE XREF: sub_67E128D0+7Aj
		mov	ebp, [eax+8]
		xor	edx, edx
		mov	esi, [eax+4]
		cmp	esi, [ebx+4]
		mov	ecx, [ebp+4]
		setz	dl
		sub	edx, 1
		and	esi, edx
		test	ecx, ecx
		jnz	short loc_67E12950
		mov	eax, [ebp+14h]
		mov	[esp+37Ch+Size], eax
		call	dbus_watch_get_socket
		mov	edi, eax
		movzx	eax, byte ptr [ebp+18h]
		test	al, 1
		jz	loc_67E12AA8
		and	eax, 0FFFFFFFEh
		test	esi, esi
		mov	[ebp+18h], al
		mov	[esp+37Ch+var_33C], 1
		mov	[esp+37Ch+var_340], 1
		jnz	short loc_67E12954

loc_67E129A3:				; CODE XREF: sub_67E128D0+82j
		mov	ebp, [esp+37Ch+var_34C]
		mov	edi, [esp+37Ch+var_334]

loc_67E129AB:				; CODE XREF: sub_67E128D0+798j
		mov	edx, [ebx+10h]
		test	edx, edx
		jle	loc_67E12C80
		lea	eax, [esp+37Ch+var_20]
		mov	dword ptr [esp+37Ch+var_378], eax
		lea	eax, [esp+37Ch+var_24]
		mov	[esp+37Ch+Size], eax
		call	sub_67E0E540
		mov	eax, [esp+37Ch+var_338]
		mov	[esp+37Ch+Size], eax
		call	sub_67DFB910
		test	eax, eax
		jz	loc_67E12C80
		mov	[esp+37Ch+var_34C], 0FFFFFFFFh
		mov	esi, ebx
		jmp	short loc_67E129FA
; ---------------------------------------------------------------------------

loc_67E129F0:				; CODE XREF: sub_67E128D0+141j
					; sub_67E128D0+158j ...
		test	ebx, ebx
		jz	loc_67E12AA1
		mov	eax, ebx

loc_67E129FA:				; CODE XREF: sub_67E128D0+11Ej
		mov	ebx, [eax+4]
		xor	edx, edx
		cmp	ebx, [esi+4]
		mov	ecx, [eax+8]
		setz	dl
		sub	edx, 1
		and	ebx, edx
		cmp	dword ptr [ecx+4], 1
		jnz	short loc_67E129F0
		mov	eax, [ecx+10h]
		mov	[esp+37Ch+var_354], ecx
		mov	[esp+37Ch+Size], eax
		call	dbus_timeout_get_enabled
		mov	ecx, [esp+37Ch+var_354]
		test	eax, eax
		jz	short loc_67E129F0
		lea	edx, [esp+37Ch+var_28]
		mov	eax, [esp+37Ch+var_24]
		mov	[esp+37Ch+Size], edx
		mov	edx, [esp+37Ch+var_20]
		call	sub_67E11B60
		mov	eax, [esp+37Ch+var_34C]
		test	eax, eax
		js	loc_67E13040
		mov	eax, [esp+37Ch+var_28]
		cmp	[esp+37Ch+var_34C], eax
		jg	loc_67E12F15

loc_67E12A64:				; CODE XREF: sub_67E128D0+649j
					; sub_67E128D0+77Bj
		mov	eax, [esp+37Ch+var_34C]
		mov	dword ptr [esp+37Ch+var_36C], offset a_dbus_loop_ite ; "_dbus_loop_iterate"
		mov	[esp+37Ch+Format], 2AAh
		mov	[esp+37Ch+var_374], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		not	eax
		shr	eax, 1Fh
		mov	dword ptr [esp+37Ch+var_378], offset aTimeout0 ; "timeout >= 0"
		mov	[esp+37Ch+Size], eax
		call	sub_67DFAE70
		mov	ecx, [esp+37Ch+var_34C]
		test	ecx, ecx
		jnz	loc_67E129F0

loc_67E12AA1:				; CODE XREF: sub_67E128D0+122j
		mov	ebx, esi
		jmp	loc_67E12C88
; ---------------------------------------------------------------------------

loc_67E12AA8:				; CODE XREF: sub_67E128D0+B3j
		cmp	edi, 0FFFFFFFFh
		jz	loc_67E12EE0
		mov	eax, [ebp+14h]
		mov	[esp+37Ch+Size], eax
		call	dbus_watch_get_enabled
		test	eax, eax
		jz	loc_67E12950
		mov	ecx, [esp+37Ch+var_344]
		mov	eax, [esp+37Ch+var_334]
		mov	[eax+ecx*4], ebp
		xor	eax, eax
		mov	dword ptr [esp+37Ch+var_36C], offset aCallback_ref ; "callback_ref"
		mov	[esp+37Ch+Format], 98h
		mov	[esp+37Ch+var_374], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+37Ch+var_378], offset aCbRefcount0 ; "cb->refcount > 0"
		cmp	dword ptr [ebp+0], 0
		setnle	al
		mov	[esp+37Ch+Size], eax
		call	sub_67DFAE70
		mov	eax, [ebp+14h]
		add	dword ptr [ebp+0], 1
		mov	[esp+37Ch+Size], eax
		call	dbus_watch_get_flags
		mov	ecx, [esp+37Ch+var_344]
		mov	ebp, [esp+37Ch+var_34C]
		lea	edx, [ebp+ecx*8+0]
		mov	ecx, 4
		test	al, 1
		mov	[edx], edi
		mov	word ptr [edx+6], 0
		mov	word ptr [edx+4], 0
		jnz	loc_67E12FE6
		test	al, 2
		jz	short loc_67E12B3E

loc_67E12B3A:				; CODE XREF: sub_67E128D0+726j
		mov	[edx+4], cx

loc_67E12B3E:				; CODE XREF: sub_67E128D0+268j
					; sub_67E128D0+720j
		add	[esp+37Ch+var_344], 1
		jmp	loc_67E12950
; ---------------------------------------------------------------------------

loc_67E12B48:				; CODE XREF: sub_67E128D0+468j
					; sub_67E128D0+475j
		mov	ebp, [esp+37Ch+var_338]
		mov	ebx, esi
		mov	edi, [esp+37Ch+var_334]

loc_67E12B52:				; CODE XREF: sub_67E128D0+4F4j
					; sub_67E128D0+500j ...
		cmp	ebp, [esp+37Ch+var_330]
		jz	short loc_67E12B60
		mov	[esp+37Ch+Size], ebp
		call	dbus_free

loc_67E12B60:				; CODE XREF: sub_67E128D0+286j
		test	edi, edi
		jz	loc_67E12BF3
		mov	edx, [esp+37Ch+var_344]
		test	edx, edx
		jz	short loc_67E12BE0
		mov	[esp+37Ch+var_348], ebx
		mov	ebx, [esp+37Ch+var_344]
		xor	ebp, ebp
		lea	esi, [esi+0]

loc_67E12B80:				; CODE XREF: sub_67E128D0+30Aj
		mov	esi, [edi+ebp*4]
		xor	eax, eax
		mov	dword ptr [esp+37Ch+var_36C], offset aCallback_unref ; "callback_unref"
		mov	[esp+37Ch+Format], 0A2h
		mov	[esp+37Ch+var_374], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+37Ch+var_378], offset aCbRefcount0 ; "cb->refcount > 0"
		cmp	dword ptr [esi], 0
		setnle	al
		mov	[esp+37Ch+Size], eax
		call	sub_67DFAE70
		mov	eax, [esi]
		sub	eax, 1
		test	eax, eax
		mov	[esi], eax
		jnz	short loc_67E12BD5
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	short loc_67E12BCD
		mov	edx, [esi+8]
		mov	[esp+37Ch+Size], edx
		call	eax

loc_67E12BCD:				; CODE XREF: sub_67E128D0+2F3j
		mov	[esp+37Ch+Size], esi
		call	dbus_free

loc_67E12BD5:				; CODE XREF: sub_67E128D0+2ECj
		add	ebp, 1
		cmp	ebx, ebp
		jg	short loc_67E12B80
		mov	ebx, [esp+37Ch+var_348]

loc_67E12BE0:				; CODE XREF: sub_67E128D0+29Ej
		lea	eax, [esp+37Ch+var_128]
		cmp	edi, eax
		jz	short loc_67E12BF3
		mov	[esp+37Ch+Size], edi
		call	dbus_free

loc_67E12BF3:				; CODE XREF: sub_67E128D0+20j
					; sub_67E128D0+292j ...
		mov	eax, [ebx+18h]
		test	eax, eax
		jz	short loc_67E12C70
		lea	edi, [ebx+18h]
		lea	esi, [esi+0]

loc_67E12C00:				; CODE XREF: sub_67E128D0+396j
		mov	[esp+37Ch+Size], edi
		call	sub_67DFBFF0
		mov	esi, eax

loc_67E12C0A:				; CODE XREF: sub_67E128D0+34Aj
		mov	[esp+37Ch+Size], esi
		call	dbus_connection_dispatch
		cmp	eax, 1
		jz	short loc_67E12C59

loc_67E12C17:				; CODE XREF: sub_67E128D0+387j
		cmp	eax, 2
		jnz	short loc_67E12C0A
		mov	[esp+37Ch+Format], offset aWaitingForMore ; "Waiting for more memory\n"
		mov	[esp+37Ch+var_374], offset a_dbus_wait_for ; "_dbus_wait_for_memory"
		mov	dword ptr [esp+37Ch+var_378], 39Bh ; int
		mov	[esp+37Ch+Size], offset	aRBuildWin32_37	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+37Ch+Size], 1F4h ;	DWORD
		call	sub_67E0B530
		mov	[esp+37Ch+Size], esi
		call	dbus_connection_dispatch
		cmp	eax, 1
		jnz	short loc_67E12C17

loc_67E12C59:				; CODE XREF: sub_67E128D0+345j
		mov	[esp+37Ch+Size], esi
		call	dbus_connection_unref
		mov	ebp, [ebx+18h]
		test	ebp, ebp
		jnz	short loc_67E12C00
		mov	[esp+37Ch+var_340], 1

loc_67E12C70:				; CODE XREF: sub_67E128D0+328j
		mov	eax, [esp+37Ch+var_340]
		add	esp, 36Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E12C80:				; CODE XREF: sub_67E128D0+E0j
					; sub_67E128D0+10Ej
		mov	[esp+37Ch+var_34C], 0FFFFFFFFh

loc_67E12C88:				; CODE XREF: sub_67E128D0+1D3j
		mov	edx, [esp+37Ch+var_33C]
		cmp	dword ptr [ebx+18h], 1
		sbb	eax, eax
		and	[esp+37Ch+var_34C], eax
		test	edx, edx
		jz	short loc_67E12CAC
		cmp	[esp+37Ch+var_34C], 1F3h
		jle	short loc_67E12CAC
		mov	[esp+37Ch+var_34C], 1F4h

loc_67E12CAC:				; CODE XREF: sub_67E128D0+3C8j
					; sub_67E128D0+3D2j
		mov	eax, [esp+37Ch+var_34C]
		mov	edx, [esp+37Ch+var_344]
		mov	[esp+37Ch+Size], ebp
		mov	[esp+37Ch+var_374], eax
		mov	dword ptr [esp+37Ch+var_378], edx
		call	sub_67E0CD90
		mov	ecx, [ebx+8]
		mov	[esp+37Ch+var_33C], ecx
		mov	[esp+37Ch+var_34C], eax
		mov	eax, [ebx+10h]
		test	eax, eax
		jle	loc_67E12DBE
		lea	eax, [esp+37Ch+var_24]
		mov	dword ptr [esp+37Ch+var_378], eax
		lea	eax, [esp+37Ch+var_20]
		mov	[esp+37Ch+Size], eax
		call	sub_67E0E540
		mov	eax, [esp+37Ch+var_338]
		mov	[esp+37Ch+Size], eax
		call	sub_67DFB910
		test	eax, eax
		jz	loc_67E12DBE
		mov	[esp+37Ch+var_338], ebp
		mov	esi, ebx
		mov	ebp, [esp+37Ch+var_33C]
		mov	[esp+37Ch+var_334], edi
		jmp	short loc_67E12D22
; ---------------------------------------------------------------------------

loc_67E12D18:				; CODE XREF: sub_67E128D0+47Fj
					; sub_67E128D0+48Ej ...
		test	ebx, ebx
		jz	loc_67E12DB4
		mov	eax, ebx

loc_67E12D22:				; CODE XREF: sub_67E128D0+446j
		mov	ebx, [eax+4]
		xor	edx, edx
		cmp	ebx, [esi+4]
		mov	edi, [eax+8]
		setz	dl
		sub	edx, 1
		and	ebx, edx
		cmp	ebp, [esi+8]
		jnz	loc_67E12B48
		mov	edx, [esp+37Ch+var_348]
		cmp	edx, [esi+14h]
		jnz	loc_67E12B48
		cmp	dword ptr [edi+4], 1
		jnz	short loc_67E12D18
		mov	eax, [edi+10h]
		mov	[esp+37Ch+Size], eax
		call	dbus_timeout_get_enabled
		test	eax, eax
		jz	short loc_67E12D18
		mov	edx, [esp+37Ch+var_24]
		lea	ecx, [esp+37Ch+var_28]
		mov	eax, [esp+37Ch+var_20]
		mov	[esp+37Ch+Size], ecx
		mov	ecx, edi
		call	sub_67E11B60
		test	eax, eax
		jz	short loc_67E12D18
		mov	eax, [esp+37Ch+var_20]
		mov	[edi+18h], eax
		mov	eax, [esp+37Ch+var_24]
		mov	[edi+1Ch], eax
		mov	eax, [edi+8]
		mov	dword ptr [esp+37Ch+var_378], eax
		mov	eax, [edi+10h]
		mov	[esp+37Ch+Size], eax
		call	dword ptr [edi+14h]
		mov	[esp+37Ch+var_340], 1
		jmp	loc_67E12D18
; ---------------------------------------------------------------------------

loc_67E12DB4:				; CODE XREF: sub_67E128D0+44Aj
		mov	ebp, [esp+37Ch+var_338]
		mov	ebx, esi
		mov	edi, [esp+37Ch+var_334]

loc_67E12DBE:				; CODE XREF: sub_67E128D0+404j
					; sub_67E128D0+432j
		mov	esi, [esp+37Ch+var_34C]
		test	esi, esi
		jle	loc_67E12B52
		mov	ecx, [esp+37Ch+var_344]
		test	ecx, ecx
		jz	loc_67E12B52
		mov	eax, [esp+37Ch+var_33C]
		cmp	eax, [ebx+8]
		jnz	loc_67E12B52
		mov	edx, [esp+37Ch+var_348]
		xor	esi, esi
		cmp	edx, [ebx+14h]
		jnz	loc_67E12B52
		mov	edx, ebp
		mov	ecx, [esp+37Ch+var_33C]
		mov	[esp+37Ch+var_34C], edi
		jmp	loc_67E12E92
; ---------------------------------------------------------------------------

loc_67E12E01:				; CODE XREF: sub_67E128D0+5E9j
		or	edi, 4

loc_67E12E04:				; CODE XREF: sub_67E128D0+5F7j
		mov	eax, [ebp+14h]
		mov	[esp+37Ch+var_350], edx
		mov	[esp+37Ch+var_354], ecx
		mov	[esp+37Ch+Size], eax
		call	dbus_watch_get_enabled
		mov	edx, [esp+37Ch+var_350]
		mov	ecx, [esp+37Ch+var_354]
		test	eax, eax
		jnz	loc_67E13000
		movsx	eax, word ptr [edx+esi*8+6]

loc_67E12E2C:				; CODE XREF: sub_67E128D0+5F1j
					; sub_67E128D0+769j
		test	al, 20h
		jz	short loc_67E12E7B
		mov	eax, [edx+esi*8]
		mov	[esp+37Ch+var_350], edx
		mov	[esp+37Ch+var_354], ecx
		mov	[esp+37Ch+Size], offset	aInvalidRequest	; "invalid request, socket fd %d not open\"...
		mov	dword ptr [esp+37Ch+var_378], eax ; char
		call	sub_67DFAD60
		mov	eax, [ebp+14h]
		mov	[esp+37Ch+Size], eax
		call	sub_67DF7750
		mov	eax, [ebp+8]
		mov	[esp+37Ch+Format], eax
		mov	eax, [ebp+10h]
		mov	[esp+37Ch+var_374], eax
		mov	eax, [ebp+14h]
		mov	[esp+37Ch+Size], ebx
		mov	dword ptr [esp+37Ch+var_378], eax
		call	sub_67E12070
		mov	ecx, [esp+37Ch+var_354]
		mov	edx, [esp+37Ch+var_350]

loc_67E12E7B:				; CODE XREF: sub_67E128D0+55Ej
					; sub_67E128D0+5CAj
		add	esi, 1
		cmp	[esp+37Ch+var_344], esi
		jle	short loc_67E12ED0
		cmp	ecx, [ebx+8]
		jnz	short loc_67E12ED0
		mov	edi, [esp+37Ch+var_348]
		cmp	edi, [ebx+14h]
		jnz	short loc_67E12ED0

loc_67E12E92:				; CODE XREF: sub_67E128D0+52Cj
		movzx	eax, word ptr [edx+esi*8+6]
		test	ax, ax
		jz	short loc_67E12E7B
		mov	edi, [esp+37Ch+var_34C]
		cwde
		mov	ebp, [edi+esi*4]
		mov	edi, eax
		and	edi, 1
		test	al, 4
		jz	short loc_67E12EB0
		or	edi, 2

loc_67E12EB0:				; CODE XREF: sub_67E128D0+5DBj
		test	al, 10h
		jz	short loc_67E12EB7
		or	edi, 8

loc_67E12EB7:				; CODE XREF: sub_67E128D0+5E2j
		test	al, 8
		jnz	loc_67E12E01
		test	edi, edi
		jz	loc_67E12E2C
		jmp	loc_67E12E04
; ---------------------------------------------------------------------------
		align 10h

loc_67E12ED0:				; CODE XREF: sub_67E128D0+5B2j
					; sub_67E128D0+5B7j ...
		mov	ebp, edx
		mov	edi, [esp+37Ch+var_34C]
		jmp	loc_67E12B52
; ---------------------------------------------------------------------------
		align 10h

loc_67E12EE0:				; CODE XREF: sub_67E128D0+1DBj
		mov	eax, [ebp+14h]
		mov	[esp+37Ch+Size], offset	aWatchPWasInval	; "watch %p was	invalidated but	not remove"...
		mov	dword ptr [esp+37Ch+var_378], eax ; char
		call	sub_67DFAD60
		mov	eax, [ebp+8]
		mov	[esp+37Ch+Format], eax
		mov	eax, [ebp+10h]
		mov	[esp+37Ch+var_374], eax
		mov	eax, [ebp+14h]
		mov	[esp+37Ch+Size], ebx
		mov	dword ptr [esp+37Ch+var_378], eax
		call	sub_67E12070
		jmp	loc_67E12950
; ---------------------------------------------------------------------------

loc_67E12F15:				; CODE XREF: sub_67E128D0+18Ej
		mov	[esp+37Ch+var_34C], eax
		jmp	loc_67E12A64
; ---------------------------------------------------------------------------
		align 10h

loc_67E12F20:				; CODE XREF: sub_67E128D0+2Cj
		shl	eax, 3
		mov	[esp+37Ch+Size], eax ; size_t
		call	dbus_malloc0
		test	eax, eax
		mov	ebp, eax
		jnz	short loc_67E12F75

loc_67E12F31:				; CODE XREF: sub_67E128D0+6A1j
		mov	[esp+37Ch+Format], offset aWaitingForMore ; "Waiting for more memory\n"
		mov	[esp+37Ch+var_374], offset a_dbus_wait_for ; "_dbus_wait_for_memory"
		mov	dword ptr [esp+37Ch+var_378], 39Bh ; int
		mov	[esp+37Ch+Size], offset	aRBuildWin32_37	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+37Ch+Size], 1F4h ;	DWORD
		call	sub_67E0B530
		mov	eax, [ebx+0Ch]
		shl	eax, 3
		mov	[esp+37Ch+Size], eax ; size_t
		call	dbus_malloc0
		test	eax, eax
		jz	short loc_67E12F31
		mov	ebp, eax

loc_67E12F75:				; CODE XREF: sub_67E128D0+65Fj
		mov	eax, [ebx+0Ch]
		shl	eax, 2
		mov	[esp+37Ch+Size], eax ; Size
		call	dbus_malloc
		lea	ecx, [esp+37Ch+var_328]
		mov	[esp+37Ch+var_330], ecx
		test	eax, eax
		mov	edi, eax
		jnz	loc_67E12913

loc_67E12F95:				; CODE XREF: sub_67E128D0+705j
		mov	[esp+37Ch+Format], offset aWaitingForMore ; "Waiting for more memory\n"
		mov	[esp+37Ch+var_374], offset a_dbus_wait_for ; "_dbus_wait_for_memory"
		mov	dword ptr [esp+37Ch+var_378], 39Bh ; int
		mov	[esp+37Ch+Size], offset	aRBuildWin32_37	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp+37Ch+Size], 1F4h ;	DWORD
		call	sub_67E0B530
		mov	eax, [ebx+0Ch]
		shl	eax, 2
		mov	[esp+37Ch+Size], eax ; Size
		call	dbus_malloc
		test	eax, eax
		jz	short loc_67E12F95
		mov	edi, eax
		lea	eax, [esp+37Ch+var_328]
		mov	[esp+37Ch+var_330], eax
		jmp	loc_67E12913
; ---------------------------------------------------------------------------

loc_67E12FE6:				; CODE XREF: sub_67E128D0+260j
		test	al, 2
		mov	cl, 5
		mov	word ptr [edx+4], 1
		jz	loc_67E12B3E
		jmp	loc_67E12B3A
; ---------------------------------------------------------------------------
		align 10h

loc_67E13000:				; CODE XREF: sub_67E128D0+551j
		mov	eax, [ebp+8]
		mov	dword ptr [esp+37Ch+var_378], edi
		mov	[esp+37Ch+var_350], edx
		mov	[esp+37Ch+var_354], ecx
		mov	[esp+37Ch+var_374], eax
		mov	eax, [ebp+14h]
		mov	[esp+37Ch+Size], eax
		call	dword ptr [ebp+10h]
		mov	edx, [esp+37Ch+var_350]
		mov	ecx, [esp+37Ch+var_354]
		test	eax, eax
		jnz	short loc_67E1302C
		or	byte ptr [ebp+18h], 1

loc_67E1302C:				; CODE XREF: sub_67E128D0+756j
		movsx	eax, word ptr [edx+esi*8+6]
		mov	[esp+37Ch+var_340], 1
		jmp	loc_67E12E2C
; ---------------------------------------------------------------------------
		align 10h

loc_67E13040:				; CODE XREF: sub_67E128D0+17Dj
		mov	ecx, [esp+37Ch+var_28]
		mov	[esp+37Ch+var_34C], ecx
		jmp	loc_67E12A64
; ---------------------------------------------------------------------------

loc_67E13050:				; CODE XREF: sub_67E128D0+54j
		mov	[esp+37Ch+var_340], 0
		mov	[esp+37Ch+var_33C], 0
		mov	[esp+37Ch+var_344], 0
		jmp	loc_67E129AB
sub_67E128D0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_loop_run ; "_dbus_loop_run"
		mov	dword ptr [esp+0Ch], 372h
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLoopDepth0_0	; "loop->depth >= 0"
		mov	eax, [ebx+14h]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_loop_ref ; "_dbus_loop_ref"
		mov	dword ptr [esp+0Ch], 0EBh
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLoopNull ; "loop != NULL"
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_loop_ref ; "_dbus_loop_ref"
		mov	dword ptr [esp+0Ch], 0ECh
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLoopRefcount0 ; "loop->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	esi, [ebx+14h]
		add	dword ptr [ebx], 1
		lea	eax, [esi+1]
		mov	[ebx+14h], eax
		mov	[esp+14h], eax
		mov	[esp+10h], esi
		mov	dword ptr [esp+0Ch], offset aRunningMainLoo ; "Running main loop, depth	%d -> %d\n"
		mov	dword ptr [esp+8], offset a_dbus_loop_run ; "_dbus_loop_run"
		mov	dword ptr [esp+4], 37Ah
		mov	dword ptr [esp], offset	aRBuildWin32_37	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		cmp	[ebx+14h], esi
		jz	short loc_67E1314E

loc_67E13142:				; CODE XREF: .text:67E1314Cj
		mov	eax, ebx
		call	sub_67E128D0
		cmp	[ebx+14h], esi
		jnz	short loc_67E13142

loc_67E1314E:				; CODE XREF: .text:67E13140j
		mov	dword ptr [esp+10h], offset a_dbus_loop_unr ; "_dbus_loop_unref"
		mov	dword ptr [esp+0Ch], 0F6h
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLoopNull ; "loop != NULL"
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_loop_unr ; "_dbus_loop_unref"
		mov	dword ptr [esp+0Ch], 0F7h
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aLoopRefcount0 ; "loop->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jnz	short loc_67E131E5
		mov	edx, [ebx+18h]
		test	edx, edx
		jz	short loc_67E131D7
		lea	esi, [ebx+18h]
		nop

loc_67E131C0:				; CODE XREF: .text:67E131D5j
		mov	[esp], esi
		call	sub_67DFBFF0
		mov	[esp], eax
		call	dbus_connection_unref
		mov	eax, [ebx+18h]
		test	eax, eax
		jnz	short loc_67E131C0

loc_67E131D7:				; CODE XREF: .text:67E131BAj
		mov	[esp+30h], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67E131E5:				; CODE XREF: .text:67E131B3j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+30h]
		mov	dword ptr [esp], 1Ch
		call	dbus_malloc
		test	eax, eax
		mov	ebx, eax
		jz	loc_67E132D4
		mov	eax, [esp+34h]
		mov	dword ptr [ebx], 1
		mov	dword ptr [ebx+4], 0
		mov	[ebx+14h], eax
		mov	eax, [esp+38h]
		and	byte ptr [ebx+18h], 0FEh
		mov	[ebx+10h], eax
		mov	eax, [esp+3Ch]
		mov	[ebx+8], eax
		mov	eax, [esp+40h]
		mov	[ebx+0Ch], eax
		lea	eax, [esi+4]
		mov	[esp+4], ebx
		mov	[esp], eax
		call	sub_67DFBB80
		test	eax, eax
		jnz	short loc_67E132B0
		mov	dword ptr [ebx+0Ch], 0
		xor	eax, eax
		mov	dword ptr [esp+10h], offset aCallback_unref ; "callback_unref"
		mov	dword ptr [esp+0Ch], 0A2h
		mov	dword ptr [esp+8], offset aRBuildWin32_37 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aCbRefcount0 ; "cb->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jnz	short loc_67E132D4
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	short loc_67E132A0
		mov	edx, [ebx+8]
		mov	[esp], edx
		call	eax

loc_67E132A0:				; CODE XREF: .text:67E13296j
		mov	[esp], ebx
		call	dbus_free
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E132B0:				; CODE XREF: .text:67E1324Dj
		mov	edx, [ebx+4]
		add	dword ptr [esi+8], 1
		test	edx, edx
		jz	short loc_67E132E0
		cmp	edx, 1
		mov	eax, 1
		jnz	short loc_67E132D6
		add	dword ptr [esi+10h], 1
		mov	eax, 1
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E132D4:				; CODE XREF: .text:67E13209j
					; .text:67E1328Fj
		xor	eax, eax

loc_67E132D6:				; CODE XREF: .text:67E132C3j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E132E0:				; CODE XREF: .text:67E132B9j
		add	dword ptr [esi+0Ch], 1
		mov	eax, 1
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E132F0(char	*)
sub_67E132F0	proc near		; CODE XREF: .text:67E13735p

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
arg_0		= dword	ptr  4

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	eax, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_6C], eax ;	char *
		call	sub_67DFAA60
		mov	ebp, eax
		xor	eax, eax
		test	ebp, ebp
		jz	loc_67E133A5
		lea	edi, [esp+6Ch+var_30]
		mov	ebx, ebp
		mov	[esp+6Ch+var_6C], edi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67E1355A

loc_67E13325:				; CODE XREF: sub_67E132F0+191j
		movzx	eax, byte ptr [ebx]

loc_67E13328:				; CODE XREF: sub_67E132F0+D9j
					; sub_67E132F0+FEj
		test	al, al
		jz	short loc_67E13349
		cmp	al, 27h
		xchg	ax, ax
		jz	short loc_67E13377
		cmp	al, 22h
		jz	short loc_67E13377
		cmp	al, 5Ch
		jnz	short loc_67E133B0
		movzx	eax, byte ptr [ebx+1]
		lea	esi, [ebx+1]
		test	al, al
		jnz	loc_67E133D0

loc_67E13349:				; CODE XREF: sub_67E132F0+3Aj
		mov	[esp+6Ch+var_6C], edi
		call	sub_67E018E0
		mov	[esp+6Ch+var_6C], eax ;	char *
		call	sub_67DFAA60
		test	eax, eax
		jz	short loc_67E13393
		mov	[esp+6Ch+var_44], eax
		mov	[esp+6Ch+var_6C], ebp
		call	dbus_free
		mov	[esp+6Ch+var_6C], edi
		call	sub_67E02BF0
		mov	eax, [esp+6Ch+var_44]
		jmp	short loc_67E133A5
; ---------------------------------------------------------------------------

loc_67E13377:				; CODE XREF: sub_67E132F0+40j
					; sub_67E132F0+44j
		cmp	al, 22h
		mov	[esp+6Ch+var_40], ebx
		lea	esi, [ebx+1]
		jz	loc_67E13490
		cmp	byte ptr [ebx+1], 0
		jnz	loc_67E13433

loc_67E13390:				; CODE XREF: sub_67E132F0+13Dj
					; sub_67E132F0+1A4j ...
		mov	byte ptr [ebx],	0

loc_67E13393:				; CODE XREF: sub_67E132F0+6Bj
					; sub_67E132F0+D1j ...
		mov	[esp+6Ch+var_6C], ebp
		call	dbus_free
		mov	[esp+6Ch+var_6C], edi
		call	sub_67E02BF0
		xor	eax, eax

loc_67E133A5:				; CODE XREF: sub_67E132F0+19j
					; sub_67E132F0+85j ...
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E133B0:				; CODE XREF: sub_67E132F0+48j
		movzx	eax, al
		mov	[esp+6Ch+var_68], eax
		mov	[esp+6Ch+var_6C], edi
		call	sub_67E067A0
		test	eax, eax
		jz	short loc_67E13393
		add	ebx, 1
		movzx	eax, byte ptr [ebx]
		jmp	loc_67E13328
; ---------------------------------------------------------------------------
		align 10h

loc_67E133D0:				; CODE XREF: sub_67E132F0+53j
		cmp	al, 0Ah
		jz	short loc_67E133E7
		movzx	eax, al
		mov	[esp+6Ch+var_68], eax
		mov	[esp+6Ch+var_6C], edi
		call	sub_67E067A0
		test	eax, eax
		jz	short loc_67E13393

loc_67E133E7:				; CODE XREF: sub_67E132F0+E2j
		lea	ebx, [esi+1]
		movzx	eax, byte ptr [esi+1]
		jmp	loc_67E13328
; ---------------------------------------------------------------------------

loc_67E133F3:				; CODE XREF: sub_67E132F0+177j
		mov	[ebx], al
		add	esi, 1
		add	ebx, 1
		xor	eax, eax
		cmp	ebx, esi
		setb	al
		mov	[esp+6Ch+var_5C], offset aUnquote_string ; "unquote_string_inplace"
		mov	[esp+6Ch+var_60], 84h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_38 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aSDest	; "s > dest"
		mov	[esp+6Ch+var_6C], eax
		call	sub_67DFAE70
		cmp	byte ptr [esi],	0
		jz	loc_67E13390

loc_67E13433:				; CODE XREF: sub_67E132F0+9Aj
		xor	eax, eax
		cmp	esi, ebx
		setnbe	al
		mov	[esp+6Ch+var_6C], eax
		mov	[esp+6Ch+var_5C], offset aUnquote_string ; "unquote_string_inplace"
		mov	[esp+6Ch+var_60], 73h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_38 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aSDest	; "s > dest"
		call	sub_67DFAE70
		movzx	eax, byte ptr [esi]
		cmp	al, 27h
		jnz	short loc_67E133F3

loc_67E13469:				; CODE XREF: sub_67E132F0+1ECj
		mov	byte ptr [ebx],	0
		mov	eax, [esp+6Ch+var_40]
		lea	ebx, [esi+1]
		mov	[esp+6Ch+var_6C], edi ;	int
		mov	[esp+6Ch+var_68], eax ;	char *
		call	sub_67E08C10
		test	eax, eax
		jnz	loc_67E13325
		jmp	loc_67E13393
; ---------------------------------------------------------------------------
		align 10h

loc_67E13490:				; CODE XREF: sub_67E132F0+90j
		cmp	byte ptr [ebx+1], 0
		jz	loc_67E13390
		mov	eax, esi

loc_67E1349C:				; CODE XREF: sub_67E132F0+238j
		lea	ebx, [eax-1]
		xor	edx, edx
		cmp	ebx, esi
		setb	dl
		mov	[esp+6Ch+var_6C], edx
		mov	[esp+6Ch+var_44], eax
		mov	[esp+6Ch+var_5C], offset aUnquote_string ; "unquote_string_inplace"
		mov	[esp+6Ch+var_60], 42h
		mov	[esp+6Ch+var_64], offset aRBuildWin32_38 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aSDest	; "s > dest"
		call	sub_67DFAE70
		movzx	edx, byte ptr [esi]
		mov	eax, [esp+6Ch+var_44]
		cmp	dl, 22h
		jz	short loc_67E13469
		cmp	dl, 5Ch
		jz	short loc_67E13533
		mov	[eax-1], dl
		mov	ebx, eax
		add	esi, 1

loc_67E134EB:				; CODE XREF: sub_67E132F0+268j
					; sub_67E132F0+28Bj
		xor	edx, edx
		cmp	esi, eax
		setnbe	dl
		mov	[esp+6Ch+var_44], eax
		mov	[esp+6Ch+var_5C], offset aUnquote_string ; "unquote_string_inplace"
		mov	[esp+6Ch+var_60], 6Ch
		mov	[esp+6Ch+var_64], offset aRBuildWin32_38 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+6Ch+var_68], offset aSDest	; "s > dest"
		mov	[esp+6Ch+var_6C], edx
		call	sub_67DFAE70
		mov	eax, [esp+6Ch+var_44]
		add	eax, 1
		cmp	byte ptr [esi],	0
		jnz	loc_67E1349C
		jmp	loc_67E13390
; ---------------------------------------------------------------------------

loc_67E13533:				; CODE XREF: sub_67E132F0+1F1j
		add	esi, 1
		movzx	edx, byte ptr [esi]
		cmp	dl, 24h
		jz	short loc_67E13573
		xchg	ax, ax
		jg	short loc_67E13569
		cmp	dl, 0Ah
		jz	short loc_67E13573
		cmp	dl, 22h
		lea	esi, [esi+0]
		jz	short loc_67E13573

loc_67E13552:				; CODE XREF: sub_67E132F0+281j
		mov	byte ptr [eax-1], 5Ch
		mov	ebx, eax
		jmp	short loc_67E134EB
; ---------------------------------------------------------------------------

loc_67E1355A:				; CODE XREF: sub_67E132F0+2Fj
		mov	[esp+6Ch+var_6C], ebp
		call	dbus_free
		xor	eax, eax
		jmp	loc_67E133A5
; ---------------------------------------------------------------------------

loc_67E13569:				; CODE XREF: sub_67E132F0+250j
		cmp	dl, 5Ch
		jz	short loc_67E13573
		cmp	dl, 60h
		jnz	short loc_67E13552

loc_67E13573:				; CODE XREF: sub_67E132F0+24Cj
					; sub_67E132F0+255j ...
		mov	[eax-1], dl
		add	esi, 1
		mov	ebx, eax
		jmp	loc_67E134EB
sub_67E132F0	endp

; ---------------------------------------------------------------------------
		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebp, [esp+70h]
		mov	dword ptr [esp+4Ch], 0
		test	ebp, ebp
		jz	loc_67E139FD
		lea	edi, [esp+34h]
		mov	dword ptr [esp+48h], 0
		mov	[esp], edi
		call	sub_67E03350
		test	eax, eax
		jz	loc_67E13A4D
		movzx	edx, byte ptr [ebp+0]
		test	dl, dl
		jz	loc_67E13683
		mov	eax, edx
		mov	ebx, ebp
		xor	esi, esi
		xor	ecx, ecx
		jmp	short loc_67E1362C
; ---------------------------------------------------------------------------
		align 10h

loc_67E135D0:				; CODE XREF: .text:67E1362Fj
		cmp	cl, 23h
		jz	loc_67E1367A
		test	cl, cl
		jz	loc_67E137B0
		cmp	cl, al
		mov	edx, ecx
		jz	loc_67E138D0

loc_67E135EB:				; CODE XREF: .text:67E138E0j
					; .text:67E138E8j
		movzx	eax, al
		mov	[esp+28h], dl
		mov	[esp+4], eax
		mov	[esp], edi
		call	sub_67E067A0
		movzx	edx, byte ptr [esp+28h]
		test	eax, eax
		jz	loc_67E138B0
		movzx	eax, byte ptr [ebx]

loc_67E1360E:				; CODE XREF: .text:67E13669j
					; .text:67E1388Cj
		xor	esi, 1
		cmp	al, 5Ch
		setnz	al
		add	ebx, 1
		movzx	eax, al
		sub	eax, 1
		and	esi, eax
		movzx	eax, byte ptr [ebx]
		test	al, al
		jz	short loc_67E13683
		mov	ecx, edx
		mov	edx, eax

loc_67E1362C:				; CODE XREF: .text:67E135CBj
		cmp	cl, 5Ch
		jnz	short loc_67E135D0
		cmp	al, 0Ah
		jz	short loc_67E13664
		mov	dword ptr [esp+4], 5Ch
		mov	[esp], edi
		call	sub_67E067A0
		test	eax, eax
		jz	loc_67E138F8
		movzx	eax, byte ptr [ebx]
		mov	[esp], edi
		mov	[esp+4], eax
		call	sub_67E067A0
		test	eax, eax
		jz	loc_67E138F8

loc_67E13664:				; CODE XREF: .text:67E13633j
					; .text:67E13681j ...
		movzx	eax, byte ptr [ebx]
		xor	edx, edx
		jmp	short loc_67E1360E
; ---------------------------------------------------------------------------
		align 10h

loc_67E13670:				; CODE XREF: .text:67E1367Dj
		test	dl, dl
		jz	short loc_67E13683
		add	ebx, 1
		movzx	edx, byte ptr [ebx]

loc_67E1367A:				; CODE XREF: .text:67E135D3j
		cmp	dl, 0Ah
		jnz	short loc_67E13670
		test	dl, dl
		jnz	short loc_67E13664

loc_67E13683:				; CODE XREF: .text:67E135BDj
					; .text:67E13626j ...
		mov	[esp+28h], dl
		mov	[esp], edi
		call	sub_67E018E0
		mov	[esp], eax
		call	sub_67DFAA60
		movzx	edx, byte ptr [esp+28h]
		test	eax, eax
		mov	ebx, eax
		jz	loc_67E138F8
		mov	[esp+4], eax
		lea	eax, [esp+48h]
		mov	[esp+28h], dl
		mov	[esp], eax
		call	sub_67DFBB80
		movzx	edx, byte ptr [esp+28h]
		test	eax, eax
		jz	loc_67E139F0
		test	dl, dl
		jnz	loc_67E13A85
		mov	ebx, [esp+48h]
		test	ebx, ebx
		jz	loc_67E13AA6
		mov	[esp], edi
		call	sub_67E02BF0
		mov	eax, [esp+48h]
		test	eax, eax
		mov	[esp+4Ch], eax
		jz	loc_67E13931
		lea	ebp, [esp+4Ch]
		mov	[esp], ebp
		call	sub_67DFB9B0
		mov	[esp+2Ch], eax
		lea	eax, ds:4[eax*4]
		mov	[esp], eax
		call	dbus_malloc
		test	eax, eax
		mov	edi, eax
		jz	loc_67E13A2B
		mov	ebx, [esp+4Ch]
		test	ebx, ebx
		jz	short loc_67E1374E
		xor	esi, esi
		jmp	short loc_67E1372F
; ---------------------------------------------------------------------------

loc_67E13728:				; CODE XREF: .text:67E1374Cj
		test	ebx, ebx
		jz	short loc_67E1374E
		add	esi, 1

loc_67E1372F:				; CODE XREF: .text:67E13726j
		mov	eax, [ebx+8]
		mov	[esp], eax
		call	sub_67E132F0
		test	eax, eax
		mov	[edi+esi*4], eax
		jz	loc_67E13960
		mov	ebx, [ebx+4]
		cmp	ebx, [esp+4Ch]
		jnz	short loc_67E13728

loc_67E1374E:				; CODE XREF: .text:67E13722j
					; .text:67E1372Aj
		mov	edx, [esp+2Ch]
		mov	dword ptr [edi+edx*4], 0
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], offset dbus_free
		mov	[esp], ebp
		call	sub_67DFB9D0
		mov	[esp], ebp
		call	sub_67DFBC90
		mov	edx, [esp+74h]
		test	edx, edx
		jz	short loc_67E1378B
		mov	edx, [esp+2Ch]
		mov	eax, [esp+74h]
		mov	[eax], edx

loc_67E1378B:				; CODE XREF: .text:67E1377Fj
		mov	eax, [esp+78h]
		test	eax, eax
		jz	loc_67E13A6F
		mov	eax, [esp+78h]
		mov	[eax], edi
		mov	eax, 1

loc_67E137A2:				; CODE XREF: .text:67E1395Bj
					; .text:67E13A80j
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E137B0:				; CODE XREF: .text:67E135DBj
		cmp	al, 23h
		jz	loc_67E1388A
		jg	loc_67E13891
		cmp	al, 20h
		jz	short loc_67E137E2
		jg	loc_67E13870
		cmp	al, 9
		lea	esi, [esi+0]
		jz	short loc_67E137E2
		cmp	al, 0Ah
		jnz	loc_67E13899
		lea	esi, [esi+0]
		jmp	short loc_67E137F6
; ---------------------------------------------------------------------------

loc_67E137E2:				; CODE XREF: .text:67E137C0j
					; .text:67E137D0j
		mov	[esp], edi
		call	sub_67E00CE0
		test	eax, eax
		lea	esi, [esi+0]
		jle	loc_67E13664

loc_67E137F6:				; CODE XREF: .text:67E137E0j
		mov	[esp], edi
		call	sub_67E018E0
		mov	[esp], eax
		call	sub_67DFAA60
		test	eax, eax
		mov	edx, eax
		jz	loc_67E138F8
		mov	[esp+4], eax
		lea	eax, [esp+48h]
		mov	[esp+28h], edx
		mov	[esp], eax
		call	sub_67DFBB80
		mov	edx, [esp+28h]
		test	eax, eax
		jz	loc_67E138F0
		mov	[esp], edi
		call	sub_67E02BF0
		mov	[esp], edi
		call	sub_67E03350
		test	eax, eax
		jnz	loc_67E13664
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_73 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	eax, [esp+7Ch]
		mov	[esp], eax
		call	dbus_set_error_const
		jmp	loc_67E1391D
; ---------------------------------------------------------------------------
		align 10h

loc_67E13870:				; CODE XREF: .text:67E137C2j
		cmp	al, 22h
		jnz	short loc_67E13899

loc_67E13874:				; CODE XREF: .text:67E13893j
		movzx	eax, al
		mov	[esp+4], eax
		mov	[esp], edi
		call	sub_67E067A0
		test	eax, eax
		jz	short loc_67E138F8
		movzx	edx, byte ptr [ebx]

loc_67E1388A:				; CODE XREF: .text:67E137B2j
					; .text:67E13897j
		mov	eax, edx
		jmp	loc_67E1360E
; ---------------------------------------------------------------------------

loc_67E13891:				; CODE XREF: .text:67E137B8j
		cmp	al, 27h
		jz	short loc_67E13874
		cmp	al, 5Ch
		jz	short loc_67E1388A

loc_67E13899:				; CODE XREF: .text:67E137D4j
					; .text:67E13872j
		movzx	eax, al
		mov	[esp+4], eax
		mov	[esp], edi
		call	sub_67E067A0
		test	eax, eax
		jnz	loc_67E13664

loc_67E138B0:				; CODE XREF: .text:67E13605j
					; .text:67E139F8j
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_73 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	eax, [esp+7Ch]
		mov	[esp], eax
		call	dbus_set_error_const
		jmp	short loc_67E13915
; ---------------------------------------------------------------------------
		align 10h

loc_67E138D0:				; CODE XREF: .text:67E135E5j
		test	esi, esi
		jz	short loc_67E138E6
		cmp	al, 22h
		mov	edx, 22h
		nop
		lea	esi, [esi+0]
		jz	loc_67E135EB

loc_67E138E6:				; CODE XREF: .text:67E138D2j
		xor	edx, edx
		jmp	loc_67E135EB
; ---------------------------------------------------------------------------
		align 10h

loc_67E138F0:				; CODE XREF: .text:67E1382Aj
		mov	[esp], edx
		call	dbus_free

loc_67E138F8:				; CODE XREF: .text:67E13647j
					; .text:67E1365Ej ...
		mov	eax, off_67E19010
		mov	edx, [esp+7Ch]
		mov	dword ptr [esp+4], offset aOrg_freedes_73 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	[esp], edx
		call	dbus_set_error_const

loc_67E13915:				; CODE XREF: .text:67E138CDj
					; .text:67E13AA1j ...
		mov	[esp], edi
		call	sub_67E02BF0

loc_67E1391D:				; CODE XREF: .text:67E13865j
		mov	ecx, [esp+48h]
		test	ecx, ecx
		jnz	loc_67E139C7

loc_67E13929:				; CODE XREF: .text:67E139EBj
					; .text:67E13A6Aj
		mov	dword ptr [esp+4Ch], 0

loc_67E13931:				; CODE XREF: .text:67E136EDj
		mov	[esp+10h], ebp
		mov	dword ptr [esp+0Ch], offset aNoTokensForCom ; "No tokens for command line '%s'\n"
		mov	dword ptr [esp+8], offset a_dbus_shell_pa ; "_dbus_shell_parse_argv"
		mov	dword ptr [esp+4], 23Eh
		mov	dword ptr [esp], offset	aRBuildWin32_38	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		xor	eax, eax
		jmp	loc_67E137A2
; ---------------------------------------------------------------------------

loc_67E13960:				; CODE XREF: .text:67E1373Fj
		test	esi, esi
		jz	short loc_67E13978
		xor	ebx, ebx

loc_67E13966:				; CODE XREF: .text:67E13976j
		mov	eax, [edi+ebx*4]
		add	ebx, 1
		mov	[esp], eax
		call	dbus_free
		cmp	ebx, esi
		jl	short loc_67E13966

loc_67E13978:				; CODE XREF: .text:67E13962j
		mov	[esp], edi
		call	dbus_free
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_73 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	eax, [esp+7Ch]
		mov	[esp], eax
		call	dbus_set_error_const

loc_67E1399D:				; CODE XREF: .text:67E13A48j
		mov	[esp], ebp
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], offset dbus_free
		call	sub_67DFB9D0
		mov	[esp], ebp
		call	sub_67DFBC90
		add	esp, 5Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E139C7:				; CODE XREF: .text:67E13923j
		lea	ebx, [esp+48h]
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], offset dbus_free
		mov	[esp], ebx
		call	sub_67DFB9D0
		mov	[esp], ebx
		call	sub_67DFBC90
		jmp	loc_67E13929
; ---------------------------------------------------------------------------

loc_67E139F0:				; CODE XREF: .text:67E136C1j
		mov	[esp], ebx
		call	dbus_free
		jmp	loc_67E138B0
; ---------------------------------------------------------------------------

loc_67E139FD:				; CODE XREF: .text:67E13595j
		mov	dword ptr [esp+0Ch], offset aCommandLineIsN ; "Command line is NULL\n"
		mov	dword ptr [esp+8], offset a_dbus_shell_pa ; "_dbus_shell_parse_argv"
		mov	dword ptr [esp+4], 237h
		mov	dword ptr [esp], offset	aRBuildWin32_38	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 5Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E13A2B:				; CODE XREF: .text:67E13716j
		mov	eax, off_67E19010
		mov	edx, [esp+7Ch]
		mov	dword ptr [esp+4], offset aOrg_freedes_73 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	[esp], edx
		call	dbus_set_error_const
		jmp	loc_67E1399D
; ---------------------------------------------------------------------------

loc_67E13A4D:				; CODE XREF: .text:67E135B1j
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_73 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	eax, [esp+7Ch]
		mov	[esp], eax
		call	dbus_set_error_const
		jmp	loc_67E13929
; ---------------------------------------------------------------------------

loc_67E13A6F:				; CODE XREF: .text:67E13791j
		mov	[esp], edi
		call	dbus_free_string_array
		mov	eax, 1
		lea	esi, [esi+0]
		jmp	loc_67E137A2
; ---------------------------------------------------------------------------

loc_67E13A85:				; CODE XREF: .text:67E136C9j
		mov	edx, [esp+7Ch]
		mov	dword ptr [esp+8], offset aUnclosedQuotes ; "Unclosed quotes in	command	line"
		mov	dword ptr [esp+4], offset aOrg_freedes_74 ; "org.freedesktop.DBus.Error.InvalidArgs"
		mov	[esp], edx
		call	dbus_set_error_const
		jmp	loc_67E13915
; ---------------------------------------------------------------------------

loc_67E13AA6:				; CODE XREF: .text:67E136D5j
		mov	eax, [esp+7Ch]
		mov	dword ptr [esp+8], offset aNoTokensFoundI ; "No	tokens found in	command	line"
		mov	dword ptr [esp+4], offset aOrg_freedes_74 ; "org.freedesktop.DBus.Error.InvalidArgs"
		mov	[esp], eax
		call	dbus_set_error_const
		jmp	loc_67E13915
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E13AD0	proc near		; CODE XREF: .text:67E15A19p
					; .text:67E15A35p

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [esp+3Ch+arg_0]
		mov	edi, [esp+3Ch+arg_4]
		mov	ebp, [esp+3Ch+arg_C]
		movzx	esi, [esp+3Ch+arg_8]
		test	ebx, ebx
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_50 ; "_dbus_string_find_byte_backward"
		mov	[esp+3Ch+var_30], 60h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealNull_0 ; "(real) != NULL"
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_50 ; "_dbus_string_find_byte_backward"
		mov	[esp+3Ch+var_30], 60h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealInvalid_0	; "!(real)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_50 ; "_dbus_string_find_byte_backward"
		mov	[esp+3Ch+var_30], 60h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLen0_0 ; "(real)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_50 ; "_dbus_string_find_byte_backward"
		mov	[esp+3Ch+var_30], 60h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealAllocate_0 ; "(real)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_50 ; "_dbus_string_find_byte_backward"
		mov	[esp+3Ch+var_30], 60h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealMax_leng_0 ; "(real)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_50 ; "_dbus_string_find_byte_backward"
		mov	[esp+3Ch+var_30], 60h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealA_1 ; "(real)->len	<= ((real)->allocated -	_DB"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_50 ; "_dbus_string_find_byte_backward"
		mov	[esp+3Ch+var_30], 60h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aRealLenRealM_0 ; "(real)->len	<= (real)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_50 ; "_dbus_string_find_byte_backward"
		mov	[esp+3Ch+var_30], 61h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStartRealLen_0 ; "start <= real->len"
		cmp	[ebx+4], edi
		setnl	al
		mov	[esp+3Ch+var_3C], eax
		call	sub_67DFAE70
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_50 ; "_dbus_string_find_byte_backward"
		mov	[esp+3Ch+var_30], 62h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aStart0_4 ; "start >= 0"
		call	sub_67DFAE70
		xor	eax, eax
		test	ebp, ebp
		setnz	al
		mov	[esp+3Ch+var_3C], eax
		mov	[esp+3Ch+var_2C], offset a_dbus_strin_50 ; "_dbus_string_find_byte_backward"
		mov	[esp+3Ch+var_30], 63h
		mov	[esp+3Ch+var_34], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+3Ch+var_38], offset aFoundNull ; "found !=	NULL"
		call	sub_67DFAE70
		mov	eax, edi
		sub	eax, 1
		js	short loc_67E13D05
		mov	edx, [ebx]
		mov	ecx, esi
		cmp	[edx+edi-1], cl
		jz	short loc_67E13D05
		add	edx, edi
		jmp	short loc_67E13CFD
; ---------------------------------------------------------------------------
		align 10h

loc_67E13CF0:				; CODE XREF: sub_67E13AD0+233j
		movzx	ecx, byte ptr [edx-2]
		mov	ebx, esi
		sub	edx, 1
		cmp	cl, bl
		jz	short loc_67E13D05

loc_67E13CFD:				; CODE XREF: sub_67E13AD0+218j
		sub	eax, 1
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_67E13CF0

loc_67E13D05:				; CODE XREF: sub_67E13AD0+20Aj
					; sub_67E13AD0+214j ...
		test	ebp, ebp
		jz	short loc_67E13D0C
		mov	[ebp+0], eax

loc_67E13D0C:				; CODE XREF: sub_67E13AD0+237j
		not	eax
		add	esp, 2Ch
		shr	eax, 1Fh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E13AD0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+30h]
		mov	esi, [esp+34h]
		mov	dword ptr [esp+10h], offset a_dbus_strin_51 ; "_dbus_string_ends_with_c_str"
		mov	dword ptr [esp+0Ch], 36h
		test	ebx, ebx
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+8], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aReal_aNull_0	; "(real_a) != NULL"
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_51 ; "_dbus_string_ends_with_c_str"
		mov	dword ptr [esp+0Ch], 36h
		mov	dword ptr [esp+8], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aReal_aInvali_0 ; "!(real_a)->invalid"
		movzx	eax, byte ptr [ebx+10h]
		shr	al, 2
		xor	eax, 1
		and	eax, 1
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_51 ; "_dbus_string_ends_with_c_str"
		mov	dword ptr [esp+0Ch], 36h
		mov	dword ptr [esp+8], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aReal_aLen0_0	; "(real_a)->len >= 0"
		mov	eax, [ebx+4]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_51 ; "_dbus_string_ends_with_c_str"
		mov	dword ptr [esp+0Ch], 36h
		mov	dword ptr [esp+8], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aReal_aAlloca_0 ; "(real_a)->allocated >= 0"
		mov	eax, [ebx+8]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_51 ; "_dbus_string_ends_with_c_str"
		mov	dword ptr [esp+0Ch], 36h
		mov	dword ptr [esp+8], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aReal_aMax_le_0 ; "(real_a)->max_length >= 0"
		mov	eax, [ebx+0Ch]
		not	eax
		shr	eax, 1Fh
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_51 ; "_dbus_string_ends_with_c_str"
		mov	dword ptr [esp+0Ch], 36h
		mov	dword ptr [esp+8], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aReal_aLenRea_1 ; "(real_a)->len <= ((real_a)->allocated -"...
		mov	eax, [ebx+8]
		sub	eax, 7
		cmp	eax, [ebx+4]
		setnle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	dword ptr [esp+10h], offset a_dbus_strin_51 ; "_dbus_string_ends_with_c_str"
		mov	dword ptr [esp+0Ch], 36h
		mov	dword ptr [esp+8], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aReal_aLenRea_2 ; "(real_a)->len <= (real_a)->max_length"
		mov	eax, [ebx+4]
		cmp	eax, [ebx+0Ch]
		setle	al
		movzx	eax, al
		mov	[esp], eax
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_51 ; "_dbus_string_ends_with_c_str"
		mov	dword ptr [esp+0Ch], 37h
		mov	dword ptr [esp+8], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aC_strNull_0 ; "c_str	!= NULL"
		call	sub_67DFAE70
		mov	[esp], esi
		call	strlen
		mov	edx, [ebx+4]
		cmp	eax, edx
		ja	short loc_67E13EF1
		mov	ecx, [ebx]
		mov	ebx, edx
		sub	ebx, eax
		lea	eax, [ecx+ebx]
		add	ecx, edx
		cmp	eax, ecx
		jnz	short loc_67E13EEA
		jmp	short loc_67E13F00
; ---------------------------------------------------------------------------
		align 10h

loc_67E13EE0:				; CODE XREF: .text:67E13EEFj
		add	eax, 1
		add	esi, 1
		cmp	ecx, eax
		jz	short loc_67E13F00

loc_67E13EEA:				; CODE XREF: .text:67E13ED7j
		movzx	edx, byte ptr [eax]
		cmp	dl, [esi]
		jz	short loc_67E13EE0

loc_67E13EF1:				; CODE XREF: .text:67E13EC8j
		add	esp, 24h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E13F00:				; CODE XREF: .text:67E13ED9j
					; .text:67E13EE8j
		mov	dword ptr [esp+10h], offset a_dbus_strin_51 ; "_dbus_string_ends_with_c_str"
		xor	eax, eax
		mov	dword ptr [esp+0Ch], 49h
		mov	dword ptr [esp+8], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aAp0 ; "*ap == '\\0'"
		cmp	byte ptr [ecx],	0
		setz	al
		mov	[esp], eax
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_51 ; "_dbus_string_ends_with_c_str"
		mov	dword ptr [esp+0Ch], 4Ah
		mov	dword ptr [esp+8], offset aRBuildWin32_39 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aBp0 ; "*bp == '\\0'"
		cmp	byte ptr [esi],	0
		setz	al
		mov	[esp], eax
		call	sub_67DFAE70
		add	esp, 24h
		mov	eax, 1
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		mov	eax, [eax+20h]
		test	eax, eax
		setz	al
		movzx	eax, al
		retn
; ---------------------------------------------------------------------------
		push	ebx
		xor	eax, eax
		sub	esp, 28h
		mov	ebx, [esp+30h]
		mov	dword ptr [esp+10h], offset a_dbus_babysitt ; "_dbus_babysitter_ref"
		mov	dword ptr [esp+0Ch], 95h
		mov	dword ptr [esp+8], offset aRBuildWin32_40 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+4], offset aSitterNull ;	"sitter	!= NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	dword ptr [esp+10h], offset a_dbus_babysitt ; "_dbus_babysitter_ref"
		mov	dword ptr [esp+0Ch], 96h
		mov	dword ptr [esp+8], offset aRBuildWin32_40 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSitterRefcount ; "sitter->refcount >	0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp], eax
		call	sub_67DFAE70
		mov	eax, ebx
		add	dword ptr [ebx], 1
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_67E14000
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E14000	proc near		; CODE XREF: .text:67E13FF1j
					; DATA XREF: .text:67E1450Co

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], 0 ; int
		mov	eax, [ebx+24h]
		mov	[esp+1Ch+var_1C], eax ;	SOCKET
		call	sub_67E0CC70
		mov	eax, 1
		mov	dword ptr [ebx+24h], 0FFFFFFFFh
		add	esp, 18h
		pop	ebx
		retn
sub_67E14000	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+10h]
		mov	eax, [eax+2Ch]
		mov	[esp+10h], eax
		add	esp, 0Ch
		jmp	sub_67DF7E20
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	[esp+20h], ebx
		mov	ebx, [esp+30h]
		mov	[esp+24h], esi
		mov	esi, [esp+34h]
		mov	[esp+28h], edi
		mov	edi, [ebx+20h]
		test	edi, edi
		jz	short loc_67E14080

loc_67E1406E:				; CODE XREF: .text:67E140E6j
		mov	ebx, [esp+20h]
		mov	esi, [esp+24h]
		mov	edi, [esp+28h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E14080:				; CODE XREF: .text:67E1406Cj
		mov	ecx, [ebx+34h]
		test	ecx, ecx
		jnz	short loc_67E140E8
		mov	edx, [ebx+3Ch]
		test	edx, edx
		jnz	short loc_67E140C0
		mov	eax, [ebx+8]
		mov	[esp], esi
		mov	dword ptr [esp+8], offset aProcessSExited ; "Process %s	exited,	status unknown"
		mov	dword ptr [esp+4], offset aOrg_freedes_75 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp+0Ch], eax
		call	dbus_set_error
		mov	ebx, [esp+20h]
		mov	esi, [esp+24h]
		mov	edi, [esp+28h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E140C0:				; CODE XREF: .text:67E1408Cj
		mov	eax, [ebx+40h]
		mov	[esp+10h], eax
		mov	eax, [ebx+8]
		mov	dword ptr [esp+8], offset aProcessSExit_0 ; "Process %s	exited with status %d"
		mov	dword ptr [esp+4], offset aOrg_freedes_76 ; "org.freedesktop.DBus.Error.Spawn.ChildE"...
		mov	[esp], esi
		mov	[esp+0Ch], eax
		call	dbus_set_error
		jmp	short loc_67E1406E
; ---------------------------------------------------------------------------

loc_67E140E8:				; CODE XREF: .text:67E14085j
		mov	eax, [ebx+38h]
		mov	[esp], eax
		call	sub_67E0AD30
		mov	edi, eax
		mov	[esp+10h], eax
		mov	eax, [ebx+8]
		mov	[esp], esi
		mov	dword ptr [esp+8], offset aFailedToExecut ; "Failed to execute program %s: %s"
		mov	dword ptr [esp+4], offset aOrg_freedes_77 ; "org.freedesktop.DBus.Error.Spawn.ExecFa"...
		mov	[esp+0Ch], eax
		call	dbus_set_error
		mov	ebx, [esp+20h]
		mov	[esp+30h], edi
		mov	esi, [esp+24h]
		mov	edi, [esp+28h]
		add	esp, 2Ch
		jmp	sub_67E0AEE0
; ---------------------------------------------------------------------------
		sub	esp, 1Ch
		mov	eax, [esp+20h]
		mov	ecx, [eax+20h]
		test	ecx, ecx
		jnz	short loc_67E14166
		mov	edx, [eax+3Ch]
		test	edx, edx
		jz	short loc_67E14160
		mov	eax, [eax+40h]
		cmp	eax, 103h
		jz	short loc_67E14160
		mov	edx, [esp+24h]
		mov	[edx], eax
		mov	eax, 1
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E14160:				; CODE XREF: .text:67E14143j
					; .text:67E1414Dj
		xor	eax, eax
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67E14166:				; CODE XREF: .text:67E1413Cj
		mov	dword ptr [esp+8], 11Fh
		mov	dword ptr [esp+4], offset aRBuildWin32_40 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp], offset	aChildHasNotExi	; "Child has not exited"
		call	sub_67DFAE30
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	eax, [esp+20h]
		mov	eax, [eax+20h]
		test	eax, eax
		jz	short loc_67E141B2
		mov	dword ptr [esp+4], 3039h
		mov	[esp], eax
		call	ds:TerminateProcess
		sub	esp, 8

loc_67E141B2:				; CODE XREF: .text:67E1419Cj
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E141C0	proc near		; CODE XREF: .text:67E144AEp
					; .text:67E144CDp ...

hObject		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		xor	eax, eax
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_1C], offset a_dbus_babysi_0 ; "_dbus_babysitter_unref"
		mov	[esp+2Ch+var_20], 0A8h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_40 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+2Ch+hObject], eax
		mov	[esp+2Ch+var_28], offset aSitterNull ; "sitter != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+2Ch+var_1C], offset a_dbus_babysi_0 ; "_dbus_babysitter_unref"
		mov	[esp+2Ch+var_20], 0A9h
		mov	[esp+2Ch+var_24], offset aRBuildWin32_40 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+2Ch+var_28], offset aSitterRefcount ; "sitter->refcount > 0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+2Ch+hObject], eax
		call	sub_67DFAE70
		mov	eax, [ebx]
		sub	eax, 1
		test	eax, eax
		mov	[ebx], eax
		jnz	loc_67E14364
		mov	eax, [ebx+24h]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E14256
		mov	[esp+2Ch+var_28], 0 ; int
		mov	[esp+2Ch+hObject], eax ; SOCKET
		call	sub_67E0CC70
		mov	dword ptr [ebx+24h], 0FFFFFFFFh

loc_67E14256:				; CODE XREF: sub_67E141C0+7Dj
		mov	eax, [ebx+28h]
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E14275
		mov	[esp+2Ch+var_28], 0 ; int
		mov	[esp+2Ch+hObject], eax ; SOCKET
		call	sub_67E0CC70
		mov	dword ptr [ebx+28h], 0FFFFFFFFh

loc_67E14275:				; CODE XREF: sub_67E141C0+9Cj
		mov	eax, [ebx+18h]
		test	eax, eax
		jz	short loc_67E142B7
		mov	ecx, [ebx+14h]
		test	ecx, ecx
		jle	short loc_67E142A8
		xor	esi, esi

loc_67E14285:				; CODE XREF: sub_67E141C0+E6j
		mov	edx, [eax+esi*4]
		test	edx, edx
		jz	short loc_67E142A1
		mov	[esp+2Ch+hObject], edx
		call	dbus_free
		mov	eax, [ebx+18h]
		mov	ecx, [ebx+14h]
		mov	dword ptr [eax+esi*4], 0

loc_67E142A1:				; CODE XREF: sub_67E141C0+CAj
		add	esi, 1
		cmp	esi, ecx
		jl	short loc_67E14285

loc_67E142A8:				; CODE XREF: sub_67E141C0+C1j
		mov	[esp+2Ch+hObject], eax
		call	dbus_free
		mov	dword ptr [ebx+18h], 0

loc_67E142B7:				; CODE XREF: sub_67E141C0+BAj
		mov	esi, [ebx+1Ch]
		test	esi, esi
		jz	short loc_67E142E7
		mov	eax, [esi]
		test	eax, eax
		jz	short loc_67E142D8

loc_67E142C4:				; CODE XREF: sub_67E141C0+113j
		add	esi, 4
		mov	[esp+2Ch+hObject], eax
		call	dbus_free
		mov	eax, [esi]
		test	eax, eax
		jnz	short loc_67E142C4
		mov	esi, [ebx+1Ch]

loc_67E142D8:				; CODE XREF: sub_67E141C0+102j
		mov	[esp+2Ch+hObject], esi
		call	dbus_free
		mov	dword ptr [ebx+1Ch], 0

loc_67E142E7:				; CODE XREF: sub_67E141C0+FCj
		mov	eax, [ebx+20h]
		test	eax, eax
		jz	short loc_67E14301
		mov	[esp+2Ch+hObject], eax ; hObject
		call	ds:CloseHandle
		mov	dword ptr [ebx+20h], 0
		sub	esp, 4

loc_67E14301:				; CODE XREF: sub_67E141C0+12Cj
		mov	eax, [ebx+30h]
		test	eax, eax
		jz	short loc_67E14322
		mov	[esp+2Ch+hObject], eax
		call	sub_67DF7750
		mov	eax, [ebx+30h]
		mov	[esp+2Ch+hObject], eax
		call	sub_67DF7FF0
		mov	dword ptr [ebx+30h], 0

loc_67E14322:				; CODE XREF: sub_67E141C0+146j
		mov	eax, [ebx+2Ch]
		test	eax, eax
		jz	short loc_67E14331
		mov	[esp+2Ch+hObject], eax
		call	sub_67DF8150

loc_67E14331:				; CODE XREF: sub_67E141C0+167j
		mov	eax, [ebx+4]
		test	eax, eax
		jz	short loc_67E1434B
		mov	[esp+2Ch+hObject], eax ; hObject
		call	ds:CloseHandle
		mov	dword ptr [ebx+4], 0
		sub	esp, 4

loc_67E1434B:				; CODE XREF: sub_67E141C0+176j
		mov	eax, [ebx+8]
		mov	[esp+2Ch+hObject], eax
		call	dbus_free
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	dbus_free
; ---------------------------------------------------------------------------

loc_67E14364:				; CODE XREF: sub_67E141C0+71j
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
sub_67E141C0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	eax, [esp+74h]
		test	eax, eax
		jz	loc_67E144C0
		mov	eax, [esp+74h]
		mov	[esp], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E144C0

loc_67E14399:				; CODE XREF: .text:67E144C5j
		mov	[esp], edx
		mov	dword ptr [esp+10h], offset a_dbus_spawn_as ; "_dbus_spawn_async_with_babysitter"
		mov	dword ptr [esp+0Ch], 276h
		mov	dword ptr [esp+8], offset aRBuildWin32_40 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_32 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	edx, [esp+60h]
		mov	dword ptr [edx], 0
		mov	dword ptr [esp], 44h
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		jz	loc_67E144D2
		mov	dword ptr [eax], 1
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 0
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 0
		call	ds:CreateEventA
		sub	esp, 10h
		test	eax, eax
		mov	[ebx+4], eax
		jz	loc_67E144CA
		mov	dword ptr [ebx+20h], 0
		mov	dword ptr [ebx+28h], 0FFFFFFFFh
		mov	dword ptr [ebx+24h], 0FFFFFFFFh
		mov	dword ptr [ebx+14h], 0
		mov	dword ptr [ebx+18h], 0
		mov	dword ptr [ebx+1Ch], 0
		call	sub_67DF80A0
		test	eax, eax
		mov	[ebx+2Ch], eax
		jz	short loc_67E144CA
		mov	eax, [esp+6Ch]
		mov	edx, [esp+64h]
		mov	dword ptr [ebx+34h], 0
		mov	dword ptr [ebx+3Ch], 0
		mov	[ebx+0Ch], eax
		mov	eax, [esp+70h]
		mov	[ebx+10h], eax
		mov	eax, [edx]
		mov	[esp], eax
		call	sub_67DFAA60
		test	eax, eax
		mov	[ebx+8], eax
		jz	loc_67E146BA
		mov	eax, [esp+74h]
		mov	dword ptr [esp+8], 0
		mov	[esp+0Ch], eax
		lea	eax, [ebx+28h]
		mov	[esp+4], eax
		lea	eax, [ebx+24h]
		mov	[esp], eax
		call	sub_67E0DAE0
		test	eax, eax
		jnz	short loc_67E14500

loc_67E144AB:				; CODE XREF: .text:67E146D7j
					; .text:67E14815j ...
		mov	[esp], ebx
		call	sub_67E141C0
		xor	eax, eax

loc_67E144B5:				; CODE XREF: .text:67E147E8j
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E144C0:				; CODE XREF: .text:67E1437Dj
					; .text:67E14393j
		mov	edx, 1
		jmp	loc_67E14399
; ---------------------------------------------------------------------------

loc_67E144CA:				; CODE XREF: .text:67E14414j
					; .text:67E1444Ej
		mov	[esp], ebx
		call	sub_67E141C0

loc_67E144D2:				; CODE XREF: .text:67E143DBj
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_78 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	eax, [esp+74h]
		mov	[esp], eax
		call	dbus_set_error_const
		add	esp, 4Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E14500:				; CODE XREF: .text:67E144A9j
		mov	dword ptr [esp+14h], 0
		mov	[esp+10h], ebx
		mov	dword ptr [esp+0Ch], offset sub_67E14000
		mov	dword ptr [esp+8], 1
		mov	dword ptr [esp+4], 1
		mov	eax, [ebx+24h]
		mov	[esp], eax
		call	sub_67DF80C0
		test	eax, eax
		mov	[ebx+30h], eax
		jz	loc_67E146BA
		mov	[esp+4], eax
		mov	eax, [ebx+2Ch]
		mov	[esp], eax
		call	sub_67DF8330
		test	eax, eax
		jz	loc_67E147F8
		lea	edx, [ebx+18h]
		mov	eax, 4
		mov	[esp+24h], edx
		mov	edx, [esp+64h]
		mov	dword ptr [esp+20h], 0
		mov	dword ptr [esp+28h], 0
		mov	ebp, [edx]
		test	ebp, ebp
		jz	short loc_67E145A0
		xor	al, al
		lea	esi, [esi+0]

loc_67E14580:				; CODE XREF: .text:67E1458Fj
		add	eax, 1
		mov	edi, [edx+eax*4]
		lea	ecx, ds:0[eax*4]
		test	edi, edi
		jnz	short loc_67E14580
		mov	[esp+20h], eax
		lea	eax, ds:4[eax*4]
		mov	[esp+28h], ecx

loc_67E145A0:				; CODE XREF: .text:67E14575j
		mov	[esp], eax
		call	dbus_malloc
		test	eax, eax
		mov	edx, eax
		mov	[ebx+18h], eax
		jz	loc_67E147F1
		mov	esi, [esp+20h]
		test	esi, esi
		jz	loc_67E14723
		mov	ecx, [esp+20h]
		xor	edx, edx

loc_67E145C7:				; CODE XREF: .text:67E145D3j
		mov	dword ptr [eax+edx*4], 0
		add	edx, 1
		cmp	edx, ecx
		jnz	short loc_67E145C7
		xor	esi, esi
		mov	[esp+2Ch], ebx
		nop
		lea	esi, [esi+0]

loc_67E145E0:				; CODE XREF: .text:67E14716j
		mov	eax, [esp+64h]
		xor	ebx, ebx
		xor	ecx, ecx
		lea	edi, ds:0[esi*4]
		mov	ebp, 1
		mov	edx, [eax+esi*4]
		movzx	eax, byte ptr [edx]
		test	al, al
		jnz	short loc_67E14612
		jmp	short loc_67E14656
; ---------------------------------------------------------------------------

loc_67E14600:				; CODE XREF: .text:67E14614j
					; .text:67E14618j
		mov	ebx, 1

loc_67E14605:				; CODE XREF: .text:67E14628j
					; .text:67E146E3j
		add	edx, 1
		add	ecx, 1
		movzx	eax, byte ptr [edx]
		test	al, al
		jz	short loc_67E14652

loc_67E14612:				; CODE XREF: .text:67E145FCj
					; .text:67E14650j
		cmp	al, 9
		jz	short loc_67E14600
		cmp	al, 20h
		jz	short loc_67E14600
		cmp	al, 22h
		lea	esi, [esi+0]
		jz	loc_67E146E0
		cmp	al, 5Ch
		jnz	short loc_67E14605
		mov	ebp, edx
		lea	esi, [esi+0]

loc_67E14630:				; CODE XREF: .text:67E14639j
		add	ebp, 1
		movzx	eax, byte ptr [ebp+0]
		cmp	al, 5Ch
		jz	short loc_67E14630
		cmp	al, 22h
		setz	al
		add	edx, 1
		movzx	eax, al
		add	ecx, eax
		movzx	eax, byte ptr [edx]
		add	ecx, 1
		test	al, al
		jnz	short loc_67E14612

loc_67E14652:				; CODE XREF: .text:67E14610j
		lea	ebp, [ecx+ebx*2+1]

loc_67E14656:				; CODE XREF: .text:67E145FEj
		mov	edx, [esp+24h]
		add	edi, [edx]
		mov	[esp], ebp
		call	dbus_malloc
		test	eax, eax
		mov	[edi], eax
		jz	loc_67E147ED
		mov	edx, [esp+64h]
		test	ebx, ebx
		mov	ebp, [edx+esi*4]
		jz	short loc_67E1467F
		mov	byte ptr [eax],	22h
		add	eax, 1

loc_67E1467F:				; CODE XREF: .text:67E14677j
		movzx	edx, byte ptr [ebp+0]
		test	dl, dl
		mov	ecx, edx
		jz	short loc_67E14702
		mov	edi, eax
		jmp	short loc_67E146A9
; ---------------------------------------------------------------------------
		align 10h

loc_67E14690:				; CODE XREF: .text:67E146ACj
		cmp	dl, 5Ch
		jz	short loc_67E146E8
		mov	ecx, edx

loc_67E14697:				; CODE XREF: .text:67E146B8j
					; .text:67E146FCj
		add	ebp, 1
		mov	[edi], cl
		movzx	ecx, byte ptr [ebp+0]
		add	edi, 1
		test	cl, cl
		mov	edx, ecx
		jz	short loc_67E14700

loc_67E146A9:				; CODE XREF: .text:67E1468Bj
		cmp	dl, 22h
		jnz	short loc_67E14690

loc_67E146AE:				; CODE XREF: .text:67E146FEj
		mov	byte ptr [edi],	5Ch
		add	edi, 1
		movzx	ecx, byte ptr [ebp+0]
		jmp	short loc_67E14697
; ---------------------------------------------------------------------------

loc_67E146BA:				; CODE XREF: .text:67E1447Fj
					; .text:67E14534j
		mov	eax, off_67E19010
		mov	edx, [esp+74h]
		mov	dword ptr [esp+4], offset aOrg_freedes_78 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	[esp], edx
		call	dbus_set_error_const
		jmp	loc_67E144AB
; ---------------------------------------------------------------------------
		align 10h

loc_67E146E0:				; CODE XREF: .text:67E14620j
		add	ecx, 1
		jmp	loc_67E14605
; ---------------------------------------------------------------------------

loc_67E146E8:				; CODE XREF: .text:67E14693j
		mov	edx, ebp
		lea	esi, [esi+0]

loc_67E146F0:				; CODE XREF: .text:67E146F8j
		add	edx, 1
		movzx	eax, byte ptr [edx]
		cmp	al, 5Ch
		jz	short loc_67E146F0
		cmp	al, 22h
		jnz	short loc_67E14697
		jmp	short loc_67E146AE
; ---------------------------------------------------------------------------

loc_67E14700:				; CODE XREF: .text:67E146A7j
		mov	eax, edi

loc_67E14702:				; CODE XREF: .text:67E14687j
		test	ebx, ebx
		jz	short loc_67E1470C
		mov	byte ptr [eax],	22h
		add	eax, 1

loc_67E1470C:				; CODE XREF: .text:67E14704j
		mov	byte ptr [eax],	0
		add	esi, 1
		cmp	esi, [esp+20h]
		jl	loc_67E145E0
		mov	ebx, [esp+2Ch]
		mov	edx, [ebx+18h]

loc_67E14723:				; CODE XREF: .text:67E145BBj
		mov	eax, [esp+28h]
		mov	dword ptr [edx+eax], 0
		mov	eax, [esp+68h]
		mov	edx, [esp+20h]
		mov	[ebx+1Ch], eax
		lea	eax, [esp+3Ch]
		mov	[ebx+14h], edx
		mov	[esp+14h], eax
		mov	dword ptr [esp+10h], 0
		mov	[esp+0Ch], ebx
		mov	dword ptr [esp+8], offset sub_67E14850
		mov	dword ptr [esp+4], 0
		mov	dword ptr [esp], 0
		call	ds:CreateThread
		sub	esp, 18h
		test	eax, eax
		jz	loc_67E14821
		mov	[esp], eax
		call	ds:CloseHandle
		sub	esp, 4
		mov	dword ptr [esp+4], 0FFFFFFFFh
		mov	eax, [ebx+4]
		mov	[esp], eax
		call	ds:WaitForSingleObject
		sub	esp, 8
		mov	eax, [esp+60h]
		mov	[eax], ebx
		mov	ebx, [esp+74h]
		test	ebx, ebx
		jz	short loc_67E1481A
		mov	edx, [esp+74h]
		mov	[esp], edx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67E1481A

loc_67E147BB:				; CODE XREF: .text:67E1481Fj
		mov	dword ptr [esp+10h], offset a_dbus_spawn_as ; "_dbus_spawn_async_with_babysitter"
		mov	dword ptr [esp+0Ch], 2C1h
		mov	dword ptr [esp+8], offset aRBuildWin32_40 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_32 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		mov	[esp], edx
		call	sub_67DFAE70
		mov	eax, 1
		jmp	loc_67E144B5
; ---------------------------------------------------------------------------

loc_67E147ED:				; CODE XREF: .text:67E14668j
		mov	ebx, [esp+2Ch]

loc_67E147F1:				; CODE XREF: .text:67E145AFj
		mov	dword ptr [ebx+14h], 0FFFFFFFFh

loc_67E147F8:				; CODE XREF: .text:67E1454Bj
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_78 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	eax, [esp+74h]
		mov	[esp], eax
		call	dbus_set_error_const
		jmp	loc_67E144AB
; ---------------------------------------------------------------------------

loc_67E1481A:				; CODE XREF: .text:67E147A7j
					; .text:67E147B9j
		mov	edx, 1
		jmp	short loc_67E147BB
; ---------------------------------------------------------------------------

loc_67E14821:				; CODE XREF: .text:67E14772j
		mov	edx, [esp+74h]
		mov	dword ptr [esp+8], offset aFailedToCrea_0 ; "Failed to create new thread"
		mov	dword ptr [esp+4], offset aOrg_freedes_79 ; "org.freedesktop.DBus.Error.Spawn.ForkFa"...
		mov	[esp], edx
		call	dbus_set_error_const
		jmp	loc_67E144AB
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E14850	proc near		; DATA XREF: .text:67E14750o

hEvent		= dword	ptr -0BCh
dwMilliseconds	= dword	ptr -0B8h
len		= dword	ptr -0B4h
flags		= dword	ptr -0B0h
bInheritHandles	= dword	ptr -0ACh
dwCreationFlags	= dword	ptr -0A8h
lpEnvironment	= dword	ptr -0A4h
lpCurrentDirectory= dword ptr -0A0h
lpStartupInfo	= dword	ptr -9Ch
lpProcessInformation= dword ptr	-98h
var_84		= dword	ptr -84h
lpCommandLine	= dword	ptr -80h
StartupInfo	= _STARTUPINFOA	ptr -74h
ProcessInformation= _PROCESS_INFORMATION ptr -30h
ExitCode	= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 0ACh
		mov	ebx, [esp+0BCh+arg_0]
		mov	[esp+0BCh+bInheritHandles], offset a_dbus_babysitt ; "_dbus_babysitter_ref"
		mov	[esp+0BCh+flags], 95h
		mov	[esp+0BCh+len],	offset aRBuildWin32_40 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		test	ebx, ebx
		setnz	al
		mov	[esp+0BCh+hEvent], eax
		mov	[esp+0BCh+dwMilliseconds], offset aSitterNull ;	"sitter	!= NULL"
		call	sub_67DFAE70
		xor	eax, eax
		mov	[esp+0BCh+bInheritHandles], offset a_dbus_babysitt ; "_dbus_babysitter_ref"
		mov	[esp+0BCh+flags], 96h
		mov	[esp+0BCh+len],	offset aRBuildWin32_40 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+0BCh+dwMilliseconds], offset aSitterRefcount ; "sitter->refcount >	0"
		cmp	dword ptr [ebx], 0
		setnle	al
		mov	[esp+0BCh+hEvent], eax
		call	sub_67DFAE70
		mov	eax, [ebx+0Ch]
		add	dword ptr [ebx], 1
		test	eax, eax
		jz	short loc_67E148D2
		mov	edx, [ebx+10h]
		mov	[esp+0BCh+hEvent], edx
		call	eax

loc_67E148D2:				; CODE XREF: sub_67E14850+78j
		mov	eax, [ebx+8]
		mov	[esp+0BCh+flags], offset aBabysitterSpaw ; "babysitter:	spawning %s\n"
		mov	[esp+0BCh+len],	offset aBabysitter ; "babysitter"
		mov	[esp+0BCh+dwMilliseconds], 23Bh	; int
		mov	[esp+0BCh+bInheritHandles], eax	; char
		mov	[esp+0BCh+hEvent], offset aRBuildWin32_40 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edi, [ebx+18h]
		mov	eax, [ebx+1Ch]
		mov	[esp+0BCh+ProcessInformation.hProcess],	0
		mov	[esp+0BCh+ProcessInformation.hThread], 0
		test	edi, edi
		mov	[esp+0BCh+var_84], eax
		mov	[esp+0BCh+ProcessInformation.dwProcessId], 0
		mov	[esp+0BCh+ProcessInformation.dwThreadId], 0
		jnz	loc_67E14A10

loc_67E1493B:				; CODE XREF: sub_67E14850+1C4j
					; sub_67E14850+1F7j ...
		mov	dword ptr [ebx+20h], 0FFFFFFFFh

loc_67E14942:				; CODE XREF: sub_67E14850+2F0j
		mov	dword ptr [ebx+20h], 0
		mov	dword ptr [ebx+34h], 1
		call	ds:GetLastError
		mov	[ebx+38h], eax
		lea	esi, [esi+0]

loc_67E14960:				; CODE XREF: sub_67E14850+2EAj
		mov	eax, [ebx+4]
		mov	[esp+0BCh+hEvent], eax ; hEvent
		call	ds:SetEvent
		mov	eax, [ebx+20h]
		sub	esp, 4
		test	eax, eax
		jz	short loc_67E149CB
		mov	[esp+0BCh+dwMilliseconds], 0FFFFFFFFh ;	dwMilliseconds
		mov	[esp+0BCh+hEvent], eax ; hHandle
		call	ds:WaitForSingleObject
		sub	esp, 8
		lea	eax, [esp+0BCh+ExitCode]
		mov	[esp+0BCh+dwMilliseconds], eax ; lpExitCode
		mov	eax, [ebx+20h]
		mov	[esp+0BCh+hEvent], eax ; hProcess
		call	ds:GetExitCodeProcess
		mov	dword ptr [ebx+3Ch], 1
		sub	esp, 8
		mov	eax, [esp+0BCh+ExitCode]
		mov	[ebx+40h], eax
		mov	eax, [ebx+20h]
		mov	[esp+0BCh+hEvent], eax ; hObject
		call	ds:CloseHandle
		mov	dword ptr [ebx+20h], 0
		sub	esp, 4

loc_67E149CB:				; CODE XREF: sub_67E14850+124j
		mov	[esp+0BCh+flags], 0 ; flags
		mov	[esp+0BCh+len],	1 ; len
		mov	[esp+0BCh+dwMilliseconds], offset buf ;	" "
		mov	eax, [ebx+28h]
		mov	[esp+0BCh+hEvent], eax ; s
		call	ds:send
		sub	esp, 10h
		mov	[esp+0BCh+hEvent], ebx
		call	sub_67E141C0
		add	esp, 0ACh
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
; ---------------------------------------------------------------------------
		align 10h

loc_67E14A10:				; CODE XREF: sub_67E14850+E5j
		mov	eax, [edi]
		test	eax, eax
		jz	loc_67E1493B
		mov	esi, edi
		xor	ebp, ebp
		xchg	ax, ax

loc_67E14A20:				; CODE XREF: sub_67E14850+1E4j
		mov	[esp+0BCh+hEvent], eax ; Str
		call	strlen
		lea	ebp, [ebp+eax+1]
		mov	eax, [esi+4]
		add	esi, 4
		test	eax, eax
		jnz	short loc_67E14A20
		add	ebp, 1
		mov	[esp+0BCh+hEvent], ebp ; Size
		call	malloc
		test	eax, eax
		mov	[esp+0BCh+lpCommandLine], eax
		jz	loc_67E1493B
		mov	ebp, eax
		mov	eax, [edi]
		test	eax, eax
		jz	short loc_67E14A82
		lea	esi, [edi+4]

loc_67E14A58:				; CODE XREF: sub_67E14850+230j
		mov	[esp+0BCh+hEvent], ebp ; Dest
		mov	[esp+0BCh+dwMilliseconds], eax ; Source
		call	strcpy
		mov	eax, [edi]
		mov	edi, esi
		mov	[esp+0BCh+hEvent], eax ; Str
		call	strlen
		add	ebp, eax
		mov	byte ptr [ebp+0], 20h
		mov	eax, [esi]
		add	ebp, 1
		add	esi, 4
		test	eax, eax
		jnz	short loc_67E14A58

loc_67E14A82:				; CODE XREF: sub_67E14850+203j
		mov	byte ptr [ebp-1], 0
		mov	byte ptr [ebp+0], 0
		mov	edx, [esp+0BCh+var_84]
		test	edx, edx
		jnz	loc_67E14B45

loc_67E14A96:				; CODE XREF: sub_67E14850+2FDj
					; sub_67E14850+32Cj
		lea	edx, [esp+0BCh+StartupInfo]
		xor	eax, eax
		mov	edi, edx
		mov	ecx, 11h
		rep stosd
		lea	eax, [esp+0BCh+ProcessInformation]
		mov	[esp+0BCh+lpProcessInformation], eax ; lpProcessInformation
		mov	eax, [esp+0BCh+lpCommandLine]
		mov	[esp+0BCh+lpStartupInfo], edx ;	lpStartupInfo
		mov	[esp+0BCh+StartupInfo.cb], 44h
		mov	[esp+0BCh+lpCurrentDirectory], 0 ; lpCurrentDirectory
		mov	[esp+0BCh+lpEnvironment], 0 ; lpEnvironment
		mov	[esp+0BCh+dwCreationFlags], 0 ;	dwCreationFlags
		mov	[esp+0BCh+bInheritHandles], 0 ;	bInheritHandles
		mov	[esp+0BCh+flags], 0 ; lpThreadAttributes
		mov	[esp+0BCh+len],	0 ; lpProcessAttributes
		mov	[esp+0BCh+dwMilliseconds], eax ; lpCommandLine
		mov	[esp+0BCh+hEvent], 0 ; lpApplicationName
		call	ds:CreateProcessA
		sub	esp, 28h
		mov	esi, eax
		mov	edx, [esp+0BCh+lpCommandLine]
		mov	[esp+0BCh+hEvent], edx ; Memory
		call	free

loc_67E14B12:				; CODE XREF: sub_67E14850+3F9j
		test	esi, esi
		jz	loc_67E1493B
		mov	eax, [esp+0BCh+ProcessInformation.hThread]
		mov	[esp+0BCh+hEvent], eax ; hObject
		call	ds:CloseHandle
		sub	esp, 4
		mov	eax, [esp+0BCh+ProcessInformation.hProcess]
		cmp	eax, 0FFFFFFFFh
		mov	[ebx+20h], eax
		jnz	loc_67E14960
		jmp	loc_67E14942
; ---------------------------------------------------------------------------

loc_67E14B45:				; CODE XREF: sub_67E14850+240j
		mov	edx, [esp+0BCh+var_84]
		mov	eax, [edx]
		test	eax, eax
		jz	loc_67E14A96
		mov	esi, edx
		xor	edi, edi

loc_67E14B57:				; CODE XREF: sub_67E14850+31Bj
		mov	[esp+0BCh+hEvent], eax ; Str
		call	strlen
		lea	edi, [edi+eax+1]
		mov	eax, [esi+4]
		add	esi, 4
		test	eax, eax
		jnz	short loc_67E14B57
		add	edi, 1
		mov	[esp+0BCh+hEvent], edi ; Size
		call	malloc
		test	eax, eax
		mov	ebp, eax
		jz	loc_67E14A96
		mov	edx, [esp+0BCh+var_84]
		mov	edi, ebp
		mov	eax, [edx]
		test	eax, eax
		jz	short loc_67E14BC2
		mov	esi, edx
		add	esi, 4

loc_67E14B93:				; CODE XREF: sub_67E14850+370j
		mov	[esp+0BCh+hEvent], edi ; Dest
		mov	[esp+0BCh+dwMilliseconds], eax ; Source
		call	strcpy
		mov	edx, [esp+0BCh+var_84]
		mov	eax, [edx]
		mov	[esp+0BCh+hEvent], eax ; Str
		call	strlen
		add	edi, eax
		mov	byte ptr [edi],	0
		mov	eax, [esi]
		add	edi, 1
		mov	[esp+0BCh+var_84], esi
		add	esi, 4
		test	eax, eax
		jnz	short loc_67E14B93

loc_67E14BC2:				; CODE XREF: sub_67E14850+33Cj
		lea	edx, [esp+0BCh+StartupInfo]
		xor	eax, eax
		mov	byte ptr [edi-1], 0
		mov	ecx, 11h
		mov	byte ptr [edi],	0
		mov	edi, edx
		rep stosd
		lea	eax, [esp+0BCh+ProcessInformation]
		mov	[esp+0BCh+lpProcessInformation], eax ; lpProcessInformation
		mov	eax, [esp+0BCh+lpCommandLine]
		mov	[esp+0BCh+lpStartupInfo], edx ;	lpStartupInfo
		mov	[esp+0BCh+lpEnvironment], ebp ;	lpEnvironment
		mov	[esp+0BCh+StartupInfo.cb], 44h
		mov	[esp+0BCh+lpCurrentDirectory], 0 ; lpCurrentDirectory
		mov	[esp+0BCh+dwCreationFlags], 0 ;	dwCreationFlags
		mov	[esp+0BCh+bInheritHandles], 0 ;	bInheritHandles
		mov	[esp+0BCh+flags], 0 ; lpThreadAttributes
		mov	[esp+0BCh+len],	0 ; lpProcessAttributes
		mov	[esp+0BCh+dwMilliseconds], eax ; lpCommandLine
		mov	[esp+0BCh+hEvent], 0 ; lpApplicationName
		call	ds:CreateProcessA
		sub	esp, 28h
		mov	esi, eax
		mov	edx, [esp+0BCh+lpCommandLine]
		mov	[esp+0BCh+hEvent], edx ; Memory
		call	free
		mov	[esp+0BCh+hEvent], ebp ; Memory
		call	free
		jmp	loc_67E14B12
sub_67E14850	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h
		rep retn
; ---------------------------------------------------------------------------
		align 10h
		rep retn
; ---------------------------------------------------------------------------
		align 10h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h
		mov	eax, 1
		retn
; ---------------------------------------------------------------------------
		align 10h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	edx, [esp+20h]
		lea	eax, [edx-836h]
		cmp	eax, 24Ch	; switch 589 cases
		jbe	short loc_67E14D28

loc_67E14D14:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	[esp], edx	; jumptable 67E14D30 default case
		call	strerror
		test	eax, eax
		jz	loc_67E1589E

loc_67E14D24:				; CODE XREF: .text:67E14D40j
					; .text:67E14D47j ...
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67E14D28:				; CODE XREF: .text:67E14D12j
		nop
		lea	esi, [esi+0]
		jmp	ds:off_67E32544[eax*4] ; switch	jump
; ---------------------------------------------------------------------------

loc_67E14D37:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aDfsInternalErr ; jumptable	67E14D30 case 588
		lea	esi, [esi+0]
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D42:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAChildOrParent ; jumptable	67E14D30 case 581
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D49:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDfsRootCann ; jumptable	67E14D30 case 580
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D50:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDfsDataBein ; jumptable	67E14D30 case 579
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D57:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDfsServiceH ; jumptable	67E14D30 case 578
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D5E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheInternalSta ; jumptable	67E14D30 case 577
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D65:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheOperationIs ; jumptable	67E14D30 case 576
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D6C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aCanTRemoveTheL ; jumptable	67E14D30 case 575
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D73:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisLinkIsAlre ; jumptable	67E14D30 case 574
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D7A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheOperation_0 ; jumptable	67E14D30 case 573
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D81:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aACycleInTheDfs ; jumptable	67E14D30 case 572
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D88:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSpecifiedSe ; jumptable	67E14D30 case 571
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D8F:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSpecifiedDf ; jumptable	67E14D30 case 570
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D96:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSpecifiedRe ; jumptable	67E14D30 case 569
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14D9D:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerIsNot ; jumptable	67E14D30 case 568
		jmp	short loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14DA4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aUnableToCrea_0 ; jumptable	67E14D30 case 567
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14DAE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheOperation_1 ; jumptable	67E14D30 case 566
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14DB8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheOperation_2 ; jumptable	67E14D30 case 565
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14DC2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheOperation_2 ; jumptable	67E14D30 case 564
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14DCC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheIndicatedSe ; jumptable	67E14D30 case 563
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14DD6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerShare ; jumptable	67E14D30 case 562
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14DE0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aARootOrLinkWit ; jumptable	67E14D30 case 561
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14DEA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereIsNoDfsNa ; jumptable	67E14D30 case 560
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14DF4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aOneOfTheRecord ; jumptable	67E14D30 case 559
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14DFE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheInternalDat ; jumptable	67E14D30 case 558
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E08:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aConfigurationN ; jumptable	67E14D30 case 539
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E12:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aBootNameVendor ; jumptable	67E14D30 case 538
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E1C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aVendorNameIsIn ; jumptable	67E14D30 case 537
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E26:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aVendorRecordWa ; jumptable	67E14D30 case 536
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E30:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAdapterRecordW ; jumptable	67E14D30 case 535
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E3A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aServiceFailedT ; jumptable	67E14D30 case 534
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E44:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereAreWorkst ; jumptable	67E14D30 case 533
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E4E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereAreProfil ; jumptable	67E14D30 case 532
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E58:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aChosenNetworkA ; jumptable	67E14D30 case 531
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E62:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aChosenProfileI ; jumptable	67E14D30 case 530
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E6C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aBootBlockRecor ; jumptable	67E14D30 case 529
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E76:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheRpluserLoca ; jumptable	67E14D30 case 528
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E80:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUserAccount ; jumptable	67E14D30 case 527
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E8A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aBootBlockRec_0 ; jumptable	67E14D30 case 526
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E94:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aVendorIdRecord ; jumptable	67E14D30 case 525
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14E9E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAnInternalServ ; jumptable	67E14D30 case 524
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14EA8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAdapterIdRecor ; jumptable	67E14D30 case 523
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14EB2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aConfigurationR ; jumptable	67E14D30 case 522
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14EBC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aConfiguratio_0 ; jumptable	67E14D30 case 521
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14EC6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereAreWork_0 ; jumptable	67E14D30 case 520
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14ED0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aProfileNameIsI ; jumptable	67E14D30 case 519
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14EDA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aProfileRecordW ; jumptable	67E14D30 case 518
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14EE4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aProfileRecordI ; jumptable	67E14D30 case 517
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14EEE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aWorkstationNam ; jumptable	67E14D30 case 516
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14EF8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aWorkstationRec ; jumptable	67E14D30 case 515
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F02:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aWorkstationR_0 ; jumptable	67E14D30 case 514
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F0C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aCannotEnumerat ; jumptable	67E14D30 case 513
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F16:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aServiceFaile_0 ; jumptable	67E14D30 case 512
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F20:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aServiceFaile_1 ; jumptable	67E14D30 case 511
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F2A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aServiceFaile_2 ; jumptable	67E14D30 case 510
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F34:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aServiceFaile_3 ; jumptable	67E14D30 case 509
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F3E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aServiceFaile_4 ; jumptable	67E14D30 case 508
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F48:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheBrowserServ ; jumptable	67E14D30 case 448
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F52:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aASecondConnect ; jumptable	67E14D30 case 417
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F5C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aRemoteBootStar ; jumptable	67E14D30 case 416
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F66:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aRemoteBootServ ; jumptable	67E14D30 case 415
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F70:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aConnectingToTh ; jumptable	67E14D30 case 414
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F7A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aConnectingToTh ; jumptable	67E14D30 case 413
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F84:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aCannotOpenImag ; jumptable	67E14D30 case 412
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F8E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aCannotConnectT ; jumptable	67E14D30 case 411
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14F98:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheCallToTheRe ; jumptable	67E14D30 case 410
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14FA2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aRemoteBootWill ; jumptable	67E14D30 case 409
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14FAC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheImageWasNot ; jumptable	67E14D30 case 408
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14FB6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTooManyImagePa ; jumptable	67E14D30 case 407
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14FC0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aImageParameter ; jumptable	67E14D30 case 406
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14FCA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aADiskIOErrorOc ; jumptable	67E14D30 case 405
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14FD4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aNetbiosReturne ; jumptable	67E14D30 case 404
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14FDE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aNoLoaderIsSpec ; jumptable	67E14D30 case 403
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14FE8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheFileBelowIs ; jumptable	67E14D30 case 402
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14FF2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheWorkstation ; jumptable	67E14D30 case 401
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E14FFC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheProgramBelo ; jumptable	67E14D30 case 400
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15006:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheProgramBe_0 ; jumptable	67E14D30 case 399
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15010:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheProgramBe_1 ; jumptable	67E14D30 case 398
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1501A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUpsServiceF ; jumptable	67E14D30 case 382
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15024:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUpsIndicate ; jumptable	67E14D30 case 381
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1502E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUpsServiceC ; jumptable	67E14D30 case 380
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15038:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUpsServiceI ; jumptable	67E14D30 case 379
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15042:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUpsDriverCo ; jumptable	67E14D30 case 378
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1504C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTryDownLevelRe ; jumptable	67E14D30 case 368
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15056:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereAreNoAlte ; jumptable	67E14D30 case 365
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15060:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerCanno ; jumptable	67E14D30 case 364
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1506A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerHasRe ; jumptable	67E14D30 case 363
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15074:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerHas_0 ; jumptable	67E14D30 case 362
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1507E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereIsNoSpace ; jumptable	67E14D30 case 361
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15088:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheConnectionI ; jumptable	67E14D30 case 360
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15092:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSessionIden ; jumptable	67E14D30 case 359
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1509C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerIdent ; jumptable	67E14D30 case 358
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E150A6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAPasswordMisma ; jumptable	67E14D30 case 356
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E150B0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisServerSClo ; jumptable	67E14D30 case 355
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E150BA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aUnableToAddToT ; jumptable	67E14D30 case 354
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E150C4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheNetlogonSer ; jumptable	67E14D30 case 353
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E150CE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aCouldNotSetLog ; jumptable	67E14D30 case 352
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E150D8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aCouldNotFindDo ; jumptable	67E14D30 case 351
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E150E2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisOperationI ; jumptable	67E14D30 case 350
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E150EC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisOperatio_0 ; jumptable	67E14D30 case 349
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E150F6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUserAccou_0 ; jumptable	67E14D30 case 348
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15100:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheLogFileDoes ; jumptable	67E14D30 case 338
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1510A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAUserSSessionW ; jumptable	67E14D30 case 332
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15114:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheAlertRecipi ; jumptable	67E14D30 case 331
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1511E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAnInvalidOrNon ; jumptable	67E14D30 case 330
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15128:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheAlertTableI ; jumptable	67E14D30 case 329
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15132:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSpecifiedCl ; jumptable	67E14D30 case 328
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1513C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDriveLetter ; jumptable	67E14D30 case 303
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15146:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDeviceIsBei ; jumptable	67E14D30 case 302
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15150:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisShareNameO ; jumptable	67E14D30 case 301
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1515A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aActiveConnecti ; jumptable	67E14D30 case 300
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15164:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereAreOpenFi ; jumptable	67E14D30 case 299
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1516E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheLanAdapterN ; jumptable	67E14D30 case 298
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15178:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSharedResou ; jumptable	67E14D30 case 290
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15182:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAnErrorOccurre ; jumptable	67E14D30 case 289
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1518C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAnErrorOccur_0 ; jumptable	67E14D30 case 287
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15196:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheRunServerYo ; jumptable	67E14D30 case 283
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E151A0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSourceAndDe ; jumptable	67E14D30 case 281
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E151AA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDestination ; jumptable	67E14D30 case 280
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E151B4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSourcePathI ; jumptable	67E14D30 case 279
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E151BE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSourcePathC ; jumptable	67E14D30 case 278
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E151C8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aLogFile1IsCorr ; jumptable	67E14D30 case 277
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E151D2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisLogFileHas ; jumptable	67E14D30 case 276
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E151DC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aLogFile1IsFull ; jumptable	67E14D30 case 275
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E151E6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset a@wErrorsOccurr ; jumptable	67E14D30 case 273
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E151F0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAnErrorOccur_1 ; jumptable	67E14D30 case 272
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E151FA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSystemWasUn ; jumptable	67E14D30 case 271
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15204:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSystemCanno ; jumptable	67E14D30 case 270
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1520E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheStartOffset ; jumptable	67E14D30 case 269
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15218:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aProfileFilesCa ; jumptable	67E14D30 case 268
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15222:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheBufferForTy ; jumptable	67E14D30 case 260
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1522C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aCouldNotDete_0 ; jumptable	67E14D30 case 255
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15236:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisPathCompon ; jumptable	67E14D30 case 254
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15240:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheStringAndPr ; jumptable	67E14D30 case 252
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1524A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisComputerNa ; jumptable	67E14D30 case 249
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15254:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisDeviceIsAl ; jumptable	67E14D30 case 241
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1525E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisDeviceIs_0 ; jumptable	67E14D30 case 240
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15268:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheRequestedDe ; jumptable	67E14D30 case 239
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15272:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisListOfDevi ; jumptable	67E14D30 case 238
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1527C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheQueueYouSpe ; jumptable	67E14D30 case 236
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15286:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereAreNoShar ; jumptable	67E14D30 case 235
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15290:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheQueuePriori ; jumptable	67E14D30 case 233
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1529A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisDeviceName ; jumptable	67E14D30 case 232
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E152A4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisDeviceWasN ; jumptable	67E14D30 case 231
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E152AE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisDeviceCann ; jumptable	67E14D30 case 230
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E152B8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheOperation_3 ; jumptable	67E14D30 case 229
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E152C2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheShareMustBe ; jumptable	67E14D30 case 219
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E152CC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheComputerIsN ; jumptable	67E14D30 case 218
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E152D6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheInformation ; jumptable	67E14D30 case 217
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E152E0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisDeviceCa_0 ; jumptable	67E14D30 case 216
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E152EA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDataReturne ; jumptable	67E14D30 case 215
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E152F4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAFailureOccurr ; jumptable	67E14D30 case 214
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E152FE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAFailureOccu_0 ; jumptable	67E14D30 case 213
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15308:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereIsNotAnOp ; jumptable	67E14D30 case 212
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15312:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aASessionDoesNo ; jumptable	67E14D30 case 210
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1531C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisDeviceIsNo ; jumptable	67E14D30 case 209
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15326:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisSharedReso ; jumptable	67E14D30 case 208
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15330:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisOperatio_1 ; jumptable	67E14D30 case 198
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1533A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheMessageAlia ; jumptable	67E14D30 case 197
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15344:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset a@wThisMessageA ; jumptable	67E14D30 case 196
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1534E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aADuplicateMess ; jumptable	67E14D30 case 195
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15358:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAWriteFaultOcc ; jumptable	67E14D30 case 193
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15362:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisIsAnInvali ; jumptable	67E14D30 case 192
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1536C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheBroadcastMe ; jumptable	67E14D30 case 187
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15376:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aMessagesForThi ; jumptable	67E14D30 case 186
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15380:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheMessageAl_0 ; jumptable	67E14D30 case 185
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1538A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheForwardedMe ; jumptable	67E14D30 case 184
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15394:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheNameIsNotOn ; jumptable	67E14D30 case 183
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1539E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheMessengerSe ; jumptable	67E14D30 case 182
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E153A8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheMessageAl_1 ; jumptable	67E14D30 case 181
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E153B2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheMessageWasS ; jumptable	67E14D30 case 180
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E153BC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheMessageWa_0 ; jumptable	67E14D30 case 179
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E153C6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAnErrorOccur_2 ; jumptable	67E14D30 case 178
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E153D0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aMessagesCannot ; jumptable	67E14D30 case 177
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E153DA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheComputerNam ; jumptable	67E14D30 case 176
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E153E4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheMaximumNumb ; jumptable	67E14D30 case 175
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E153EE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisMessageAli ; jumptable	67E14D30 case 174
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E153F8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisMessageA_0 ; jumptable	67E14D30 case 173
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15402:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisMessageA_1 ; jumptable	67E14D30 case 172
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1540C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheMessageAl_2 ; jumptable	67E14D30 case 171
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15416:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheMessenger_0 ; jumptable	67E14D30 case 170
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15420:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheMessenger_1 ; jumptable	67E14D30 case 169
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1542A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheComputerN_0 ; jumptable	67E14D30 case 168
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15434:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisDeviceIsCu ; jumptable	67E14D30 case 150
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1543E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisAsg_typeIs ; jumptable	67E14D30 case 149
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15448:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheNetworkConn ; jumptable	67E14D30 case 148
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15452:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisReplicantD ; jumptable	67E14D30 case 147
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1545C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aNoUpdatesAreNe ; jumptable	67E14D30 case 146
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15466:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSecurityDat ; jumptable	67E14D30 case 145
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15470:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePasswordOfT ; jumptable	67E14D30 case 144
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1547A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePasswordDoe ; jumptable	67E14D30 case 143
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15484:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisPasswordCa ; jumptable	67E14D30 case 142
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1548E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePasswordO_0 ; jumptable	67E14D30 case 141
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15498:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePasswordO_1 ; jumptable	67E14D30 case 140
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E154A2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUserIsNotAl ; jumptable	67E14D30 case 139
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E154AC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUserIsNot_0 ; jumptable	67E14D30 case 138
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E154B6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisUserAccoun ; jumptable	67E14D30 case 137
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E154C0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisUserAcco_0 ; jumptable	67E14D30 case 136
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E154CA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUserDoesNot ; jumptable	67E14D30 case 135
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E154D4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUserAlready ; jumptable	67E14D30 case 134
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E154DE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisUserIsNotC ; jumptable	67E14D30 case 133
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E154E8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisOperatio_2 ; jumptable	67E14D30 case 132
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E154F2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aUnableToAddT_0 ; jumptable	67E14D30 case 131
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E154FC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheParentDirec ; jumptable	67E14D30 case 130
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15506:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aDeletingAUserW ; jumptable	67E14D30 case 129
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15510:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheLimitOf64En ; jumptable	67E14D30 case 128
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1551A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aADiskIOFailure ; jumptable	67E14D30 case 127
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15524:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereAreTooMan ; jumptable	67E14D30 case 126
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1552E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSecurityD_0 ; jumptable	67E14D30 case 125
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15538:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisOperatio_3 ; jumptable	67E14D30 case 124
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15542:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheResourcePer ; jumptable	67E14D30 case 123
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1554C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUserAccou_1 ; jumptable	67E14D30 case 122
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15556:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheGroupAlread ; jumptable	67E14D30 case 121
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15560:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheResourceNam ; jumptable	67E14D30 case 120
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1556A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUserNameCou ; jumptable	67E14D30 case 119
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15574:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheGroupNameCo ; jumptable	67E14D30 case 118
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1557E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSecurityD_1 ; jumptable	67E14D30 case 117
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15588:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheLogonServer ; jumptable	67E14D30 case 115
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15592:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThereIsAlready ; jumptable	67E14D30 case 114
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1559C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheLogonServ_0 ; jumptable	67E14D30 case 113
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E155A6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheLogonServ_1 ; jumptable	67E14D30 case 112
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E155B0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAnErrorOccur_3 ; jumptable	67E14D30 case 110
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E155BA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerIsCon ; jumptable	67E14D30 case 109
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E155C4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aACentralizedLo ; jumptable	67E14D30 case 108
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E155CE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aNetworkLogonsA ; jumptable	67E14D30 case 107
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E155D8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheLogoffProce ; jumptable	67E14D30 case 105
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E155E2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset a@wTheLogoffPro ; jumptable	67E14D30 case 104
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E155EC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheLogonProces ; jumptable	67E14D30 case 103
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E155F6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset a@wTheLogonProc ; jumptable	67E14D30 case 102
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15600:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePasswordPar ; jumptable	67E14D30 case 101
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1560A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheUserNameOrG ; jumptable	67E14D30 case 100
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15614:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheWorkstati_0 ; jumptable	67E14D30 case 99
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1561E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisWorkstatio ; jumptable	67E14D30 case 98
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15628:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAThreadForTheN ; jumptable	67E14D30 case 92
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15632:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceCont ; jumptable	67E14D30 case 91
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1563C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceCo_0 ; jumptable	67E14D30 case 90
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15646:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheRequestedPa ; jumptable	67E14D30 case 89
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15650:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceEnde ; jumptable	67E14D30 case 88
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1565A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceCoul ; jumptable	67E14D30 case 87
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15664:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheConfigurati ; jumptable	67E14D30 case 86
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1566E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceCo_1 ; jumptable	67E14D30 case 85
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15678:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceIsNo ; jumptable	67E14D30 case 84
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15682:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceName ; jumptable	67E14D30 case 83
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1568C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceHasN ; jumptable	67E14D30 case 82
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15696:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceDoes ; jumptable	67E14D30 case 81
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E156A0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheRequestedSe ; jumptable	67E14D30 case 80
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E156AA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceTabl ; jumptable	67E14D30 case 79
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E156B4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServiceData ; jumptable	67E14D30 case 78
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E156BE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePrintProces ; jumptable	67E14D30 case 66
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E156C8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDataTypeIsN ; jumptable	67E14D30 case 65
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E156D2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDeviceDrive ; jumptable	67E14D30 case 64
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E156DC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aASpoolerMemory ; jumptable	67E14D30 case 63
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E156E6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisOperationC ; jumptable	67E14D30 case 62
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E156F0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisOperatio_4 ; jumptable	67E14D30 case 61
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E156FA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisOperatio_5 ; jumptable	67E14D30 case 60
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15704:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSpoolerIsNo ; jumptable	67E14D30 case 59
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1570E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePrintProc_0 ; jumptable	67E14D30 case 58
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15718:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisPrinterDes ; jumptable	67E14D30 case 57
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15722:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisPrinterD_0 ; jumptable	67E14D30 case 56
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1572C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aNoMorePrinterD ; jumptable	67E14D30 case 55
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15736:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aNoMorePrintJob ; jumptable	67E14D30 case 54
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15740:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aNoMorePrinters ; jumptable	67E14D30 case 53
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1574A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePrinterQueu ; jumptable	67E14D30 case 52
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15754:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePrinterDest ; jumptable	67E14D30 case 51
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1575E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePrinterDe_0 ; jumptable	67E14D30 case 50
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15768:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePrintJobDoe ; jumptable	67E14D30 case 49
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15772:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePrinterDoes ; jumptable	67E14D30 case 48
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1577C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aALineInTheConf ; jumptable	67E14D30 case 47
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15786:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSpecifiedPa ; jumptable	67E14D30 case 45
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15790:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheSpecifiedCo ; jumptable	67E14D30 case 44
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1579A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheComputerN_1 ; jumptable	67E14D30 case 42
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E157A4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheEventNameIs ; jumptable	67E14D30 case 41
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E157AE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheRequestedAp ; jumptable	67E14D30 case 40
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E157B8:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerIsN_0 ; jumptable	67E14D30 case 39
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E157C2:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAnInternalErro ; jumptable	67E14D30 case 38
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E157CC:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheRequestedIn ; jumptable	67E14D30 case 37
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E157D6:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheWorkstati_1 ; jumptable	67E14D30 case 36
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E157E0:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheWorkstati_2 ; jumptable	67E14D30 case 35
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E157EA:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAGeneralNetwor ; jumptable	67E14D30 case 34
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E157F4:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAnErrorOccur_4 ; jumptable	67E14D30 case 29
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E157FE:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aARemoteApiErro ; jumptable	67E14D30 case 25
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15808:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheApiReturnBu ; jumptable	67E14D30 case 21
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15812:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThePeerService ; jumptable	67E14D30 case 20
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1581C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aRequestedAddit ; jumptable	67E14D30 case 19
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15826:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerIsCur ; jumptable	67E14D30 case 17
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15830:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheNameHasAlre ; jumptable	67E14D30 case 16
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1583A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheOperation_4 ; jumptable	67E14D30 case 15
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15844:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDeviceOrDir ; jumptable	67E14D30 case 14
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1584E:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheQueueIsEmpt ; jumptable	67E14D30 case 13
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15858:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerServi ; jumptable	67E14D30 case 12
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15862:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheDeviceIsNot ; jumptable	67E14D30 case 5
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1586C:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aThisOperatio_6 ; jumptable	67E14D30 case 4
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15876:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aANetworkResour ; jumptable	67E14D30 case 3
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15880:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aAnInternalEr_0 ; jumptable	67E14D30 case 2
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1588A:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheServerCould ; jumptable	67E14D30 case 1
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E15894:				; CODE XREF: .text:67E14D30j
					; DATA XREF: .rdata:off_67E32544o
		mov	eax, offset aTheWorkstati_3 ; jumptable	67E14D30 case 0
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------

loc_67E1589E:				; CODE XREF: .text:67E14D1Ej
		mov	eax, offset aUnknown_2 ; "unknown"
		jmp	loc_67E14D24
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	eax, [esp+24h]
		mov	dword ptr [esp+8], offset aUnixUserIdsNot ; "UNIX user IDs not supported on Windows\"...
		mov	dword ptr [esp+4], offset aOrg_freedes_80 ; "org.freedesktop.DBus.Error.NotSupported"
		mov	[esp], eax
		call	dbus_set_error
		xor	eax, eax
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		xor	eax, eax
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [esp+50h]
		mov	ebp, [esp+54h]
		mov	dword ptr [esp+10h], offset a_dbus_strin_52 ; "_dbus_string_get_dirname"
		mov	dword ptr [esp+0Ch], 2C0h
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		cmp	esi, ebp
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+4], offset aFilenameDirnam ; "filename != dirname"
		call	sub_67DFAE70
		xor	eax, eax
		test	esi, esi
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_52 ; "_dbus_string_get_dirname"
		mov	dword ptr [esp+0Ch], 2C1h
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aFilenameNull	; "filename != NULL"
		call	sub_67DFAE70
		xor	eax, eax
		test	ebp, ebp
		setnz	al
		mov	[esp], eax
		mov	dword ptr [esp+10h], offset a_dbus_strin_52 ; "_dbus_string_get_dirname"
		mov	dword ptr [esp+0Ch], 2C2h
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aDirnameNull ; "dirname != NULL"
		call	sub_67DFAE70
		mov	[esp], esi
		call	sub_67E00CE0
		cmp	eax, 0
		mov	edi, eax
		jz	loc_67E15BC0
		nop
		jg	short loc_67E15999
		jmp	loc_67E15C53
; ---------------------------------------------------------------------------

loc_67E15997:				; CODE XREF: .text:67E159C2j
		mov	edi, ebx

loc_67E15999:				; CODE XREF: .text:67E15990j
		lea	ebx, [edi-1]
		mov	[esp+4], ebx
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 2Fh
		jz	short loc_67E159C0
		mov	[esp+4], ebx
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 5Ch
		jnz	loc_67E15B10

loc_67E159C0:				; CODE XREF: .text:67E159AAj
		test	ebx, ebx
		jg	short loc_67E15997
		mov	eax, ebx
		mov	edi, ebx
		not	eax
		mov	ebx, 1
		shr	eax, 1Fh
		mov	dword ptr [esp+10h], offset a_dbus_strin_52 ; "_dbus_string_get_dirname"
		mov	dword ptr [esp+0Ch], 2CEh
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSep0	; "sep >= 0"
		mov	[esp], eax
		call	sub_67DFAE70
		test	edi, edi
		jz	loc_67E15B90

loc_67E15A02:				; CODE XREF: .text:67E15B42j
					; .text:67E15B5Aj ...
		lea	eax, [esp+2Ch]
		mov	[esp+4], edi
		mov	[esp+0Ch], eax
		mov	dword ptr [esp+8], 2Fh
		mov	[esp], esi
		call	sub_67E13AD0
		lea	eax, [esp+28h]
		mov	[esp+4], edi
		mov	[esp+0Ch], eax
		mov	dword ptr [esp+8], 5Ch
		mov	[esp], esi
		call	sub_67E13AD0
		mov	eax, [esp+28h]
		mov	edi, [esp+2Ch]
		cmp	edi, eax
		jge	short loc_67E15A48
		mov	edi, eax

loc_67E15A48:				; CODE XREF: .text:67E15A44j
		cmp	edi, 0
		jl	loc_67E15BC0
		jnz	short loc_67E15A57
		jmp	short loc_67E15A82
; ---------------------------------------------------------------------------

loc_67E15A55:				; CODE XREF: .text:67E15A80j
		mov	edi, ebx

loc_67E15A57:				; CODE XREF: .text:67E15A51j
		lea	ebx, [edi-1]
		mov	[esp+4], ebx
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 2Fh
		jz	short loc_67E15A7E
		mov	[esp+4], ebx
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 5Ch
		jnz	loc_67E15BD8

loc_67E15A7E:				; CODE XREF: .text:67E15A68j
		test	ebx, ebx
		jnz	short loc_67E15A55

loc_67E15A82:				; CODE XREF: .text:67E15A53j
		mov	dword ptr [esp+10h], offset a_dbus_strin_52 ; "_dbus_string_get_dirname"
		mov	ebx, 1
		xor	edi, edi
		mov	dword ptr [esp+0Ch], 2E6h
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSep0	; "sep >= 0"
		mov	dword ptr [esp], 1
		call	sub_67DFAE70

loc_67E15AB5:				; CODE XREF: .text:67E15C4Ej
		mov	[esp+4], edi
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 2Fh
		jz	loc_67E15B90
		mov	[esp+4], edi
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 5Ch
		jz	loc_67E15B90

loc_67E15ADD:				; CODE XREF: .text:67E15C07j
					; .text:67E15C1Fj ...
		mov	[esp], ebp
		call	sub_67E00CE0
		mov	[esp+0Ch], ebp
		mov	[esp+8], edi
		mov	[esp], esi
		mov	dword ptr [esp+4], 0
		mov	[esp+10h], eax
		call	sub_67E05A20
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E15B10:				; CODE XREF: .text:67E159BAj
		mov	eax, edi
		not	eax
		shr	eax, 1Fh
		mov	dword ptr [esp+10h], offset a_dbus_strin_52 ; "_dbus_string_get_dirname"
		mov	dword ptr [esp+0Ch], 2CEh
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSep0	; "sep >= 0"
		mov	[esp], eax
		call	sub_67DFAE70
		cmp	edi, 2
		jnz	loc_67E15A02
		mov	dword ptr [esp+4], 1
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 3Ah
		jnz	loc_67E15A02
		mov	dword ptr [esp+4], 0
		mov	ebx, 3
		mov	[esp], esi
		call	sub_67E00E50
		movzx	eax, al
		mov	[esp], eax
		call	ds:isalpha
		test	eax, eax
		jz	loc_67E15A02
		lea	esi, [esi+0]

loc_67E15B90:				; CODE XREF: .text:67E159FCj
					; .text:67E15AC3j ...
		mov	[esp], ebp
		call	sub_67E00CE0
		mov	[esp+0Ch], ebp
		mov	[esp+8], ebx
		mov	[esp], esi
		mov	dword ptr [esp+4], 0
		mov	[esp+10h], eax
		call	sub_67E05A20
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E15BC0:				; CODE XREF: .text:67E15989j
					; .text:67E15A4Bj
		mov	[esp], ebp
		mov	dword ptr [esp+4], offset a__1 ; "."
		call	sub_67E08C10
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E15BD8:				; CODE XREF: .text:67E15A78j
		mov	dword ptr [esp+10h], offset a_dbus_strin_52 ; "_dbus_string_get_dirname"
		mov	dword ptr [esp+0Ch], 2E6h
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSep0	; "sep >= 0"
		mov	dword ptr [esp], 1
		call	sub_67DFAE70
		cmp	edi, 2
		jnz	loc_67E15ADD
		mov	dword ptr [esp+4], 1
		mov	[esp], esi
		call	sub_67E00E50
		cmp	al, 3Ah
		jnz	loc_67E15ADD
		mov	dword ptr [esp+4], 0
		mov	[esp], esi
		call	sub_67E00E50
		movzx	eax, al
		mov	[esp], eax
		call	ds:isalpha
		test	eax, eax
		jz	loc_67E15ADD
		mov	ebx, 3
		jmp	loc_67E15AB5
; ---------------------------------------------------------------------------

loc_67E15C53:				; CODE XREF: .text:67E15992j
		mov	dword ptr [esp+10h], offset a_dbus_strin_52 ; "_dbus_string_get_dirname"
		mov	dword ptr [esp+0Ch], 2CEh
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aSep0	; "sep >= 0"
		mov	dword ptr [esp], 0
		call	sub_67DFAE70
		jmp	loc_67E15A02
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	edx, [esp+58h]
		mov	ebp, [esp+50h]
		test	edx, edx
		jz	short loc_67E15D20
		mov	eax, [esp+58h]
		mov	[esp], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	short loc_67E15D20

loc_67E15CB5:				; CODE XREF: .text:67E15D25j
		mov	dword ptr [esp+10h], offset a_dbus_director ; "_dbus_directory_get_next_file"
		mov	dword ptr [esp+0Ch], 281h
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_33 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		mov	[esp], edx
		call	sub_67DFAE70
		mov	edi, ds:SetLastError
		mov	esi, ds:GetLastError
		lea	esi, [esi+0]

loc_67E15CF0:				; CODE XREF: .text:67E15DC7j
					; .text:67E15DD8j
		mov	dword ptr [esp], 0
		call	edi ; SetLastError
		mov	ebx, [ebp+0]
		sub	esp, 4
		call	esi
		test	ebx, ebx
		mov	edx, eax
		jnz	short loc_67E15D27

loc_67E15D07:				; CODE XREF: .text:67E15D2Cj
					; .text:67E15E90j ...
		call	esi
		xor	edx, edx
		test	eax, eax
		lea	esi, [esi+0]
		jnz	loc_67E15E42

loc_67E15D16:				; CODE XREF: .text:67E15E14j
		add	esp, 3Ch
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E15D20:				; CODE XREF: .text:67E15CA1j
					; .text:67E15CB3j
		mov	edx, 1
		jmp	short loc_67E15CB5
; ---------------------------------------------------------------------------

loc_67E15D27:				; CODE XREF: .text:67E15D05j
		cmp	word ptr [ebx+6], 0
		jnz	short loc_67E15D07
		xor	eax, eax
		cmp	word ptr [ebx+4], 0
		jz	short loc_67E15D60
		lea	eax, [ebx+8]
		mov	[esp+4], eax
		mov	eax, [ebx]
		mov	[esp+2Ch], edx
		mov	[esp], eax
		call	ds:FindNextFileA
		sub	esp, 8
		test	eax, eax
		mov	edx, [esp+2Ch]
		jz	loc_67E15E83
		movzx	eax, word ptr [ebx+4]

loc_67E15D60:				; CODE XREF: .text:67E15D35j
		add	eax, 1
		mov	[ebx+4], ax
		lea	edx, [ebx+156h]
		lea	eax, [ebx+34h]
		mov	[esp], edx
		mov	[esp+2Ch], edx
		mov	dword ptr [esp+8], 100h
		mov	[esp+4], eax
		call	strncpy
		mov	edx, [esp+2Ch]
		mov	dword ptr [ebx+14Ch], 1
		mov	[esp], edx
		call	strlen
		lea	edx, [ebx+14Ch]
		cmp	byte ptr [ebx+156h], 2Eh
		mov	[ebx+154h], ax
		movsx	eax, word ptr [ebx+4]
		mov	[ebx+150h], eax
		jnz	short loc_67E15DDE
		movzx	eax, byte ptr [ebx+157h]
		test	al, al
		jz	loc_67E15CF0
		cmp	al, 2Eh
		jnz	short loc_67E15DDE
		cmp	byte ptr [ebx+158h], 0
		jz	loc_67E15CF0

loc_67E15DDE:				; CODE XREF: .text:67E15DBCj
					; .text:67E15DCFj
		mov	eax, [esp+54h]
		mov	[esp+2Ch], edx
		mov	dword ptr [esp+4], 0
		mov	[esp], eax
		call	sub_67E06F60
		mov	edx, [esp+2Ch]
		mov	eax, [esp+54h]
		add	edx, 0Ah
		mov	[esp+4], edx
		mov	[esp], eax
		call	sub_67E08C10
		mov	edx, 1
		test	eax, eax
		jnz	loc_67E15D16
		mov	eax, [esp+58h]
		mov	dword ptr [esp+8], offset aNoMemoryToRe_0 ; "No	memory to read directory entry"
		mov	dword ptr [esp+4], offset aOrg_freedes_81 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp], eax
		call	dbus_set_error
		xor	edx, edx
		add	esp, 3Ch
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E15E42:				; CODE XREF: .text:67E15D10j
		call	esi
		mov	[esp], eax
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	[esp+0Ch], ebx
		mov	dword ptr [esp+8], offset aFailedToGetNex ; "Failed to get next	in directory: %s"
		mov	[esp+4], eax
		mov	eax, [esp+58h]
		mov	[esp], eax
		call	dbus_set_error
		mov	[esp], ebx
		call	sub_67E0AEE0
		xor	edx, edx
		add	esp, 3Ch
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E15E83:				; CODE XREF: .text:67E15D56j
		mov	[esp+2Ch], edx
		call	esi
		mov	edx, [esp+2Ch]
		cmp	eax, 12h
		jnz	loc_67E15D07
		mov	[esp], edx
		call	edi ; SetLastError
		push	eax
		mov	word ptr [ebx+6], 1
		jmp	loc_67E15D07
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ecx, [esp+54h]
		test	ecx, ecx
		jz	loc_67E15FD1
		mov	eax, [esp+54h]
		mov	[esp], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E15FD1

loc_67E15ED9:				; CODE XREF: .text:67E15FD6j
		mov	[esp], edx
		mov	dword ptr [esp+10h], offset a_dbus_direct_0 ; "_dbus_directory_open"
		mov	dword ptr [esp+0Ch], 251h
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_33 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	eax, [esp+50h]
		mov	[esp], eax
		call	sub_67E01770
		mov	[esp], eax
		mov	edi, eax
		call	strlen
		add	eax, 3
		mov	[esp], eax
		call	malloc
		mov	[esp+4], edi
		mov	ebx, eax
		mov	[esp], eax
		call	strcpy
		mov	[esp], ebx
		call	strlen
		sub	eax, 1
		js	short loc_67E15F4F
		lea	eax, [ebx+eax]
		movzx	edx, byte ptr [eax]
		cmp	dl, 5Ch
		jnz	loc_67E15FE0
		mov	byte ptr [eax],	0

loc_67E15F4F:				; CODE XREF: .text:67E15F3Bj
					; .text:67E15FE3j ...
		mov	[esp], ebx
		call	strlen
		lea	eax, [ebx+eax]
		mov	word ptr [eax],	2A5Ch
		mov	byte ptr [eax+2], 0
		mov	dword ptr [esp], 258h
		call	malloc
		mov	word ptr [eax+4], 0
		mov	esi, eax
		mov	word ptr [eax+6], 0
		mov	[esp], edi
		call	_strdup
		mov	[esp], ebx
		mov	[esi+148h], eax
		lea	eax, [esi+8]
		mov	[esp+4], eax
		call	ds:FindFirstFileA
		sub	esp, 8
		cmp	eax, 0FFFFFFFFh
		mov	ebp, eax
		jz	short loc_67E15FF5

loc_67E15FA5:				; CODE XREF: .text:67E16050j
		mov	[esp], ebx
		mov	[esi], ebp
		call	free
		mov	dword ptr [esp], 4
		call	dbus_malloc0
		test	eax, eax
		mov	ebx, eax
		jz	loc_67E16055
		mov	[eax], esi

loc_67E15FC7:				; CODE XREF: .text:67E16045j
					; .text:67E16099j
		add	esp, 3Ch
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E15FD1:				; CODE XREF: .text:67E15EBDj
					; .text:67E15ED3j
		mov	edx, 1
		jmp	loc_67E15ED9
; ---------------------------------------------------------------------------
		align 10h

loc_67E15FE0:				; CODE XREF: .text:67E15F46j
		cmp	dl, 2Fh
		jnz	loc_67E15F4F
		mov	byte ptr [eax],	0
		lea	esi, [esi+0]
		jmp	loc_67E15F4F
; ---------------------------------------------------------------------------

loc_67E15FF5:				; CODE XREF: .text:67E15FA3j
		mov	edx, ds:GetLastError
		mov	[esp+2Ch], edx
		call	edx ; GetLastError
		mov	edx, [esp+2Ch]
		cmp	eax, 12h
		jz	short loc_67E1604A
		call	edx
		mov	[esp], eax
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	[esp+10h], ebx
		mov	[esp+0Ch], edi
		mov	dword ptr [esp+8], offset aFailedToReadDi ; "Failed to read directory \"%s\": %s"
		mov	[esp+4], eax
		mov	eax, [esp+54h]
		mov	[esp], eax
		call	dbus_set_error
		mov	[esp], ebx
		xor	ebx, ebx
		call	sub_67E0AEE0
		jmp	loc_67E15FC7
; ---------------------------------------------------------------------------

loc_67E1604A:				; CODE XREF: .text:67E16008j
		mov	word ptr [esi+6], 1
		jmp	loc_67E15FA5
; ---------------------------------------------------------------------------

loc_67E16055:				; CODE XREF: .text:67E15FBFj
		mov	eax, [esi]
		mov	[esp], eax
		call	ds:FindClose
		mov	eax, [esi+148h]
		sub	esp, 4
		test	eax, eax
		jz	short loc_67E16075
		mov	[esp], eax
		call	free

loc_67E16075:				; CODE XREF: .text:67E1606Bj
		mov	[esp], esi
		call	free
		mov	eax, [esp+54h]
		mov	dword ptr [esp+8], offset aCouldNotAlloca ; "Could not allocate	memory for directory"...
		mov	dword ptr [esp+4], offset aOrg_freedes_81 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp], eax
		call	dbus_set_error
		jmp	loc_67E15FC7
; ---------------------------------------------------------------------------
		align 10h
		push	edi
		push	esi
		push	ebx
		sub	esp, 50h
		mov	esi, [esp+68h]
		mov	ebx, [esp+64h]
		test	esi, esi
		jz	loc_67E16266
		mov	[esp], esi
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E16266

loc_67E160C8:				; CODE XREF: .text:67E1626Bj
		mov	[esp], edx
		mov	dword ptr [esp+10h], offset a_dbus_stat	; "_dbus_stat"
		mov	dword ptr [esp+0Ch], 15Fh
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_33 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	eax, [esp+60h]
		mov	[esp], eax
		call	sub_67E01770
		mov	dword ptr [esp+4], 0
		mov	edi, eax
		lea	eax, [esp+2Ch]
		mov	[esp+8], eax
		mov	[esp], edi
		call	ds:GetFileAttributesExA
		sub	esp, 0Ch
		test	eax, eax
		jz	loc_67E162A0
		mov	eax, [esp+2Ch]
		test	al, 10h
		jnz	loc_67E16270
		mov	edx, 8100h
		test	al, 1
		mov	dword ptr [ebx], 8000h
		mov	esi, 8180h
		mov	[ebx], edx
		jnz	loc_67E1628A

loc_67E16148:				; CODE XREF: .text:67E16284j
		mov	esi, edx

loc_67E1614A:				; CODE XREF: .text:67E1628Cj
		mov	dword ptr [esp+4], 2Eh
		mov	[esp], edi
		call	strrchr
		test	eax, eax
		jz	short loc_67E16178
		mov	dword ptr [esp+4], offset a_exe	; ".exe"
		mov	[esp], eax
		call	_stricmp
		test	eax, eax
		jz	loc_67E16291
		mov	esi, [ebx]

loc_67E16178:				; CODE XREF: .text:67E1615Cj
					; .text:67E16298j
		mov	eax, esi
		xor	edi, edi
		and	eax, 1C0h
		shr	eax, 3
		or	eax, esi
		mov	edx, eax
		and	edx, 1C0h
		shr	edx, 6
		or	edx, eax
		mov	[ebx], edx
		mov	dword ptr [ebx+4], 1
		mov	dword ptr [ebx+8], 0FFFFFFFFh
		mov	dword ptr [ebx+0Ch], 0FFFFFFFFh
		mov	eax, [esp+4Ch]
		mov	[ebx+10h], eax
		mov	eax, [esp+3Ch]
		mov	esi, [esp+38h]
		mov	dword ptr [esp+8], 989680h
		mov	dword ptr [esp+0Ch], 0
		mov	edx, eax
		mov	eax, 0
		add	eax, esi
		adc	edx, edi
		xor	edi, edi
		mov	[esp], eax
		mov	[esp+4], edx
		call	sub_67E18880
		add	eax, 2AC18000h
		mov	[ebx+14h], eax
		mov	eax, [esp+44h]
		mov	esi, [esp+40h]
		mov	dword ptr [esp+8], 989680h
		mov	dword ptr [esp+0Ch], 0
		mov	edx, eax
		mov	eax, 0
		add	eax, esi
		adc	edx, edi
		xor	edi, edi
		mov	[esp], eax
		mov	[esp+4], edx
		call	sub_67E18880
		add	eax, 2AC18000h
		mov	[ebx+18h], eax
		mov	eax, [esp+34h]
		mov	esi, [esp+30h]
		mov	dword ptr [esp+8], 989680h
		mov	dword ptr [esp+0Ch], 0
		mov	edx, eax
		mov	eax, 0
		add	eax, esi
		adc	edx, edi
		mov	[esp], eax
		mov	[esp+4], edx
		call	sub_67E18880
		add	eax, 2AC18000h
		mov	[ebx+1Ch], eax
		add	esp, 50h
		mov	eax, 1
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_67E16266:				; CODE XREF: .text:67E160B0j
					; .text:67E160C2j
		mov	edx, 1
		jmp	loc_67E160C8
; ---------------------------------------------------------------------------

loc_67E16270:				; CODE XREF: .text:67E16128j
		mov	edx, 4100h
		test	al, 1
		mov	dword ptr [ebx], 4000h
		mov	esi, 4180h
		mov	[ebx], edx
		jz	loc_67E16148

loc_67E1628A:				; CODE XREF: .text:67E16142j
		mov	[ebx], esi
		jmp	loc_67E1614A
; ---------------------------------------------------------------------------

loc_67E16291:				; CODE XREF: .text:67E16170j
		mov	esi, [ebx]
		or	esi, 40h
		mov	[ebx], esi
		jmp	loc_67E16178
; ---------------------------------------------------------------------------
		align 10h

loc_67E162A0:				; CODE XREF: .text:67E1611Cj
		call	ds:GetLastError
		mov	[esp], esi
		mov	[esp+4], eax
		call	sub_67E0ADC0
		add	esp, 50h
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	dword ptr [esp+0Ch], offset a_dbus_set_sign ; "_dbus_set_signal_handler() has to be im"...
		mov	dword ptr [esp+8], offset a_dbus_set_si_0 ; "_dbus_set_signal_handler"
		mov	dword ptr [esp+4], 14Ah
		mov	dword ptr [esp], offset	aRBuildWin32_41	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E162F0(int,	int, va_list)
sub_67E162F0	proc near		; CODE XREF: .text:67E163EAp

Dest		= dword	ptr -41Ch
Format		= dword	ptr -418h
Args		= dword	ptr -414h
var_410		= dword	ptr -410h
OutputString	= byte ptr -40Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 41Ch
		mov	[esp+41Ch+var_C], ebx
		mov	ebx, [esp+41Ch+arg_0]
		mov	[esp+41Ch+var_4], edi
		mov	eax, [esp+41Ch+arg_4]
		mov	[esp+41Ch+var_8], esi
		mov	edi, [esp+41Ch+arg_8]
		cmp	ebx, 2
		ja	short loc_67E16385
		mov	[esp+41Ch+var_410], eax
		mov	eax, ds:off_67E332EC[ebx*4]
		lea	esi, [esp+41Ch+OutputString]
		mov	[esp+41Ch+Format], offset aSS_1	; "%s%s"
		mov	[esp+41Ch+Dest], esi ; Dest
		mov	[esp+41Ch+Args], eax
		call	sprintf
		mov	[esp+41Ch+Args], edi ; Args
		mov	[esp+41Ch+Format], esi ; Format
		mov	[esp+41Ch+Dest], esi ; Dest
		call	vsprintf
		mov	[esp+41Ch+Dest], esi ; lpOutputString
		call	ds:OutputDebugStringA
		sub	esp, 4
		cmp	ebx, 2
		jz	short loc_67E163C3

loc_67E16369:				; CODE XREF: sub_67E162F0+D1j
		mov	ebx, [esp+41Ch+var_C]
		mov	esi, [esp+41Ch+var_8]
		mov	edi, [esp+41Ch+var_4]
		add	esp, 41Ch
		retn
; ---------------------------------------------------------------------------

loc_67E16385:				; CODE XREF: sub_67E162F0+33j
		lea	ebx, [esp+41Ch+OutputString]
		mov	[esp+41Ch+var_410], eax
		mov	[esp+41Ch+Args], offset	byte_67E3308F
		mov	[esp+41Ch+Format], offset aSS_1	; "%s%s"
		mov	[esp+41Ch+Dest], ebx ; Dest
		call	sprintf
		mov	[esp+41Ch+Args], edi ; Args
		mov	[esp+41Ch+Format], ebx ; Format
		mov	[esp+41Ch+Dest], ebx ; Dest
		call	vsprintf
		mov	[esp+41Ch+Dest], ebx ; lpOutputString
		call	ds:OutputDebugStringA
		sub	esp, 4
		jmp	short loc_67E16369
; ---------------------------------------------------------------------------

loc_67E163C3:				; CODE XREF: sub_67E162F0+77j
		mov	[esp+41Ch+Dest], 1 ; Code
		call	exit
sub_67E162F0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		lea	eax, [esp+28h]
		mov	[esp+8], eax
		mov	eax, [esp+24h]
		mov	[esp+4], eax
		mov	eax, [esp+20h]
		mov	[esp], eax
		call	sub_67E162F0
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebx, [esp+70h]
		test	ebx, ebx
		jz	loc_67E167B0
		mov	[esp], ebx
		call	sub_67E01770
		mov	dword ptr [esp+0Ch], offset aWritingPidFile ; "writing pid file	%s\n"
		mov	dword ptr [esp+8], offset a_dbus_write_pi ; "_dbus_write_pid_to_file_and_pipe"
		mov	dword ptr [esp+4], 0AEh
		mov	dword ptr [esp], offset	aRBuildWin32_41	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	[esp+10h], eax
		call	sub_67DFABC0
		mov	ebp, [esp+7Ch]
		test	ebp, ebp
		jz	loc_67E16648
		mov	eax, [esp+7Ch]
		mov	[esp], eax
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jz	loc_67E16648

loc_67E16465:				; CODE XREF: .text:67E1664Dj
		mov	[esp], edx
		mov	dword ptr [esp+10h], offset a_dbus_write__1 ; "_dbus_write_pid_file"
		mov	dword ptr [esp+0Ch], 5Ah
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_33 ; "(error) ==	NULL ||	!dbus_error_is_set ("...
		call	sub_67DFAE70
		mov	[esp], ebx
		call	sub_67E01770
		mov	dword ptr [esp+18h], 0FFFFFFFFh
		mov	dword ptr [esp+14h], 80h
		mov	dword ptr [esp+10h], 1
		mov	dword ptr [esp+0Ch], 0
		mov	dword ptr [esp+8], 3
		mov	[esp+2Ch], eax
		mov	dword ptr [esp+4], 40000000h
		mov	[esp], eax
		call	ds:CreateFileA
		sub	esp, 1Ch
		cmp	eax, 0FFFFFFFFh
		mov	ebp, eax
		jz	loc_67E167E0
		mov	edx, [esp+78h]
		lea	edi, [esp+38h]
		mov	dword ptr [esp+8], offset aLu_0	; "%lu\n"
		mov	esi, edi
		mov	dword ptr [esp+4], 14h
		mov	[esp], edi
		mov	[esp+0Ch], edx
		call	sub_67E18A60
		test	eax, eax
		js	loc_67E1680E

loc_67E1650E:				; CODE XREF: .text:67E16522j
		mov	edx, [esi]
		add	esi, 4
		lea	eax, [edx-1010101h]
		not	edx
		and	eax, edx
		and	eax, 80808080h
		jz	short loc_67E1650E
		test	eax, 8080h
		jz	loc_67E166B0

loc_67E1652F:				; CODE XREF: .text:67E166B6j
		add	al, al
		sbb	esi, 3
		sub	esi, edi
		test	esi, esi
		jle	loc_67E16652
		xor	ebx, ebx
		jmp	short loc_67E16554
; ---------------------------------------------------------------------------

loc_67E16542:				; CODE XREF: .text:67E16581j
		mov	eax, [esp+4Ch]
		test	eax, eax
		jz	short loc_67E16583
		add	ebx, eax
		cmp	esi, ebx
		jle	loc_67E16652

loc_67E16554:				; CODE XREF: .text:67E16540j
		mov	eax, esi
		sub	eax, ebx
		lea	edx, [esp+4Ch]
		mov	[esp+8], eax
		lea	eax, [edi+ebx]
		mov	dword ptr [esp+10h], 0
		mov	[esp+0Ch], edx
		mov	[esp+4], eax
		mov	[esp], ebp
		call	ds:WriteFile
		sub	esp, 14h
		test	eax, eax
		jnz	short loc_67E16542

loc_67E16583:				; CODE XREF: .text:67E16548j
		call	ds:GetLastError
		mov	[esp], eax
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	edx, [esp+2Ch]
		mov	[esp+10h], ebx
		mov	dword ptr [esp+8], offset aCouldNotWrit_0 ; "Could not write to	%s: %s"
		mov	[esp+0Ch], edx
		mov	[esp+4], eax
		mov	eax, [esp+7Ch]
		mov	[esp], eax
		call	dbus_set_error
		mov	[esp], ebx
		call	sub_67E0AEE0
		mov	[esp], ebp
		call	ds:CloseHandle
		sub	esp, 4

loc_67E165D0:				; CODE XREF: .text:67E16701j
					; .text:67E1684Aj
		mov	dword ptr [esp+0Ch], offset aPidFileWriteFa ; "pid file	write failed\n"
		mov	dword ptr [esp+8], offset a_dbus_write_pi ; "_dbus_write_pid_to_file_and_pipe"
		mov	dword ptr [esp+4], 0B3h
		mov	dword ptr [esp], offset	aRBuildWin32_41	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	edi, [esp+7Ch]
		test	edi, edi
		jz	loc_67E16706
		mov	edx, [esp+7Ch]
		mov	[esp], edx
		call	dbus_error_is_set
		xor	edx, edx
		test	eax, eax
		jnz	loc_67E16706

loc_67E16616:				; CODE XREF: .text:67E1670Bj
		mov	dword ptr [esp+10h], offset a_dbus_write_pi ; "_dbus_write_pid_to_file_and_pipe"
		mov	dword ptr [esp+0Ch], 0B4h
		mov	dword ptr [esp+8], offset aRBuildWin32_41 ; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		mov	dword ptr [esp+4], offset aErrorNullDb_34 ; "(error) ==	NULL ||	dbus_error_is_set (("...
		mov	[esp], edx
		call	sub_67DFAE70
		add	esp, 5Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E16648:				; CODE XREF: .text:67E16449j
					; .text:67E1645Fj
		mov	edx, 1
		jmp	loc_67E16465
; ---------------------------------------------------------------------------

loc_67E16652:				; CODE XREF: .text:67E16538j
					; .text:67E1654Ej
		mov	[esp], ebp
		call	ds:CloseHandle
		sub	esp, 4
		test	eax, eax
		jz	short loc_67E166C0

loc_67E16662:				; CODE XREF: .text:67E167D4j
		mov	esi, [esp+74h]
		test	esi, esi
		jz	short loc_67E1667E
		mov	eax, [esp+74h]
		mov	[esp], eax
		call	sub_67E0A050
		test	eax, eax
		jnz	loc_67E16710

loc_67E1667E:				; CODE XREF: .text:67E16668j
		mov	dword ptr [esp+0Ch], offset aNoPidPipeToWri ; "No pid pipe to write to\n"
		mov	dword ptr [esp+8], offset a_dbus_write_pi ; "_dbus_write_pid_to_file_and_pipe"
		mov	dword ptr [esp+4], 0E3h
		mov	dword ptr [esp], offset	aRBuildWin32_41	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	eax, 1

loc_67E166A7:				; CODE XREF: .text:67E168BFj
					; .text:67E168D1j
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E166B0:				; CODE XREF: .text:67E16529j
		shr	eax, 10h
		add	esi, 2
		jmp	loc_67E1652F
; ---------------------------------------------------------------------------
		align 10h

loc_67E166C0:				; CODE XREF: .text:67E16660j
		call	ds:GetLastError
		mov	[esp], eax
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	edx, [esp+2Ch]
		mov	[esp+10h], ebx
		mov	dword ptr [esp+8], offset aCouldNotClos_0 ; "Could not close file %s: %s"
		mov	[esp+0Ch], edx

loc_67E166E9:				; CODE XREF: .text:67E16809j
		mov	[esp+4], eax
		mov	eax, [esp+7Ch]
		mov	[esp], eax
		call	dbus_set_error
		mov	[esp], ebx
		call	sub_67E0AEE0
		jmp	loc_67E165D0
; ---------------------------------------------------------------------------

loc_67E16706:				; CODE XREF: .text:67E165FAj
					; .text:67E16610j
		mov	edx, 1
		jmp	loc_67E16616
; ---------------------------------------------------------------------------

loc_67E16710:				; CODE XREF: .text:67E16678j
		mov	edx, [esp+74h]
		lea	edi, [esp+38h]
		mov	eax, [edx]
		mov	dword ptr [esp+0Ch], offset aWritingOurPidT ; "writing our pid to pipe %d\n"
		mov	dword ptr [esp+8], offset a_dbus_write_pi ; "_dbus_write_pid_to_file_and_pipe"
		mov	dword ptr [esp+4], 0C2h
		mov	[esp+10h], eax
		mov	dword ptr [esp], offset	aRBuildWin32_41	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		mov	[esp], edi
		call	sub_67E03350
		test	eax, eax
		jz	short loc_67E16782
		mov	edx, [esp+78h]
		mov	[esp], edi
		mov	[esp+4], edx
		call	sub_67E09740
		test	eax, eax
		jz	short loc_67E1677A
		mov	dword ptr [esp+4], offset asc_67E331A2 ; "\n"
		mov	[esp], edi
		call	sub_67E08C10
		test	eax, eax
		jnz	loc_67E1684F

loc_67E1677A:				; CODE XREF: .text:67E16760j
		mov	[esp], edi
		call	sub_67E02BF0

loc_67E16782:				; CODE XREF: .text:67E1674Cj
		mov	eax, off_67E19010
		mov	dword ptr [esp+4], offset aOrg_freedes_81 ; "org.freedesktop.DBus.Error.NoMemory"
		mov	[esp+8], eax
		mov	eax, [esp+7Ch]
		mov	[esp], eax
		call	dbus_set_error_const
		add	esp, 5Ch
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E167B0:				; CODE XREF: .text:67E1640Dj
		mov	dword ptr [esp+0Ch], offset aNoPidFileReque ; "No pid file requested\n"
		mov	dword ptr [esp+8], offset a_dbus_write_pi ; "_dbus_write_pid_to_file_and_pipe"
		mov	dword ptr [esp+4], 0BAh
		mov	dword ptr [esp], offset	aRBuildWin32_41	; "r:\\build\\win32libs\\dbus-1.4.16-20110"...
		call	sub_67DFABC0
		jmp	loc_67E16662
; ---------------------------------------------------------------------------
		align 10h

loc_67E167E0:				; CODE XREF: .text:67E164DAj
		call	ds:GetLastError
		mov	[esp], eax
		call	sub_67E0AD30
		mov	ebx, eax
		call	sub_67E0ACC0
		mov	edx, [esp+2Ch]
		mov	[esp+10h], ebx
		mov	dword ptr [esp+8], offset aCouldNotCrea_1 ; "Could not create PID file %s: %s"
		mov	[esp+0Ch], edx
		jmp	loc_67E166E9
; ---------------------------------------------------------------------------

loc_67E1680E:				; CODE XREF: .text:67E16508j
		call	sub_67E094E0
		mov	ebx, eax
		call	sub_67E09DE0
		mov	edx, [esp+2Ch]
		mov	[esp+10h], ebx
		mov	dword ptr [esp+8], offset aFailedToFormat ; "Failed to format PID for \"%s\": %s"
		mov	[esp+0Ch], edx
		mov	[esp+4], eax
		mov	eax, [esp+7Ch]
		mov	[esp], eax
		call	dbus_set_error
		mov	[esp], ebp
		call	ds:CloseHandle
		sub	esp, 4
		jmp	loc_67E165D0
; ---------------------------------------------------------------------------

loc_67E1684F:				; CODE XREF: .text:67E16774j
		mov	[esp], edi
		call	sub_67E00CE0
		mov	edx, [esp+7Ch]
		mov	dword ptr [esp+8], 0
		mov	[esp+4], edi
		mov	[esp+10h], edx
		mov	ebx, eax
		mov	[esp+0Ch], eax
		mov	eax, [esp+74h]
		mov	[esp], eax
		call	sub_67E11440
		cmp	ebx, eax
		jz	short loc_67E168C4
		mov	ebx, [esp+7Ch]
		test	ebx, ebx
		jz	short loc_67E168B5
		mov	edx, [esp+7Ch]
		mov	[esp], edx
		call	dbus_error_is_set
		test	eax, eax
		jnz	short loc_67E168B5
		mov	eax, [esp+7Ch]
		mov	dword ptr [esp+8], offset aPrintingMessag ; "Printing message bus PID: did not write"...
		mov	dword ptr [esp+4], offset aOrg_freedes_82 ; "org.freedesktop.DBus.Error.Failed"
		mov	[esp], eax
		call	dbus_set_error

loc_67E168B5:				; CODE XREF: .text:67E16887j
					; .text:67E16897j
		mov	[esp], edi
		call	sub_67E02BF0
		xor	eax, eax
		jmp	loc_67E166A7
; ---------------------------------------------------------------------------

loc_67E168C4:				; CODE XREF: .text:67E1687Fj
		mov	[esp], edi
		call	sub_67E02BF0
		mov	eax, 1
		jmp	loc_67E166A7
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 1Ch
		mov	[esp+18h], esi
		mov	esi, [esp+20h]
		mov	[esp+14h], ebx
		mov	ebx, [esi]
		test	ebx, ebx
		jz	short loc_67E1691D
		mov	eax, [ebx]
		mov	[esp], eax
		call	ds:FindClose
		mov	eax, [ebx+148h]
		sub	esp, 4
		test	eax, eax
		jz	short loc_67E16915
		mov	[esp], eax
		call	free

loc_67E16915:				; CODE XREF: .text:67E1690Bj
		mov	[esp], ebx
		call	free

loc_67E1691D:				; CODE XREF: .text:67E168F3j
		mov	[esp+20h], esi
		mov	ebx, [esp+14h]
		mov	esi, [esp+18h]
		add	esp, 1Ch
		jmp	dbus_free
; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __WSAFDIsSet]
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E16950	proc near		; CODE XREF: sub_67E0E8E0+119p
					; sub_67E10680+F8p ...

iError		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_67E349C4
		test	eax, eax
		jz	short loc_67E16998

loc_67E1695D:				; CODE XREF: sub_67E16950+5Cj
		mov	edx, [esp+1Ch+arg_C]
		mov	[esp+1Ch+var_10], edx
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_14], edx
		mov	edx, [esp+1Ch+arg_4]
		mov	[esp+1Ch+var_18], edx
		mov	edx, [esp+1Ch+arg_0]
		mov	[esp+1Ch+iError], edx
		call	eax ; dword_67E349C4
		sub	esp, 10h
		mov	ebx, eax
		mov	[esp+1Ch+iError], eax ;	iError
		call	ds:WSASetLastError
		mov	eax, ebx
		sub	esp, 4
		add	esp, 18h
		pop	ebx
		retn	10h
; ---------------------------------------------------------------------------

loc_67E16998:				; CODE XREF: sub_67E16950+Bj
		mov	[esp+1Ch+iError], 0
		call	sub_67E169F0
		sub	esp, 4
		mov	ds:dword_67E349C4, eax
		jmp	short loc_67E1695D
sub_67E16950	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E169B0	proc near		; CODE XREF: sub_67E0E8E0+30Ep
					; sub_67E0E8E0+5B2p ...

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_67E349C8
		mov	ebx, [esp+1Ch+arg_0]
		test	eax, eax
		jz	short loc_67E169D0
		mov	[esp+1Ch+arg_0], ebx
		add	esp, 18h
		pop	ebx
		jmp	eax
; ---------------------------------------------------------------------------
		align 10h

loc_67E169D0:				; CODE XREF: sub_67E169B0+Fj
		mov	[esp+1Ch+var_1C], 2
		call	sub_67E169F0
		sub	esp, 4
		mov	[esp+1Ch+arg_0], ebx
		mov	ds:dword_67E349C8, eax
		add	esp, 18h
		pop	ebx
		jmp	eax
sub_67E169B0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E169F0	proc near		; CODE XREF: sub_67E16950+4Fp
					; sub_67E169B0+27p

lpBuffer	= dword	ptr -27Ch
uSize		= dword	ptr -278h
var_260		= dword	ptr -260h
var_250		= dword	ptr -250h
Dest		= byte ptr -245h
Buffer		= byte ptr -139h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= byte ptr -1Ch
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= word ptr  4

		sub	esp, 27Ch
		mov	eax, ds:dword_67E349CC
		mov	[esp+27Ch+var_10], ebx
		movzx	ebx, [esp+27Ch+arg_0]
		mov	[esp+27Ch+var_C], esi
		mov	[esp+27Ch+var_8], edi
		test	eax, eax
		mov	[esp+27Ch+var_4], ebp
		jz	short loc_67E16A52

loc_67E16A23:				; CODE XREF: sub_67E169F0+8Bj
		movzx	ebx, bx
		mov	esi, [esp+27Ch+var_C]
		mov	eax, off_67E19034[ebx*8]
		mov	ebx, [esp+27Ch+var_10]
		mov	edi, [esp+27Ch+var_8]
		mov	ebp, [esp+27Ch+var_4]
		add	esp, 27Ch
		retn	4
; ---------------------------------------------------------------------------

loc_67E16A52:				; CODE XREF: sub_67E169F0+31j
		lea	ebp, [esp+27Ch+Buffer]
		mov	[esp+27Ch+uSize], 104h ; uSize
		mov	[esp+27Ch+lpBuffer], ebp ; lpBuffer
		call	ds:GetSystemDirectoryA
		sub	esp, 8
		test	eax, eax
		jnz	short loc_67E16A80

loc_67E16A71:				; CODE XREF: sub_67E169F0+18Dj
					; sub_67E169F0+1B6j ...
		mov	ds:dword_67E349CC, 1
		jmp	short loc_67E16A23
; ---------------------------------------------------------------------------
		align 10h

loc_67E16A80:				; CODE XREF: sub_67E169F0+7Fj
		lea	eax, [esp+27Ch+Dest]
		mov	[esp+27Ch+uSize], ebp ;	Source
		mov	[esp+27Ch+lpBuffer], eax ; Dest
		call	strcpy
		lea	edx, [esp+27Ch+Dest]
		mov	[esp+27Ch+lpBuffer], edx ; Str
		call	strlen
		lea	edx, [esp+27Ch+Dest]
		lea	eax, [edx+eax]
		mov	dword ptr [eax], 3273775Ch
		mov	dword ptr [eax+4], 32335Fh
		mov	eax, ds:LoadLibraryA
		mov	[esp+27Ch+lpBuffer], edx ; lpLibFileName
		mov	[esp+27Ch+var_250], eax
		call	eax ; LoadLibraryA
		sub	esp, 4
		test	eax, eax
		mov	esi, eax
		jz	loc_67E16BB7
		mov	edi, ds:GetProcAddress
		mov	[esp+27Ch+uSize], offset aGetaddrinfo ;	"getaddrinfo"
		mov	[esp+27Ch+lpBuffer], eax ; hModule
		call	edi ; GetProcAddress
		sub	esp, 8
		test	eax, eax
		jz	loc_67E16BAB

loc_67E16AE9:				; CODE XREF: sub_67E169F0+223j
		lea	eax, [esp+27Ch+var_1C]
		mov	[esp+27Ch+var_260], eax
		mov	eax, offset aGetaddrinfo ; "getaddrinfo"
		mov	[esp+27Ch+var_34], offset aGetaddrinfo ; "getaddrinfo"
		lea	ebp, [esp+27Ch+var_34]
		mov	[esp+27Ch+var_30], offset sub_67E16C20
		mov	[esp+27Ch+var_2C], offset aGetnameinfo ; "getnameinfo"
		mov	[esp+27Ch+var_28], offset sub_67E16FE0
		mov	[esp+27Ch+var_24], offset aFreeaddrinfo	; "freeaddrinfo"
		mov	[esp+27Ch+var_20], offset sub_67E17220
		mov	[esp+27Ch+uSize], eax ;	lpProcName
		mov	[esp+27Ch+lpBuffer], esi ; hModule
		call	edi ; GetProcAddress
		sub	esp, 8
		test	eax, eax
		jz	short loc_67E16B71

loc_67E16B52:				; CODE XREF: sub_67E169F0+17Fj
		mov	[ebp+4], eax
		add	ebp, 8
		cmp	ebp, [esp+27Ch+var_260]
		jz	short loc_67E16B82
		mov	eax, [ebp+0]
		mov	[esp+27Ch+lpBuffer], esi ; hModule
		mov	[esp+27Ch+uSize], eax ;	lpProcName
		call	edi ; GetProcAddress
		sub	esp, 8
		test	eax, eax
		jnz	short loc_67E16B52

loc_67E16B71:				; CODE XREF: sub_67E169F0+160j
					; sub_67E169F0+229j
		mov	[esp+27Ch+lpBuffer], esi ; hLibModule
		call	ds:FreeLibrary
		sub	esp, 4
		jmp	loc_67E16A71
; ---------------------------------------------------------------------------

loc_67E16B82:				; CODE XREF: sub_67E169F0+16Cj
		mov	eax, [esp+27Ch+var_30]
		mov	off_67E19034, eax
		mov	eax, [esp+27Ch+var_28]
		mov	off_67E1903C, eax
		mov	eax, [esp+27Ch+var_20]
		mov	off_67E19044, eax
		jmp	loc_67E16A71
; ---------------------------------------------------------------------------

loc_67E16BAB:				; CODE XREF: sub_67E169F0+F3j
		mov	[esp+27Ch+lpBuffer], esi ; hLibModule
		call	ds:FreeLibrary
		sub	esp, 4

loc_67E16BB7:				; CODE XREF: sub_67E169F0+D5j
		lea	edx, [esp+27Ch+Dest]
		mov	[esp+27Ch+lpBuffer], edx ; Dest
		mov	[esp+27Ch+uSize], ebp ;	Source
		call	strcpy
		lea	eax, [esp+27Ch+Dest]
		mov	[esp+27Ch+lpBuffer], eax ; Str
		call	strlen
		lea	edx, [esp+27Ch+Dest]
		lea	eax, [edx+eax]
		mov	dword ptr [eax], 6873775Ch
		mov	dword ptr [eax+4], 367069h
		mov	[esp+27Ch+lpBuffer], edx
		call	[esp+27Ch+var_250]
		sub	esp, 4
		test	eax, eax
		mov	esi, eax
		jz	loc_67E16A71
		mov	edi, ds:GetProcAddress
		mov	[esp+27Ch+uSize], offset aGetaddrinfo ;	"getaddrinfo"
		mov	[esp+27Ch+lpBuffer], eax ; hModule
		call	edi ; GetProcAddress
		sub	esp, 8
		test	eax, eax
		jnz	loc_67E16AE9
		jmp	loc_67E16B71
sub_67E169F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	sub_67E16C20(char *, char *name, int, int)
sub_67E16C20	proc near		; DATA XREF: sub_67E169F0+11Bo
					; .data:off_67E19034o

Str		= dword	ptr -6Ch
EndPtr		= dword	ptr -68h
Radix		= dword	ptr -64h
var_60		= word ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_44		= byte ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_36		= word ptr -36h
var_34		= dword	ptr -34h
var_2D		= byte ptr -2Dh
var_24		= dword	ptr -24h
in		= in_addr ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
name		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 6Ch
		mov	[esp+6Ch+var_8], edi
		mov	edi, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_10], ebx
		mov	ebx, [esp+6Ch+name]
		mov	[esp+6Ch+var_C], esi
		mov	esi, [esp+6Ch+arg_C]
		mov	[esp+6Ch+var_4], ebp
		mov	ecx, [esp+6Ch+arg_8]
		test	edi, edi
		setz	dl
		test	ebx, ebx
		mov	dword ptr [esi], 0
		jz	short loc_67E16C83

loc_67E16C52:				; CODE XREF: sub_67E16C20+65j
		test	ecx, ecx
		jz	loc_67E16D86
		mov	eax, [ecx+10h]
		test	eax, eax
		jnz	short loc_67E16C68
		mov	ebp, [ecx+14h]
		test	ebp, ebp
		jz	short loc_67E16C90

loc_67E16C68:				; CODE XREF: sub_67E16C20+3Fj
					; sub_67E16C20+75j ...
		mov	eax, 2AFBh

loc_67E16C6D:				; CODE XREF: sub_67E16C20+6Cj
					; sub_67E16C20+A3j ...
		mov	ebx, [esp+6Ch+var_10]
		mov	esi, [esp+6Ch+var_C]
		mov	edi, [esp+6Ch+var_8]
		mov	ebp, [esp+6Ch+var_4]
		add	esp, 6Ch
		retn	10h
; ---------------------------------------------------------------------------

loc_67E16C83:				; CODE XREF: sub_67E16C20+30j
		test	dl, dl
		jz	short loc_67E16C52

loc_67E16C87:				; CODE XREF: sub_67E16C20+129j
		mov	eax, 2AF9h
		jmp	short loc_67E16C6D
; ---------------------------------------------------------------------------
		align 10h

loc_67E16C90:				; CODE XREF: sub_67E16C20+46j
		mov	eax, [ecx+18h]
		test	eax, eax
		jnz	short loc_67E16C68
		mov	ebp, [ecx+1Ch]
		test	ebp, ebp
		jnz	short loc_67E16C68
		mov	eax, [ecx]
		test	dl, dl
		mov	[esp+6Ch+var_3C], eax
		jnz	loc_67E16FAE

loc_67E16CAC:				; CODE XREF: sub_67E16C20+398j
		mov	ebp, [ecx+4]
		cmp	ebp, 2
		jnz	loc_67E16FC3

loc_67E16CB8:				; CODE XREF: sub_67E16C20+3AAj
		mov	ebp, [ecx+8]
		mov	eax, 273Ch
		cmp	ebp, 3
		ja	short loc_67E16C6D
		mov	ecx, [ecx+0Ch]
		mov	[esp+6Ch+var_34], ecx
		lea	esi, [esi+0]

loc_67E16CD0:				; CODE XREF: sub_67E16C20+178j
		test	ebx, ebx
		mov	[esp+6Ch+var_24], 0
		jz	loc_67E16DA0
		lea	eax, [esp+6Ch+var_24]
		mov	[esp+6Ch+var_44], dl
		mov	[esp+6Ch+Radix], 0Ah ; Radix
		mov	[esp+6Ch+EndPtr], eax ;	EndPtr
		mov	[esp+6Ch+Str], ebx ; Str
		call	strtoul
		movzx	edx, [esp+6Ch+var_44]
		mov	ecx, eax
		mov	eax, [esp+6Ch+var_24]
		cmp	byte ptr [eax],	0
		jz	loc_67E16ED4
		test	ebp, ebp
		setz	[esp+6Ch+var_2D]
		cmp	ebp, 2
		jz	loc_67E16F04
		cmp	[esp+6Ch+var_2D], 0
		jnz	loc_67E16F04

loc_67E16D2B:				; CODE XREF: sub_67E16C20+30Bj
		mov	[esp+6Ch+var_36], 0

loc_67E16D32:				; CODE XREF: sub_67E16C20+31Aj
		cmp	ebp, 1
		jbe	short loc_67E16D55

loc_67E16D37:				; CODE XREF: sub_67E16C20+15Cj
		xor	eax, eax

loc_67E16D39:				; CODE XREF: sub_67E16C20+164j
		test	cx, cx
		jnz	loc_67E16EA4
		test	ebp, ebp
		mov	eax, 277Dh
		jz	loc_67E16C87
		nop
		jmp	loc_67E16C6D
; ---------------------------------------------------------------------------

loc_67E16D55:				; CODE XREF: sub_67E16C20+115j
		mov	[esp+6Ch+var_44], dl
		mov	[esp+6Ch+var_40], ecx
		mov	[esp+6Ch+EndPtr], offset proto ; "tcp"
		mov	[esp+6Ch+Str], ebx ; name
		call	ds:getservbyname
		sub	esp, 8
		test	eax, eax
		movzx	edx, [esp+6Ch+var_44]
		mov	ecx, [esp+6Ch+var_40]
		jz	short loc_67E16D37
		movzx	ecx, word ptr [eax+8]
		mov	eax, ecx
		jmp	short loc_67E16D39
; ---------------------------------------------------------------------------

loc_67E16D86:				; CODE XREF: sub_67E16C20+34j
		mov	[esp+6Ch+var_34], 0
		xor	ebp, ebp
		mov	[esp+6Ch+var_3C], 0
		jmp	loc_67E16CD0
; ---------------------------------------------------------------------------
		align 10h

loc_67E16DA0:				; CODE XREF: sub_67E16C20+BAj
		xor	ecx, ecx
		mov	[esp+6Ch+var_36], 0

loc_67E16DA9:				; CODE XREF: sub_67E16C20+28Bj
					; sub_67E16C20+2AFj ...
		test	dl, dl
		jnz	loc_67E16F80
		lea	eax, [esp+6Ch+in]
		mov	[esp+6Ch+var_40], ecx
		mov	[esp+6Ch+EndPtr], eax ;	int
		mov	[esp+6Ch+Str], edi ; char *
		call	sub_67E17270
		sub	esp, 8
		test	eax, eax
		mov	ecx, [esp+6Ch+var_40]
		jz	loc_67E16E90
		mov	eax, dword ptr [esp+6Ch+in.S_un]

loc_67E16DD8:				; CODE XREF: sub_67E16C20+389j
		mov	dword ptr [esp+6Ch+var_60], eax
		mov	eax, [esp+6Ch+var_34]
		movzx	ecx, cx
		mov	[esp+6Ch+Str], ebp
		mov	[esp+6Ch+Radix], ecx
		mov	[esp+6Ch+EndPtr], eax
		call	sub_67E172D0
		xor	edx, edx
		mov	ebp, eax
		sub	esp, 10h
		test	ebp, ebp
		mov	[esi], eax
		mov	eax, 8
		jz	short loc_67E16E40
		test	edi, edi
		jz	short loc_67E16E14
		or	dword ptr [ebp+0], 4
		test	byte ptr [esp+6Ch+var_3C], 2
		jnz	short loc_67E16E5E

loc_67E16E14:				; CODE XREF: sub_67E16C20+1E7j
					; sub_67E16C20+263j
		xor	eax, eax

loc_67E16E16:				; CODE XREF: sub_67E16C20+354j
		test	ebx, ebx
		jz	short loc_67E16E30
		mov	eax, [esi]
		mov	[esp+6Ch+EndPtr], eax
		movzx	eax, [esp+6Ch+var_36]
		mov	[esp+6Ch+Str], eax
		call	sub_67E17350
		sub	esp, 8

loc_67E16E30:				; CODE XREF: sub_67E16C20+1F8j
					; sub_67E16C20+34Ej
		test	eax, eax
		jz	loc_67E16C6D
		mov	edx, [esi]
		lea	esi, [esi+0]

loc_67E16E40:				; CODE XREF: sub_67E16C20+1E3j
					; sub_67E16C20+26Aj ...
		mov	[esp+6Ch+var_40], eax
		mov	[esp+6Ch+Str], edx ; void *
		call	sub_67E17220
		mov	dword ptr [esi], 0
		sub	esp, 4
		mov	eax, [esp+6Ch+var_40]
		jmp	loc_67E16C6D
; ---------------------------------------------------------------------------

loc_67E16E5E:				; CODE XREF: sub_67E16C20+1F2j
		mov	eax, dword ptr [esp+6Ch+in.S_un]
		mov	[esp+6Ch+Str], eax ; in
		call	ds:inet_ntoa
		sub	esp, 4
		mov	[esp+6Ch+Str], eax ; Source
		call	sub_67E173C0
		mov	edx, [esi]
		mov	[ebp+14h], eax
		mov	eax, [edx+14h]
		sub	esp, 4
		test	eax, eax
		jnz	short loc_67E16E14
		mov	eax, 8
		jmp	short loc_67E16E40
; ---------------------------------------------------------------------------
		align 10h

loc_67E16E90:				; CODE XREF: sub_67E16C20+1AEj
		test	byte ptr [esp+6Ch+var_3C], 4
		jz	loc_67E16F3F
		mov	eax, 2AF9h
		mov	edx, [esi]
		jmp	short loc_67E16E40
; ---------------------------------------------------------------------------

loc_67E16EA4:				; CODE XREF: sub_67E16C20+11Cj
		xor	ebx, ebx
		cmp	[esp+6Ch+var_2D], 0
		jz	loc_67E16DA9
		cmp	ax, 1
		sbb	ebp, ebp
		not	ebp
		add	ebp, 2
		test	ax, ax
		setnz	al
		xor	ebx, ebx
		cmp	[esp+6Ch+var_36], 0
		setnz	bl
		and	ebx, eax
		jmp	loc_67E16DA9
; ---------------------------------------------------------------------------

loc_67E16ED4:				; CODE XREF: sub_67E16C20+EAj
		movzx	ecx, cx
		xor	ebx, ebx
		mov	[esp+6Ch+Str], ecx ; hostshort
		call	ds:htons
		sub	esp, 4
		test	ebp, ebp
		mov	[esp+6Ch+var_36], ax
		mov	ecx, eax
		movzx	edx, [esp+6Ch+var_44]
		jnz	loc_67E16DA9
		mov	bl, 1
		mov	bp, 1
		jmp	loc_67E16DA9
; ---------------------------------------------------------------------------

loc_67E16F04:				; CODE XREF: sub_67E16C20+FAj
					; sub_67E16C20+105j
		mov	[esp+6Ch+var_44], dl
		mov	[esp+6Ch+var_40], ecx
		mov	[esp+6Ch+EndPtr], offset aUdp ;	"udp"
		mov	[esp+6Ch+Str], ebx ; name
		call	ds:getservbyname
		sub	esp, 8
		test	eax, eax
		movzx	edx, [esp+6Ch+var_44]
		mov	ecx, [esp+6Ch+var_40]
		jz	loc_67E16D2B
		movzx	ecx, word ptr [eax+8]
		mov	[esp+6Ch+var_36], cx
		jmp	loc_67E16D32
; ---------------------------------------------------------------------------

loc_67E16F3F:				; CODE XREF: sub_67E16C20+275j
		mov	eax, [esp+6Ch+var_3C]
		movzx	ecx, cx
		mov	[esp+6Ch+var_58], esi ;	int
		mov	dword ptr [esp+6Ch+var_60], ecx	; __int16
		mov	[esp+6Ch+EndPtr], ebp ;	int
		and	eax, 2
		mov	[esp+6Ch+var_5C], eax ;	int
		mov	eax, [esp+6Ch+var_34]
		mov	[esp+6Ch+Str], edi ; char *
		mov	[esp+6Ch+Radix], eax ; int
		call	sub_67E17430
		sub	esp, 18h
		test	eax, eax
		jnz	loc_67E16E30
		jmp	loc_67E16E16
; ---------------------------------------------------------------------------
		align 10h

loc_67E16F80:				; CODE XREF: sub_67E16C20+18Bj
		mov	eax, [esp+6Ch+var_3C]
		mov	[esp+6Ch+var_40], ecx
		and	eax, 1
		cmp	eax, 1
		sbb	eax, eax
		and	eax, 7F000001h
		mov	[esp+6Ch+Str], eax ; hostlong
		call	ds:htonl
		sub	esp, 4
		mov	dword ptr [esp+6Ch+in.S_un], eax
		mov	ecx, [esp+6Ch+var_40]
		jmp	loc_67E16DD8
; ---------------------------------------------------------------------------

loc_67E16FAE:				; CODE XREF: sub_67E16C20+86j
		test	byte ptr [esp+6Ch+var_3C], 2
		mov	eax, 2726h
		jz	loc_67E16CAC
		jmp	loc_67E16C6D
; ---------------------------------------------------------------------------

loc_67E16FC3:				; CODE XREF: sub_67E16C20+92j
		test	ebp, ebp
		mov	eax, 273Fh
		jz	loc_67E16CB8
		jmp	loc_67E16C6D
sub_67E16C20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	sub_67E16FE0(int, int, char *, int, char *, int, int)
sub_67E16FE0	proc near		; DATA XREF: sub_67E169F0+131o
					; .data:off_67E1903Co

netshort	= word ptr -4Ch
Format		= dword	ptr -48h
type		= dword	ptr -44h
Str		= dword	ptr -30h
Dest		= byte ptr -26h
var_22		= word ptr -22h
addr		= byte ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch

		sub	esp, 4Ch
		cmp	[esp+4Ch+arg_4], 0Fh
		mov	[esp+4Ch+var_10], ebx
		mov	ebx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_C], esi
		mov	esi, [esp+4Ch+arg_18]
		mov	[esp+4Ch+var_8], edi
		mov	edi, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_4], ebp
		mov	ebp, [esp+4Ch+arg_14]
		jle	loc_67E17090
		test	ebx, ebx
		jz	short loc_67E17090
		mov	dword ptr [esp+4Ch+Dest], 33353536h
		mov	eax, 273Fh
		mov	[esp+4Ch+var_22], 35h
		cmp	word ptr [ebx],	2
		jz	short loc_67E17097

loc_67E1702C:				; CODE XREF: sub_67E16FE0+B5j
					; sub_67E16FE0+D4j ...
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn	1Ch
; ---------------------------------------------------------------------------

loc_67E17042:				; CODE XREF: sub_67E16FE0+F8j
		movzx	ecx, cx

loc_67E17045:				; CODE XREF: sub_67E16FE0+12Cj
					; sub_67E16FE0+13Cj
		mov	dword ptr [esp+4Ch+netshort], ecx ; netshort
		call	ds:ntohs
		sub	esp, 4
		movzx	eax, ax
		lea	edx, [esp+4Ch+Dest]
		mov	dword ptr [esp+4Ch+netshort], edx ; Dest
		mov	[esp+4Ch+Str], edx
		mov	[esp+4Ch+type],	eax
		mov	[esp+4Ch+Format], offset aU ; "%u"
		call	sprintf
		mov	edx, [esp+4Ch+Str]

loc_67E17074:				; CODE XREF: sub_67E16FE0+136j
		mov	dword ptr [esp+4Ch+netshort], edx ; Str
		mov	[esp+4Ch+Str], edx
		call	strlen
		mov	edx, [esp+4Ch+Str]
		cmp	ebp, eax
		ja	loc_67E17140
		lea	esi, [esi+0]

loc_67E17090:				; CODE XREF: sub_67E16FE0+28j
					; sub_67E16FE0+30j ...
		mov	eax, 2AFBh
		jmp	short loc_67E1702C
; ---------------------------------------------------------------------------

loc_67E17097:				; CODE XREF: sub_67E16FE0+4Aj
		test	edi, edi
		jz	loc_67E17121
		mov	eax, [esp+4Ch+arg_8]
		test	eax, eax
		jz	short loc_67E17121

loc_67E170A7:				; CODE XREF: sub_67E16FE0+14Bj
		mov	edx, esi
		mov	eax, 2726h
		and	edx, 6
		cmp	edx, 6
		jz	loc_67E1702C
		test	ebp, ebp
		jz	loc_67E17150
		mov	edx, [esp+4Ch+arg_10]
		test	edx, edx
		jz	loc_67E17150
		test	esi, 8
		movzx	ecx, word ptr [ebx+2]
		jnz	loc_67E17042
		mov	eax, esi
		movzx	ecx, cx
		and	eax, 10h
		cmp	eax, 1
		sbb	eax, eax
		not	eax
		and	eax, offset aUdp_0 ; "udp"
		mov	dword ptr [esp+4Ch+netshort], ecx ; port
		mov	[esp+4Ch+Str], ecx
		mov	[esp+4Ch+Format], eax ;	proto
		call	ds:getservbyport
		sub	esp, 8
		test	eax, eax
		mov	ecx, [esp+4Ch+Str]
		jz	loc_67E17045
		mov	edx, [eax]
		test	edx, edx
		jnz	loc_67E17074
		jmp	loc_67E17045
; ---------------------------------------------------------------------------

loc_67E17121:				; CODE XREF: sub_67E16FE0+B9j
					; sub_67E16FE0+C5j
		test	ebp, ebp
		jz	short loc_67E17131
		mov	ecx, [esp+4Ch+arg_10]
		test	ecx, ecx
		jnz	loc_67E170A7

loc_67E17131:				; CODE XREF: sub_67E16FE0+143j
					; sub_67E16FE0+22Ej
		mov	eax, 2AF9h
		jmp	loc_67E1702C
; ---------------------------------------------------------------------------
		align 10h

loc_67E17140:				; CODE XREF: sub_67E16FE0+A6j
		mov	eax, [esp+4Ch+arg_10]
		mov	[esp+4Ch+Format], edx ;	Source
		mov	dword ptr [esp+4Ch+netshort], eax ; Dest
		call	strcpy

loc_67E17150:				; CODE XREF: sub_67E16FE0+DCj
					; sub_67E16FE0+E8j
		test	edi, edi
		jz	short loc_67E17199
		mov	eax, [esp+4Ch+arg_8]
		test	eax, eax
		jz	short loc_67E17199
		mov	eax, [ebx+4]
		test	esi, 2
		mov	dword ptr [esp+4Ch+addr], eax
		jz	short loc_67E171A0

loc_67E1716B:				; CODE XREF: sub_67E16FE0+216j
		mov	dword ptr [esp+4Ch+netshort], eax ; in
		call	ds:inet_ntoa
		sub	esp, 4
		mov	ebx, eax

loc_67E17179:				; CODE XREF: sub_67E16FE0+1EDj
					; sub_67E16FE0+201j ...
		mov	dword ptr [esp+4Ch+netshort], ebx ; Str
		call	strlen
		cmp	edi, eax
		jbe	loc_67E17090
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+Format], ebx ;	Source
		mov	dword ptr [esp+4Ch+netshort], eax ; Dest
		call	strcpy

loc_67E17199:				; CODE XREF: sub_67E16FE0+172j
					; sub_67E16FE0+17Aj
		xor	eax, eax
		jmp	loc_67E1702C
; ---------------------------------------------------------------------------

loc_67E171A0:				; CODE XREF: sub_67E16FE0+189j
		lea	eax, [esp+4Ch+addr]
		mov	[esp+4Ch+type],	2 ; type
		mov	[esp+4Ch+Format], 4 ; len
		mov	dword ptr [esp+4Ch+netshort], eax ; addr
		call	ds:gethostbyaddr
		sub	esp, 0Ch
		test	eax, eax
		jz	short loc_67E171E8
		mov	ebx, [eax]
		test	ebx, ebx
		jz	short loc_67E171E8
		and	esi, 1
		jz	short loc_67E17179
		mov	[esp+4Ch+Format], 2Eh ;	Val
		mov	dword ptr [esp+4Ch+netshort], ebx ; Str
		call	strchr
		test	eax, eax
		jz	short loc_67E17179
		mov	byte ptr [eax],	0
		jmp	short loc_67E17179
; ---------------------------------------------------------------------------

loc_67E171E8:				; CODE XREF: sub_67E16FE0+1E2j
					; sub_67E16FE0+1E8j
		and	esi, 4
		nop
		lea	esi, [esi+0]
		jnz	short loc_67E171FB
		mov	eax, dword ptr [esp+4Ch+addr]
		jmp	loc_67E1716B
; ---------------------------------------------------------------------------

loc_67E171FB:				; CODE XREF: sub_67E16FE0+210j
		nop
		lea	esi, [esi+0]
		call	ds:WSAGetLastError
		sub	eax, 2AF9h
		cmp	eax, 2
		ja	loc_67E17131
		mov	eax, ds:dword_67E33338[eax*4]
		jmp	loc_67E1702C
sub_67E16FE0	endp


; =============== S U B	R O U T	I N E =======================================


; int __stdcall	sub_67E17220(void *)
sub_67E17220	proc near		; CODE XREF: sub_67E16C20+227p
					; DATA XREF: sub_67E169F0+147o	...

Memory		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_0]
		test	ebx, ebx
		jz	short loc_67E1725F
		lea	esi, [esi+0]

loc_67E17230:				; CODE XREF: sub_67E17220+3Dj
		mov	eax, [ebx+14h]
		test	eax, eax
		jz	short loc_67E1723F
		mov	[esp+1Ch+Memory], eax ;	Memory
		call	free

loc_67E1723F:				; CODE XREF: sub_67E17220+15j
		mov	eax, [ebx+18h]
		test	eax, eax
		jz	short loc_67E1724E
		mov	[esp+1Ch+Memory], eax ;	Memory
		call	free

loc_67E1724E:				; CODE XREF: sub_67E17220+24j
		mov	esi, [ebx+1Ch]
		mov	[esp+1Ch+Memory], ebx ;	Memory
		call	free
		test	esi, esi
		mov	ebx, esi
		jnz	short loc_67E17230

loc_67E1725F:				; CODE XREF: sub_67E17220+Bj
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	4
sub_67E17220	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	sub_67E17270(char *, int)
sub_67E17270	proc near		; CODE XREF: sub_67E16C20+1A0p

cp		= dword	ptr -1Ch
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx
		sub	esp, 18h
		mov	ebx, [esp+1Ch+arg_0]
		movzx	eax, byte ptr [ebx]
		test	al, al
		jz	short loc_67E1729C
		mov	edx, ebx
		xor	ecx, ecx

loc_67E17283:				; CODE XREF: sub_67E17270+25j
		cmp	al, 2Eh
		setz	al
		add	edx, 1
		movzx	eax, al
		add	ecx, eax
		movzx	eax, byte ptr [edx]
		test	al, al
		jnz	short loc_67E17283
		cmp	ecx, 3
		jz	short loc_67E172A5

loc_67E1729C:				; CODE XREF: sub_67E17270+Dj
					; sub_67E17270+44j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn	8
; ---------------------------------------------------------------------------

loc_67E172A5:				; CODE XREF: sub_67E17270+2Aj
		mov	[esp+1Ch+cp], ebx ; cp
		call	ds:inet_addr
		sub	esp, 4
		cmp	eax, 0FFFFFFFFh
		jz	short loc_67E1729C
		mov	edx, [esp+1Ch+arg_4]
		mov	[edx], eax
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn	8
sub_67E17270	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E172D0	proc near		; CODE XREF: sub_67E16C20+1CEp
					; sub_67E17350+43p ...

NumOfElements	= dword	ptr -1Ch
SizeOfElements	= dword	ptr -18h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi
		push	ebx
		sub	esp, 14h
		mov	esi, [esp+1Ch+arg_8]
		mov	[esp+1Ch+SizeOfElements], 20h ;	SizeOfElements
		mov	[esp+1Ch+NumOfElements], 1 ; NumOfElements
		call	calloc
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67E1733A
		mov	[esp+1Ch+SizeOfElements], 10h ;	SizeOfElements
		mov	[esp+1Ch+NumOfElements], 1 ; NumOfElements
		call	calloc
		test	eax, eax
		jz	short loc_67E17344
		mov	edx, [esp+1Ch+arg_C]
		mov	word ptr [eax],	2
		mov	[eax+2], si
		mov	[eax+4], edx
		mov	dword ptr [ebx+4], 2
		mov	edx, [esp+1Ch+arg_0]
		mov	[ebx+18h], eax
		mov	[ebx+8], edx
		mov	edx, [esp+1Ch+arg_4]
		mov	dword ptr [ebx+10h], 10h
		mov	[ebx+0Ch], edx

loc_67E1733A:				; CODE XREF: sub_67E172D0+21j
					; sub_67E172D0+7Ej
		mov	eax, ebx
		add	esp, 14h
		pop	ebx
		pop	esi
		retn	10h
; ---------------------------------------------------------------------------

loc_67E17344:				; CODE XREF: sub_67E172D0+39j
		mov	[esp+1Ch+NumOfElements], ebx ; Memory
		xor	ebx, ebx
		call	free
		jmp	short loc_67E1733A
sub_67E172D0	endp


; =============== S U B	R O U T	I N E =======================================


sub_67E17350	proc near		; CODE XREF: sub_67E16C20+208p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= word ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, [esp+1Ch+arg_4]
		movzx	esi, [esp+1Ch+arg_0]
		test	ebx, ebx
		jz	short loc_67E173B0
		movzx	esi, si
		jmp	short loc_67E17377
; ---------------------------------------------------------------------------

loc_67E17367:				; CODE XREF: sub_67E17350+4Dj
		mov	edx, [ebx+1Ch]
		mov	[eax+1Ch], edx
		mov	[ebx+1Ch], eax
		mov	ebx, [eax+1Ch]
		test	ebx, ebx
		jz	short loc_67E173B0

loc_67E17377:				; CODE XREF: sub_67E17350+15j
		mov	eax, [ebx+18h]
		mov	eax, [eax+4]
		mov	[esp+1Ch+var_14], esi
		mov	[esp+1Ch+var_10], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+1Ch+var_1C], 2
		mov	[esp+1Ch+var_18], eax
		call	sub_67E172D0
		sub	esp, 10h
		test	eax, eax
		jnz	short loc_67E17367
		add	esp, 14h
		mov	al, 8
		pop	ebx
		pop	esi
		retn	8
; ---------------------------------------------------------------------------
		align 10h

loc_67E173B0:				; CODE XREF: sub_67E17350+10j
					; sub_67E17350+25j
		add	esp, 14h
		xor	eax, eax
		pop	ebx
		pop	esi
		retn	8
sub_67E17350	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	sub_67E173C0(char *Source)
sub_67E173C0	proc near		; CODE XREF: sub_67E16C20+251p
					; sub_67E17430+175p

Str		= dword	ptr -1Ch
SizeOfElements	= dword	ptr -18h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
Source		= dword	ptr  4

		sub	esp, 1Ch
		mov	[esp+1Ch+var_4], esi
		mov	esi, [esp+1Ch+Source]
		mov	[esp+1Ch+var_8], ebx
		xor	ebx, ebx
		test	esi, esi
		jnz	short loc_67E173E5

loc_67E173D5:				; CODE XREF: sub_67E173C0+44j
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
; ---------------------------------------------------------------------------

loc_67E173E5:				; CODE XREF: sub_67E173C0+13j
		mov	[esp+1Ch+Str], esi ; Str
		call	strlen
		mov	[esp+1Ch+Str], 1 ; NumOfElements
		add	eax, 1
		mov	[esp+1Ch+SizeOfElements], eax ;	SizeOfElements
		call	calloc
		test	eax, eax
		mov	ebx, eax
		jz	short loc_67E173D5
		mov	[esp+1Ch+SizeOfElements], esi ;	Source
		mov	[esp+1Ch+Str], eax ; Dest
		call	strcpy
		mov	eax, ebx
		mov	esi, [esp+1Ch+var_4]
		mov	ebx, [esp+1Ch+var_8]
		add	esp, 1Ch
		retn	4
sub_67E173C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	sub_67E17430(char *, int, int, __int16,	int, int)
sub_67E17430	proc near		; CODE XREF: sub_67E16C20+344p

Dest		= dword	ptr -85Ch
Source		= dword	ptr -858h
Count		= dword	ptr -854h
var_850		= word ptr -850h
var_84C		= dword	ptr -84Ch
var_848		= dword	ptr -848h
var_834		= dword	ptr -834h
var_830		= word ptr -830h
Str2		= byte ptr -81Eh
var_81A		= word ptr -81Ah
var_818		= byte ptr -818h
Str1		= byte ptr -41Dh
var_419		= byte ptr -419h
var_418		= byte ptr -418h
var_1D		= byte ptr -1Dh
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= word ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebp
		mov	edx, 3FCh
		push	edi
		push	esi
		push	ebx
		sub	esp, 84Ch
		lea	edi, [esp+85Ch+var_418]
		movzx	ebx, [esp+85Ch+arg_C]
		test	edi, 2
		mov	dword ptr [esp+85Ch+Str1], 0
		mov	[esp+85Ch+var_419], 0
		jnz	loc_67E175D8

loc_67E1746D:				; CODE XREF: sub_67E17430+1B3j
		mov	ecx, edx
		xor	eax, eax
		shr	ecx, 2
		test	dl, 2
		rep stosd
		jz	short loc_67E17483
		mov	word ptr [edi],	0
		add	edi, 2

loc_67E17483:				; CODE XREF: sub_67E17430+49j
		and	edx, 1
		jz	short loc_67E1748B
		mov	byte ptr [edi],	0

loc_67E1748B:				; CODE XREF: sub_67E17430+56j
		mov	edx, 3FBh
		xor	eax, eax
		mov	ecx, edx
		shr	ecx, 2
		test	dl, 2
		lea	edi, [esp+85Ch+var_818]
		mov	dword ptr [esp+85Ch+Str2], 0
		mov	[esp+85Ch+var_81A], 0
		rep stosd
		jz	short loc_67E174B9
		mov	word ptr [edi],	0
		add	edi, 2

loc_67E174B9:				; CODE XREF: sub_67E17430+7Fj
		and	edx, 1
		jz	short loc_67E174C1
		mov	byte ptr [edi],	0

loc_67E174C1:				; CODE XREF: sub_67E17430+8Cj
		mov	eax, [esp+85Ch+arg_0]
		movzx	ebx, bx
		xor	esi, esi
		lea	edi, [esp+85Ch+Str1]
		mov	[esp+85Ch+Count], 400h ; Count
		mov	[esp+85Ch+Dest], edi ; Dest
		mov	[esp+85Ch+Source], eax ; Source
		call	strncpy
		mov	ebp, [esp+85Ch+arg_14]
		mov	dword ptr [esp+85Ch+var_830], ebx
		lea	ebx, [esp+85Ch+Str2]
		mov	[esp+85Ch+var_1D], 0
		jmp	short loc_67E17508
; ---------------------------------------------------------------------------

loc_67E17501:				; CODE XREF: sub_67E17430+135j
		cmp	esi, 10h
		jz	short loc_67E17567
		mov	edi, edx

loc_67E17508:				; CODE XREF: sub_67E17430+CFj
		mov	edx, dword ptr [esp+85Ch+var_830]
		mov	eax, [esp+85Ch+arg_8]
		mov	[esp+85Ch+var_848], ebp	; int
		mov	[esp+85Ch+var_84C], ebx	; Dest
		mov	dword ptr [esp+85Ch+var_850], edx ; __int16
		mov	edx, [esp+85Ch+arg_4]
		mov	[esp+85Ch+Count], eax ;	int
		mov	eax, [esp+85Ch+arg_0]
		mov	[esp+85Ch+Source], edx ; int
		mov	[esp+85Ch+Dest], eax ; char *
		call	sub_67E175F0
		sub	esp, 18h
		test	eax, eax
		jnz	short loc_67E17580
		mov	edx, [ebp+0]
		test	edx, edx
		jnz	short loc_67E17591
		cmp	byte ptr [ebx],	0
		jz	short loc_67E17567
		mov	[esp+85Ch+Source], ebx ; Str2
		add	esi, 1
		mov	[esp+85Ch+Dest], edi ; Str1
		call	strcmp
		mov	edx, ebx
		mov	ebx, edi
		test	eax, eax
		jnz	short loc_67E17501

loc_67E17567:				; CODE XREF: sub_67E17430+D4j
					; sub_67E17430+11Ej
		mov	ebp, 2AFBh

loc_67E1756C:				; CODE XREF: sub_67E17430+16Cj
					; sub_67E17430+192j
		add	esp, 84Ch
		mov	eax, ebp
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	18h
; ---------------------------------------------------------------------------
		align 10h

loc_67E17580:				; CODE XREF: sub_67E17430+112j
		mov	ebp, eax
		add	esp, 84Ch
		mov	eax, ebp
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	18h
; ---------------------------------------------------------------------------

loc_67E17591:				; CODE XREF: sub_67E17430+119j
		mov	ecx, [esp+85Ch+arg_10]
		mov	ebp, eax
		test	ecx, ecx
		jz	short loc_67E1756C
		mov	[esp+85Ch+var_834], edx
		mov	[esp+85Ch+Dest], ebx ; Source
		call	sub_67E173C0
		sub	esp, 4
		mov	edx, [esp+85Ch+var_834]
		mov	[edx+14h], eax
		mov	edx, [esp+85Ch+arg_14]
		mov	eax, [edx]
		mov	eax, [eax+14h]
		test	eax, eax
		jnz	short loc_67E1756C
		mov	ebp, 8
		add	esp, 84Ch
		mov	eax, ebp
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	18h
; ---------------------------------------------------------------------------

loc_67E175D8:				; CODE XREF: sub_67E17430+37j
		mov	word ptr [edi],	0
		sub	edx, 2
		add	edi, 2
		jmp	loc_67E1746D
sub_67E17430	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	sub_67E175F0(char *, int, int, __int16,	char *Dest, int)
sub_67E175F0	proc near		; CODE XREF: sub_67E17430+108p

name		= dword	ptr -3Ch
Source		= dword	ptr -38h
Count		= dword	ptr -34h
var_30		= dword	ptr -30h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= word ptr  10h
Dest		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, [esp+3Ch+arg_14]
		mov	edx, [esp+3Ch+Dest]
		mov	edi, [esp+3Ch+arg_4]
		mov	ebp, [esp+3Ch+arg_8]
		mov	dword ptr [eax], 0
		movzx	esi, [esp+3Ch+arg_C]
		mov	byte ptr [edx],	0
		mov	eax, [esp+3Ch+arg_0]
		mov	[esp+3Ch+name],	eax ; name
		call	ds:gethostbyname
		sub	esp, 4
		test	eax, eax
		mov	[esp+3Ch+var_20], eax
		jz	loc_67E176C5
		cmp	dword ptr [eax+8], 40002h
		jnz	short loc_67E17690
		mov	ebx, [eax+0Ch]
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_67E17690
		movzx	eax, si
		mov	esi, [esp+3Ch+arg_14]
		mov	[esp+3Ch+var_24], ebp
		mov	ebp, edi
		mov	edi, eax
		jmp	short loc_67E17660
; ---------------------------------------------------------------------------

loc_67E17654:				; CODE XREF: sub_67E175F0+91j
		add	ebx, 4
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_67E17690
		lea	esi, [eax+1Ch]

loc_67E17660:				; CODE XREF: sub_67E175F0+62j
		mov	eax, [edx]
		mov	[esp+3Ch+Count], edi
		mov	[esp+3Ch+name],	ebp
		mov	[esp+3Ch+var_30], eax
		mov	eax, [esp+3Ch+var_24]
		mov	[esp+3Ch+Source], eax
		call	sub_67E172D0
		sub	esp, 10h
		test	eax, eax
		mov	[esi], eax
		jnz	short loc_67E17654
		add	esp, 2Ch
		mov	al, 8
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	18h
; ---------------------------------------------------------------------------
		align 10h

loc_67E17690:				; CODE XREF: sub_67E175F0+48j
					; sub_67E175F0+51j ...
		mov	edx, [esp+3Ch+var_20]
		mov	[esp+3Ch+Count], 400h ;	Count
		mov	eax, [edx]
		mov	[esp+3Ch+Source], eax ;	Source
		mov	eax, [esp+3Ch+Dest]
		mov	[esp+3Ch+name],	eax ; Dest
		call	strncpy
		mov	edx, [esp+3Ch+Dest]
		xor	eax, eax
		mov	byte ptr [edx+400h], 0

loc_67E176BB:				; CODE XREF: sub_67E175F0+E9j
					; sub_67E175F0+F2j
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	18h
; ---------------------------------------------------------------------------

loc_67E176C5:				; CODE XREF: sub_67E175F0+3Bj
		call	ds:WSAGetLastError
		lea	edx, [eax-2AF9h]
		mov	eax, 2AF9h
		cmp	edx, 3
		ja	short loc_67E176BB
		mov	eax, ds:dword_67E33344[edx*4]
		jmp	short loc_67E176BB
sub_67E175F0	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ConvertSidToStringSidA]
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E17700(_onexit_t)
sub_67E17700	proc near		; CODE XREF: sub_67E177C0+Ap

Func		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	eax, ds:dword_67E34DA8
		mov	ebx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+Func],	eax
		call	sub_67E178C0
		cmp	eax, 0FFFFFFFFh
		mov	[esp+2Ch+var_10], eax
		jz	loc_67E177A0
		mov	[esp+2Ch+Func],	8
		call	_lock
		mov	eax, ds:dword_67E34DA8
		mov	[esp+2Ch+Func],	eax
		call	sub_67E178C0
		mov	[esp+2Ch+var_10], eax
		mov	eax, ds:dword_67E34DA4
		mov	[esp+2Ch+Func],	eax
		call	sub_67E178C0
		mov	[esp+2Ch+Func],	ebx
		mov	[esp+2Ch+var_14], eax
		lea	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+var_24], eax
		lea	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_28], eax
		call	__dllonexit
		mov	ebx, eax
		mov	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+Func],	eax
		call	sub_67E178D0
		mov	ds:dword_67E34DA8, eax
		mov	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+Func],	eax
		call	sub_67E178D0
		mov	[esp+2Ch+Func],	8
		mov	ds:dword_67E34DA4, eax
		call	_unlock
		mov	eax, ebx
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E177A0:				; CODE XREF: sub_67E17700+1Cj
		mov	[esp+2Ch+Func],	ebx ; Func
		call	ds:_onexit
		add	esp, 28h
		mov	ebx, eax
		mov	eax, ebx
		pop	ebx
		retn
sub_67E17700	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E177C0(_onexit_t)
sub_67E177C0	proc near		; CODE XREF: sub_67E17DA0-2Fp
					; sub_67E18CA0+12p

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax ;	_onexit_t
		call	sub_67E17700
		cmp	eax, 1
		sbb	eax, eax
		add	esp, 1Ch
		retn
sub_67E177C0	endp

; ---------------------------------------------------------------------------
		align 10h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


		public TlsCallback_1
TlsCallback_1	proc near		; DATA XREF: .CRT:67E3A01Co

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		test	eax, eax
		jz	short loc_67E17810
		cmp	eax, 3
		jz	short loc_67E17810
		mov	eax, 1
		add	esp, 1Ch
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_67E17810:				; CODE XREF: TlsCallback_1+9j
					; TlsCallback_1+Ej
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], edx
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E17FB0
		mov	eax, 1
		add	esp, 1Ch
		retn	0Ch
TlsCallback_1	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


		public TlsCallback_0
TlsCallback_0	proc near		; CODE XREF: sub_67DC1040+117p
					; DATA XREF: .rdata:off_67E33354o ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		cmp	dword_67E19054,	2
		mov	eax, [esp+1Ch+arg_4]
		jz	short loc_67E1785B
		mov	dword_67E19054,	2

loc_67E1785B:				; CODE XREF: TlsCallback_0+Fj
		cmp	eax, 2
		jz	short loc_67E17871
		cmp	eax, 1
		jz	short loc_67E178A0

loc_67E17865:				; CODE XREF: TlsCallback_0+3Cj
					; TlsCallback_0+7Cj
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn	0Ch
; ---------------------------------------------------------------------------

loc_67E17871:				; CODE XREF: TlsCallback_0+1Ej
		mov	ebx, offset dword_67E3A028
		cmp	ebx, offset dword_67E3A028
		jz	short loc_67E17865
		xchg	ax, ax

loc_67E17880:				; CODE XREF: TlsCallback_0+51j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_67E17888
		call	eax

loc_67E17888:				; CODE XREF: TlsCallback_0+44j
		add	ebx, 4
		cmp	ebx, offset dword_67E3A028
		jnz	short loc_67E17880
		mov	eax, 1
		add	esp, 18h
		pop	ebx
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_67E178A0:				; CODE XREF: TlsCallback_0+23j
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_67E17FB0
		jmp	short loc_67E17865
TlsCallback_0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E178C0	proc near		; CODE XREF: sub_67DC1040+138p
					; sub_67DC1040+14Bp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		retn
sub_67E178C0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E178D0	proc near		; CODE XREF: sub_67DC1000+15p
					; sub_67E17700+71p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		retn
sub_67E178D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

; int __cdecl sub_67E178E0(char	*Format, char ArgList)
sub_67E178E0	proc near		; CODE XREF: sub_67E17940+131p
					; sub_67E17940+141p ...

Str		= dword	ptr -1Ch
Size		= dword	ptr -18h
Count		= dword	ptr -14h
File		= dword	ptr -10h
Format		= dword	ptr  4
ArgList		= byte ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, ds:_iob
		mov	[esp+1Ch+Count], 1Bh ; Count
		lea	ebx, [esp+1Ch+ArgList]
		mov	[esp+1Ch+Size],	1 ; Size
		mov	[esp+1Ch+Str], offset aMingwW64Runtim ;	"Mingw-w64 runtime failure:\n"
		add	eax, 40h
		mov	[esp+1Ch+File],	eax ; File
		call	fwrite
		mov	eax, [esp+1Ch+Format]
		mov	[esp+1Ch+Count], ebx ; ArgList
		mov	[esp+1Ch+Size],	eax ; Format
		mov	eax, ds:_iob
		add	eax, 40h
		mov	[esp+1Ch+Str], eax ; File
		call	vfprintf
		call	abort
sub_67E178E0	endp

; ---------------------------------------------------------------------------
		jmp	short sub_67E17940
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __thiscall sub_67E17940(size_t Size)
sub_67E17940	proc near		; CODE XREF: .text:67E17931j
					; sub_67E17A90+12Ap ...

lpAddress	= dword	ptr -5Ch
lpBuffer	= dword	ptr -58h
dwLength	= dword	ptr -54h
lpflOldProtect	= dword	ptr -50h
var_44		= dword	ptr -44h
Src		= dword	ptr -40h
Buffer		= _MEMORY_BASIC_INFORMATION ptr	-38h

		push	ebp
		push	edi
		mov	edi, ecx
		push	esi
		push	ebx
		mov	ebx, eax
		sub	esp, 4Ch
		test	ecx, ecx
		mov	[esp+5Ch+Src], edx
		jnz	short loc_67E17960
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E17960:				; CODE XREF: sub_67E17940+11j
		mov	ecx, ds:dword_67E349E8
		xor	esi, esi
		test	ecx, ecx
		jle	short loc_67E17990
		mov	eax, ds:dword_67E349E4

loc_67E17971:				; CODE XREF: sub_67E17940+4Ej
		mov	edx, [eax+4]
		cmp	edx, ebx
		ja	short loc_67E17986
		mov	ebp, [eax+8]
		add	edx, [ebp+8]
		cmp	ebx, edx
		jb	loc_67E17A09

loc_67E17986:				; CODE XREF: sub_67E17940+36j
		add	esi, 1
		add	eax, 0Ch
		cmp	esi, ecx
		jl	short loc_67E17971

loc_67E17990:				; CODE XREF: sub_67E17940+2Aj
		mov	[esp+5Ch+lpAddress], ebx
		call	sub_67E181D0
		test	eax, eax
		mov	ebp, eax
		jz	loc_67E17A76
		lea	edx, [esi+esi*2]
		mov	esi, ds:dword_67E349E4
		shl	edx, 2
		mov	[esp+5Ch+var_44], edx
		add	esi, edx
		mov	[esi+8], eax
		mov	dword ptr [esi], 0
		call	sub_67E182F0
		mov	edx, [esp+5Ch+var_44]
		add	eax, [ebp+0Ch]
		mov	[esi+4], eax
		lea	eax, [esp+5Ch+Buffer]
		mov	[esp+5Ch+lpBuffer], eax	; lpBuffer
		mov	eax, ds:dword_67E349E4
		mov	[esp+5Ch+dwLength], 1Ch	; dwLength
		mov	eax, [eax+edx+4]
		mov	[esp+5Ch+lpAddress], eax ; lpAddress
		call	ds:VirtualQuery
		sub	esp, 0Ch
		test	eax, eax
		mov	edx, [esp+5Ch+var_44]
		jz	short loc_67E17A56
		mov	eax, [esp+5Ch+Buffer.Protect]
		cmp	eax, 4
		jnz	short loc_67E17A25

loc_67E17A02:				; CODE XREF: sub_67E17940+E8j
					; sub_67E17940+114j
		add	ds:dword_67E349E8, 1

loc_67E17A09:				; CODE XREF: sub_67E17940+40j
		mov	eax, [esp+5Ch+Src]
		mov	[esp+5Ch+dwLength], edi	; Size
		mov	[esp+5Ch+lpAddress], ebx ; Dst
		mov	[esp+5Ch+lpBuffer], eax	; Src
		call	memcpy
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E17A25:				; CODE XREF: sub_67E17940+C0j
		cmp	eax, 40h
		jz	short loc_67E17A02
		mov	eax, [esp+5Ch+Buffer.RegionSize]
		add	edx, ds:dword_67E349E4
		mov	[esp+5Ch+dwLength], 40h	; flNewProtect
		mov	[esp+5Ch+lpBuffer], eax	; dwSize
		mov	eax, [esp+5Ch+Buffer.BaseAddress]
		mov	[esp+5Ch+lpflOldProtect], edx ;	lpflOldProtect
		mov	[esp+5Ch+lpAddress], eax ; lpAddress
		call	ds:VirtualProtect
		sub	esp, 10h
		jmp	short loc_67E17A02
; ---------------------------------------------------------------------------

loc_67E17A56:				; CODE XREF: sub_67E17940+B7j
		mov	eax, ds:dword_67E349E4
		mov	eax, [eax+edx+4]
		mov	[esp+5Ch+dwLength], eax
		mov	eax, [ebp+8]
		mov	[esp+5Ch+lpAddress], offset aVirtualqueryFa ; "	 VirtualQuery failed for %d bytes at a"...
		mov	[esp+5Ch+lpBuffer], eax	; ArgList
		call	sub_67E178E0
; ---------------------------------------------------------------------------

loc_67E17A76:				; CODE XREF: sub_67E17940+5Cj
		mov	[esp+5Ch+lpBuffer], ebx	; ArgList
		mov	[esp+5Ch+lpAddress], offset aAddressPHasNoI ; "Address %p has no image-section"
		call	sub_67E178E0
sub_67E17940	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_67E17A90	proc near		; CODE XREF: sub_67DC1260+30p
					; sub_67DC1260:loc_67DC12E8p

lpAddress	= dword	ptr -58h
lpBuffer	= dword	ptr -54h
dwLength	= dword	ptr -50h
lpflOldProtect	= dword	ptr -4Ch
Buffer		= _MEMORY_BASIC_INFORMATION ptr	-3Ch
flOldProtect	= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, ds:dword_67E349EC
		test	ebx, ebx
		jz	short loc_67E17AB0

loc_67E17AA3:				; CODE XREF: sub_67E17A90+64j
					; sub_67E17A90+B4j ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E17AB0:				; CODE XREF: sub_67E17A90+11j
		mov	ds:dword_67E349EC, 1
		call	sub_67E18240
		lea	eax, [eax+eax*2]
		lea	eax, ds:1Eh[eax*4]
		and	eax, 0FFFFFFF0h
		call	sub_67E18840
		mov	ds:dword_67E349E8, 0
		lea	eax, [esp+58h+Buffer.BaseAddress+3]
		and	eax, 0FFFFFFF0h
		mov	ds:dword_67E349E4, eax
		mov	eax, offset dword_67E33448
		sub	eax, offset dword_67E33448
		cmp	eax, 7
		jle	short loc_67E17AA3
		cmp	eax, 0Bh
		mov	ebx, offset dword_67E33448
		jle	short loc_67E17B22
		mov	ecx, ds:dword_67E33448
		test	ecx, ecx
		jnz	short loc_67E17B22
		mov	edx, ds:dword_67E3344C
		test	edx, edx
		jnz	short loc_67E17B22
		mov	eax, ds:dword_67E33450
		test	eax, eax
		jnz	short loc_67E17B22
		mov	ebx, offset dword_67E33454

loc_67E17B22:				; CODE XREF: sub_67E17A90+6Ej
					; sub_67E17A90+78j ...
		mov	edi, [ebx]
		test	edi, edi
		jnz	short loc_67E17B90
		mov	esi, [ebx+4]
		test	esi, esi
		jnz	short loc_67E17B90
		mov	eax, [ebx+8]
		cmp	eax, 1
		jnz	loc_67E17CF3
		add	ebx, 0Ch
		cmp	ebx, offset dword_67E33448
		jnb	loc_67E17AA3
		mov	esi, 67DC0000h

loc_67E17B4F:				; CODE XREF: sub_67E17A90+217j
		mov	eax, [ebx+4]
		mov	ecx, [ebx]
		movzx	edx, byte ptr [ebx+8]
		add	eax, esi
		add	ecx, esi
		cmp	edx, 10h
		mov	edi, [ecx]
		jz	loc_67E17C4D
		cmp	edx, 20h
		jz	loc_67E17C8A
		cmp	edx, 8
		jz	loc_67E17C6C
		mov	[ebp+var_1C], 0
		mov	[esp+58h+lpBuffer], edx	; ArgList
		mov	[esp+58h+lpAddress], offset aUnknownPseudoR ; "	 Unknown pseudo	relocation bit size %d"...
		call	sub_67E178E0
; ---------------------------------------------------------------------------

loc_67E17B90:				; CODE XREF: sub_67E17A90+96j
					; sub_67E17A90+9Dj
		cmp	ebx, offset dword_67E33448
		jnb	loc_67E17AA3
		mov	esi, 67DC0000h
		lea	edi, [ebp+flOldProtect]

loc_67E17BA4:				; CODE XREF: sub_67E17A90+135j
		mov	eax, [ebx+4]
		mov	ecx, 4		; Size
		add	eax, esi
		mov	edx, [eax]
		add	edx, [ebx]
		add	ebx, 8
		mov	[ebp+flOldProtect], edx
		mov	edx, edi
		call	sub_67E17940
		cmp	ebx, offset dword_67E33448
		jb	short loc_67E17BA4

loc_67E17BC7:				; CODE XREF: sub_67E17A90+21Dj
		mov	ecx, ds:dword_67E349E8
		test	ecx, ecx
		jle	loc_67E17AA3
		xor	ebx, ebx
		xor	esi, esi
		lea	edi, [ebp+flOldProtect]
		jmp	short loc_67E17BF2
; ---------------------------------------------------------------------------
		align 10h

loc_67E17BE0:				; CODE XREF: sub_67E17A90+16Dj
					; sub_67E17A90+1BBj
		add	esi, 1
		add	ebx, 0Ch
		cmp	esi, ds:dword_67E349E8
		jge	loc_67E17AA3

loc_67E17BF2:				; CODE XREF: sub_67E17A90+14Cj
		mov	eax, ds:dword_67E349E4
		add	eax, ebx
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_67E17BE0
		lea	edx, [ebp+Buffer]
		mov	[esp+58h+dwLength], 1Ch	; dwLength
		mov	[esp+58h+lpBuffer], edx	; lpBuffer
		mov	eax, [eax+4]
		mov	[esp+58h+lpAddress], eax ; lpAddress
		call	ds:VirtualQuery
		sub	esp, 0Ch
		test	eax, eax
		jz	loc_67E17CD0
		mov	eax, ds:dword_67E349E4
		mov	[esp+58h+lpflOldProtect], edi ;	lpflOldProtect
		mov	eax, [eax+ebx]
		mov	[esp+58h+dwLength], eax	; flNewProtect
		mov	eax, [ebp+Buffer.RegionSize]
		mov	[esp+58h+lpBuffer], eax	; dwSize
		mov	eax, [ebp+Buffer.BaseAddress]
		mov	[esp+58h+lpAddress], eax ; lpAddress
		call	ds:VirtualProtect
		sub	esp, 10h
		jmp	short loc_67E17BE0
; ---------------------------------------------------------------------------

loc_67E17C4D:				; CODE XREF: sub_67E17A90+D1j
		movzx	edx, word ptr [eax]
		test	dx, dx
		js	short loc_67E17CC1
		sub	edx, ecx
		lea	edi, [edx+edi]
		mov	[ebp+var_1C], edi

loc_67E17C5D:				; CODE XREF: sub_67E17A90+23Ej
		mov	ecx, 2		; Size
		lea	edx, [ebp+var_1C]
		call	sub_67E17940
		jmp	short loc_67E17C9E
; ---------------------------------------------------------------------------

loc_67E17C6C:				; CODE XREF: sub_67E17A90+E3j
		movzx	edx, byte ptr [eax]
		test	dl, dl
		js	short loc_67E17CB2
		sub	edx, ecx
		lea	edi, [edx+edi]
		mov	[ebp+var_1C], edi

loc_67E17C7B:				; CODE XREF: sub_67E17A90+22Fj
		mov	ecx, 1		; Size
		lea	edx, [ebp+var_1C]
		call	sub_67E17940
		jmp	short loc_67E17C9E
; ---------------------------------------------------------------------------

loc_67E17C8A:				; CODE XREF: sub_67E17A90+DAj
		add	edi, [eax]
		lea	edx, [ebp+var_1C]
		sub	edi, ecx
		mov	ecx, 4		; Size
		mov	[ebp+var_1C], edi
		call	sub_67E17940

loc_67E17C9E:				; CODE XREF: sub_67E17A90+1DAj
					; sub_67E17A90+1F8j
		add	ebx, 0Ch
		cmp	ebx, offset dword_67E33448
		jb	loc_67E17B4F
		jmp	loc_67E17BC7
; ---------------------------------------------------------------------------

loc_67E17CB2:				; CODE XREF: sub_67E17A90+1E1j
		or	edx, 0FFFFFF00h
		sub	edx, ecx
		add	edx, edi
		mov	[ebp+var_1C], edx
		jmp	short loc_67E17C7B
; ---------------------------------------------------------------------------

loc_67E17CC1:				; CODE XREF: sub_67E17A90+1C3j
		or	edx, 0FFFF0000h
		sub	edx, ecx
		add	edx, edi
		mov	[ebp+var_1C], edx
		jmp	short loc_67E17C5D
; ---------------------------------------------------------------------------

loc_67E17CD0:				; CODE XREF: sub_67E17A90+18Fj
		add	ebx, ds:dword_67E349E4
		mov	eax, [ebx+4]
		mov	[esp+58h+dwLength], eax
		mov	eax, [ebx+8]
		mov	eax, [eax+8]
		mov	[esp+58h+lpAddress], offset aVirtualqueryFa ; "	 VirtualQuery failed for %d bytes at a"...
		mov	[esp+58h+lpBuffer], eax	; ArgList
		call	sub_67E178E0
; ---------------------------------------------------------------------------

loc_67E17CF3:				; CODE XREF: sub_67E17A90+A5j
		mov	[esp+58h+lpBuffer], eax	; ArgList
		mov	[esp+58h+lpAddress], offset aUnknownPseud_0 ; "	 Unknown pseudo	relocation protocol ve"...
		call	sub_67E178E0
sub_67E17A90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E17D10()
sub_67E17D10	proc near		; DATA XREF: sub_67E17DA0:loc_67E17D6Ao
		sub	esp, 0Ch
		mov	eax, off_67E19050
		mov	eax, [eax]
		test	eax, eax
		jz	short loc_67E17D37
		xchg	ax, ax

loc_67E17D20:				; CODE XREF: sub_67E17D10+25j
		call	eax
		mov	eax, off_67E19050
		lea	edx, [eax+4]
		mov	eax, [eax+4]
		mov	off_67E19050, edx
		test	eax, eax
		jnz	short loc_67E17D20

loc_67E17D37:				; CODE XREF: sub_67E17D10+Cj
		add	esp, 0Ch
		retn
sub_67E17D10	endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_67E17DA0

loc_67E17D40:				; CODE XREF: sub_67E17DA0+1Ej
		push	esi
		push	ebx
		sub	esp, 14h
		mov	ebx, ds:dword_67E18CC0
		cmp	ebx, 0FFFFFFFFh
		jz	short loc_67E17D80

loc_67E17D50:				; CODE XREF: sub_67E17DA0-Cj
		test	ebx, ebx
		jz	short loc_67E17D6A
		lea	esi, dword_67E18CC0[ebx*4]
		nop
		lea	esi, [esi+0]

loc_67E17D60:				; CODE XREF: sub_67E17DA0-38j
		call	dword ptr [esi]
		sub	esi, 4
		sub	ebx, 1
		jnz	short loc_67E17D60

loc_67E17D6A:				; CODE XREF: sub_67E17DA0-4Ej
		mov	[esp+1Ch+var_1C], offset sub_67E17D10 ;	_onexit_t
		call	sub_67E177C0
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; END OF FUNCTION CHUNK	FOR sub_67E17DA0
; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_67E17DA0

loc_67E17D80:				; CODE XREF: sub_67E17DA0-52j
		xor	ebx, ebx
		jmp	short loc_67E17D86
; ---------------------------------------------------------------------------

loc_67E17D84:				; CODE XREF: sub_67E17DA0-Ej
		mov	ebx, eax

loc_67E17D86:				; CODE XREF: sub_67E17DA0-1Ej
		lea	eax, [ebx+1]
		mov	edx, ds:dword_67E18CC0[eax*4]
		test	edx, edx
		jnz	short loc_67E17D84
		jmp	short loc_67E17D50
; END OF FUNCTION CHUNK	FOR sub_67E17DA0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E17DA0	proc near		; CODE XREF: sub_67DC1260+92p

var_1C		= dword	ptr -1Ch

; FUNCTION CHUNK AT 67E17D40 SIZE 0000003C BYTES
; FUNCTION CHUNK AT 67E17D80 SIZE 00000016 BYTES

		sub	esp, 0Ch
		mov	ecx, ds:dword_67E349F0
		test	ecx, ecx
		jz	short loc_67E17DB1
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------

loc_67E17DB1:				; CODE XREF: sub_67E17DA0+Bj
		mov	ds:dword_67E349F0, 1
		add	esp, 0Ch
		jmp	short loc_67E17D40
sub_67E17DA0	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_67E17DC0	proc near		; CODE XREF: sub_67DC1260+F1p
					; sub_67DC1260+10Bp ...
		mov	eax, 1
		retn	0Ch
sub_67E17DC0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+4]
		lea	edx, [ebp+4]
		mov	ds:dword_67E34B24, edx
		mov	ds:dword_67E34A00, 0C0000409h
		mov	ds:dword_67E34A04, 1
		mov	ds:dword_67E34B18, eax
		mov	ds:dword_67E34A0C, eax
		mov	eax, [ebp+8]
		mov	dword ptr [esp], 0
		mov	ds:dword_67E34B0C, eax
		mov	eax, dword_67E19058
		mov	[ebp-10h], eax
		mov	eax, dword_67E1905C
		mov	[ebp-0Ch], eax
		call	ds:SetUnhandledExceptionFilter
		sub	esp, 4
		mov	dword ptr [esp], offset	off_67E33428
		call	ds:UnhandledExceptionFilter
		sub	esp, 4
		call	ds:GetCurrentProcess
		mov	dword ptr [esp+4], 0C0000409h
		mov	[esp], eax
		call	ds:TerminateProcess
		sub	esp, 8
		call	abort
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E17E60	proc near		; CODE XREF: DllEntryPoint+34p

lpSystemTimeAsFileTime=	dword ptr -4Ch
var_30		= dword	ptr -30h
PerformanceCount= LARGE_INTEGER	ptr -2Ch
SystemTimeAsFileTime= _FILETIME	ptr -24h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		sub	esp, 4Ch
		mov	eax, dword_67E19058
		mov	[esp+4Ch+var_10], ebx
		mov	[esp+4Ch+var_C], esi
		mov	[esp+4Ch+var_8], edi
		cmp	eax, 0BB40E64Eh
		mov	[esp+4Ch+var_4], ebp
		jz	short loc_67E17EA0
		not	eax
		mov	dword_67E1905C,	eax

loc_67E17E86:				; CODE XREF: sub_67E17E60+BDj
		mov	ebx, [esp+4Ch+var_10]
		mov	esi, [esp+4Ch+var_C]
		mov	edi, [esp+4Ch+var_8]
		mov	ebp, [esp+4Ch+var_4]
		add	esp, 4Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E17EA0:				; CODE XREF: sub_67E17E60+1Dj
		lea	eax, [esp+4Ch+SystemTimeAsFileTime]
		mov	[esp+4Ch+lpSystemTimeAsFileTime], eax ;	lpSystemTimeAsFileTime
		mov	[esp+4Ch+SystemTimeAsFileTime.dwLowDateTime], 0
		mov	[esp+4Ch+SystemTimeAsFileTime.dwHighDateTime], 0
		call	ds:GetSystemTimeAsFileTime
		sub	esp, 4
		mov	eax, [esp+4Ch+SystemTimeAsFileTime.dwHighDateTime]
		mov	ebp, [esp+4Ch+SystemTimeAsFileTime.dwLowDateTime]
		mov	[esp+4Ch+var_30], eax
		call	ds:GetCurrentProcessId
		mov	edi, eax
		call	ds:GetCurrentThreadId
		mov	esi, eax
		call	ds:GetTickCount
		mov	ebx, eax
		lea	eax, [esp+4Ch+PerformanceCount]
		mov	[esp+4Ch+lpSystemTimeAsFileTime], eax ;	lpPerformanceCount
		call	ds:QueryPerformanceCounter
		sub	esp, 4
		xor	ebp, [esp+4Ch+var_30]
		xor	ebp, dword ptr [esp+4Ch+PerformanceCount]
		xor	ebp, dword ptr [esp+4Ch+PerformanceCount+4]
		xor	ebp, edi
		xor	ebp, esi
		xor	ebp, ebx
		mov	eax, ebp
		cmp	ebp, 0BB40E64Eh
		not	eax
		jz	short loc_67E17F22

loc_67E17F12:				; CODE XREF: sub_67E17E60+CBj
		mov	dword_67E19058,	ebp
		mov	dword_67E1905C,	eax
		jmp	loc_67E17E86
; ---------------------------------------------------------------------------

loc_67E17F22:				; CODE XREF: sub_67E17E60+B0j
		mov	eax, 44BF19B0h
		mov	bp, 0E64Fh
		jmp	short loc_67E17F12
sub_67E17E60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E17F30	proc near		; CODE XREF: sub_67E17FB0+13p
					; sub_67E17FB0:loc_67E17FD1p

lpCriticalSection= dword ptr -2Ch

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	eax, ds:dword_67E34D40
		test	eax, eax
		jnz	short loc_67E17F48
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_67E17F48:				; CODE XREF: sub_67E17F30+Ej
		mov	[esp+2Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:EnterCriticalSection
		mov	ebx, ds:dword_67E34D5C
		sub	esp, 4
		test	ebx, ebx
		jz	short loc_67E17F95
		mov	ebp, ds:TlsGetValue
		mov	edi, ds:GetLastError
		xchg	ax, ax

loc_67E17F70:				; CODE XREF: sub_67E17F30+63j
		mov	eax, [ebx]
		mov	[esp+2Ch+lpCriticalSection], eax ; dwTlsIndex
		call	ebp ; TlsGetValue
		sub	esp, 4
		mov	esi, eax
		call	edi ; GetLastError
		test	eax, eax
		jnz	short loc_67E17F8E
		test	esi, esi
		jz	short loc_67E17F8E
		mov	eax, [ebx+4]
		mov	[esp+2Ch+lpCriticalSection], esi
		call	eax

loc_67E17F8E:				; CODE XREF: sub_67E17F30+50j
					; sub_67E17F30+54j
		mov	ebx, [ebx+8]
		test	ebx, ebx
		jnz	short loc_67E17F70

loc_67E17F95:				; CODE XREF: sub_67E17F30+30j
		mov	[esp+2Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_67E17F30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E17FB0	proc near		; CODE XREF: TlsCallback_1+33p
					; TlsCallback_0+77p

lpCriticalSection= dword ptr -1Ch
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		cmp	eax, 1
		jz	short loc_67E18000
		jb	short loc_67E17FD1
		cmp	eax, 3
		jnz	short loc_67E17FC8
		call	sub_67E17F30

loc_67E17FC8:				; CODE XREF: sub_67E17FB0+11j
					; sub_67E17FB0+2Ej ...
		mov	eax, 1
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_67E17FD1:				; CODE XREF: sub_67E17FB0+Cj
		call	sub_67E17F30
		mov	eax, ds:dword_67E34D40
		cmp	eax, 1
		jnz	short loc_67E17FC8
		mov	ds:dword_67E34D40, 0
		mov	[esp+1Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:DeleteCriticalSection
		sub	esp, 4
		jmp	short loc_67E17FC8
; ---------------------------------------------------------------------------
		align 10h

loc_67E18000:				; CODE XREF: sub_67E17FB0+Aj
		mov	eax, ds:dword_67E34D40
		test	eax, eax
		jz	short loc_67E18020

loc_67E18009:				; CODE XREF: sub_67E17FB0+80j
		mov	ds:dword_67E34D40, 1
		mov	eax, 1
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E18020:				; CODE XREF: sub_67E17FB0+57j
		mov	[esp+1Ch+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:InitializeCriticalSection
		sub	esp, 4
		jmp	short loc_67E18009
sub_67E17FB0	endp

; ---------------------------------------------------------------------------
		align 10h

loc_67E18040:				; CODE XREF: .text:67E18B46j
		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_67E34D40
		mov	ebx, [esp+20h]
		test	eax, eax
		jnz	short loc_67E18058
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67E18058:				; CODE XREF: .text:67E1804Fj
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:EnterCriticalSection
		mov	eax, ds:dword_67E34D5C
		sub	esp, 4
		test	eax, eax
		jz	short loc_67E1808F
		mov	edx, [eax]
		cmp	edx, ebx
		jnz	short loc_67E18086
		jmp	short loc_67E180C6
; ---------------------------------------------------------------------------
		align 10h

loc_67E18080:				; CODE XREF: .text:67E1808Dj
		mov	edx, [eax]
		cmp	edx, ebx
		jz	short loc_67E180A6

loc_67E18086:				; CODE XREF: .text:67E18075j
		mov	ecx, eax
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_67E18080

loc_67E1808F:				; CODE XREF: .text:67E1806Fj
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4

loc_67E1809F:				; CODE XREF: .text:67E180C4j
		xor	eax, eax
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67E180A6:				; CODE XREF: .text:67E18084j
		mov	edx, [eax+8]
		mov	[ecx+8], edx

loc_67E180AC:				; CODE XREF: .text:67E180CFj
		mov	[esp], eax
		call	free
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:LeaveCriticalSection
		sub	esp, 4
		jmp	short loc_67E1809F
; ---------------------------------------------------------------------------

loc_67E180C6:				; CODE XREF: .text:67E18077j
		mov	edx, [eax+8]
		mov	ds:dword_67E34D5C, edx
		jmp	short loc_67E180AC
; ---------------------------------------------------------------------------
		jmp	short loc_67E180E0
; ---------------------------------------------------------------------------
		align 10h

loc_67E180E0:				; CODE XREF: .text:67E180D1j
					; .text:67E18B2Aj
		push	ebx
		sub	esp, 18h
		mov	eax, ds:dword_67E34D40
		test	eax, eax
		jnz	short loc_67E180F2

loc_67E180ED:				; CODE XREF: .text:67E1810Fj
					; .text:67E1814Ej
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67E180F2:				; CODE XREF: .text:67E180EBj
		mov	dword ptr [esp+4], 0Ch
		mov	dword ptr [esp], 1
		call	calloc
		mov	ebx, eax
		mov	eax, 0FFFFFFFFh
		test	ebx, ebx
		jz	short loc_67E180ED
		mov	eax, [esp+20h]
		mov	dword ptr [esp], offset	CriticalSection
		mov	[ebx], eax
		mov	eax, [esp+24h]
		mov	[ebx+4], eax
		call	ds:EnterCriticalSection
		mov	eax, ds:dword_67E34D5C
		mov	ds:dword_67E34D5C, ebx
		mov	[ebx+8], eax
		sub	esp, 4
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:LeaveCriticalSection
		xor	eax, eax
		sub	esp, 4
		jmp	short loc_67E180ED
; ---------------------------------------------------------------------------
		mov	eax, [esp+4]
		cmp	word ptr [eax],	5A4Dh
		jz	short loc_67E18160

loc_67E1815B:				; CODE XREF: .text:67E18169j
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E18160:				; CODE XREF: .text:67E18159j
		add	eax, [eax+3Ch]
		cmp	dword ptr [eax], 4550h
		jnz	short loc_67E1815B
		cmp	word ptr [eax+18h], 10Bh
		setz	al
		movzx	eax, al
		retn
; ---------------------------------------------------------------------------
		align 10h
		push	esi
		push	ebx
		mov	eax, [esp+0Ch]
		mov	ebx, [esp+10h]
		add	eax, [eax+3Ch]
		movzx	esi, word ptr [eax+6]
		movzx	edx, word ptr [eax+14h]
		test	esi, esi
		jz	short loc_67E181BC
		movzx	edx, dx
		lea	eax, [eax+edx+18h]
		xor	edx, edx
		jmp	short loc_67E181A7
; ---------------------------------------------------------------------------

loc_67E181A4:				; CODE XREF: .text:67E181BAj
		add	eax, 28h

loc_67E181A7:				; CODE XREF: .text:67E181A2j
		mov	ecx, [eax+0Ch]
		cmp	ecx, ebx
		ja	short loc_67E181B5
		add	ecx, [eax+8]
		cmp	ebx, ecx
		jb	short loc_67E181BE

loc_67E181B5:				; CODE XREF: .text:67E181ACj
		add	edx, 1
		cmp	edx, esi
		jb	short loc_67E181A4

loc_67E181BC:				; CODE XREF: .text:67E18197j
		xor	eax, eax

loc_67E181BE:				; CODE XREF: .text:67E181B3j
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_67E181D0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E181D0	proc near		; CODE XREF: sub_67E17940+53p
					; .text:67E181C1j

arg_0		= dword	ptr  4

		cmp	word ptr ds:67DC0000h, 5A4Dh
		push	esi
		push	ebx
		jz	short loc_67E181E2

loc_67E181DD:				; CODE XREF: sub_67E181D0+27j
					; sub_67E181D0+2Fj ...
		xor	eax, eax

loc_67E181DF:				; CODE XREF: sub_67E181D0+61j
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E181E2:				; CODE XREF: sub_67E181D0+Bj
		mov	eax, ds:67DC003Ch
		cmp	dword ptr [eax+67DC0000h], 4550h
		lea	edx, [eax+67DC0000h]
		jnz	short loc_67E181DD
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_67E181DD
		mov	ebx, [esp+8+arg_0]
		movzx	esi, word ptr [edx+6]
		movzx	eax, word ptr [edx+14h]
		sub	ebx, 67DC0000h
		test	esi, esi
		jz	short loc_67E181DD
		movzx	eax, ax
		lea	eax, [edx+eax+18h]
		xor	edx, edx
		jmp	short loc_67E18225
; ---------------------------------------------------------------------------

loc_67E18222:				; CODE XREF: sub_67E181D0+68j
		add	eax, 28h

loc_67E18225:				; CODE XREF: sub_67E181D0+50j
		mov	ecx, [eax+0Ch]
		cmp	ebx, ecx
		jb	short loc_67E18233
		add	ecx, [eax+8]
		cmp	ebx, ecx
		jb	short loc_67E181DF

loc_67E18233:				; CODE XREF: sub_67E181D0+5Aj
		add	edx, 1
		cmp	edx, esi
		jb	short loc_67E18222
		jmp	short loc_67E181DD
sub_67E181D0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E18240	proc near		; CODE XREF: sub_67E17A90+2Ap
		cmp	word ptr ds:67DC0000h, 5A4Dh
		jz	short loc_67E18250

loc_67E1824B:				; CODE XREF: sub_67E18240+25j
					; sub_67E18240+2Dj
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E18250:				; CODE XREF: sub_67E18240+9j
		mov	eax, ds:67DC003Ch
		cmp	dword ptr [eax+67DC0000h], 4550h
		lea	edx, [eax+67DC0000h]
		jnz	short loc_67E1824B
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_67E1824B
		movzx	eax, word ptr [edx+6]
		retn
sub_67E18240	endp

; ---------------------------------------------------------------------------
		align 10h
		cmp	word ptr ds:67DC0000h, 5A4Dh
		push	ebx
		mov	edx, [esp+8]
		jz	short loc_67E18294

loc_67E18290:				; CODE XREF: .text:67E182A9j
					; .text:67E182B1j ...
		xor	eax, eax

loc_67E18292:				; CODE XREF: .text:67E182DBj
					; .text:67E182E9j
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67E18294:				; CODE XREF: .text:67E1828Ej
		mov	eax, ds:67DC003Ch
		cmp	dword ptr [eax+67DC0000h], 4550h
		lea	ecx, [eax+67DC0000h]
		jnz	short loc_67E18290
		cmp	word ptr [ecx+18h], 10Bh
		jnz	short loc_67E18290
		movzx	ebx, word ptr [ecx+6]
		movzx	eax, word ptr [ecx+14h]
		test	ebx, ebx
		jz	short loc_67E18290
		movzx	eax, ax
		lea	eax, [ecx+eax+18h]
		xor	ecx, ecx
		jmp	short loc_67E182D3
; ---------------------------------------------------------------------------
		align 10h

loc_67E182D0:				; CODE XREF: .text:67E182E5j
		add	eax, 28h

loc_67E182D3:				; CODE XREF: .text:67E182C8j
		test	byte ptr [eax+27h], 20h
		jz	short loc_67E182E0
		test	edx, edx
		jz	short loc_67E18292
		sub	edx, 1

loc_67E182E0:				; CODE XREF: .text:67E182D7j
		add	ecx, 1
		cmp	ecx, ebx
		jb	short loc_67E182D0
		xor	eax, eax
		jmp	short loc_67E18292
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E182F0	proc near		; CODE XREF: sub_67E17940+7Dp
		cmp	word ptr ds:67DC0000h, 5A4Dh
		jz	short loc_67E18300

loc_67E182FB:				; CODE XREF: sub_67E182F0+25j
		xor	eax, eax

locret_67E182FD:			; CODE XREF: sub_67E182F0+32j
					; sub_67E182F0+36j
		rep retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E18300:				; CODE XREF: sub_67E182F0+9j
		mov	eax, ds:67DC003Ch
		cmp	dword ptr [eax+67DC0000h], 4550h
		lea	edx, [eax+67DC0000h]
		jnz	short loc_67E182FB
		cmp	word ptr [edx+18h], 10Bh
		mov	eax, 67DC0000h
		jz	short locret_67E182FD
		xor	eax, eax
		jmp	short locret_67E182FD
sub_67E182F0	endp

; ---------------------------------------------------------------------------
		align 10h
		cmp	word ptr ds:67DC0000h, 5A4Dh
		push	esi
		push	ebx
		jz	short loc_67E18342

loc_67E1833D:				; CODE XREF: .text:67E18357j
					; .text:67E1835Fj ...
		xor	eax, eax
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_67E18342:				; CODE XREF: .text:67E1833Bj
		mov	eax, ds:67DC003Ch
		cmp	dword ptr [eax+67DC0000h], 4550h
		lea	edx, [eax+67DC0000h]
		jnz	short loc_67E1833D
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_67E1833D
		mov	ebx, [esp+0Ch]
		movzx	esi, word ptr [edx+6]
		movzx	eax, word ptr [edx+14h]
		sub	ebx, 67DC0000h
		test	esi, esi
		jz	short loc_67E1833D
		movzx	eax, ax
		lea	eax, [edx+eax+18h]
		xor	edx, edx
		jmp	short loc_67E18385
; ---------------------------------------------------------------------------

loc_67E18382:				; CODE XREF: .text:67E18398j
		add	eax, 28h

loc_67E18385:				; CODE XREF: .text:67E18380j
		mov	ecx, [eax+0Ch]
		cmp	ebx, ecx
		jb	short loc_67E18393
		add	ecx, [eax+8]
		cmp	ebx, ecx
		jb	short loc_67E183A0

loc_67E18393:				; CODE XREF: .text:67E1838Aj
		add	edx, 1
		cmp	esi, edx
		ja	short loc_67E18382
		jmp	short loc_67E1833D
; ---------------------------------------------------------------------------
		align 10h

loc_67E183A0:				; CODE XREF: .text:67E18391j
		test	eax, eax
		jz	short loc_67E1833D
		mov	eax, [eax+24h]
		pop	ebx
		pop	esi
		not	eax
		shr	eax, 1Fh
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E183B0	proc near		; CODE XREF: .text:67E184D8p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4

		sub	esp, 0Ch
		cmp	word ptr ds:67DC0000h, 5A4Dh
		mov	[esp+0Ch+var_C], ebx
		mov	eax, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_8], esi
		mov	[esp+0Ch+var_4], edi
		jz	short loc_67E183E0

loc_67E183CD:				; CODE XREF: sub_67E183B0+46j
					; sub_67E183B0+4Ej ...
		xor	eax, eax

loc_67E183CF:				; CODE XREF: sub_67E183B0+C8j
		mov	ebx, [esp+0Ch+var_C]
		mov	esi, [esp+0Ch+var_8]
		mov	edi, [esp+0Ch+var_4]
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E183E0:				; CODE XREF: sub_67E183B0+1Bj
		mov	edx, ds:67DC003Ch
		cmp	dword ptr [edx+67DC0000h], 4550h
		lea	ecx, [edx+67DC0000h]
		jnz	short loc_67E183CD
		cmp	word ptr [ecx+18h], 10Bh
		jnz	short loc_67E183CD
		mov	esi, [ecx+80h]
		test	esi, esi
		jz	short loc_67E183CD
		movzx	edi, word ptr [ecx+6]
		movzx	edx, word ptr [ecx+14h]
		test	edi, edi
		jz	short loc_67E183CD
		movzx	edx, dx
		lea	edx, [ecx+edx+18h]
		xor	ecx, ecx
		jmp	short loc_67E18424
; ---------------------------------------------------------------------------

loc_67E18421:				; CODE XREF: sub_67E183B0+87j
		add	edx, 28h

loc_67E18424:				; CODE XREF: sub_67E183B0+6Fj
		mov	ebx, [edx+0Ch]
		cmp	esi, ebx
		jb	short loc_67E18432
		add	ebx, [edx+8]
		cmp	esi, ebx
		jb	short loc_67E1843B

loc_67E18432:				; CODE XREF: sub_67E183B0+79j
		add	ecx, 1
		cmp	edi, ecx
		ja	short loc_67E18421
		jmp	short loc_67E183CD
; ---------------------------------------------------------------------------

loc_67E1843B:				; CODE XREF: sub_67E183B0+80j
		test	edx, edx
		lea	esi, [esi+0]
		jz	short loc_67E183CD
		add	esi, 67DC0000h
		jmp	short loc_67E1845A
; ---------------------------------------------------------------------------
		align 10h

loc_67E18450:				; CODE XREF: sub_67E183B0+AFj
					; sub_67E183B0+B6j
		test	eax, eax
		jle	short loc_67E18470
		sub	eax, 1
		add	esi, 14h

loc_67E1845A:				; CODE XREF: sub_67E183B0+98j
		mov	ecx, [esi+4]
		test	ecx, ecx
		jnz	short loc_67E18450
		mov	edx, [esi+0Ch]
		test	edx, edx
		jnz	short loc_67E18450
		jmp	loc_67E183CD
; ---------------------------------------------------------------------------
		align 10h

loc_67E18470:				; CODE XREF: sub_67E183B0+A2j
		mov	eax, 67DC0000h
		add	eax, [esi+0Ch]
		jmp	loc_67E183CF
sub_67E183B0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebx
		xor	edx, edx
		sub	esp, 18h
		mov	eax, ds:dword_67E34D64
		test	eax, eax
		jz	short loc_67E184D2

loc_67E1848F:				; CODE XREF: .text:67E1851Fj
					; .text:67E1853Aj
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_67E18494:				; CODE XREF: .text:67E18503j
					; .text:67E18508j
		movzx	edx, byte ptr [eax+3]
		cmp	dl, 43h
		jz	short loc_67E184A2
		cmp	dl, 63h
		jnz	short loc_67E184D0

loc_67E184A2:				; CODE XREF: .text:67E1849Bj
		movzx	edx, byte ptr [eax+4]
		cmp	dl, 52h
		jz	short loc_67E184B2
		cmp	dl, 72h
		xchg	ax, ax
		jnz	short loc_67E184D0

loc_67E184B2:				; CODE XREF: .text:67E184A9j
		movzx	edx, byte ptr [eax+5]
		cmp	dl, 54h
		jz	short loc_67E1850E
		cmp	dl, 74h
		xchg	ax, ax
		jz	short loc_67E1850E
		sub	edx, 30h
		cmp	dl, 9
		jbe	short loc_67E1850E
		lea	esi, [esi+0]

loc_67E184D0:				; CODE XREF: .text:67E184A0j
					; .text:67E184B0j ...
		mov	edx, ebx

loc_67E184D2:				; CODE XREF: .text:67E1848Dj
					; .text:67E1850Cj
		lea	ebx, [edx+1]
		mov	[esp], edx
		call	sub_67E183B0
		test	eax, eax
		jz	short loc_67E18525
		movzx	edx, byte ptr [eax]
		cmp	dl, 4Dh
		jz	short loc_67E184EE
		cmp	dl, 6Dh
		jnz	short loc_67E184D0

loc_67E184EE:				; CODE XREF: .text:67E184E7j
		movzx	edx, byte ptr [eax+1]
		cmp	dl, 53h
		jz	short loc_67E184FC
		cmp	dl, 73h
		jnz	short loc_67E184D0

loc_67E184FC:				; CODE XREF: .text:67E184F5j
		movzx	edx, byte ptr [eax+2]
		cmp	dl, 56h
		jz	short loc_67E18494
		cmp	dl, 76h
		jz	short loc_67E18494
		mov	edx, ebx
		jmp	short loc_67E184D2
; ---------------------------------------------------------------------------

loc_67E1850E:				; CODE XREF: .text:67E184B9j
					; .text:67E184C0j ...
		mov	[esp], eax
		call	ds:GetModuleHandleA
		test	eax, eax
		push	ebx
		mov	ds:dword_67E34D64, eax
		jnz	loc_67E1848F

loc_67E18525:				; CODE XREF: .text:67E184DFj
		mov	dword ptr [esp], offset	aMsvcrt_dll ; "msvcrt.dll"
		call	ds:LoadLibraryW
		sub	esp, 4
		mov	ds:dword_67E34D64, eax
		jmp	loc_67E1848F
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 2Ch
		mov	[esp+20h], esi
		mov	esi, [esp+30h]
		mov	[esp+1Ch], ebx
		mov	[esp+24h], edi
		mov	[esp+28h], ebp
		mov	[esp], esi
		call	strlen
		cmp	eax, 8
		jbe	short loc_67E18580

loc_67E18564:				; CODE XREF: .text:67E18589j
					; .text:67E185A0j ...
		xor	ebx, ebx

loc_67E18566:				; CODE XREF: .text:67E185DAj
		mov	eax, ebx
		mov	esi, [esp+20h]
		mov	ebx, [esp+1Ch]
		mov	edi, [esp+24h]
		mov	ebp, [esp+28h]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E18580:				; CODE XREF: .text:67E18562j
		cmp	word ptr ds:67DC0000h, 5A4Dh
		jnz	short loc_67E18564
		mov	eax, ds:67DC003Ch
		cmp	dword ptr [eax+67DC0000h], 4550h
		lea	edx, [eax+67DC0000h]
		jnz	short loc_67E18564
		cmp	word ptr [edx+18h], 10Bh
		jnz	short loc_67E18564
		movzx	ebp, word ptr [edx+6]
		movzx	eax, word ptr [edx+14h]
		test	ebp, ebp
		jz	short loc_67E18564
		movzx	eax, ax
		xor	edi, edi
		lea	ebx, [edx+eax+18h]
		jmp	short loc_67E185C4
; ---------------------------------------------------------------------------

loc_67E185C1:				; CODE XREF: .text:67E185E1j
		add	ebx, 28h

loc_67E185C4:				; CODE XREF: .text:67E185BFj
		mov	dword ptr [esp+8], 8
		mov	[esp+4], esi
		mov	[esp], ebx
		call	strncmp
		test	eax, eax
		jz	short loc_67E18566
		add	edi, 1
		cmp	edi, ebp
		jb	short loc_67E185C1
		jmp	loc_67E18564
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E185F0	proc near		; CODE XREF: sub_67E0C850+55p
					; sub_67E0C850+79p ...

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	edx, [esp+2Ch+arg_C]
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_0]
		test	edx, edx
		mov	[esp+2Ch+var_4], ebp
		jnz	short loc_67E18640
		cmp	ebx, esi
		ja	short loc_67E18680
		test	ebx, ebx
		jnz	short loc_67E1862A
		mov	eax, 1
		xor	edx, edx
		div	ebx
		mov	ebx, eax

loc_67E1862A:				; CODE XREF: sub_67E185F0+2Dj
		mov	eax, esi
		xor	edx, edx
		div	ebx
		mov	esi, eax
		mov	eax, edi
		div	ebx
		mov	edi, eax
		jmp	short loc_67E18664
; ---------------------------------------------------------------------------
		align 10h

loc_67E18640:				; CODE XREF: sub_67E185F0+25j
		cmp	edx, esi
		ja	short loc_67E18660
		bsr	ebp, edx
		xor	ebp, 1Fh
		jnz	short loc_67E18690
		cmp	ebx, edi
		xchg	ax, ax
		jbe	loc_67E186F2
		cmp	edx, esi
		jb	loc_67E186F2
		xchg	ax, ax

loc_67E18660:				; CODE XREF: sub_67E185F0+52j
		xor	esi, esi
		xor	edi, edi

loc_67E18664:				; CODE XREF: sub_67E185F0+48j
					; sub_67E185F0+9Aj ...
		mov	eax, edi
		mov	edx, esi
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E18680:				; CODE XREF: sub_67E185F0+29j
		mov	edx, esi
		mov	eax, edi
		xor	esi, esi
		div	ebx
		mov	edi, eax
		jmp	short loc_67E18664
; ---------------------------------------------------------------------------
		align 10h

loc_67E18690:				; CODE XREF: sub_67E185F0+5Aj
		mov	ecx, ebp
		mov	eax, 20h
		sub	eax, ebp
		shl	edx, cl
		mov	ecx, eax
		mov	[esp+2Ch+var_20], edx
		mov	edx, ebx
		shr	edx, cl
		mov	ecx, [esp+2Ch+var_20]
		or	ecx, edx
		mov	edx, edi
		mov	[esp+2Ch+var_20], ecx
		mov	ecx, ebp
		shl	ebx, cl
		mov	ecx, eax
		mov	[esp+2Ch+var_24], ebx
		mov	ebx, esi
		shr	ebx, cl
		mov	ecx, ebp
		shl	esi, cl
		mov	ecx, eax
		shr	edx, cl
		or	esi, edx
		mov	edx, ebx
		mov	eax, esi
		div	[esp+2Ch+var_20]
		mov	ebx, edx
		mov	esi, eax
		mul	[esp+2Ch+var_24]
		cmp	ebx, edx
		jb	short loc_67E18700
		mov	ecx, ebp
		shl	edi, cl
		cmp	edi, eax
		jnb	short loc_67E186E9
		cmp	ebx, edx
		jz	short loc_67E18700

loc_67E186E9:				; CODE XREF: sub_67E185F0+F3j
		mov	edi, esi
		xor	esi, esi
		jmp	loc_67E18664
; ---------------------------------------------------------------------------

loc_67E186F2:				; CODE XREF: sub_67E185F0+60j
					; sub_67E185F0+68j
		xor	esi, esi
		mov	edi, 1
		jmp	loc_67E18664
; ---------------------------------------------------------------------------
		align 10h

loc_67E18700:				; CODE XREF: sub_67E185F0+EBj
					; sub_67E185F0+F7j
		lea	edi, [esi-1]
		xor	esi, esi
		jmp	loc_67E18664
sub_67E185F0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E18710	proc near		; CODE XREF: sub_67E0C850+9Cp
					; sub_67E0E540+9Cp

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_C]
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_10], ebx
		mov	ebx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_C], esi
		mov	esi, [esp+2Ch+arg_8]
		test	edi, edi
		mov	[esp+2Ch+var_4], ebp
		mov	ecx, eax
		mov	ebp, eax
		jnz	short loc_67E18760
		cmp	esi, ebx
		jbe	short loc_67E18782
		mov	edx, ebx
		div	esi

loc_67E18743:				; CODE XREF: sub_67E18710+8Bj
		mov	eax, edx
		xor	edx, edx

loc_67E18747:				; CODE XREF: sub_67E18710+70j
					; sub_67E18710+105j
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E18760:				; CODE XREF: sub_67E18710+29j
		cmp	edi, ebx
		ja	short loc_67E1877E
		bsr	eax, edi
		xor	eax, 1Fh
		mov	[esp+2Ch+var_28], eax
		jnz	short loc_67E187A0
		cmp	esi, ebp
		ja	loc_67E18830

loc_67E18778:				; CODE XREF: sub_67E18710+122j
		sub	ecx, esi
		sbb	ebx, edi
		mov	eax, ecx

loc_67E1877E:				; CODE XREF: sub_67E18710+52j
					; sub_67E18710+12Aj
		mov	edx, ebx
		jmp	short loc_67E18747
; ---------------------------------------------------------------------------

loc_67E18782:				; CODE XREF: sub_67E18710+2Dj
		test	esi, esi
		jnz	short loc_67E18791
		mov	eax, 1
		xor	edx, edx
		div	esi
		mov	esi, eax

loc_67E18791:				; CODE XREF: sub_67E18710+74j
		mov	eax, ebx
		xor	edx, edx
		div	esi
		mov	eax, ecx
		div	esi
		jmp	short loc_67E18743
; ---------------------------------------------------------------------------
		align 10h

loc_67E187A0:				; CODE XREF: sub_67E18710+5Ej
		movzx	ecx, byte ptr [esp+2Ch+var_28]
		mov	eax, edi
		mov	edi, 20h
		sub	edi, [esp+2Ch+var_28]
		mov	edx, esi
		shl	eax, cl
		mov	ecx, edi
		shr	edx, cl
		movzx	ecx, byte ptr [esp+2Ch+var_28]
		or	edx, eax
		mov	eax, ebp
		mov	[esp+2Ch+var_20], edx
		shl	esi, cl
		mov	ecx, edi
		mov	[esp+2Ch+var_24], esi
		mov	esi, ebx
		shr	esi, cl
		movzx	ecx, byte ptr [esp+2Ch+var_28]
		mov	edx, esi
		shl	ebx, cl
		mov	ecx, edi
		shr	eax, cl
		movzx	ecx, byte ptr [esp+2Ch+var_28]
		or	eax, ebx
		div	[esp+2Ch+var_20]
		mov	esi, edx
		shl	ebp, cl
		mul	[esp+2Ch+var_24]
		cmp	esi, edx
		jb	short loc_67E18824
		cmp	ebp, eax
		jb	short loc_67E18820

loc_67E187F9:				; CODE XREF: sub_67E18710+112j
					; sub_67E18710+11Cj
		movzx	ecx, byte ptr [esp+2Ch+var_28]
		sub	ebp, eax
		sbb	esi, edx
		mov	eax, esi
		mov	edx, esi
		shr	ebp, cl
		mov	ecx, edi
		shl	eax, cl
		movzx	ecx, byte ptr [esp+2Ch+var_28]
		or	eax, ebp
		shr	edx, cl
		jmp	loc_67E18747
; ---------------------------------------------------------------------------
		align 10h

loc_67E18820:				; CODE XREF: sub_67E18710+E7j
		cmp	esi, edx
		jnz	short loc_67E187F9

loc_67E18824:				; CODE XREF: sub_67E18710+E3j
		sub	eax, [esp+2Ch+var_24]
		sbb	edx, [esp+2Ch+var_20]
		jmp	short loc_67E187F9
; ---------------------------------------------------------------------------
		align 10h

loc_67E18830:				; CODE XREF: sub_67E18710+62j
		cmp	edi, ebx
		jb	loc_67E18778
		mov	eax, ecx
		jmp	loc_67E1877E
sub_67E18710	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E18840	proc near		; CODE XREF: sub_67E0F2A0+105p
					; sub_67E17A90+3Cp

arg_0		= byte ptr  4

		push	ecx
		lea	ecx, [esp+4+arg_0]
		cmp	eax, 1000h
		jb	short loc_67E18861

loc_67E1884C:				; CODE XREF: sub_67E18840+1Fj
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		cmp	eax, 1000h
		ja	short loc_67E1884C

loc_67E18861:				; CODE XREF: sub_67E18840+Aj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		mov	eax, esp
		mov	esp, ecx
		mov	ecx, [eax]
		mov	eax, [eax+4]
		push	eax
		retn
sub_67E18840	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E18880	proc near		; CODE XREF: .text:67E161DDp
					; .text:67E16216p ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		sub	esp, 2Ch
		mov	ecx, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_C], esi
		xor	esi, esi
		mov	edx, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_8], edi
		mov	edi, [esp+2Ch+arg_8]
		mov	[esp+2Ch+var_4], ebp
		mov	ebp, [esp+2Ch+arg_C]
		test	ecx, ecx
		mov	[esp+2Ch+var_10], ebx
		js	loc_67E18940
		test	ebp, ebp
		js	loc_67E18954

loc_67E188B5:				; CODE XREF: sub_67E18880+CEj
					; sub_67E18880+DDj
		mov	eax, ebp
		mov	ebx, edi
		test	eax, eax
		mov	ebp, edx
		mov	edi, ecx
		jnz	short loc_67E188D1
		cmp	ebx, ecx
		jbe	short loc_67E18900
		mov	eax, ebp
		mov	edx, ecx
		xor	edi, edi
		div	ebx
		mov	ebp, eax
		jmp	short loc_67E188D9
; ---------------------------------------------------------------------------

loc_67E188D1:				; CODE XREF: sub_67E18880+3Fj
		cmp	eax, ecx
		jbe	short loc_67E18920

loc_67E188D5:				; CODE XREF: sub_67E18880+B2j
		xor	edi, edi
		xor	ebp, ebp

loc_67E188D9:				; CODE XREF: sub_67E18880+4Fj
					; sub_67E18880+9Dj ...
		test	esi, esi
		mov	eax, ebp
		mov	edx, edi
		jz	short loc_67E188E8
		neg	eax
		adc	edx, 0
		neg	edx

loc_67E188E8:				; CODE XREF: sub_67E18880+5Fj
		mov	ebx, [esp+2Ch+var_10]
		mov	esi, [esp+2Ch+var_C]
		mov	edi, [esp+2Ch+var_8]
		mov	ebp, [esp+2Ch+var_4]
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_67E18900:				; CODE XREF: sub_67E18880+43j
		test	ebx, ebx
		jnz	short loc_67E1890F
		mov	eax, 1
		xor	edx, edx
		div	ebx
		mov	ebx, eax

loc_67E1890F:				; CODE XREF: sub_67E18880+82j
		mov	eax, edi
		xor	edx, edx
		div	ebx
		mov	edi, eax
		mov	eax, ebp
		div	ebx
		mov	ebp, eax
		jmp	short loc_67E188D9
; ---------------------------------------------------------------------------
		align 10h

loc_67E18920:				; CODE XREF: sub_67E18880+53j
		bsr	edx, eax
		xor	edx, 1Fh
		mov	[esp+2Ch+var_28], edx
		jnz	short loc_67E18962
		cmp	ebx, ebp
		jbe	short loc_67E18934
		cmp	eax, ecx
		jnb	short loc_67E188D5

loc_67E18934:				; CODE XREF: sub_67E18880+AEj
		xor	edi, edi
		mov	ebp, 1
		jmp	short loc_67E188D9
; ---------------------------------------------------------------------------
		align 10h

loc_67E18940:				; CODE XREF: sub_67E18880+27j
		neg	edx
		mov	esi, 0FFFFFFFFh
		adc	ecx, 0
		neg	ecx
		test	ebp, ebp
		jns	loc_67E188B5

loc_67E18954:				; CODE XREF: sub_67E18880+2Fj
		neg	edi
		not	esi
		adc	ebp, 0
		neg	ebp
		jmp	loc_67E188B5
; ---------------------------------------------------------------------------

loc_67E18962:				; CODE XREF: sub_67E18880+AAj
		movzx	ecx, byte ptr [esp+2Ch+var_28]
		mov	edx, 20h
		sub	edx, [esp+2Ch+var_28]
		shl	eax, cl
		mov	ecx, edx
		mov	[esp+2Ch+var_24], eax
		mov	eax, ebx
		shr	eax, cl
		movzx	ecx, byte ptr [esp+2Ch+var_28]
		or	eax, [esp+2Ch+var_24]
		shl	ebx, cl
		mov	ecx, edx
		mov	[esp+2Ch+var_20], ebx
		mov	ebx, edi
		shr	ebx, cl
		movzx	ecx, byte ptr [esp+2Ch+var_28]
		mov	[esp+2Ch+var_24], eax
		mov	eax, ebp
		shl	edi, cl
		mov	ecx, edx
		shr	eax, cl
		mov	edx, ebx
		or	edi, eax
		mov	eax, edi
		div	[esp+2Ch+var_24]
		mov	ebx, edx
		mov	edi, eax
		mul	[esp+2Ch+var_20]
		cmp	ebx, edx
		jb	short loc_67E189D0
		movzx	ecx, byte ptr [esp+2Ch+var_28]
		shl	ebp, cl
		cmp	ebp, eax
		jnb	short loc_67E189C7
		cmp	ebx, edx
		jz	short loc_67E189D0

loc_67E189C7:				; CODE XREF: sub_67E18880+141j
		mov	ebp, edi
		xor	edi, edi
		jmp	loc_67E188D9
; ---------------------------------------------------------------------------

loc_67E189D0:				; CODE XREF: sub_67E18880+136j
					; sub_67E18880+145j
		lea	ebp, [edi-1]
		xor	edi, edi
		jmp	loc_67E188D9
sub_67E18880	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _putenv]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _strnicmp]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _strdup]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _stricmp]
		align 10h
		mov	eax, [esp+0Ch]
		mov	edx, [esp+8]
		mov	ecx, [esp+4]
		lock cmpxchg [ecx], edx
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_67E18A20
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E18A20	proc near		; CODE XREF: sub_67DC1040+53p
					; sub_67DC1040+C8p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_8]
		mov	edx, [esp+arg_4]
		mov	ecx, [esp+arg_0]
		lock cmpxchg [ecx], edx
		retn	0Ch
sub_67E18A20	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+8]
		mov	edx, [esp+4]
		lock xchg eax, [edx]
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E18A50	proc near		; CODE XREF: sub_67DC1040+1A2p
					; sub_67DC1040+211p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	eax, [esp+arg_4]
		mov	edx, [esp+arg_0]
		lock xchg eax, [edx]
		retn	8
sub_67E18A50	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_67E18A60(char	*, size_t, char	*, char)
sub_67E18A60	proc near		; CODE XREF: .text:67E09702p
					; sub_67E09740+62p ...

DstBuf		= dword	ptr -1Ch
MaxCount	= dword	ptr -18h
Format		= dword	ptr -14h
ArgList		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h

		sub	esp, 1Ch
		lea	eax, [esp+1Ch+arg_C]
		mov	[esp+1Ch+ArgList], eax ; ArgList
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+Format], eax ;	Format
		mov	eax, [esp+1Ch+arg_4]
		mov	[esp+1Ch+MaxCount], eax	; MaxCount
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+DstBuf], eax ;	DstBuf
		call	_vsnprintf
		add	esp, 1Ch
		retn
sub_67E18A60	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+4]
		mov	eax, 0FFFFFFFFh
		lock xadd [edx], eax
		sub	eax, 1
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_67E18AB0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E18AB0	proc near		; CODE XREF: sub_67E0B440+Ap
					; .text:67E18AA1j

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, 0FFFFFFFFh
		lock xadd [edx], eax
		sub	eax, 1
		retn	4
sub_67E18AB0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	edx, [esp+4]
		mov	eax, 1
		lock xadd [edx], eax
		add	eax, 1
		retn
; ---------------------------------------------------------------------------
		jmp	short sub_67E18AF0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_67E18AF0	proc near		; CODE XREF: sub_67E0B460+Ap
					; .text:67E18AE1j

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		mov	eax, 1
		lock xadd [edx], eax
		add	eax, 1
		retn	4
sub_67E18AF0	endp

; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		mov	eax, [esp+14h]
		mov	edx, [esp+10h]
		test	eax, eax
		jz	short loc_67E18B30
		mov	[esp+14h], eax
		mov	[esp+10h], edx
		add	esp, 0Ch
		jmp	loc_67E180E0
; ---------------------------------------------------------------------------
		align 10h

loc_67E18B30:				; CODE XREF: .text:67E18B1Dj
		add	esp, 0Ch
		retn
; ---------------------------------------------------------------------------
		align 10h
		sub	esp, 0Ch
		add	esp, 0Ch
		jmp	loc_67E18040
; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION malloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _amsg_exit]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION free]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _initterm]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strlen]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION strcmp]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fopen]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION fread]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fclose]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION memcpy]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION memmove]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION memset]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strcpy]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION sprintf]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION vsprintf]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION vfprintf]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fprintf]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION fflush]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION realloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION calloc]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION abort]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION getenv]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strtol]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION strtoul]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION srand]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION rand]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _vsnprintf]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION strerror]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strcat]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION sscanf]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strrchr]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION printf]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION puts]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION strncpy]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION exit]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION strchr]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _lock]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION __dllonexit]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _unlock]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION fwrite]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION strncmp]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_67E18CA0	proc near		; DATA XREF: .text:67E18CC4o

var_18		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	sub_67DC1430
		mov	[esp+18h+var_18], offset sub_67DC1480 ;	_onexit_t
		call	sub_67E177C0
		leave
		retn
sub_67E18CA0	endp

; ---------------------------------------------------------------------------
		align 10h
dword_67E18CC0	dd 0FFFFFFFFh		; DATA XREF: sub_67E17DA0-5Br
					; sub_67E17DA0-4Co ...
		dd offset sub_67E18CA0
		dd 0
		dd 0FFFFFFFFh
dword_67E18CD0	dd 4Ch dup(0)		; DATA XREF: .data:off_67E19050o
		dd 80h dup(?)
_text		ends

; Section 2. (virtual address 00059000)
; Virtual size			: 00000064 (	100.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00058200
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 67E19000h
dword_67E19000	dd 0FFFFFFFFh		; DATA XREF: sub_67DC72E0+13o
					; sub_67DC72E0:loc_67DC7315r ...
dword_67E19004	dd 2			; DATA XREF: sub_67DC7620+89w
					; sub_67DC7A30+163w ...
dword_67E19008	dd 1			; DATA XREF: dbus_connection_set_change_sigpipe+Aw
					; sub_67DCCE40+15Er
dword_67E1900C	dd 0FFFFFFFFh		; DATA XREF: sub_67DEA7B0+45r
					; dbus_pending_call_unref-26o ...
off_67E19010	dd offset aNotEnoughMem_1 ; DATA XREF: sub_67DC1510:loc_67DC169Br
					; dbus_address_unescape_value:loc_67DC1847r ...
					; "Not enough memory"
; char *off_67E19014
off_67E19014	dd offset aArgumentsToSWe ; DATA XREF: dbus_bus_remove_match:loc_67DC5DE0r
					; dbus_bus_add_match:loc_67DC5EF7r ...
					; "arguments to	%s() were incorrect, asser"...
dword_67E19018	dd 1			; DATA XREF: sub_67DFABC0+5Fw
dword_67E1901C	dd 0FFFFFFFFh		; DATA XREF: sub_67DFABC0+69r
					; sub_67DFABC0+148w ...
dword_67E19020	dd 1			; DATA XREF: sub_67DFAAC0+Dr
					; sub_67DFAAC0:loc_67DFAAF1w ...
dword_67E19024	dd 1			; DATA XREF: sub_67DFAD60+6Cw
					; sub_67DFAD60+AAw ...
dword_67E19028	dd 1			; DATA XREF: dbus_connection_ref+6Ar
					; sub_67DCB080+5Dr ...
; DWORD	dwTlsIndex
dwTlsIndex	dd 0FFFFFFFFh		; DATA XREF: sub_67E114D0+3r
					; sub_67E114D0+28w ...
		dd offset aGetaddrinfo	; "getaddrinfo"
off_67E19034	dd offset sub_67E16C20	; DATA XREF: sub_67E169F0+3Dr
					; sub_67E169F0+199w
		dd offset aGetnameinfo	; "getnameinfo"
off_67E1903C	dd offset sub_67E16FE0	; DATA XREF: sub_67E169F0+1A5w
		dd offset aFreeaddrinfo	; "freeaddrinfo"
off_67E19044	dd offset sub_67E17220	; DATA XREF: sub_67E169F0+1B1w
dword_67E19048	dd 0FFFFFFFFh		; DATA XREF: sub_67DC1260+1Bw
					; sub_67DC1260+61w
		dd 0FFFFFFFFh
off_67E19050	dd offset dword_67E18CD0 ; DATA	XREF: sub_67E17D10+3r
					; sub_67E17D10+12r ...
dword_67E19054	dd 2			; DATA XREF: TlsCallback_0+4r
					; TlsCallback_0+11w
dword_67E19058	dd 0BB40E64Eh		; DATA XREF: .text:67E17E0Fr
					; sub_67E17E60+3r ...
dword_67E1905C	dd 44BF19B1h		; DATA XREF: .text:67E17E17r
					; sub_67E17E60+21w ...
dword_67E19060	dd 0			; DATA XREF: sub_67DC1430+6r
					; sub_67DC1430+42o
		align 1000h
_data		ends

; Section 3. (virtual address 0005A000)
; Virtual size			: 00019448 ( 103496.)
; Section size in file		: 00019600 ( 103936.)
; Offset to raw	data for section: 00058400
; Flags	40600040: Data Readable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 67E1A000h
; CHAR ModuleName[]
ModuleName	db 'libgcj_s.dll',0     ; DATA XREF: sub_67DC1430+Fo
; CHAR ProcName[]
ProcName	db '_Jv_RegisterClasses',0 ; DATA XREF: sub_67DC1430+2Ao
		align 4
; char aServerAddressO[]
aServerAddressO	db 'Server address of type %s was missing argument %s',0
					; DATA XREF: sub_67DC14A0+20o
		align 4
; char aOrg_freedesk_0[]
aOrg_freedesk_0	db 'org.freedesktop.DBus.Error.BadAddress',0 ; DATA XREF: sub_67DC14A0+28o
					; sub_67DC14A0+4Co ...
		align 10h
; char aCouldNotParseS[]
aCouldNotParseS	db 'Could not parse server address: %s',0 ; DATA XREF: sub_67DC14A0+44o
		align 4
; char aInDBusAddres_0[]
aInDBusAddres_0	db 'In D-Bus address, percent character was not followed by two hex d'
					; DATA XREF: sub_67DC1510+1FCo
		db 'igits',0
		align 4
; char aInDBusAddressP[]
aInDBusAddressP	db 'In D-Bus address, percent character was followed by characters ot'
					; DATA XREF: sub_67DC1510+1DBo
		db 'her than hex digits',0
		align 4
; char aInDBusAddressC[]
aInDBusAddressC	db 'In D-Bus address, character ',27h,'%c',27h,' should have been escaped',0Ah
					; DATA XREF: sub_67DC1510+1BAo
		db 0
		align 10h
; char aOrg_freedeskto[]
aOrg_freedeskto	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67DC1510+192o
					; dbus_address_unescape_value+11Co ...
aRBuildWin32lib	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DC1510+148o
					; dbus_address_unescape_value+9Ao ...
		db 's-address.c',0
		align 4
aRetErrorNullDb	db 'ret || error == NULL || dbus_error_is_set (error)',0
					; DATA XREF: sub_67DC1510+150o
		align 4
aRetNullErrorNu	db 'ret != NULL || error == NULL || dbus_error_is_set (error)',0
					; DATA XREF: dbus_address_unescape_value+A2o
		align 4
aErrorNullDbus_	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: dbus_parse_address+4Eo
; char aEmptyAddressS[]
aEmptyAddressS	db 'Empty address ',27h,'%s',27h,0 ; DATA XREF: dbus_parse_address+3F4o
asc_67E1A2A7	db ';',0                ; DATA XREF: dbus_parse_address+DAo
asc_67E1A2A9	db ':',0                ; DATA XREF: dbus_parse_address+102o
		align 4
; char aAddressDoesNot[]
aAddressDoesNot	db 'Address does not contain a colon',0
					; DATA XREF: dbus_parse_address:loc_67DC1EBBo
asc_67E1A2CD	db ',',0                ; DATA XREF: dbus_parse_address+183o
asc_67E1A2CF	db '=',0                ; DATA XREF: dbus_parse_address+1B3o
		align 4
; char aCharacterNotFo[]
aCharacterNotFo	db 27h,'=',27h,' character not found or has no value following it',0
					; DATA XREF: dbus_parse_address:loc_67DC1D48o
		align 4
aErrorNullDbu_0	db 'error == NULL || dbus_error_is_set (error)',0
					; DATA XREF: dbus_parse_address+510o
aValuesNull	db 'values != NULL',0   ; DATA XREF: dbus_address_entry_get_value+74o
aDbus_address_u	db 'dbus_address_unescape_value',0
					; DATA XREF: dbus_address_unescape_value+8Ao
aAppend_unescap	db 'append_unescaped_value',0 ; DATA XREF: sub_67DC1510:loc_67DC1648o
aDbus_parse_add	db 'dbus_parse_address',0 ; DATA XREF: dbus_parse_address+36o
					; dbus_parse_address:loc_67DC1E28o
aDbus_address_e	db 'dbus_address_entry_get_value',0
					; DATA XREF: dbus_address_entry_get_value+5Co
		align 20h
; char aRBuildWin32_17[]
aRBuildWin32_17	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DC22C0+18o
					; sub_67DC22C0+4Do ...
		db 's-auth.c',0
aBufferAuthInco	db 'buffer == &auth->incoming',0 ; DATA XREF: sub_67DC22C0+27o
aAuthBuffer_out	db 'auth->buffer_outstanding',0 ; DATA XREF: sub_67DC22C0+55o
aAuthNull	db 'auth != NULL',0     ; DATA XREF: sub_67DC2340+2Ao
					; sub_67DC23D0+2Fo ...
aAuthBuffer_o_0	db '!auth->buffer_outstanding',0 ; DATA XREF: sub_67DC2340+4Fo
aStrNull_1	db 'str != NULL',0      ; DATA XREF: sub_67DC23D0+61o
aDbus_auth_is_c	db 'DBUS_AUTH_IS_CLIENT (auth)',0 ; DATA XREF: sub_67DC24C0+22o
		align 4
a_dbus_credenti	db '_dbus_credentials_are_empty (auth->authorized_identity)',0
					; DATA XREF: sub_67DC2530+34o
aPlaintextEncod	db 'plaintext != encoded',0 ; DATA XREF: sub_67DC25D0+3Do
					; sub_67DC26C0+3Do
		align 4
; char aSGoingFromStat[]
aSGoingFromStat	db '%s: going from state %s to state %s',0Ah,0 ; DATA XREF: sub_67DC2840+1Ao
					; sub_67DC4660+196o ...
		align 4
; char aSShuttingDownM[]
aSShuttingDownM	db '%s: Shutting down mechanism %s',0Ah,0 ; DATA XREF: sub_67DC28A0+3Fo
					; sub_67DC59A0+C0o
; char aSSentDBytesOfS[]
aSSentDBytesOfS	db '%s: Sent %d bytes of: %s',0Ah,0 ; DATA XREF: sub_67DC2940+2Do
; char aRejected[]
aRejected	db 'REJECTED',0         ; DATA XREF: sub_67DC2A10:loc_67DC2A35o
					; .rdata:off_67E1B140o
; char asc_67E1A547[]
asc_67E1A547	db ' ',0                ; DATA XREF: sub_67DC2A10:loc_67DC2A7Ao
					; sub_67DC2C10+75o ...
; char asc_67E1A549[]
asc_67E1A549	db 0Dh,0Ah,0		; DATA XREF: sub_67DC2A10:loc_67DC2AA0o
					; sub_67DC2B60:loc_67DC2BE0o ...
aDbus_auth_is_s	db 'DBUS_AUTH_IS_SERVER (auth)',0 ; DATA XREF: sub_67DC2A10+ECo
					; sub_67DC59A0+139o
; char aOk_0[]
aOk_0		db 'OK ',0              ; DATA XREF: sub_67DC2B60+1Co
; char aAuth[]
aAuth		db 'AUTH ',0            ; DATA XREF: sub_67DC2C10:loc_67DC2C50o
; char aLibdbus1_4_24[]
aLibdbus1_4_24	db 'libdbus 1.4.24',0   ; DATA XREF: sub_67DC2D20:loc_67DC2D50o
; char aData_0[]
aData_0		db 'DATA',0Dh,0Ah,0     ; DATA XREF: sub_67DC2DC0+26o
; char aData_1[]
aData_1		db 'DATA ',0            ; DATA XREF: sub_67DC2DC0+51o
		align 10h
; char aSReceivedInval[]
aSReceivedInval	db '%s: Received invalid UTF-8 trace data from ANONYMOUS client',0Ah,0
					; DATA XREF: sub_67DC2E90+A4o
		align 10h
; char aSAnonymousClie[]
aSAnonymousClie	db '%s: ANONYMOUS client sent trace string: ',27h,'%s',27h,0Ah,0
					; DATA XREF: sub_67DC2E90+48o
		align 10h
; char aSAuthenticated[]
aSAuthenticated	db '%s: authenticated client as anonymous',0Ah,0
					; DATA XREF: sub_67DC2E90+E6o
aInvalidHexEnco	db 'Invalid hex encoding',0 ; DATA XREF: sub_67DC2FB0+82o
; char aErrorS[]
aErrorS		db 'ERROR "%s"',0Dh,0Ah,0 ; DATA XREF: sub_67DC2FB0+8Ao
					; sub_67DC3290+5Ao ...
; char aSDataS[]
aSDataS		db '%s: data: ',27h,'%s',27h,0Ah,0 ; DATA XREF: sub_67DC2FB0+104o
aAuthKeyringNul	db 'auth->keyring != NULL',0 ; DATA XREF: sub_67DC30E0+37o
					; sub_67DC3290+2F4o ...
; char asc_67E1A66F[]
asc_67E1A66F	db ':',0                ; DATA XREF: sub_67DC30E0:loc_67DC31E8o
					; sub_67DC30E0+147o
		align 4
aServerDidNotSe	db 'Server did not send context/ID/challenge properly',0
					; DATA XREF: sub_67DC3290+52o
					; sub_67DC3290+193o
		align 4
aServerSentInva	db 'Server sent invalid cookie context',0 ; DATA XREF: sub_67DC3290+257o
		align 4
aCouldNotParseC	db 'Could not parse cookie ID as an integer',0
					; DATA XREF: sub_67DC3290+2A4o
aEmptyServerCha	db 'Empty server challenge string',0 ; DATA XREF: sub_67DC3290:loc_67DC35D4o
		align 4
; char aOrg_freedes_25[]
aOrg_freedes_25	db 'org.freedesktop.DBus.Error.NoMemory',0
					; DATA XREF: sub_67DC3290:loc_67DC36FFo
					; sub_67DC39B0:loc_67DC3FF3o
aErrorNullDb_27	db '(&error) == NULL || dbus_error_is_set ((&error))',0
					; DATA XREF: sub_67DC3290+4EFo
					; sub_67DC39B0+4F7o ...
		align 4
; char aSErrorLoadingK[]
aSErrorLoadingK	db '%s: Error loading keyring: %s',0Ah,0 ; DATA XREF: sub_67DC3290+518o
					; sub_67DC39B0+6A9o
aCouldNotLoadCo	db 'Could not load cookie file',0 ; DATA XREF: sub_67DC3290+540o
aDbus_error_i_0	db '!dbus_error_is_set (&error)',0 ; DATA XREF: sub_67DC3290+3EFo
					; sub_67DC39B0+267o ...
		align 4
aDonTHaveTheReq	db 'Don',27h,'t have the requested cookie ID',0
					; DATA XREF: sub_67DC3290+4A9o
		align 4
; char aSClientTriedTo[]
aSClientTriedTo	db '%s: client tried to send auth identity, but we already have one',0Ah
					; DATA XREF: sub_67DC39B0+FFo
					; sub_67DC4130+48o
		db 0
		align 4
; char aSDidNotGetAVal[]
aSDidNotGetAVal	db '%s: Did not get a valid username from client',0Ah,0
					; DATA XREF: sub_67DC39B0+4A3o
		align 4
; char aSCouldNotGetAC[]
aSCouldNotGetAC	db '%s: Could not get a cookie ID to send to client: %s',0Ah,0
					; DATA XREF: sub_67DC39B0+51Ao
		align 4
; char aSNoSpaceSepara[]
aSNoSpaceSepara	db '%s: no space separator in client response',0Ah,0
					; DATA XREF: sub_67DC39B0+95o
		align 10h
; char aSZeroLengthCli[]
aSZeroLengthCli	db '%s: zero-length client challenge or hash',0Ah,0
					; DATA XREF: sub_67DC39B0+45Co
		align 4
; char aSAuthenticat_0[]
aSAuthenticat_0	db '%s: authenticated client using DBUS_COOKIE_SHA1',0Ah,0
					; DATA XREF: sub_67DC39B0+74Eo
		align 10h
aSNoCredentials	db '%s: no credentials, mechanism EXTERNAL can',27h,'t authenticate',0Ah,0
					; DATA XREF: sub_67DC4130+1E4o
		align 4
; char aSSendingEmptyC[]
aSSendingEmptyC	db '%s: sending empty challenge asking client for auth identity',0Ah,0
					; DATA XREF: sub_67DC4130+287o
		align 4
; char aSCouldNotGetCr[]
aSCouldNotGetCr	db '%s: could not get credentials from uid string',0Ah,0
					; DATA XREF: sub_67DC4130+2D3o
		align 4
; char aSDesiredUserSI[]
aSDesiredUserSI	db '%s: desired user %s is no good',0Ah,0 ; DATA XREF: sub_67DC4130+233o
; char aSAuthenticat_1[]
aSAuthenticat_1	db '%s: authenticated client based on socket credentials',0Ah,0
					; DATA XREF: sub_67DC4130+1AFo
		align 4
aSDesiredIdenti	db '%s: desired identity not found in socket credentials',0Ah,0
					; DATA XREF: sub_67DC4130+263o
; char aOrg_freedes_40[]
aOrg_freedes_40	db 'org_freedesktop_general',0 ; DATA XREF: sub_67DC4430+A2o
		align 4
; char aSDisconnecting[]
aSDisconnecting	db '%s: Disconnecting due to excessive data buffered in auth phase',0Ah,0
					; DATA XREF: sub_67DC4660+1C8o
; char aSCommandContai[]
aSCommandContai	db '%s: Command contained non-ASCII chars or embedded nul',0Ah,0
					; DATA XREF: sub_67DC4660+22Fo
aCommandContain	db 'Command contained non-ASCII',0 ; DATA XREF: sub_67DC4660+257o
; char aSGotCommandS[]
aSGotCommandS	db '%s: got command "%s"',0Ah,0 ; DATA XREF: sub_67DC4660+2F5o
		align 10h
aSentAuthWhileE	db 'Sent AUTH while expecting BEGIN',0
					; DATA XREF: sub_67DC4B70:loc_67DC4C40o
aSentDataWhileE	db 'Sent DATA while expecting BEGIN',0
					; DATA XREF: sub_67DC4B70:loc_67DC4C60o
aAuthUnix_fd_po	db 'auth->unix_fd_possible',0 ; DATA XREF: sub_67DC4B70+5Do
					; sub_67DC5830+58o ...
; char aAgreedToUnixFd[]
aAgreedToUnixFd	db 'Agreed to UNIX FD passing',0Ah,0 ; DATA XREF: sub_67DC4B70+78o
; char aAgree_unix_f_0[]
aAgree_unix_f_0	db 'AGREE_UNIX_FD',0Dh,0Ah,0 ; DATA XREF: sub_67DC4B70+9Fo
		align 4
aUnixFdPassingN	db 'Unix FD passing not supported, not authenticated or otherwise not'
					; DATA XREF: sub_67DC4B70:loc_67DC4CC0o
		db ' possible',0
aUnknownCommand	db 'Unknown command',0  ; DATA XREF: sub_67DC4B70:loc_67DC4B81o
					; sub_67DC4CD0+30o ...
		align 10h
off_67E1AC00	dd offset loc_67DC4C40	; DATA XREF: sub_67DC4B70:loc_67DC4BA1r
		dd offset loc_67DC4C50	; jump table for switch	statement
		dd offset loc_67DC4C60
		dd offset loc_67DC4C70
		dd offset loc_67DC4B81
		dd offset loc_67DC4B81
		dd offset loc_67DC4C50
		dd offset loc_67DC4B81
		dd offset loc_67DC4BA8
; char aSTryingMechani[]
aSTryingMechani	db '%s: Trying mechanism %s',0Ah,0 ; DATA XREF: sub_67DC4CD0+2D8o
					; sub_67DC50C0+57o
; char aSUnsupportedMe[]
aSUnsupportedMe	db '%s: Unsupported mechanism %s',0Ah,0 ; DATA XREF: sub_67DC4CD0+229o
		align 4
aNotCurrentlyIn	db 'Not currently in an auth conversation',0 ; DATA XREF: sub_67DC4CD0+AAo
aNeedToAuthenti	db 'Need to authenticate first',0 ; DATA XREF: sub_67DC4CD0+6Ao
					; sub_67DC4FF0:loc_67DC5030o
		align 10h
off_67E1ACA0	dd offset loc_67DC4D54	; DATA XREF: sub_67DC4CD0:loc_67DC4D30r
		dd offset loc_67DC4D77	; jump table for switch	statement
		dd offset loc_67DC4D77
		dd offset loc_67DC4D94
		dd offset loc_67DC4CFD
		dd offset loc_67DC4CFD
		dd offset loc_67DC4DE2
		dd offset loc_67DC4CFD
		dd offset loc_67DC4D37
aSentAuthWhileA	db 'Sent AUTH while another AUTH in progress',0
					; DATA XREF: sub_67DC4FF0:loc_67DC5040o
		align 10h
off_67E1ACF0	dd offset loc_67DC5040	; DATA XREF: sub_67DC4FF0:loc_67DC5025r
		dd offset loc_67DC5050	; jump table for switch	statement
		dd offset loc_67DC5060
		dd offset loc_67DC5071
		dd offset loc_67DC5005
		dd offset loc_67DC5005
		dd offset loc_67DC5050
		dd offset loc_67DC5005
		dd offset loc_67DC5030
; char aSAddingMechani[]
aSAddingMechani	db '%s: Adding mechanism %s to list we will try',0Ah,0
					; DATA XREF: sub_67DC50C0+2CEo
		align 4
; char aSAlreadyTriedM[]
aSAlreadyTriedM	db '%s: Already tried mechanism %s; not adding to list we will try',0Ah,0
					; DATA XREF: sub_67DC50C0+341o
; char aSServerOffered[]
aSServerOffered	db '%s: Server offered mechanism "%s" that we don',27h,'t know how to us'
					; DATA XREF: sub_67DC50C0+191o
		db 'e',0Ah,0
		align 4
; char aSDisconnecti_0[]
aSDisconnecti_0	db '%s: Disconnecting because we are out of mechanisms to try using',0Ah
					; DATA XREF: sub_67DC50C0+93o
		db 0
aAuthMechNull	db 'auth->mech != NULL',0 ; DATA XREF: sub_67DC5440+35o
a_dbus_strin_42	db '_dbus_string_get_length (& DBUS_AUTH_CLIENT (auth)->guid_from_ser'
					; DATA XREF: sub_67DC5440+F6o
		db 'ver) == 0',0
		align 4
; char aBadGuidFromSer[]
aBadGuidFromSer	db 'Bad GUID from server, parsed %d bytes and had %d bytes from serve'
					; DATA XREF: sub_67DC5440+258o
		db 'r',0Ah,0
; char aGotGuidSFromTh[]
aGotGuidSFromTh	db 'Got GUID ',27h,'%s',27h,' from the server',0Ah,0
					; DATA XREF: sub_67DC5440+1E6o
; char aNegotiate_un_0[]
aNegotiate_un_0	db 'NEGOTIATE_UNIX_FD',0Dh,0Ah,0 ; DATA XREF: sub_67DC5440+21Eo
		align 10h
; char aNotNegotiating[]
aNotNegotiating	db 'Not negotiating unix fd passing, since not possible',0Ah,0
					; DATA XREF: sub_67DC5440:loc_67DC572Do
; char aBegin_0[]
aBegin_0	db 'BEGIN',0Dh,0Ah,0    ; DATA XREF: sub_67DC5440+314o
					; sub_67DC5830+A3o
; char aCancel_0[]
aCancel_0	db 'CANCEL',0Dh,0Ah,0   ; DATA XREF: sub_67DC5440+9Eo
		align 4
aSuccessfullyNe	db 'Successfully negotiated UNIX FD passing',0Ah,0
					; DATA XREF: sub_67DC5830+14Co
		align 4
; char aFailedToNegoti[]
aFailedToNegoti	db 'Failed to negotiate UNIX FD passing',0Ah,0 ; DATA XREF: sub_67DC5830+7Co
aAuthRefcount0	db 'auth->refcount > 0',0 ; DATA XREF: sub_67DC59A0+52o
aClient		db 'client',0           ; DATA XREF: sub_67DC2190+17o
					; sub_67DC21D0+17o ...
aAuthenticated	db 'Authenticated',0    ; DATA XREF: .rdata:off_67E1AFA4o
		align 4
off_67E1AFA4	dd offset aAuthenticated ; DATA	XREF: sub_67DC2190+4o
					; sub_67DC21D0+4o ...
					; "Authenticated"
		align 20h
a_dbus_auth_g_0	db '_dbus_auth_get_guid_from_server',0 ; DATA XREF: sub_67DC24C0+Ao
a_dbus_auth_get	db '_dbus_auth_get_identity',0 ; DATA XREF: sub_67DC2530+1Co
a_dbus_auth_dec	db '_dbus_auth_decode_data',0 ; DATA XREF: sub_67DC25D0+1Do
a_dbus_auth_enc	db '_dbus_auth_encode_data',0 ; DATA XREF: sub_67DC26C0+1Do
a_dbus_auth_ret	db '_dbus_auth_return_buffer',0 ; DATA XREF: sub_67DC22C0+8o
					; sub_67DC22C0+3Do
a_dbus_auth_g_1	db '_dbus_auth_get_buffer',0 ; DATA XREF: sub_67DC2340+Ao
					; sub_67DC2340+37o
a_dbus_auth_byt	db '_dbus_auth_bytes_sent',0 ; DATA XREF: sub_67DC2940+35o
a_dbus_auth_g_2	db '_dbus_auth_get_bytes_to_send',0 ; DATA XREF: sub_67DC23D0+Fo
					; sub_67DC23D0+49o
aNeeddisconnect	db 'NeedDisconnect',0   ; DATA XREF: .rdata:off_67E1B098o
		align 4
off_67E1B098	dd offset aNeeddisconnect ; DATA XREF: sub_67DC2A10+11Do
					; sub_67DC4660+E5o ...
					; "NeedDisconnect"
		align 10h
a_dbus_auth_do_	db '_dbus_auth_do_work',0 ; DATA XREF: sub_67DC4660+1D0o
aGoto_state	db 'goto_state',0       ; DATA XREF: sub_67DC2840+22o
					; sub_67DC4660+19Eo ...
aProcess_comman	db 'process_command',0  ; DATA XREF: sub_67DC4660+237o
					; sub_67DC4660+2FDo
aAuth_0		db 'AUTH',0             ; DATA XREF: .rdata:off_67E1B120o
aCancel		db 'CANCEL',0           ; DATA XREF: .rdata:off_67E1B128o
aData		db 'DATA',0             ; DATA XREF: .rdata:off_67E1B130o
aBegin		db 'BEGIN',0            ; DATA XREF: .rdata:off_67E1B138o
aOk		db 'OK',0               ; DATA XREF: .rdata:off_67E1B148o
aError_1	db 'ERROR',0            ; DATA XREF: .rdata:off_67E1B150o
aNegotiate_unix	db 'NEGOTIATE_UNIX_FD',0 ; DATA XREF: .rdata:off_67E1B158o
aAgree_unix_fd	db 'AGREE_UNIX_FD',0    ; DATA XREF: .rdata:off_67E1B160o
		align 20h
off_67E1B120	dd offset aAuth_0	; DATA XREF: sub_67DC4660+38Dr
					; "AUTH"
dword_67E1B124	dd 0			; DATA XREF: sub_67DC4660:loc_67DC4B5Dr
off_67E1B128	dd offset aCancel	; DATA XREF: sub_67DC4660+3ACr
					; "CANCEL"
		dd 1
off_67E1B130	dd offset aData		; DATA XREF: sub_67DC4660+3CFr
					; "DATA"
		dd 2
off_67E1B138	dd offset aBegin	; DATA XREF: sub_67DC4660+3F2r
					; "BEGIN"
		dd 3
off_67E1B140	dd offset aRejected	; DATA XREF: sub_67DC4660+414r
					; "REJECTED"
		dd 4
off_67E1B148	dd offset aOk		; DATA XREF: sub_67DC4660+437r
					; "OK"
		dd 5
off_67E1B150	dd offset aError_1	; DATA XREF: sub_67DC4660+45Ar
					; "ERROR"
		dd 6
off_67E1B158	dd offset aNegotiate_unix ; DATA XREF: sub_67DC4660+47Cr
					; "NEGOTIATE_UNIX_FD"
		dd 8
off_67E1B160	dd offset aAgree_unix_fd ; DATA	XREF: sub_67DC4660+49Br
					; "AGREE_UNIX_FD"
		dd 9
aServer		db 'server',0           ; DATA XREF: sub_67DC2A10+F4o
					; sub_67DC4580+56o ...
a_dbus_auth_unr	db '_dbus_auth_unref',0 ; DATA XREF: sub_67DC59A0+Bo
					; sub_67DC59A0+3Ao ...
aShutdown_mech	db 'shutdown_mech',0    ; DATA XREF: sub_67DC28A0+47o
					; sub_67DC59A0+C8o
a_dbus_auth_ref	db '_dbus_auth_ref',0   ; DATA XREF: .text:67DC247Ao
aNeedsendauth	db 'NeedSendAuth',0     ; DATA XREF: .rdata:off_67E1B1ACo
		align 4
off_67E1B1AC	dd offset aNeedsendauth	; DATA XREF: sub_67DC5BB0+50o
					; "NeedSendAuth"
		dd 0
aExternal	db 'EXTERNAL',0         ; DATA XREF: .rdata:off_67E1B1E0o
aDbus_cookie_sh	db 'DBUS_COOKIE_SHA1',0 ; DATA XREF: .rdata:off_67E1B208o
aAnonymous	db 'ANONYMOUS',0        ; DATA XREF: .rdata:67E1B230o
		align 10h
; char *off_67E1B1E0
off_67E1B1E0	dd offset aExternal	; DATA XREF: sub_67DC2A10+39r
					; sub_67DC4CD0:loc_67DC4F4Ar ...
					; "EXTERNAL"
		dd offset sub_67DC4130
		align 10h
		dd offset nullsub_2
		dd offset sub_67DC3920
		dd offset sub_67DC2120
		dd 2 dup(0)
		dd offset nullsub_3
off_67E1B208	dd offset aDbus_cookie_sh ; DATA XREF: sub_67DC2A10+43o
					; sub_67DC4CD0+283o ...
					; "DBUS_COOKIE_SHA1"
		dd offset sub_67DC39B0
		dd 2 dup(0)
		dd offset sub_67DC2810
		dd offset sub_67DC38A0
		dd offset sub_67DC3290
		dd 2 dup(0)
		dd offset sub_67DC27E0
		dd offset aAnonymous	; "ANONYMOUS"
		dd offset sub_67DC2E90
		align 10h
		dd offset nullsub_4
		dd offset sub_67DC2D20
		dd offset sub_67DC2150
		dd 2 dup(0)
		dd offset nullsub_5
		align 40h
aHandle_server_	db 'handle_server_data_anonymous_mech',0 ; DATA XREF: sub_67DC2E90+50o
					; sub_67DC2E90+ACo ...
aWaitingforauth	db 'WaitingForAuth',0   ; DATA XREF: .rdata:off_67E1B2B4o
		align 4
off_67E1B2B4	dd offset aWaitingforauth ; DATA XREF: sub_67DC2A10:loc_67DC2B4Bo
					; sub_67DC4580+5Do
					; "WaitingForAuth"
		dd offset sub_67DC4CD0
aSend_rejected	db 'send_rejected',0    ; DATA XREF: sub_67DC2A10+D4o
aHandle_auth	db 'handle_auth',0      ; DATA XREF: sub_67DC4CD0+231o
					; sub_67DC4CD0+2E0o
aProcess_data	db 'process_data',0     ; DATA XREF: sub_67DC2FB0+10Co
aWaitingforbegi	db 'WaitingForBegin',0  ; DATA XREF: .rdata:off_67E1B2F4o
		align 4
off_67E1B2F4	dd offset aWaitingforbegi ; DATA XREF: sub_67DC2B60+96o
					; sub_67DC4B70+BDo
					; "WaitingForBegin"
		dd offset sub_67DC4B70
aSend_agree_uni	db 'send_agree_unix_fd',0 ; DATA XREF: sub_67DC4B70+45o
					; sub_67DC4B70+80o
		align 20h
aHandle_client_	db 'handle_client_data_cookie_sha1_mech',0 ; DATA XREF: sub_67DC3290+2DCo
					; sub_67DC3290+3D7o ...
aSha1_compute_h	db 'sha1_compute_hash',0 ; DATA XREF: sub_67DC30E0+1Fo
aWaitingfordata	db 'WaitingForData',0   ; DATA XREF: .rdata:off_67E1B368o
					; .rdata:off_67E1B424o
		align 4
off_67E1B368	dd offset aWaitingfordata ; DATA XREF: sub_67DC39B0+39Bo
					; sub_67DC4130+2B1o
					; "WaitingForData"
		dd offset sub_67DC4FF0
		align 20h
aSha1_handle_fi	db 'sha1_handle_first_client_response',0 ; DATA XREF: sub_67DC39B0+107o
					; sub_67DC39B0+200o ...
		align 20h
aSha1_handle_se	db 'sha1_handle_second_client_response',0 ; DATA XREF: sub_67DC39B0+9Do
					; sub_67DC39B0+464o ...
		align 20h
aHandle_serve_0	db 'handle_server_data_external_mech',0 ; DATA XREF: sub_67DC4130+50o
					; sub_67DC4130+1B7o ...
		align 4
off_67E1B424	dd offset aWaitingfordata ; DATA XREF: sub_67DC2C10+E3o
					; "WaitingForData"
		dd offset sub_67DC5440
		align 20h
aHandle_clien_0	db 'handle_client_state_waiting_for_data',0 ; DATA XREF: sub_67DC5440+1Do
aProcess_reject	db 'process_rejected',0 ; DATA XREF: sub_67DC50C0+5Fo
					; sub_67DC50C0+9Bo
aRecord_mechani	db 'record_mechanisms',0 ; DATA XREF: sub_67DC50C0+199o
					; sub_67DC50C0+2D6o ...
aProcess_ok	db 'process_ok',0       ; DATA XREF: sub_67DC5440+DEo
					; sub_67DC5440+1EEo ...
aWaitingforagre	db 'WaitingForAgreeUnixFD',0 ; DATA XREF: .rdata:off_67E1B4ACo
		align 4
off_67E1B4AC	dd offset aWaitingforagre ; DATA XREF: sub_67DC5440+238o
					; "WaitingForAgreeUnixFD"
		dd offset sub_67DC5830
		align 10h
aHandle_clien_1	db 'handle_client_state_waiting_for_agree_unix_fd',0
					; DATA XREF: sub_67DC5830:loc_67DC5870o
					; sub_67DC5830+84o ...
aWaitingforreje	db 'WaitingForReject',0 ; DATA XREF: .rdata:off_67E1B500o
		align 10h
off_67E1B500	dd offset aWaitingforreje ; DATA XREF: sub_67DC5440+B8o
					; "WaitingForReject"
		dd offset sub_67DC57C0
		align 20h
; char aRBuildWin32l_0[]
aRBuildWin32l_0	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DC5C60+4Bo
					; dbus_bus_remove_match+19o ...
		db 's-bus.c',0
		align 4
aErrorNullDbu_1	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DC5C60+53o
					; dbus_bus_start_service_by_name+164o ...
		align 4
aConstChar_dbus	db '(*(const char*)_DBUS_FUNCTION_NAME) != ',27h,'_',27h,0
					; DATA XREF: dbus_bus_remove_match+21o
					; dbus_bus_add_match+21o ...
aRuleNull	db 'rule != NULL',0     ; DATA XREF: dbus_bus_remove_match+E5o
					; dbus_bus_add_match+ECo
; char aRemovematch[]
aRemovematch	db 'RemoveMatch',0      ; DATA XREF: dbus_bus_remove_match+41o
; char aOrg_freedesk_1[]
aOrg_freedesk_1	db 'org.freedesktop.DBus',0 ; DATA XREF: dbus_bus_remove_match+49o
					; dbus_bus_remove_match+59o ...
; char aOrgFreedesktop[]
aOrgFreedesktop	db '/org/freedesktop/DBus',0 ; DATA XREF: dbus_bus_remove_match+51o
					; dbus_bus_add_match+51o ...
		align 4
aOrg_freedesk_2	db 'org.freedesktop.DBus.Error.NoMemory',0
					; DATA XREF: dbus_bus_remove_match+B6o
					; dbus_bus_add_match+C0o ...
; char aAddmatch[]
aAddmatch	db 'AddMatch',0         ; DATA XREF: dbus_bus_add_match+41o
aConnectionNull	db 'connection != NULL',0 ; DATA XREF: dbus_bus_start_service_by_name+266o
					; dbus_bus_name_has_owner+2C0o	...
a_dbus_check_is	db '_dbus_check_is_valid_bus_name (name)',0
					; DATA XREF: dbus_bus_start_service_by_name+1C7o
					; dbus_bus_name_has_owner+210o	...
; char aStartserviceby[]
aStartserviceby	db 'StartServiceByName',0 ; DATA XREF: dbus_bus_start_service_by_name+93o
aNameNull	db 'name != NULL',0     ; DATA XREF: dbus_bus_name_has_owner+2E0o
					; dbus_bus_release_name+230o ...
		align 4
aErrorNullDbu_2	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: dbus_bus_name_has_owner+300o
					; dbus_bus_release_name+250o ...
; char aNamehasowner[]
aNamehasowner	db 'NameHasOwner',0     ; DATA XREF: dbus_bus_name_has_owner:loc_67DC630Ao
; char aReleasename[]
aReleasename	db 'ReleaseName',0      ; DATA XREF: dbus_bus_release_name:loc_67DC665Ao
; char aRequestname[]
aRequestname	db 'RequestName',0      ; DATA XREF: dbus_bus_request_name:loc_67DC69DAo
; char aGetconnectionu[]
aGetconnectionu	db 'GetConnectionUnixUser',0
					; DATA XREF: dbus_bus_get_unix_user:loc_67DC6DD0o
; char aGetid[]
aGetid		db 'GetId',0            ; DATA XREF: dbus_bus_get_id:loc_67DC7062o
aUnique_nameNul	db 'unique_name != NULL',0 ; DATA XREF: dbus_bus_set_unique_name+141o
aBdUnique_nameN	db 'bd->unique_name == NULL',0 ; DATA XREF: dbus_bus_set_unique_name+B5o
		align 4
; char aDbus_shutdownC[]
aDbus_shutdownC	db 'dbus_shutdown() called but connections were still live. This prob'
					; DATA XREF: sub_67DC7620+Do
					; sub_67DC7620+39o ...
		db 'ably means the application did not drop all its references to bus'
		db ' connections.',0Ah,0
		align 4
; char aIgnoringAttemp[]
aIgnoringAttemp	db 'Ignoring attempt to register the same DBusConnection %s with the '
					; DATA XREF: dbus_bus_register+BDo
		db 'message bus a second time.',0Ah,0
; char aHello[]
aHello		db 'Hello',0            ; DATA XREF: dbus_bus_register:loc_67DC7805o
aConnection_pNu	db '*connection_p == NULL',0 ; DATA XREF: sub_67DC79C0+23o
					; sub_67DC7A30+4EEo
		align 4
aType0TypeN_bus	db 'type >= 0 && type < N_BUS_TYPES',0 ; DATA XREF: sub_67DC7A30+344o
; char aFillingInSyste[]
aFillingInSyste	db 'Filling in system bus address...',0Ah,0
					; DATA XREF: sub_67DC7A30:loc_67DC7E45o
aDbus_system_bu	db 'DBUS_SYSTEM_BUS_ADDRESS',0 ; DATA XREF: sub_67DC7A30+439o
; char aNonceTcp[]
aNonceTcp	db 'nonce-tcp:',0       ; DATA XREF: sub_67DC7A30+45Do
		align 4
; char aUsedDefaultSys[]
aUsedDefaultSys	db '  used default system bus "%s"',0Ah,0 ; DATA XREF: sub_67DC7A30+47Ao
; char aUsedEnvVarSyst[]
aUsedEnvVarSyst	db '  used env var system bus "%s"',0Ah,0 ; DATA XREF: sub_67DC7A30+CFo
; char aFillingInSessi[]
aFillingInSessi	db 'Filling in session bus address...',0Ah,0
					; DATA XREF: sub_67DC7A30:loc_67DC7ED3o
; char aDbus_session_b[]
aDbus_session_b	db 'DBUS_SESSION_BUS_ADDRESS',0 ; DATA XREF: sub_67DC7A30+4FBo
; char aDynamicSession[]
aDynamicSession	db 'Dynamic session lookup supported but failed: %s',0Ah,0
					; DATA XREF: sub_67DC7A30+767o
		align 4
; char aDynamicSessi_0[]
aDynamicSessi_0	db 'Dynamic session lookup supported but failed silently',0Ah,0
					; DATA XREF: sub_67DC7A30:loc_67DC81B4o
; char aAutolaunchScop[]
aAutolaunchScop	db 'autolaunch:scope=install-path',0 ; DATA XREF: sub_67DC7A30+723o
; char aFillingInActiv[]
aFillingInActiv	db 'Filling in activation bus address...',0Ah,0
					; DATA XREF: sub_67DC7A30:loc_67DC7F80o
aDbus_starter_a	db 'DBUS_STARTER_ADDRESS',0 ; DATA XREF: sub_67DC7A30+574o
aNoneSet	db 'none set',0         ; DATA XREF: sub_67DC7A30:loc_67DC80BBo
; char aS[]
aS		db '  "%s"',0Ah,0       ; DATA XREF: sub_67DC7A30+525o
					; sub_67DC7A30+59Co
; char aDbus_starter_b[]
aDbus_starter_b	db 'DBUS_STARTER_BUS_TYPE',0 ; DATA XREF: sub_67DC7A30:loc_67DC7B3Fo
		align 4
; char aBusActivationT[]
aBusActivationT	db 'Bus activation type was set to "%s"',0Ah,0
					; DATA XREF: sub_67DC7A30+12Co
aSystem		db 'system',0           ; DATA XREF: sub_67DC7A30+123o
aSession	db 'session',0          ; DATA XREF: sub_67DC7A30:loc_67DC7DA0o
; char aDbus_activatio[]
aDbus_activatio	db 'DBUS_ACTIVATION_ADDRESS',0 ; DATA XREF: sub_67DC7A30+175o
; char aDbus_activat_0[]
aDbus_activat_0	db 'DBUS_ACTIVATION_BUS_TYPE',0 ; DATA XREF: sub_67DC7A30+1BFo
		align 4
; char aUnableToDeterm[]
aUnableToDeterm	db 'Unable to determine the address of the message bus (try ',27h,'man d'
					; DATA XREF: sub_67DC7A30:loc_67DC808Fo
		db 'bus-launch',27h,' and ',27h,'man dbus-daemon',27h,' for help)',0
		align 4
; char aOrg_freedesk_3[]
aOrg_freedesk_3	db 'org.freedesktop.DBus.Error.Failed',0 ; DATA XREF: sub_67DC7A30+669o
aBdNull		db 'bd != NULL',0       ; DATA XREF: sub_67DC7A30+2E0o
aDbus_bus_remov	db 'dbus_bus_remove_match',0 ; DATA XREF: dbus_bus_remove_match+9o
					; dbus_bus_remove_match+EDo
aSend_no_return	db 'send_no_return_values',0 ; DATA XREF: sub_67DC5C60+3Bo
aDbus_bus_add_m	db 'dbus_bus_add_match',0 ; DATA XREF: dbus_bus_add_match+9o
					; dbus_bus_add_match+F4o
aDbus_bus_start	db 'dbus_bus_start_service_by_name',0
					; DATA XREF: dbus_bus_start_service_by_name+1Fo
					; dbus_bus_start_service_by_name+53o ...
aDbus_bus_name_	db 'dbus_bus_name_has_owner',0 ; DATA XREF: dbus_bus_name_has_owner+Eo
					; dbus_bus_name_has_owner+42o ...
aDbus_bus_relea	db 'dbus_bus_release_name',0 ; DATA XREF: dbus_bus_release_name+Eo
					; dbus_bus_release_name+42o ...
aDbus_bus_reque	db 'dbus_bus_request_name',0 ; DATA XREF: dbus_bus_request_name+Eo
					; dbus_bus_request_name+42o ...
aDbus_bus_get_i	db 'dbus_bus_get_id',0  ; DATA XREF: dbus_bus_get_id+Eo
					; dbus_bus_get_id+42o ...
aDbus_bus_get_u	db 'dbus_bus_get_unix_user',0 ; DATA XREF: dbus_bus_get_unix_user+17o
					; dbus_bus_get_unix_user+4Bo ...
aDbus_bus_get_0	db 'dbus_bus_get_unique_name',0 ; DATA XREF: dbus_bus_get_unique_name+8o
					; dbus_bus_get_unique_name+8Do
aDbus_bus_set_u	db 'dbus_bus_set_unique_name',0 ; DATA XREF: dbus_bus_set_unique_name+17o
					; dbus_bus_set_unique_name+4Bo	...
aDbus_bus_regis	db 'dbus_bus_register',0 ; DATA XREF: dbus_bus_register+1Bo
					; dbus_bus_register+4Fo ...
aInternal_bus_g	db 'internal_bus_get',0 ; DATA XREF: sub_67DC7A30+Fo
					; sub_67DC7A30+44o ...
aInit_connectio	db 'init_connections_unlocked',0 ; DATA XREF: sub_67DC7A30+D7o
					; sub_67DC7A30+134o ...
aGet_from_env	db 'get_from_env',0     ; DATA XREF: sub_67DC79C0+Bo
					; sub_67DC7A30+4D0o
		align 10h
; char aRBuildWin32l_1[]
aRBuildWin32l_1	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DC8220+23o
					; sub_67DC82A0+18o ...
		db 's-connection.c',0
aConnectionHa_0	db '(connection)->have_connection_lock',0 ; DATA XREF: sub_67DC8220+2Bo
					; sub_67DC82A0+20o ...
		align 4
aConstChar_db_0	db '(*(const char*)_DBUS_FUNCTION_NAME) != ',27h,'_',27h,0
					; DATA XREF: dbus_connection_get_unix_fd+20o
					; dbus_connection_get_unix_fd+50o ...
aConnectionNu_0	db 'connection != NULL',0 ; DATA XREF: dbus_connection_get_unix_fd+87o
					; dbus_connection_get_outgoing_unix_fds+147o ...
aConnectionTran	db 'connection->transport != NULL',0
					; DATA XREF: dbus_connection_get_unix_fd+BBo
					; dbus_connection_get_socket+1B7o
; char aLock[]
aLock		db 'LOCK',0Ah,0         ; DATA XREF: sub_67DC83D0+8o
					; dbus_connection_get_outgoing_unix_fds+3Do ...
		align 4
aConnectionHave	db '!(connection)->have_connection_lock',0 ; DATA XREF: sub_67DC83D0+4Fo
					; dbus_connection_get_outgoing_unix_fds+84o ...
; char aUnlock[]
aUnlock		db 'UNLOCK',0Ah,0       ; DATA XREF: dbus_connection_get_outgoing_unix_fds+B6o
					; dbus_connection_set_route_peer_messages+AAo ...
aSlot0		db 'slot >= 0',0        ; DATA XREF: dbus_connection_set_data+F0o
aSlot_p0	db '*slot_p >= 0',0     ; DATA XREF: dbus_connection_free_data_slot+65o
aParent_pathNul	db 'parent_path != NULL',0 ; DATA XREF: dbus_connection_list_registered+210o
aParent_path0	db 'parent_path[0] == ',27h,'/',27h,0
					; DATA XREF: dbus_connection_list_registered+BBo
aChild_entriesN	db 'child_entries != NULL',0
					; DATA XREF: dbus_connection_list_registered+230o
aPathNull	db 'path != NULL',0     ; DATA XREF: dbus_connection_get_object_path_data+236o
					; dbus_connection_unregister_object_path+1D1o ...
aData_pNull	db 'data_p != NULL',0   ; DATA XREF: dbus_connection_get_object_path_data+250o
aPath0		db 'path[0] == ',27h,'/',27h,0
					; DATA XREF: dbus_connection_unregister_object_path+B6o
					; dbus_connection_try_register_fallback+BBo ...
aVtableNull	db 'vtable != NULL',0   ; DATA XREF: dbus_connection_try_register_fallback+2B0o
					; dbus_connection_try_register_object_path+2B0o ...
		align 4
; char aOrg_freedesk_4[]
aOrg_freedesk_4	db 'org.freedesktop.DBus.Error.ObjectPathInUse',0
					; DATA XREF: dbus_connection_register_fallback+296o
					; dbus_connection_register_object_path+296o
; char aS_0[]
aS_0		db '%s',0Ah,0           ; DATA XREF: dbus_connection_register_fallback+2B4o
					; dbus_connection_register_object_path+2B4o
aOld_value0	db 'old_value > 0',0    ; DATA XREF: sub_67DCAEB0+2Fo
					; sub_67DCAF40+28o ...
		align 4
aConnectionGene	db 'connection->generation == _dbus_current_generation',0
					; DATA XREF: dbus_connection_ref+98o
					; sub_67DCB080+4Fo ...
aWindows_sid_pN	db 'windows_sid_p != NULL',0
					; DATA XREF: dbus_connection_get_windows_user+1D0o
aDataNull	db 'data != NULL',0     ; DATA XREF: dbus_connection_get_adt_audit_session_data+210o
aData_sizeNull	db 'data_size != NULL',0
					; DATA XREF: dbus_connection_get_adt_audit_session_data+230o
aPidNull	db 'pid != NULL',0      ; DATA XREF: dbus_connection_get_unix_process_id+1D0o
aUidNull	db 'uid != NULL',0      ; DATA XREF: dbus_connection_get_unix_user+208o
aResult		db '!result',0          ; DATA XREF: dbus_connection_get_unix_user+119o
; char aLockingDispatc[]
aLockingDispatc	db 'locking dispatch_mutex',0Ah,0 ; DATA XREF: sub_67DCC700+3Bo
					; sub_67DCECB0+149o
aConnectionDi_0	db 'connection->dispatch_acquired',0 ; DATA XREF: sub_67DCC700+91o
					; dbus_connection_steal_borrowed_message+2E9o ...
; char aUnlockingDispa[]
aUnlockingDispa	db 'unlocking dispatch_mutex',0Ah,0 ; DATA XREF: sub_67DCC700+B3o
					; sub_67DCECB0+1FCo
; char aLockingIo_path[]
aLockingIo_path	db 'locking io_path_mutex',0Ah,0 ; DATA XREF: sub_67DCC7F0+3Bo
					; sub_67DD0570+14Co
aConnectionIo_p	db 'connection->io_path_acquired',0 ; DATA XREF: sub_67DCC7F0+91o
; char aStartConnect_0[]
aStartConnect_0	db 'start connection->io_path_acquired = %d',0Ah,0
					; DATA XREF: sub_67DCC7F0+A4o
; char aUnlockingIo_pa[]
aUnlockingIo_pa	db 'unlocking io_path_mutex',0Ah,0 ; DATA XREF: sub_67DCC7F0+E1o
					; sub_67DD0570+290o
aPreallocatedNu	db 'preallocated != NULL',0
					; DATA XREF: dbus_connection_free_preallocated_send+158o
					; dbus_connection_send_preallocated+2F9o
		align 4
aConnectionPrea	db 'connection == preallocated->connection',0
					; DATA XREF: dbus_connection_free_preallocated_send+BAo
; char aDisconnected[]
aDisconnected	db 'Disconnected',0     ; DATA XREF: sub_67DCCE40+EDo
					; sub_67DCD730:loc_67DCD8F0o ...
; char aOrg_freedesk_5[]
aOrg_freedesk_5	db 'org.freedesktop.DBus.Local',0 ; DATA XREF: sub_67DCCE40+F5o
					; sub_67DCD730+1C8o ...
; char aOrgFreedeskt_0[]
aOrgFreedeskt_0	db '/org/freedesktop/DBus/Local',0 ; DATA XREF: sub_67DCCE40+FDo
aLinkNull	db 'link != NULL',0     ; DATA XREF: sub_67DCD2A0+67o
aLinkDataMessag	db 'link->data == message',0 ; DATA XREF: sub_67DCD2A0+9Fo
aNoMember	db 'no member',0        ; DATA XREF: sub_67DCD2A0+F8o
					; sub_67DCD730+ACo ...
aNoInterface	db 'no interface',0     ; DATA XREF: sub_67DCD2A0+118o
					; sub_67DCD730+CAo ...
aNoPath		db 'no path',0          ; DATA XREF: sub_67DCD2A0+138o
					; sub_67DCD730+F3o ...
		align 4
; char aMessagePSSSSSR[]
aMessagePSSSSSR	db 'Message %p (%s %s %s %s ',27h,'%s',27h,') removed from outgoing queue %'
					; DATA XREF: sub_67DCD2A0+18Bo
		db 'p, %d left to send',0Ah,0
		align 4
; char aSynthesizedMes[]
aSynthesizedMes	db 'Synthesized message %p added to incoming queue %p, %d incoming',0Ah,0
					; DATA XREF: sub_67DCD4E0+77o
aConnectionMess	db 'connection->message_borrowed == NULL',0 ; DATA XREF: sub_67DCD730+64o
					; dbus_connection_borrow_message+106o ...
		align 4
; char aMessagePSSSS_0[]
aMessagePSSSS_0	db 'Message %p (%s %s %s %s ',27h,'%s',27h,') removed from incoming queue %'
					; DATA XREF: sub_67DCD730+14Bo
		db 'p, %d incoming',0Ah,0
; char aFinalizingConn[]
aFinalizingConn	db 'Finalizing connection %p',0Ah,0 ; DATA XREF: sub_67DCDAC0+Do
		align 4
a_dbus_atomic_g	db '_dbus_atomic_get (&connection->refcount) == 0',0
					; DATA XREF: sub_67DCDAC0+51o
		align 4
a_dbus_transpor	db '!_dbus_transport_get_is_connected (connection->transport)',0
					; DATA XREF: sub_67DCDAC0+8Co
		align 4
aConnectionServ	db 'connection->server_guid == NULL',0 ; DATA XREF: sub_67DCDAC0+C8o
					; sub_67DD4800+636o
aMostLikelyTh_0	db 'Most likely, the application was supposed to call dbus_connection'
					; DATA XREF: dbus_connection_unref+D2o
		db '_close(), since this is a private connection.',0Ah,0
aMostLikelyTheA	db 'Most likely, the application called unref() too many times and re'
					; DATA XREF: dbus_connection_unref+CBo
		db 'moved a reference belonging to libdbus, since this is a shared co'
		db 'nnection.',0Ah,0
		align 4
; char aTheLastReferen[]
aTheLastReferen	db 'The last reference on a connection was dropped without closing th'
					; DATA XREF: dbus_connection_unref+DBo
		db 'e connection. This is a bug in an application. See dbus_connectio'
		db 'n_unref() documentation for details.',0Ah
		db '%s',0
		align 4
a_dbus_transp_9	db '_dbus_transport_get_is_authenticated (connection->transport)',0
					; DATA XREF: sub_67DCE140+32o
		align 4
; char aMessagePSSSS_1[]
aMessagePSSSS_1	db 'Message %p (%s %s %s %s ',27h,'%s',27h,' reply to %u) added to incoming'
					; DATA XREF: sub_67DCE140+12Ao
		db ' queue %p, %d incoming',0Ah,0
aWatchNull_0	db 'watch != NULL',0    ; DATA XREF: sub_67DCE390+3Do
aComplete	db 'complete',0         ; DATA XREF: sub_67DCE450+9Eo
					; sub_67DCF230+17Eo
aDataRemains	db 'data remains',0     ; DATA XREF: sub_67DCE450+A9o
					; sub_67DCF230+187o
a???		db '???',0              ; DATA XREF: sub_67DCE450+10Ao
					; sub_67DCF230+198o
aNeedMemory	db 'need memory',0      ; DATA XREF: sub_67DCE450+103o
					; sub_67DCF230+191o
		align 4
; char aDispatchStatus[]
aDispatchStatus	db 'dispatch status = %s is_connected = %d',0Ah,0
					; DATA XREF: sub_67DCE450+B8o
; char aDroppingDOutgo[]
aDroppingDOutgo	db 'Dropping %d outgoing messages since we',27h,'re disconnected',0Ah,0
					; DATA XREF: sub_67DCE450+15Co
; char aSendingDisconn[]
aSendingDisconn	db 'Sending disconnect message',0Ah,0 ; DATA XREF: sub_67DCE450+1E6o
; char aStart[]
aStart		db 'start',0Ah,0        ; DATA XREF: dbus_connection_get_dispatch_status+3Do
					; dbus_connection_borrow_message+3Do ...
aFunctionNull	db 'function != NULL',0 ; DATA XREF: dbus_connection_remove_filter+2F6o
					; dbus_connection_add_filter+2B7o
; char aAttemptToRemov[]
aAttemptToRemov	db 'Attempt to remove filter function %p user data %p, but no such fi'
					; DATA XREF: dbus_connection_remove_filter+278o
		db 'lter has been added',0Ah,0
		align 4
; char aWaitingForDisp[]
aWaitingForDisp	db 'waiting for dispatch to be acquirable',0Ah,0
					; DATA XREF: sub_67DCECB0:loc_67DCEE36o
		align 10h
aConnectionDisp	db '!connection->dispatch_acquired',0 ; DATA XREF: sub_67DCECB0+1DEo
		align 10h
; char aDroppingConnec[]
aDroppingConnec	db 'dropping connection to %s out of the shared table',0Ah,0
					; DATA XREF: sub_67DCF230+2FCo
		align 4
aConnectionWasN	db 'connection was not in the shared table',0 ; DATA XREF: sub_67DCF230+415o
		align 4
; char aExitingOnDisco[]
aExitingOnDisco	db 'Exiting on Disconnected signal',0Ah,0 ; DATA XREF: sub_67DCF230+2A9o
; char aNotifyingOfCha[]
aNotifyingOfCha	db 'Notifying of change to dispatch status of %p now %d (%s)',0Ah,0
					; DATA XREF: sub_67DCF230+1A9o
; char aReturningPoppe[]
aReturningPoppe	db 'Returning popped message %p',0Ah,0
					; DATA XREF: dbus_connection_pop_message+13Co
aMessageNull	db 'message != NULL',0  ; DATA XREF: dbus_connection_steal_borrowed_message+2B7o
					; dbus_connection_return_message+247o ...
		align 4
aMessageConnect	db 'message == connection->message_borrowed',0
					; DATA XREF: dbus_connection_steal_borrowed_message+C7o
					; dbus_connection_steal_borrowed_message+1B2o ...
aMessagePop_mes	db 'message == pop_message',0
					; DATA XREF: dbus_connection_steal_borrowed_message+1EBo
		align 4
; char aIncomingMessag[]
aIncomingMessag	db 'Incoming message %p stolen from queue, %d incoming',0Ah,0
					; DATA XREF: dbus_connection_steal_borrowed_message+214o
; char aMiddle[]
aMiddle		db 'middle',0Ah,0       ; DATA XREF: .text:67DCFE12o
					; dbus_connection_send_preallocated+26Bo ...
; char aDisconnectingP[]
aDisconnectingP	db 'Disconnecting %p',0Ah,0 ; DATA XREF: sub_67DCFE60+3Fo
		align 4
; char aApplicationsMu[]
aApplicationsMu	db 'Applications must not close shared connections - see dbus_connect'
					; DATA XREF: dbus_connection_close+19Bo
		db 'ion_close() docs. This is a bug in the application.',0Ah,0
aRefcount1	db 'refcount >= 1',0    ; DATA XREF: sub_67DD0180+97o
a_dbus_hash_t_8	db '_dbus_hash_table_get_n_entries (shared_connections) < n_entries',0
					; DATA XREF: .text:67DD046Eo
a_dbus_hash_t_9	db '_dbus_hash_table_get_n_entries (shared_connections) == 0',0
					; DATA XREF: .text:67DD04B0o
		align 4
; char aStartConnectio[]
aStartConnectio	db 'start connection->io_path_acquired = %d timeout = %d',0Ah,0
					; DATA XREF: sub_67DD0570+185o
		align 4
; char aWaitingDForIoP[]
aWaitingDForIoP	db 'waiting %d for IO path to be acquirable',0Ah,0
					; DATA XREF: sub_67DD0570+1C4o
		align 4
; char aWaitingForIoPa[]
aWaitingForIoPa	db 'waiting for IO path to be acquirable',0Ah,0
					; DATA XREF: sub_67DD0570:loc_67DD0780o
		align 10h
; char aEndConnectionI[]
aEndConnectionI	db 'end connection->io_path_acquired = %d we_acquired = %d',0Ah,0
					; DATA XREF: sub_67DD0570+26Co
; char aPendingCallCom[]
aPendingCallCom	db 'pending call completed while acquiring I/O path',0
					; DATA XREF: sub_67DD0960:loc_67DD0B27o
; char aSReplyToDFound[]
aSReplyToDFound	db '%s reply to %d found in queue',0Ah,0 ; DATA XREF: sub_67DD0960+1FCo
		align 4
; char aPendingCallC_0[]
aPendingCallC_0	db 'pending call completed while acquiring I/O path (reply found in q'
					; DATA XREF: sub_67DD0960+224o
		db 'ueue)',0
; char aEnd[]
aEnd		db 'end',0Ah,0          ; DATA XREF: sub_67DD0960+C8o
					; dbus_connection_flush+F2o ...
aNull		db 'null',0             ; DATA XREF: sub_67DD0BB0+59o
		align 4
; char aMessagePSSSSSF[]
aMessagePSSSSSF	db 'Message %p (%s %s %s %s ',27h,'%s',27h,') for %s added to outgoing queu'
					; DATA XREF: sub_67DD0BB0+118o
		db 'e %p, %d pending to send',0Ah,0
; char aMessagePSerial[]
aMessagePSerial	db 'Message %p serial is %u',0Ah,0 ; DATA XREF: sub_67DD0BB0+18Bo
		align 4
aPreallocatedCo	db 'preallocated->connection == connection',0
					; DATA XREF: dbus_connection_send_preallocated+110o
		align 4
aDbus_message_g	db 'dbus_message_get_type (message) != DBUS_MESSAGE_TYPE_METHOD_CALL '
					; DATA XREF: dbus_connection_send_preallocated+36Do
		db '|| dbus_message_get_member (message) != NULL',0
		align 4
aDbus_message_0	db 'dbus_message_get_type (message) != DBUS_MESSAGE_TYPE_SIGNAL || (d'
					; DATA XREF: dbus_connection_send_preallocated+3C1o
		db 'bus_message_get_interface (message) != NULL && dbus_message_get_m'
		db 'ember (message) != NULL)',0
; char aDoingIteration[]
aDoingIteration	db 'doing iteration in',0Ah,0 ; DATA XREF: sub_67DD1550:loc_67DD15A0o
		align 4
aTimeout_millis	db 'timeout_milliseconds >= 0 || timeout_milliseconds == -1',0
					; DATA XREF: dbus_connection_send_with_reply+4C2o
					; dbus_connection_send_with_reply_and_block+1C0o ...
aReply_serial0	db 'reply_serial != 0',0 ; DATA XREF: dbus_connection_send_with_reply+232o
		align 10h
aErrorNullDbu_3	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: dbus_connection_send_with_reply_and_block+200o
					; sub_67DD4800+8Bo ...
aOrg_freedesk_6	db 'org.freedesktop.DBus.Error.NoMemory',0
					; DATA XREF: dbus_connection_send_with_reply_and_block+197o
					; sub_67DD4800+7F0o ...
; char aConnectionIsCl[]
aConnectionIsCl	db 'Connection is closed',0
					; DATA XREF: dbus_connection_send_with_reply_and_block:loc_67DD24F0o
		align 4
; char aOrg_freedesk_7[]
aOrg_freedesk_7	db 'org.freedesktop.DBus.Error.Disconnected',0
					; DATA XREF: dbus_connection_send_with_reply_and_block+26Ao
					; sub_67DD26C0+59Ao
aReplyNull	db 'reply != NULL',0    ; DATA XREF: dbus_connection_send_with_reply_and_block+162o
; char aCheckedForRepl[]
aCheckedForRepl	db 'checked for reply',0Ah,0 ; DATA XREF: sub_67DD2510+9Co
		align 4
; char aDbus_connec_63[]
aDbus_connec_63	db 'dbus_connection_send_with_reply_and_block(): got reply',0Ah,0
					; DATA XREF: sub_67DD2510+C0o
aPendingNull_0	db 'pending != NULL',0  ; DATA XREF: sub_67DD26C0+33o
; char aDbus_connec_62[]
aDbus_connec_62	db 'dbus_connection_send_with_reply_and_block(): will block %d millis'
					; DATA XREF: sub_67DD26C0+B8o
		db 'econds for reply serial %u from %ld sec %ld usec',0Ah,0
		align 4
; char aDbus_connec_68[]
aDbus_connec_68	db 'dbus_connection_send_with_reply_and_block(): will block for reply'
					; DATA XREF: sub_67DD26C0+507o
		db ' serial %u',0Ah,0
; char aTopOfRecheck[]
aTopOfRecheck	db 'top of recheck',0Ah,0 ; DATA XREF: sub_67DD26C0:loc_67DD27F3o
		align 4
; char aPendingCallC_2[]
aPendingCallC_2	db 'Pending call completed by dispatch',0Ah,0
					; DATA XREF: sub_67DD26C0:loc_67DD2C00o
aConnectionWasD	db 'Connection was disconnected before a reply was received',0
					; DATA XREF: sub_67DD26C0:loc_67DD2C40o
; char aDbus_connec_66[]
aDbus_connec_66	db 'dbus_connection_send_with_reply_and_block(): disconnected',0Ah,0
					; DATA XREF: sub_67DD26C0:loc_67DD2A25o
		align 4
; char aDbus_connec_65[]
aDbus_connec_65	db 'dbus_connection_send_with_reply_and_block() waiting for more memo'
					; DATA XREF: sub_67DD26C0:loc_67DD29B6o
					; sub_67DD26C0:loc_67DD2B60o
		db 'ry',0Ah,0
		align 4
; char aDbus_connec_69[]
aDbus_connec_69	db 'dbus_connection_send_with_reply_and_block(): clock set backward',0Ah
					; DATA XREF: sub_67DD26C0:loc_67DD2CE2o
		db 0
		align 4
; char aDbus_connec_64[]
aDbus_connec_64	db 'dbus_connection_send_with_reply_and_block(): %d milliseconds rema'
					; DATA XREF: sub_67DD26C0+2A4o
		db 'in',0Ah,0
		align 10h
; char aDbus_connec_67[]
aDbus_connec_67	db 'dbus_connection_send_with_reply_and_block(): Waited %d millisecon'
					; DATA XREF: sub_67DD26C0+38Do
		db 'ds and got no reply',0Ah,0
		align 4
a_dbus_pendin_4	db '!_dbus_pending_call_get_completed_unlocked (pending)',0
					; DATA XREF: sub_67DD26C0+3D1o
; char asc_67E1CF4D[]
asc_67E1CF4D	db 0Ah,0		; DATA XREF: dbus_connection_dispatch+42o
		align 10h
; char aAnotherThreadD[]
aAnotherThreadD	db 'another thread dispatched message (during acquire_dispatch above)'
					; DATA XREF: dbus_connection_dispatch:loc_67DD3433o
		db 0Ah,0
		align 4
; char aDispatchingMes[]
aDispatchingMes	db ' dispatching message %p (%s %s %s ',27h,'%s',27h,')',0Ah,0
					; DATA XREF: dbus_connection_dispatch+23Bo
; char aDispatchingAPe[]
aDispatchingAPe	db 'Dispatching a pending reply',0Ah,0
					; DATA XREF: dbus_connection_dispatch+290o
		align 4
; char aPendingCallC_1[]
aPendingCallC_1	db 'pending call completed in dispatch',0Ah,0
					; DATA XREF: dbus_connection_dispatch+34Fo
aPing		db 'Ping',0             ; DATA XREF: dbus_connection_dispatch:loc_67DD34ADo
; char aOrg_freedesk_8[]
aOrg_freedesk_8	db 'org.freedesktop.DBus.Peer',0 ; DATA XREF: dbus_connection_dispatch+4C5o
					; dbus_connection_dispatch+9E8o ...
aGetmachineid	db 'GetMachineId',0     ; DATA XREF: dbus_connection_dispatch:loc_67DD39D0o
aUnknownMethodI	db 'Unknown method invoked on org.freedesktop.DBus.Peer interface',0
					; DATA XREF: dbus_connection_dispatch+A6Do
		align 4
; char aOrg_freedesk_9[]
aOrg_freedesk_9	db 'org.freedesktop.DBus.Error.UnknownMethod',0
					; DATA XREF: dbus_connection_dispatch+A75o
					; dbus_connection_dispatch:loc_67DD3DF6o ...
		align 4
; char aFilterWasRemov[]
aFilterWasRemov	db '  filter was removed in a callback function',0Ah,0
					; DATA XREF: dbus_connection_dispatch:loc_67DD3C85o
		align 4
; char aRunningFilterO[]
aRunningFilterO	db '  running filter on message %p',0Ah,0
					; DATA XREF: dbus_connection_dispatch+B7Fo
; char aNoMemory[]
aNoMemory	db 'No memory',0Ah,0    ; DATA XREF: dbus_connection_dispatch:loc_67DD3D1Ao
		align 4
; char aFilterHandledM[]
aFilterHandledM	db 'filter handled message in dispatch',0Ah,0
					; DATA XREF: dbus_connection_dispatch+C6Co
; char aRunningObjectP[]
aRunningObjectP	db '  running object path dispatch on message %p (%s %s %s ',27h,'%s',27h,')'
					; DATA XREF: dbus_connection_dispatch+707o
		db 0Ah,0
		align 4
; char aObjectTreeHand[]
aObjectTreeHand	db 'object tree handled message in dispatch',0Ah,0
					; DATA XREF: dbus_connection_dispatch+7F8o
; char aSendingErrorS[]
aSendingErrorS	db '  sending error %s',0Ah,0 ; DATA XREF: dbus_connection_dispatch+E0Eo
		align 4
; char aNoMemoryForErr[]
aNoMemoryForErr	db 'no memory for error string in dispatch',0Ah,0
					; DATA XREF: dbus_connection_dispatch+E42o
					; dbus_connection_dispatch+EBDo
; char aMethodSWithSig[]
aMethodSWithSig	db 'Method "%s" with signature "%s" on interface "%s" doesn',27h,'t exis'
					; DATA XREF: dbus_connection_dispatch+E91o
		db 't',0Ah,0
		align 4
; char aNoMemoryForE_0[]
aNoMemoryForE_0	db 'no memory for error reply in dispatch',0Ah,0
					; DATA XREF: dbus_connection_dispatch:loc_67DD3F32o
		align 4
; char aNoMemoryForE_1[]
aNoMemoryForE_1	db 'no memory for error send in dispatch',0Ah,0
					; DATA XREF: dbus_connection_dispatch+F73o
		align 4
; char aDoneDispatchin[]
aDoneDispatchin	db '  done dispatching %p (%s %s %s ',27h,'%s',27h,') on connection %p',0Ah,0
					; DATA XREF: dbus_connection_dispatch+DD5o
; char aOutOfMemory[]
aOutOfMemory	db 'out of memory',0Ah,0 ; DATA XREF: dbus_connection_dispatch:loc_67DD3815o
aMessage_linkNu	db 'message_link != NULL',0 ; DATA XREF: dbus_connection_dispatch+896o
; char aMessagePSSSSPu[]
aMessagePSSSSPu	db 'Message %p (%s %s %s ',27h,'%s',27h,') put back into queue %p, %d incom'
					; DATA XREF: dbus_connection_dispatch+9B3o
		db 'ing',0Ah,0
; char a___DoneDispatc[]
a___DoneDispatc	db ' ... done dispatching',0Ah,0
					; DATA XREF: dbus_connection_dispatch:loc_67DD3363o
; char aBeforeFinalSta[]
aBeforeFinalSta	db 'before final status update',0Ah,0
					; DATA XREF: dbus_connection_dispatch+3E3o
; char aDoingDispatch[]
aDoingDispatch	db 'doing dispatch',0Ah,0 ; DATA XREF: dbus_connection_read_write-211o
; char aPausingForMemo[]
aPausingForMemo	db 'pausing for memory',0Ah,0
					; DATA XREF: dbus_connection_read_write:loc_67DD42D0o
; char aDoingIterati_0[]
aDoingIterati_0	db 'doing iteration',0Ah,0
					; DATA XREF: dbus_connection_read_write:loc_67DD4285o
aPrivate	db 'private',0          ; DATA XREF: sub_67DD4800+A4o
aShared		db 'shared',0           ; DATA XREF: sub_67DD4800+9Do
; char aOpeningSConnec[]
aOpeningSConnec	db 'opening %s connection to: %s',0Ah,0 ; DATA XREF: sub_67DD4800+B1o
		align 4
; char aCheckingForExi[]
aCheckingForExi	db 'checking for existing connection',0Ah,0 ; DATA XREF: sub_67DD4800+2C7o
		align 4
; char aCreatingShared[]
aCreatingShared	db 'creating shared_connections hash table',0Ah,0
					; DATA XREF: sub_67DD4800:loc_67DD50B5o
; char aSuccessfullyCr[]
aSuccessfullyCr	db '  successfully created shared_connections',0Ah,0
					; DATA XREF: sub_67DD4800:loc_67DD5158o
aGuid		db 'guid',0             ; DATA XREF: sub_67DD4800+30Bo
					; sub_67DD4800+562o
; char aLookedUpExisti[]
aLookedUpExisti	db 'looked up existing connection to server guid %s',0Ah,0
					; DATA XREF: sub_67DD4800+4A2o
		align 4
; char aLookedUpExis_0[]
aLookedUpExis_0	db 'looked up existing connection to server guid %s but it was discon'
					; DATA XREF: sub_67DD4800+884o
		db 'nected so ignoring it',0Ah,0
aErrorNullDbu_4	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DD4800+AEDo
		align 10h
aConnectionHa_1	db '!connection->have_connection_lock',0 ; DATA XREF: sub_67DD4800+1D5o
aConnectionShar	db 'connection->shareable',0 ; DATA XREF: sub_67DD4800+665o
aShared_connect	db 'shared_connections != NULL',0 ; DATA XREF: sub_67DD4800+794o
		align 4
; char aStoredConnecti[]
aStoredConnecti	db 'stored connection to %s to be shared',0Ah,0
					; DATA XREF: sub_67DD4800+9ECo
		align 4
aConnectionSe_0	db 'connection->server_guid != NULL',0 ; DATA XREF: sub_67DD4800+A37o
aTmp_errorNullD	db '(&tmp_error) == NULL || !dbus_error_is_set ((&tmp_error))',0
					; DATA XREF: sub_67DD4800+267o
		align 4
aFirst_errorNul	db '(&first_error) == NULL || dbus_error_is_set ((&first_error))',0
					; DATA XREF: sub_67DD4800+9B4o
		align 4
aTmp_errorNul_0	db '(&tmp_error) == NULL || dbus_error_is_set ((&tmp_error))',0
					; DATA XREF: sub_67DD4800+833o
aAddressNull	db 'address != NULL',0  ; DATA XREF: dbus_connection_open_private+DAo
					; dbus_connection_open+DAo
		align 20h
aDbus_connect_0	db 'dbus_connection_get_outgoing_unix_fds',0
					; DATA XREF: dbus_connection_get_outgoing_unix_fds+9o
					; dbus_connection_get_outgoing_unix_fds+45o ...
		align 20h
aDbus_connect_5	db 'dbus_connection_get_outgoing_size',0
					; DATA XREF: dbus_connection_get_outgoing_size+9o
					; dbus_connection_get_outgoing_size+45o ...
		align 20h
aDbus_connect_6	db 'dbus_connection_get_max_received_unix_fds',0
					; DATA XREF: dbus_connection_get_max_received_unix_fds+9o
					; dbus_connection_get_max_received_unix_fds+45o ...
		align 20h
aDbus_connect_7	db 'dbus_connection_set_max_received_unix_fds',0
					; DATA XREF: dbus_connection_set_max_received_unix_fds+Do
					; dbus_connection_set_max_received_unix_fds+49o ...
		align 20h
aDbus_connect_8	db 'dbus_connection_get_max_received_size',0
					; DATA XREF: dbus_connection_get_max_received_size+9o
					; dbus_connection_get_max_received_size+45o ...
		align 20h
aDbus_connect_9	db 'dbus_connection_set_max_received_size',0
					; DATA XREF: dbus_connection_set_max_received_size+Do
					; dbus_connection_set_max_received_size+49o ...
		align 20h
aDbus_connec_10	db 'dbus_connection_get_max_message_unix_fds',0
					; DATA XREF: dbus_connection_get_max_message_unix_fds+9o
					; dbus_connection_get_max_message_unix_fds+45o	...
		align 20h
aDbus_connec_11	db 'dbus_connection_set_max_message_unix_fds',0
					; DATA XREF: dbus_connection_set_max_message_unix_fds+Do
					; dbus_connection_set_max_message_unix_fds+49o	...
		align 20h
aDbus_connec_12	db 'dbus_connection_get_max_message_size',0
					; DATA XREF: dbus_connection_get_max_message_size+9o
					; dbus_connection_get_max_message_size+45o ...
		align 20h
aDbus_connec_13	db 'dbus_connection_set_max_message_size',0
					; DATA XREF: dbus_connection_set_max_message_size+Do
					; dbus_connection_set_max_message_size+49o ...
aDbus_connec_14	db 'dbus_connection_get_data',0 ; DATA XREF: dbus_connection_get_data+9o
					; dbus_connection_get_data+93o
aDbus_connec_15	db 'dbus_connection_set_data',0 ; DATA XREF: dbus_connection_set_data+Do
					; dbus_connection_set_data+41o	...
		align 4
aDbus_connec_16	db 'dbus_connection_free_data_slot',0
					; DATA XREF: dbus_connection_free_data_slot+8o
					; dbus_connection_free_data_slot+6Do
		align 10h
aDbus_connec_17	db 'dbus_connection_list_registered',0
					; DATA XREF: dbus_connection_list_registered+12o
					; dbus_connection_list_registered+46o ...
aDbus_connec_18	db 'dbus_connection_get_object_path_data',0
					; DATA XREF: dbus_connection_get_object_path_data+12o
					; dbus_connection_get_object_path_data+46o ...
		align 20h
aDbus_connec_19	db 'dbus_connection_unregister_object_path',0
					; DATA XREF: dbus_connection_unregister_object_path+Do
					; dbus_connection_unregister_object_path+41o ...
		align 20h
aDbus_connec_22	db 'dbus_connection_register_fallback',0
					; DATA XREF: dbus_connection_register_fallback+44o
					; dbus_connection_register_fallback+78o ...
		align 20h
aDbus_connec_20	db 'dbus_connection_try_register_fallback',0
					; DATA XREF: dbus_connection_try_register_fallback+12o
					; dbus_connection_try_register_fallback+46o ...
		align 20h
aDbus_connec_23	db 'dbus_connection_register_object_path',0
					; DATA XREF: dbus_connection_register_object_path+44o
					; dbus_connection_register_object_path+78o ...
		align 20h
aDbus_connec_21	db 'dbus_connection_try_register_object_path',0
					; DATA XREF: dbus_connection_try_register_object_path+12o
					; dbus_connection_try_register_object_path+46o	...
aDbus_connec_45	db 'dbus_connection_remove_filter',0
					; DATA XREF: dbus_connection_remove_filter+13o
					; dbus_connection_remove_filter+47o ...
a_dbus_message_	db '_dbus_message_filter_unref',0 ; DATA XREF: sub_67DCAEB0+17o
					; sub_67DCDAC0+1C5o ...
aDbus_connec_56	db 'dbus_connection_add_filter',0 ; DATA XREF: dbus_connection_add_filter+Eo
					; dbus_connection_add_filter+42o ...
		align 10h
aDbus_connect_1	db 'dbus_connection_set_route_peer_messages',0
					; DATA XREF: dbus_connection_set_route_peer_messages+8o
					; dbus_connection_set_route_peer_messages+44o ...
		align 20h
aDbus_connec_25	db 'dbus_connection_set_allow_anonymous',0
					; DATA XREF: dbus_connection_set_allow_anonymous+Do
					; dbus_connection_set_allow_anonymous+49o ...
		align 20h
aDbus_connec_26	db 'dbus_connection_set_windows_user_function',0
					; DATA XREF: dbus_connection_set_windows_user_function+18o
					; dbus_connection_set_windows_user_function+54o ...
		align 20h
aDbus_connec_28	db 'dbus_connection_get_windows_user',0
					; DATA XREF: dbus_connection_get_windows_user+Eo
					; dbus_connection_get_windows_user+42o	...
		align 20h
aDbus_connec_29	db 'dbus_connection_set_unix_user_function',0
					; DATA XREF: dbus_connection_set_unix_user_function+18o
					; dbus_connection_set_unix_user_function+54o ...
		align 20h
aDbus_connec_30	db 'dbus_connection_get_adt_audit_session_data',0
					; DATA XREF: dbus_connection_get_adt_audit_session_data+13o
					; dbus_connection_get_adt_audit_session_data+47o ...
		align 20h
aDbus_connec_31	db 'dbus_connection_get_unix_process_id',0
					; DATA XREF: dbus_connection_get_unix_process_id+Eo
					; dbus_connection_get_unix_process_id+42o ...
aDbus_connec_32	db 'dbus_connection_get_unix_user',0
					; DATA XREF: dbus_connection_get_unix_user+Eo
					; dbus_connection_get_unix_user+42o ...
aDbus_connec_33	db 'dbus_connection_get_socket',0 ; DATA XREF: dbus_connection_get_socket+9o
					; dbus_connection_get_socket+3Do ...
aDbus_connectio	db 'dbus_connection_get_unix_fd',0
					; DATA XREF: dbus_connection_get_unix_fd+8o
					; dbus_connection_get_unix_fd+38o ...
		align 10h
aDbus_connect_2	db 'dbus_connection_set_dispatch_status_function',0
					; DATA XREF: dbus_connection_set_dispatch_status_function+27o
					; dbus_connection_set_dispatch_status_function+63o ...
		align 20h
aDbus_connect_3	db 'dbus_connection_set_wakeup_main_function',0
					; DATA XREF: dbus_connection_set_wakeup_main_function+27o
					; dbus_connection_set_wakeup_main_function+63o	...
		align 20h
aDbus_connec_34	db 'dbus_connection_set_timeout_functions',0
					; DATA XREF: dbus_connection_set_timeout_functions+9o
					; dbus_connection_set_timeout_functions+45o ...
		align 20h
aDbus_connec_35	db 'dbus_connection_set_watch_functions',0
					; DATA XREF: dbus_connection_set_watch_functions+9o
					; dbus_connection_set_watch_functions+45o ...
aDbus_connec_57	db 'dbus_connection_dispatch',0 ; DATA XREF: dbus_connection_dispatch+Eo
					; dbus_connection_dispatch+4Ao	...
		align 10h
a_dbus_connec_6	db '_dbus_connection_acquire_dispatch',0 ; DATA XREF: sub_67DCECB0+6o
					; sub_67DCECB0+E6o ...
		align 20h
a_dbus_conne_11	db '_dbus_connection_pop_message_link_unlocked',0
					; DATA XREF: sub_67DCD730+9o
					; sub_67DCD730+44o ...
		align 20h
aCheck_disconne	db 'check_disconnected_message_arrived_unlocked',0
					; DATA XREF: sub_67DCD730+17Do
					; dbus_connection_borrow_message+12Do
		align 20h
a_dbus_conne_24	db '_dbus_connection_send_unlocked_no_update',0
					; DATA XREF: sub_67DD11B0+13o
					; sub_67DD11B0+42o ...
		align 20h
a_dbus_connecti	db '_dbus_connection_preallocate_send_unlocked',0
					; DATA XREF: sub_67DCC490+8o
					; sub_67DCC490+3Do
		align 20h
a_dbus_conne_16	db '_dbus_connection_send_preallocated_unlocked_no_update',0
					; DATA XREF: sub_67DD0BB0+120o
					; sub_67DD0BB0+193o
		align 10h
a_dbus_conne_25	db '_dbus_connection_putback_message_link_unlocked',0
					; DATA XREF: dbus_connection_dispatch+849o
					; dbus_connection_dispatch+87Eo ...
		align 20h
a_dbus_connec_9	db '_dbus_connection_release_dispatch',0 ; DATA XREF: sub_67DCC700+6o
					; sub_67DCC700+43o ...
		align 20h
a_dbus_connec_3	db '_dbus_connection_get_dispatch_status_unlocked',0
					; DATA XREF: sub_67DCE450+17o
					; sub_67DCE450+C0o
aNotify_disconn	db 'notify_disconnected_unlocked',0 ; DATA XREF: sub_67DCE450+118o
					; sub_67DCE450+164o
		align 20h
aNotify_disco_0	db 'notify_disconnected_and_dispatch_complete_unlocked',0
					; DATA XREF: sub_67DCE450+1ADo
					; sub_67DCE450+1F2o
		align 10h
aConnection_tim	db 'connection_timeout_and_complete_all_pending_calls_unlocked',0
					; DATA XREF: sub_67DCE450+23Bo
					; sub_67DCE450+269o ...
		align 10h
a_dbus_conne_12	db '_dbus_connection_update_dispatch_status_and_unlock',0
					; DATA XREF: sub_67DCF230+Bo
					; sub_67DCF230+110o ...
		align 10h
aConnection_for	db 'connection_forget_shared_unlocked',0 ; DATA XREF: sub_67DCF230+202o
					; sub_67DCF230+304o
a_dbus_messa_18	db '_dbus_message_filter_ref',0 ; DATA XREF: sub_67DCAF40+10o
		align 10h
aDbus_connec_44	db 'dbus_connection_get_dispatch_status',0
					; DATA XREF: dbus_connection_get_dispatch_status+9o
					; dbus_connection_get_dispatch_status+45o ...
aDbus_connec_47	db 'dbus_connection_pop_message',0
					; DATA XREF: dbus_connection_pop_message+13o
					; dbus_connection_pop_message+4Bo ...
a_dbus_conne_10	db '_dbus_connection_pop_message_unlocked',0
					; DATA XREF: dbus_connection_pop_message+EDo
		align 20h
aDbus_connec_48	db 'dbus_connection_steal_borrowed_message',0
					; DATA XREF: dbus_connection_steal_borrowed_message+17o
					; dbus_connection_steal_borrowed_message+4Bo ...
		align 4
aDbus_connec_49	db 'dbus_connection_return_message',0
					; DATA XREF: dbus_connection_return_message+17o
					; dbus_connection_return_message+4Bo ...
		align 4
aDbus_connec_46	db 'dbus_connection_borrow_message',0
					; DATA XREF: dbus_connection_borrow_message+9o
					; dbus_connection_borrow_message+47o ...
aDbus_connec_58	db 'dbus_connection_read_write',0 ; DATA XREF: dbus_connection_read_write+Do
					; dbus_connection_read_write+3Do ...
		align 20h
a_dbus_conne_26	db '_dbus_connection_read_write_dispatch',0
					; DATA XREF: dbus_connection_read_write-3E4o
					; dbus_connection_read_write-3B6o ...
		align 20h
a_dbus_connec_1	db '_dbus_connection_get_is_connected_unlocked',0
					; DATA XREF: dbus_connection_get_is_connected+BDo
					; sub_67DD1550+D7o ...
		align 20h
aDbus_connec_59	db 'dbus_connection_read_write_dispatch',0
					; DATA XREF: dbus_connection_read_write_dispatch+Do
					; dbus_connection_read_write_dispatch+3Do ...
aDbus_connec_53	db 'dbus_connection_flush',0 ; DATA XREF: dbus_connection_flush+9o
					; dbus_connection_flush+45o ...
		align 10h
a_dbus_conne_22	db '_dbus_connection_flush_unlocked',0 ; DATA XREF: sub_67DD1550+7o
					; sub_67DD1550+58o ...
aDbus_connec_55	db 'dbus_connection_send_with_reply_and_block',0
					; DATA XREF: dbus_connection_send_with_reply_and_block+17o
					; dbus_connection_send_with_reply_and_block+4Bo ...
		align 20h
aDbus_connec_54	db 'dbus_connection_send_with_reply',0
					; DATA XREF: dbus_connection_send_with_reply+17o
					; dbus_connection_send_with_reply+4Bo ...
a_dbus_conne_23	db '_dbus_connection_attach_pending_call_unlocked',0
					; DATA XREF: dbus_connection_send_with_reply+1DDo
					; dbus_connection_send_with_reply+21Ao	...
aReply_handler_	db 'reply_handler_timeout',0 ; DATA XREF: .text:67DCFE1Ao
aDbus_connec_52	db 'dbus_connection_send',0 ; DATA XREF: dbus_connection_send+1Bo
					; dbus_connection_send+4Fo ...
		align 10h
aDbus_connec_51	db 'dbus_connection_send_preallocated',0
					; DATA XREF: dbus_connection_send_preallocated+27o
					; dbus_connection_send_preallocated+5Fo ...
		align 20h
a_dbus_conne_15	db '_dbus_connection_send_preallocated_and_unlock',0
					; DATA XREF: dbus_connection_send_preallocated+228o
					; dbus_connection_send_preallocated+273o ...
		align 20h
aDbus_connec_37	db 'dbus_connection_free_preallocated_send',0
					; DATA XREF: dbus_connection_free_preallocated_send+Do
					; dbus_connection_free_preallocated_send+41o ...
		align 20h
aDbus_connec_36	db 'dbus_connection_preallocate_send',0
					; DATA XREF: dbus_connection_preallocate_send+9o
					; dbus_connection_preallocate_send+45o	...
		align 20h
aDbus_connect_4	db 'dbus_connection_set_exit_on_disconnect',0
					; DATA XREF: dbus_connection_set_exit_on_disconnect+Do
					; dbus_connection_set_exit_on_disconnect+49o ...
aDbus_connec_38	db 'dbus_connection_can_send_type',0
					; DATA XREF: dbus_connection_can_send_type+8o
					; dbus_connection_can_send_type+80o
aDbus_connec_39	db 'dbus_connection_get_server_id',0
					; DATA XREF: dbus_connection_get_server_id+9o
					; dbus_connection_get_server_id+45o ...
		align 20h
aDbus_connec_40	db 'dbus_connection_get_is_anonymous',0
					; DATA XREF: dbus_connection_get_is_anonymous+9o
					; dbus_connection_get_is_anonymous+45o	...
		align 20h
aDbus_connec_27	db 'dbus_connection_get_is_authenticated',0
					; DATA XREF: dbus_connection_get_is_authenticated+9o
					; dbus_connection_get_is_authenticated+45o ...
		align 20h
aDbus_connec_42	db 'dbus_connection_get_is_connected',0
					; DATA XREF: dbus_connection_get_is_connected+9o
					; dbus_connection_get_is_connected+45o	...
aDbus_connec_50	db 'dbus_connection_close',0 ; DATA XREF: dbus_connection_close+8o
					; dbus_connection_close+3Co ...
		align 10h
a_dbus_conne_13	db '_dbus_connection_close_possibly_shared_and_unlock',0
					; DATA XREF: sub_67DCFE60+6o
					; sub_67DCFE60+47o
aDbus_connec_43	db 'dbus_connection_unref',0 ; DATA XREF: dbus_connection_unref+8o
					; dbus_connection_unref+3Co ...
a_dbus_connec_2	db '_dbus_connection_last_unref',0 ; DATA XREF: sub_67DCDAC0+15o
					; sub_67DCDAC0+39o ...
aDbus_connec_24	db 'dbus_connection_ref',0 ; DATA XREF: dbus_connection_ref+8o
					; dbus_connection_ref+38o ...
aDbus_connec_60	db 'dbus_connection_open_private',0
					; DATA XREF: dbus_connection_open_private+Do
					; dbus_connection_open_private+41o ...
		align 4
a_dbus_conne_27	db '_dbus_connection_open_internal',0
					; DATA XREF: sub_67DD4800:loc_67DD4873o
					; sub_67DD4800+B9o ...
aConnection_loo	db 'connection_lookup_shared',0 ; DATA XREF: sub_67DD4800+2CFo
					; sub_67DD4800+349o ...
aShared_conne_0	db 'shared_connections_shutdown',0 ; DATA XREF: .text:67DD0456o
					; .text:67DD0498o
		align 20h
aConnection_try	db 'connection_try_from_address_entry',0 ; DATA XREF: sub_67DD4800+1BDo
					; sub_67DD4800+AD5o
		align 20h
aConnection_rec	db 'connection_record_shared_unlocked',0 ; DATA XREF: sub_67DD4800+5E7o
					; sub_67DD4800+61Eo ...
aDbus_connec_61	db 'dbus_connection_open',0 ; DATA XREF: dbus_connection_open+Do
					; dbus_connection_open+41o ...
		align 10h
a_dbus_conne_31	db '_dbus_connection_block_pending_call',0 ; DATA XREF: sub_67DD26C0+13o
					; sub_67DD26C0+C0o ...
		align 20h
aCheck_for_re_0	db 'check_for_reply_and_update_dispatch_unlocked',0
					; DATA XREF: sub_67DD2510+A4o
					; sub_67DD2510+C8o ...
aCheck_for_repl	db 'check_for_reply_unlocked',0 ; DATA XREF: sub_67DD2510+13o
		align 20h
a_dbus_conne_34	db '_dbus_connection_close_if_only_one_ref',0 ; DATA XREF: sub_67DD0180+11o
					; sub_67DD0180+38o ...
		align 20h
a_dbus_conne_21	db '_dbus_connection_send_and_unlock',0 ; DATA XREF: sub_67DD1250+10o
					; sub_67DD1250+47o ...
		align 20h
a_dbus_conne_14	db '_dbus_connection_close_possibly_shared',0 ; DATA XREF: sub_67DD02C0+Ao
					; sub_67DD02C0+37o ...
a_dbus_conne_37	db '_dbus_connection_handle_watch',0 ; DATA XREF: sub_67DD1870+11o
					; sub_67DD1870+35o ...
		align 20h
a_dbus_conne_18	db '_dbus_connection_acquire_io_path',0 ; DATA XREF: sub_67DD0570+9o
					; sub_67DD0570+E9o ...
		align 20h
a_dbus_conne_20	db '_dbus_connection_release_io_path',0 ; DATA XREF: sub_67DCC7F0+6o
					; sub_67DCC7F0+43o ...
		align 20h
a_dbus_connec_8	db '_dbus_connection_unref_unlocked',0 ; DATA XREF: sub_67DCDF20+8o
					; sub_67DCDF20+3Do ...
a_dbus_connec_7	db '_dbus_connection_ref_unlocked',0 ; DATA XREF: sub_67DCB080+Ao
					; sub_67DCB080+37o ...
		align 10h
a_dbus_conne_28	db '_dbus_connection_new_for_transport',0 ; DATA XREF: sub_67DCCE40+1D7o
					; sub_67DCCE40+1FEo ...
		align 20h
aFree_pending_c	db 'free_pending_call_on_hash_removal',0 ; DATA XREF: .text:67DD45AAo
					; .text:67DD46A4o ...
		align 20h
a_dbus_conne_17	db '_dbus_connection_do_iteration_unlocked',0 ; DATA XREF: sub_67DD0960+1Fo
					; sub_67DD0960+3Bo ...
		align 20h
a_dbus_conne_19	db '_dbus_connection_peek_for_reply_unlocked',0
					; DATA XREF: sub_67DD0960+145o
					; sub_67DD0960+1F4o ...
		align 20h
a_dbus_conne_32	db '_dbus_connection_remove_pending_call',0 ; DATA XREF: sub_67DD1BA0+15o
					; sub_67DD1BA0+3Co
aProtected_chan	db 'protected_change_timeout',0 ; DATA XREF: .text:67DCE04Bo
					; sub_67DCE0C0+13o ...
		align 10h
a_dbus_conne_36	db '_dbus_connection_toggle_watch_unlocked',0 ; DATA XREF: sub_67DCE390+1Do
aProtected_ch_1	db 'protected_change_watch',0 ; DATA XREF: sub_67DC8220+13o
					; sub_67DCDFB0+13o ...
a_dbus_connec_4	db '_dbus_connection_message_sent',0 ; DATA XREF: sub_67DCD2A0+Bo
					; sub_67DCD2A0+4Fo ...
		align 10h
a_dbus_conne_35	db '_dbus_connection_get_message_to_send',0 ; DATA XREF: sub_67DCD490+8o
		align 20h
aDbus_connec_41	db 'dbus_connection_has_messages_to_send',0
					; DATA XREF: dbus_connection_has_messages_to_send+9o
					; dbus_connection_has_messages_to_send+45o ...
		align 20h
a_dbus_connec_0	db '_dbus_connection_has_messages_to_send_unlocked',0
					; DATA XREF: sub_67DC82A0+8o
					; dbus_connection_has_messages_to_send+BDo
		align 20h
a_dbus_connec_5	db '_dbus_connection_queue_synthesized_message_link',0
					; DATA XREF: sub_67DCD4E0+9o
					; sub_67DCD4E0+7Fo
		align 20h
a_dbus_conne_33	db '_dbus_connection_queue_received_message_link',0
					; DATA XREF: sub_67DCE140+1Ao
					; sub_67DCE140+13Ao
a_dbus_conne_29	db '_dbus_connection_unlock',0 ; DATA XREF: sub_67DC8C10+10o
					; sub_67DC8C10+2Co
a_dbus_conne_30	db '_dbus_connection_lock',0 ; DATA XREF: sub_67DC83D0+10o
					; sub_67DC83D0+37o
		align 10h
aUidLu		db 'uid=%lu',0          ; DATA XREF: .text:67DD567Bo
byte_67E1ED08	db 0			; DATA XREF: .text:67DD56E5o
					; .text:loc_67DD5710o
asc_67E1ED09	db ' ',0                ; DATA XREF: .text:67DD56A8o
					; .text:67DD56DEo
aSpidLu		db '%spid=%lu',0        ; DATA XREF: .text:67DD56B7o
aSsidS		db '%ssid=%s',0         ; DATA XREF: .text:67DD56F5o
		align 10h
aRBuildWin32_18	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DD5860+32o
					; sub_67DD5A30+1Ao ...
		db 's-credentials.c',0
aUnknownCredent	db 'Unknown credential enum value',0 ; DATA XREF: sub_67DD5860+3Ao
aCredentialsRef	db 'credentials->refcount > 0',0 ; DATA XREF: sub_67DD5A30+22o
					; .text:67DD5AC2o
a_dbus_creden_0	db '_dbus_credentials_unref',0 ; DATA XREF: sub_67DD5A30+Ao
a_dbus_creden_2	db '_dbus_credentials_ref',0 ; DATA XREF: .text:67DD5AAAo
		align 4
aRBuildWin32l_2	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: dbus_error_is_set+18o
					; dbus_error_is_set+5Ao ...
		db 's-errors.c',0
aConstChar_db_1	db '(*(const char*)_DBUS_FUNCTION_NAME) != ',27h,'_',27h,0
					; DATA XREF: dbus_error_is_set+20o
					; dbus_error_init+20o ...
aErrorNull	db 'error != NULL',0    ; DATA XREF: dbus_error_is_set+95o
					; dbus_error_init+95o ...
		align 10h
aErrorNameNullE	db '(error->name != NULL && error->message != NULL) || (error->name ='
					; DATA XREF: dbus_error_is_set+62o
					; dbus_error_has_name+A3o
		db '= NULL && error->message == NULL)',0
		align 4
aSizeofDbuserro	db 'sizeof (DBusError) == sizeof (DBusRealError)',0
					; DATA XREF: dbus_error_init+50o
		align 4
aDestNullDbus_e	db '(dest) == NULL || !dbus_error_is_set ((dest))',0
					; DATA XREF: dbus_move_error+98o
		align 4
aOrg_freedes_10	db 'org.freedesktop.DBus.Error.Failed',0 ; DATA XREF: sub_67DD5FA0+18o
aUnknownError	db 'Unknown error',0    ; DATA XREF: sub_67DD5FA0:loc_67DD6127o
aOrg_freedes_11	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67DD5FA0+25o
					; dbus_set_error+131o
aNotEnoughMemor	db 'Not enough memory available',0 ; DATA XREF: sub_67DD5FA0:loc_67DD6110o
aOrg_freedes_12	db 'org.freedesktop.DBus.Error.IOError',0 ; DATA XREF: sub_67DD5FA0+39o
aErrorReadingOr	db 'Error reading or writing data',0 ; DATA XREF: sub_67DD5FA0:loc_67DD6137o
		align 4
aOrg_freedes_13	db 'org.freedesktop.DBus.Error.BadAddress',0 ; DATA XREF: sub_67DD5FA0+4Do
aCouldNotParseA	db 'Could not parse address',0 ; DATA XREF: sub_67DD5FA0:loc_67DD6130o
		align 4
aOrg_freedes_14	db 'org.freedesktop.DBus.Error.NotSupported',0 ; DATA XREF: sub_67DD5FA0+61o
aFeatureNotSupp	db 'Feature not supported',0 ; DATA XREF: sub_67DD5FA0:loc_67DD6140o
		align 4
aOrg_freedes_15	db 'org.freedesktop.DBus.Error.LimitsExceeded',0
					; DATA XREF: sub_67DD5FA0+75o
aResourceLimits	db 'Resource limits exceeded',0 ; DATA XREF: sub_67DD5FA0:loc_67DD6150o
		align 4
aOrg_freedes_16	db 'org.freedesktop.DBus.Error.AccessDenied',0 ; DATA XREF: sub_67DD5FA0+89o
aPermissionDeni	db 'Permission denied',0 ; DATA XREF: sub_67DD5FA0:loc_67DD6147o
		align 4
aOrg_freedes_17	db 'org.freedesktop.DBus.Error.AuthFailed',0 ; DATA XREF: sub_67DD5FA0+9Do
		align 10h
aCouldNotAuthen	db 'Could not authenticate to server',0
					; DATA XREF: sub_67DD5FA0:loc_67DD6157o
		align 4
aOrg_freedes_18	db 'org.freedesktop.DBus.Error.NoServer',0 ; DATA XREF: sub_67DD5FA0+B1o
aNoServerAvaila	db 'No server available at address',0
					; DATA XREF: sub_67DD5FA0:loc_67DD615Eo
		align 4
aOrg_freedes_19	db 'org.freedesktop.DBus.Error.Timeout',0 ; DATA XREF: sub_67DD5FA0+C5o
aConnectionTime	db 'Connection timed out',0 ; DATA XREF: sub_67DD5FA0:loc_67DD6165o
aOrg_freedes_20	db 'org.freedesktop.DBus.Error.NoNetwork',0 ; DATA XREF: sub_67DD5FA0+D9o
aNetworkUnavail	db 'Network unavailable',0 ; DATA XREF: sub_67DD5FA0:loc_67DD616Co
		align 4
aOrg_freedes_21	db 'org.freedesktop.DBus.Error.AddressInUse',0 ; DATA XREF: sub_67DD5FA0+EDo
aAddressAlready	db 'Address already in use',0 ; DATA XREF: sub_67DD5FA0:loc_67DD6173o
		align 4
aOrg_freedes_22	db 'org.freedesktop.DBus.Error.Disconnected',0
					; DATA XREF: sub_67DD5FA0+101o
aDisconnected_	db 'Disconnected.',0    ; DATA XREF: sub_67DD5FA0:loc_67DD617Ao
		align 4
aOrg_freedes_23	db 'org.freedesktop.DBus.Error.InvalidArgs',0 ; DATA XREF: sub_67DD5FA0+115o
aInvalidArgumen	db 'Invalid arguments.',0 ; DATA XREF: sub_67DD5FA0:loc_67DD6181o
		align 10h
aOrg_freedes_24	db 'org.freedesktop.DBus.Error.NoReply',0 ; DATA XREF: sub_67DD5FA0+129o
aDidNotGetARepl	db 'Did not get a reply message.',0 ; DATA XREF: sub_67DD5FA0:loc_67DD6188o
; char Str2[]
Str2		db 'org.freedesktop.DBus.Error.FileNotFound',0
					; DATA XREF: sub_67DD5FA0+13Do
aFileDoesnTExis	db 'File doesn',27h,'t exist.',0 ; DATA XREF: sub_67DD5FA0:loc_67DD618Fo
; char aOrg_freedes_26[]
aOrg_freedes_26	db 'org.freedesktop.DBus.Error.ObjectPathInUse',0
					; DATA XREF: sub_67DD5FA0+155o
aObjectPathAlre	db 'Object path already in use',0 ; DATA XREF: sub_67DD5FA0+169o
		align 4
aErrorNullDbu_5	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: dbus_set_error_const+126o
					; dbus_set_error+1BBo
aNameNull_0	db 'name != NULL',0     ; DATA XREF: dbus_set_error_const+175o
					; dbus_set_error+1EDo ...
aErrorNameNull	db 'error->name == NULL',0 ; DATA XREF: dbus_set_error_const+ADo
					; dbus_set_error+B5o
aErrorMessageNu	db 'error->message == NULL',0 ; DATA XREF: dbus_set_error_const+DDo
					; dbus_set_error+E5o
aDbus_set_err_0	db 'dbus_set_error',0   ; DATA XREF: dbus_set_error+27o
					; dbus_set_error+63o ...
aDbus_error_is_	db 'dbus_error_is_set',0 ; DATA XREF: dbus_error_is_set+8o
					; dbus_error_is_set+4Ao ...
aDbus_error_has	db 'dbus_error_has_name',0 ; DATA XREF: dbus_error_has_name+Do
					; dbus_error_has_name+41o ...
aDbus_move_erro	db 'dbus_move_error',0  ; DATA XREF: dbus_move_error+Do
					; dbus_move_error+A0o
aDbus_set_error	db 'dbus_set_error_const',0 ; DATA XREF: dbus_set_error_const+1Bo
					; dbus_set_error_const:loc_67DD61FBo ...
aDbus_error_fre	db 'dbus_error_free',0  ; DATA XREF: dbus_error_free+8o
					; dbus_error_free+8Fo
aDbus_error_ini	db 'dbus_error_init',0  ; DATA XREF: dbus_error_init+8o
					; dbus_error_init+38o ...
		align 10h
; char aRBuildWin32_33[]
aRBuildWin32_33	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DD6770+3Do
					; sub_67DD6770+11Eo ...
		db 's-keyring.c',0
		align 10h
aErrorNullDb_28	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DD6770+45o
					; sub_67DD6770+87Do ...
; char aOrg_freedes_65[]
aOrg_freedes_65	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67DD6770+33Fo
					; sub_67DD6770+36Co ...
; char aDidNotGetLockF[]
aDidNotGetLockF	db 'Did not get lock file, sleeping %d milliseconds (%s)',0Ah,0
					; DATA XREF: sub_67DD6770+102o
		align 4
; char aLockFileTimedO[]
aLockFileTimedO	db 'Lock file timed out %d times, assuming stale',0Ah,0
					; DATA XREF: sub_67DD6770+AA5o
		align 4
; char aCouldnTDeleteO[]
aCouldnTDeleteO	db 'Couldn',27h,'t delete old lock file: %s',0Ah,0
					; DATA XREF: sub_67DD6770+D7Ao
		align 10h
; char aCouldnTCreateL[]
aCouldnTCreateL	db 'Couldn',27h,'t create lock file after deleting stale one: %s',0Ah,0
					; DATA XREF: sub_67DD6770+AF8o
; char aFailedToLoadKe[]
aFailedToLoadKe	db 'Failed to load keyring file: %s',0Ah,0 ; DATA XREF: sub_67DD6770+80Co
		align 4
; char aSecretKeyringF[]
aSecretKeyringF	db 'Secret keyring file contains non-ASCII! Ignoring existing content'
					; DATA XREF: sub_67DD6770:loc_67DD6F50o
		db 's',0Ah,0
; char aCouldNotPars_0[]
aCouldNotPars_0	db 'could not parse secret key ID at start of line',0Ah,0
					; DATA XREF: sub_67DD6770+392o
; char aInvalidSecretK[]
aInvalidSecretK	db 'invalid secret key ID at start of line',0Ah,0
					; DATA XREF: sub_67DD6770+3C2o
; char aCouldNotPars_1[]
aCouldNotPars_1	db 'could not parse secret key timestamp',0Ah,0
					; DATA XREF: sub_67DD6770+3F2o
		align 10h
; char aDroppingIgnori[]
aDroppingIgnori	db 'dropping/ignoring %ld-seconds old key with timestamp %ld as curre'
					; DATA XREF: sub_67DD6770+306o
		db 'nt time is %ld',0Ah,0
		align 4
; char aNoSecretKeyAft[]
aNoSecretKeyAft	db 'no secret key after ID and timestamp',0Ah,0
					; DATA XREF: sub_67DD6770+7B2o
		align 4
; char aInvalidHexEn_0[]
aInvalidHexEn_0	db 'invalid hex encoding in keyring file',0Ah,0
					; DATA XREF: sub_67DD6770+51Bo
		align 4
; char aSuccessfullyLo[]
aSuccessfullyLo	db 'Successfully loaded %d existing keys',0Ah,0
					; DATA XREF: sub_67DD6770+56Ao
aId0		db 'id >= 0',0          ; DATA XREF: sub_67DD6770+917o
		align 4
; char aKeyIdDAlreadyE[]
aKeyIdDAlreadyE	db 'Key ID %d already existed, trying another one',0Ah,0
					; DATA XREF: sub_67DD6770+A40o
; char aCreatingKeyWit[]
aCreatingKeyWit	db 'Creating key with ID %d',0Ah,0 ; DATA XREF: sub_67DD6770+95Do
aUnknown_1	db '(unknown)',0        ; DATA XREF: sub_67DD6770+9DDo
		align 4
; char aFailedToGenera[]
aFailedToGenera	db 'Failed to generate new key: %s',0Ah,0 ; DATA XREF: sub_67DD6770+9F5o
; char aFailedToDele_0[]
aFailedToDele_0	db 'Failed to delete lock file: %s',0Ah,0 ; DATA XREF: sub_67DD6770+6FDo
aNone		db '(none)',0           ; DATA XREF: sub_67DD6770:loc_67DD7521o
		align 10h
; char aReturningDButE[]
aReturningDButE	db 'returning %d but error pointer %p name %s',0Ah,0
					; DATA XREF: sub_67DD6770+783o
aDidnTHandleErr	db 'didn',27h,'t handle errors properly',0 ; DATA XREF: sub_67DD6770+7A3o
		align 4
; char aCouldNotLockKe[]
aCouldNotLockKe	db 'Could not lock keyring file to add to it',0
					; DATA XREF: sub_67DD6770+B2Eo
		align 4
; char aOrg_freedes_67[]
aOrg_freedes_67	db 'org.freedesktop.DBus.Error.Failed',0 ; DATA XREF: sub_67DD6770+B36o
					; sub_67DD7930+368o ...
; char aErrorIsSS[]
aErrorIsSS	db 'error is %s: %s',0Ah,0 ; DATA XREF: sub_67DD6770+741o
; char aContextIsZeroL[]
aContextIsZeroL	db 'context is zero-length',0Ah,0 ; DATA XREF: sub_67DD7600:loc_67DD7780o
; char aContextNotVali[]
aContextNotVali	db 'context not valid ascii',0Ah,0 ; DATA XREF: sub_67DD7600:loc_67DD7750o
asc_67E1F8DC	db '/',0                ; DATA XREF: sub_67DD7600+44o
; char aContextConta_1[]
aContextConta_1	db 'context contains a slash',0Ah,0 ; DATA XREF: sub_67DD7600:loc_67DD77D8o
asc_67E1F8F8	db '\',0                ; DATA XREF: sub_67DD7600+6Co
; char aContextConta_0[]
aContextConta_0	db 'context contains a backslash',0Ah,0
					; DATA XREF: sub_67DD7600:loc_67DD77B0o
a__0		db '.',0                ; DATA XREF: sub_67DD7600+94o
; char aContextConta_2[]
aContextConta_2	db 'context contains a dot',0Ah,0 ; DATA XREF: sub_67DD7600:loc_67DD7803o
; char aContextConta_4[]
aContextConta_4	db 'context contains a blank',0Ah,0 ; DATA XREF: sub_67DD7600:loc_67DD7860o
asc_67E1F94C	db 0Ah,0		; DATA XREF: sub_67DD7600+DCo
; char aContextConta_3[]
aContextConta_3	db 'context contains a newline',0Ah,0
					; DATA XREF: sub_67DD7600:loc_67DD7830o
asc_67E1F96A	db 0Dh,0		; DATA XREF: sub_67DD7600+104o
; char aContextContain[]
aContextContain	db 'context contains a carriage return',0Ah,0 ; DATA XREF: sub_67DD7600+127o
aUnableToCreate	db 'Unable to create DBus keyring when setuid',0
					; DATA XREF: sub_67DD7930+33Bo
		align 4
aOrg_freedes_66	db 'org.freedesktop.DBus.Error.NotSupported',0
					; DATA XREF: sub_67DD7930+343o
aKeyringCredent	db 'keyring->credentials == NULL',0 ; DATA XREF: sub_67DD7930+143o
		align 4
aInvalidContext	db 'Invalid context in keyring creation',0
					; DATA XREF: sub_67DD7930:loc_67DD7C90o
; char a_lock[]
a_lock		db '.lock',0            ; DATA XREF: sub_67DD7930+217o
		align 10h
; char aDidnTLoadAnExi[]
aDidnTLoadAnExi	db 'didn',27h,'t load an existing keyring: %s',0Ah,0
					; DATA XREF: sub_67DD7930+3ACo
		align 4
; char aCreatingKeyrin[]
aCreatingKeyrin	db 'Creating keyring directory: %s',0Ah,0 ; DATA XREF: sub_67DD7930+270o
; char aKeyDIsLdSecond[]
aKeyDIsLdSecond	db 'Key %d is %ld seconds old',0Ah,0 ; DATA XREF: sub_67DD7D30+99o
					; sub_67DD7D30+14Eo
		align 4
aNoRecentEnough	db 'No recent-enough key found in keyring, and unable to create a new'
					; DATA XREF: sub_67DD7D30:loc_67DD7EC1o
		db ' key',0
a_dbus_keyrin_3	db '_dbus_keyring_get_best_key',0 ; DATA XREF: sub_67DD7D30+2Co
a_dbus_keyrin_1	db '_dbus_keyring_reload',0 ; DATA XREF: sub_67DD6770+2Do
					; sub_67DD6770+30Eo ...
a_dbus_keyrin_2	db '_dbus_keyring_lock',0 ; DATA XREF: sub_67DD6770+10Ao
					; sub_67DD6770+AADo ...
aAdd_new_key	db 'add_new_key',0      ; DATA XREF: sub_67DD6770+865o
					; sub_67DD6770+8EFo ...
aFind_recent_ke	db 'find_recent_key',0  ; DATA XREF: sub_67DD7D30+A5o
					; sub_67DD7D30+15Ao
		align 4
a_dbus_keyring_	db '_dbus_keyring_validate_context',0 ; DATA XREF: sub_67DD7600+12Fo
					; sub_67DD7600+158o ...
		align 10h
a_dbus_keyrin_0	db '_dbus_keyring_new_for_credentials',0 ; DATA XREF: sub_67DD7930+32o
					; sub_67DD7930+12Bo ...
		align 20h
; char aRBuildWin32l_4[]
aRBuildWin32l_4	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DD7EF0+28o
					; sub_67DD7F50+40o ...
		db 's-marshal-header.c',0
aTypeDbus_messa	db 'type != DBUS_MESSAGE_TYPE_INVALID',0 ; DATA XREF: sub_67DD7EF0+30o
		align 4
aHeaderByte_ord	db 'header->byte_order == byte_order',0 ; DATA XREF: sub_67DD7F50+48o
		align 4
a_dbus_type_rea	db '_dbus_type_reader_get_current_type (&sub) == DBUS_TYPE_BYTE',0
					; DATA XREF: sub_67DD8090+84o
					; sub_67DD8260+F4o ...
a_dbus_type_r_4	db '_dbus_type_reader_get_current_type (reader) == DBUS_TYPE_STRUCT',0
					; DATA XREF: sub_67DD8090+F0o
aHeaderPadding7	db 'header->padding == 7',0 ; DATA XREF: sub_67DD81B0+1Fo
		align 10h
aCouldnTPadHead	db 'couldn',27h,'t pad header though enough padding was preallocated',0
					; DATA XREF: sub_67DD81B0+A0o
		align 4
a_dbus_type_r_0	db '_dbus_type_reader_get_current_type (&sub) == DBUS_TYPE_VARIANT',0
					; DATA XREF: sub_67DD8260+14Bo
		align 4
aFieldDbus_he_0	db 'field <= DBUS_HEADER_FIELD_LAST',0 ; DATA XREF: sub_67DD8410+52o
					; sub_67DD8410+179o ...
aHeaderPaddingM	db 'header->padding <= MAX_POSSIBLE_HEADER_PADDING',0
					; DATA XREF: sub_67DD8410+C8o
					; sub_67DD8E90+B9o ...
		align 4
a_dbus_header_2	db '!_dbus_header_cache_check (header, field)',0
					; DATA XREF: sub_67DD8410+1B9o
aStart0_0	db 'start >= 0',0       ; DATA XREF: sub_67DD8850+39o
aStart_dbus_int	db 'start < _DBUS_INT32_MAX / 2',0 ; DATA XREF: sub_67DD8850+6Co
aLen0_0		db 'len >= 0',0         ; DATA XREF: sub_67DD8850+9Bo
		align 4
aStartInt_dbus_	db 'start == (int) _DBUS_ALIGN_VALUE (start, 8)',0
					; DATA XREF: sub_67DD8850+D1o
					; sub_67DD94B0+4Fo
aFields_array_l	db 'FIELDS_ARRAY_LENGTH_OFFSET + 4 <= len',0 ; DATA XREF: sub_67DD8850+133o
aBody_length_of	db 'BODY_LENGTH_OFFSET + 4 < len',0 ; DATA XREF: sub_67DD8850+1AAo
		align 4
aMax_message_le	db 'max_message_length < _DBUS_INT32_MAX / 2',0
					; DATA XREF: sub_67DD8850+222o
		align 4
aBody_len_unsig	db 'body_len_unsigned < (unsigned) _DBUS_INT32_MAX',0
					; DATA XREF: sub_67DD8850+27Ao
		align 4
aFields_array_0	db 'fields_array_len_unsigned < (unsigned) _DBUS_INT32_MAX',0
					; DATA XREF: sub_67DD8850+2B1o
		align 4
aHeader_len_uns	db 'header_len_unsigned < (unsigned) _DBUS_INT32_MAX',0
					; DATA XREF: sub_67DD8850+2E4o
		align 10h
; char aHaveDBytesNeed[]
aHaveDBytesNeed	db 'have %d bytes, need body %u + header %u = %u',0Ah,0
					; DATA XREF: sub_67DD8850+321o
		align 10h
a_dbus_header_5	db '_dbus_header_get_serial (header) == 0 || serial == 0',0
					; DATA XREF: sub_67DD8C00+F3o
					; dbus_message_set_serial-BD71o
		align 4
aInterfaceMessa	db '((interface || message_type != DBUS_MESSAGE_TYPE_SIGNAL) && membe'
					; DATA XREF: sub_67DD8E90+5Co
		db 'r) || (error_name) || !(interface || member || error_name)',0
a_dbus_string_g	db '_dbus_string_get_length (&header->data) == 0',0
					; DATA XREF: sub_67DD8E90+89o
					; sub_67DD94B0+ABo
		align 4
aFieldDbus_head	db 'field != DBUS_HEADER_FIELD_INVALID',0 ; DATA XREF: sub_67DD9250+35o
					; sub_67DD94B0+985o
		align 4
a_dbus_header_f	db '_dbus_header_field_types[field].code == field',0
					; DATA XREF: sub_67DD9250+9Eo
					; sub_67DD94B0+9B6o
		align 4
aTypeExpected_t	db 'type == EXPECTED_TYPE_OF_FIELD (field)',0 ; DATA XREF: sub_67DD9250+D9o
		align 10h
aHeaderFieldsFi	db 'header->fields[field].value_pos >= 0',0 ; DATA XREF: sub_67DD9250+140o
aHeader_lenLen	db 'header_len <= len',0 ; DATA XREF: sub_67DD94B0+7Eo
		align 4
; char aFailedToCopyBu[]
aFailedToCopyBu	db 'Failed to copy buffer into new header',0Ah,0
					; DATA XREF: sub_67DD94B0:loc_67DD9708o
aLeftoverLen	db 'leftover < len',0   ; DATA XREF: sub_67DD94B0+139o
		align 10h
aStartHeader_le	db 'start + header_len == (int) _DBUS_ALIGN_VALUE (padding_start, 8)',0
					; DATA XREF: sub_67DD94B0+18Ao
		align 4
aStartHeader__0	db 'start + header_len == padding_start + padding_len',0
					; DATA XREF: sub_67DD94B0+1BDo
		align 4
a_dbus_type__14	db '_dbus_type_reader_get_current_type (&reader) == DBUS_TYPE_BYTE',0
					; DATA XREF: sub_67DD94B0+35Fo
					; sub_67DD94B0+43Ao ...
		align 4
a_dbus_type__17	db '_dbus_type_reader_get_value_pos (&reader) == FLAGS_OFFSET',0
					; DATA XREF: sub_67DD94B0+519o
		align 4
a_dbus_type__18	db '_dbus_type_reader_get_value_pos (&reader) == VERSION_OFFSET',0
					; DATA XREF: sub_67DD94B0+59Fo
a_dbus_type__19	db '_dbus_type_reader_get_current_type (&reader) == DBUS_TYPE_UINT32',0
					; DATA XREF: sub_67DD94B0+608o
					; sub_67DD94B0+6D1o
		align 4
a_dbus_type__20	db '_dbus_type_reader_get_value_pos (&reader) == BODY_LENGTH_OFFSET',0
					; DATA XREF: sub_67DD94B0+641o
aBody_lenSigned	db 'body_len == (signed) v_uint32',0 ; DATA XREF: sub_67DD94B0+6A4o
		align 4
a_dbus_type__21	db '_dbus_type_reader_get_value_pos (&reader) == SERIAL_OFFSET',0
					; DATA XREF: sub_67DD94B0+70Ao
		align 10h
a_dbus_type__22	db '_dbus_type_reader_get_current_type (&reader) == DBUS_TYPE_ARRAY',0
					; DATA XREF: sub_67DD94B0+77Fo
a_dbus_type__23	db '_dbus_type_reader_get_value_pos (&reader) == FIELDS_ARRAY_LENGTH_'
					; DATA XREF: sub_67DD94B0+7B8o
		db 'OFFSET',0
a_dbus_type__24	db '_dbus_type_reader_get_current_type (&array_reader) == DBUS_TYPE_S'
					; DATA XREF: sub_67DD94B0+84Ao
		db 'TRUCT',0
		align 10h
a_dbus_type__25	db '_dbus_type_reader_get_current_type (&struct_reader) == DBUS_TYPE_'
					; DATA XREF: sub_67DD94B0+88Fo
		db 'BYTE',0
; char aInvalidHeaderF[]
aInvalidHeaderF	db 'invalid header field code',0Ah,0 ; DATA XREF: sub_67DD94B0+AABo
		align 4
; char aUnknownHeaderF[]
aUnknownHeaderF	db 'unknown header field code %d, skipping',0Ah,0
					; DATA XREF: sub_67DD94B0+7EEo
a_dbus_type__26	db '_dbus_type_reader_get_current_type (&struct_reader) == DBUS_TYPE_'
					; DATA XREF: sub_67DD94B0+8FBo
		db 'VARIANT',0
		align 4
; char aFieldDShouldHa[]
aFieldDShouldHa	db 'Field %d should have type %d but has %d',0Ah,0
					; DATA XREF: sub_67DD94B0+9FBo
		align 4
; char aHeaderFieldDSe[]
aHeaderFieldDSe	db 'Header field %d seen a second time',0Ah,0 ; DATA XREF: sub_67DD94B0+A7Eo
; char aInitiallyCachi[]
aInitiallyCachi	db 'initially caching field %d',0Ah,0 ; DATA XREF: sub_67DD94B0+B95o
aNoneOfTheKnown	db 'none of the known fields should have this type',0
					; DATA XREF: sub_67DD94B0+FB3o
		align 4
; char aMessageIsOnThe[]
aMessageIsOnThe	db 'Message is on the local interface',0Ah,0 ; DATA XREF: sub_67DD94B0+F7Ao
		align 4
; char aMessageIsFromT[]
aMessageIsFromT	db 'Message is from the local path',0Ah,0 ; DATA XREF: sub_67DD94B0+E64o
aUnknownFieldSh	db 'unknown field shouldn',27h,'t be seen here',0
					; DATA XREF: sub_67DD94B0+C68o
aBad_string_cod	db 'bad_string_code != DBUS_VALID',0 ; DATA XREF: sub_67DD94B0+D0Bo
; char aFieldDWasInval[]
aFieldDWasInval	db 'Field %d was invalid',0Ah,0 ; DATA XREF: sub_67DD94B0+A27o
		align 4
; char aMandatoryField[]
aMandatoryField	db 'Mandatory fields were missing, code %d',0Ah,0
					; DATA XREF: sub_67DD94B0+CADo
a_dbus_type__15	db '_dbus_type_reader_get_value_pos (&reader) == BYTE_ORDER_OFFSET',0
					; DATA XREF: sub_67DD94B0+398o
aV_byteByte_ord	db 'v_byte == byte_order',0 ; DATA XREF: sub_67DD94B0+3F4o
a_dbus_type__16	db '_dbus_type_reader_get_value_pos (&reader) == TYPE_OFFSET',0
					; DATA XREF: sub_67DD94B0+473o
		align 4
off_67E206DC	dd offset loc_67DDA2CC	; DATA XREF: sub_67DD94B0+CE2r
		dd offset loc_67DDA27E	; jump table for switch	statement
		dd offset loc_67DDA26F
		dd offset loc_67DDA260
		dd offset loc_67DDA244
		dd offset loc_67DDA235
		dd offset loc_67DDA199
		dd offset loc_67DD9CC2
		dd offset loc_67DD9CC2
aFieldWasMarked	db 'field was marked present in cache but wasn',27h,'t found',0
					; DATA XREF: sub_67DDA470+42Co
aIntV_byteField	db '((int) v_BYTE) == field',0 ; DATA XREF: sub_67DDA470+193o
aNoVariantField	db 'no variant field?',0 ; DATA XREF: sub_67DDA470+448o
		align 10h
a_dbus_type_r_5	db '_dbus_type_reader_get_current_type (&variant) == type',0
					; DATA XREF: sub_67DDA470+1F5o
		align 4
aRecurseIntoArr	db 'recurse into ARRAY should not have used memory',0
					; DATA XREF: sub_67DDA470+410o
		align 4
aArray_u_array_	db 'array.u.array.len_pos == FIELDS_ARRAY_LENGTH_OFFSET',0
					; DATA XREF: sub_67DDA470+314o
aArray_u_arra_0	db 'array.u.array.start_pos == FIRST_FIELD_OFFSET',0
					; DATA XREF: sub_67DDA470+346o
		align 4
aArray_value_po	db 'array.value_pos == HEADER_END_BEFORE_PADDING (header)',0
					; DATA XREF: sub_67DDA470+37Bo
		align 4
aUnrecurseFromA	db 'unrecurse from ARRAY should not have used memory',0
					; DATA XREF: sub_67DDA470+3E4o
		align 4
off_67E20898	dd offset aYyyyuuaYv	; DATA XREF: sub_67DD7F50+84o
					; sub_67DD8090+27o ...
					; "yyyyuua(yv)"
		dd 0Ch,	14h, 0Ch, 3
a_dbus_header_b	db '_dbus_header_byteswap',0 ; DATA XREF: sub_67DD7F50+30o
a_dbus_header_d	db '_dbus_header_delete_field',0 ; DATA XREF: sub_67DD8410+1A1o
		align 10h
a_dbus_header_1	db '_dbus_header_cache_known_nonexistent',0 ; DATA XREF: sub_67DD8410+3Ao
aFind_field_for	db 'find_field_for_modification',0 ; DATA XREF: sub_67DD8090+6Co
					; sub_67DD8090+D8o
aReserve_header	db 'reserve_header_padding',0 ; DATA XREF: sub_67DD8410:loc_67DD84C0o
					; sub_67DD8E90+A1o ...
aCorrect_header	db 'correct_header_padding',0 ; DATA XREF: sub_67DD81B0+7o
a_dbus_header_c	db '_dbus_header_cache_check',0 ; DATA XREF: sub_67DD8410+161o
					; sub_67DD9250+E6o ...
a_dbus_header_0	db '_dbus_header_cache_revalidate',0 ; DATA XREF: sub_67DD8260+DCo
					; sub_67DD8260+133o
byte_67E20986	db 0			; DATA XREF: sub_67DD9250+73r
					; sub_67DD94B0+9C0r
byte_67E20987	db 0			; DATA XREF: sub_67DD9250+ABr
					; sub_67DD94B0+9D8r
		dd 73026F01h, 73047303h, 73067505h, 67087307h
		db 9, 75h
a_dbus_header_g	db '_dbus_header_get_field_basic',0 ; DATA XREF: sub_67DD9250+15o
					; sub_67DD9250+4Bo ...
a_dbus_header_s	db '_dbus_header_set_field_basic',0 ; DATA XREF: sub_67DDA470+18o
					; sub_67DDA470+2F6o ...
aSet_basic_fiel	db 'set_basic_field',0  ; DATA XREF: sub_67DDA470+11Do
					; sub_67DDA470+170o ...
a_dbus_header_l	db '_dbus_header_load',0 ; DATA XREF: sub_67DD94B0+37o
					; sub_67DD94B0+66o ...
		align 4
off_67E209F8	dd offset aOrg_freedes_64 ; DATA XREF: sub_67DD94B0+DD5o
					; sub_67DD94B0+DF1o
					; "org.freedesktop.DBus.Local"
		dd 1Bh,	23h, 1Bh, 3
off_67E20A0C	dd offset aOrgFreedeskt_1 ; DATA XREF: sub_67DD94B0+E23o
					; sub_67DD94B0+E3Fo
					; "/org/freedesktop/DBus/Local"
		dd 1Ch,	24h, 1Ch, 3
aLoad_and_valid	db 'load_and_validate_field',0 ; DATA XREF: sub_67DD94B0+92Eo
					; sub_67DD94B0+96Do ...
		align 10h
a_dbus_header_h	db '_dbus_header_have_message_untrusted',0 ; DATA XREF: sub_67DD8850+21o
					; sub_67DD8850+54o ...
a_dbus_header_6	db '_dbus_header_create',0 ; DATA XREF: sub_67DD8E90+44o
					; sub_67DD8E90+71o
a_dbus_header_4	db '_dbus_header_set_serial',0 ; DATA XREF: sub_67DD8C00+DBo
					; dbus_message_set_serial-BD89o
a_dbus_header_3	db '_dbus_header_get_message_type',0 ; DATA XREF: sub_67DD7EF0+18o
aYyyyuuaYv	db 'yyyyuua(yv)',0      ; DATA XREF: .rdata:off_67E20898o
aOrg_freedes_64	db 'org.freedesktop.DBus.Local',0 ; DATA XREF: .rdata:off_67E209F8o
aOrgFreedeskt_1	db '/org/freedesktop/DBus/Local',0 ; DATA XREF: .rdata:off_67E20A0Co
		align 10h
aRBuildWin32l_7	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DDA8D0+34o
					; sub_67DDA8D0+158o ...
		db 's-marshal-byteswap.c',0
		align 4
aArray_lenAlign	db '(array_len / alignment) < DBUS_MAXIMUM_ARRAY_LENGTH',0
					; DATA XREF: sub_67DDA8D0+41Co
aCurrent_typeDb	db 'current_type == DBUS_TYPE_STRING || current_type == DBUS_TYPE_OBJ'
					; DATA XREF: sub_67DDA8D0+3A6o
		db 'ECT_PATH',0
		align 4
aAttemptedToByt	db 'attempted to byteswap unix fds which makes no sense',0
					; DATA XREF: sub_67DDA8D0+160o
aInvalidTypecod	db 'invalid typecode in supposedly-validated signature',0
					; DATA XREF: sub_67DDA8D0+3Co
		align 10h
off_67E20C40	dd offset loc_67DDABE4	; DATA XREF: sub_67DDA8D0:loc_67DDA918r
		dd offset loc_67DDABA0	; jump table for switch	statement
		dd offset loc_67DDA8FC
		dd offset loc_67DDAAC0
		dd offset loc_67DDAA60
		dd offset loc_67DDA8FC
		dd offset loc_67DDAA40
		dd offset loc_67DDAA20
		dd offset loc_67DDABA0
		dd offset loc_67DDA8FC
		dd offset loc_67DDA8FC
		dd offset loc_67DDA8FC
		dd offset loc_67DDA8FC
		dd offset loc_67DDAA00
		dd offset loc_67DDABE4
		dd offset loc_67DDA8FC
		dd offset loc_67DDAA00
		dd offset loc_67DDAA60
		dd offset loc_67DDABE4
		dd offset loc_67DDAAC0
		dd offset loc_67DDABA0
		dd offset loc_67DDA940
		dd offset loc_67DDA8FC
		dd offset loc_67DDAAC0
		dd offset loc_67DDA920
aValue_pos0	db 'value_pos >= 0',0   ; DATA XREF: sub_67DDADE0+41o
		align 4
aValue_pos_dbus	db 'value_pos <= _dbus_string_get_length (value_str)',0
					; DATA XREF: sub_67DDADE0+72o
a_dbus_marshal_	db '_dbus_marshal_byteswap',0 ; DATA XREF: sub_67DDADE0+29o
					; sub_67DDADE0+5Ao
aByteswap_body_	db 'byteswap_body_helper',0 ; DATA XREF: sub_67DDA8D0+38Eo
					; sub_67DDA8D0+404o
		align 10h
; char aRBuildWin32l_6[]
aRBuildWin32l_6	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: .text:67DDB103o
					; sub_67DDB140+29o ...
		db 's-marshal-recursive.c',0
		align 4
aLhsValue_strRh	db 'lhs->value_str == rhs->value_str',0 ; DATA XREF: .text:67DDB10Bo
					; sub_67DDC9D0+4Ao ...
aType_strNull	db 'type_str != NULL',0 ; DATA XREF: sub_67DDB140+31o
aType_posNull	db 'type_pos != NULL',0 ; DATA XREF: sub_67DDB140+60o
aPDbus_struct_e	db '*p != DBUS_STRUCT_END_CHAR',0 ; DATA XREF: sub_67DDB140+8Bo
					; sub_67DDB140+105o
		align 4
aPDbus_dict_ent	db '*p != DBUS_DICT_ENTRY_END_CHAR',0 ; DATA XREF: sub_67DDB140+BBo
					; sub_67DDB140+12Co
aPDbus_type_inv	db '*p != DBUS_TYPE_INVALID',0 ; DATA XREF: sub_67DDB140+18Bo
					; sub_67DDB140+1B2o ...
aReaderKlassTyp	db '!reader->klass->types_only',0 ; DATA XREF: .text:67DDB3E0o
					; dbus_message_iter_get_array_len-747Eo ...
		align 4
aReaderKlassArr	db 'reader->klass == &array_reader_class',0
					; DATA XREF: dbus_message_iter_get_array_len-7446o
					; sub_67DDD930+68o ...
		align 4
a_dbus_align__1	db '_DBUS_ALIGN_VALUE (len_pos, 4) == (unsigned) len_pos',0
					; DATA XREF: dbus_message_iter_get_array_len-73F2o
					; sub_67DDDA30+16Co ...
		align 4
aReaderU_array_	db 'reader->u.array.start_pos - len_pos - 4 < 8',0
					; DATA XREF: dbus_message_iter_get_array_len-73A7o
					; sub_67DDDA30+1B7o ...
aTDbus_struct_e	db 't != DBUS_STRUCT_END_CHAR',0 ; DATA XREF: sub_67DDB560+A1o
aTDbus_struct_b	db 't != DBUS_STRUCT_BEGIN_CHAR',0 ; DATA XREF: sub_67DDB560+C9o
aTDbus_dict_ent	db 't != DBUS_DICT_ENTRY_END_CHAR',0 ; DATA XREF: sub_67DDB560+F1o
aTDbus_dict_e_0	db 't != DBUS_DICT_ENTRY_BEGIN_CHAR',0 ; DATA XREF: sub_67DDB560+119o
a_dbus_type_r_7	db '_dbus_type_reader_get_current_type (reader) == DBUS_TYPE_ARRAY',0
					; DATA XREF: sub_67DDB6E0+28o
		align 4
a_dbus_strin_43	db '_dbus_string_get_byte (sub->type_str, sub->type_pos) == DBUS_STRU'
					; DATA XREF: sub_67DDB740+78o
					; sub_67DDCC00+78o
		db 'CT_BEGIN_CHAR || _dbus_string_get_byte (sub->type_str, sub->type_'
		db 'pos) == DBUS_DICT_ENTRY_BEGIN_CHAR',0
		align 4
; char aArrayOrVariant[]
aArrayOrVariant	db 'Array or variant type requires that type %s be written, but %s wa'
					; DATA XREF: sub_67DDB7F0+CBo
		db 's written.',0Ah
		db 'The overall signature expected here was ',27h,'%s',27h,' and we are on '
		db 'byte %d of that signature.',0Ah,0
		align 4
; char aArrayOrVaria_0[]
aArrayOrVaria_0	db 'Array or variant type wasn',27h,'t expecting any more values to be w'
					; DATA XREF: sub_67DDB7F0+11Bo
		db 'ritten into it, but a value %s was written.',0Ah
		db 'The overall signature expected here was ',27h,'%s',27h,' and we are on '
		db 'byte %d of that signature.',0Ah,0
		align 4
aBadTypeInserte	db 'bad type inserted somewhere inside an array or variant',0
					; DATA XREF: sub_67DDB7F0+EFo
		align 4
aFailedToInsert	db 'failed to insert struct typecode after prealloc',0
					; DATA XREF: sub_67DDB920+A2o
aShouldNotHaveF	db 'should not have failed to insert alignment padding for struct',0
					; DATA XREF: sub_67DDB920+BEo
		align 4
aFailedToWriteT	db 'failed to write typecode after prealloc',0 ; DATA XREF: sub_67DDB9F0+AEo
					; sub_67DDCF20+4C5o ...
aSubU_array_sta	db '(sub->u.array.start_pos - (len_pos + 4)) < 8',0
					; DATA XREF: sub_67DDBAB0+9Bo
		align 4
; char aWritingAnEleme[]
aWritingAnEleme	db 'Writing an element of type %s, but the expected type here is %s',0Ah
					; DATA XREF: sub_67DDBB80+4EAo
		db 'The overall signature expected here was ',27h,'%s',27h,' and we are on '
		db 'byte %d of that signature.',0Ah,0
		align 4
; char aWritingAnEle_0[]
aWritingAnEle_0	db 'Writing an element of type %s, but no value is expected here',0Ah
					; DATA XREF: sub_67DDBB80+790o
		db 'The overall signature expected here was ',27h,'%s',27h,' and we are on '
		db 'byte %d of that signature.',0Ah,0
aBadArrayElemen	db 'bad array element or variant content written',0
					; DATA XREF: sub_67DDBB80+50Eo
		align 4
; char aWritingAnArray[]
aWritingAnArray	db 'Writing an array of ',27h,'%s',27h,' but this is incompatible with the '
					; DATA XREF: sub_67DDBB80+351o
		db 'expected type of elements in the parent array',0Ah,0
		align 4
aIncompatibleTy	db 'incompatible type for child array',0 ; DATA XREF: sub_67DDBB80+371o
		align 4
aFailedToInse_0	db 'failed to insert array typecode after prealloc',0
					; DATA XREF: sub_67DDBB80+7EDo
		align 4
aShouldNotHav_2	db 'should not have failed to insert array element typecodes',0
					; DATA XREF: sub_67DDBB80+7D1o
		align 4
aWriterType_p_0	db 'writer->type_pos_is_expectation',0 ; DATA XREF: sub_67DDBB80+6CBo
					; dbus_message_iter_append_fixed_array-9C7Do
aShouldNotHav_1	db 'should not have failed to insert array len',0
					; DATA XREF: sub_67DDBB80+7B5o
		align 10h
aSubU_array_len	db 'sub->u.array.len_pos == sub->value_pos - 4',0
					; DATA XREF: sub_67DDBB80+23Eo
		align 4
aShouldNotHav_0	db 'should not have failed to insert alignment padding',0
					; DATA XREF: sub_67DDBB80+71Eo
		align 10h
a_dbus_align_va	db '_DBUS_ALIGN_VALUE (sub->u.array.len_pos, 4) == (unsigned) sub->u.'
					; DATA XREF: sub_67DDBB80+63Co
		db 'array.len_pos',0
		align 10h
aSubU_array_l_0	db 'sub->u.array.len_pos < sub->u.array.start_pos',0
					; DATA XREF: sub_67DDBB80+2AAo
					; sub_67DDBB80+3AAo ...
		align 10h
aIs_array_appen	db 'is_array_append || sub->u.array.start_pos == sub->value_pos',0
					; DATA XREF: sub_67DDBB80+3E6o
aShouldNotHav_6	db 'should not have failed to insert variant type sig len',0
					; DATA XREF: sub_67DDBB80+85Do
		align 4
aShouldNotHav_5	db 'should not have failed to insert variant type sig',0
					; DATA XREF: sub_67DDBB80+841o
		align 4
aShouldNotHav_4	db 'should not have failed to insert variant type nul termination',0
					; DATA XREF: sub_67DDBB80+825o
		align 4
aShouldNotHav_3	db 'should not have failed to insert alignment padding for variant bo'
					; DATA XREF: sub_67DDBB80+809o
		db 'dy',0
aTriedToRecurse	db 'tried to recurse into type that doesn',27h,'t support that',0
					; DATA XREF: sub_67DDBB80+109o
		align 4
aWriterType_pos	db '!writer->type_pos_is_expectation || (writer->type_pos_is_expectat'
					; DATA XREF: sub_67DDC490+3Ao
		db 'ion && sub->type_pos_is_expectation)',0
		align 4
aWriterContaine	db 'writer->container_type == DBUS_TYPE_ARRAY',0
					; DATA XREF: sub_67DDC490+C6o
					; dbus_message_iter_append_fixed_array-9CE4o ...
		align 4
aDbus_type_is_f	db 'dbus_type_is_fixed (element_type)',0
					; DATA XREF: dbus_message_iter_append_fixed_array-9CADo
					; sub_67DDDA30+DCo
aN_elements0	db 'n_elements >= 0',0  ; DATA XREF: dbus_message_iter_append_fixed_array-9C44o
		align 4
aOomShouldNotHa	db 'OOM should not happen if only verifying typecode',0
					; DATA XREF: dbus_message_iter_append_fixed_array-9BC9o
		align 10h
aCanTRecurseInt	db 'can',27h,'t recurse into variant typecode',0
					; DATA XREF: sub_67DDC730+1C4o
; char aRecursingIntoT[]
aRecursingIntoT	db 'recursing into type %s',0Ah,0 ; DATA XREF: sub_67DDC730+C6o
; char aYouCanTRecurse[]
aYouCanTRecurse	db 'You can',27h,'t recurse into an empty array or off the end of a mess'
					; DATA XREF: sub_67DDC730:loc_67DDC8D3o
		db 'age body',0Ah,0
aDonTYetHandleR	db 'don',27h,'t yet handle recursing into this type',0
					; DATA XREF: sub_67DDC730+106o
		align 10h
aSubKlassAll_re	db 'sub->klass == all_reader_classes[sub->klass->id]',0
					; DATA XREF: sub_67DDC730+76o
		align 4
aWriterEnabled_	db '(!writer->enabled && !_dbus_type_reader_greater_than (reader, sta'
					; DATA XREF: sub_67DDC9D0+80o
		db 'rt_after)) || (writer->enabled && _dbus_type_reader_greater_than '
		db '(reader, start_after))',0
		align 10h
a_dbus_align__0	db '_DBUS_ALIGN_VALUE (fixup.len_pos_in_reader, 4) == (unsigned) fixu'
					; DATA XREF: sub_67DDCF20+268o
		db 'p.len_pos_in_reader',0
		align 4
aFLen_pos_in_re	db 'f->len_pos_in_reader == fixup->len_pos_in_reader',0
					; DATA XREF: sub_67DDCF20+32Eo
aFNew_lenFixupN	db 'f->new_len == fixup->new_len',0 ; DATA XREF: sub_67DDCF20+35Do
		align 4
aDbus_type_is_b	db 'dbus_type_is_basic (current_type)',0 ; DATA XREF: sub_67DDCF20+3E0o
					; sub_67DDE050+DDo
aRealign_rootNu	db 'realign_root != NULL',0 ; DATA XREF: sub_67DDD6B0+32o
					; sub_67DDD930+41o ...
		align 10h
aRealign_reader	db 'realign_reader.value_pos <= reader->value_pos',0
					; DATA XREF: sub_67DDD6B0+C6o
		align 10h
aElement_typeDb	db 'element_type != DBUS_TYPE_INVALID',0 ; DATA XREF: sub_67DDDA30+A3o
		align 4
aReaderValue__0	db 'reader->value_pos >= reader->u.array.start_pos',0
					; DATA XREF: sub_67DDDA30+114o
					; sub_67DDDCC0+FBo ...
aRemaining_lenT	db 'remaining_len <= total_len',0 ; DATA XREF: sub_67DDDA30+205o
		align 10h
aRemaining_lenA	db '(remaining_len % alignment) == 0',0 ; DATA XREF: sub_67DDDA30+251o
aReaderValue__1	db 'reader->value_pos < end_pos',0 ; DATA XREF: sub_67DDDCC0+CDo
aReaderValue__2	db 'reader->value_pos <= end_pos',0 ; DATA XREF: sub_67DDDCC0+181o
					; sub_67DDDF20+CDo
		align 4
aReaderValue_st	db 'reader->value_str == realign_root->value_str',0
					; DATA XREF: sub_67DDE050+63o
		align 4
aReaderValue_po	db 'reader->value_pos >= realign_root->value_pos',0
					; DATA XREF: sub_67DDE050+97o
aWriter_write_r	db 'writer_write_reader_helper',0 ; DATA XREF: sub_67DDCF20+247o
					; sub_67DDCF20+3C8o
aWriter_recurse	db 'writer_recurse_array',0 ; DATA XREF: sub_67DDBB80+226o
					; sub_67DDBB80+292o ...
aWriter_get_arr	db 'writer_get_array_len',0 ; DATA XREF: sub_67DDC490+AEo
					; sub_67DDCF20+1F4o
aAppend_fixup	db 'append_fixup',0     ; DATA XREF: sub_67DDCF20+316o
					; sub_67DDCF20+345o
aEnable_if_afte	db 'enable_if_after',0  ; DATA XREF: sub_67DDC9D0:loc_67DDCA38o
		align 10h
a_dbus_type_w_0	db '_dbus_type_writer_write_fixed_multi',0
					; DATA XREF: dbus_message_iter_append_fixed_array-9D00o
					; dbus_message_iter_append_fixed_array-9CC5o ...
a_dbus_type_wri	db '_dbus_type_writer_unrecurse',0 ; DATA XREF: sub_67DDC490+22o
a_dbus_type_r_9	db '_dbus_type_reader_greater_than',0 ; DATA XREF: .text:67DDB0F3o
					; sub_67DDC9D0+29o ...
aArray		db 'array',0            ; DATA XREF: .rdata:off_67E21CE8o
		align 4
off_67E21CE8	dd offset aArray	; DATA XREF: dbus_message_iter_get_array_len-743Eo
					; sub_67DDC730:loc_67DDC8A0o ...
					; "array"
		dd 6, 0
		dd offset sub_67DDBAB0
		dd offset sub_67DDDF20
		dd offset sub_67DDDCC0
a_dbus_type__10	db '_dbus_type_reader_delete',0 ; DATA XREF: sub_67DDD930+29o
					; sub_67DDD930+50o
aArray_reader_n	db 'array_reader_next',0 ; DATA XREF: sub_67DDDCC0+B5o
					; sub_67DDDCC0+E3o ...
aArray_reader_g	db 'array_reader_get_array_len',0
					; DATA XREF: dbus_message_iter_get_array_len-7425o
					; dbus_message_iter_get_array_len-73BFo ...
aArray_reader_c	db 'array_reader_check_finished',0 ; DATA XREF: sub_67DDDF20+B5o
					; sub_67DDDF20+E3o
aArray_reader_r	db 'array_reader_recurse',0 ; DATA XREF: sub_67DDBAB0+83o
aReplacement_bl	db 'replacement_block_replace',0 ; DATA XREF: sub_67DDD6B0+1Ao
					; sub_67DDD6B0+9Eo
a_dbus_type_r_8	db '_dbus_type_reader_set_basic',0 ; DATA XREF: sub_67DDE050+Eo
					; sub_67DDE050+4Bo ...
		align 20h
aReader_set_bas	db 'reader_set_basic_variable_length',0 ; DATA XREF: sub_67DDE050+135o
aStructTypes	db 'struct types',0     ; DATA XREF: .rdata:off_67E21DF0o
		align 10h
off_67E21DF0	dd offset aStructTypes	; DATA XREF: sub_67DDC730+11Co
					; sub_67DDC730+123o ...
					; "struct types"
		dd 3, 1
		dd offset sub_67DDB740
		dd 0
		dd offset sub_67DDCEE0
aStruct		db 'struct',0           ; DATA XREF: .rdata:off_67E21E10o
		align 10h
off_67E21E10	dd offset aStruct	; DATA XREF: sub_67DDC730:loc_67DDC8C2o
					; sub_67DDC730+199o ...
					; "struct"
		dd 2, 0
		dd offset sub_67DDCC00
		dd 0
		dd offset sub_67DDCEE0
aDict_entryType	db 'dict_entry types',0 ; DATA XREF: .rdata:off_67E21E3Co
		align 4
off_67E21E3C	dd offset aDict_entryType ; DATA XREF: sub_67DDC730+13Ao
					; sub_67DDC730+141o ...
					; "dict_entry types"
		dd 5, 1
		dd offset sub_67DDB740
		align 10h
		dd offset sub_67DDCEA0
aDict_entry	db 'dict_entry',0       ; DATA XREF: .rdata:off_67E21E60o
		align 10h
off_67E21E60	dd offset aDict_entry	; DATA XREF: sub_67DDC730:loc_67DDC8B1o
					; sub_67DDC730+188o ...
					; "dict_entry"
		dd 4, 0
		dd offset sub_67DDCC00
		dd 0
		dd offset sub_67DDCEA0
aArrayTypes	db 'array types',0      ; DATA XREF: .rdata:off_67E21E84o
off_67E21E84	dd offset aArrayTypes	; DATA XREF: sub_67DDC730+15Ao
					; sub_67DDC730+161o ...
					; "array types"
		dd 7, 1
		dd offset sub_67DDAEE0
		align 8
		dd offset sub_67DDAF40
aVariant	db 'variant',0          ; DATA XREF: .rdata:off_67E21EA4o
off_67E21EA4	dd offset aVariant	; DATA XREF: sub_67DDC730+52o
					; sub_67DDC730+59o ...
					; "variant"
		dd 8, 0
		dd offset sub_67DDC3F0
		align 8
		dd offset sub_67DDCD20
		align 10h
off_67E21EC0	dd offset off_67E21F04	; DATA XREF: sub_67DDC730+81r
		dd offset off_67E21F28
		dd offset off_67E21E10
		dd offset off_67E21DF0
		dd offset off_67E21E60
		dd offset off_67E21E3C
		dd offset off_67E21CE8
		dd offset off_67E21E84
		dd offset off_67E21EA4
a_dbus_type_r_2	db '_dbus_type_reader_recurse',0 ; DATA XREF: sub_67DDC730:loc_67DDC78Eo
					; sub_67DDC730+CEo
aBody		db 'body',0             ; DATA XREF: .rdata:off_67E21F04o
		align 4
off_67E21F04	dd offset aBody		; DATA XREF: sub_67DDAF50+12o
					; .rdata:off_67E21EC0o
					; "body"
		dd 4 dup(0)
		dd offset sub_67DDCD20
aBodyTypes	db 'body types',0       ; DATA XREF: .rdata:off_67E21F28o
		align 4
off_67E21F28	dd offset aBodyTypes	; DATA XREF: sub_67DDAF90+Fo
					; .rdata:67E21EC4o
					; "body	types"
		dd 2 dup(1), 2 dup(0)
		dd offset sub_67DDCD20
aStruct_or_dict	db 'struct_or_dict_entry_types_only_reader_recurse',0
					; DATA XREF: sub_67DDB740:loc_67DDB7A0o
					; sub_67DDCC00:loc_67DDCC60o
		align 20h
a_dbus_type__11	db '_dbus_type_reader_read_fixed_multi',0 ; DATA XREF: sub_67DDDA30+Bo
					; sub_67DDDA30+47o ...
		align 20h
a_dbus_type__12	db '_dbus_type_reader_get_array_length',0
					; DATA XREF: dbus_message_iter_get_array_len-7496o
					; dbus_message_iter_get_array_len-745Eo
a_dbus_type_r_3	db '_dbus_type_reader_read_basic',0 ; DATA XREF: sub_67DDC900+8o
					; sub_67DDCF20+3F8o
a_dbus_type__29	db '_dbus_type_reader_read_raw',0 ; DATA XREF: .text:67DDB3C8o
		align 10h
a_dbus_type_r_6	db '_dbus_type_reader_get_element_type',0 ; DATA XREF: sub_67DDB6E0+10o
		align 20h
a_dbus_type_r_1	db '_dbus_type_reader_get_current_type',0 ; DATA XREF: sub_67DDB560+89o
					; sub_67DDB560+B1o ...
a_dbus_type_sig	db '_dbus_type_signature_next',0 ; DATA XREF: sub_67DDB140+11o
					; sub_67DDB140+48o ...
		align 10h
aInvalid_0	db 'Invalid',0          ; DATA XREF: sub_67DDE340+4o
					; .rdata:67E22DF0o
; char aRBuildWin32l_3[]
aRBuildWin32l_3	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DDE3A0+2Co
					; sub_67DDE3A0+5Bo ...
		db 's-marshal-validate.c',0
aStart0		db 'start >= 0',0       ; DATA XREF: sub_67DDE3A0+34o
					; .text:67DDE5D4o ...
aLen0		db 'len >= 0',0         ; DATA XREF: sub_67DDE3A0+63o
					; .text:67DDE603o ...
		align 4
aStart_dbus_str	db 'start <= _dbus_string_get_length (str)',0 ; DATA XREF: sub_67DDE3A0+90o
					; .text:67DDE630o ...
aType_strNull_0	db 'type_str != NULL',0 ; DATA XREF: sub_67DDEA20+70o
					; sub_67DDF410+87o
aType_pos_dbus_	db 'type_pos < _DBUS_INT32_MAX - len',0 ; DATA XREF: sub_67DDEA20+A7o
					; sub_67DDF410+BEo
aType_pos0	db 'type_pos >= 0',0    ; DATA XREF: sub_67DDEA20+102o
					; sub_67DDF410+112o
aLastDbus_type_	db 'last != DBUS_TYPE_ARRAY',0 ; DATA XREF: sub_67DDEA20+340o
					; sub_67DDF410+357o
		align 4
aLastDbus_struc	db 'last != DBUS_STRUCT_BEGIN_CHAR',0 ; DATA XREF: sub_67DDEA20+370o
					; sub_67DDF410+387o
		align 4
aLastDbus_dict_	db 'last != DBUS_DICT_ENTRY_BEGIN_CHAR',0 ; DATA XREF: sub_67DDEA20+39Fo
					; sub_67DDF410+3B6o
		align 4
off_67E221D8	dd offset loc_67DDEBB1,	offset loc_67DDEC45, offset loc_67DDEB9D
					; DATA XREF: sub_67DDEA20+18Ar
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D ; jump	table for switch statement
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEC33,	offset loc_67DDEBDC, offset loc_67DDEB9D
		dd offset loc_67DDEBDC,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEBDC,	offset loc_67DDEBDC, offset loc_67DDEBDC
		dd offset loc_67DDEB9D,	offset loc_67DDEB9D, offset loc_67DDEB9D
		dd offset loc_67DDEB9D,	offset loc_67DDEBDC, offset loc_67DDEBDC
		dd offset loc_67DDEB9D,	offset loc_67DDEBDC, offset loc_67DDEB9D
		dd offset loc_67DDEBDC,	offset loc_67DDEBDC, offset loc_67DDEBDC
		dd offset loc_67DDEBDC,	offset loc_67DDEB9D, offset loc_67DDEBDC
		dd offset loc_67DDEBDC,	offset loc_67DDEB9D, offset loc_67DDEC97
		dd offset loc_67DDEB9D,	offset loc_67DDEC70
off_67E22330	dd offset loc_67DDF5B4,	offset loc_67DDF670, offset loc_67DDF5A0
					; DATA XREF: sub_67DDF410+19Dr
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0 ; jump	table for switch statement
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF620,	offset loc_67DDF5DF, offset loc_67DDF5A0
		dd offset loc_67DDF5DF,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5DF,	offset loc_67DDF5DF, offset loc_67DDF5DF
		dd offset loc_67DDF5A0,	offset loc_67DDF5A0, offset loc_67DDF5A0
		dd offset loc_67DDF5A0,	offset loc_67DDF5DF, offset loc_67DDF5DF
		dd offset loc_67DDF5A0,	offset loc_67DDF5DF, offset loc_67DDF5A0
		dd offset loc_67DDF5DF,	offset loc_67DDF5DF, offset loc_67DDF5DF
		dd offset loc_67DDF5DF,	offset loc_67DDF5A0, offset loc_67DDF5DF
		dd offset loc_67DDF5DF,	offset loc_67DDF5A0, offset loc_67DDF6D0
		dd offset loc_67DDF5A0,	offset loc_67DDF6A3
aPEnd		db 'p <= end',0         ; DATA XREF: sub_67DDF930+AFo
aPEnd_0		db 'p < end',0          ; DATA XREF: sub_67DDF930+3BBo
		align 4
; char aPPEndPClaimed_[]
aPPEndPClaimed_	db 'p = %p end = %p claimed_len %u',0Ah,0 ; DATA XREF: sub_67DDF930+3EEo
a_dbus_type__27	db '_dbus_type_reader_get_current_type (&sub) != DBUS_TYPE_INVALID',0
					; DATA XREF: sub_67DDF930+4D3o
		align 4
a_dbus_type__28	db '_dbus_type_reader_get_current_type (&sub) == DBUS_TYPE_INVALID',0
					; DATA XREF: sub_67DDF930+55Bo
		align 4
aInvalidTypec_0	db 'invalid typecode in supposedly-validated signature',0
					; DATA XREF: sub_67DDF930+7Bo
		align 10h
; char aNotEnoughDataP[]
aNotEnoughDataP	db 'not enough data!!! p = %p end = %p end-p = %d',0Ah,0
					; DATA XREF: sub_67DDF930+6F8o
		align 10h
off_67E225A0	dd offset loc_67DDFBB7	; DATA XREF: sub_67DDF930:loc_67DDFAA3r
		dd offset loc_67DDFBF0	; jump table for switch	statement
		dd offset loc_67DDF99B
		dd offset loc_67DDFBF0
		dd offset loc_67DDFC40
		dd offset loc_67DDF99B
		dd offset loc_67DDFC73
		dd offset loc_67DDFBF0
		dd offset loc_67DDFBF0
		dd offset loc_67DDF99B
		dd offset loc_67DDF99B
		dd offset loc_67DDF99B
		dd offset loc_67DDF99B
		dd offset loc_67DDFBF0
		dd offset loc_67DDFBB7
		dd offset loc_67DDF99B
		dd offset loc_67DDFBF0
		dd offset loc_67DDFC40
		dd offset loc_67DDFBB7
		dd offset loc_67DDFBF0
		dd offset loc_67DDFBF0
		dd offset loc_67DDFAE0
		dd offset loc_67DDF99B
		dd offset loc_67DDFBF0
		dd offset loc_67DDFAB0
aValue_pos0_0	db 'value_pos >= 0',0   ; DATA XREF: sub_67DE01C0+71o
		align 4
aValue_pos_db_0	db 'value_pos <= _dbus_string_get_length (value_str) - len',0
					; DATA XREF: sub_67DE01C0+9Eo
		align 4
; char aValidatingBody[]
aValidatingBody	db 'validating body from pos %d len %d sig ',27h,'%s',27h,0Ah,0
					; DATA XREF: sub_67DE01C0+D8o
aPEnd_1		db 'p == end',0         ; DATA XREF: sub_67DE01C0+1A3o
a_dbus_valida_3	db '_dbus_validate_signature',0 ; DATA XREF: .text:67DDEE52o
					; .text:67DDEE89o ...
a_dbus_validate	db '_dbus_validate_bus_name',0 ; DATA XREF: sub_67DDE3A0+12o
					; sub_67DDE3A0+4Bo ...
a_dbus_valida_2	db '_dbus_validate_member',0 ; DATA XREF: .text:67DDE5B2o
					; .text:67DDE5EBo ...
a_dbus_valida_0	db '_dbus_validate_interface',0 ; DATA XREF: sub_67DDE6E0+12o
					; sub_67DDE6E0+4Bo ...
a_dbus_valida_1	db '_dbus_validate_path',0 ; DATA XREF: .text:67DDE8F2o
					; .text:67DDE92Bo ...
		align 10h
a_dbus_valida_5	db '_dbus_validate_body_with_reason',0 ; DATA XREF: sub_67DE01C0+2Ao
					; sub_67DE01C0+59o ...
aValidate_body_	db 'validate_body_helper',0 ; DATA XREF: sub_67DDF930+97o
					; sub_67DDF930+38Fo ...
		align 10h
a_dbus_valida_4	db '_dbus_validate_signature_with_reason',0 ; DATA XREF: sub_67DDEA20+52o
					; sub_67DDEA20+8Fo ...
aOutOfMemory_0	db 'Out of memory',0    ; DATA XREF: .rdata:off_67E22D00o
aUnknownReason	db 'Unknown reason',0   ; DATA XREF: .rdata:67E22D04o
aValidButIncomp	db 'Valid but incomplete',0 ; DATA XREF: .rdata:67E22D08o
aValidityUnknow	db 'Validity unknown',0 ; DATA XREF: .rdata:67E22D0Co
aValid		db 'Valid',0            ; DATA XREF: .rdata:67E22D10o
aUnknownTypec_0	db 'Unknown typecode',0 ; DATA XREF: .rdata:67E22D14o
aMissingArrayEl	db 'Missing array element type',0 ; DATA XREF: .rdata:67E22D18o
aSignatureIsToo	db 'Signature is too long',0 ; DATA XREF: .rdata:67E22D1Co
aExceededMaximu	db 'Exceeded maximum array recursion',0 ; DATA XREF: .rdata:67E22D20o
		align 4
aExceededMaxi_0	db 'Exceeded maximum struct recursion',0 ; DATA XREF: .rdata:67E22D24o
aStructEndedBut	db 'Struct ended but not started',0 ; DATA XREF: .rdata:67E22D28o
aStructStartedB	db 'Struct started but not ended',0 ; DATA XREF: .rdata:67E22D2Co
aStructHasNoFie	db 'Struct has no fields',0 ; DATA XREF: .rdata:67E22D30o
aAlignmentPaddi	db 'Alignment padding not null',0 ; DATA XREF: .rdata:67E22D34o
aBooleanIsNotZe	db 'Boolean is not zero or one',0 ; DATA XREF: .rdata:67E22D38o
aNotEnoughData	db 'Not enough data',0  ; DATA XREF: .rdata:67E22D3Co
aTooMuchData	db 'Too much data',0    ; DATA XREF: .rdata:67E22D40o
aBadByteOrder	db 'Bad byte order',0   ; DATA XREF: .rdata:67E22D44o
aBadProtocolVer	db 'Bad protocol version',0 ; DATA XREF: .rdata:67E22D48o
aBadMessageType	db 'Bad message type',0 ; DATA XREF: .rdata:67E22D4Co
aBadSerial	db 'Bad serial',0       ; DATA XREF: .rdata:67E22D50o
aInsaneFieldsAr	db 'Insane fields array length',0 ; DATA XREF: .rdata:67E22D54o
aInsaneBodyLeng	db 'Insane body length',0 ; DATA XREF: .rdata:67E22D58o
aMessageTooLo_0	db 'Message too long',0 ; DATA XREF: .rdata:67E22D5Co
aHeaderFieldCod	db 'Header field code',0 ; DATA XREF: .rdata:67E22D60o
aHeaderFieldHas	db 'Header field has wrong type',0 ; DATA XREF: .rdata:67E22D64o
aUsesLocalInter	db 'Uses local interface',0 ; DATA XREF: .rdata:67E22D68o
aUsesLocalPath	db 'Uses local path',0  ; DATA XREF: .rdata:67E22D6Co
aHeaderFieldApp	db 'Header field appears twice',0 ; DATA XREF: .rdata:67E22D70o
aBadDestination	db 'Bad destination',0  ; DATA XREF: .rdata:67E22D74o
aBadInterface	db 'Bad interface',0    ; DATA XREF: .rdata:67E22D78o
aBadMember	db 'Bad member',0       ; DATA XREF: .rdata:67E22D7Co
aBadErrorName	db 'Bad error name',0   ; DATA XREF: .rdata:67E22D80o
aBadSender	db 'Bad sender',0       ; DATA XREF: .rdata:67E22D84o
aMissingPath	db 'Missing path',0     ; DATA XREF: .rdata:67E22D88o
aMissingInterfa	db 'Missing interface',0 ; DATA XREF: .rdata:67E22D8Co
aMissingMember	db 'Missing member',0   ; DATA XREF: .rdata:67E22D90o
aMissingErrorNa	db 'Missing error name',0 ; DATA XREF: .rdata:67E22D94o
aMissingReplySe	db 'Missing reply serial',0 ; DATA XREF: .rdata:67E22D98o
aLengthOutOfBou	db 'Length out of bounds',0 ; DATA XREF: .rdata:67E22D9Co
aArrayLengthExc	db 'Array length exceeds maximum',0 ; DATA XREF: .rdata:67E22DA0o
aBadPath	db 'Bad path',0         ; DATA XREF: .rdata:67E22DA4o
		align 4
aSignatureLengt	db 'Signature length out of bounds',0 ; DATA XREF: .rdata:67E22DA8o
aBadUtf8InStrin	db 'Bad utf8 in string',0 ; DATA XREF: .rdata:67E22DACo
aArrayLengthInc	db 'Array length incorrect',0 ; DATA XREF: .rdata:67E22DB0o
		align 4
aVariantSignatu	db 'Variant signature length out of bounds',0 ; DATA XREF: .rdata:67E22DB4o
aVariantSigna_0	db 'Variant signature bad',0 ; DATA XREF: .rdata:67E22DB8o
aVariantSigna_1	db 'Variant signature empty',0 ; DATA XREF: .rdata:67E22DBCo
		align 10h
aVariantSigna_2	db 'Variant signature specifies multiple values',0
					; DATA XREF: .rdata:67E22DC0o
aVariantSigna_3	db 'Variant signature missing nul',0 ; DATA XREF: .rdata:67E22DC4o
aStringMissingN	db 'String missing nul',0 ; DATA XREF: .rdata:67E22DC8o
aSignatureMissi	db 'Signature missing nul',0 ; DATA XREF: .rdata:67E22DCCo
		align 4
aExceededMaxi_1	db 'Exceeded maximum dict entry recursion',0 ; DATA XREF: .rdata:67E22DD0o
		align 4
aDictEntryEnded	db 'Dict entry ended but not started',0 ; DATA XREF: .rdata:67E22DD4o
		align 10h
aDictEntryStart	db 'Dict entry started but not ended',0 ; DATA XREF: .rdata:67E22DD8o
aDictEntryHasNo	db 'Dict entry has no fields',0 ; DATA XREF: .rdata:67E22DDCo
aDictEntryHasOn	db 'Dict entry has only one field',0 ; DATA XREF: .rdata:67E22DE0o
aDictEntryHasTo	db 'Dict entry has too many fields',0 ; DATA XREF: .rdata:67E22DE4o
aDictEntryNotIn	db 'Dict entry not inside array',0 ; DATA XREF: .rdata:67E22DE8o
aDictKeyMustBeB	db 'Dict key must be basic type',0 ; DATA XREF: .rdata:67E22DECo
		align 10h
aVariantsCannot	db 'Variants cannot be used to create a hugely recursive tree of valu'
					; DATA XREF: .rdata:67E22DF4o
		db 'es',0
		align 10h
off_67E22D00	dd offset aOutOfMemory_0 ; DATA	XREF: sub_67DDE340+11r
					; "Out of memory"
		dd offset aUnknownReason ; "Unknown reason"
		dd offset aValidButIncomp ; "Valid but incomplete"
		dd offset aValidityUnknow ; "Validity unknown"
		dd offset aValid	; "Valid"
		dd offset aUnknownTypec_0 ; "Unknown typecode"
		dd offset aMissingArrayEl ; "Missing array element type"
		dd offset aSignatureIsToo ; "Signature is too long"
		dd offset aExceededMaximu ; "Exceeded maximum array recursion"
		dd offset aExceededMaxi_0 ; "Exceeded maximum struct recursion"
		dd offset aStructEndedBut ; "Struct ended but not started"
		dd offset aStructStartedB ; "Struct started but	not ended"
		dd offset aStructHasNoFie ; "Struct has	no fields"
		dd offset aAlignmentPaddi ; "Alignment padding not null"
		dd offset aBooleanIsNotZe ; "Boolean is	not zero or one"
		dd offset aNotEnoughData ; "Not	enough data"
		dd offset aTooMuchData	; "Too much data"
		dd offset aBadByteOrder	; "Bad byte order"
		dd offset aBadProtocolVer ; "Bad protocol version"
		dd offset aBadMessageType ; "Bad message type"
		dd offset aBadSerial	; "Bad serial"
		dd offset aInsaneFieldsAr ; "Insane fields array length"
		dd offset aInsaneBodyLeng ; "Insane body length"
		dd offset aMessageTooLo_0 ; "Message too long"
		dd offset aHeaderFieldCod ; "Header field code"
		dd offset aHeaderFieldHas ; "Header field has wrong type"
		dd offset aUsesLocalInter ; "Uses local	interface"
		dd offset aUsesLocalPath ; "Uses local path"
		dd offset aHeaderFieldApp ; "Header field appears twice"
		dd offset aBadDestination ; "Bad destination"
		dd offset aBadInterface	; "Bad interface"
		dd offset aBadMember	; "Bad member"
		dd offset aBadErrorName	; "Bad error name"
		dd offset aBadSender	; "Bad sender"
		dd offset aMissingPath	; "Missing path"
		dd offset aMissingInterfa ; "Missing interface"
		dd offset aMissingMember ; "Missing member"
		dd offset aMissingErrorNa ; "Missing error name"
		dd offset aMissingReplySe ; "Missing reply serial"
		dd offset aLengthOutOfBou ; "Length out	of bounds"
		dd offset aArrayLengthExc ; "Array length exceeds maximum"
		dd offset aBadPath	; "Bad path"
		dd offset aSignatureLengt ; "Signature length out of bounds"
		dd offset aBadUtf8InStrin ; "Bad utf8 in string"
		dd offset aArrayLengthInc ; "Array length incorrect"
		dd offset aVariantSignatu ; "Variant signature length out of bounds"
		dd offset aVariantSigna_0 ; "Variant signature bad"
		dd offset aVariantSigna_1 ; "Variant signature empty"
		dd offset aVariantSigna_2 ; "Variant signature specifies multiple va"...
		dd offset aVariantSigna_3 ; "Variant signature missing nul"
		dd offset aStringMissingN ; "String missing nul"
		dd offset aSignatureMissi ; "Signature missing nul"
		dd offset aExceededMaxi_1 ; "Exceeded maximum dict entry recursion"
		dd offset aDictEntryEnded ; "Dict entry	ended but not started"
		dd offset aDictEntryStart ; "Dict entry	started	but not	ended"
		dd offset aDictEntryHasNo ; "Dict entry	has no fields"
		dd offset aDictEntryHasOn ; "Dict entry	has only one field"
		dd offset aDictEntryHasTo ; "Dict entry	has too	many fields"
		dd offset aDictEntryNotIn ; "Dict entry	not inside array"
		dd offset aDictKeyMustBeB ; "Dict key must be basic type"
		dd offset aInvalid_0	; "Invalid"
		dd offset aVariantsCannot ; "Variants cannot be	used to	create a hug"...
		align 10h
aInvalid	db 'invalid',0          ; DATA XREF: dbus_message_type_to_string+4o
; char aRBuildWin32l_5[]
aRBuildWin32l_5	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: dbus_message_demarshal_bytes_needed+F0o
					; .text:67DE054Ao ...
		db 's-message.c',0
		align 4
aHave_messageHe	db 'have_message || (header_len + body_len) > len',0
					; DATA XREF: dbus_message_demarshal_bytes_needed+F8o
		align 4
aLoaderCorrup_1	db '(loader->corrupted && loader->corruption_reason != DBUS_VALID) ||'
					; DATA XREF: .text:67DE0552o
					; sub_67DE0580+32o ...
		db ' (!loader->corrupted && loader->corruption_reason == DBUS_VALID)',0
aLoaderBuffer_0	db 'loader->buffer_outstanding',0 ; DATA XREF: sub_67DE05E0+20o
					; dbus_message_demarshal+111o
aBufferLoaderDa	db 'buffer == &loader->data',0 ; DATA XREF: sub_67DE05E0+5Eo
					; dbus_message_demarshal+142o
aLoaderBuffer_o	db '!loader->buffer_outstanding',0 ; DATA XREF: sub_67DE0660+20o
					; dbus_message_demarshal+C5o
aMessageLocke_0	db 'message->locked',0  ; DATA XREF: .text:67DE06CFo
					; sub_67DE0700+20o
		align 4
; char aDbusMessageI_1[]
aDbusMessageI_1	db 'dbus message iterator is NULL',0Ah,0
					; DATA XREF: sub_67DE0750:loc_67DE0862o
		align 4
; char aDbusMessageC_0[]
aDbusMessageC_0	db 'dbus message changed byte order since iterator was created',0Ah,0
					; DATA XREF: sub_67DE0750+69o
aIterU_reader_b	db 'iter->u.reader.byte_order == DBUS_COMPILER_BYTE_ORDER',0
					; DATA XREF: sub_67DE0750+98o
		align 10h
; char aDbusMessageCha[]
aDbusMessageCha	db 'dbus message changed byte order since append iterator was created'
					; DATA XREF: sub_67DE0750+32o
		db 0Ah,0
		align 4
aIterU_writer_b	db 'iter->u.writer.byte_order == DBUS_COMPILER_BYTE_ORDER',0
					; DATA XREF: sub_67DE0750+108o
		align 4
; char aDbusMessageIte[]
aDbusMessageIte	db 'dbus message iterator looks uninitialized or corrupted',0Ah,0
					; DATA XREF: sub_67DE0750:loc_67DE0795o
; char aDbusMessageI_0[]
aDbusMessageI_0	db 'dbus message iterator invalid because the message has been modifi'
					; DATA XREF: sub_67DE0750+DAo
		db 'ed (or perhaps the iterator is just uninitialized)',0Ah,0
aMethod_call	db 'method_call',0      ; DATA XREF: dbus_message_type_from_string+1Co
					; .rdata:off_67E25008o
aMethod_return	db 'method_return',0    ; DATA XREF: dbus_message_type_from_string+34o
					; .rdata:67E2500Co
aSignal		db 'signal',0           ; DATA XREF: dbus_message_type_from_string+4Eo
					; .rdata:67E25014o
aError		db 'error',0            ; DATA XREF: dbus_message_type_from_string+65o
					; .rdata:67E25010o
aConstChar_db_2	db '(*(const char*)_DBUS_FUNCTION_NAME) != ',27h,'_',27h,0
					; DATA XREF: dbus_message_get_data+20o
					; dbus_message_set_data+25o ...
aMessageNull_0	db 'message != NULL',0  ; DATA XREF: dbus_message_get_data+6Do
					; dbus_message_set_data+115o ...
aSlot0_0	db 'slot >= 0',0        ; DATA XREF: dbus_message_set_data+E0o
aSlot_p0_0	db '*slot_p >= 0',0     ; DATA XREF: dbus_message_free_data_slot+65o
		align 4
; char aClampingReques[]
aClampingReques	db 'clamping requested max message unix_fds %ld to %d',0Ah,0
					; DATA XREF: sub_67DE0B90+1Ao
		align 4
; char aClampingRequ_0[]
aClampingRequ_0	db 'clamping requested max message size %ld to %d',0Ah,0
					; DATA XREF: sub_67DE0BE0+1Ao
		align 4
aMessageGenerat	db 'message->generation == _dbus_current_generation',0
					; DATA XREF: dbus_message_ref+F4o
					; dbus_message_unref+89o
aMessageIn_cach	db '!message->in_cache',0 ; DATA XREF: dbus_message_ref+130o
					; dbus_message_unref+2E5o
aOld_refcount1	db 'old_refcount >= 1',0 ; DATA XREF: dbus_message_ref+C5o
					; dbus_message_unref+FDo
aMessage_cach_0	db 'message_cache_count >= 0',0 ; DATA XREF: sub_67DE0E70+35o
					; sub_67DE0E70+FEo ...
		align 4
aMessage_cach_1	db 'message_cache_shutdown_registered',0 ; DATA XREF: sub_67DE0E70+7Ao
aIMax_message_c	db 'i < MAX_MESSAGE_CACHE_SIZE',0 ; DATA XREF: sub_67DE0E70+123o
					; dbus_message_unref+385o
		align 4
a_dbus_atomic_0	db '_dbus_atomic_get (&message->refcount) == 0',0
					; DATA XREF: sub_67DE0E70+17Bo
					; sub_67DE35C0+2Ao ...
aMessageCounter	db 'message->counters == NULL',0 ; DATA XREF: sub_67DE0E70+1ADo
aNameNull_1	db 'name != NULL',0     ; DATA XREF: dbus_message_has_sender+E0o
					; dbus_message_has_destination+E0o ...
		align 4
aPlatformDoesnT	db 'Platform doesn',27h,'t support unix fd passing',0
					; DATA XREF: .text:67DE1923o
					; .text:67DE1943o
aMessageLocked	db '!message->locked',0 ; DATA XREF: dbus_message_set_reply_serial+114o
					; dbus_message_set_interface+F0o ...
aReply_serial_0	db 'reply_serial != 0',0 ; DATA XREF: dbus_message_set_reply_serial+E0o
aInterfaceNull_	db 'interface == NULL || _dbus_check_is_valid_interface (interface)',0
					; DATA XREF: dbus_message_set_interface+160o
					; dbus_message_new_method_call+250o
aPathNull_0	db 'path != NULL',0     ; DATA XREF: dbus_message_get_path_decomposed+100o
					; dbus_message_new_signal+260o	...
		align 4
aRealIter_typ_0	db 'real->iter_type == DBUS_MESSAGE_ITER_TYPE_WRITER',0
					; DATA XREF: sub_67DE20A0+25o
					; sub_67DE21F0+29o ...
		align 4
aRealU_writer_t	db 'real->u.writer.type_str != NULL',0 ; DATA XREF: sub_67DE20A0+5Eo
					; dbus_message_iter_abandon_container+231o
aRealSig_refcou	db 'real->sig_refcount > 0',0 ; DATA XREF: sub_67DE20A0+8Fo
					; sub_67DE21F0+69o ...
aRealSig_refc_0	db 'real->sig_refcount == 0',0 ; DATA XREF: sub_67DE20A0+D0o
					; dbus_message_iter_abandon_container+2A3o
		align 4
aSizeofDbusmess	db 'sizeof (DBusMessageRealIter) <= sizeof (DBusMessageIter)',0
					; DATA XREF: sub_67DE2390+31o
		align 4
; char aSwappingMessag[]
aSwappingMessag	db 'Swapping message into compiler byte order',0Ah,0
					; DATA XREF: sub_67DE2390+4Fo
aIterNull	db 'iter != NULL',0     ; DATA XREF: dbus_message_iter_init_append+115o
					; dbus_message_iter_init+155o
a_dbus_messag_3	db '_dbus_message_iter_check (real)',0
					; DATA XREF: dbus_message_iter_get_arg_type+D5o
					; dbus_message_iter_get_fixed_array+125o ...
aRealIter_typeD	db 'real->iter_type == DBUS_MESSAGE_ITER_TYPE_READER',0
					; DATA XREF: dbus_message_iter_get_arg_type+8Fo
					; dbus_message_iter_get_element_type+8Fo ...
aValueNull	db 'value != NULL',0    ; DATA XREF: dbus_message_iter_get_fixed_array+195o
					; dbus_message_iter_get_basic+EBo ...
		align 10h
aSubtypeDbus_ty	db '(subtype == DBUS_TYPE_INVALID) || (dbus_type_is_fixed (subtype) &'
					; DATA XREF: dbus_message_iter_get_fixed_array+166o
		db '& subtype != DBUS_TYPE_UNIX_FD)',0
aSubNull	db 'sub != NULL',0      ; DATA XREF: dbus_message_iter_recurse+118o
					; dbus_message_iter_open_container+365o
		align 10h
aDbus_messag_24	db 'dbus_message_iter_get_arg_type (iter) == DBUS_TYPE_ARRAY',0
					; DATA XREF: dbus_message_iter_get_element_type+FEo
aError_nameNull	db 'error_name != NULL',0 ; DATA XREF: dbus_message_is_error+F0o
					; dbus_message_new_error+200o ...
aInterfaceNull	db 'interface != NULL',0 ; DATA XREF: sub_67DE31A0+6Eo
					; dbus_message_is_signal+12Co ...
aMemberNull	db 'member != NULL',0   ; DATA XREF: sub_67DE31A0+9Do
aSignal_nameNul	db 'signal_name != NULL',0 ; DATA XREF: dbus_message_is_signal+15Bo
aMethodNull	db 'method != NULL',0   ; DATA XREF: dbus_message_is_method_call+15Bo
					; dbus_message_new_method_call+290o
aMessage_cache_	db 'message_cache_count == 0',0 ; DATA XREF: dbus_message_unref+1BFo
aMessage_cacheI	db 'message_cache[i] == NULL',0 ; DATA XREF: dbus_message_unref+3BAo
		align 4
a_dbus_check__1	db '_dbus_check_is_valid_path (path)',0
					; DATA XREF: dbus_message_new_signal+210o
					; dbus_message_new_method_call+210o
		align 4
a_dbus_check__2	db '_dbus_check_is_valid_interface (interface)',0
					; DATA XREF: dbus_message_new_signal+230o
		align 4
a_dbus_check__0	db '_dbus_check_is_valid_member (name)',0
					; DATA XREF: dbus_message_new_signal+1D0o
		align 4
aDestinationNul	db 'destination == NULL || _dbus_check_is_valid_bus_name (destination'
					; DATA XREF: dbus_message_new_method_call+230o
					; dbus_message_set_destination+160o
		db ')',0
		align 4
a_dbus_check__3	db '_dbus_check_is_valid_member (method)',0
					; DATA XREF: dbus_message_new_method_call+1D3o
		align 4
aMessage_typeDb	db 'message_type != DBUS_MESSAGE_TYPE_INVALID',0
					; DATA XREF: dbus_message_new+50o
aMethod_callNul	db 'method_call != NULL',0 ; DATA XREF: dbus_message_new_method_return+E8o
		align 4
; char aArgumentDIsSpe[]
aArgumentDIsSpe	db 'Argument %d is specified to be of type "%s", but is actually of t'
					; DATA XREF: sub_67DE44A0+475o
		db 'ype "%s"',0Ah,0
		align 10h
; char aOrg_freedes_28[]
aOrg_freedes_28	db 'org.freedesktop.DBus.Error.InvalidArgs',0 ; DATA XREF: sub_67DE44A0+488o
					; sub_67DE44A0+539o ...
		align 4
; char aPlatformDoesNo[]
aPlatformDoesNo	db 'Platform does not support file desciptor passing.',0Ah,0
					; DATA XREF: sub_67DE44A0+4A6o
		align 4
; char aOrg_freedes_29[]
aOrg_freedes_29	db 'org.freedesktop.DBus.Error.NotSupported',0
					; DATA XREF: sub_67DE44A0+4AEo
aPtrNull	db 'ptr != NULL',0      ; DATA XREF: sub_67DE44A0+117o
					; sub_67DE44A0+3BEo
aArgumentDIsS_0	db 'Argument %d is specified to be an array of "%s", but is actually '
					; DATA XREF: sub_67DE44A0+4FAo
		db 'an array of "%s"',0Ah,0
aN_elements_pNu	db 'n_elements_p != NULL',0 ; DATA XREF: sub_67DE44A0+146o
					; sub_67DE44A0+1F6o
aStr_array_pNul	db 'str_array_p != NULL',0 ; DATA XREF: sub_67DE44A0+1C2o
aOrg_freedes_27	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67DE44A0+42Do
					; dbus_message_demarshal+25Co
aIN_elements	db 'i == n_elements',0  ; DATA XREF: sub_67DE44A0+2BAo
					; sub_67DE44A0+33Eo
a_dbus_type__13	db '_dbus_type_reader_get_current_type (&array) == DBUS_TYPE_INVALID',0
					; DATA XREF: sub_67DE44A0+304o
aStr_arrayINull	db 'str_array[i] == NULL',0 ; DATA XREF: sub_67DE44A0+369o
		align 4
; char aYouCanTReadArr[]
aYouCanTReadArr	db 'you can',27h,'t read arrays of container types (struct, variant, arr'
					; DATA XREF: sub_67DE44A0+513o
		db 'ay) with %s for now',0Ah,0
		align 4
; char aYouCanOnlyRead[]
aYouCanOnlyRead	db 'you can only read arrays and basic types with %s for now',0Ah,0
					; DATA XREF: sub_67DE44A0+4CDo
		align 4
; char aMessageHasOnly[]
aMessageHasOnly	db 'Message has only %d arguments, but more were expected',0
					; DATA XREF: sub_67DE44A0+531o
aLinkNull_0	db 'link != NULL',0     ; DATA XREF: sub_67DE49F0+48o
aSignatureNull	db 'signature != NULL',0 ; DATA XREF: dbus_message_has_signature+E0o
		align 10h
a_dbus_string_0	db '_dbus_string_get_length (&message->body) == 0 || dbus_message_get'
					; DATA XREF: dbus_message_lock+64o
		db '_signature (message) != NULL',0
aMsgNull	db 'msg != NULL',0      ; DATA XREF: dbus_message_marshal+1B0o
aMarshalled_dat	db 'marshalled_data_p != NULL',0 ; DATA XREF: dbus_message_marshal+1E4o
aLen_pNull	db 'len_p != NULL',0    ; DATA XREF: dbus_message_marshal+200o
		align 4
aErrorNullDbu_6	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: dbus_message_get_args_valist+D3o
					; dbus_message_get_args+B0o ...
aS_1		db '%s',0               ; DATA XREF: dbus_set_error_from_message+124o
aValidityDbus_v	db 'validity == DBUS_VALID',0 ; DATA XREF: sub_67DE5570+B6o
					; sub_67DE5570+2D9o
		align 10h
a_dbus_string_1	db '_dbus_string_get_length (&message->header.data) == 0',0
					; DATA XREF: sub_67DE5570+119o
		align 4
aHeader_lenBody	db '(header_len + body_len) <= _dbus_string_get_length (&loader->data'
					; DATA XREF: sub_67DE5570+15Fo
		db ')',0
		align 4
; char aFailedToLoadHe[]
aFailedToLoadHe	db 'Failed to load header for new message code %d',0Ah,0
					; DATA XREF: sub_67DE5570+1D1o
aValidityDbus_0	db 'validity != DBUS_VALID',0 ; DATA XREF: sub_67DE5570+21Eo
		align 4
; char aFailedToValida[]
aFailedToValida	db 'Failed to validate message body code %d',0Ah,0
					; DATA XREF: sub_67DE5570+369o
		align 10h
; char aHmmMessageClai[]
aHmmMessageClai	db 'Hmm, message claims to come with file descriptors but that',27h,'s n'
					; DATA XREF: sub_67DE5570+3CCo
		db 'ot supported on our platform, disconnecting.',0Ah,0
; char aFailedToAppend[]
aFailedToAppend	db 'Failed to append new message to loader queue',0Ah,0
					; DATA XREF: sub_67DE5570+42Co
		align 4
a_dbus_string_2	db '_dbus_string_get_length (&message->body) == 0',0
					; DATA XREF: sub_67DE5570+4BEo
		align 4
a_dbus_string_3	db '_dbus_string_get_length (&loader->data) >= (header_len + body_len'
					; DATA XREF: sub_67DE5570+4FAo
		db ')',0
		align 10h
; char aFailedToMoveBo[]
aFailedToMoveBo	db 'Failed to move body into new message',0Ah,0
					; DATA XREF: sub_67DE5570+53Co
		align 4
a_dbus_string_4	db '_dbus_string_get_length (&message->header.data) == header_len',0
					; DATA XREF: sub_67DE5570+5ADo
		align 4
a_dbus_string_5	db '_dbus_string_get_length (&message->body) == body_len',0
					; DATA XREF: sub_67DE5570+5EDo
; char aLoadedMessageP[]
aLoadedMessageP	db 'Loaded message %p',0Ah,0 ; DATA XREF: sub_67DE5570+607o
aOom		db '!oom',0             ; DATA XREF: sub_67DE5570+643o
aLoaderCorrup_0	db '!loader->corrupted',0 ; DATA XREF: sub_67DE5570+478o
					; sub_67DE5570+673o
aLoaderMessages	db 'loader->messages != NULL',0 ; DATA XREF: sub_67DE5570+6ABo
					; sub_67DE5570+720o
		align 4
a_dbus_list_fin	db '_dbus_list_find_last (&loader->messages, message) != NULL',0
					; DATA XREF: sub_67DE5570+6EAo
					; sub_67DE5570+75Fo
		align 10h
; char aInitialPeekAtH[]
aInitialPeekAtH	db 'Initial peek at header says we don',27h,'t have a whole message yet,'
					; DATA XREF: sub_67DE5570+798o
		db ' or data broken with invalid code %d',0Ah,0
aLoaderCorrupte	db 'loader->corrupted',0 ; DATA XREF: sub_67DE5570+267o
		align 4
; char aDbusAppendIter[]
aDbusAppendIter	db 'dbus append iterator can',27h,'t be used: message is locked (has alr'
					; DATA XREF: dbus_message_iter_close_container:loc_67DE5E20o
					; dbus_message_iter_close_container:loc_67DE5EE0o ...
		db 'eady been sent)',0Ah,0
		align 4
a_dbus_messag_7	db '_dbus_message_iter_append_check (real)',0
					; DATA XREF: dbus_message_iter_close_container+DCo
					; dbus_message_iter_open_container+FCo	...
		align 10h
a_dbus_messag_8	db '_dbus_message_iter_append_check (real_sub)',0
					; DATA XREF: dbus_message_iter_close_container+19Co
					; dbus_message_iter_abandon_container+1C2o
		align 4
aReal_subIter_t	db 'real_sub->iter_type == DBUS_MESSAGE_ITER_TYPE_WRITER',0
					; DATA XREF: dbus_message_iter_close_container+16Co
					; dbus_message_iter_abandon_container+184o
aDbus_type_is_c	db 'dbus_type_is_container (type)',0
					; DATA XREF: dbus_message_iter_open_container+2B6o
		align 10h
aTypeDbus_type_	db '(type == DBUS_TYPE_STRUCT && contained_signature == NULL) || (typ'
					; DATA XREF: dbus_message_iter_open_container+2D3o
		db 'e == DBUS_TYPE_DICT_ENTRY && contained_signature == NULL) || (typ'
		db 'e == DBUS_TYPE_VARIANT && contained_signature != NULL) || (type ='
		db '= DBUS_TYPE_ARRAY && contained_signature != NULL)',0
		align 4
aTypeDbus_typ_0	db '(type == DBUS_TYPE_ARRAY && contained_signature && *contained_sig'
					; DATA XREF: dbus_message_iter_open_container+348o
		db 'nature == DBUS_DICT_ENTRY_BEGIN_CHAR) || (contained_signature == '
		db 'NULL || _dbus_check_is_valid_signature (contained_signature))',0
aDbus_type_is_0	db 'dbus_type_is_fixed (element_type) && element_type != DBUS_TYPE_UN'
					; DATA XREF: dbus_message_iter_append_fixed_array+1D6o
		db 'IX_FD',0
		align 10h
aRealU_writer_c	db 'real->u.writer.container_type == DBUS_TYPE_ARRAY',0
					; DATA XREF: dbus_message_iter_append_fixed_array+1A4o
aN_elements0_0	db 'n_elements >= 0',0  ; DATA XREF: dbus_message_iter_append_fixed_array+367o
		align 4
aN_elementsDbus	db 'n_elements <= DBUS_MAXIMUM_ARRAY_LENGTH / _dbus_type_get_alignmen'
					; DATA XREF: dbus_message_iter_append_fixed_array+399o
		db 't (element_type)',0
		align 4
aBoolsI0BoolsI1	db '(*bools)[i] == 0 || (*bools)[i] == 1',0
					; DATA XREF: dbus_message_iter_append_fixed_array+30Ao
aDbus_type_is_1	db 'dbus_type_is_basic (type)',0
					; DATA XREF: dbus_message_iter_append_basic+1E0o
		align 4
a_dbus_check__4	db '_dbus_check_is_valid_utf8 (*string_p)',0
					; DATA XREF: dbus_message_iter_append_basic+24Do
		align 10h
a_dbus_check__6	db '_dbus_check_is_valid_path (*string_p)',0
					; DATA XREF: dbus_message_iter_append_basic+362o
		align 4
a_dbus_check__5	db '_dbus_check_is_valid_signature (*string_p)',0
					; DATA XREF: dbus_message_iter_append_basic+2AFo
aBool_p0Bool_p1	db '*bool_p == 0 || *bool_p == 1',0
					; DATA XREF: dbus_message_iter_append_basic+306o
aReply_toNull	db 'reply_to != NULL',0 ; DATA XREF: dbus_message_new_error+1E2o
					; dbus_message_new_error_printf+161o
		align 4
a_dbus_check__7	db '_dbus_check_is_valid_error_name (error_name)',0
					; DATA XREF: dbus_message_new_error+1A5o
					; dbus_message_new_error_printf+BEo
		align 4
aSenderNull_dbu	db 'sender == NULL || _dbus_check_is_valid_bus_name (sender)',0
					; DATA XREF: dbus_message_set_sender+160o
		align 10h
aError_nameNu_0	db 'error_name == NULL || _dbus_check_is_valid_error_name (error_name'
					; DATA XREF: dbus_message_set_error_name+160o
		db ')',0
		align 4
aMemberNull_dbu	db 'member == NULL || _dbus_check_is_valid_member (member)',0
					; DATA XREF: dbus_message_set_member+160o
		align 4
aObject_pathNul	db 'object_path == NULL || _dbus_check_is_valid_path (object_path)',0
					; DATA XREF: dbus_message_set_path+160o
		align 4
; char aArraysOfSCanTB[]
aArraysOfSCanTB	db 'arrays of %s can',27h,'t be appended with %s for now',0Ah,0
					; DATA XREF: dbus_message_append_args_valist+1F2o
; char aTypeSIsnTSuppo[]
aTypeSIsnTSuppo	db 'type %s isn',27h,'t supported yet in %s',0Ah,0
					; DATA XREF: dbus_message_append_args_valist+25Do
aStrNull	db 'str != NULL',0      ; DATA XREF: dbus_message_demarshal+235o
; char aMessageIsCorru[]
aMessageIsCorru	db 'Message is corrupted (%s)',0 ; DATA XREF: dbus_message_demarshal+29Bo
		align 10h
aDbus_message_d	db 'dbus_message_demarshal_bytes_needed',0
					; DATA XREF: dbus_message_demarshal_bytes_needed+E0o
aDbus_messag_57	db 'dbus_message_demarshal',0 ; DATA XREF: dbus_message_demarshal+Fo
					; dbus_message_demarshal+240o
aDbus_message_m	db 'dbus_message_marshal',0 ; DATA XREF: dbus_message_marshal+1Fo
					; dbus_message_marshal+53o ...
aDbus_message_1	db 'dbus_message_get_data',0 ; DATA XREF: dbus_message_get_data+8o
					; dbus_message_get_data+78o
aDbus_message_s	db 'dbus_message_set_data',0 ; DATA XREF: dbus_message_set_data+Do
					; dbus_message_set_data+41o ...
aDbus_message_f	db 'dbus_message_free_data_slot',0
					; DATA XREF: dbus_message_free_data_slot+8o
					; dbus_message_free_data_slot+6Do
		align 10h
a_dbus_messa_16	db '_dbus_message_loader_set_max_message_unix_fds',0
					; DATA XREF: sub_67DE0B90+22o
		align 20h
a_dbus_messa_17	db '_dbus_message_loader_set_max_message_size',0
					; DATA XREF: sub_67DE0BE0+22o
		align 20h
a_dbus_messa_19	db '_dbus_message_loader_get_corruption_reason',0
					; DATA XREF: .text:67DE053Ao
		align 20h
a_dbus_messa_15	db '_dbus_message_loader_get_is_corrupted',0 ; DATA XREF: sub_67DE0580+1Ao
					; dbus_message_demarshal:loc_67DE7D2Do
		align 20h
a_dbus_messa_14	db '_dbus_message_loader_queue_messages',0 ; DATA XREF: sub_67DE5570+98o
					; sub_67DE5570+708o ...
aDbus_messag_33	db 'dbus_message_get_cached',0 ; DATA XREF: sub_67DE0E70+18o
					; sub_67DE0E70+5Co ...
aLoad_message	db 'load_message',0     ; DATA XREF: sub_67DE5570+101o
					; sub_67DE5570+143o ...
		align 4
off_67E246AC	dd offset dword_67E25018 ; DATA	XREF: sub_67DE2390+9Eo
					; sub_67DE2390+A6o ...
		dd 1, 9, 1, 3
a_dbus_messa_13	db '_dbus_message_loader_return_buffer',0 ; DATA XREF: sub_67DE05E0+8o
					; sub_67DE05E0+40o ...
		align 20h
a_dbus_messa_12	db '_dbus_message_loader_get_buffer',0 ; DATA XREF: sub_67DE0660+8o
					; dbus_message_demarshal+ADo
aDbus_set_err_1	db 'dbus_set_error_from_message',0
					; DATA XREF: dbus_set_error_from_message+1Bo
					; dbus_set_error_from_message+4Fo ...
aDbus_messag_40	db 'dbus_message_has_signature',0 ; DATA XREF: dbus_message_has_signature+Do
					; dbus_message_has_signature+3Do ...
aDbus_message_h	db 'dbus_message_has_sender',0 ; DATA XREF: dbus_message_has_sender+Do
					; dbus_message_has_sender+3Do ...
aDbus_message_4	db 'dbus_message_has_destination',0
					; DATA XREF: dbus_message_has_destination+Do
					; dbus_message_has_destination+3Do ...
aDbus_messag_28	db 'dbus_message_is_error',0 ; DATA XREF: dbus_message_is_error+Do
					; dbus_message_is_error+3Do ...
aDbus_messag_29	db 'dbus_message_is_signal',0 ; DATA XREF: dbus_message_is_signal+1Bo
					; dbus_message_is_signal+4Fo ...
		align 10h
a_dbus_messag_4	db '_dbus_message_has_type_interface_member',0 ; DATA XREF: sub_67DE31A0+27o
					; sub_67DE31A0+56o ...
aDbus_messag_30	db 'dbus_message_is_method_call',0
					; DATA XREF: dbus_message_is_method_call+1Bo
					; dbus_message_is_method_call+4Fo ...
aDbus_messag_39	db 'dbus_message_get_signature',0 ; DATA XREF: dbus_message_get_signature+8o
					; dbus_message_get_signature+C1o
aDbus_message_2	db 'dbus_message_get_sender',0 ; DATA XREF: dbus_message_get_sender+8o
					; dbus_message_get_sender+90o
aDbus_messag_50	db 'dbus_message_set_sender',0 ; DATA XREF: dbus_message_set_sender+Do
					; dbus_message_set_sender+41o ...
aDbus_message_3	db 'dbus_message_get_destination',0
					; DATA XREF: dbus_message_get_destination+8o
					; dbus_message_get_destination+90o
aDbus_messag_51	db 'dbus_message_set_destination',0
					; DATA XREF: dbus_message_set_destination+Do
					; dbus_message_set_destination+41o ...
aDbus_message_5	db 'dbus_message_get_error_name',0
					; DATA XREF: dbus_message_get_error_name+8o
					; dbus_message_get_error_name+90o
aDbus_messag_52	db 'dbus_message_set_error_name',0
					; DATA XREF: dbus_message_set_error_name+Do
					; dbus_message_set_error_name+41o ...
aDbus_message_6	db 'dbus_message_get_member',0 ; DATA XREF: dbus_message_get_member+8o
					; dbus_message_get_member+90o
aDbus_messag_53	db 'dbus_message_set_member',0 ; DATA XREF: dbus_message_set_member+Do
					; dbus_message_set_member+41o ...
aDbus_message_7	db 'dbus_message_get_interface',0 ; DATA XREF: dbus_message_get_interface+8o
					; dbus_message_get_interface+90o
aDbus_messag_11	db 'dbus_message_set_interface',0 ; DATA XREF: dbus_message_set_interface+Do
					; dbus_message_set_interface+41o ...
		align 20h
aDbus_messag_12	db 'dbus_message_get_path_decomposed',0
					; DATA XREF: dbus_message_get_path_decomposed+Do
					; dbus_message_get_path_decomposed+3Do	...
aDbus_message_8	db 'dbus_message_get_path',0 ; DATA XREF: dbus_message_get_path+8o
					; dbus_message_get_path+90o
aDbus_messag_54	db 'dbus_message_set_path',0 ; DATA XREF: dbus_message_set_path+Do
					; dbus_message_set_path+41o ...
aDbus_messag_13	db 'dbus_message_get_auto_start',0
					; DATA XREF: dbus_message_get_auto_start+8o
					; dbus_message_get_auto_start+78o
aDbus_messag_15	db 'dbus_message_set_auto_start',0
					; DATA XREF: dbus_message_set_auto_start+8o
					; dbus_message_set_auto_start+3Co ...
aDbus_messag_14	db 'dbus_message_get_no_reply',0 ; DATA XREF: dbus_message_get_no_reply+8o
					; dbus_message_get_no_reply+70o
aDbus_messag_16	db 'dbus_message_set_no_reply',0 ; DATA XREF: dbus_message_set_no_reply+8o
					; dbus_message_set_no_reply+3Co ...
		align 10h
aDbus_messag_55	db 'dbus_message_iter_abandon_container',0
					; DATA XREF: dbus_message_iter_abandon_container+Do
					; dbus_message_iter_abandon_container+4Co ...
a_dbus_messag_2	db '_dbus_message_iter_check',0 ; DATA XREF: sub_67DE0750:loc_67DE07D0o
					; sub_67DE0750:loc_67DE0840o
		align 10h
a_dbus_messa_11	db '_dbus_message_iter_abandon_signature',0
					; DATA XREF: dbus_message_iter_abandon_container:loc_67DE77A0o
					; dbus_message_iter_abandon_container+219o ...
		align 20h
aDbus_messag_44	db 'dbus_message_iter_close_container',0
					; DATA XREF: dbus_message_iter_close_container+Do
					; dbus_message_iter_close_container+50o ...
		align 20h
a_dbus_messag_9	db '_dbus_message_iter_close_signature',0 ; DATA XREF: sub_67DE20A0+Do
					; sub_67DE20A0+46o ...
		align 20h
aDbus_messag_45	db 'dbus_message_iter_open_container',0
					; DATA XREF: dbus_message_iter_open_container+23o
					; dbus_message_iter_open_container+66o	...
		align 20h
a_dbus_messa_10	db '_dbus_message_iter_open_signature',0 ; DATA XREF: sub_67DE21F0+11o
					; sub_67DE21F0+4Fo
		align 20h
aDbus_messag_46	db 'dbus_message_iter_append_fixed_array',0
					; DATA XREF: dbus_message_iter_append_fixed_array+23o
					; dbus_message_iter_append_fixed_array+66o ...
		align 4
aDbus_messag_47	db 'dbus_message_iter_append_basic',0
					; DATA XREF: dbus_message_iter_append_basic+1Fo
					; dbus_message_iter_append_basic+62o ...
aDbus_message_i	db 'dbus_message_iter_init_append',0
					; DATA XREF: dbus_message_iter_init_append+17o
					; dbus_message_iter_init_append+47o ...
		align 4
a_dbus_messag_0	db '_dbus_message_iter_init_common',0 ; DATA XREF: sub_67DE2390+19o
a_dbus_messag_1	db '_dbus_message_byteswap',0 ; DATA XREF: sub_67DE2390+5Ao
		align 10h
aDbus_messag_18	db 'dbus_message_iter_get_fixed_array',0
					; DATA XREF: dbus_message_iter_get_fixed_array+2Eo
					; dbus_message_iter_get_fixed_array+6Bo ...
		align 20h
aDbus_messag_19	db 'dbus_message_iter_get_array_len',0
					; DATA XREF: dbus_message_iter_get_array_len+8o
					; dbus_message_iter_get_array_len+70o
aDbus_messag_20	db 'dbus_message_iter_get_basic',0
					; DATA XREF: dbus_message_iter_get_basic+Do
					; dbus_message_iter_get_basic+44o ...
		align 10h
aDbus_messag_21	db 'dbus_message_iter_get_signature',0
					; DATA XREF: dbus_message_iter_get_signature+9o
					; dbus_message_iter_get_signature+60o
aDbus_messag_22	db 'dbus_message_iter_recurse',0 ; DATA XREF: dbus_message_iter_recurse+Do
					; dbus_message_iter_recurse+48o ...
		align 10h
aDbus_messag_23	db 'dbus_message_iter_get_element_type',0
					; DATA XREF: dbus_message_iter_get_element_type+8o
					; dbus_message_iter_get_element_type+43o ...
		align 4
aDbus_messag_17	db 'dbus_message_iter_get_arg_type',0
					; DATA XREF: dbus_message_iter_get_arg_type+8o
					; dbus_message_iter_get_arg_type+43o ...
aDbus_messag_25	db 'dbus_message_iter_next',0 ; DATA XREF: dbus_message_iter_next+8o
					; dbus_message_iter_next+43o ...
aDbus_messag_26	db 'dbus_message_iter_has_next',0 ; DATA XREF: dbus_message_iter_has_next+8o
					; dbus_message_iter_has_next+43o ...
aDbus_messag_41	db 'dbus_message_iter_init',0 ; DATA XREF: dbus_message_iter_init+Do
					; dbus_message_iter_init+41o ...
aDbus_messag_42	db 'dbus_message_get_args_valist',0
					; DATA XREF: dbus_message_get_args_valist+17o
					; dbus_message_get_args_valist+4Bo ...
aDbus_messag_43	db 'dbus_message_get_args',0 ; DATA XREF: dbus_message_get_args+Do
					; dbus_message_get_args+41o ...
		align 10h
aDbus_message_a	db 'dbus_message_append_args_valist',0
					; DATA XREF: dbus_message_append_args_valist+1Fo
					; dbus_message_append_args_valist+1EAo	...
aDbus_messag_56	db 'dbus_message_append_args',0 ; DATA XREF: dbus_message_append_args+8o
					; dbus_message_append_args+75o
aDbus_messag_27	db 'dbus_message_get_type',0 ; DATA XREF: dbus_message_get_type+8o
					; dbus_message_get_type+68o
aDbus_message_u	db 'dbus_message_unref',0 ; DATA XREF: dbus_message_unref+9o
					; dbus_message_unref+3Do ...
		align 4
aDbus_message_c	db 'dbus_message_cache_or_finalize',0 ; DATA XREF: dbus_message_unref+126o
					; dbus_message_unref+1A1o ...
aDbus_messag_31	db 'dbus_message_finalize',0 ; DATA XREF: sub_67DE35C0+12o
					; sub_67DE35C0+87o
aDbus_message_r	db 'dbus_message_ref',0 ; DATA XREF: dbus_message_ref+8o
					; dbus_message_ref+3Co	...
aDbus_messag_32	db 'dbus_message_copy',0 ; DATA XREF: dbus_message_copy+17o
					; dbus_message_copy+107o
aDbus_messag_49	db 'dbus_message_new_error_printf',0
					; DATA XREF: dbus_message_new_error_printf+Eo
					; dbus_message_new_error_printf+42o ...
aDbus_messag_48	db 'dbus_message_new_error',0 ; DATA XREF: dbus_message_new_error+21o
					; dbus_message_new_error+55o ...
aDbus_message_n	db 'dbus_message_new_signal',0 ; DATA XREF: dbus_message_new_signal+13o
					; dbus_message_new_signal+47o ...
		align 4
aDbus_messag_37	db 'dbus_message_new_method_return',0
					; DATA XREF: dbus_message_new_method_return+13o
					; dbus_message_new_method_return+F0o
aDbus_messag_34	db 'dbus_message_new_method_call',0
					; DATA XREF: dbus_message_new_method_call+17o
					; dbus_message_new_method_call+4Bo ...
aDbus_messag_35	db 'dbus_message_new',0 ; DATA XREF: dbus_message_new+9o
					; dbus_message_new+58o
aDbus_message_9	db 'dbus_message_get_reply_serial',0
					; DATA XREF: dbus_message_get_reply_serial+8o
					; dbus_message_get_reply_serial+90o
aDbus_messag_10	db 'dbus_message_set_reply_serial',0
					; DATA XREF: dbus_message_set_reply_serial+8o
					; dbus_message_set_reply_serial+3Co ...
aDbus_messag_36	db 'dbus_message_get_serial',0 ; DATA XREF: dbus_message_get_serial+8o
					; dbus_message_get_serial+68o
		align 20h
a_dbus_messag_6	db '_dbus_message_iter_get_args_valist',0 ; DATA XREF: sub_67DE44A0+21o
					; sub_67DE44A0+F7o ...
aDbus_message_l	db 'dbus_message_lock',0 ; DATA XREF: dbus_message_lock:loc_67DE4E2Co
a_dbus_messag_5	db '_dbus_message_remove_counter',0 ; DATA XREF: sub_67DE49F0+30o
aDbus_messag_38	db 'dbus_message_set_serial',0 ; DATA XREF: dbus_message_set_serial+Do
					; dbus_message_set_serial+3Do ...
a_dbus_messa_20	db '_dbus_message_get_unix_fds',0 ; DATA XREF: .text:67DE06B7o
		align 4
a_dbus_messa_21	db '_dbus_message_get_network_data',0 ; DATA XREF: sub_67DE0700+8o
		align 4
off_67E25008	dd offset aMethod_call	; DATA XREF: dbus_message_type_to_string+11r
					; "method_call"
		dd offset aMethod_return ; "method_return"
		dd offset aError	; "error"
		dd offset aSignal	; "signal"
dword_67E25018	dd 2 dup(0)		; DATA XREF: .rdata:off_67E246ACo
; char aRBuildWin32_13[]
aRBuildWin32_13	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DE7F20+1Ao
					; sub_67DE7F60+42o ...
		db 's-nonce.c',0
aNoncefile	db 'noncefile',0        ; DATA XREF: sub_67DE7F20+2Ao
					; sub_67DE8670+89o ...
		align 4
aErrorNullDb_12	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DE7F60+4Ao
					; sub_67DE8190+3Ao ...
; char aOrg_freedes_36[]
aOrg_freedes_36	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67DE7F60+84o
					; sub_67DE8210+160o ...
; char aCouldNotRead_0[]
aCouldNotRead_0	db 'Could not read nonce from socket (fd=%d)',0
					; DATA XREF: sub_67DE7F60+113o
					; sub_67DE7F60+1DCo
		align 4
; char aOrg_freedes_62[]
aOrg_freedes_62	db 'org.freedesktop.DBus.Error.IOError',0 ; DATA XREF: sub_67DE7F60+11Bo
					; sub_67DE7F60+1E4o
		align 4
; char aNoncesDoNotMat[]
aNoncesDoNotMat	db 'Nonces do not match, access denied (fd=%d)',0
					; DATA XREF: sub_67DE7F60+20Ao
		align 4
; char aOrg_freedes_63[]
aOrg_freedes_63	db 'org.freedesktop.DBus.Error.AccessDenied',0
					; DATA XREF: sub_67DE7F60+212o
; char aReadingNonceFr[]
aReadingNonceFr	db 'reading nonce from file: %s',0Ah,0 ; DATA XREF: sub_67DE8210+6Ao
; char Mode[]
Mode		db 'rb',0               ; DATA XREF: sub_67DE8210+9Ao
; char aCouldNotReadNo[]
aCouldNotReadNo	db 'Could not read nonce from file %s',0 ; DATA XREF: sub_67DE8210+138o
		align 4
; char aOrg_freedes_61[]
aOrg_freedes_61	db 'org.freedesktop.DBus.Error.FileNotFound',0
					; DATA XREF: sub_67DE8210+140o
aErrorNullDb_13	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DE8390+E4o
					; sub_67DE8670+308o
		align 4
; char aFailedToSendNo[]
aFailedToSendNo	db 'Failed to send nonce (fd=%d): %s',0 ; DATA XREF: sub_67DE8390+193o
aNoncefileNull	db 'noncefile != NULL',0 ; DATA XREF: sub_67DE8580+35o
		align 10h
; char aNonceCheckFail[]
aNonceCheckFail	db 'nonce check failed. Closing socket.',0Ah,0 ; DATA XREF: sub_67DE8580+ACo
; char aDbus_nonce[]
aDbus_nonce	db '/dbus_nonce-',0     ; DATA XREF: sub_67DE8670+170o
aDo_check_nonce	db 'do_check_nonce',0   ; DATA XREF: sub_67DE7F60+32o
a_dbus_noncefil	db '_dbus_noncefile_get_path',0 ; DATA XREF: sub_67DE7F20+Ao
					; .text:67DE89DDo
a_dbus_noncef_0	db '_dbus_noncefile_delete',0 ; DATA XREF: sub_67DE8190+22o
aDo_noncefile_c	db 'do_noncefile_create',0 ; DATA XREF: sub_67DE8670+42o
					; sub_67DE8670+71o ...
aGenerate_and_w	db 'generate_and_write_nonce',0 ; DATA XREF: sub_67DE8670+1C3o
a_dbus_send_non	db '_dbus_send_nonce',0 ; DATA XREF: sub_67DE8390+34o
					; sub_67DE8390+CCo ...
a_dbus_accept_w	db '_dbus_accept_with_noncefile',0 ; DATA XREF: sub_67DE8580+15o
					; sub_67DE8580+B4o
a_dbus_read_non	db '_dbus_read_nonce',0 ; DATA XREF: sub_67DE8210+3Do
					; sub_67DE8210+72o
		align 10h
; char aRBuildWin32l_8[]
aRBuildWin32l_8	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: .text:67DE8A4Ao
					; sub_67DE8A80+28o ...
		db 's-object-tree.c',0
aTreeRefcount0	db 'tree->refcount > 0',0 ; DATA XREF: .text:67DE8A52o
					; sub_67DEA440+22o
aDataNull_0	db 'data != NULL',0     ; DATA XREF: sub_67DE8A80+30o
aPathNull_1	db 'path != NULL',0     ; DATA XREF: sub_67DE8A80+64o
					; sub_67DE9B40+31o ...
aDataI0		db 'data[i] != ',27h,'\0',27h,0 ; DATA XREF: sub_67DE8A80+AAo
aILen		db 'i < len',0          ; DATA XREF: sub_67DE8A80+137o
aIJ		db 'i < j',0            ; DATA XREF: sub_67DE8A80+1BDo
					; sub_67DE8A80+2F3o
aDataI		db 'data[i] != ',27h,'/',27h,0 ; DATA XREF: sub_67DE8A80+1E6o
					; sub_67DE8A80+31Eo
aJLenDataJ	db 'j == len || data[j] == ',27h,'/',27h,0 ; DATA XREF: sub_67DE8A80+227o
aILen_0		db 'i == len',0         ; DATA XREF: sub_67DE8A80+296o
aOld_value0_0	db 'old_value > 0',0    ; DATA XREF: sub_67DE8E40+2Do
					; sub_67DE9510+F8o
		align 10h
aSubtreeUnregis	db 'subtree->unregister_function == NULL',0 ; DATA XREF: sub_67DE8E40+71o
		align 4
aSubtreeMessage	db 'subtree->message_function == NULL',0 ; DATA XREF: sub_67DE8E40+A2o
aNameNull_2	db 'name != NULL',0     ; DATA XREF: sub_67DE8F20+35o
					; sub_67DE8F20+97o
asc_67E25457	db '/',0                ; DATA XREF: sub_67DE9030+23o
		align 4
aReturn_deepest	db '!(return_deepest_match && create_if_not_found)',0
					; DATA XREF: sub_67DE9080+63o
		align 4
aChild_posNew_n	db 'child_pos < new_n_subtrees && new_n_subtrees <= subtree->max_subt'
					; DATA XREF: sub_67DE9080+178o
		db 'rees',0
aParent_pathN_0	db 'parent_path != NULL',0 ; DATA XREF: sub_67DE9370+2Fo
aChild_entrie_0	db 'child_entries != NULL',0 ; DATA XREF: sub_67DE9370+5Eo
; char aUnlock_0[]
aUnlock_0	db 'unlock',0Ah,0       ; DATA XREF: sub_67DE94B0+1Eo
					; sub_67DE9510+19Bo ...
; char aNoMemoryToGetD[]
aNoMemoryToGetD	db 'No memory to get decomposed path',0Ah,0 ; DATA XREF: sub_67DE9510+339o
; char aNoPathFieldInM[]
aNoPathFieldInM	db 'No path field in message',0Ah,0 ; DATA XREF: sub_67DE9510+39Eo
aExact_matchNul	db 'exact_match != NULL',0 ; DATA XREF: sub_67DE9510+65o
					; sub_67DE9F50+83o
; char aDHandlersInThe[]
aDHandlersInThe	db '%d handlers in the path tree for this message',0Ah,0
					; DATA XREF: sub_67DE9510+13Eo
		align 4
; char aUsingDefaultIn[]
aUsingDefaultIn	db ' using default Introspect() handler!',0Ah,0
					; DATA XREF: sub_67DE9510+251o
		align 4
; char aDoctypeNodePub[]
aDoctypeNodePub	db '<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspec'
					; DATA XREF: sub_67DE9510+4B4o
		db 'tion 1.0//EN"',0Ah
		db '"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">',0Ah
		db 0
; char aNode[]
aNode		db '<node>',0Ah,0       ; DATA XREF: sub_67DE9510+4CCo
; char aNodeNameS[]
aNodeNameS	db '  <node name="%s"/>',0Ah,0 ; DATA XREF: sub_67DE9510+4FEo
; char aNode_0[]
aNode_0		db '</node>',0Ah,0      ; DATA XREF: sub_67DE9510+52Bo
		align 4
; char aConsideringDef[]
aConsideringDef	db ' considering default Introspect() handler...',0Ah,0
					; DATA XREF: sub_67DE9510+20Do
aIntrospect	db 'Introspect',0       ; DATA XREF: sub_67DE9510+231o
		align 10h
aOrg_freedes_30	db 'org.freedesktop.DBus.Introspectable',0 ; DATA XREF: sub_67DE9510+239o
aNull_0		db 'null',0             ; DATA XREF: sub_67DE9B40:loc_67DE9D28o
					; sub_67DE9B40:loc_67DE9D30o
		align 4
; char aAttemptedToUnr[]
aAttemptedToUnr	db 'Attempted to unregister path (path[0] = %s path[1] = %s) which is'
					; DATA XREF: sub_67DE9B40+195o
		db 'n',27h,'t registered',0Ah,0
		align 10h
aSubtreeParentN	db 'subtree->parent == NULL || (i >= 0 && subtree->parent->subtrees[i'
					; DATA XREF: sub_67DE9B40+ABo
		db '] == subtree)',0
aTreeNull	db 'tree != NULL',0     ; DATA XREF: sub_67DE9D40+39o
					; sub_67DE9F50+2Fo
aVtableMessage_	db 'vtable->message_function != NULL',0 ; DATA XREF: sub_67DE9D40+60o
		align 10h
aOrg_freedes_32	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67DE9D40+1E9o
aCannotRepresen	db '(cannot represent path: out of memory!)',0
					; DATA XREF: sub_67DE9D40+13Bo
; char aAHandlerIsAlre[]
aAHandlerIsAlre	db 'A handler is already registered for %s',0 ; DATA XREF: sub_67DE9D40+144o
		align 4
; char aOrg_freedes_31[]
aOrg_freedes_31	db 'org.freedesktop.DBus.Error.ObjectPathInUse',0
					; DATA XREF: sub_67DE9D40+14Co
		align 10h
; char aNoObjectAtSpec[]
aNoObjectAtSpec	db 'No object at specified path found',0Ah,0
					; DATA XREF: sub_67DE9F50:loc_67DEA023o
a_dbus_decompos	db '_dbus_decompose_path',0 ; DATA XREF: sub_67DE8A80+12o
					; sub_67DE8A80+44o ...
		align 10h
a_dbus_object_1	db '_dbus_object_tree_list_registered_and_unlock',0
					; DATA XREF: sub_67DE94B0+26o
		align 20h
a_dbus_object_t	db '_dbus_object_tree_list_registered_unlocked',0
					; DATA XREF: sub_67DE9370+17o
					; sub_67DE9370+46o
aFind_subtree_r	db 'find_subtree_recurse',0 ; DATA XREF: sub_67DE9080+4Bo
					; sub_67DE9080+160o
a_dbus_object_s	db '_dbus_object_subtree_new',0 ; DATA XREF: sub_67DE8F20+7Fo
aAllocate_subtr	db 'allocate_subtree_object',0 ; DATA XREF: sub_67DE8F20+1Do
a_dbus_object_0	db '_dbus_object_subtree_unref',0 ; DATA XREF: sub_67DE8E40+15o
					; sub_67DE8E40:loc_67DE8E97o ...
		align 20h
a_dbus_object_6	db '_dbus_object_tree_get_user_data_unlocked',0 ; DATA XREF: sub_67DE9F50+Fo
					; sub_67DE9F50+46o ...
aFind_handler	db 'find_handler',0     ; DATA XREF: sub_67DE9510+4Do
					; sub_67DE9F50+6Bo
		align 10h
a_dbus_object_3	db '_dbus_object_tree_dispatch_and_unlock',0 ; DATA XREF: sub_67DE9510+146o
					; sub_67DE9510+1A3o ...
a_dbus_object_2	db '_dbus_object_subtree_ref',0 ; DATA XREF: sub_67DE9510+E0o
		align 10h
aHandle_default	db 'handle_default_introspect_and_unlock',0 ; DATA XREF: sub_67DE9510+215o
					; sub_67DE9510+259o ...
		align 20h
a_dbus_object_4	db '_dbus_object_tree_unregister_and_unlock',0 ; DATA XREF: sub_67DE9B40+11o
					; sub_67DE9B40+93o ...
a_dbus_object_5	db '_dbus_object_tree_register',0 ; DATA XREF: sub_67DE9D40+21o
					; sub_67DE9D40+48o ...
a_dbus_object_7	db '_dbus_object_tree_unref',0 ; DATA XREF: sub_67DEA440+Ao
a_dbus_object_8	db '_dbus_object_tree_ref',0 ; DATA XREF: .text:67DE8A3Ao
		align 10h
; char aRBuildWin32l_9[]
aRBuildWin32l_9	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DEA4C0+1Ao
					; .text:67DEA51Ao ...
		db 's-pending-call.c',0
aPendingNull	db 'pending != NULL',0  ; DATA XREF: sub_67DEA4C0+2Ao
					; .text:67DEA52Ao ...
aPendingReply_1	db 'pending->reply_serial == 0',0 ; DATA XREF: .text:67DEA551o
					; sub_67DEB250+82o
		align 10h
aConstChar_db_3	db '(*(const char*)_DBUS_FUNCTION_NAME) != ',27h,'_',27h,0
					; DATA XREF: dbus_pending_call_get_data+21o
					; dbus_pending_call_steal_reply+21o ...
aPendingComplet	db '!pending->completed',0 ; DATA XREF: sub_67DEA7B0+20o
aPendingCompl_0	db 'pending->completed',0 ; DATA XREF: dbus_pending_call_steal_reply+E0o
aPendingReplyNu	db 'pending->reply != NULL',0
					; DATA XREF: dbus_pending_call_steal_reply+131o
aSlot_pNull	db 'slot_p != NULL',0   ; DATA XREF: dbus_pending_call_free_data_slot+C7o
					; dbus_pending_call_allocate_data_slot+6Ao
aSlot_p0_1	db '*slot_p >= 0',0     ; DATA XREF: dbus_pending_call_free_data_slot+95o
aPendingTimeout	db '!pending->timeout_added',0 ; DATA XREF: dbus_pending_call_unref-A1o
aOld_refcount0	db 'old_refcount > 0',0 ; DATA XREF: sub_67DEAE00+2Fo
		align 10h
aConnectionPend	db 'connection == pending->connection',0 ; DATA XREF: sub_67DEAFA0+2Do
aMethodReturn	db 'method return',0    ; DATA XREF: sub_67DEB010+29o
aOtherType	db 'other type',0       ; DATA XREF: sub_67DEB010+45o
aError_0	db 'error',0            ; DATA XREF: sub_67DEB010+3Bo
		align 4
; char aHandingMessage[]
aHandingMessage	db '  handing message %p (%s) to pending call serial %u',0Ah,0
					; DATA XREF: sub_67DEB010+56o
aPendingReply_0	db 'pending->reply == NULL',0 ; DATA XREF: sub_67DEB010+94o
aPendingReply_s	db 'pending->reply_serial == dbus_message_get_reply_serial (message)',0
					; DATA XREF: sub_67DEB010+CEo
		align 4
aTimeout_mill_0	db 'timeout_milliseconds >= 0 || timeout_milliseconds == -1',0
					; DATA XREF: sub_67DEB120+3Bo
aDidNotReceiveA	db 'Did not receive a reply. Possible causes include: the remote appl'
					; DATA XREF: sub_67DEB250+Do
		db 'ication did not send a reply, the message bus security policy blo'
		db 'cked the reply, the reply timeout expired, or the network connect'
		db 'ion was broken.',0
		align 10h
; char aOrg_freedes_33[]
aOrg_freedes_33	db 'org.freedesktop.DBus.Error.NoReply',0 ; DATA XREF: sub_67DEB250+15o
aSlot0_1	db 'slot >= 0',0        ; DATA XREF: dbus_pending_call_set_data+107o
aDbus_pending_c	db 'dbus_pending_call_get_data',0 ; DATA XREF: dbus_pending_call_get_data+9o
					; dbus_pending_call_get_data+93o
aDbus_pending_9	db 'dbus_pending_call_set_data',0 ; DATA XREF: dbus_pending_call_set_data+Do
					; dbus_pending_call_set_data+41o ...
		align 10h
aDbus_pending_2	db 'dbus_pending_call_free_data_slot',0
					; DATA XREF: dbus_pending_call_free_data_slot+8o
					; dbus_pending_call_free_data_slot+38o	...
		align 20h
aDbus_pending_3	db 'dbus_pending_call_allocate_data_slot',0
					; DATA XREF: dbus_pending_call_allocate_data_slot+8o
					; dbus_pending_call_allocate_data_slot+75o
aDbus_pending_4	db 'dbus_pending_call_block',0 ; DATA XREF: dbus_pending_call_block+8o
					; dbus_pending_call_block+62o
aDbus_pending_0	db 'dbus_pending_call_steal_reply',0
					; DATA XREF: dbus_pending_call_steal_reply+9o
					; dbus_pending_call_steal_reply+3Do ...
		align 10h
aDbus_pending_1	db 'dbus_pending_call_get_completed',0
					; DATA XREF: dbus_pending_call_get_completed+Fo
					; dbus_pending_call_get_completed+92o
aDbus_pending_5	db 'dbus_pending_call_cancel',0 ; DATA XREF: dbus_pending_call_cancel+8o
					; dbus_pending_call_cancel+6Do
aDbus_pending_8	db 'dbus_pending_call_set_notify',0
					; DATA XREF: dbus_pending_call_set_notify+9o
					; dbus_pending_call_set_notify+103o
aDbus_pending_6	db 'dbus_pending_call_unref',0 ; DATA XREF: dbus_pending_call_unref+8o
					; dbus_pending_call_unref+7Do
a_dbus_pendin_6	db '_dbus_pending_call_last_unref',0
					; DATA XREF: dbus_pending_call_unref-B9o
aDbus_pending_7	db 'dbus_pending_call_ref',0 ; DATA XREF: dbus_pending_call_ref+8o
					; dbus_pending_call_ref+64o
		align 20h
a_dbus_pendin_7	db '_dbus_pending_call_unref_and_unlock',0 ; DATA XREF: sub_67DEAE00+17o
		align 20h
a_dbus_pendi_12	db '_dbus_pending_call_get_connection_unlocked',0
					; DATA XREF: sub_67DEA4C0+Ao
		align 20h
a_dbus_pendin_5	db '_dbus_pending_call_get_connection_and_lock',0
					; DATA XREF: sub_67DEA6B0+Ao
		align 20h
a_dbus_pendi_11	db '_dbus_pending_call_set_reply_serial_unlocked',0
					; DATA XREF: .text:67DEA50Ao
					; .text:67DEA539o ...
		align 20h
a_dbus_pending_	db '_dbus_pending_call_get_reply_serial_unlocked',0
					; DATA XREF: sub_67DEA580+Ao
		align 20h
a_dbus_pendin_0	db '_dbus_pending_call_get_timeout_unlocked',0 ; DATA XREF: sub_67DEA5C0+Ao
		align 20h
a_dbus_pendin_1	db '_dbus_pending_call_set_timeout_added_unlocked',0
					; DATA XREF: sub_67DEA600+Ao
		align 20h
a_dbus_pendin_2	db '_dbus_pending_call_is_timeout_added_unlocked',0
					; DATA XREF: sub_67DEA660+Ao
		align 20h
a_dbus_pendin_8	db '_dbus_pending_call_queue_timeout_error_unlocked',0
					; DATA XREF: sub_67DEAFA0+15o
a_dbus_pendin_3	db '_dbus_pending_call_complete',0 ; DATA XREF: sub_67DEA7B0+8o
		align 20h
a_dbus_pendin_9	db '_dbus_pending_call_set_reply_unlocked',0 ; DATA XREF: sub_67DEB010+5Eo
					; sub_67DEB010+7Co ...
		align 20h
a_dbus_pendi_10	db '_dbus_pending_call_new_unlocked',0 ; DATA XREF: sub_67DEB120+23o
aRBuildWin32_10	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DEB690+1Ao
					; sub_67DEB6E0+1Ao
		db 's-resources.c',0
aCounterRefcoun	db 'counter->refcount > 0',0 ; DATA XREF: sub_67DEB690+22o
					; sub_67DEB6E0+22o
a_dbus_counte_0	db '_dbus_counter_unref',0 ; DATA XREF: sub_67DEB6E0+Ao
a_dbus_counter_	db '_dbus_counter_ref',0 ; DATA XREF: sub_67DEB690+Ao
		align 20h
; char aRBuildWin32_11[]
aRBuildWin32_11	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: dbus_server_get_data+19o
					; dbus_server_get_data+58o ...
		db 's-server.c',0
aConstChar_db_4	db '(*(const char*)_DBUS_FUNCTION_NAME) != ',27h,'_',27h,0
					; DATA XREF: dbus_server_get_data+21o
					; dbus_server_set_new_connection_function+3Fo ...
aServerNull	db 'server != NULL',0   ; DATA XREF: dbus_server_get_data+FCo
					; dbus_server_set_new_connection_function+135o	...
aServerHave_ser	db '!(server)->have_server_lock',0 ; DATA XREF: dbus_server_get_data+60o
					; dbus_server_set_new_connection_function+7Eo ...
aServerHave_s_0	db '(server)->have_server_lock',0 ; DATA XREF: dbus_server_get_data+B3o
					; dbus_server_set_new_connection_function+DBo ...
aSlot_p0_2	db '*slot_p >= 0',0     ; DATA XREF: dbus_server_free_data_slot+65o
; char aReEntrantCallT[]
aReEntrantCallT	db 'Re-entrant call to %s',0Ah,0
					; DATA XREF: dbus_server_set_timeout_functions+1A2o
					; dbus_server_set_watch_functions+1A2o
aOld_refcount_0	db 'old_refcount > 0',0 ; DATA XREF: sub_67DEC490+88o
					; sub_67DEC540+89o ...
aServerDisconne	db 'server->disconnected',0 ; DATA XREF: sub_67DEC540+C8o
					; dbus_server_unref+A8o ...
		align 4
aServerVtableFi	db 'server->vtable->finalize != NULL',0 ; DATA XREF: sub_67DEC540+137o
					; dbus_server_unref+D7o
		align 4
aServerVtableDi	db 'server->vtable->disconnect != NULL',0
					; DATA XREF: dbus_server_disconnect+D6o
aAddressNull_0	db 'address != NULL',0  ; DATA XREF: dbus_server_listen+76Fo
		align 10h
aErrorNullDbu_7	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: dbus_server_listen+1F2o
					; dbus_server_listen+320o ...
aTmp_errorNul_1	db '(&tmp_error) == NULL || !dbus_error_is_set ((&tmp_error))',0
					; DATA XREF: dbus_server_listen+2C8o
					; dbus_server_listen+422o ...
aServerNull_0	db 'server == NULL',0   ; DATA XREF: dbus_server_listen+1A8o
					; dbus_server_listen+29Bo ...
; char aAddressSAlread[]
aAddressSAlread	db 'Address ',27h,'%s',27h,' already used',0
					; DATA XREF: dbus_server_listen+697o
		align 4
; char aOrg_freedes_35[]
aOrg_freedes_35	db 'org.freedesktop.DBus.Error.AddressInUse',0
					; DATA XREF: dbus_server_listen+69Fo
aTmp_errorNul_2	db '(&tmp_error) == NULL || dbus_error_is_set ((&tmp_error))',0
					; DATA XREF: dbus_server_listen+4C9o
					; dbus_server_listen+564o ...
; char aUnknownAddress[]
aUnknownAddress	db 'Unknown address type ',27h,'%s',27h,0
					; DATA XREF: dbus_server_listen+34Ao
		align 10h
; char aOrg_freedes_34[]
aOrg_freedes_34	db 'org.freedesktop.DBus.Error.BadAddress',0
					; DATA XREF: dbus_server_listen+352o
					; dbus_server_listen+746o
; char aEmptyAddress_0[]
aEmptyAddress_0	db 'Empty address ',27h,'%s',27h,0 ; DATA XREF: dbus_server_listen+73Eo
		align 4
aErrorNullDbu_8	db 'error == NULL || dbus_error_is_set (&first_connect_error) || dbus'
					; DATA XREF: dbus_server_listen+7B8o
					; dbus_server_listen+8A8o
		db '_error_is_set (error)',0
		align 4
aErrorNullDb_10	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: dbus_server_listen+878o
		align 4
aErrorNullDbu_9	db 'error == NULL || dbus_error_is_set (&first_connect_error)',0
					; DATA XREF: dbus_server_listen+7F1o
					; dbus_server_listen+8D4o
		align 10h
aFirst_connect_	db '(&first_connect_error) == NULL || !dbus_error_is_set ((&first_con'
					; DATA XREF: dbus_server_listen+835o
					; dbus_server_listen+918o
		db 'nect_error))',0
aServerHave_s_3	db '!server->have_server_lock',0 ; DATA XREF: sub_67DED3E0+20o
aOld_refcount_1	db 'old_refcount == 0',0 ; DATA XREF: sub_67DED4C0+41o
; char aGuid_0[]
aGuid_0		db ',guid=',0           ; DATA XREF: sub_67DED4C0+16Co
		align 4
; char aInitializedSer[]
aInitializedSer	db 'Initialized server on address %s',0Ah,0 ; DATA XREF: sub_67DED4C0+21Co
aWatchNull_1	db 'watch != NULL',0    ; DATA XREF: .text:67DED92Do
aDbus_server_ge	db 'dbus_server_get_data',0 ; DATA XREF: dbus_server_get_data+9o
					; dbus_server_get_data+48o ...
aDbus_server__1	db 'dbus_server_set_data',0 ; DATA XREF: dbus_server_set_data+9o
					; dbus_server_set_data+48o ...
aDbus_server_fr	db 'dbus_server_free_data_slot',0 ; DATA XREF: dbus_server_free_data_slot+8o
					; dbus_server_free_data_slot+6Do
		align 20h
aDbus_server__2	db 'dbus_server_set_auth_mechanisms',0
					; DATA XREF: dbus_server_set_auth_mechanisms+Eo
					; dbus_server_set_auth_mechanisms+4Fo ...
aDbus_server__3	db 'dbus_server_set_timeout_functions',0
					; DATA XREF: dbus_server_set_timeout_functions+Ao
					; dbus_server_set_timeout_functions+49o ...
		align 20h
aDbus_server__4	db 'dbus_server_set_watch_functions',0
					; DATA XREF: dbus_server_set_watch_functions+Ao
					; dbus_server_set_watch_functions+49o ...
aDbus_server_se	db 'dbus_server_set_new_connection_function',0
					; DATA XREF: dbus_server_set_new_connection_function+27o
					; dbus_server_set_new_connection_function+66o ...
aDbus_server__5	db 'dbus_server_get_id',0 ; DATA XREF: dbus_server_get_id+8o
					; dbus_server_get_id+47o ...
aDbus_server__6	db 'dbus_server_get_address',0 ; DATA XREF: dbus_server_get_address+9o
					; dbus_server_get_address+48o ...
aDbus_server__0	db 'dbus_server_get_is_connected',0
					; DATA XREF: dbus_server_get_is_connected+9o
					; dbus_server_get_is_connected+4Do ...
aDbus_server_di	db 'dbus_server_disconnect',0 ; DATA XREF: dbus_server_disconnect+9o
					; dbus_server_disconnect+45o ...
aDbus_server_un	db 'dbus_server_unref',0 ; DATA XREF: dbus_server_unref+8o
					; dbus_server_unref+77o ...
aDbus_server_re	db 'dbus_server_ref',0  ; DATA XREF: dbus_server_ref+8o
					; dbus_server_ref+7Ao ...
aDbus_server_li	db 'dbus_server_listen',0 ; DATA XREF: dbus_server_listen+33o
					; dbus_server_listen+6Eo ...
a_dbus_server_u	db '_dbus_server_unref_unlocked',0 ; DATA XREF: sub_67DEC540+Bo
					; sub_67DEC540+38o ...
a_dbus_server_r	db '_dbus_server_ref_unlocked',0 ; DATA XREF: sub_67DEC490+Ao
					; sub_67DEC490+37o ...
aProtected_ch_2	db 'protected_change_timeout',0 ; DATA XREF: sub_67DEDA80+Do
					; sub_67DEDA80+EBo ...
a_dbus_server_t	db '_dbus_server_toggle_watch',0 ; DATA XREF: .text:67DED90Do
					; .text:67DED93Ao
aProtected_ch_0	db 'protected_change_watch',0 ; DATA XREF: sub_67DED720+Do
					; sub_67DED720+EBo ...
a_dbus_server_1	db '_dbus_server_remove_watch',0 ; DATA XREF: sub_67DED9A0+8o
a_dbus_server_a	db '_dbus_server_add_watch',0 ; DATA XREF: sub_67DEDA10+8o
a_dbus_server_f	db '_dbus_server_finalize_base',0 ; DATA XREF: sub_67DED3E0+8o
					; sub_67DED3E0+3Co
a_dbus_server_i	db '_dbus_server_init_base',0 ; DATA XREF: sub_67DED4C0+29o
					; sub_67DED4C0+224o
		align 10h
; char aRBuildWin32_12[]
aRBuildWin32_12	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DEDCF0+14Do
					; sub_67DEDCF0+1D9o ...
		db 's-server-socket.c',0
aServerHave_s_1	db '!(server)->have_server_lock',0 ; DATA XREF: sub_67DEDCF0+155o
					; sub_67DEE790+38o
aServerHave_s_2	db '(server)->have_server_lock',0 ; DATA XREF: sub_67DEDCF0+1E1o
					; sub_67DEDCF0+23Ao ...
		align 4
aErrorNullDb_11	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DEDF60+56o
					; sub_67DEE3D0+8Fo ...
; char aOrg_freedes_37[]
aOrg_freedes_37	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67DEDF60+2DFo
					; sub_67DEDF60+392o ...
aLocalhost	db 'localhost',0        ; DATA XREF: sub_67DEDF60+33Co
a0		db '0',0                ; DATA XREF: sub_67DEDF60+357o
asc_67E26A6C	db '*',0                ; DATA XREF: sub_67DEDF60+BBo
		align 10h
aErrorNullDb_14	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DEDF60+3E8o
					; sub_67DEE3D0+1E9o
aTcpHost	db 'tcp:host=',0        ; DATA XREF: sub_67DEDF60:loc_67DEE220o
; char aNonceTcpHost[]
aNonceTcpHost	db 'nonce-tcp:host=',0  ; DATA XREF: sub_67DEDF60+144o
; char aPort_0[]
aPort_0		db ',port=',0           ; DATA XREF: sub_67DEDF60+179o
; char aFamily_0[]
aFamily_0	db ',family=',0         ; DATA XREF: sub_67DEDF60+1B8o
; char aNoncefile_0[]
aNoncefile_0	db ',noncefile=',0      ; DATA XREF: sub_67DEDF60+229o
aTcp_0		db 'tcp',0              ; DATA XREF: sub_67DEE3D0+20o
aNonceTcp_0	db 'nonce-tcp',0        ; DATA XREF: sub_67DEE3D0+13o
aHost		db 'host',0             ; DATA XREF: sub_67DEE3D0+ACo
aBind		db 'bind',0             ; DATA XREF: sub_67DEE3D0+BCo
aPort		db 'port',0             ; DATA XREF: sub_67DEE3D0+D0o
aFamily		db 'family',0           ; DATA XREF: sub_67DEE3D0+E4o
aFound		db 'found',0            ; DATA XREF: sub_67DEE790+98o
		align 10h
; char aHandlingClient[]
aHandlingClient	db 'Handling client connection, flags 0x%x',0Ah,0
					; DATA XREF: sub_67DEE790+ACo
; char aNoClientAvaila[]
aNoClientAvaila	db 'No client available to accept after all',0Ah,0
					; DATA XREF: sub_67DEE790:loc_67DEEAD4o
		align 4
; char aFailedToAccept[]
aFailedToAccept	db 'Failed to accept a client connection: %s',0Ah,0
					; DATA XREF: sub_67DEE790+307o
		align 10h
; char aCreatingNewCli[]
aCreatingNewCli	db 'Creating new client connection with fd %d',0Ah,0
					; DATA XREF: sub_67DEE790+16Do
		align 4
; char aErrorOnServerL[]
aErrorOnServerL	db 'Error on server listening socket',0Ah,0
					; DATA XREF: sub_67DEE790:loc_67DEE8A6o
		align 10h
; char aHangupOnServer[]
aHangupOnServer	db 'Hangup on server listening socket',0Ah,0 ; DATA XREF: sub_67DEE790+E5o
		align 4
; char aRejectedClient[]
aRejectedClient	db 'Rejected client connection due to lack of memory',0Ah,0
					; DATA XREF: sub_67DEE790+3B2o
a_dbus_server_l	db '_dbus_server_listen_socket',0 ; DATA XREF: sub_67DEE3D0:loc_67DEE447o
					; sub_67DEE3D0:loc_67DEE52Bo ...
		align 20h
a_dbus_server_n	db '_dbus_server_new_for_tcp_socket',0 ; DATA XREF: sub_67DEDF60+3Eo
					; sub_67DEDF60:loc_67DEE330o
off_67E26C80	dd offset sub_67DEE5E0	; DATA XREF: sub_67DEDCF0+114o
		dd offset sub_67DEE680
a_dbus_server_0	db '_dbus_server_new_for_socket',0 ; DATA XREF: sub_67DEDCF0+13Do
					; sub_67DEDCF0:loc_67DEDEB9o ...
aSocket_disconn	db 'socket_disconnect',0 ; DATA XREF: sub_67DEE680+Ao
					; sub_67DEE680:loc_67DEE754o
aSocket_handle_	db 'socket_handle_watch',0 ; DATA XREF: sub_67DEE790+20o
					; sub_67DEE790:loc_67DEE810o ...
		align 20h
aHandle_new_cli	db 'handle_new_client_fd_and_unlock',0 ; DATA XREF: sub_67DEE790+175o
					; sub_67DEE790+191o ...
aRBuildWin32_14	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: dbus_type_is_fixed+18o
					; dbus_type_is_fixed+71o ...
		db 's-signature.c',0
		align 10h
aConstChar_db_5	db '(*(const char*)_DBUS_FUNCTION_NAME) != ',27h,'_',27h,0
					; DATA XREF: dbus_type_is_fixed+20o
					; dbus_type_is_basic+20o ...
		align 4
a_dbus_type_is_	db '_dbus_type_is_valid (typecode) || typecode == DBUS_TYPE_INVALID',0
					; DATA XREF: dbus_type_is_fixed+79o
					; dbus_type_is_basic+8Do ...
; char aOrg_freedes_38[]
aOrg_freedes_38	db 'org.freedesktop.DBus.Error.InvalidSignature',0
					; DATA XREF: dbus_signature_validate+47o
					; dbus_signature_validate_single+5Ao
; char aExactlyOneComp[]
aExactlyOneComp	db 'Exactly one complete type required in signature',0
					; DATA XREF: dbus_signature_validate_single+52o
aDbus_type_is_5	db 'dbus_type_is_container (dbus_signature_iter_get_current_type (ite'
					; DATA XREF: dbus_signature_iter_recurse+95o
		db 'r))',0
		align 10h
aDbus_signatu_1	db 'dbus_signature_iter_get_current_type (iter) == DBUS_TYPE_ARRAY',0
					; DATA XREF: dbus_signature_iter_get_element_type+56o
aDbus_type_is_2	db 'dbus_type_is_fixed',0 ; DATA XREF: dbus_type_is_fixed+8o
					; dbus_type_is_fixed+84o
aDbus_type_is_3	db 'dbus_type_is_basic',0 ; DATA XREF: dbus_type_is_basic+8o
					; dbus_type_is_basic+98o
aDbus_type_is_4	db 'dbus_type_is_container',0 ; DATA XREF: dbus_type_is_container+8o
					; dbus_type_is_container+90o
aDbus_signature	db 'dbus_signature_iter_recurse',0
					; DATA XREF: dbus_signature_iter_recurse+Do
					; dbus_signature_iter_recurse+9Do
		align 10h
aDbus_signatu_0	db 'dbus_signature_iter_get_element_type',0
					; DATA XREF: dbus_signature_iter_get_element_type+8o
					; dbus_signature_iter_get_element_type+61o
		align 20h
dword_67E26F40	dd 1			; DATA XREF: dbus_type_is_fixed+58r
		align 8
		dd 1, 3	dup(0)
		dd 2 dup(1), 4 dup(0)
		dd 1, 2	dup(0)
		dd 1, 2	dup(0)
		dd 2 dup(1), 2 dup(0)
		dd 2 dup(1)
aRBuildWin32_15	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: .text:67DF16A8o
					; sub_67DF16E0+1Ao ...
		db 's-timeout.c',0
aInterval0	db 'interval >= 0',0    ; DATA XREF: .text:67DF16BAo
aTimeoutNull	db 'timeout != NULL',0  ; DATA XREF: sub_67DF16E0+2Ao
					; sub_67DF1820+56o ...
aTimeoutRefcoun	db 'timeout->refcount > 0',0 ; DATA XREF: sub_67DF16E0+51o
					; sub_67DF1820+7Do ...
		align 4
aNonexistentTim	db 'Nonexistent timeout was removed',0 ; DATA XREF: sub_67DF1820+E9o
a_dbus_timeou_0	db '_dbus_timeout_set_interval',0 ; DATA XREF: .text:67DF1698o
a_dbus_timeout_	db '_dbus_timeout_unref',0 ; DATA XREF: sub_67DF16E0+Ao
					; sub_67DF16E0+39o ...
		align 4
aRBuildWin32_16	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: dbus_threads_init+1Co
					; dbus_threads_init+49o ...
		db 's-threads.c',0
aFunctionsNull	db 'functions != NULL',0 ; DATA XREF: dbus_threads_init+2Co
		align 4
aFunctionsMaskD	db 'functions->mask & DBUS_THREAD_FUNCTIONS_CONDVAR_NEW_MASK',0
					; DATA XREF: dbus_threads_init+51o
		align 10h
aFunctionsMas_0	db 'functions->mask & DBUS_THREAD_FUNCTIONS_CONDVAR_FREE_MASK',0
					; DATA XREF: dbus_threads_init+81o
		align 4
aFunctionsMas_1	db 'functions->mask & DBUS_THREAD_FUNCTIONS_CONDVAR_WAIT_MASK',0
					; DATA XREF: dbus_threads_init+B1o
		align 4
aFunctionsMas_2	db 'functions->mask & DBUS_THREAD_FUNCTIONS_CONDVAR_WAIT_TIMEOUT_MASK'
					; DATA XREF: dbus_threads_init+E1o
		db 0
		align 4
aFunctionsMas_3	db 'functions->mask & DBUS_THREAD_FUNCTIONS_CONDVAR_WAKE_ONE_MASK',0
					; DATA XREF: dbus_threads_init+111o
		align 4
aFunctionsMas_4	db 'functions->mask & DBUS_THREAD_FUNCTIONS_CONDVAR_WAKE_ALL_MASK',0
					; DATA XREF: dbus_threads_init+141o
		align 4
aFunctionsCondv	db 'functions->condvar_new != NULL',0 ; DATA XREF: dbus_threads_init+173o
		align 4
aFunctionsCon_0	db 'functions->condvar_free != NULL',0 ; DATA XREF: dbus_threads_init+1A4o
aFunctionsCon_1	db 'functions->condvar_wait != NULL',0 ; DATA XREF: dbus_threads_init+1D5o
aFunctionsCon_2	db 'functions->condvar_wait_timeout != NULL',0
					; DATA XREF: dbus_threads_init+206o
aFunctionsCon_3	db 'functions->condvar_wake_one != NULL',0
					; DATA XREF: dbus_threads_init+237o
aFunctionsCon_4	db 'functions->condvar_wake_all != NULL',0
					; DATA XREF: dbus_threads_init+268o
aEitherTheNon_0	db 'Either the nonrecusrive or recursive mutex functions sets should '
					; DATA XREF: dbus_threads_init+BD2o
		db 'be passed into dbus_threads_init. Neither sets were passed.',0
		align 4
aEitherTheNonre	db 'Either the nonrecusrive or recursive mutex functions sets should '
					; DATA XREF: dbus_threads_init+867o
		db 'be passed into dbus_threads_init. Both sets were passed. You most'
		db ' likely just want to set the recursive mutex functions to avoid d'
		db 'eadlocks in D-Bus.',0
		align 4
aFunctionsMas_5	db '(functions->mask & ~DBUS_THREAD_FUNCTIONS_ALL_MASK) == 0',0
					; DATA XREF: dbus_threads_init+2C5o
		align 10h
a_dbus_n_elemen	db '_DBUS_N_ELEMENTS (global_locks) == _DBUS_N_GLOBAL_LOCKS',0
					; DATA XREF: dbus_threads_init+413o
aThread_init_ge	db 'thread_init_generation != _dbus_current_generation',0
					; DATA XREF: dbus_threads_init+9DEo
aMp_dbus_dummy_	db '*mp == _DBUS_DUMMY_MUTEX',0 ; DATA XREF: dbus_threads_init+A36o
aCp_dbus_dummy_	db '*cp == _DBUS_DUMMY_CONDVAR',0 ; DATA XREF: dbus_threads_init+B42o
aLocation_pNull	db 'location_p != NULL',0 ; DATA XREF: sub_67DF2CC0+2Ao
aDbus_threads_i	db 'dbus_threads_init',0 ; DATA XREF: dbus_threads_init+Co
					; dbus_threads_init+39o ...
aInit_locks	db 'init_locks',0       ; DATA XREF: dbus_threads_init+3FBo
aInit_uninitial	db 'init_uninitialized_locks',0 ; DATA XREF: dbus_threads_init+9C0o
					; dbus_threads_init+A1Eo ...
a_dbus_mutex_ne	db '_dbus_mutex_new_at_location',0 ; DATA XREF: sub_67DF2CC0+Ao
		align 10h
; char aRBuildWin32_19[]
aRBuildWin32_19	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DF3150+1Ao
					; sub_67DF31A0+20o ...
		db 's-transport.c',0
aTransportRefco	db 'transport->refcount > 0',0 ; DATA XREF: sub_67DF3150+22o
					; sub_67DF3240+51o ...
; char aStart_0[]
aStart_0	db 'start',0Ah,0        ; DATA XREF: sub_67DF31A0+8o
					; sub_67DF4150+3AFo ...
		align 10h
aTransportVtabl	db 'transport->vtable->disconnect != NULL',0 ; DATA XREF: sub_67DF31A0+44o
					; sub_67DF4150+3EBo ...
; char aEnd_0[]
aEnd_0		db 'end',0Ah,0          ; DATA XREF: sub_67DF31A0+75o
					; sub_67DF4150+423o ...
aTransportNull	db 'transport != NULL',0 ; DATA XREF: sub_67DF3240+2Ao
					; sub_67DF3E90+62o ...
; char aFinalizing[]
aFinalizing	db 'finalizing',0Ah,0   ; DATA XREF: sub_67DF3240:loc_67DF32B7o
					; sub_67DF3E90:loc_67DF3F46o ...
		align 4
aTransportVta_0	db 'transport->vtable->finalize != NULL',0 ; DATA XREF: sub_67DF3240+B3o
					; sub_67DF3E90+F2o ...
aErrorNullDb_15	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DF33B0+69o
					; sub_67DF3810+91o ...
aGuid_1		db 'guid',0             ; DATA XREF: sub_67DF33B0+7Eo
		align 4
; char aOrg_freedes_39[]
aOrg_freedes_39	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67DF33B0+41Do
					; sub_67DF3810+39Fo
aTmp_errorNul_3	db '(&tmp_error) == NULL || !dbus_error_is_set ((&tmp_error))',0
					; DATA XREF: sub_67DF33B0+C6o
					; sub_67DF33B0+136o ...
		align 4
aTmp_errorNul_4	db '(&tmp_error) == NULL || dbus_error_is_set ((&tmp_error))',0
					; DATA XREF: sub_67DF33B0+24Ao
					; sub_67DF33B0+346o
		align 4
aUnknownAddre_0	db 'Unknown address type (examples of valid types are "tcp" and on UN'
					; DATA XREF: sub_67DF33B0:loc_67DF37E8o
		db 'IX "unix")',0
aMethodNull_0	db 'method != NULL',0   ; DATA XREF: sub_67DF3810+40o
aAutolaunch	db 'autolaunch',0       ; DATA XREF: sub_67DF3810+1Bo
aScope		db 'scope',0            ; DATA XREF: sub_67DF3810:loc_67DF38C7o
aErrorNullDb_16	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DF3810+168o
					; sub_67DF3810+1BCo ...
aAddressNull_1	db 'address != NULL',0  ; DATA XREF: sub_67DF3810+200o
					; sub_67DF3BF0+21Bo
aAddress0	db '*address != ',27h,'\0',27h,0 ; DATA XREF: sub_67DF3810+233o
aAddressNull_2	db 'address == NULL',0  ; DATA XREF: sub_67DF3BF0+8Co
; char aInitializedTra[]
aInitializedTra	db 'Initialized transport on address %s',0Ah,0
					; DATA XREF: sub_67DF3BF0+179o
		align 4
aTransportVta_1	db 'transport->vtable->connection_set != NULL',0
					; DATA XREF: sub_67DF3FB0+20o
aTransportConne	db 'transport->connection == NULL',0 ; DATA XREF: sub_67DF3FB0+58o
aServer_guidNul	db 'server_guid != NULL',0 ; DATA XREF: sub_67DF4150+222o
; char aClientExpected[]
aClientExpected	db 'Client expected GUID ',27h,'%s',27h,' and we got ',27h,'%s',27h,' from the se'
					; DATA XREF: sub_67DF4150+607o
		db 'rver',0Ah,0
aAuth_identityN	db 'auth_identity != NULL',0 ; DATA XREF: sub_67DF4150+BDo
					; sub_67DF4150+137o ...
; char aUnlock_1[]
aUnlock_1	db 'unlock',0Ah,0       ; DATA XREF: sub_67DF4150+302o
					; sub_67DF4150+4B7o
; char aLockPostUnixUs[]
aLockPostUnixUs	db 'lock post unix user function',0Ah,0 ; DATA XREF: sub_67DF4150+343o
; char aClientUidLuAut[]
aClientUidLuAut	db 'Client UID %lu authorized',0Ah,0 ; DATA XREF: sub_67DF4150+649o
		align 4
; char aClientUidLuWas[]
aClientUidLuWas	db 'Client UID %lu was rejected, disconnecting',0Ah,0
					; DATA XREF: sub_67DF4150+387o
; char aLockPostWindow[]
aLockPostWindow	db 'lock post windows user function',0Ah,0 ; DATA XREF: sub_67DF4150+4F6o
; char aClientSidSAuth[]
aClientSidSAuth	db 'Client SID ',27h,'%s',27h,' authorized',0Ah,0
					; DATA XREF: sub_67DF4150+71Bo
		align 4
; char aClientSidSWasR[]
aClientSidSWasR	db 'Client SID ',27h,'%s',27h,' was rejected, disconnecting',0Ah,0
					; DATA XREF: sub_67DF4150+53Ao
		align 4
; char aClientAuthoriz[]
aClientAuthoriz	db 'Client authorized as SID ',27h,'%s',27h,'matching our SID ',27h,'%s',27h,0Ah,0
					; DATA XREF: sub_67DF4150+1A4o
; char aClientAuthor_0[]
aClientAuthor_0	db 'Client authorized as UID %lu matching our UID %lu',0Ah,0
					; DATA XREF: sub_67DF4150+27Bo
aNull_1		db '<null>',0           ; DATA XREF: sub_67DF4150+6A9o
					; sub_67DF4150+6CBo
		align 4
; char aClientAuthor_1[]
aClientAuthor_1	db 'Client authorized as SID ',27h,'%s',27h,' but our SID is ',27h,'%s',27h,', di'
					; DATA XREF: sub_67DF4150+6E4o
		db 'sconnecting',0Ah,0
		align 4
; char aClientAuthor_2[]
aClientAuthor_2	db 'Client authorized as UID %lu but our UID is %lu, disconnecting',0Ah,0
					; DATA XREF: sub_67DF4150+762o
; char aDUnusedBytesSe[]
aDUnusedBytesSe	db ' %d unused bytes sent to message loader',0Ah,0
					; DATA XREF: sub_67DF48E0+129o
					; sub_67DF48E0+1F4o ...
		align 4
; char aNotEnoughMem_0[]
aNotEnoughMem_0	db 'Not enough memory to transfer unused bytes from auth conversation'
					; DATA XREF: sub_67DF48E0:loc_67DF4967o
		db 0Ah,0
aLinkNull_1	db 'link != NULL',0     ; DATA XREF: sub_67DF4C20+33o
; char aQueueingReceiv[]
aQueueingReceiv	db 'queueing received message %p',0Ah,0 ; DATA XREF: sub_67DF4C20+4Fo
		align 4
; char aCorruptedMessa[]
aCorruptedMessa	db 'Corrupted message stream, disconnecting',0Ah,0
					; DATA XREF: sub_67DF4C20:loc_67DF4D10o
		align 10h
aTransportVta_3	db 'transport->vtable->handle_watch != NULL',0 ; DATA XREF: sub_67DF5090+25o
; char aTriedToHandleA[]
aTriedToHandleA	db 'Tried to handle an invalidated watch; this watch should have been'
					; DATA XREF: sub_67DF5090:loc_67DF5240o
		db ' removed',0Ah,0
		align 4
aTransportVta_2	db 'transport->vtable->do_iteration != NULL',0 ; DATA XREF: sub_67DF5260+33o
; char aTransportItera[]
aTransportItera	db 'Transport iteration flags 0x%x timeout %d connected = %d',0Ah,0
					; DATA XREF: sub_67DF5260+5Do
		align 4
a_dbus_transp_8	db '_dbus_transport_queue_messages',0 ; DATA XREF: sub_67DF4C20+1Bo
					; sub_67DF4C20+57o ...
aRecover_unused	db 'recover_unused_bytes',0 ; DATA XREF: sub_67DF48E0+8Fo
					; sub_67DF48E0+131o ...
a_dbus_trans_10	db '_dbus_transport_do_iteration',0 ; DATA XREF: sub_67DF5260+1Bo
					; sub_67DF5260+6Fo ...
		align 4
a_dbus_transp_6	db '_dbus_transport_set_connection',0 ; DATA XREF: sub_67DF3FB0+8o
					; sub_67DF3FB0+40o
a_dbus_trans_15	db '_dbus_transport_handle_watch',0 ; DATA XREF: sub_67DF5090+9o
		align 10h
a_dbus_transp_7	db '_dbus_transport_get_is_authenticated',0 ; DATA XREF: sub_67DF4150+A5o
					; sub_67DF4150+20Ao ...
aAuth_via_unix_	db 'auth_via_unix_user_function',0 ; DATA XREF: sub_67DF4150+2B8o
					; sub_67DF4150+30Ao ...
		align 4
aAuth_via_windo	db 'auth_via_windows_user_function',0 ; DATA XREF: sub_67DF4150+45Bo
					; sub_67DF4150+4BFo ...
aAuth_via_defau	db 'auth_via_default_rules',0 ; DATA XREF: sub_67DF4150+11Fo
					; sub_67DF4150+1ACo ...
a_dbus_transp_1	db '_dbus_transport_disconnect',0 ; DATA XREF: sub_67DF31A0+10o
					; sub_67DF31A0+2Co ...
a_dbus_transp_2	db '_dbus_transport_unref',0 ; DATA XREF: sub_67DF3240+Ao
					; sub_67DF3240+39o ...
a_dbus_transp_0	db '_dbus_transport_ref',0 ; DATA XREF: sub_67DF3150+Ao
					; sub_67DF3E90+Ao ...
		align 10h
off_67E27DE0	dd offset sub_67DF67A0	; DATA XREF: sub_67DF33B0+EDr
off_67E27DE4	dd offset sub_67DF8460	; DATA XREF: sub_67DF33B0+15Dr
off_67E27DE8	dd offset sub_67DF3810	; DATA XREF: sub_67DF33B0+1CDr
a_dbus_transp_3	db '_dbus_transport_open',0 ; DATA XREF: sub_67DF33B0+51o
					; sub_67DF33B0+AEo ...
		align 20h
a_dbus_transp_4	db '_dbus_transport_open_autolaunch',0 ; DATA XREF: sub_67DF3810+28o
					; sub_67DF3810:loc_67DF3889o ...
a_dbus_transp_5	db '_dbus_transport_new_for_autolaunch',0 ; DATA XREF: sub_67DF3810+EAo
					; sub_67DF3810:loc_67DF3960o ...
aCheck_address	db 'check_address',0    ; DATA XREF: sub_67DF3810+1E8o
					; sub_67DF3810+21Bo
a_dbus_trans_13	db '_dbus_transport_init_base',0 ; DATA XREF: sub_67DF3BF0+71o
					; sub_67DF3BF0+181o ...
		align 20h
; char aFdD[]
aFdD		db 'fd = %d',0Ah,0      ; DATA XREF: sub_67DF55E0+Ao
					; sub_67DF5890+Co
		align 4
; char aRBuildWin32_20[]
aRBuildWin32_20	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DF55E0+26o
					; sub_67DF55E0+82o ...
		db 's-transport-socket.c',0
		align 4
aSocket_transpo	db 'socket_transport->read_watch == NULL',0 ; DATA XREF: sub_67DF55E0+CCo
					; sub_67DF6300+6Bo
		align 4
; char aSettingReadWat[]
aSettingReadWat	db '  setting read watch enabled = %d',0Ah,0 ; DATA XREF: sub_67DF55E0+6Ao
		align 10h
aSocket_trans_0	db 'socket_transport->write_watch == NULL',0 ; DATA XREF: sub_67DF5740+CDo
					; sub_67DF6300+9Co
		align 4
; char aCheck_write_wa[]
aCheck_write_wa	db 'check_write_watch(): needed = %d on connection %p watch %p fd = %'
					; DATA XREF: sub_67DF5740+67o
		db 'd outgoing messages exist %d',0Ah,0
		align 4
; char aDBytesExceedsD[]
aDBytesExceedsD	db '%d bytes exceeds %d bytes read per iteration, returning',0Ah,0
					; DATA XREF: sub_67DF5890+235o
		align 4
aSocket_trans_1	db 'socket_transport->read_watch != NULL || transport->disconnected',0
					; DATA XREF: sub_67DF5890+83o
aDbus_transport	db '!DBUS_TRANSPORT_CAN_SEND_UNIX_FD(transport)',0
					; DATA XREF: sub_67DF5890+E6o
					; sub_67DF5CD0+317o
a_dbus_strin_44	db '_dbus_string_get_length (&socket_transport->encoded_incoming) == '
					; DATA XREF: sub_67DF5890+138o
		db 'bytes_read',0
; char aOutOfMemoryDec[]
aOutOfMemoryDec	db 'Out of memory decoding incoming data',0Ah,0
					; DATA XREF: sub_67DF5890:loc_67DF5C6Fo
		align 4
; char aOutOfMemoryInR[]
aOutOfMemoryInR	db 'Out of memory in read()/do_reading()',0Ah,0
					; DATA XREF: sub_67DF5890:loc_67DF5C44o
		align 4
; char aErrorReadingFr[]
aErrorReadingFr	db 'Error reading from remote app: %s',0Ah,0 ; DATA XREF: sub_67DF5890+37Bo
					; sub_67DF6A20+5C7o
; char aDisconnectedFr[]
aDisconnectedFr	db 'Disconnected from remote app',0Ah,0 ; DATA XREF: sub_67DF5890+2BFo
					; sub_67DF6A20+3A4o
; char aReadDBytes[]
aReadDBytes	db ' read %d bytes',0Ah,0 ; DATA XREF: sub_67DF5890+1E5o
		align 10h
; char aOutOfMemoryW_0[]
aOutOfMemoryW_0	db ' out of memory when queueing messages we just read in the transpo'
					; DATA XREF: sub_67DF5890:loc_67DF5BC0o
		db 'rt',0Ah,0
		align 4
; char aNotAuthenticat[]
aNotAuthenticat	db 'Not authenticated, not writing anything',0Ah,0
					; DATA XREF: sub_67DF5CD0:loc_67DF6080o
		align 4
; char aNotConnectedNo[]
aNotConnectedNo	db 'Not connected, not writing anything',0Ah,0
					; DATA XREF: sub_67DF5CD0:loc_67DF5F10o
		align 4
; char aDo_writingHave[]
aDo_writingHave	db 'do_writing(), have_messages = %d, fd = %d',0Ah,0
					; DATA XREF: sub_67DF5CD0+35o
		align 4
; char aDBytesExceed_0[]
aDBytesExceed_0	db '%d bytes exceeds %d bytes written per iteration, returning',0Ah,0
					; DATA XREF: sub_67DF5CD0+3E9o
aMessageNull_1	db 'message != NULL',0  ; DATA XREF: sub_67DF5CD0+BDo
; char aErrorWritingTo[]
aErrorWritingTo	db 'Error writing to remote app: %s',0Ah,0 ; DATA XREF: sub_67DF5CD0+2BBo
					; sub_67DF6A20+505o
; char aWroteDBytesOfD[]
aWroteDBytesOfD	db ' wrote %d bytes of %d',0Ah,0 ; DATA XREF: sub_67DF5CD0+17Eo
aSocket_trans_2	db 'socket_transport->message_bytes_written <= total_bytes_to_write',0
					; DATA XREF: sub_67DF5CD0+1CBo
; char aStart_1[]
aStart_1	db 'start',0Ah,0        ; DATA XREF: sub_67DF61D0+6o
; char aEnd_1[]
aEnd_1		db 'end',0Ah,0          ; DATA XREF: sub_67DF61D0:loc_67DF6268o
; char asc_67E28308[]
asc_67E28308	db 0Ah,0		; DATA XREF: sub_67DF62A0+8o
					; sub_67DF6300+8o
		align 4
aErrorNullDb_17	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DF63C0+4Fo
					; sub_67DF67A0+BCo ...
; char aOrg_freedes_41[]
aOrg_freedes_41	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67DF63C0+2E0o
					; sub_67DF63C0+340o
aLocalhost_0	db 'localhost',0        ; DATA XREF: sub_67DF63C0+366o
aTcp		db 'tcp:',0             ; DATA XREF: sub_67DF63C0:loc_67DF6736o
; char aNonceTcp_2[]
aNonceTcp_2	db 'nonce-tcp:',0       ; DATA XREF: sub_67DF63C0+78o
					; sub_67DF63C0+36Bo
; char aHost_1[]
aHost_1		db 'host=',0            ; DATA XREF: sub_67DF63C0+97o
; char aPort_2[]
aPort_2		db ',port=',0           ; DATA XREF: sub_67DF63C0+C3o
; char aFamily_2[]
aFamily_2	db 'family=',0          ; DATA XREF: sub_67DF63C0+FBo
; char aNoncefile_2[]
aNoncefile_2	db 'noncefile=',0       ; DATA XREF: sub_67DF63C0+12Fo
		align 4
aErrorNullDb_18	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DF63C0+3ADo
					; sub_67DF67A0+253o
		align 4
; char aSuccessfullyCo[]
aSuccessfullyCo	db 'Successfully connected to tcp socket %s:%s',0Ah,0
					; DATA XREF: sub_67DF63C0+18Do
aMethodNull_1	db 'method != NULL',0   ; DATA XREF: sub_67DF67A0+3Co
aTcp_1		db 'tcp',0              ; DATA XREF: sub_67DF67A0+17o
aNonceTcp_1	db 'nonce-tcp',0        ; DATA XREF: sub_67DF67A0+60o
aHost_0		db 'host',0             ; DATA XREF: sub_67DF67A0:loc_67DF6882o
; char aPort_1[]
aPort_1		db 'port',0             ; DATA XREF: sub_67DF67A0+F2o
					; sub_67DF67A0+203o
aFamily_1	db 'family',0           ; DATA XREF: sub_67DF67A0+106o
; char aNoncefile_1[]
aNoncefile_1	db 'noncefile',0        ; DATA XREF: sub_67DF67A0+118o
					; sub_67DF67A0+1CDo
; char aExchange_crede[]
aExchange_crede	db 'exchange_credentials: do_reading = %d, do_writing = %d',0Ah,0
					; DATA XREF: sub_67DF6A20+8Co
; char aFailedToWriteC[]
aFailedToWriteC	db 'Failed to write credentials: %s',0Ah,0 ; DATA XREF: sub_67DF6A20+15Bo
		align 4
; char aFailedToReadCr[]
aFailedToReadCr	db 'Failed to read credentials %s',0Ah,0 ; DATA XREF: sub_67DF6A20+558o
		align 4
; char aSend_credentia[]
aSend_credentia	db 'send_credentials_pending = %d receive_credentials_pending = %d',0Ah,0
					; DATA XREF: sub_67DF6A20+F7o
aClient_0	db 'client',0           ; DATA XREF: sub_67DF6A20+1EBo
					; sub_67DF6A20+22Bo ...
aServer_0	db 'server',0           ; DATA XREF: sub_67DF6A20+1E4o
					; sub_67DF6A20+224o ...
		align 4
; char aSAuthStateWa_0[]
aSAuthStateWa_0	db ' %s auth state: waiting for input',0Ah,0 ; DATA XREF: sub_67DF6A20+2EAo
; char aReadDBytesInAu[]
aReadDBytesInAu	db ' read %d bytes in auth phase',0Ah,0 ; DATA XREF: sub_67DF6A20+488o
aBytes_read0	db 'bytes_read == 0',0  ; DATA XREF: sub_67DF6A20+390o
		align 10h
; char aSAuthStateWait[]
aSAuthStateWait	db ' %s auth state: waiting for memory',0Ah,0 ; DATA XREF: sub_67DF6A20+1F4o
; char aSAuthStateByte[]
aSAuthStateByte	db ' %s auth state: bytes to send',0Ah,0 ; DATA XREF: sub_67DF6A20+289o
		align 4
; char aSAuthStateNeed[]
aSAuthStateNeed	db ' %s auth state: need to disconnect',0Ah,0 ; DATA XREF: sub_67DF6A20+234o
; char aSAuthStateAuth[]
aSAuthStateAuth	db ' %s auth state: authenticated',0Ah,0 ; DATA XREF: sub_67DF6A20+3FCo
		align 4
off_67E285D8	dd offset loc_67DF6CF6	; DATA XREF: sub_67DF6A20+1D7r
		dd offset loc_67DF6C00	; jump table for switch	statement
		dd offset loc_67DF6C95
		dd offset loc_67DF6C40
		dd offset loc_67DF6E08
byte_67E285EC	db 0			; DATA XREF: sub_67DF7020+2Co
					; sub_67DF7020+41o
aWrite_0	db 'write',0            ; DATA XREF: sub_67DF7020+1o
aRead_0		db 'read',0             ; DATA XREF: sub_67DF7020+33o
; char aIterationFlags[]
aIterationFlags	db ' iteration flags = %s%s timeout = %d read_watch = %p write_watch '
					; DATA XREF: sub_67DF7020+62o
		db '= %p fd = %d',0Ah,0
aSocket_trans_3	db 'socket_transport->read_watch',0 ; DATA XREF: sub_67DF7020+D0o
aSocket_trans_4	db 'socket_transport->write_watch',0 ; DATA XREF: sub_67DF7020+10Fo
; char aUnlockPrePoll[]
aUnlockPrePoll	db 'unlock pre poll',0Ah,0 ; DATA XREF: sub_67DF7020:loc_67DF72A4o
; char aLockPostPoll[]
aLockPostPoll	db 'lock post poll',0Ah,0 ; DATA XREF: sub_67DF7020:loc_67DF7360o
		align 4
; char aInIterationNee[]
aInIterationNee	db 'in iteration, need_read=%d need_write=%d',0Ah,0
					; DATA XREF: sub_67DF7020+1A1o
; char aErrorFrom_dbus[]
aErrorFrom_dbus	db 'Error from _dbus_poll(): %s',0Ah,0 ; DATA XREF: sub_67DF7020+379o
; char a___LeavingDo_i[]
a___LeavingDo_i	db ' ... leaving do_iteration()',0Ah,0 ; DATA XREF: sub_67DF7020+258o
aWatchSocket_tr	db 'watch == socket_transport->read_watch || watch == socket_transpor'
					; DATA XREF: sub_67DF73F0+4Eo
		db 't->write_watch',0
aWatchNull_2	db 'watch != NULL',0    ; DATA XREF: sub_67DF73F0+7Ao
		align 4
; char aHandlingReadWa[]
aHandlingReadWa	db 'handling read watch %p flags = %x',0Ah,0 ; DATA XREF: sub_67DF73F0+170o
; char aNoMemoryToRead[]
aNoMemoryToRead	db 'no memory to read',0Ah,0 ; DATA XREF: sub_67DF73F0+1D3o
		align 10h
; char aNotReadingAnyt[]
aNotReadingAnyt	db 'Not reading anything since we just completed the authentication',0Ah
					; DATA XREF: sub_67DF73F0:loc_67DF76EAo
		db 0
		align 4
; char aHandlingWriteW[]
aHandlingWriteW	db 'handling write watch, have_outgoing_messages = %d',0Ah,0
					; DATA XREF: sub_67DF73F0+217o
; char aNoMemoryToWrit[]
aNoMemoryToWrit	db 'no memory to write',0Ah,0 ; DATA XREF: sub_67DF73F0+2CFo
		align 4
; char aAskedToHandleR[]
aAskedToHandleR	db 'asked to handle read watch with non-read condition 0x%x',0Ah,0
					; DATA XREF: sub_67DF73F0+296o
		align 4
; char aAskedToHandl_0[]
aAskedToHandl_0	db 'asked to handle write watch with non-write condition 0x%x',0Ah,0
					; DATA XREF: sub_67DF73F0+264o
		align 4
; char aAskedToHandleW[]
aAskedToHandleW	db 'asked to handle watch %p on fd %d that we don',27h,'t recognize',0Ah,0
					; DATA XREF: sub_67DF73F0+C9o
; char aHangUpOrErrorO[]
aHangUpOrErrorO	db 'Hang up or error on watch',0Ah,0 ; DATA XREF: sub_67DF73F0:loc_67DF7517o
a_dbus_trans_11	db '_dbus_transport_open_socket',0 ; DATA XREF: sub_67DF67A0+24o
					; sub_67DF67A0:loc_67DF6844o ...
		align 10h
a_dbus_trans_12	db '_dbus_transport_new_for_tcp_socket',0 ; DATA XREF: sub_67DF63C0+37o
					; sub_67DF63C0+195o ...
		align 4
off_67E28944	dd offset sub_67DF6300	; DATA XREF: sub_67DF5480+CBo
					; sub_67DF63C0+27Bo
		dd offset sub_67DF73F0
		dd offset sub_67DF62A0
		dd offset sub_67DF6110
		dd offset sub_67DF7020
		dd offset sub_67DF5730
		dd offset sub_67DF5460
aCheck_read_wat	db 'check_read_watch',0 ; DATA XREF: sub_67DF55E0+12o
					; sub_67DF55E0+72o ...
aSocket_do_iter	db 'socket_do_iteration',0 ; DATA XREF: sub_67DF7020+6Ao
					; sub_67DF7020:loc_67DF70D6o ...
aDo_authenticat	db 'do_authentication',0 ; DATA XREF: sub_67DF6A20+FFo
					; sub_67DF6A20+1FCo ...
aExchange_cre_0	db 'exchange_credentials',0 ; DATA XREF: sub_67DF6A20+94o
					; sub_67DF6A20+163o ...
aRead_data_into	db 'read_data_into_auth',0 ; DATA XREF: sub_67DF6A20+376o
					; sub_67DF6A20+3ACo ...
aWrite_data_fro	db 'write_data_from_auth',0 ; DATA XREF: sub_67DF6A20+50Do
aDo_reading	db 'do_reading',0       ; DATA XREF: sub_67DF5890+14o
					; sub_67DF5890:loc_67DF58FBo ...
aDo_writing	db 'do_writing',0       ; DATA XREF: sub_67DF5CD0+3Do
					; sub_67DF5CD0+A5o ...
aCheck_write__0	db 'check_write_watch',0 ; DATA XREF: sub_67DF5740+6Fo
					; sub_67DF5740:loc_67DF57F3o
aSocket_disco_0	db 'socket_disconnect',0 ; DATA XREF: sub_67DF62A0+10o
aFree_watches	db 'free_watches',0     ; DATA XREF: sub_67DF61D0+Eo
					; sub_67DF61D0+A0o
aSocket_handl_0	db 'socket_handle_watch',0 ; DATA XREF: sub_67DF73F0+36o
					; sub_67DF73F0+62o ...
aSocket_finaliz	db 'socket_finalize',0  ; DATA XREF: sub_67DF6300+10o
					; sub_67DF6300+53o ...
; char aRBuildWin32_21[]
aRBuildWin32_21	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: dbus_watch_get_enabled+18o
					; dbus_watch_get_enabled+51o ...
		db 's-watch.c',0
		align 4
aConstChar_db_6	db '(*(const char*)_DBUS_FUNCTION_NAME) != ',27h,'_',27h,0
					; DATA XREF: dbus_watch_get_enabled+20o
					; dbus_watch_get_data+20o ...
aWatchNull	db 'watch != NULL',0    ; DATA XREF: dbus_watch_get_enabled+59o
					; dbus_watch_get_data+55o ...
		align 4
aWatchFlagsVali	db '(watch->flags & VALID_WATCH_FLAGS) == watch->flags',0
					; DATA XREF: dbus_watch_get_flags+63o
		align 4
; char aWatchIsInvalid[]
aWatchIsInvalid	db 'Watch is invalid, it should have been removed',0Ah,0
					; DATA XREF: dbus_watch_handle:loc_67DF7B4Fo
aWatchFd0	db 'watch->fd >= 0',0   ; DATA XREF: dbus_watch_handle+14Co
		align 4
; char aAfterSanitizat[]
aAfterSanitizat	db 'After sanitization, watch flags on fd %d were 0',0Ah,0
					; DATA XREF: dbus_watch_handle+D4o
		align 10h
; char aSettingWatchFd[]
aSettingWatchFd	db 'Setting watch fd %d data to data = %p function = %p from data = %'
					; DATA XREF: dbus_watch_set_data+75o
		db 'p function = %p',0Ah,0
		align 4
; char aTogglingWatchP[]
aTogglingWatchP	db 'Toggling watch %p on fd %d to %d',0Ah,0 ; DATA XREF: sub_67DF7D70+55o
aReadwrite	db 'readwrite',0        ; DATA XREF: sub_67DF7E20+3Fo
aRead		db 'read',0             ; DATA XREF: sub_67DF7E20+65o
aNotReadOrWrite	db 'not read or write',0 ; DATA XREF: sub_67DF7E20+75o
aWrite		db 'write',0            ; DATA XREF: sub_67DF7E20+6Eo
		align 10h
; char aAddingASWatchO[]
aAddingASWatchO	db 'Adding a %s watch on fd %d using newly-set add watch function',0Ah,0
					; DATA XREF: sub_67DF7E20+8Fo
		align 10h
; char aRemovingWatchO[]
aRemovingWatchO	db 'Removing watch on fd %d using newly-set remove function because i'
					; DATA XREF: sub_67DF7E20+FAo
		db 'nitial add failed',0Ah,0
; char aRemovingAllPre[]
aRemovingAllPre	db 'Removing all pre-existing watches',0Ah,0 ; DATA XREF: sub_67DF7E20+14Bo
					; sub_67DF8150+Fo
aWatchRefcount0	db 'watch->refcount > 0',0 ; DATA XREF: sub_67DF7FF0+51o
					; sub_67DC8220+3008Eo ...
		align 4
aFlagsValid_wat	db '(flags & VALID_WATCH_FLAGS) == flags',0 ; DATA XREF: sub_67DF80C0+30o
aNonexistentWat	db 'Nonexistent watch was removed',0 ; DATA XREF: sub_67DC8220+300FAo
; char aRemovingWatc_0[]
aRemovingWatc_0	db 'Removing watch on fd %d',0Ah,0 ; DATA XREF: sub_67DC8220+30010o
; char aAddingWatchOnF[]
aAddingWatchOnF	db 'Adding watch on fd %d',0Ah,0 ; DATA XREF: sub_67DF8330+2Fo
aDbus_watch_han	db 'dbus_watch_handle',0 ; DATA XREF: dbus_watch_handle+Do
					; dbus_watch_handle:loc_67DF7B66o ...
aDbus_watch_get	db 'dbus_watch_get_enabled',0 ; DATA XREF: dbus_watch_get_enabled+8o
					; dbus_watch_get_enabled+64o
aDbus_watch_set	db 'dbus_watch_set_data',0 ; DATA XREF: dbus_watch_set_data+1Fo
					; dbus_watch_set_data+81o ...
aDbus_watch_g_0	db 'dbus_watch_get_data',0 ; DATA XREF: dbus_watch_get_data+8o
					; dbus_watch_get_data+60o
aDbus_watch_g_1	db 'dbus_watch_get_flags',0 ; DATA XREF: dbus_watch_get_flags+8o
					; dbus_watch_get_flags+3Bo ...
aDbus_watch_g_2	db 'dbus_watch_get_socket',0 ; DATA XREF: dbus_watch_get_socket+8o
					; dbus_watch_get_socket+60o
aDbus_watch_g_3	db 'dbus_watch_get_unix_fd',0 ; DATA XREF: dbus_watch_get_unix_fd+8o
					; dbus_watch_get_unix_fd+65o
aDbus_watch_g_4	db 'dbus_watch_get_fd',0 ; DATA XREF: dbus_watch_get_fd+8o
					; dbus_watch_get_fd+65o
a_dbus_watch__2	db '_dbus_watch_list_toggle_watch',0 ; DATA XREF: sub_67DF7D70+5Do
a_dbus_watch__0	db '_dbus_watch_list_remove_watch',0 ; DATA XREF: sub_67DC8220+30018o
a_dbus_watch__1	db '_dbus_watch_list_add_watch',0 ; DATA XREF: sub_67DF8330+37o
		align 4
a_dbus_watch_li	db '_dbus_watch_list_set_functions',0 ; DATA XREF: sub_67DF7E20+97o
					; sub_67DF7E20+102o ...
a_dbus_watch_un	db '_dbus_watch_unref',0 ; DATA XREF: sub_67DF7FF0+Ao
					; sub_67DF7FF0+39o ...
a_dbus_watch_ne	db '_dbus_watch_new',0  ; DATA XREF: sub_67DF80C0+8o
		align 20h
aHost_2		db 'host',0             ; DATA XREF: sub_67DF8460+23o
; char aPort_3[]
aPort_3		db 'port',0             ; DATA XREF: sub_67DF8460+33o
					; sub_67DF8460+1A8o
aFamily_3	db 'family',0           ; DATA XREF: sub_67DF8460+47o
aNoncefile_3	db 'noncefile',0        ; DATA XREF: sub_67DF8460+59o
		align 4
aRBuildWin32_22	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DF8460+86o
					; sub_67DF8460+DAo ...
		db 's-transport-win.c',0
aMethodNull_2	db 'method != NULL',0   ; DATA XREF: sub_67DF8460+8Eo
; char aNonceTcp_3[]
aNonceTcp_3	db 'nonce-tcp',0        ; DATA XREF: sub_67DF8460+17o
					; sub_67DF8460+1B0o
aErrorNullDb_19	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DF8460+E2o
					; sub_67DF8460+171o
aErrorNullDb_20	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DF8460+1FAo
		align 20h
a_dbus_trans_14	db '_dbus_transport_open_platform_specific',0 ; DATA XREF: sub_67DF8460+76o
					; sub_67DF8460:loc_67DF852Ao ...
		align 20h
aNonceTcp_4	db 'nonce-tcp',0        ; DATA XREF: sub_67DF8680+17o
aHost_3		db 'host',0             ; DATA XREF: sub_67DF8680:loc_67DF8801o
aBind_0		db 'bind',0             ; DATA XREF: sub_67DF8680+191o
aPort_4		db 'port',0             ; DATA XREF: sub_67DF8680+1A5o
aFamily_4	db 'family',0           ; DATA XREF: sub_67DF8680+1B7o
aRBuildWin32_23	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DF8680+7Bo
					; sub_67DF8680+140o ...
		db 's-server-win.c',0
aErrorNullDb_21	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DF8680+83o
					; sub_67DF8680+148o ...
aErrorNullDb_22	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: sub_67DF8680+273o
aAutolaunch_0	db 'autolaunch',0       ; DATA XREF: sub_67DF8680+41o
aScope_0	db 'scope',0            ; DATA XREF: sub_67DF8680+B3o
; char aIpv4[]
aIpv4		db 'ipv4',0             ; DATA XREF: sub_67DF8680+E1o
; char a0_0[]
a0_0		db '0',0                ; DATA XREF: sub_67DF8680+E9o
; char aLocalhost_1[]
aLocalhost_1	db 'localhost',0        ; DATA XREF: sub_67DF8680+F1o
					; sub_67DF8680+F9o
		align 10h
a_dbus_server_2	db '_dbus_server_listen_platform_specific',0
					; DATA XREF: sub_67DF8680:loc_67DF86EBo
					; sub_67DF8680+130o ...
		align 20h
; char aRBuildWin32_24[]
aRBuildWin32_24	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DF8A00+39o
					; sub_67DF8A00+60o ...
		db 's-dataslot.c',0
aSlot0_2	db 'slot >= 0',0        ; DATA XREF: sub_67DF8A00+41o
					; sub_67DF8DC0+1A0o
aSlotAllocatorN	db 'slot < allocator->n_allocated_slots',0 ; DATA XREF: sub_67DF8A00+68o
					; sub_67DF8AE0+3Ao ...
aAllocatorAlloc	db 'allocator->allocated_slots[slot].slot_id == slot',0
					; DATA XREF: sub_67DF8A00+96o
					; sub_67DF8AE0+6Fo ...
aSlotListN_slot	db 'slot < list->n_slots',0 ; DATA XREF: sub_67DF8AE0+11Fo
		align 4
aSlot_id_pAlloc	db '*slot_id_p < allocator->n_allocated_slots',0
					; DATA XREF: sub_67DF8C50+32o
		align 10h
aAllocatorAll_0	db 'allocator->allocated_slots[*slot_id_p].slot_id == *slot_id_p',0
					; DATA XREF: sub_67DF8C50+67o
		align 10h
aAllocatorAll_1	db 'allocator->allocated_slots[*slot_id_p].refcount > 0',0
					; DATA XREF: sub_67DF8C50+9Ao
; char aFreeingSlotDOn[]
aFreeingSlotDOn	db 'Freeing slot %d on allocator %p total %d allocated %d used',0Ah,0
					; DATA XREF: sub_67DF8C50+F6o
aAllocatorLock_	db 'allocator->lock_loc == NULL',0 ; DATA XREF: sub_67DF8DC0+2DAo
; char aDBusThreadsWer[]
aDBusThreadsWer	db 'D-Bus threads were initialized after first using the D-Bus librar'
					; DATA XREF: sub_67DF8DC0:loc_67DF9130o
		db 'y. If your application does not directly initialize threads or us'
		db 'e D-Bus, keep in mind that some library or plugin may have used D'
		db '-Bus or initialized threads behind your back. You can often fix t'
		db 'his problem by calling dbus_init_threads() or dbus_g_threads_init'
		db '() early in your main() method, before D-Bus is used.',0Ah,0
aExiting	db 'exiting',0          ; DATA XREF: sub_67DF8DC0+38Co
aSlot_id_p0	db '*slot_id_p < 0',0   ; DATA XREF: sub_67DF8DC0+E8o
					; sub_67DF8DC0+1FCo
		align 10h
aAllocatorAll_2	db 'allocator->allocated_slots[slot].refcount == 1',0
					; DATA XREF: sub_67DF8DC0+25Co
		align 10h
; char aAllocatedSlotD[]
aAllocatedSlotD	db 'Allocated slot %d on allocator %p total %d slots allocated %d use'
					; DATA XREF: sub_67DF8DC0+291o
		db 'd',0Ah,0
a_dbus_data_slo	db '_dbus_data_slot_list_get',0 ; DATA XREF: sub_67DF8A00+29o
					; sub_67DF8A00+50o ...
a_dbus_data_s_0	db '_dbus_data_slot_list_set',0 ; DATA XREF: sub_67DF8AE0+22o
					; sub_67DF8AE0+57o ...
		align 4
a_dbus_data_s_1	db '_dbus_data_slot_allocator_free',0 ; DATA XREF: sub_67DF8C50+1Ao
					; sub_67DF8C50+4Fo ...
		align 10h
a_dbus_data_s_2	db '_dbus_data_slot_allocator_alloc',0 ; DATA XREF: sub_67DF8DC0+3Bo
					; sub_67DF8DC0+72o ...
aRBuildWin32_25	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DF91F0+35o
					; sub_67DF91F0+6Eo ...
		db 's-hash.c',0
		align 4
aTableKey_typ_0	db 'table->key_type == DBUS_HASH_STRING',0 ; DATA XREF: sub_67DF91F0+3Do
					; sub_67DF9570+22o ...
aPreallocated_0	db 'preallocated != NULL',0 ; DATA XREF: sub_67DF91F0+76o
					; .text:67DF9B35o ...
aEntryNull	db 'entry != NULL',0    ; DATA XREF: sub_67DF91F0+B9o
					; sub_67DF9B60+BCo
		align 4
aTableKey_typ_1	db 'table->key_type == DBUS_HASH_UINTPTR',0 ; DATA XREF: .text:67DF9349o
					; .text:67DF94B2o ...
		align 4
aTableKey_typeD	db 'table->key_type == DBUS_HASH_INT',0 ; DATA XREF: sub_67DF93D0+39o
					; sub_67DF9500+22o ...
		align 10h
aSizeofDbushash	db 'sizeof (DBusHashIter) == sizeof (DBusRealHashIter)',0
					; DATA XREF: .text:67DF9605o
					; sub_67DF9950+21o ...
		align 4
aTableBucketsRe	db '&(table->buckets[real->next_bucket-1]) == real->bucket',0
					; DATA XREF: .text:67DF9685o
aRealTableNull	db 'real->table != NULL',0 ; DATA XREF: .text:67DF96D2o
					; .text:67DF9752o ...
aRealEntryNull	db 'real->entry != NULL',0 ; DATA XREF: .text:67DF9702o
					; .text:67DF9782o ...
		align 4
aRealN_entries_	db 'real->n_entries_on_init >= real->table->n_entries',0
					; DATA XREF: sub_67DF9950+4Do
					; .text:67DFA220o
aRealNext_entry	db 'real->next_entry != NULL',0 ; DATA XREF: sub_67DF9950+BEo
					; .text:67DFA299o
aRealBucketNull	db 'real->bucket != NULL',0 ; DATA XREF: sub_67DF9950+ECo
					; sub_67DF9E20+83o ...
aTableNull	db 'table != NULL',0    ; DATA XREF: sub_67DF9B60+2Eo
aBucketNull	db 'bucket != NULL',0   ; DATA XREF: sub_67DF9B60+5Do
aBucketNull_0	db '*bucket != NULL',0  ; DATA XREF: sub_67DF9B60+84o
aPrevNull	db 'prev != NULL',0     ; DATA XREF: sub_67DF9B60+F0o
		align 10h
aDbus_small_has	db 'DBUS_SMALL_HASH_TABLE == _DBUS_N_ELEMENTS (table->static_buckets)'
					; DATA XREF: sub_67DF9F80+5Ao
		db 0
		align 4
aTableMaskTable	db 'table->mask < table->n_buckets',0 ; DATA XREF: sub_67DF9F80+BDo
					; sub_67DFA3A0+2B1o
aUnknownHashTab	db 'Unknown hash table type',0 ; DATA XREF: sub_67DF9F80+10Do
					; sub_67DFA3A0+3CEo
aTableLo_rebuil	db 'table->lo_rebuild_size >= 0',0 ; DATA XREF: sub_67DFA3A0+227o
		align 4
aTableHi_rebuil	db 'table->hi_rebuild_size > table->lo_rebuild_size',0
					; DATA XREF: sub_67DFA3A0+24Co
aTableMask0	db 'table->mask != 0',0 ; DATA XREF: sub_67DFA3A0+282o
aTwoStringsIsNo	db 'two-strings is not enabled',0 ; DATA XREF: sub_67DFA3A0+3EAo
		align 20h
a_dbus_hash_t_5	db '_dbus_hash_table_insert_string_preallocated',0
					; DATA XREF: sub_67DF91F0+25o
					; sub_67DF91F0+5Eo ...
		align 20h
a_dbus_hash_t_7	db '_dbus_hash_table_free_preallocated_entry',0 ; DATA XREF: .text:67DF9B15o
					; sub_67DFA3A0+7Ao ...
		align 20h
a_dbus_hash__10	db '_dbus_hash_table_insert_uintptr',0 ; DATA XREF: .text:67DF9331o
a_dbus_hash_tab	db '_dbus_hash_table_insert_int',0 ; DATA XREF: sub_67DF93D0+21o
a_dbus_hash_t_4	db '_dbus_hash_table_insert_string',0 ; DATA XREF: sub_67DF9F00+Ao
		align 10h
a_dbus_hash__12	db '_dbus_hash_table_remove_uintptr',0 ; DATA XREF: .text:67DF9CAAo
aRemove_entry	db 'remove_entry',0     ; DATA XREF: sub_67DF9B60+16o
					; sub_67DF9B60+45o ...
a_dbus_hash_t_2	db '_dbus_hash_table_remove_int',0 ; DATA XREF: sub_67DF9D20+Ao
		align 4
a_dbus_hash_t_3	db '_dbus_hash_table_remove_string',0 ; DATA XREF: sub_67DF9DA0+Ao
		align 20h
a_dbus_hash__11	db '_dbus_hash_table_lookup_uintptr',0 ; DATA XREF: .text:67DF949Ao
a_dbus_hash_t_0	db '_dbus_hash_table_lookup_int',0 ; DATA XREF: sub_67DF9500+Ao
a_dbus_hash_t_1	db '_dbus_hash_table_lookup_string',0 ; DATA XREF: sub_67DF9570+Ao
a_dbus_hash_i_3	db '_dbus_hash_iter_lookup',0 ; DATA XREF: .text:67DF95EDo
					; .text:67DF966Do
		align 4
a_dbus_hash_i_4	db '_dbus_hash_iter_get_string_key',0 ; DATA XREF: .text:67DF96BAo
					; .text:67DF96EAo
		align 10h
a_dbus_hash_i_5	db '_dbus_hash_iter_get_uintptr_key',0 ; DATA XREF: .text:67DF973Ao
					; .text:67DF976Ao
a_dbus_hash_i_6	db '_dbus_hash_iter_get_int_key',0 ; DATA XREF: .text:67DF97BAo
					; .text:67DF97EAo
a_dbus_hash_i_7	db '_dbus_hash_iter_set_value',0 ; DATA XREF: .text:67DF983Bo
					; .text:67DF986Fo
a_dbus_hash_ite	db '_dbus_hash_iter_get_value',0 ; DATA XREF: sub_67DF98D0+Ao
					; sub_67DF98D0+3Ao
a_dbus_hash_i_2	db '_dbus_hash_iter_remove_entry',0 ; DATA XREF: sub_67DF9E20+Ao
					; sub_67DF9E20+3Ao ...
a_dbus_hash_i_0	db '_dbus_hash_iter_next',0 ; DATA XREF: sub_67DF9950+9o
					; sub_67DF9950+35o ...
a_dbus_hash_i_1	db '_dbus_hash_iter_init',0 ; DATA XREF: sub_67DF9A90+13o
					; .text:67DFA17Do
a_dbus_hash_t_6	db '_dbus_hash_table_new',0 ; DATA XREF: sub_67DF9F80+42o
					; sub_67DF9F80+A5o
aRebuild_table	db 'rebuild_table',0    ; DATA XREF: sub_67DFA3A0+20Fo
					; sub_67DFA3A0+234o ...
		align 10h
; char aDbus_verbose[]
aDbus_verbose	db 'DBUS_VERBOSE',0     ; DATA XREF: sub_67DFAAC0:loc_67DFAAD7o
; char Format[]
Format		db '[%s(%d):%s] ',0     ; DATA XREF: sub_67DFABC0+BBo
; char aDbus_fatal_war[]
aDbus_fatal_war	db 'DBUS_FATAL_WARNINGS',0 ; DATA XREF: sub_67DFAD60:loc_67DFADA0o
					; sub_67DFB4E0:loc_67DFB540o
		align 10h
; char aDbus_fatal_w_0[]
aDbus_fatal_w_0	db 'DBUS_FATAL_WARNINGS should be set to 0 or 1 if set, not ',27h,'%s',27h,0
					; DATA XREF: sub_67DFAD60+8Bo
					; sub_67DFB4E0+AEo
		align 10h
; char aFileSLineDProc[]
aFileSLineDProc	db 'File "%s" line %d process %lu should not have been reached: %s',0Ah,0
					; DATA XREF: sub_67DFAE30+Co
; char aLuAssertionFai[]
aLuAssertionFai	db '%lu: assertion failed "%s" file "%s" line %d function %s',0Ah,0
					; DATA XREF: sub_67DFAE70+14o
					; sub_67DFAEC0+30o ...
		align 4
aRBuildWin32_34	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DFAEC0+20o
					; .text:67DFB0CBo
		db 's-internals.c',0
		align 4
aOrg_freedes_70	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: .text:67DFB101o
					; .text:67DFB2BAo ...
aUuidFileSShoul	db 'UUID file ',27h,'%s',27h,' should contain a hex string of length %d, no'
					; DATA XREF: .text:67DFB34Eo
		db 't length %d, with no other text',0
		align 4
aOrg_freedes_71	db 'org.freedesktop.DBus.Error.InvalidFileContent',0
					; DATA XREF: .text:67DFB124o
					; .text:67DFB356o ...
		align 4
aUuidFileSConta	db 'UUID file ',27h,'%s',27h,' contains invalid hex data',0
					; DATA XREF: .text:67DFB3D3o
		align 4
aUuidFileSCon_0	db 'UUID file ',27h,'%s',27h,' contains %d bytes of hex-encoded data instea'
					; DATA XREF: .text:67DFB42Bo
		db 'd of %d',0
		align 4
aErrorNullDb_30	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: .text:67DFB259o
					; .text:67DFB4B0o
aErrorNullDb_29	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: .text:67DFB0D3o
; char aProcessLu[]
aProcessLu	db 'process %lu: ',0    ; DATA XREF: sub_67DFB4E0+12o
		align 4
; char aDBusLibraryApp[]
aDBusLibraryApp	db 'D-Bus library appears to be incorrectly set up; failed to read ma'
					; DATA XREF: sub_67DFB5D0+BCo
		db 'chine uuid: %s',0Ah
		db 'See the manual page for dbus-uuidgen to correct this issue.',0Ah,0
aNotEnoughMem_1	db 'Not enough memory',0 ; DATA XREF: .data:off_67E19010o
		align 4
aArgumentsToSWe	db 'arguments to %s() were incorrect, assertion "%s" failed in file %'
					; DATA XREF: .data:off_67E19014o
		db 's line %d.',0Ah
		db 'This is normally a bug in some application using the D-Bus librar'
		db 'y.',0Ah,0
		align 10h
a_dbus_read_uui	db '_dbus_read_uuid_file_without_creating',0 ; DATA XREF: .text:67DFB0B7o
					; .text:67DFB4B5o
		align 20h
a_dbus_create_u	db '_dbus_create_uuid_file_exclusively',0 ; DATA XREF: .text:67DFB25Eo
					; .text:67DFB378o
		align 20h
aRBuildWin32_26	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DFBD10+20o
		db 's-list.c',0
aListDest	db 'list != dest',0     ; DATA XREF: sub_67DFBD10+2Do
a_dbus_list_cop	db '_dbus_list_copy',0  ; DATA XREF: sub_67DFBD10+10o
		align 20h
aUnknown	db 'unknown',0          ; DATA XREF: sub_67DFC1F0+4o
					; sub_67DFE060+67o ...
; char aRBuildWin32_27[]
aRBuildWin32_27	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DFC210+35o
					; sub_67DFC210+65o ...
		db 's-marshal-basic.c',0
aTDbus_struct_0	db 't != DBUS_STRUCT_END_CHAR',0 ; DATA XREF: sub_67DFC210+3Do
					; sub_67DFD040+4Co
aTDbus_dict_e_1	db 't != DBUS_DICT_ENTRY_END_CHAR',0 ; DATA XREF: sub_67DFC210+6Do
					; sub_67DFD040+7Co
		align 4
a_dbus_align_ad	db '_DBUS_ALIGN_ADDRESS (data, alignment) == data',0
					; DATA XREF: sub_67DFC2B0+39o
aAlignment2	db 'alignment == 2',0   ; DATA XREF: sub_67DFC2B0+81o
		align 4
a_dbus_align__2	db '_DBUS_ALIGN_ADDRESS (data, 4) == data',0 ; DATA XREF: .text:67DFC4B3o
					; sub_67DFC500+2Eo ...
		align 4
a_dbus_align__5	db '_DBUS_ALIGN_ADDRESS (data, 2) == data',0 ; DATA XREF: .text:67DFC5AEo
					; sub_67DFD880+4E3o
		align 4
aUnknownTypecod	db 'unknown typecode in _dbus_type_get_alignment()',0
					; DATA XREF: sub_67DFC5E0+1Fo
					; sub_67DFD720+EBo
		align 4
off_67E2A1B4	dd offset loc_67DFC640	; DATA XREF: sub_67DFC5E0:loc_67DFC610r
		dd offset loc_67DFC640	; jump table for switch	statement
		dd offset loc_67DFC5EF
		dd offset loc_67DFC630
		dd offset loc_67DFC630
		dd offset loc_67DFC5EF
		dd offset loc_67DFC620
		dd offset loc_67DFC640
		dd offset loc_67DFC640
		dd offset loc_67DFC5EF
		dd offset loc_67DFC5EF
		dd offset loc_67DFC5EF
		dd offset loc_67DFC5EF
		dd offset loc_67DFC617
		dd offset loc_67DFC640
		dd offset loc_67DFC5EF
		dd offset loc_67DFC617
		dd offset loc_67DFC630
		dd offset loc_67DFC640
		dd offset loc_67DFC630
		dd offset loc_67DFC640
		dd offset loc_67DFC620
		dd offset loc_67DFC5EF
		dd offset loc_67DFC630
		dd offset loc_67DFC620
aN_elementsDb_0	db 'n_elements <= DBUS_MAXIMUM_ARRAY_LENGTH / alignment',0
					; DATA XREF: sub_67DFC650+43o
a_dbus_align__3	db '_DBUS_ALIGN_VALUE (array_start, alignment) == (unsigned) array_st'
					; DATA XREF: sub_67DFC650+12Eo
		db 'art',0
		align 4
aDbus_type_is_6	db 'dbus_type_is_fixed (element_type)',0 ; DATA XREF: sub_67DFC7E0+53o
aN_elements0_1	db 'n_elements >= 0',0  ; DATA XREF: sub_67DFC7E0+8Do
aNonFixedTypeIn	db 'non fixed type in array write',0 ; DATA XREF: sub_67DFC7E0+B6o
off_67E2A2E4	dd offset loc_67DFC950	; DATA XREF: sub_67DFC7E0:loc_67DFC8A2r
		dd offset loc_67DFC886	; jump table for switch	statement
		dd offset loc_67DFC940
		dd offset loc_67DFC886
		dd offset loc_67DFC886
		dd offset loc_67DFC886
		dd offset loc_67DFC950
		dd offset loc_67DFC950
		dd offset loc_67DFC886
		dd offset loc_67DFC886
		dd offset loc_67DFC886
		dd offset loc_67DFC886
		dd offset loc_67DFC900
		dd offset loc_67DFC886
		dd offset loc_67DFC886
		dd offset loc_67DFC900
		dd offset loc_67DFC886
		dd offset loc_67DFC886
		dd offset loc_67DFC940
		dd offset loc_67DFC950
		dd offset loc_67DFC886
		dd offset loc_67DFC886
		dd offset loc_67DFC940
		dd offset loc_67DFC8B0
aSizeofValue4	db 'sizeof (value) == 4',0 ; DATA XREF: sub_67DFC960+37o
aPos_after_dbus	db '*pos_after <= _dbus_string_get_length (str)',0
					; DATA XREF: sub_67DFC960+D4o
					; sub_67DFCC80+332o
aByte_orderDbus	db 'byte_order == DBUS_LITTLE_ENDIAN || byte_order == DBUS_BIG_ENDIAN'
					; DATA XREF: sub_67DFCA70+47o
					; sub_67DFD1D0+3Ao ...
		db 0
		align 4
; char aInsert_atDStri[]
aInsert_atDStri	db 'insert_at = %d string len = %d data_len = %d',0Ah,0
					; DATA XREF: sub_67DFCA70+1C0o
		align 4
aData_lenDbus_m	db 'data_len <= DBUS_MAXIMUM_SIGNATURE_LENGTH',0
					; DATA XREF: sub_67DFCA70+13Ao
aData_len255	db 'data_len <= 255',0  ; DATA XREF: sub_67DFCA70+166o
aDbus_type_is_7	db 'dbus_type_is_basic (type)',0 ; DATA XREF: sub_67DFCC80+43o
					; sub_67DFE240+46o
aSizeofValue2	db 'sizeof (value) == 2',0 ; DATA XREF: sub_67DFCC80+2B3o
aSizeofValue8	db 'sizeof (value) == 8',0 ; DATA XREF: sub_67DFCC80+11Bo
aVpStrNull	db 'vp->str != NULL',0  ; DATA XREF: sub_67DFCC80+21Eo
					; sub_67DFCC80+36Ao ...
aNotABasicType	db 'not a basic type',0 ; DATA XREF: sub_67DFCC80+73o
					; sub_67DFD880+61o ...
		align 4
off_67E2A498	dd offset loc_67DFCD50	; DATA XREF: sub_67DFCC80:loc_67DFCD00r
		dd offset loc_67DFCCE3	; jump table for switch	statement
		dd offset loc_67DFCD75
		dd offset loc_67DFCCE3
		dd offset loc_67DFCCE3
		dd offset loc_67DFCE84
		dd offset loc_67DFCEF0
		dd offset loc_67DFCEF0
		dd offset loc_67DFCCE3
		dd offset loc_67DFCCE3
		dd offset loc_67DFCCE3
		dd offset loc_67DFCCE3
		dd offset loc_67DFCF12
		dd offset loc_67DFCFD0
		dd offset loc_67DFCCE3
		dd offset loc_67DFCF12
		dd offset loc_67DFCCE3
		dd offset loc_67DFCFD0
		dd offset loc_67DFCD75
		dd offset loc_67DFCEF0
		dd offset loc_67DFCCE3
		dd offset loc_67DFCCE3
		dd offset loc_67DFCD75
		dd offset loc_67DFCD07
aPos4_dbus_stri	db 'pos + 4 <= _dbus_string_get_length (str)',0
					; DATA XREF: sub_67DFD0F0+43o
					; sub_67DFD720+51o ...
aLen0_1		db 'len >= 0',0         ; DATA XREF: sub_67DFD2B0+31o
aAlignedData	db 'aligned <= data',0  ; DATA XREF: sub_67DFD2B0+79o
; char a4ldP[]
a4ldP		db '%4ld',9,'%p: ',0    ; DATA XREF: sub_67DFD2B0+99o
; char asc_67E2A544[]
asc_67E2A544	db '    ',0             ; DATA XREF: sub_67DFD2B0+C3o
; char a4dP[]
a4dP		db '%4d',9,'%p: ',0     ; DATA XREF: sub_67DFD2B0+20Ao
; char aC[]
aC		db ' ',27h,'%c',27h,' ',0 ; DATA XREF: sub_67DFD2B0+173o
byte_67E2A559	db 0			; DATA XREF: sub_67DFD2B0+102o
a0_1		db '0',0                ; DATA XREF: sub_67DFD2B0+FBo
; char a0xSX[]
a0xSX		db '0x%s%x ',0          ; DATA XREF: sub_67DFD2B0+115o
; char aBeDLeD[]
aBeDLeD		db 'BE: %d LE: %d',0    ; DATA XREF: sub_67DFD2B0+2B6o
; char aDblG[]
aDblG		db ' dbl: %g',0         ; DATA XREF: sub_67DFD2B0+324o
; char asc_67E2A57B[]
asc_67E2A57B	db 0Ah,0		; DATA XREF: sub_67DFD2B0:loc_67DFD45Ao
					; sub_67DFD2B0:loc_67DFD486o
aStart0_1	db 'start >= 0',0       ; DATA XREF: sub_67DFD600+48o
; char aDDIsNotInsideS[]
aDDIsNotInsideS	db '  [%d,%d) is not inside string of length %d',0Ah,0
					; DATA XREF: sub_67DFD600+DCo
		align 4
; char aDDExtendsOutsi[]
aDDExtendsOutsi	db '  [%d,%d) extends outside string of length %d',0Ah,0
					; DATA XREF: sub_67DFD600+A7o
		align 4
off_67E2A5E8	dd offset loc_67DFD860	; DATA XREF: sub_67DFD720:loc_67DFD817r
		dd offset loc_67DFD860	; jump table for switch	statement
		dd offset loc_67DFD7FB
		dd offset loc_67DFD852
		dd offset loc_67DFD852
		dd offset loc_67DFD7FB
		dd offset loc_67DFD846
		dd offset loc_67DFD860
		dd offset loc_67DFD860
		dd offset loc_67DFD7FB
		dd offset loc_67DFD7FB
		dd offset loc_67DFD7FB
		dd offset loc_67DFD7FB
		dd offset loc_67DFD820
		dd offset loc_67DFD860
		dd offset loc_67DFD7FB
		dd offset loc_67DFD820
		dd offset loc_67DFD852
		dd offset loc_67DFD860
		dd offset loc_67DFD852
		dd offset loc_67DFD860
		dd offset loc_67DFD846
		dd offset loc_67DFD7FB
		dd offset loc_67DFD852
		dd offset loc_67DFD846
a_dbus_align__4	db '_DBUS_ALIGN_ADDRESS (data, 8) == data',0 ; DATA XREF: sub_67DFD880+23Co
		align 4
a_dbus_align__6	db '_DBUS_ALIGN_VALUE (pos, 4) == (unsigned) pos',0
					; DATA XREF: sub_67DFD880+5B8o
		align 4
off_67E2A6A4	dd offset loc_67DFD953	; DATA XREF: sub_67DFD880:loc_67DFD8F0r
		dd offset loc_67DFD8D1	; jump table for switch	statement
		dd offset loc_67DFDA44
		dd offset loc_67DFD8D1
		dd offset loc_67DFD8D1
		dd offset loc_67DFDBF5
		dd offset loc_67DFD953
		dd offset loc_67DFD953
		dd offset loc_67DFD8D1
		dd offset loc_67DFD8D1
		dd offset loc_67DFD8D1
		dd offset loc_67DFD8D1
		dd offset loc_67DFDCF0
		dd offset loc_67DFDDC6
		dd offset loc_67DFD8D1
		dd offset loc_67DFDCF0
		dd offset loc_67DFD8D1
		dd offset loc_67DFDDC6
		dd offset loc_67DFDA44
		dd offset loc_67DFD953
		dd offset loc_67DFD8D1
		dd offset loc_67DFD8D1
		dd offset loc_67DFDA44
		dd offset loc_67DFD8F7
; char aTypeSNotABasic[]
aTypeSNotABasic	db 'type %s not a basic type',0Ah,0 ; DATA XREF: sub_67DFE060+79o
		align 10h
off_67E2A720	dd offset loc_67DFE124	; DATA XREF: sub_67DFE060:loc_67DFE101r
		dd offset loc_67DFE0C4	; jump table for switch	statement
		dd offset loc_67DFE133
		dd offset loc_67DFE0C4
		dd offset loc_67DFE0C4
		dd offset loc_67DFE142
		dd offset loc_67DFE124
		dd offset loc_67DFE124
		dd offset loc_67DFE0C4
		dd offset loc_67DFE0C4
		dd offset loc_67DFE0C4
		dd offset loc_67DFE0C4
		dd offset loc_67DFE160
		dd offset loc_67DFE170
		dd offset loc_67DFE0C4
		dd offset loc_67DFE160
		dd offset loc_67DFE0C4
		dd offset loc_67DFE170
		dd offset loc_67DFE133
		dd offset loc_67DFE124
		dd offset loc_67DFE0C4
		dd offset loc_67DFE0C4
		dd offset loc_67DFE133
		dd offset loc_67DFE108
; char aTypeSDNotABasi[]
aTypeSDNotABasi	db 'type %s %d not a basic type',0Ah,0 ; DATA XREF: sub_67DFE240+89o
		align 10h
off_67E2A7A0	dd offset loc_67DFE330	; DATA XREF: sub_67DFE240:loc_67DFE2F1r
		dd offset loc_67DFE2B0	; jump table for switch	statement
		dd offset loc_67DFE380
		dd offset loc_67DFE2B0
		dd offset loc_67DFE2B0
		dd offset loc_67DFE4A0
		dd offset loc_67DFE330
		dd offset loc_67DFE330
		dd offset loc_67DFE2B0
		dd offset loc_67DFE2B0
		dd offset loc_67DFE2B0
		dd offset loc_67DFE2B0
		dd offset loc_67DFE4D2
		dd offset loc_67DFE510
		dd offset loc_67DFE2B0
		dd offset loc_67DFE4D2
		dd offset loc_67DFE2B0
		dd offset loc_67DFE510
		dd offset loc_67DFE380
		dd offset loc_67DFE330
		dd offset loc_67DFE2B0
		dd offset loc_67DFE2B0
		dd offset loc_67DFE380
		dd offset loc_67DFE2F8
aMap_type_char_	db 'map_type_char_to_type',0 ; DATA XREF: sub_67DFC210+25o
					; sub_67DFC210+55o ...
a_dbus_verbose_	db '_dbus_verbose_bytes_of_string',0 ; DATA XREF: sub_67DFD600+2Eo
					; sub_67DFD600+AFo ...
a_dbus_verbos_0	db '_dbus_verbose_bytes',0 ; DATA XREF: sub_67DFD2B0+Fo
					; sub_67DFD2B0+61o ...
a_dbus_marsha_5	db '_dbus_marshal_skip_basic',0 ; DATA XREF: sub_67DFE060+37o
		align 20h
a_dbus_marsha_0	db '_dbus_marshal_write_fixed_multi',0 ; DATA XREF: sub_67DFC7E0+3Bo
					; sub_67DFC7E0+75o
aMarshal_fixed_	db 'marshal_fixed_multi',0 ; DATA XREF: sub_67DFC650+2Bo
aSwap_array	db 'swap_array',0       ; DATA XREF: sub_67DFC650+108o
a_dbus_swap_arr	db '_dbus_swap_array',0 ; DATA XREF: sub_67DFC2B0+Fo
					; sub_67DFC2B0+69o
a_dbus_marsha_1	db '_dbus_marshal_write_basic',0 ; DATA XREF: sub_67DFCC80+2Bo
					; sub_67DFCC80:loc_67DFCE84o ...
aMarshal_2_octe	db 'marshal_2_octets',0 ; DATA XREF: sub_67DFCC80+296o
					; sub_67DFCC80+31Ao
aMarshal_4_octe	db 'marshal_4_octets',0 ; DATA XREF: sub_67DFC960+1Fo
					; sub_67DFC960+BCo
aMarshal_8_octe	db 'marshal_8_octets',0 ; DATA XREF: sub_67DFCC80+FBo
aMarshal_len_fo	db 'marshal_len_followed_by_bytes',0 ; DATA XREF: sub_67DFCA70+24o
					; sub_67DFCA70+122o ...
a_dbus_marsha_4	db '_dbus_marshal_read_basic',0 ; DATA XREF: sub_67DFE240+2Eo
a_dbus_marsha_2	db '_dbus_marshal_read_uint32',0 ; DATA XREF: sub_67DFD0F0+2Bo
					; sub_67DFD720+25o ...
a_dbus_marsha_3	db '_dbus_marshal_set_basic',0 ; DATA XREF: sub_67DFD880:loc_67DFDBF5o
					; sub_67DFD880+554o
aSet_2_octets	db 'set_2_octets',0     ; DATA XREF: sub_67DFD880+47Co
aPack_2_octets	db 'pack_2_octets',0    ; DATA XREF: sub_67DFD880+4CBo
aSet_4_octets	db 'set_4_octets',0     ; DATA XREF: sub_67DFD1D0+Eo
					; sub_67DFD880+F3o ...
aPack_4_octets	db 'pack_4_octets',0    ; DATA XREF: .text:67DFC48Do
					; sub_67DFD1D0+63o ...
aSet_8_octets	db 'set_8_octets',0     ; DATA XREF: sub_67DFD880+1D6o
aPack_8_octets	db 'pack_8_octets',0    ; DATA XREF: sub_67DFD880+224o
aSet_string	db 'set_string',0       ; DATA XREF: sub_67DFD880+5A0o
a_dbus_unpack_u	db '_dbus_unpack_uint32',0 ; DATA XREF: sub_67DFC500+8o
					; sub_67DFD0F0+63o ...
a_dbus_unpack_0	db '_dbus_unpack_uint16',0 ; DATA XREF: .text:67DFC588o
		align 20h
dword_67E2AA20	dd 1			; DATA XREF: sub_67DFC1D0+Er
		dd 1, 0
		dd 2 dup(1), 0
		dd 3 dup(1), 4 dup(0)
		dd 2 dup(1), 0
		dd 6 dup(1), 0
		dd 2 dup(1)
aInvalid_1	db 'invalid',0          ; DATA XREF: .rdata:off_67E2AB60o
aBegin_struct	db 'begin_struct',0     ; DATA XREF: .rdata:67E2AC00o
aEnd_struct	db 'end_struct',0       ; DATA XREF: .rdata:67E2AC04o
aArray_0	db 'array',0            ; DATA XREF: .rdata:67E2ACE4o
aBoolean	db 'boolean',0          ; DATA XREF: .rdata:67E2ACE8o
aDouble		db 'double',0           ; DATA XREF: .rdata:67E2ACF0o
aDict_entry_0	db 'dict_entry',0       ; DATA XREF: .rdata:67E2ACF4o
aSignature	db 'signature',0        ; DATA XREF: .rdata:67E2ACFCo
aUnix_fd	db 'unix_fd',0          ; DATA XREF: .rdata:67E2AD00o
aInt32		db 'int32',0            ; DATA XREF: .rdata:67E2AD04o
aInt16		db 'int16',0            ; DATA XREF: .rdata:67E2AD18o
aObject_path	db 'object_path',0      ; DATA XREF: .rdata:67E2AD1Co
aUint16		db 'uint16',0           ; DATA XREF: .rdata:67E2AD24o
aStruct_0	db 'struct',0           ; DATA XREF: .rdata:67E2AD28o
aString		db 'string',0           ; DATA XREF: .rdata:67E2AD2Co
aUint64		db 'uint64',0           ; DATA XREF: .rdata:67E2AD30o
aUint32		db 'uint32',0           ; DATA XREF: .rdata:67E2AD34o
aVariant_0	db 'variant',0          ; DATA XREF: .rdata:67E2AD38o
aInt64		db 'int64',0            ; DATA XREF: .rdata:67E2AD40o
aByte		db 'byte',0             ; DATA XREF: .rdata:67E2AD44o
aBegin_dict_ent	db 'begin_dict_entry',0 ; DATA XREF: .rdata:67E2AD4Co
aEnd_dict_entry	db 'end_dict_entry',0   ; DATA XREF: .rdata:67E2AD54o
		align 20h
off_67E2AB60	dd offset aInvalid_1	; DATA XREF: sub_67DFC1F0+Er
					; sub_67DFE060+6Er ...
					; "invalid"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aBegin_struct	; "begin_struct"
		dd offset aEnd_struct	; "end_struct"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aArray_0	; "array"
		dd offset aBoolean	; "boolean"
		dd offset aUnknown	; "unknown"
		dd offset aDouble	; "double"
		dd offset aDict_entry_0	; "dict_entry"
		dd offset aUnknown	; "unknown"
		dd offset aSignature	; "signature"
		dd offset aUnix_fd	; "unix_fd"
		dd offset aInt32	; "int32"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aUnknown	; "unknown"
		dd offset aInt16	; "int16"
		dd offset aObject_path	; "object_path"
		dd offset aUnknown	; "unknown"
		dd offset aUint16	; "uint16"
		dd offset aStruct_0	; "struct"
		dd offset aString	; "string"
		dd offset aUint64	; "uint64"
		dd offset aUint32	; "uint32"
		dd offset aVariant_0	; "variant"
		dd offset aUnknown	; "unknown"
		dd offset aInt64	; "int64"
		dd offset aByte		; "byte"
		dd offset aUnknown	; "unknown"
		dd offset aBegin_dict_ent ; "begin_dict_entry"
		dd offset aUnknown	; "unknown"
		dd offset aEnd_dict_entry ; "end_dict_entry"
		align 10h
aRBuildWin32_28	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67DFE790+26o
					; sub_67DFE7F0+64o ...
		db 's-mempool.c',0
aPoolAllocated_	db 'pool->allocated_elements > 0',0 ; DATA XREF: sub_67DFE790+2Eo
		align 4
aElement_sizeIn	db 'element_size >= (int) sizeof (void*)',0 ; DATA XREF: sub_67DFE7F0+6Co
		align 4
aElement_size_0	db 'element_size >= (int) sizeof (DBusFreedElement)',0
					; DATA XREF: sub_67DFE7F0+98o
aPoolBlock_size	db '(pool->block_size % pool->element_size) == 0',0
					; DATA XREF: sub_67DFE7F0+E5o
					; sub_67DFE920+DEo
a_dbus_mem_pool	db '_dbus_mem_pool_dealloc',0 ; DATA XREF: sub_67DFE790+16o
a_dbus_mem_po_1	db '_dbus_mem_pool_alloc',0 ; DATA XREF: sub_67DFE920+C3o
a_dbus_mem_po_0	db '_dbus_mem_pool_new',0 ; DATA XREF: sub_67DFE7F0:loc_67DFE844o
					; sub_67DFE7F0+80o ...
		align 20h
aRBuildWin32_29	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: .text:67DFEA7Co
					; .text:67DFEAA1o ...
		db 's-string.c',0
aRealNull	db '(real) != NULL',0   ; DATA XREF: .text:67DFEA84o
					; sub_67DFED20+34o ...
aRealInvalid	db '!(real)->invalid',0 ; DATA XREF: .text:67DFEAA9o
					; sub_67DFED20+59o ...
aRealLen0	db '(real)->len >= 0',0 ; DATA XREF: .text:67DFEADEo
					; sub_67DFED20+8Eo ...
aRealAllocated0	db '(real)->allocated >= 0',0 ; DATA XREF: .text:67DFEB0Eo
					; sub_67DFED20+BEo ...
aRealMax_length	db '(real)->max_length >= 0',0 ; DATA XREF: .text:67DFEB3Eo
					; sub_67DFED20+EEo ...
aRealLenRealAll	db '(real)->len <= ((real)->allocated - _DBUS_STRING_ALLOCATION_PADDI'
					; DATA XREF: .text:67DFEB6Eo
					; sub_67DFED20+11Eo ...
		db 'NG)',0
		align 4
aRealLenRealMax	db '(real)->len <= (real)->max_length',0 ; DATA XREF: .text:67DFEBA5o
					; sub_67DFED20+155o ...
aRealConstant	db '!(real)->constant',0 ; DATA XREF: .text:67DFEBD9o
					; sub_67DFED20+189o ...
aRealLocked	db '!(real)->locked',0  ; DATA XREF: .text:67DFEC0Bo
					; sub_67DFED20+1BBo ...
aStart0_2	db 'start >= 0',0       ; DATA XREF: .text:67DFEC49o
					; sub_67DFED20+1F9o ...
aStartRealLen	db 'start <= real->len',0 ; DATA XREF: .text:67DFEC70o
					; sub_67DFED20+220o ...
aLen0_2		db 'len >= 0',0         ; DATA XREF: .text:67DFECA8o
					; sub_67DFED20+258o ...
aLenRealLenStar	db 'len <= real->len - start',0 ; DATA XREF: .text:67DFECCDo
					; sub_67DFED20+27Do ...
aReal_aNull	db '(real_a) != NULL',0 ; DATA XREF: sub_67DFEFF0+2Fo
					; sub_67DFF1D0+35o ...
aReal_aInvalid	db '!(real_a)->invalid',0 ; DATA XREF: sub_67DFEFF0+54o
					; sub_67DFF1D0+5Ao ...
aReal_aLen0	db '(real_a)->len >= 0',0 ; DATA XREF: sub_67DFEFF0+89o
					; sub_67DFF1D0+8Fo ...
aReal_aAllocate	db '(real_a)->allocated >= 0',0 ; DATA XREF: sub_67DFEFF0+B9o
					; sub_67DFF1D0+BFo ...
aReal_aMax_leng	db '(real_a)->max_length >= 0',0 ; DATA XREF: sub_67DFEFF0+E9o
					; sub_67DFF1D0+EFo ...
		align 4
aReal_aLenReal_	db '(real_a)->len <= ((real_a)->allocated - _DBUS_STRING_ALLOCATION_P'
					; DATA XREF: sub_67DFEFF0+119o
					; sub_67DFF1D0+11Fo ...
		db 'ADDING)',0
		align 10h
aReal_aLenRea_0	db '(real_a)->len <= (real_a)->max_length',0 ; DATA XREF: sub_67DFEFF0+150o
					; sub_67DFF1D0+156o ...
aC_strNull	db 'c_str != NULL',0    ; DATA XREF: sub_67DFEFF0+18Eo
aReal_bNull	db '(real_b) != NULL',0 ; DATA XREF: sub_67DFF1D0+194o
					; sub_67DFF660+193o ...
aReal_bInvalid	db '!(real_b)->invalid',0 ; DATA XREF: sub_67DFF1D0+1B9o
					; sub_67DFF660+1B8o ...
aReal_bLen0	db '(real_b)->len >= 0',0 ; DATA XREF: sub_67DFF1D0+1EEo
					; sub_67DFF660+1EDo ...
aReal_bAllocate	db '(real_b)->allocated >= 0',0 ; DATA XREF: sub_67DFF1D0+21Eo
					; sub_67DFF660+21Do ...
aReal_bMax_leng	db '(real_b)->max_length >= 0',0 ; DATA XREF: sub_67DFF1D0+24Eo
					; sub_67DFF660+24Do ...
		align 10h
aReal_bLenReal_	db '(real_b)->len <= ((real_b)->allocated - _DBUS_STRING_ALLOCATION_P'
					; DATA XREF: sub_67DFF1D0+27Eo
					; sub_67DFF660+27Do ...
		db 'ADDING)',0
		align 4
aReal_bLenRea_0	db '(real_b)->len <= (real_b)->max_length',0 ; DATA XREF: sub_67DFF1D0+2B5o
					; sub_67DFF660+2B4o ...
aA_start0	db 'a_start >= 0',0     ; DATA XREF: sub_67DFF1D0+2F5o
aA_len0		db 'a_len >= 0',0       ; DATA XREF: sub_67DFF1D0+324o
aA_startReal_aL	db 'a_start <= real_a->len',0 ; DATA XREF: sub_67DFF1D0+34Do
		align 4
aA_lenReal_aLen	db 'a_len <= real_a->len - a_start',0 ; DATA XREF: sub_67DFF1D0+37Eo
aB_start0	db 'b_start >= 0',0     ; DATA XREF: sub_67DFF1D0+3C1o
aB_startReal_bL	db 'b_start <= real_b->len',0 ; DATA XREF: sub_67DFF1D0+3EAo
		align 4
aBpReal_bStrRea	db 'bp <= (real_b->str + real_b->len)',0 ; DATA XREF: sub_67DFF1D0+467o
aEndRealLen	db 'end <= real->len',0 ; DATA XREF: sub_67DFFC90+18Eo
					; sub_67E00630+247o ...
aEnd0		db 'end >= 0',0         ; DATA XREF: sub_67DFFC90+1C3o
aI0I0Dbus_is_as	db 'i >= 0 && (i == 0 || !(DBUS_IS_ASCII_WHITE (real->str[i-1])))',0
					; DATA XREF: sub_67DFFC90+237o
		align 4
aIRealLenDbus_0	db 'i == real->len || !(DBUS_IS_ASCII_WHITE (real->str[i]))',0
					; DATA XREF: .text:67E0012Ao
					; sub_67E07400+225o
aIRealLenDbus_i	db 'i == real->len || !DBUS_IS_ASCII_WHITE (real->str[i])',0
					; DATA XREF: sub_67E00160+224o
aSubstrNull	db 'substr != NULL',0   ; DATA XREF: sub_67E00630+196o
					; sub_67E00630+21Do ...
aStartEnd	db 'start <= end',0     ; DATA XREF: sub_67E00630+27Fo
					; .text:67E07F42o
aIRealLen	db 'i < real->len',0    ; DATA XREF: sub_67E01030+1F1o
aI0		db 'i >= 0',0           ; DATA XREF: sub_67E01030+229o
					; sub_67E03BA0+229o ...
aStrNull_0	db 'str != NULL',0      ; DATA XREF: sub_67E01AC0+34o
					; sub_67E03060+6Bo ...
aLen0ValueNull	db 'len == 0 || value != NULL',0 ; DATA XREF: sub_67E01AC0+6Bo
					; sub_67E03060+A8o
		align 4
aLen_dbus_strin	db 'len <= _DBUS_STRING_MAX_MAX_LENGTH',0 ; DATA XREF: sub_67E01AC0+9Eo
					; sub_67E03060+DBo
aResultDbus_uni	db 'result != (dbus_unichar_t)-1',0 ; DATA XREF: sub_67E02000+369o
aAvail_len0	db 'avail_len >= 0',0   ; DATA XREF: .text:67E027C3o
					; sub_67E02820+193o
aAvail_lenRea_0	db 'avail_len > real->len',0 ; DATA XREF: .text:67E027EAo
aAvail_lenRealL	db 'avail_len >= real->len',0 ; DATA XREF: sub_67E02820+1BAo
aData_returnNul	db 'data_return != NULL',0 ; DATA XREF: sub_67E02A10+18Eo
					; sub_67E05F70+1F6o
aValueNull_0	db 'value != NULL',0    ; DATA XREF: sub_67E03060+3Eo
		align 4
aSizeofDbusstri	db 'sizeof (DBusString) == sizeof (DBusRealString)',0
					; DATA XREF: sub_67E031B0+59o
					; sub_67E03350+52o ...
		align 4
aRealLenRealA_0	db 'real->len <= real->allocated - _DBUS_STRING_ALLOCATION_PADDING',0
					; DATA XREF: sub_67E031B0+C4o
					; sub_67E03350+B7o ...
aRealAlign_offs	db 'real->align_offset < 8',0 ; DATA XREF: sub_67E031B0+143o
					; sub_67E03350+13Do ...
		align 4
a_dbus_align__7	db '_DBUS_ALIGN_ADDRESS (real->str, 8) == real->str',0
					; DATA XREF: sub_67E031B0+17Fo
					; sub_67E03350+179o ...
aNew_allocatedR	db 'new_allocated >= real->allocated',0 ; DATA XREF: sub_67E034F0+66o
					; sub_67E067A0+232o ...
aSourceDest	db '(source) != (dest)',0 ; DATA XREF: sub_67E036F0+39o
					; sub_67E04AD0+39o ...
aReal_sourceNul	db '(real_source) != NULL',0 ; DATA XREF: sub_67E036F0+68o
					; sub_67E04AD0+68o ...
aReal_sourceInv	db '!(real_source)->invalid',0 ; DATA XREF: sub_67E036F0+8Do
					; sub_67E04AD0+8Do ...
aReal_sourceLen	db '(real_source)->len >= 0',0 ; DATA XREF: sub_67E036F0+C2o
					; sub_67E04AD0+C2o ...
aReal_sourceAll	db '(real_source)->allocated >= 0',0 ; DATA XREF: sub_67E036F0+F2o
					; sub_67E04AD0+F2o ...
aReal_sourceMax	db '(real_source)->max_length >= 0',0 ; DATA XREF: sub_67E036F0+122o
					; sub_67E04AD0+122o ...
		align 4
aReal_sourceL_0	db '(real_source)->len <= ((real_source)->allocated - _DBUS_STRING_AL'
					; DATA XREF: sub_67E036F0+152o
					; sub_67E04AD0+152o ...
		db 'LOCATION_PADDING)',0
		align 10h
aReal_sourceL_1	db '(real_source)->len <= (real_source)->max_length',0
					; DATA XREF: sub_67E036F0+189o
					; sub_67E04AD0+189o ...
aReal_destNull	db '(real_dest) != NULL',0 ; DATA XREF: sub_67E036F0+1C7o
					; sub_67E04AD0+1C7o ...
aReal_destInval	db '!(real_dest)->invalid',0 ; DATA XREF: sub_67E036F0+1ECo
					; sub_67E04AD0+1ECo ...
aReal_destLen0	db '(real_dest)->len >= 0',0 ; DATA XREF: sub_67E036F0+221o
					; sub_67E04AD0+221o ...
aReal_destAlloc	db '(real_dest)->allocated >= 0',0 ; DATA XREF: sub_67E036F0+251o
					; sub_67E04AD0+251o ...
aReal_destMax_l	db '(real_dest)->max_length >= 0',0 ; DATA XREF: sub_67E036F0+281o
					; sub_67E04AD0+281o ...
		align 4
aReal_destLenRe	db '(real_dest)->len <= ((real_dest)->allocated - _DBUS_STRING_ALLOCA'
					; DATA XREF: sub_67E036F0+2B1o
					; sub_67E04AD0+2B1o ...
		db 'TION_PADDING)',0
		align 4
aReal_destLen_0	db '(real_dest)->len <= (real_dest)->max_length',0
					; DATA XREF: sub_67E036F0+2E8o
					; sub_67E04AD0+2E8o ...
aReal_destConst	db '!real_dest->constant',0 ; DATA XREF: sub_67E036F0+31Co
					; sub_67E04AD0+31Co ...
aReal_destLocke	db '!real_dest->locked',0 ; DATA XREF: sub_67E036F0+34Eo
					; sub_67E04AD0+34Eo ...
aStart0_3	db '(start) >= 0',0     ; DATA XREF: sub_67E036F0+38Co
					; sub_67E04AD0+38Co ...
aStartReal_sour	db '(start) <= real_source->len',0 ; DATA XREF: sub_67E036F0+3B3o
					; sub_67E04AD0+3B3o ...
aInsert_at0	db '(insert_at) >= 0',0 ; DATA XREF: sub_67E036F0+3EBo
					; sub_67E04AD0+3EDo ...
aInsert_atReal_	db '(insert_at) <= real_dest->len',0 ; DATA XREF: sub_67E036F0+412o
					; sub_67E04AD0+416o ...
aIRealLen_0	db 'i <= real->len',0   ; DATA XREF: sub_67E03BA0+1F1o
					; sub_67E050F0+1F7o
aAlignment1	db 'alignment >= 1',0   ; DATA XREF: sub_67E03E40+1F9o
aAlignment8	db 'alignment <= 8',0   ; DATA XREF: sub_67E03E40+22Bo
aInsert_atRealL	db 'insert_at <= real->len',0 ; DATA XREF: sub_67E03E40+255o
aUnsignedLongIn	db '((unsigned long) *insert_at_p) == gap_pos',0
					; DATA XREF: sub_67E03E40+35Ao
aDelta0		db 'delta >= 0',0       ; DATA XREF: sub_67E03E40+2C1o
		align 4
a_dbus_align__8	db '_DBUS_ALIGN_VALUE (*insert_at, alignment) == (unsigned) *insert_a'
					; DATA XREF: sub_67E041F0+21Eo
		db 't',0
		align 4
a_dbus_align__9	db '_DBUS_ALIGN_VALUE (insert_at, 8) == (unsigned) insert_at',0
					; DATA XREF: sub_67E04430+219o
		align 4
aStartLenReal_s	db '(start + len) <= real_source->len',0 ; DATA XREF: sub_67E04AD0+47Co
aStartReal_so_0	db 'start <= real_source->len',0 ; DATA XREF: sub_67E05080+27o
					; sub_67E053E0+477o ...
aN_bytes0	db 'n_bytes >= 0',0     ; DATA XREF: sub_67E050F0+25Eo
aReplace_at0	db '(replace_at) >= 0',0 ; DATA XREF: sub_67E053E0+3EFo
		align 10h
aReplace_atReal	db '(replace_at) <= real_dest->len',0 ; DATA XREF: sub_67E053E0+416o
		align 10h
aLenReal_source	db 'len <= real_source->len - start',0 ; DATA XREF: sub_67E053E0+4A5o
					; sub_67E05A20+4A6o
aReplace_at0_0	db 'replace_at >= 0',0  ; DATA XREF: sub_67E053E0+4E3o
aReplace_atRe_0	db 'replace_at <= real_dest->len',0 ; DATA XREF: sub_67E053E0+50Ao
		align 10h
aReplace_lenRea	db 'replace_len <= real_dest->len - replace_at',0
					; DATA XREF: sub_67E053E0+538o
		align 4
aStart_dbus_s_0	db 'start <= _dbus_string_get_length (source)',0
					; DATA XREF: sub_67E06B70+2Fo
					; sub_67E080C0+2Fo
		align 4
off_67E2B9C8	dd offset loc_67E06E10,	offset loc_67E06E60, offset loc_67E06E50
					; DATA XREF: sub_67E06B70+255r
		dd offset loc_67E06EA0,	offset loc_67E06E90, offset loc_67E06E80 ; jump	table for switch statement
		dd offset loc_67E06E70,	offset loc_67E06F20, offset loc_67E06F10
		dd offset loc_67E06F00,	offset loc_67E06D4A, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06D4A, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06D4A, offset loc_67E06EF0
		dd offset loc_67E06EE0,	offset loc_67E06ED0, offset loc_67E06EC0
		dd offset loc_67E06EB0,	offset loc_67E06DD0, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06D4A, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06D4A, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06D4A, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06D4A, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06D4A, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06D4A, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06D4A, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06D4A, offset loc_67E06D4A
		dd offset loc_67E06D4A,	offset loc_67E06EF0, offset loc_67E06EE0
		dd offset loc_67E06ED0,	offset loc_67E06EC0, offset loc_67E06EB0
		dd offset loc_67E06DD0
aLength0	db 'length >= 0',0      ; DATA XREF: sub_67E06F60+1F3o
aEol_dbus_strin	db 'eol == _dbus_string_get_length (source)',0
					; DATA XREF: sub_67E07940+23Fo
					; sub_67E07940+2E5o
aOutOfMemoryWhe	db 'out of memory when shortening a string',0 ; DATA XREF: sub_67E07940+32Bo
word_67E2BAFF	dw 0			; DATA XREF: .text:67E07C87r
aLength_to_remo	db 'length_to_remove >= 0',0 ; DATA XREF: sub_67E083B0+1F6o
aLength_to_re_0	db 'length_to_remove <= real->len',0 ; DATA XREF: sub_67E083B0+21Do
aAdditional_len	db 'additional_length >= 0',0 ; DATA XREF: sub_67E087C0+1F6o
aBufferNull	db 'buffer != NULL',0   ; DATA XREF: sub_67E08C10+1F5o
					; sub_67E090D0+1F9o
a_dbus_string_z	db '_dbus_string_zero',0 ; DATA XREF: sub_67E01BC0+Ao
					; sub_67E01BC0+37o ...
a_dbus_string_v	db '_dbus_string_validate_nul',0 ; DATA XREF: sub_67E01DC0+14o
					; sub_67E01DC0+41o ...
a_dbus_strin_15	db '_dbus_string_validate_utf8',0 ; DATA XREF: sub_67E02000+15o
					; sub_67E02000+42o ...
a_dbus_strin_47	db '_dbus_string_toupper_ascii',0 ; DATA XREF: .text:67DFEA64o
					; .text:67DFEA91o ...
a_dbus_string_t	db '_dbus_string_tolower_ascii',0 ; DATA XREF: sub_67DFED20+14o
					; sub_67DFED20+41o ...
a_dbus_strin_16	db '_dbus_string_validate_ascii',0 ; DATA XREF: sub_67E023F0+14o
					; sub_67E023F0+41o ...
a_dbus_string_h	db '_dbus_string_hex_decode',0 ; DATA XREF: sub_67E06B70+17o
a_dbus_strin_32	db '_dbus_string_hex_encode',0 ; DATA XREF: sub_67E080C0+17o
a_dbus_string_e	db '_dbus_string_equal_c_str',0 ; DATA XREF: sub_67DFEFF0+Fo
					; sub_67DFEFF0+3Co ...
a_dbus_string_6	db '_dbus_string_equal_substring',0 ; DATA XREF: sub_67DFF1D0+15o
					; sub_67DFF1D0+42o ...
a_dbus_strin_40	db '_dbus_string_equal_len',0 ; DATA XREF: sub_67DFF660+14o
					; sub_67DFF660+41o ...
a_dbus_string_7	db '_dbus_string_equal',0 ; DATA XREF: sub_67DFF980+Fo
					; sub_67DFF980+3Co ...
a_dbus_string_p	db '_dbus_string_pop_line',0 ; DATA XREF: sub_67E07940+227o
					; sub_67E07940+2CDo
		align 10h
a_dbus_strin_46	db '_dbus_string_skip_white_reverse',0 ; DATA XREF: sub_67DFFC90+15o
					; sub_67DFFC90+44o ...
a_dbus_strin_45	db '_dbus_string_skip_white',0 ; DATA XREF: .text:67DFFF15o
					; .text:67DFFF44o ...
a_dbus_string_s	db '_dbus_string_skip_blank',0 ; DATA XREF: sub_67E00160+15o
					; sub_67E00160+44o ...
a_dbus_string_f	db '_dbus_string_find_blank',0 ; DATA XREF: sub_67E003F0+15o
					; sub_67E003F0+42o ...
a_dbus_string_8	db '_dbus_string_find_to',0 ; DATA XREF: sub_67E00630+15o
					; sub_67E00630+42o ...
a_dbus_strin_41	db '_dbus_string_find_eol',0 ; DATA XREF: .text:67E00A41o
					; .text:67E00A6Eo ...
a_dbus_string_r	db '_dbus_string_replace_len',0 ; DATA XREF: sub_67E053E0+19o
					; sub_67E053E0+50o ...
aReallocate_for	db 'reallocate_for_length',0 ; DATA XREF: sub_67E034F0+4Eo
					; sub_67E067A0+21Ao ...
aFixup_alignmen	db 'fixup_alignment',0  ; DATA XREF: sub_67E031B0+ACo
					; sub_67E031B0:loc_67E032DBo ...
a_dbus_strin_28	db '_dbus_string_copy_len',0 ; DATA XREF: sub_67E05A20+19o
					; sub_67E05A20+50o ...
a_dbus_strin_26	db '_dbus_string_move_len',0 ; DATA XREF: sub_67E04AD0+19o
					; sub_67E04AD0+50o ...
a_dbus_strin_20	db '_dbus_string_copy',0 ; DATA XREF: sub_67E036F0+19o
					; sub_67E036F0+50o ...
a_dbus_string_m	db '_dbus_string_move',0 ; DATA XREF: sub_67E05080+Fo
					; sub_67E06B70+1DEo ...
a_dbus_string_d	db '_dbus_string_delete',0 ; DATA XREF: sub_67E02D80+14o
					; sub_67E02D80+41o ...
a_dbus_string_a	db '_dbus_string_append_byte',0 ; DATA XREF: sub_67E067A0+12o
					; sub_67E067A0+3Fo ...
a_dbus_strin_36	db '_dbus_string_append_len',0 ; DATA XREF: sub_67E090D0+14o
					; sub_67E090D0+41o ...
		align 20h
a_dbus_strin_35	db '_dbus_string_append_printf_valist',0 ; DATA XREF: sub_67E08E70+15o
					; sub_67E08E70+42o ...
a_dbus_strin_22	db '_dbus_string_insert_alignment',0 ; DATA XREF: sub_67E041F0+14o
					; sub_67E041F0+41o ...
aAlign_insert_p	db 'align_insert_point_then_open_gap',0 ; DATA XREF: sub_67E03E40+19o
					; sub_67E03E40+3Eo ...
a_dbus_strin_23	db '_dbus_string_insert_8_aligned',0 ; DATA XREF: sub_67E04430+Ao
					; sub_67E04430+37o ...
a_dbus_strin_24	db '_dbus_string_insert_4_aligned',0 ; DATA XREF: sub_67E04680+Ao
					; sub_67E04680+37o ...
a_dbus_strin_25	db '_dbus_string_insert_2_aligned',0 ; DATA XREF: sub_67E04890+Ao
					; sub_67E04890+37o ...
a_dbus_strin_34	db '_dbus_string_append',0 ; DATA XREF: sub_67E08C10+10o
					; sub_67E08C10+3Do ...
a_dbus_strin_31	db '_dbus_string_set_length',0 ; DATA XREF: sub_67E06F60+11o
					; sub_67E06F60+3Eo ...
a_dbus_strin_33	db '_dbus_string_shorten',0 ; DATA XREF: sub_67E083B0+11o
					; sub_67E083B0+3Eo ...
a_dbus_string_l	db '_dbus_string_lengthen',0 ; DATA XREF: sub_67E087C0+11o
					; sub_67E087C0+3Eo ...
a_dbus_string_9	db '_dbus_string_get_length',0 ; DATA XREF: sub_67E00CE0+Ao
					; sub_67E00CE0+37o ...
		align 20h
a_dbus_strin_49	db '_dbus_string_copy_to_buffer_with_nul',0 ; DATA XREF: .text:67E02644o
					; .text:67E02671o ...
a_dbus_strin_38	db '_dbus_string_copy_to_buffer',0 ; DATA XREF: sub_67E02820+14o
					; sub_67E02820+41o ...
a_dbus_string_c	db '_dbus_string_copy_data',0 ; DATA XREF: sub_67E02A10+Fo
					; sub_67E02A10+3Co ...
a_dbus_strin_29	db '_dbus_string_steal_data',0 ; DATA XREF: sub_67E05F70+11o
					; sub_67E05F70+3Eo ...
a_dbus_strin_21	db '_dbus_string_insert_byte',0 ; DATA XREF: sub_67E03BA0+14o
					; sub_67E03BA0+41o ...
a_dbus_strin_27	db '_dbus_string_insert_bytes',0 ; DATA XREF: sub_67E050F0+22o
					; sub_67E050F0+47o ...
a_dbus_strin_10	db '_dbus_string_get_byte',0 ; DATA XREF: sub_67E00E50+Fo
					; sub_67E00E50+3Co ...
a_dbus_strin_11	db '_dbus_string_set_byte',0 ; DATA XREF: sub_67E01030+14o
					; sub_67E01030+41o ...
		align 20h
a_dbus_strin_12	db '_dbus_string_get_const_data_len',0 ; DATA XREF: sub_67E01280+14o
					; sub_67E01280+41o ...
a_dbus_strin_13	db '_dbus_string_get_data_len',0 ; DATA XREF: sub_67E014C0+14o
					; sub_67E014C0+41o ...
a_dbus_strin_14	db '_dbus_string_get_const_data',0 ; DATA XREF: sub_67E01770+Ao
					; sub_67E01770+37o ...
a_dbus_strin_48	db '_dbus_string_get_data',0 ; DATA XREF: sub_67E018E0+Ao
					; sub_67E018E0+37o ...
a_dbus_strin_30	db '_dbus_string_compact',0 ; DATA XREF: sub_67E06470+Do
					; sub_67E06470+3Ao ...
a_dbus_strin_17	db '_dbus_string_free',0 ; DATA XREF: sub_67E02BF0+Ao
					; sub_67E02BF0+37o ...
a_dbus_string_i	db '_dbus_string_init_const_len',0 ; DATA XREF: sub_67E01AC0+14o
					; sub_67E01AC0+53o ...
a_dbus_strin_18	db '_dbus_string_init_const',0 ; DATA XREF: sub_67E03060+26o
		align 4
a_dbus_strin_19	db '_dbus_string_init_preallocated',0 ; DATA XREF: sub_67E031B0+11o
					; sub_67E031B0+41o ...
		align 20h
aOrg_freedes_59	db 'org.freedesktop.DBus.Error.NotSupported',0
					; DATA XREF: sub_67E09380:loc_67E09430o
					; sub_67E09DE0:loc_67E09E96o
aOrg_freedes_54	db 'org.freedesktop.DBus.Error.Failed',0
					; DATA XREF: sub_67E09380:loc_67E093E0o
					; sub_67E09DE0:loc_67E09E72o
		align 4
aOrg_freedes_49	db 'org.freedesktop.DBus.Error.LimitsExceeded',0
					; DATA XREF: sub_67E09380+4o
					; sub_67E09380+80o ...
		align 4
aOrg_freedes_57	db 'org.freedesktop.DBus.Error.AccessDenied',0 ; DATA XREF: sub_67E09380+8Ao
					; sub_67E09380+96o ...
aOrg_freedes_55	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67E09380+6Ao
					; sub_67E09DE0+57o
aOrg_freedes_52	db 'org.freedesktop.DBus.Error.NoServer',0 ; DATA XREF: sub_67E09380+35o
					; sub_67E09DE0+39o
aOrg_freedes_51	db 'org.freedesktop.DBus.Error.Timeout',0 ; DATA XREF: sub_67E09380+28o
					; sub_67E09DE0+2Co
		align 4
aOrg_freedes_53	db 'org.freedesktop.DBus.Error.NoNetwork',0 ; DATA XREF: sub_67E09380+42o
					; sub_67E09DE0+46o
		align 4
aOrg_freedes_50	db 'org.freedesktop.DBus.Error.AddressInUse',0 ; DATA XREF: sub_67E09380+16o
					; sub_67E09DE0+1Do
aOrg_freedes_56	db 'org.freedesktop.DBus.Error.FileExists',0 ; DATA XREF: sub_67E09380+76o
					; sub_67E09DE0+65o
		align 4
aOrg_freedes_58	db 'org.freedesktop.DBus.Error.FileNotFound',0 ; DATA XREF: sub_67E09380+A0o
					; sub_67E09DE0+ADo
; char aRBuildWin32_30[]
aRBuildWin32_30	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67E09500+BEo
					; .text:67E0961Ao ...
		db 's-sysdeps.c',0
		align 4
a_dbus_strin_37	db '_dbus_string_validate_ascii (str, len - n_bytes, n_bytes)',0
					; DATA XREF: sub_67E09500+C6o
		align 4
; char aFallingBackToP[]
aFallingBackToP	db 'Falling back to pseudorandom for %d bytes',0Ah,0
					; DATA XREF: .text:67E095FEo
					; sub_67E09EA0+5Do ...
aLu		db '%lu',0              ; DATA XREF: .text:67E096E5o
; char aLd[]
aLd		db '%ld',0              ; DATA XREF: sub_67E09740+45o
asc_67E2C3AB	db ';',0                ; DATA XREF: sub_67E097E0+F8o
aEnvironNull	db 'environ != NULL',0  ; DATA XREF: .text:67E09A14o
aVarnameNull	db 'varname != NULL',0  ; DATA XREF: sub_67E09B00+3Ao
; char VarName[]
VarName		db 'DBUS_BLOCK_ON_ABORT',0 ; DATA XREF: sub_67E09C00:loc_67E09C16o
		align 4
; char aProcessLuSleep[]
aProcessLuSleep	db '  Process %lu sleeping for gdb attach',0Ah,0
					; DATA XREF: sub_67E09C00+35o
a_dbus_generate	db '_dbus_generate_random_ascii',0 ; DATA XREF: sub_67E09500+AEo
		align 20h
byte_67E2C440	db 41h			; DATA XREF: sub_67E09500+82r
aBcdefghijklmno	db 'BCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz',0
		align 10h
a_dbus_genera_0	db '_dbus_generate_pseudorandom_bytes_buffer',0 ; DATA XREF: .text:67E09606o
					; sub_67E09EA0+65o ...
a_dbus_get_envi	db '_dbus_get_environment',0 ; DATA XREF: .text:67E099FCo
a_dbus_setenv	db '_dbus_setenv',0     ; DATA XREF: sub_67E09B00+22o
flt_67E2C4CC	dd 32767.0		; DATA XREF: .text:67E0965Dr
					; sub_67E09EA0+B4r ...
flt_67E2C4D0	dd 255.0		; DATA XREF: .text:67E09673r
					; sub_67E09EA0+CAr ...
		align 10h
; char aRBuildWin32_31[]
aRBuildWin32_31	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67E0A090+37o
					; sub_67E0A090+C1o ...
		db 's-file-win.c',0
		align 10h
aErrorNullDb_23	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: sub_67E0A090+3Fo
					; sub_67E0A200+4Co ...
aCouldNotCrea_0	db 'Could not create file %s: %s',0 ; DATA XREF: sub_67E0A090+15Fo
		align 10h
; char aExclusiveFileS[]
aExclusiveFileS	db 'exclusive file %s hnd %p opened',0Ah,0 ; DATA XREF: sub_67E0A090+A9o
; char aCouldNotCloseF[]
aCouldNotCloseF	db 'Could not close file %s: %s',0 ; DATA XREF: sub_67E0A090+11Do
					; sub_67E0A200+42Bo
		align 10h
; char aOrg_freedes_42[]
aOrg_freedes_42	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: sub_67E0A200+2AAo
					; sub_67E0A200+2DDo ...
; char a_[]
a_		db '.',0                ; DATA XREF: sub_67E0A200+8Do
; char aCouldNotCreate[]
aCouldNotCreate	db 'Could not create "%s": %s',0 ; DATA XREF: sub_67E0A200+474o
; char aTmpFileSHndPOp[]
aTmpFileSHndPOp	db 'tmp file %s hnd %p opened',0Ah,0 ; DATA XREF: sub_67E0A200+142o
; char aCouldNotWriteT[]
aCouldNotWriteT	db 'Could not write to %s: %s',0 ; DATA XREF: sub_67E0A200+1FDo
; char aCouldNotRename[]
aCouldNotRename	db 'Could not rename %s to %s: %s',0 ; DATA XREF: sub_67E0A200+35Eo
		align 4
; char aFailedToUnlink[]
aFailedToUnlink	db 'Failed to unlink temp file %s: %s',0 ; DATA XREF: sub_67E0A200+3B2o
		align 4
aErrorNullDb_24	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: sub_67E0A200+27Bo
					; sub_67E0A6A0+36Eo
; char aFailedToOpenSS[]
aFailedToOpenSS	db 'Failed to open "%s": %s',0 ; DATA XREF: sub_67E0A6A0+42Do
; char aFileSHndPOpene[]
aFileSHndPOpene	db 'file %s hnd %p opened',0Ah,0 ; DATA XREF: sub_67E0A6A0+B6o
		align 4
; char aFailedToGetFil[]
aFailedToGetFil	db 'Failed to get file size for "%s": %s',0 ; DATA XREF: sub_67E0A6A0+3B9o
; char aGetfilesizeFai[]
aGetfilesizeFai	db 'GetFileSize() failed: %s',0 ; DATA XREF: sub_67E0A6A0+3E1o
		align 4
; char aFileSizeLuLuOf[]
aFileSizeLuLuOf	db 'File size %lu/%lu of "%s" is too large.',0
					; DATA XREF: sub_67E0A6A0+281o
; char aOrg_freedes_68[]
aOrg_freedes_68	db 'org.freedesktop.DBus.Error.Failed',0 ; DATA XREF: sub_67E0A6A0+229o
					; sub_67E0A6A0+28Do
aCount0_0	db 'count >= 0',0       ; DATA XREF: sub_67E0A6A0+1A2o
; char aFailedToReadFr[]
aFailedToReadFr	db 'Failed to read from 0x%x: %s',0 ; DATA XREF: sub_67E0A6A0+47Do
; char aPrematureEofRe[]
aPrematureEofRe	db 'Premature EOF reading "%s"',0 ; DATA XREF: sub_67E0A6A0+221o
a_dbus_create_f	db '_dbus_create_file_exclusively',0 ; DATA XREF: sub_67E0A090+27o
					; sub_67E0A090+B1o
a_dbus_strin_39	db '_dbus_string_save_to_file',0 ; DATA XREF: sub_67E0A200+34o
					; sub_67E0A200+14Ao ...
a_dbus_file_get	db '_dbus_file_get_contents',0 ; DATA XREF: sub_67E0A6A0+30o
					; sub_67E0A6A0+BEo ...
a_dbus_file_rea	db '_dbus_file_read',0  ; DATA XREF: sub_67E0A6A0+15Bo
					; sub_67E0A6A0+18Ao
		align 20h
; char aRBuildWin32_32[]
aRBuildWin32_32	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67E0AC60+29o
					; sub_67E0C520+36o ...
		db 's-sysdeps-win.c',0
		align 4
aErrorNullDb_25	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: sub_67E0AC60+31o
					; sub_67E0C520+3Eo ...
aOrg_freedes_47	db 'org.freedesktop.DBus.Error.LimitsExceeded',0
					; DATA XREF: sub_67E0ACC0:loc_67E0AD10o
					; sub_67E10DF7o
		align 10h
; char aOrg_freedes_43[]
aOrg_freedes_43	db 'org.freedesktop.DBus.Error.Failed',0
					; DATA XREF: sub_67E0ACC0:loc_67E0ACCEo
					; sub_67E0C520+81o ...
		align 4
aOrg_freedes_48	db 'org.freedesktop.DBus.Error.AccessDenied',0
					; DATA XREF: sub_67E0ACC0:loc_67E0AD20o
					; sub_67E10DF0o
; char aOrg_freedes_44[]
aOrg_freedes_44	db 'org.freedesktop.DBus.Error.NoMemory',0
					; DATA XREF: sub_67E0ACC0:loc_67E0ACE0o
					; sub_67E0B630+820o ...
aOrg_freedes_45	db 'org.freedesktop.DBus.Error.FileExists',0
					; DATA XREF: sub_67E0ACC0:loc_67E0ACF0o
					; sub_67E10E07o
		align 4
aOrg_freedes_46	db 'org.freedesktop.DBus.Error.FileNotFound',0
					; DATA XREF: sub_67E0ACC0:loc_67E0AD00o
					; sub_67E10E00o
off_67E2C990	dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0AD00
					; DATA XREF: sub_67E0ACC0:loc_67E0ACD7r
		dd offset loc_67E0AD00,	offset loc_67E0AD10, offset loc_67E0AD20 ; jump	table for switch statement
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACE0
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0AD10,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACCE
		dd offset loc_67E0ACCE,	offset loc_67E0ACCE, offset loc_67E0ACF0
		dd offset loc_67E0ACCE,	offset loc_67E0AD20
; char byte_67E2CADC[]
byte_67E2CADC	db 25h,	73h, 0		; DATA XREF: sub_67E0ADC0+8Ao
					; sub_67E0CD90+10Bo ...
; char aWin32_error[]
aWin32_error	db 'win32.error',0      ; DATA XREF: sub_67E0ADC0+92o
					; sub_67E0ADC0+B4o
		align 4
; char aUnknownErrorCo[]
aUnknownErrorCo	db 'Unknown error code %d or FormatMessage failed',0
					; DATA XREF: sub_67E0ADC0+ACo
; char aSS[]
aSS		db '%s: %s',0Ah,0       ; DATA XREF: .text:67E0AEB4o
					; sub_67E0E8E0+671o ...
aPermissionDe_0	db 'Permission denied',0 ; DATA XREF: sub_67E0AF00+171o
aInterruptedFun	db 'Interrupted function call',0 ; DATA XREF: sub_67E0AF00+160o
aBadAddress	db 'Bad address',0      ; DATA XREF: sub_67E0AF00+149o
aInvalidArgum_0	db 'Invalid argument',0 ; DATA XREF: sub_67E0AF00+31Do
aTooManyOpenFil	db 'Too many open files',0 ; DATA XREF: sub_67E0AF00+32Eo
		align 10h
aResourceTempor	db 'Resource temporarily unavailable',0 ; DATA XREF: sub_67E0AF00+7Ao
aOperationNowIn	db 'Operation now in progress',0 ; DATA XREF: sub_67E0AF00+B3o
aOperationAlrea	db 'Operation already in progress',0 ; DATA XREF: sub_67E0AF00+C0o
aSocketOperatio	db 'Socket operation on nonsocket',0 ; DATA XREF: sub_67E0AF00+A0o
aDestinationAdd	db 'Destination address required',0 ; DATA XREF: sub_67E0AF00+279o
aMessageTooLong	db 'Message too long',0 ; DATA XREF: sub_67E0AF00+28Ao
		align 4
aProtocolWrongT	db 'Protocol wrong type for socket',0 ; DATA XREF: sub_67E0AF00+8Do
aBadProtocolOpt	db 'Bad protocol option',0 ; DATA XREF: sub_67E0AF00+19Eo
aProtocolNotSup	db 'Protocol not supported',0 ; DATA XREF: sub_67E0AF00+1AFo
aSocketTypeNotS	db 'Socket type not supported',0 ; DATA XREF: sub_67E0AF00+187o
aOperationNotSu	db 'Operation not supported',0 ; DATA XREF: sub_67E0AF00+2CDo
aProtocolFamily	db 'Protocol family not supported',0 ; DATA XREF: sub_67E0AF00+2DEo
		align 4
aAddressFamilyN	db 'Address family not supported by protocol family',0
					; DATA XREF: sub_67E0AF00+3o
aAddressAlrea_0	db 'Address already in use',0 ; DATA XREF: sub_67E0AF00+252o
		align 4
aCannotAssignRe	db 'Cannot assign requested address',0 ; DATA XREF: sub_67E0AF00+263o
aNetworkIsDown	db 'Network is down',0  ; DATA XREF: sub_67E0AF00+23Bo
aNetworkIsUnrea	db 'Network is unreachable',0 ; DATA XREF: sub_67E0AF00+346o
		align 4
aNetworkDropped	db 'Network dropped connection on reset',0 ; DATA XREF: sub_67E0AF00+357o
aSoftwareCaused	db 'Software caused connection abort',0 ; DATA XREF: sub_67E0AF00+E6o
aConnectionRese	db 'Connection reset by peer',0 ; DATA XREF: sub_67E0AF00+110o
aNoBufferSpaceA	db 'No buffer space available',0 ; DATA XREF: sub_67E0AF00+121o
aSocketIsAlread	db 'Socket is already connected',0 ; DATA XREF: sub_67E0AF00+F9o
aSocketIsNotCon	db 'Socket is not connected',0 ; DATA XREF: sub_67E0AF00+2A6o
aCannotSendAfte	db 'Cannot send after socket shutdown',0 ; DATA XREF: sub_67E0AF00+2B7o
aConnectionTi_0	db 'Connection timed out',0 ; DATA XREF: sub_67E0AF00+1Co
aConnectionRefu	db 'Connection refused',0 ; DATA XREF: sub_67E0AF00+214o
aHostIsDown	db 'Host is down',0     ; DATA XREF: sub_67E0AF00+225o
aNoRouteToHost	db 'No route to host',0 ; DATA XREF: sub_67E0AF00+1FDo
aTooManyProcess	db 'Too many processes',0 ; DATA XREF: sub_67E0AF00+36Do
aGracefulShutdo	db 'Graceful shutdown in progress',0 ; DATA XREF: sub_67E0AF00+37Eo
aClassTypeNotFo	db 'Class type not found',0 ; DATA XREF: sub_67E0AF00+55o
aHostNotFound	db 'Host not found',0   ; DATA XREF: sub_67E0AF00+62o
		align 10h
aNonauthoritati	db 'Nonauthoritative host not found',0 ; DATA XREF: sub_67E0AF00+42o
aThisIsANonreco	db 'This is a nonrecoverable error',0 ; DATA XREF: sub_67E0AF00+396o
		align 10h
aValidNameNoDat	db 'Valid name, no data record of requested type',0
					; DATA XREF: sub_67E0AF00+3A7o
		align 10h
aSpecifiedEvent	db 'Specified event object handle is invalid',0
					; DATA XREF: sub_67E0AF00+1D9o
		align 4
aOneOrMoreParam	db 'One or more parameters are invalid',0 ; DATA XREF: sub_67E0AF00+1C3o
		align 10h
aOverlappedIOEv	db 'Overlapped I/O event object not in signaled state',0
					; DATA XREF: sub_67E0AF00+307o
		align 4
aOverlappedOper	db 'Overlapped operations will complete later',0
					; DATA XREF: sub_67E0AF00+136o
aInsufficientMe	db 'Insufficient memory available',0 ; DATA XREF: sub_67E0AF00+1E7o
aOverlappedOp_0	db 'Overlapped operation aborted',0 ; DATA XREF: sub_67E0AF00+2F6o
aSystemCallFail	db 'System call failure',0 ; DATA XREF: sub_67E0AF00+2Fo
aUnknown_0	db 'unknown',0          ; DATA XREF: sub_67E0AF00+D3o
; char Str[]
Str		db '\bin',0             ; DATA XREF: sub_67E0B2F0+8Bo
; char aBinDebug[]
aBinDebug	db '\bin\debug',0       ; DATA XREF: sub_67E0B2F0+AFo
; char aBinRelease[]
aBinRelease	db '\bin\release',0     ; DATA XREF: sub_67E0B2F0+D3o
; CHAR LibFileName[]
LibFileName	db 'dbghelp',0          ; DATA XREF: sub_67E0C080+5o
; CHAR aStackwalk[]
aStackwalk	db 'StackWalk',0        ; DATA XREF: sub_67E0C080+1Do
; CHAR aSymgetmoduleba[]
aSymgetmoduleba	db 'SymGetModuleBase',0 ; DATA XREF: sub_67E0C080+35o
; CHAR aSymfunctiontab[]
aSymfunctiontab	db 'SymFunctionTableAccess',0 ; DATA XREF: sub_67E0C080+4Ao
; CHAR aSyminitialize[]
aSyminitialize	db 'SymInitialize',0    ; DATA XREF: sub_67E0C080+5Fo
; CHAR aSymgetsymfroma[]
aSymgetsymfroma	db 'SymGetSymFromAddr',0 ; DATA XREF: sub_67E0C080+74o
; CHAR aSymgetmodulein[]
aSymgetmodulein	db 'SymGetModuleInfo',0 ; DATA XREF: sub_67E0C080+89o
; CHAR aSymsetoptions[]
aSymsetoptions	db 'SymSetOptions',0    ; DATA XREF: sub_67E0C080+9Eo
; char aBacktrace[]
aBacktrace	db 'Backtrace:',0Ah,0   ; DATA XREF: sub_67E0C240+2Bo
		align 4
; char aCouldnTGetThre[]
aCouldnTGetThre	db 'Couldn',27h,'t get thread context (error %ld)',0Ah,0
					; DATA XREF: sub_67E0C240+1D6o
; char a1P[]
a1P		db '1',9,'%p',0Ah,0     ; DATA XREF: sub_67E0C240+25Co
; char a2S0xLx[]
a2S0xLx		db '2',9,'%s+0x%lx',0Ah,0 ; DATA XREF: sub_67E0C240+27Fo
; char a3S0xLx[]
a3S0xLx		db '3',9,'%s+0x%lx',0Ah,0 ; DATA XREF: sub_67E0C240+19Co
; char a4S[]
a4S		db '4',9,'%s',0Ah,0     ; DATA XREF: sub_67E0C240+20Co
; char aFailedToDelete[]
aFailedToDelete	db 'Failed to delete file %s: %s',0Ah,0 ; DATA XREF: sub_67E0C520+79o
; char aGettemppathFai[]
aGettemppathFai	db 'GetTempPath failed',0Ah,0 ; DATA XREF: sub_67E0C5D0:loc_67E0C687o
aTmpdirNull	db 'tmpdir != NULL',0   ; DATA XREF: sub_67E0C5D0+26o
		align 4
; char aFailedToCreate[]
aFailedToCreate	db 'Failed to create directory %s: %s',0Ah,0 ; DATA XREF: sub_67E0C790+9Co
aCredentialsNul	db 'credentials != NULL',0 ; DATA XREF: sub_67E0CA90+30o
		align 10h
a_dbus_creden_1	db '!_dbus_credentials_are_anonymous (credentials)',0
					; DATA XREF: sub_67E0CA90+61o
; char aHomedrive[]
aHomedrive	db 'HOMEDRIVE',0        ; DATA XREF: sub_67E0CA90:loc_67E0CB20o
; char aHomepath[]
aHomepath	db 'HOMEPATH',0         ; DATA XREF: sub_67E0CA90:loc_67E0CB39o
; char a_dbusKeyrings[]
a_dbusKeyrings	db '.dbus-keyrings',0   ; DATA XREF: sub_67E0CA90+C2o
; char aClientFdDAccep[]
aClientFdDAccep	db 'client fd %d accepted',0Ah,0 ; DATA XREF: sub_67E0CBF0+4Do
; char aCouldNotCloseS[]
aCouldNotCloseS	db 'Could not close socket: socket=%d, , %s',0 ; DATA XREF: sub_67E0CC70+9Do
; char a_dbus_close__0[]
a_dbus_close__0	db '_dbus_close_socket: socket=%d, ',0Ah,0 ; DATA XREF: sub_67E0CC70+D4o
; char aSelectToD[]
aSelectToD	db 'select: to=%d',0Ah  ; DATA XREF: sub_67E0CD90+45o
		db 9,0
; char aED[]
aED		db 'E:%d',0Ah           ; DATA XREF: sub_67E0CD90+8Ao
					; sub_67E0CD90+4AFo
		db 9,0
; char aRD[]
aRD		db 'R:%d ',0            ; DATA XREF: sub_67E0CD90+BDo
					; sub_67E0CD90+418o
; char aWD[]
aWD		db 'W:%d ',0            ; DATA XREF: sub_67E0CD90+DFo
					; sub_67E0CD90+58Co
aBufferOverflow	db 'buffer overflow in _dbus_poll',0 ; DATA XREF: sub_67E0CD90+693o
word_67E2D292	dw 0Ah			; DATA XREF: sub_67E0CD90:loc_67E0CE84r
					; sub_67E0CD90:loc_67E0D25Fr ...
; char aSelectFailedS[]
aSelectFailedS	db 'select: failed: %s',0Ah,0 ; DATA XREF: sub_67E0CD90+455o
; char aSelect0[]
aSelect0	db 'select: = 0',0Ah,0  ; DATA XREF: sub_67E0CD90:loc_67E0D346o
; char aSelectD[]
aSelectD	db 'select: = %d:',0Ah  ; DATA XREF: sub_67E0CD90+383o
		db 9,0
		align 4
; char aFailedToSetSoc[]
aFailedToSetSoc	db 'Failed to set socket %d:%d to nonblocking: %s',0
					; DATA XREF: sub_67E0D430+D4o
aInvalidSid	db 'Invalid SID',0      ; DATA XREF: .text:67E0D6C7o
		align 4
aWidechartomult	db 'WideCharToMultiByte inconsistency',0 ; DATA XREF: .text:67E0D7FFo
aInvalidUtf8	db 'Invalid UTF-8',0    ; DATA XREF: .text:loc_67E0D927o
aMultibytetowid	db 'MultiByteToWideChar inconsistency',0 ; DATA XREF: .text:67E0D96Ao
aCouldNotInitia	db 'Could not initialize WinSock',0 ; DATA XREF: sub_67E0DA50+81o
					; sub_67E0E8E0+886o ...
aNoUsableWinsoc	db 'No usable WinSock found',0 ; DATA XREF: sub_67E0DA50+65o
					; sub_67E0E8E0+8A2o ...
		align 4
; char aFullDuplexPipe[]
aFullDuplexPipe	db 'full-duplex pipe %d:%d <-> %d:%d',0Ah,0 ; DATA XREF: sub_67E0DAE0+1CFo
		align 10h
; char aCouldNotSetupS[]
aCouldNotSetupS	db 'Could not setup socket pair: %s',0 ; DATA XREF: sub_67E0DAE0+247o
aBuffer1Null	db 'buffer1 != NULL',0  ; DATA XREF: sub_67E0DDA0+47o
aStart10	db 'start1 >= 0',0      ; DATA XREF: sub_67E0DDA0+78o
aStart20	db 'start2 >= 0',0      ; DATA XREF: sub_67E0DDA0+ACo
aLen10		db 'len1 >= 0',0        ; DATA XREF: sub_67E0DDA0+DBo
aLen20		db 'len2 >= 0',0        ; DATA XREF: sub_67E0DDA0+10Ao
; char aWsasendLen12DD[]
aWsasendLen12DD	db 'WSASend: len1+2=%d+%d fd=%d',0Ah,0 ; DATA XREF: sub_67E0DDA0+178o
; char aWsasendFailedS[]
aWsasendFailedS	db 'WSASend: failed: %s',0Ah,0 ; DATA XREF: sub_67E0DDA0+245o
; char aWsasendLd[]
aWsasendLd	db 'WSASend: = %ld',0Ah,0 ; DATA XREF: sub_67E0DDA0+1E5o
; char aSendLenDFdD[]
aSendLenDFdD	db 'send: len=%d fd=%d',0Ah,0 ; DATA XREF: sub_67E0E020+3Co
					; sub_67E0E330+60o
; char aSendFailedS[]
aSendFailedS	db 'send: failed: %s',0Ah,0 ; DATA XREF: sub_67E0E020+EBo
					; sub_67E0E330+1BBo
; char aSendD[]
aSendD		db 'send: = %d',0Ah,0   ; DATA XREF: sub_67E0E020+8Bo
					; sub_67E0E330+AFo
aCount0		db 'count >= 0',0       ; DATA XREF: sub_67E0E140+31o
					; sub_67E0F840+98o
; char aRecvCountDFdD[]
aRecvCountDFdD	db 'recv: count=%d fd=%d',0Ah,0 ; DATA XREF: sub_67E0E140+D9o
					; sub_67E0F840+142o
; char aRecvFailedSD[]
aRecvFailedSD	db 'recv: failed: %s (%d)',0Ah,0 ; DATA XREF: sub_67E0E140+154o
					; sub_67E0F840+1C1o
; char aRecvD[]
aRecvD		db 'recv: = %d',0Ah,0   ; DATA XREF: sub_67E0E140+94o
					; sub_67E0F840+F8o
dword_67E2D4C4	dd 0			; DATA XREF: sub_67E0E330+1Ao
; char aWroteZeroBytes[]
aWroteZeroBytes	db 'wrote zero bytes writing credentials byte',0
					; DATA XREF: sub_67E0E330+1ECo
		align 4
; char aOrg_freedes_69[]
aOrg_freedes_69	db 'org.freedesktop.DBus.Error.IOError',0 ; DATA XREF: sub_67E0E330+1F4o
aBytes_written1	db 'bytes_written == 1',0 ; DATA XREF: sub_67E0E330+15Bo
		align 4
; char aWrote1ZeroByte[]
aWrote1ZeroByte	db 'wrote 1 zero byte, credential sending isn',27h,'t implemented yet',0Ah,0
					; DATA XREF: sub_67E0E330+168o
		align 4
; char aFailedToWrit_0[]
aFailedToWrit_0	db 'Failed to write credentials byte: %s',0 ; DATA XREF: sub_67E0E330+110o
aSession_conf	db 'session.conf',0     ; DATA XREF: .text:67E0E8A7o
aSystem_conf	db 'system.conf',0      ; DATA XREF: .text:67E0E8C7o
aIpv4_0		db 'ipv4',0             ; DATA XREF: sub_67E0E8E0+A4o
					; sub_67E10680+96o ...
aIpv6		db 'ipv6',0             ; DATA XREF: sub_67E0E8E0:loc_67E0EC98o
					; sub_67E10680+2FFo ...
; char aUnknownAddre_1[]
aUnknownAddre_1	db 'Unknown address family %s',0 ; DATA XREF: sub_67E0E8E0+794o
					; sub_67E10680+5B4o ...
		align 10h
; char aOrg_freedes_60[]
aOrg_freedes_60	db 'org.freedesktop.DBus.Error.InvalidArgs',0 ; DATA XREF: sub_67E0E8E0+79Co
					; sub_67E10680+5BCo ...
asc_67E2D5F7	db '*',0                ; DATA XREF: sub_67E0E8E0:loc_67E0F049o
					; sub_67E0E8E0:loc_67E0F059o ...
		align 4
; char aFailedToLookup[]
aFailedToLookup	db 'Failed to lookup host/port: "%s:%s": %s (%d)',0
					; DATA XREF: sub_67E0E8E0+74Co
					; sub_67E10680+541o ...
; char aFailedToOpenSo[]
aFailedToOpenSo	db 'Failed to open socket: %s',0 ; DATA XREF: sub_67E0E8E0+2E5o
					; sub_67E10680+4E9o ...
		align 4
; char aFailedToBindSo[]
aFailedToBindSo	db 'Failed to bind socket "%s:%s": %s',0 ; DATA XREF: sub_67E0E8E0+426o
		align 4
; char aFailedToListen[]
aFailedToListen	db 'Failed to listen on socket "%s:%s": %s',0 ; DATA XREF: sub_67E0E8E0+4A6o
		align 10h
; char aFailedToAlloca[]
aFailedToAlloca	db 'Failed to allocate file handle array',0 ; DATA XREF: sub_67E0E8E0+4F3o
a0_2		db '0',0                ; DATA XREF: sub_67E0E8E0+23Bo
		align 4
; char aFailedToResolv[]
aFailedToResolv	db 'Failed to resolve port "%s:%s": %s',0 ; DATA XREF: sub_67E0E8E0+813o
; char aD[]
aD		db '%d',0               ; DATA XREF: sub_67E0E8E0+55Bo
					; sub_67E0E8E0+604o
		align 10h
aDisablingSocke	db 'Disabling socket handle inheritance failed:',0
					; DATA XREF: sub_67E0E8E0+669o
					; .text:67E0FB43o ...
aOpenprocesstok	db 'OpenProcessToken failed',0 ; DATA XREF: sub_67E0F2A0+5Eo
aGettokeninform	db 'GetTokenInformation failed',0 ; DATA XREF: sub_67E0F2A0+158o
; char aSInvalidSid[]
aSInvalidSid	db '%s invalid sid',0Ah,0 ; DATA XREF: sub_67E0F2A0+1C8o
					; sub_67E0F2A0+1FDo
; char a_dbus_getsidRe[]
a_dbus_getsidRe	db '_dbus_getsid() returns %d',0Ah,0 ; DATA XREF: sub_67E0F2A0+9Ao
aInstallPath	db '*install-path',0    ; DATA XREF: sub_67E0F520+31o
aInstallPath_0	db 'install-path',0     ; DATA XREF: sub_67E0F520+41o
; char asc_67E2D785[]
asc_67E2D785	db '-',0                ; DATA XREF: sub_67E0F520:loc_67E0F5C0o
					; sub_67E0F520:loc_67E0F5F3o ...
aUser		db '*user',0            ; DATA XREF: sub_67E0F520+51o
; char aGotOneZeroByte[]
aGotOneZeroByte	db 'got one zero byte from server',0 ; DATA XREF: sub_67E0F840+267o
		align 4
; char aFixmeGetFakedC[]
aFixmeGetFakedC	db 'FIXME: get faked credentials from current process',0
					; DATA XREF: sub_67E0F840:loc_67E0F888o
aShare		db 'share',0            ; DATA XREF: .text:67E0FB9Fo
					; .text:loc_67E0FC20o
asc_67E2D7E4	db ';',0                ; DATA XREF: .text:loc_67E0FC47o
					; .text:67E0FC7Bo
aCommonprogramf	db 'CommonProgramFiles',0 ; DATA XREF: .text:67E0FC5Bo
aDbus1Services	db '/dbus-1/services',0 ; DATA XREF: .text:67E0FC96o
aCouldNotDeterm	db 'could not determine shm name',0 ; DATA XREF: sub_67E0FCC0+4A5o
		align 4
; char aFoundRunningDb[]
aFoundRunningDb	db 'found running dbus daemon at %s',0Ah,0 ; DATA XREF: sub_67E0FCC0+5A3o
; CHAR FileName[]
FileName	db 'dbus-daemon.exe',0  ; DATA XREF: sub_67E0FCC0+1AEo
					; sub_67E0FCC0+24Do ...
		align 4
; char aDidNotFoundDbu[]
aDidNotFoundDbu	db 'did not found dbus daemon executable on default search path, tryi'
					; DATA XREF: sub_67E0FCC0+1CEo
		db 'ng path where dbus shared library is located',0
		align 4
aCouldNotRetrie	db 'could not retrieve dbus shared library file name',0
					; DATA XREF: sub_67E0FCC0:loc_67E102E0o
		align 10h
aCouldNotFindDb	db 'could not find dbus-daemon executable',0 ; DATA XREF: sub_67E0FCC0+267o
		align 4
; char aPleaseAddThePa[]
aPleaseAddThePa	db 'please add the path to %s to your PATH environment variable',0Ah,0
					; DATA XREF: sub_67E0FCC0+287o
; char aOrStartTheDaem[]
aOrStartTheDaem	db 'or start the daemon manually',0Ah,0 ; DATA XREF: sub_67E0FCC0+293o
		align 4
; char aFoundDbusDaemo[]
aFoundDbusDaemo	db 'found dbus daemon executable at %s',0 ; DATA XREF: sub_67E0FCC0+314o
aSession_0	db ' --session',0       ; DATA XREF: sub_67E0FCC0+397o
; char aSS_0[]
aSS_0		db '"%s" %s',0          ; DATA XREF: sub_67E0FCC0+3A3o
		align 4
aFailedToGetAut	db 'Failed to get autolaunch address from launched dbus-daemon',0
					; DATA XREF: sub_67E0FCC0:loc_67E10307o
aFailedToLaunch	db 'Failed to launch dbus-daemon',0 ; DATA XREF: sub_67E0FCC0:loc_67E101E1o
aErrorNullDb_26	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: sub_67E0FCC0+2D0o
aAddress	db 'address',0          ; DATA XREF: sub_67E10330+34o
aHdbussharedmem	db 'hDBusSharedMem',0   ; DATA XREF: sub_67E10330+165o
aShared_addr	db 'shared_addr',0      ; DATA XREF: sub_67E10330+1C7o
		align 4
; char aPublishedSessi[]
aPublishedSessi	db 'published session bus address at %s',0Ah,0
					; DATA XREF: sub_67E10330+208o
		align 10h
; char aFailedToConnec[]
aFailedToConnec	db 'Failed to connect to socket "%s:%s" %s',0 ; DATA XREF: sub_67E10680+407o
					; .text:67E111CBo
		align 4
; char aFailedToRemove[]
aFailedToRemove	db 'Failed to remove directory %s: %s',0 ; DATA XREF: sub_67E10DA4+14o
		align 4
off_67E2DADC	dd offset sub_67E10DA4	; DATA XREF: .text:loc_67E10DE0r
					; jump table for switch	statement
		dd offset sub_67E10DA4
		dd offset sub_67E10E00
		dd offset sub_67E10E00
		dd offset sub_67E10DF7
		dd offset sub_67E10DF0
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DE7
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DF7
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10DA4
		dd offset sub_67E10E07
		dd offset sub_67E10DA4
		dd offset sub_67E10DF0
a_dbus_delete_d	db '_dbus_delete_directory',0 ; DATA XREF: .text:67E10CCCo
		align 10h
a_dbus_append_k	db '_dbus_append_keyring_directory_for_credentials',0
					; DATA XREF: sub_67E0CA90+10o
					; sub_67E0CA90+49o
aDbusautolaunch	db 'DBusAutolaunchMutex',0 ; DATA XREF: .rdata:off_67E2DC84o
		align 4
; LPCSTR off_67E2DC84
off_67E2DC84	dd offset aDbusautolaunch ; DATA XREF: sub_67E0FCC0+76r
					; "DBusAutolaunchMutex"
a_dbus_get_auto	db '_dbus_get_autolaunch_address',0 ; DATA XREF: sub_67E0FCC0+35o
					; sub_67E0FCC0+1D6o ...
aDbusdaemonaddr	db 'DBusDaemonAddressInfo',0 ; DATA XREF: .rdata:off_67E2DCBCo
		align 4
; char *off_67E2DCBC
off_67E2DCBC	dd offset aDbusdaemonaddr ; DATA XREF: sub_67E0FCC0+5Ar
					; sub_67E10330+E3r
					; "DBusDaemonAddressInfo"
aUniquedbusinit	db 'UniqueDBusInitMutex',0 ; DATA XREF: .rdata:lpNameo
; LPCSTR lpName
lpName		dd offset aUniquedbusinit ; DATA XREF: sub_67E0F1A0+3r
					; sub_67E0F640:loc_67E0F6A0r ...
					; "UniqueDBusInitMutex"
aDbusdaemonmute	db 'DBusDaemonMutex',0  ; DATA XREF: .rdata:off_67E2DCE8o
; char *off_67E2DCE8
off_67E2DCE8	dd offset aDbusdaemonmute ; DATA XREF: sub_67E0F640+3r
					; sub_67E0FCC0:loc_67E0FD78r ...
					; "DBusDaemonMutex"
		align 20h
a_dbus_daemon_p	db '_dbus_daemon_publish_session_bus_address',0
					; DATA XREF: sub_67E10330+14o
					; sub_67E10330+14Do ...
a_dbus_delete_f	db '_dbus_delete_file',0 ; DATA XREF: sub_67E0C520+26o
a_dbus_get_tmpd	db '_dbus_get_tmpdir',0 ; DATA XREF: sub_67E0C5D0:loc_67E0C5DEo
a_dbus_create_d	db '_dbus_create_directory',0 ; DATA XREF: sub_67E0C790+1Eo
a_dbus_getsid	db '_dbus_getsid',0     ; DATA XREF: sub_67E0F2A0+A2o
					; sub_67E0F2A0+1BBo ...
		align 20h
a_dbus_check_di	db '_dbus_check_dir_is_private_to_user',0
					; DATA XREF: sub_67E0AC60:loc_67E0AC79o
a_dbus_read_cre	db '_dbus_read_credentials_socket',0 ; DATA XREF: sub_67E0F840+50o
					; sub_67E0F840+26Fo
a_dbus_send_cre	db '_dbus_send_credentials_socket',0 ; DATA XREF: sub_67E0E330+143o
					; sub_67E0E330+170o
a_dbus_accept	db '_dbus_accept',0     ; DATA XREF: sub_67E0CBF0+55o
a_dbus_listen_t	db '_dbus_listen_tcp_socket',0 ; DATA XREF: sub_67E0E8E0:loc_67E0E931o
					; sub_67E0E8E0:loc_67E0EA5Co
		align 20h
a_dbus_connect_	db '_dbus_connect_tcp_socket_with_nonce',0
					; DATA XREF: sub_67E10680:loc_67E106B2o
					; sub_67E10680+15Bo ...
a_dbus_poll	db '_dbus_poll',0       ; DATA XREF: sub_67E0CD90+113o
					; sub_67E0CD90+45Do ...
a_dbus_full_dup	db '_dbus_full_duplex_pipe',0 ; DATA XREF: sub_67E0DAE0+1D7o
a_dbus_write__0	db '_dbus_write_socket_two',0 ; DATA XREF: sub_67E0DDA0+2Fo
					; sub_67E0DDA0+58o ...
a_dbus_set_fd_n	db '_dbus_set_fd_nonblocking',0 ; DATA XREF: sub_67E0D430+38o
a_dbus_close_so	db '_dbus_close_socket',0 ; DATA XREF: sub_67E0CC70:loc_67E0CC9Do
					; sub_67E0CC70+DCo
a_dbus_write_so	db '_dbus_write_socket',0 ; DATA XREF: sub_67E0E020+44o
					; sub_67E0E020+93o ...
a_dbus_read_soc	db '_dbus_read_socket',0 ; DATA XREF: sub_67E0E140+Fo
					; sub_67E0E140+9Co ...
		align 20h
aRBuildWin32_35	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: .text:67E113B9o
		db 's-pipe-win.c',0
		align 10h
aErrorNullDb_31	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: .text:67E113C1o
aCouldNotCloseP	db 'Could not close pipe %d: %s',0 ; DATA XREF: .text:67E1141Do
; char aWritingToPipeS[]
aWritingToPipeS	db 'Writing to pipe: %s',0Ah,0 ; DATA XREF: sub_67E11440+4Ao
		align 4
; char aOrg_freedes_72[]
aOrg_freedes_72	db 'org.freedesktop.DBus.Error.Failed',0 ; DATA XREF: sub_67E11440+52o
a_dbus_pipe_clo	db '_dbus_pipe_close',0 ; DATA XREF: .text:loc_67E113A9o
		align 20h
aRBuildWin32_36	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67E115F0+80o
					; sub_67E115F0+135o
		db 's-sysdeps-thread-win.c',0
aWaitforsingleo	db 'WaitForSingleObject (event, 0) == WAIT_TIMEOUT',0
					; DATA XREF: sub_67E115F0+88o
		align 4
a_dbus_list_rem	db '_dbus_list_remove (&cond->list, event) == FALSE',0
					; DATA XREF: sub_67E115F0+13Do
		align 10h
dword_67E2E0A0	dd 3FFh			; DATA XREF: sub_67E114D0:loc_67E114DCo
		dd offset sub_67E118E0
		dd offset sub_67E118C0
		dd offset sub_67E115C0
		dd offset sub_67E118A0
		dd offset sub_67E11860
		dd offset sub_67E11830
		dd offset sub_67E11810
		dd offset sub_67E117F0
		dd offset sub_67E11560
		dd offset sub_67E11510
		dd 8 dup(0)
a_dbus_condvar_	db '_dbus_condvar_wait_win32',0 ; DATA XREF: sub_67E115F0+70o
					; sub_67E115F0+125o
		align 20h
; char aWaitingForMore[]
aWaitingForMore	db 'Waiting for more memory',0Ah,0 ; DATA XREF: .text:67E11A03o
					; .text:67E11EC2o ...
		align 4
; char aRBuildWin32_37[]
aRBuildWin32_37	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: .text:67E11A1Bo
					; .text:67E11A5Ao ...
		db 's-mainloop.c',0
aLoopDepth0	db 'loop->depth > 0',0  ; DATA XREF: .text:67E11A62o
		align 4
aQuitMainLoopDe	db 'Quit main loop, depth %d -> %d',0Ah,0 ; DATA XREF: .text:67E11A8Ao
aLoopNull	db 'loop != NULL',0     ; DATA XREF: .text:67E11AEAo
					; .text:67E11E0Bo ...
aLoopRefcount0	db 'loop->refcount > 0',0 ; DATA XREF: .text:67E11B11o
					; .text:67E11E32o ...
; char aSystemClockSet[]
aSystemClockSet	db 'System clock set backward! Resetting timeout.',0Ah,0
					; DATA XREF: sub_67E11B60:loc_67E11C00o
aCbRefcount0	db 'cb->refcount > 0',0 ; DATA XREF: .text:67E11D1Eo
					; sub_67E11F20+3Bo ...
aCouldNotFindTi	db 'could not find timeout %p function %p data %p to remove',0Ah,0
					; DATA XREF: .text:67E12054o
		align 4
; char aCouldNotFindWa[]
aCouldNotFindWa	db 'could not find watch %p function %p data %p to remove',0Ah,0
					; DATA XREF: sub_67E12070+8Co
		align 10h
; char aWatchPWasInval[]
aWatchPWasInval	db 'watch %p was invalidated but not removed; removing it now',0Ah,0
					; DATA XREF: .text:67E12748o
					; sub_67E128D0+613o
aTimeout0	db 'timeout >= 0',0     ; DATA XREF: .text:67E122D8o
					; sub_67E128D0+1B5o
; char aInvalidRequest[]
aInvalidRequest	db 'invalid request, socket fd %d not open',0Ah,0
					; DATA XREF: .text:67E126A5o
					; sub_67E128D0+56Bo
aLoopDepth0_0	db 'loop->depth >= 0',0 ; DATA XREF: .text:67E13091o
		align 4
aRunningMainLoo	db 'Running main loop, depth %d -> %d',0Ah,0 ; DATA XREF: .text:67E13119o
a_dbus_wait_for	db '_dbus_wait_for_memory',0 ; DATA XREF: .text:67E11A0Bo
					; .text:67E11ECAo ...
a_dbus_loop_qui	db '_dbus_loop_quit',0  ; DATA XREF: .text:67E11A4Ao
					; .text:67E11A92o
a_dbus_loop_run	db '_dbus_loop_run',0   ; DATA XREF: .text:67E13079o
					; .text:67E13121o
a_dbus_loop_ite	db '_dbus_loop_iterate',0 ; DATA XREF: .text:67E122BBo
					; sub_67E128D0+198o
aCallback_ref	db 'callback_ref',0     ; DATA XREF: .text:67E12326o
					; sub_67E128D0+201o
aCheck_timeout	db 'check_timeout',0    ; DATA XREF: sub_67E11B60+A8o
aCallback_unref	db 'callback_unref',0   ; DATA XREF: .text:67E11D06o
					; sub_67E11F20:loc_67E11F41o ...
a_dbus_loop_unr	db '_dbus_loop_unref',0 ; DATA XREF: .text:67E11DEBo
					; .text:67E11E1Ao ...
a_dbus_loop_ref	db '_dbus_loop_ref',0   ; DATA XREF: .text:67E11ACAo
					; .text:67E11AF9o ...
		align 4
aRBuildWin32_38	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67E132F0+122o
					; sub_67E132F0+15Do ...
		db 's-shell.c',0
aSDest		db 's > dest',0         ; DATA XREF: sub_67E132F0+12Ao
					; sub_67E132F0+165o ...
aCommandLineIsN	db 'Command line is NULL',0Ah,0 ; DATA XREF: .text:loc_67E139FDo
		align 4
aOrg_freedes_73	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: .text:67E1384Do
					; .text:67E138B5o ...
aUnclosedQuotes	db 'Unclosed quotes in command line',0 ; DATA XREF: .text:67E13A89o
aOrg_freedes_74	db 'org.freedesktop.DBus.Error.InvalidArgs',0 ; DATA XREF: .text:67E13A91o
					; .text:67E13AB2o
		align 4
aNoTokensFoundI	db 'No tokens found in command line',0 ; DATA XREF: .text:67E13AAAo
aNoTokensForCom	db 'No tokens for command line ',27h,'%s',27h,0Ah,0
					; DATA XREF: .text:67E13935o
a_dbus_shell_pa	db '_dbus_shell_parse_argv',0 ; DATA XREF: .text:67E1393Do
					; .text:67E13A05o
aUnquote_string	db 'unquote_string_inplace',0 ; DATA XREF: sub_67E132F0+112o
					; sub_67E132F0+14Do ...
		align 10h
aRBuildWin32_39	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: sub_67E13AD0+32o
					; sub_67E13AD0+57o ...
		db 's-string-util.c',0
aRealNull_0	db '(real) != NULL',0   ; DATA XREF: sub_67E13AD0+3Ao
aRealInvalid_0	db '!(real)->invalid',0 ; DATA XREF: sub_67E13AD0+5Fo
aRealLen0_0	db '(real)->len >= 0',0 ; DATA XREF: sub_67E13AD0+94o
aRealAllocate_0	db '(real)->allocated >= 0',0 ; DATA XREF: sub_67E13AD0+C4o
aRealMax_leng_0	db '(real)->max_length >= 0',0 ; DATA XREF: sub_67E13AD0+F4o
		align 4
aRealLenRealA_1	db '(real)->len <= ((real)->allocated - _DBUS_STRING_ALLOCATION_PADDI'
					; DATA XREF: sub_67E13AD0+124o
		db 'NG)',0
		align 4
aRealLenRealM_0	db '(real)->len <= (real)->max_length',0 ; DATA XREF: sub_67E13AD0+15Bo
aStartRealLen_0	db 'start <= real->len',0 ; DATA XREF: sub_67E13AD0+191o
aStart0_4	db 'start >= 0',0       ; DATA XREF: sub_67E13AD0+1C9o
aFoundNull	db 'found != NULL',0    ; DATA XREF: sub_67E13AD0+1F8o
aReal_aNull_0	db '(real_a) != NULL',0 ; DATA XREF: .text:67E13D4Fo
aReal_aInvali_0	db '!(real_a)->invalid',0 ; DATA XREF: .text:67E13D74o
aReal_aLen0_0	db '(real_a)->len >= 0',0 ; DATA XREF: .text:67E13DA9o
aReal_aAlloca_0	db '(real_a)->allocated >= 0',0 ; DATA XREF: .text:67E13DD9o
aReal_aMax_le_0	db '(real_a)->max_length >= 0',0 ; DATA XREF: .text:67E13E09o
aReal_aLenRea_1	db '(real_a)->len <= ((real_a)->allocated - _DBUS_STRING_ALLOCATION_P'
					; DATA XREF: .text:67E13E39o
		db 'ADDING)',0
		align 10h
aReal_aLenRea_2	db '(real_a)->len <= (real_a)->max_length',0 ; DATA XREF: .text:67E13E70o
aC_strNull_0	db 'c_str != NULL',0    ; DATA XREF: .text:67E13EAEo
aAp0		db '*ap == ',27h,'\0',27h,0 ; DATA XREF: .text:67E13F1Ao
aBp0		db '*bp == ',27h,'\0',27h,0 ; DATA XREF: .text:67E13F4Ao
		align 20h
a_dbus_strin_50	db '_dbus_string_find_byte_backward',0 ; DATA XREF: sub_67E13AD0+22o
					; sub_67E13AD0+47o ...
a_dbus_strin_51	db '_dbus_string_ends_with_c_str',0 ; DATA XREF: .text:67E13D2Fo
					; .text:67E13D5Co ...
		align 10h
; char aRBuildWin32_40[]
aRBuildWin32_40	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: .text:67E13F9Ao
					; .text:67E13FC9o ...
		db 's-spawn-win.c',0
aSitterNull	db 'sitter != NULL',0   ; DATA XREF: .text:67E13FAAo
					; sub_67E141C0+2Bo ...
aSitterRefcount	db 'sitter->refcount > 0',0 ; DATA XREF: .text:67E13FD1o
					; sub_67E141C0+52o ...
		align 4
aFailedToExecut	db 'Failed to execute program %s: %s',0 ; DATA XREF: .text:67E140FFo
		align 4
aOrg_freedes_77	db 'org.freedesktop.DBus.Error.Spawn.ExecFailed',0
					; DATA XREF: .text:67E14107o
aProcessSExit_0	db 'Process %s exited with status %d',0 ; DATA XREF: .text:67E140CAo
		align 4
aOrg_freedes_76	db 'org.freedesktop.DBus.Error.Spawn.ChildExited',0
					; DATA XREF: .text:67E140D2o
		align 4
aProcessSExited	db 'Process %s exited, status unknown',0 ; DATA XREF: .text:67E14094o
		align 4
aOrg_freedes_75	db 'org.freedesktop.DBus.Error.Failed',0 ; DATA XREF: .text:67E1409Co
aChildHasNotExi	db 'Child has not exited',0 ; DATA XREF: .text:67E14176o
		align 4
aErrorNullDb_32	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: .text:67E143B4o
					; .text:67E147D3o
aOrg_freedes_78	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: .text:67E144D7o
					; .text:67E146C3o ...
aFailedToCrea_0	db 'Failed to create new thread',0 ; DATA XREF: .text:67E14825o
aOrg_freedes_79	db 'org.freedesktop.DBus.Error.Spawn.ForkFailed',0
					; DATA XREF: .text:67E1482Do
; char aBabysitterSpaw[]
aBabysitterSpaw	db 'babysitter: spawning %s',0Ah,0 ; DATA XREF: sub_67E14850+85o
; char buf[]
buf		db ' ',0                ; DATA XREF: sub_67E14850+18Bo
		align 20h
a_dbus_spawn_as	db '_dbus_spawn_async_with_babysitter',0 ; DATA XREF: .text:67E1439Co
					; .text:loc_67E147BBo
aBabysitter	db 'babysitter',0       ; DATA XREF: sub_67E14850+8Do
a_dbus_babysi_0	db '_dbus_babysitter_unref',0 ; DATA XREF: sub_67E141C0+Bo
					; sub_67E141C0+3Ao
a_dbus_babysitt	db '_dbus_babysitter_ref',0 ; DATA XREF: .text:67E13F8Ao
					; .text:67E13FB9o ...
		align 10h
aTheServerCould	db 'The server could not be located.',0 ; DATA XREF: .text:loc_67E1588Ao
		align 4
aTheWorkstati_3	db 'The workstation driver is not installed.',0
					; DATA XREF: .text:loc_67E15894o
		align 10h
aAnInternalEr_0	db 'An internal error occurred. The network cannot access a shared me'
					; DATA XREF: .text:loc_67E15880o
		db 'mory segment.',0
		align 10h
aANetworkResour	db 'A network resource shortage occurred.',0
					; DATA XREF: .text:loc_67E15876o
		align 4
aThisOperatio_6	db 'This operation is not supported on workstations.',0
					; DATA XREF: .text:loc_67E1586Co
aTheDeviceIsNot	db 'The device is not connected.',0 ; DATA XREF: .text:loc_67E15862o
		align 4
aTheServerServi	db 'The Server service is not started.',0 ; DATA XREF: .text:loc_67E15858o
aTheQueueIsEmpt	db 'The queue is empty.',0 ; DATA XREF: .text:loc_67E1584Eo
		align 10h
aTheDeviceOrDir	db 'The device or directory does not exist.',0
					; DATA XREF: .text:loc_67E15844o
aTheOperation_4	db 'The operation is invalid on a redirected resource.',0
					; DATA XREF: .text:loc_67E1583Ao
		align 4
aTheNameHasAlre	db 'The name has already been shared.',0 ; DATA XREF: .text:loc_67E15830o
		align 10h
aTheServerIsCur	db 'The server is currently out of the requested resource.',0
					; DATA XREF: .text:loc_67E15826o
		align 4
aRequestedAddit	db 'Requested addition of items exceeds the maximum allowed.',0
					; DATA XREF: .text:loc_67E1581Co
		align 4
aThePeerService	db 'The Peer service supports only two simultaneous users.',0
					; DATA XREF: .text:loc_67E15812o
		align 4
aTheApiReturnBu	db 'The API return buffer is too small.',0 ; DATA XREF: .text:loc_67E15808o
aARemoteApiErro	db 'A remote API error occurred.',0 ; DATA XREF: .text:loc_67E157FEo
		align 10h
aAnErrorOccur_4	db 'An error occurred when opening or reading the configuration file.'
					; DATA XREF: .text:loc_67E157F4o
		db 0
		align 4
aAGeneralNetwor	db 'A general network error occurred.',0 ; DATA XREF: .text:loc_67E157EAo
		align 4
aTheWorkstati_2	db 'The Workstation service is in an inconsistent state. Restart the '
					; DATA XREF: .text:loc_67E157E0o
		db 'computer before restarting the Workstation service.',0
		align 10h
aTheWorkstati_1	db 'The Workstation service has not been started.',0
					; DATA XREF: .text:loc_67E157D6o
		align 10h
aTheRequestedIn	db 'The requested information is not available.',0
					; DATA XREF: .text:loc_67E157CCo
aAnInternalErro	db 'An internal error occurred.',0 ; DATA XREF: .text:loc_67E157C2o
aTheServerIsN_0	db 'The server is not configured for transactions.',0
					; DATA XREF: .text:loc_67E157B8o
		align 4
aTheRequestedAp	db 'The requested API is not supported on the remote server.',0
					; DATA XREF: .text:loc_67E157AEo
aTheEventNameIs	db 'The event name is invalid.',0 ; DATA XREF: .text:loc_67E157A4o
aTheComputerN_1	db 'The computer name already exists on the network. Change it and re'
					; DATA XREF: .text:loc_67E1579Ao
		db 'start the computer.',0
		align 4
aTheSpecifiedCo	db 'The specified component could not be found in the configuration i'
					; DATA XREF: .text:loc_67E15790o
		db 'nformation.',0
		align 4
aTheSpecifiedPa	db 'The specified parameter could not be found in the configuration i'
					; DATA XREF: .text:loc_67E15786o
		db 'nformation.',0
		align 4
aALineInTheConf	db 'A line in the configuration file is too long.',0
					; DATA XREF: .text:loc_67E1577Co
aThePrinterDoes	db 'The printer does not exist.',0 ; DATA XREF: .text:loc_67E15772o
aThePrintJobDoe	db 'The print job does not exist.',0 ; DATA XREF: .text:loc_67E15768o
aThePrinterDe_0	db 'The printer destination cannot be found.',0
					; DATA XREF: .text:loc_67E1575Eo
		align 4
aThePrinterDest	db 'The printer destination already exists.',0
					; DATA XREF: .text:loc_67E15754o
aThePrinterQueu	db 'The printer queue already exists.',0 ; DATA XREF: .text:loc_67E1574Ao
		align 4
aNoMorePrinters	db 'No more printers can be added.',0 ; DATA XREF: .text:loc_67E15740o
		align 4
aNoMorePrintJob	db 'No more print jobs can be added.',0 ; DATA XREF: .text:loc_67E15736o
		align 4
aNoMorePrinterD	db 'No more printer destinations can be added.',0
					; DATA XREF: .text:loc_67E1572Co
		align 4
aThisPrinterD_0	db 'This printer destination is idle and cannot accept control operat'
					; DATA XREF: .text:loc_67E15722o
		db 'ions.',0
		align 4
aThisPrinterDes	db 'This printer destination request contains an invalid control func'
					; DATA XREF: .text:loc_67E15718o
		db 'tion.',0
		align 4
aThePrintProc_0	db 'The print processor is not responding.',0
					; DATA XREF: .text:loc_67E1570Eo
aTheSpoolerIsNo	db 'The spooler is not running.',0 ; DATA XREF: .text:loc_67E15704o
		align 4
aThisOperatio_5	db 'This operation cannot be performed on the print destination in it'
					; DATA XREF: .text:loc_67E156FAo
		db 's current state.',0
		align 4
aThisOperatio_4	db 'This operation cannot be performed on the printer queue in its cu'
					; DATA XREF: .text:loc_67E156F0o
		db 'rrent state.',0
		align 4
aThisOperationC	db 'This operation cannot be performed on the print job in its curren'
					; DATA XREF: .text:loc_67E156E6o
		db 't state.',0
		align 4
aASpoolerMemory	db 'A spooler memory allocation failure occurred.',0
					; DATA XREF: .text:loc_67E156DCo
		align 4
aTheDeviceDrive	db 'The device driver does not exist.',0 ; DATA XREF: .text:loc_67E156D2o
		align 4
aTheDataTypeIsN	db 'The data type is not supported by the print processor.',0
					; DATA XREF: .text:loc_67E156C8o
		align 4
aThePrintProces	db 'The print processor is not installed.',0
					; DATA XREF: .text:loc_67E156BEo
		align 4
aTheServiceData	db 'The service database is locked.',0 ; DATA XREF: .text:loc_67E156B4o
aTheServiceTabl	db 'The service table is full.',0 ; DATA XREF: .text:loc_67E156AAo
		align 4
aTheRequestedSe	db 'The requested service has already been started.',0
					; DATA XREF: .text:loc_67E156A0o
aTheServiceDoes	db 'The service does not respond to control actions.',0
					; DATA XREF: .text:loc_67E15696o
		align 4
aTheServiceHasN	db 'The service has not been started.',0 ; DATA XREF: .text:loc_67E1568Co
aTheServiceName	db 'The service name is invalid.',0 ; DATA XREF: .text:loc_67E15682o
		align 4
aTheServiceIsNo	db 'The service is not responding to the control function.',0
					; DATA XREF: .text:loc_67E15678o
aTheServiceCo_1	db 'The service control is busy.',0 ; DATA XREF: .text:loc_67E1566Eo
aTheConfigurati	db 'The configuration file contains an invalid service program name.',0
					; DATA XREF: .text:loc_67E15664o
		align 4
aTheServiceCoul	db 'The service could not be controlled in its present state.',0
					; DATA XREF: .text:loc_67E1565Ao
aTheServiceEnde	db 'The service ended abnormally.',0 ; DATA XREF: .text:loc_67E15650o
aTheRequestedPa	db 'The requested pause or stop is not valid for this service.',0
					; DATA XREF: .text:loc_67E15646o
		align 4
aTheServiceCo_0	db 'The service control dispatcher could not find the service name in'
					; DATA XREF: .text:loc_67E1563Co
		db ' the dispatch table.',0
		align 10h
aTheServiceCont	db 'The service control dispatcher pipe read failed.',0
					; DATA XREF: .text:loc_67E15632o
		align 4
aAThreadForTheN	db 'A thread for the new service could not be created.',0
					; DATA XREF: .text:loc_67E15628o
		align 4
aThisWorkstatio	db 'This workstation is already logged on to the local-area network.',0
					; DATA XREF: .text:loc_67E1561Eo
		align 4
aTheWorkstati_0	db 'The workstation is not logged on to the local-area network.',0
					; DATA XREF: .text:loc_67E15614o
aTheUserNameOrG	db 'The user name or group name parameter is invalid.',0
					; DATA XREF: .text:loc_67E1560Ao
		align 4
aThePasswordPar	db 'The password parameter is invalid.',0 ; DATA XREF: .text:loc_67E15600o
		align 10h
a@wTheLogonProc	db '@W The logon processor did not add the message alias.',0
					; DATA XREF: .text:loc_67E155F6o
		align 4
aTheLogonProces	db 'The logon processor did not add the message alias.',0
					; DATA XREF: .text:loc_67E155ECo
		align 4
a@wTheLogoffPro	db '@W The logoff processor did not delete the message alias.',0
					; DATA XREF: .text:loc_67E155E2o
		align 4
aTheLogoffProce	db 'The logoff processor did not delete the message alias.',0
					; DATA XREF: .text:loc_67E155D8o
aNetworkLogonsA	db 'Network logons are paused.',0 ; DATA XREF: .text:loc_67E155CEo
		align 4
aACentralizedLo	db 'A centralized logon-server conflict occurred.',0
					; DATA XREF: .text:loc_67E155C4o
		align 4
aTheServerIsCon	db 'The server is configured without a valid user path.',0
					; DATA XREF: .text:loc_67E155BAo
aAnErrorOccur_3	db 'An error occurred while loading or running the logon script.',0
					; DATA XREF: .text:loc_67E155B0o
		align 10h
aTheLogonServ_1	db 'The logon server was not specified. Your computer will be logged '
					; DATA XREF: .text:loc_67E155A6o
		db 'on as STANDALONE.',0
		align 4
aTheLogonServ_0	db 'The logon server could not be found.',0 ; DATA XREF: .text:loc_67E1559Co
		align 4
aThereIsAlready	db 'There is already a logon domain for this computer.',0
					; DATA XREF: .text:loc_67E15592o
		align 10h
aTheLogonServer	db 'The logon server could not validate the logon.',0
					; DATA XREF: .text:loc_67E15588o
		align 10h
aTheSecurityD_1	db 'The security database could not be found.',0
					; DATA XREF: .text:loc_67E1557Eo
		align 4
aTheGroupNameCo	db 'The group name could not be found.',0 ; DATA XREF: .text:loc_67E15574o
		align 10h
aTheUserNameCou	db 'The user name could not be found.',0 ; DATA XREF: .text:loc_67E1556Ao
		align 4
aTheResourceNam	db 'The resource name could not be found.',0
					; DATA XREF: .text:loc_67E15560o
aTheGroupAlread	db 'The group already exists.',0 ; DATA XREF: .text:loc_67E15556o
aTheUserAccou_1	db 'The user account already exists.',0 ; DATA XREF: .text:loc_67E1554Co
		align 4
aTheResourcePer	db 'The resource permission list already exists.',0
					; DATA XREF: .text:loc_67E15542o
		align 4
aThisOperatio_3	db 'This operation is only allowed on the primary domain controller o'
					; DATA XREF: .text:loc_67E15538o
		db 'f the domain.',0
		align 4
aTheSecurityD_0	db 'The security database has not been started.',0
					; DATA XREF: .text:loc_67E1552Eo
aThereAreTooMan	db 'There are too many names in the user accounts database.',0
					; DATA XREF: .text:loc_67E15524o
aADiskIOFailure	db 'A disk I/O failure occurred.',0 ; DATA XREF: .text:loc_67E1551Ao
		align 4
aTheLimitOf64En	db 'The limit of 64 entries per resource was exceeded.',0
					; DATA XREF: .text:loc_67E15510o
		align 10h
aDeletingAUserW	db 'Deleting a user with a session is not allowed.',0
					; DATA XREF: .text:loc_67E15506o
		align 10h
aTheParentDirec	db 'The parent directory could not be located.',0
					; DATA XREF: .text:loc_67E154FCo
		align 4
aUnableToAddT_0	db 'Unable to add to the security database session cache segment.',0
					; DATA XREF: .text:loc_67E154F2o
		align 4
aThisOperatio_2	db 'This operation is not allowed on this special group.',0
					; DATA XREF: .text:loc_67E154E8o
		align 4
aThisUserIsNotC	db 'This user is not cached in user accounts database session cache.',0
					; DATA XREF: .text:loc_67E154DEo
		align 4
aTheUserAlready	db 'The user already belongs to this group.',0
					; DATA XREF: .text:loc_67E154D4o
aTheUserDoesNot	db 'The user does not belong to this group.',0
					; DATA XREF: .text:loc_67E154CAo
aThisUserAcco_0	db 'This user account is undefined.',0 ; DATA XREF: .text:loc_67E154C0o
aThisUserAccoun	db 'This user account has expired.',0 ; DATA XREF: .text:loc_67E154B6o
		align 4
aTheUserIsNot_0	db 'The user is not allowed to log on from this workstation.',0
					; DATA XREF: .text:loc_67E154ACo
		align 4
aTheUserIsNotAl	db 'The user is not allowed to log on at this time.',0
					; DATA XREF: .text:loc_67E154A2o
aThePasswordO_1	db 'The password of this user has expired.',0
					; DATA XREF: .text:loc_67E15498o
		align 4
aThePasswordO_0	db 'The password of this user cannot change.',0
					; DATA XREF: .text:loc_67E1548Eo
		align 4
aThisPasswordCa	db 'This password cannot be used now.',0 ; DATA XREF: .text:loc_67E15484o
		align 4
aThePasswordDoe	db 'The password does not meet the password policy requirements. Chec'
					; DATA XREF: .text:loc_67E1547Ao
		db 'k the minimum password length, password complexity and password h'
		db 'istory requirements.',0
		align 4
aThePasswordOfT	db 'The password of this user is too recent to change.',0
					; DATA XREF: .text:loc_67E15470o
		align 4
aTheSecurityDat	db 'The security database is corrupted.',0 ; DATA XREF: .text:loc_67E15466o
aNoUpdatesAreNe	db 'No updates are necessary to this replicant network/local security'
					; DATA XREF: .text:loc_67E1545Co
		db ' database.',0
aThisReplicantD	db 'This replicant database is outdated; synchronization is required.'
					; DATA XREF: .text:loc_67E15452o
		db 0
		align 4
aTheNetworkConn	db 'The network connection could not be found.',0
					; DATA XREF: .text:loc_67E15448o
aThisAsg_typeIs	db 'This asg_type is invalid.',0 ; DATA XREF: .text:loc_67E1543Eo
		align 4
aThisDeviceIsCu	db 'This device is currently being shared.',0
					; DATA XREF: .text:loc_67E15434o
		align 4
aTheComputerN_0	db 'The computer name could not be added as a message alias. The name'
					; DATA XREF: .text:loc_67E1542Ao
		db ' may already exist on the network.',0
aTheMessenger_1	db 'The Messenger service is already started.',0
					; DATA XREF: .text:loc_67E15420o
		align 4
aTheMessenger_0	db 'The Messenger service failed to start.',0
					; DATA XREF: .text:loc_67E15416o
		align 4
aTheMessageAl_2	db 'The message alias could not be found on the network.',0
					; DATA XREF: .text:loc_67E1540Co
		align 4
aThisMessageA_1	db 'This message alias has already been forwarded.',0
					; DATA XREF: .text:loc_67E15402o
		align 4
aThisMessageA_0	db 'This message alias has been added but is still forwarded.',0
					; DATA XREF: .text:loc_67E153F8o
		align 4
aThisMessageAli	db 'This message alias already exists locally.',0
					; DATA XREF: .text:loc_67E153EEo
		align 4
aTheMaximumNumb	db 'The maximum number of added message aliases has been exceeded.',0
					; DATA XREF: .text:loc_67E153E4o
		align 4
aTheComputerNam	db 'The computer name could not be deleted.',0
					; DATA XREF: .text:loc_67E153DAo
aMessagesCannot	db 'Messages cannot be forwarded back to the same workstation.',0
					; DATA XREF: .text:loc_67E153D0o
		align 4
aAnErrorOccur_2	db 'An error occurred in the domain message processor.',0
					; DATA XREF: .text:loc_67E153C6o
		align 4
aTheMessageWa_0	db 'The message was sent, but the recipient has paused the Messenger '
					; DATA XREF: .text:loc_67E153BCo
		db 'service.',0
		align 4
aTheMessageWasS	db 'The message was sent but not received.',0
					; DATA XREF: .text:loc_67E153B2o
		align 10h
aTheMessageAl_1	db 'The message alias is currently in use. Try again later.',0
					; DATA XREF: .text:loc_67E153A8o
aTheMessengerSe	db 'The Messenger service has not been started.',0
					; DATA XREF: .text:loc_67E1539Eo
aTheNameIsNotOn	db 'The name is not on the local computer.',0
					; DATA XREF: .text:loc_67E15394o
		align 4
aTheForwardedMe	db 'The forwarded message alias could not be found on the network.',0
					; DATA XREF: .text:loc_67E1538Ao
		align 4
aTheMessageAl_0	db 'The message alias table on the remote station is full.',0
					; DATA XREF: .text:loc_67E15380o
		align 4
aMessagesForThi	db 'Messages for this alias are not currently being forwarded.',0
					; DATA XREF: .text:loc_67E15376o
		align 10h
aTheBroadcastMe	db 'The broadcast message was truncated.',0 ; DATA XREF: .text:loc_67E1536Co
		align 4
aThisIsAnInvali	db 'This is an invalid device name.',0 ; DATA XREF: .text:loc_67E15362o
aAWriteFaultOcc	db 'A write fault occurred.',0 ; DATA XREF: .text:loc_67E15358o
aADuplicateMess	db 'A duplicate message alias exists on the network.',0
					; DATA XREF: .text:loc_67E1534Eo
		align 4
a@wThisMessageA	db '@W This message alias will be deleted later.',0
					; DATA XREF: .text:loc_67E15344o
		align 4
aTheMessageAlia	db 'The message alias was not successfully deleted from all networks.'
					; DATA XREF: .text:loc_67E1533Ao
		db 0
		align 4
aThisOperatio_1	db 'This operation is not supported on computers with multiple networ'
					; DATA XREF: .text:loc_67E15330o
		db 'ks.',0
		align 10h
aThisSharedReso	db 'This shared resource does not exist.',0 ; DATA XREF: .text:loc_67E15326o
aThisDeviceIsNo	db 'This device is not shared.',0 ; DATA XREF: .text:loc_67E1531Co
aASessionDoesNo	db 'A session does not exist with that computer name.',0
					; DATA XREF: .text:loc_67E15312o
		align 4
aThereIsNotAnOp	db 'There is not an open file with that identification number.',0
					; DATA XREF: .text:loc_67E15308o
		align 10h
aAFailureOccu_0	db 'A failure occurred when executing a remote administration command'
					; DATA XREF: .text:loc_67E152FEo
		db '.',0
		align 4
aAFailureOccurr	db 'A failure occurred when opening a remote temporary file.',0
					; DATA XREF: .text:loc_67E152F4o
		align 10h
aTheDataReturne	db 'The data returned from a remote administration command has been t'
					; DATA XREF: .text:loc_67E152EAo
		db 'runcated to 64K.',0
		align 4
aThisDeviceCa_0	db 'This device cannot be shared as both a spooled and a non-spooled '
					; DATA XREF: .text:loc_67E152E0o
		db 'resource.',0
		align 10h
aTheInformation	db 'The information in the list of servers may be incorrect.',0
					; DATA XREF: .text:loc_67E152D6o
		align 4
aTheComputerIsN	db 'The computer is not active in this domain.',0
					; DATA XREF: .text:loc_67E152CCo
		align 4
aTheShareMustBe	db 'The share must be removed from the Distributed File System before'
					; DATA XREF: .text:loc_67E152C2o
		db ' it can be deleted.',0
		align 10h
aTheOperation_3	db 'The operation is invalid for this device.',0
					; DATA XREF: .text:loc_67E152B8o
aThisDeviceCann	db 'This device cannot be shared.',0 ; DATA XREF: .text:loc_67E152AEo
aThisDeviceWasN	db 'This device was not open.',0 ; DATA XREF: .text:loc_67E152A4o
		align 4
aThisDeviceName	db 'This device name list is invalid.',0 ; DATA XREF: .text:loc_67E1529Ao
		align 4
aTheQueuePriori	db 'The queue priority is invalid.',0 ; DATA XREF: .text:loc_67E15290o
		align 4
aThereAreNoShar	db 'There are no shared communication devices.',0
					; DATA XREF: .text:loc_67E15286o
		align 4
aTheQueueYouSpe	db 'The queue you specified does not exist.',0
					; DATA XREF: .text:loc_67E1527Co
aThisListOfDevi	db 'This list of devices is invalid.',0 ; DATA XREF: .text:loc_67E15272o
		align 10h
aTheRequestedDe	db 'The requested device is invalid.',0 ; DATA XREF: .text:loc_67E15268o
		align 4
aThisDeviceIs_0	db 'This device is already in use by the spooler.',0
					; DATA XREF: .text:loc_67E1525Eo
		align 4
aThisDeviceIsAl	db 'This device is already in use as a communication device.',0
					; DATA XREF: .text:loc_67E15254o
		align 10h
aThisComputerNa	db 'This computer name is invalid.',0 ; DATA XREF: .text:loc_67E1524Ao
		align 10h
aTheStringAndPr	db 'The string and prefix specified are too long.',0
					; DATA XREF: .text:loc_67E15240o
		align 10h
aThisPathCompon	db 'This path component is invalid.',0 ; DATA XREF: .text:loc_67E15236o
aCouldNotDete_0	db 'Could not determine the type of input.',0
					; DATA XREF: .text:loc_67E1522Co
		align 4
aTheBufferForTy	db 'The buffer for types is not big enough.',0
					; DATA XREF: .text:loc_67E15222o
aProfileFilesCa	db 'Profile files cannot exceed 64K.',0 ; DATA XREF: .text:loc_67E15218o
		align 4
aTheStartOffset	db 'The start offset is out of range.',0 ; DATA XREF: .text:loc_67E1520Eo
		align 4
aTheSystemCanno	db 'The system cannot delete current connections to network resources'
					; DATA XREF: .text:loc_67E15204o
		db '.',0
		align 4
aTheSystemWasUn	db 'The system was unable to parse the command line in this file.',0
					; DATA XREF: .text:loc_67E151FAo
		align 4
aAnErrorOccur_1	db 'An error occurred while loading the profile file.',0
					; DATA XREF: .text:loc_67E151F0o
		align 10h
a@wErrorsOccurr	db '@W Errors occurred while saving the profile file. The profile was'
					; DATA XREF: .text:loc_67E151E6o
		db ' partially saved.',0
aLogFile1IsFull	db 'Log file %1 is full.',0 ; DATA XREF: .text:loc_67E151DCo
aThisLogFileHas	db 'This log file has changed between reads.',0
					; DATA XREF: .text:loc_67E151D2o
aLogFile1IsCorr	db 'Log file %1 is corrupt.',0 ; DATA XREF: .text:loc_67E151C8o
		align 4
aTheSourcePathC	db 'The source path cannot be a directory.',0
					; DATA XREF: .text:loc_67E151BEo
aTheSourcePathI	db 'The source path is illegal.',0 ; DATA XREF: .text:loc_67E151B4o
		align 10h
aTheDestination	db 'The destination path is illegal.',0 ; DATA XREF: .text:loc_67E151AAo
		align 4
aTheSourceAndDe	db 'The source and destination paths are on different servers.',0
					; DATA XREF: .text:loc_67E151A0o
		align 10h
aTheRunServerYo	db 'The Run server you requested is paused.',0
					; DATA XREF: .text:loc_67E15196o
aAnErrorOccur_0	db 'An error occurred when communicating with a Run server.',0
					; DATA XREF: .text:loc_67E1518Co
aAnErrorOccurre	db 'An error occurred when starting a background process.',0
					; DATA XREF: .text:loc_67E15182o
		align 4
aTheSharedResou	db 'The shared resource you are connected to could not be found.',0
					; DATA XREF: .text:loc_67E15178o
		align 4
aTheLanAdapterN	db 'The LAN adapter number is invalid.',0 ; DATA XREF: .text:loc_67E1516Eo
		align 4
aThereAreOpenFi	db 'There are open files on the connection.',0
					; DATA XREF: .text:loc_67E15164o
aActiveConnecti	db 'Active connections still exist.',0 ; DATA XREF: .text:loc_67E1515Ao
aThisShareNameO	db 'This share name or password is invalid.',0
					; DATA XREF: .text:loc_67E15150o
aTheDeviceIsBei	db 'The device is being accessed by an active process.',0
					; DATA XREF: .text:loc_67E15146o
		align 10h
aTheDriveLetter	db 'The drive letter is in use locally.',0 ; DATA XREF: .text:loc_67E1513Co
aTheSpecifiedCl	db 'The specified client is already registered for the specified even'
					; DATA XREF: .text:loc_67E15132o
		db 't.',0
aTheAlertTableI	db 'The alert table is full.',0 ; DATA XREF: .text:loc_67E15128o
		align 4
aAnInvalidOrNon	db 'An invalid or nonexistent alert name was raised.',0
					; DATA XREF: .text:loc_67E1511Eo
		align 4
aTheAlertRecipi	db 'The alert recipient is invalid.',0 ; DATA XREF: .text:loc_67E15114o
aAUserSSessionW	db 'A user',27h,'s session with this server has been deleted.',0
					; DATA XREF: .text:loc_67E1510Ao
aTheLogFileDoes	db 'The log file does not contain the requested record number.',0
					; DATA XREF: .text:loc_67E15100o
		align 4
aTheUserAccou_0	db 'The user accounts database is not configured correctly.',0
					; DATA XREF: .text:loc_67E150F6o
aThisOperatio_0	db 'This operation is not permitted when the Netlogon service is runn'
					; DATA XREF: .text:loc_67E150ECo
		db 'ing.',0
		align 4
aThisOperationI	db 'This operation is not allowed on the last administrative account.'
					; DATA XREF: .text:loc_67E150E2o
		db 0
		align 4
aCouldNotFindDo	db 'Could not find domain controller for this domain.',0
					; DATA XREF: .text:loc_67E150D8o
		align 10h
aCouldNotSetLog	db 'Could not set logon information for this user.',0
					; DATA XREF: .text:loc_67E150CEo
		align 10h
aTheNetlogonSer	db 'The Netlogon service has not been started.',0
					; DATA XREF: .text:loc_67E150C4o
		align 4
aUnableToAddToT	db 'Unable to add to the user accounts database.',0
					; DATA XREF: .text:loc_67E150BAo
		align 4
aThisServerSClo	db 'This server',27h,'s clock is not synchronized with the primary domai'
					; DATA XREF: .text:loc_67E150B0o
		db 'n controller',27h,'s clock.',0
aAPasswordMisma	db 'A password mismatch has been detected.',0
					; DATA XREF: .text:loc_67E150A6o
		align 4
aTheServerIdent	db 'The server identification does not specify a valid server.',0
					; DATA XREF: .text:loc_67E1509Co
		align 4
aTheSessionIden	db 'The session identification does not specify a valid session.',0
					; DATA XREF: .text:loc_67E15092o
		align 4
aTheConnectionI	db 'The connection identification does not specify a valid connection'
					; DATA XREF: .text:loc_67E15088o
		db '.',0
		align 4
aThereIsNoSpace	db 'There is no space for another entry in the table of available ser'
					; DATA XREF: .text:loc_67E1507Eo
		db 'vers.',0
		align 10h
aTheServerHas_0	db 'The server has reached the maximum number of sessions it supports'
					; DATA XREF: .text:loc_67E15074o
		db '.',0
		align 4
aTheServerHasRe	db 'The server has reached the maximum number of connections it suppo'
					; DATA XREF: .text:loc_67E1506Ao
		db 'rts.',0
		align 4
aTheServerCanno	db 'The server cannot open more files because it has reached its maxi'
					; DATA XREF: .text:loc_67E15060o
		db 'mum number.',0
		align 4
aThereAreNoAlte	db 'There are no alternate servers registered on this server.',0
					; DATA XREF: .text:loc_67E15056o
		align 4
aTryDownLevelRe	db 'Try down-level (remote admin protocol) version of API instead.',0
					; DATA XREF: .text:loc_67E1504Co
		align 4
aTheUpsDriverCo	db 'The UPS driver could not be accessed by the UPS service.',0
					; DATA XREF: .text:loc_67E15042o
		align 4
aTheUpsServiceI	db 'The UPS service is not configured correctly.',0
					; DATA XREF: .text:loc_67E15038o
		align 4
aTheUpsServiceC	db 'The UPS service could not access the specified Comm Port.',0
					; DATA XREF: .text:loc_67E1502Eo
		align 10h
aTheUpsIndicate	db 'The UPS indicated a line fail or low battery situation. Service n'
					; DATA XREF: .text:loc_67E15024o
		db 'ot started.',0
		align 10h
aTheUpsServiceF	db 'The UPS service failed to perform a system shut down.',0
					; DATA XREF: .text:loc_67E1501Ao
		align 4
aTheProgramBe_1	db 'The program below returned an MS-DOS error code:',0
					; DATA XREF: .text:loc_67E15010o
		align 4
aTheProgramBe_0	db 'The program below needs more memory:',0 ; DATA XREF: .text:loc_67E15006o
		align 4
aTheProgramBelo	db 'The program below called an unsupported MS-DOS function:',0
					; DATA XREF: .text:loc_67E14FFCo
		align 10h
aTheWorkstation	db 'The workstation failed to boot.',0 ; DATA XREF: .text:loc_67E14FF2o
aTheFileBelowIs	db 'The file below is corrupt.',0 ; DATA XREF: .text:loc_67E14FE8o
		align 4
aNoLoaderIsSpec	db 'No loader is specified in the boot-block definition file.',0
					; DATA XREF: .text:loc_67E14FDEo
		align 4
aNetbiosReturne	db 'NetBIOS returned an error:      The NCB and SMB are dumped above.'
					; DATA XREF: .text:loc_67E14FD4o
		db 0
aADiskIOErrorOc	db 'A disk I/O error occurred.',0 ; DATA XREF: .text:loc_67E14FCAo
		align 4
aImageParameter	db 'Image parameter substitution failed.',0 ; DATA XREF: .text:loc_67E14FC0o
		align 10h
aTooManyImagePa	db 'Too many image parameters cross disk sector boundaries.',0
					; DATA XREF: .text:loc_67E14FB6o
aTheImageWasNot	db 'The image was not generated from an MS-DOS diskette formatted wit'
					; DATA XREF: .text:loc_67E14FACo
		db 'h /S.',0
		align 10h
aRemoteBootWill	db 'Remote boot will be restarted later.',0 ; DATA XREF: .text:loc_67E14FA2o
		align 4
aTheCallToTheRe	db 'The call to the Remoteboot server failed.',0
					; DATA XREF: .text:loc_67E14F98o
		align 4
aCannotConnectT	db 'Cannot connect to the Remoteboot server.',0
					; DATA XREF: .text:loc_67E14F8Eo
		align 10h
aCannotOpenImag	db 'Cannot open image file on the Remoteboot server.',0
					; DATA XREF: .text:loc_67E14F84o
		align 4
aConnectingToTh	db 'Connecting to the Remoteboot server...',0
					; DATA XREF: .text:loc_67E14F70o
					; .text:loc_67E14F7Ao
		align 4
aRemoteBootServ	db 'Remote boot service was stopped; check the error log for the caus'
					; DATA XREF: .text:loc_67E14F66o
		db 'e of the problem.',0
		align 10h
aRemoteBootStar	db 'Remote boot startup failed; check the error log for the cause of '
					; DATA XREF: .text:loc_67E14F5Co
		db 'the problem.',0
		align 10h
aASecondConnect	db 'A second connection to a Remoteboot resource is not allowed.',0
					; DATA XREF: .text:loc_67E14F52o
		align 10h
aTheBrowserServ	db 'The browser service was configured with MaintainServerList=No.',0
					; DATA XREF: .text:loc_67E14F48o
		align 10h
aServiceFaile_4	db 'Service failed to start since none of the network adapters starte'
					; DATA XREF: .text:loc_67E14F3Eo
		db 'd with this service.',0
		align 4
aServiceFaile_3	db 'Service failed to start due to bad startup information in the reg'
					; DATA XREF: .text:loc_67E14F34o
		db 'istry.',0
aServiceFaile_2	db 'Service failed to start because its database is absent or corrupt'
					; DATA XREF: .text:loc_67E14F2Ao
		db '.',0
		align 4
aServiceFaile_1	db 'Service failed to start because RPLFILES share is absent.',0
					; DATA XREF: .text:loc_67E14F20o
		align 10h
aServiceFaile_0	db 'Service failed to start because RPLUSER group is absent.',0
					; DATA XREF: .text:loc_67E14F16o
		align 4
aCannotEnumerat	db 'Cannot enumerate service records.',0 ; DATA XREF: .text:loc_67E14F0Co
		align 10h
aWorkstationR_0	db 'Workstation record information has been corrupted.',0
					; DATA XREF: .text:loc_67E14F02o
		align 4
aWorkstationRec	db 'Workstation record was not found.',0 ; DATA XREF: .text:loc_67E14EF8o
		align 4
aWorkstationNam	db 'Workstation name is in use by some other workstation.',0
					; DATA XREF: .text:loc_67E14EEEo
		align 10h
aProfileRecordI	db 'Profile record information has been corrupted.',0
					; DATA XREF: .text:loc_67E14EE4o
aProfileRecordW	db 'Profile record was not found.',0 ; DATA XREF: .text:loc_67E14EDAo
		align 10h
aProfileNameIsI	db 'Profile name is in use by some other profile.',0
					; DATA XREF: .text:loc_67E14ED0o
		align 10h
aThereAreWork_0	db 'There are workstations using this profile.',0
					; DATA XREF: .text:loc_67E14EC6o
		align 4
aConfiguratio_0	db 'Configuration record information has been corrupted.',0
					; DATA XREF: .text:loc_67E14EBCo
		align 4
aConfigurationR	db 'Configuration record was not found.',0 ; DATA XREF: .text:loc_67E14EB2o
aAdapterIdRecor	db 'Adapter ID record information has been corrupted.',0
					; DATA XREF: .text:loc_67E14EA8o
		align 4
aAnInternalServ	db 'An internal service error has occurred.',0
					; DATA XREF: .text:loc_67E14E9Eo
aVendorIdRecord	db 'Vendor ID record information has been corrupted.',0
					; DATA XREF: .text:loc_67E14E94o
		align 4
aBootBlockRec_0	db 'Boot block record information has been corrupted.',0
					; DATA XREF: .text:loc_67E14E8Ao
		align 4
aTheUserAccount	db 'The user account for this workstation record is missing.',0
					; DATA XREF: .text:loc_67E14E80o
		align 4
aTheRpluserLoca	db 'The RPLUSER local group could not be found.',0
					; DATA XREF: .text:loc_67E14E76o
aBootBlockRecor	db 'Boot block record was not found.',0 ; DATA XREF: .text:loc_67E14E6Co
		align 4
aChosenProfileI	db 'Chosen profile is incompatible with this workstation.',0
					; DATA XREF: .text:loc_67E14E62o
		align 10h
aChosenNetworkA	db 'Chosen network adapter ID is in use by some other workstation.',0
					; DATA XREF: .text:loc_67E14E58o
		align 10h
aThereAreProfil	db 'There are profiles using this configuration.',0
					; DATA XREF: .text:loc_67E14E4Eo
		align 10h
aThereAreWorkst	db 'There are workstations, profiles, or configurations using this bo'
					; DATA XREF: .text:loc_67E14E44o
		db 'ot block.',0
		align 4
aServiceFailedT	db 'Service failed to backup Remoteboot database.',0
					; DATA XREF: .text:loc_67E14E3Ao
aAdapterRecordW	db 'Adapter record was not found.',0 ; DATA XREF: .text:loc_67E14E30o
aVendorRecordWa	db 'Vendor record was not found.',0 ; DATA XREF: .text:loc_67E14E26o
		align 4
aVendorNameIsIn	db 'Vendor name is in use by some other vendor record.',0
					; DATA XREF: .text:loc_67E14E1Co
		align 4
aBootNameVendor	db '(boot name, vendor ID) is in use by some other boot block record.'
					; DATA XREF: .text:loc_67E14E12o
		db 0
		align 10h
aConfigurationN	db 'Configuration name is in use by some other configuration.',0
					; DATA XREF: .text:loc_67E14E08o
		align 4
aTheInternalDat	db 'The internal database maintained by the Dfs service is corrupt.',0
					; DATA XREF: .text:loc_67E14DFEo
aOneOfTheRecord	db 'One of the records in the internal Dfs database is corrupt.',0
					; DATA XREF: .text:loc_67E14DF4o
aThereIsNoDfsNa	db 'There is no DFS name whose entry path matches the input Entry Pat'
					; DATA XREF: .text:loc_67E14DEAo
		db 'h.',0
aARootOrLinkWit	db 'A root or link with the given name already exists.',0
					; DATA XREF: .text:loc_67E14DE0o
		align 10h
aTheServerShare	db 'The server share specified is already shared in the Dfs.',0
					; DATA XREF: .text:loc_67E14DD6o
		align 4
aTheIndicatedSe	db 'The indicated server share does not support the indicated DFS nam'
					; DATA XREF: .text:loc_67E14DCCo
		db 'espace.',0
		align 4
aTheOperation_2	db 'The operation is not valid on this portion of the namespace.',0
					; DATA XREF: .text:loc_67E14DB8o
					; .text:loc_67E14DC2o
		align 4
aTheOperation_1	db 'The operation is ambiguous because the link has multiple servers.'
					; DATA XREF: .text:loc_67E14DAEo
		db 0
aUnableToCrea_0	db 'Unable to create a link.',0 ; DATA XREF: .text:loc_67E14DA4o
aTheServerIsNot	db 'The server is not Dfs Aware.',0 ; DATA XREF: .text:loc_67E14D9Do
aTheSpecifiedRe	db 'The specified rename target path is invalid.',0
					; DATA XREF: .text:loc_67E14D96o
		align 10h
aTheSpecifiedDf	db 'The specified DFS link is offline.',0 ; DATA XREF: .text:loc_67E14D8Fo
		align 4
aTheSpecifiedSe	db 'The specified server is not a server for this link.',0
					; DATA XREF: .text:loc_67E14D88o
aACycleInTheDfs	db 'A cycle in the Dfs name was detected.',0
					; DATA XREF: .text:loc_67E14D81o
		align 10h
aTheOperation_0	db 'The operation is not supported on a server-based Dfs.',0
					; DATA XREF: .text:loc_67E14D7Ao
		align 4
aThisLinkIsAlre	db 'This link is already supported by the specified server-share.',0
					; DATA XREF: .text:loc_67E14D73o
		align 4
aCanTRemoveTheL	db 'Can',27h,'t remove the last server-share supporting this root or lin'
					; DATA XREF: .text:loc_67E14D6Co
		db 'k.',0
		align 4
aTheOperationIs	db 'The operation is not supported for an Inter-DFS link.',0
					; DATA XREF: .text:loc_67E14D65o
		align 4
aTheInternalSta	db 'The internal state of the Dfs Service has become inconsistent.',0
					; DATA XREF: .text:loc_67E14D5Eo
		align 4
aTheDfsServiceH	db 'The Dfs Service has been installed on the specified server.',0
					; DATA XREF: .text:loc_67E14D57o
aTheDfsDataBein	db 'The Dfs data being reconciled is identical.',0
					; DATA XREF: .text:loc_67E14D50o
aTheDfsRootCann	db 'The DFS root cannot be deleted. Uninstall DFS if required.',0
					; DATA XREF: .text:loc_67E14D49o
		align 4
aAChildOrParent	db 'A child or parent directory of the share is already in a Dfs.',0
					; DATA XREF: .text:loc_67E14D42o
aDfsInternalErr	db 'Dfs internal error.',0 ; DATA XREF: .text:loc_67E14D37o
aUnknown_2	db 'unknown',0          ; DATA XREF: .text:loc_67E1589Eo
		align 4
off_67E32544	dd offset loc_67E15894,	offset loc_67E1588A, offset loc_67E15880
					; DATA XREF: .text:67E14D30r
		dd offset loc_67E15876,	offset loc_67E1586C, offset loc_67E15862 ; jump	table for switch statement
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E15858,	offset loc_67E1584E, offset loc_67E15844
		dd offset loc_67E1583A,	offset loc_67E15830, offset loc_67E15826
		dd offset loc_67E14D14,	offset loc_67E1581C, offset loc_67E15812
		dd offset loc_67E15808,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E157FE, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E157F4
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E157EA, offset loc_67E157E0
		dd offset loc_67E157D6,	offset loc_67E157CC, offset loc_67E157C2
		dd offset loc_67E157B8,	offset loc_67E157AE, offset loc_67E157A4
		dd offset loc_67E1579A,	offset loc_67E14D14, offset loc_67E15790
		dd offset loc_67E15786,	offset loc_67E14D14, offset loc_67E1577C
		dd offset loc_67E15772,	offset loc_67E15768, offset loc_67E1575E
		dd offset loc_67E15754,	offset loc_67E1574A, offset loc_67E15740
		dd offset loc_67E15736,	offset loc_67E1572C, offset loc_67E15722
		dd offset loc_67E15718,	offset loc_67E1570E, offset loc_67E15704
		dd offset loc_67E156FA,	offset loc_67E156F0, offset loc_67E156E6
		dd offset loc_67E156DC,	offset loc_67E156D2, offset loc_67E156C8
		dd offset loc_67E156BE,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E156B4,	offset loc_67E156AA, offset loc_67E156A0
		dd offset loc_67E15696,	offset loc_67E1568C, offset loc_67E15682
		dd offset loc_67E15678,	offset loc_67E1566E, offset loc_67E15664
		dd offset loc_67E1565A,	offset loc_67E15650, offset loc_67E15646
		dd offset loc_67E1563C,	offset loc_67E15632, offset loc_67E15628
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E1561E
		dd offset loc_67E15614,	offset loc_67E1560A, offset loc_67E15600
		dd offset loc_67E155F6,	offset loc_67E155EC, offset loc_67E155E2
		dd offset loc_67E155D8,	offset loc_67E14D14, offset loc_67E155CE
		dd offset loc_67E155C4,	offset loc_67E155BA, offset loc_67E155B0
		dd offset loc_67E14D14,	offset loc_67E155A6, offset loc_67E1559C
		dd offset loc_67E15592,	offset loc_67E15588, offset loc_67E14D14
		dd offset loc_67E1557E,	offset loc_67E15574, offset loc_67E1556A
		dd offset loc_67E15560,	offset loc_67E15556, offset loc_67E1554C
		dd offset loc_67E15542,	offset loc_67E15538, offset loc_67E1552E
		dd offset loc_67E15524,	offset loc_67E1551A, offset loc_67E15510
		dd offset loc_67E15506,	offset loc_67E154FC, offset loc_67E154F2
		dd offset loc_67E154E8,	offset loc_67E154DE, offset loc_67E154D4
		dd offset loc_67E154CA,	offset loc_67E154C0, offset loc_67E154B6
		dd offset loc_67E154AC,	offset loc_67E154A2, offset loc_67E15498
		dd offset loc_67E1548E,	offset loc_67E15484, offset loc_67E1547A
		dd offset loc_67E15470,	offset loc_67E15466, offset loc_67E1545C
		dd offset loc_67E15452,	offset loc_67E15448, offset loc_67E1543E
		dd offset loc_67E15434,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E1542A,	offset loc_67E15420, offset loc_67E15416
		dd offset loc_67E1540C,	offset loc_67E15402, offset loc_67E153F8
		dd offset loc_67E153EE,	offset loc_67E153E4, offset loc_67E153DA
		dd offset loc_67E153D0,	offset loc_67E153C6, offset loc_67E153BC
		dd offset loc_67E153B2,	offset loc_67E153A8, offset loc_67E1539E
		dd offset loc_67E15394,	offset loc_67E1538A, offset loc_67E15380
		dd offset loc_67E15376,	offset loc_67E1536C, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E15362,	offset loc_67E15358, offset loc_67E14D14
		dd offset loc_67E1534E,	offset loc_67E15344, offset loc_67E1533A
		dd offset loc_67E15330,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E15326, offset loc_67E1531C
		dd offset loc_67E15312,	offset loc_67E14D14, offset loc_67E15308
		dd offset loc_67E152FE,	offset loc_67E152F4, offset loc_67E152EA
		dd offset loc_67E152E0,	offset loc_67E152D6, offset loc_67E152CC
		dd offset loc_67E152C2,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E152B8, offset loc_67E152AE
		dd offset loc_67E152A4,	offset loc_67E1529A, offset loc_67E15290
		dd offset loc_67E14D14,	offset loc_67E15286, offset loc_67E1527C
		dd offset loc_67E14D14,	offset loc_67E15272, offset loc_67E15268
		dd offset loc_67E1525E,	offset loc_67E15254, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E1524A,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E15240,	offset loc_67E14D14, offset loc_67E15236
		dd offset loc_67E1522C,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E15222
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E15218, offset loc_67E1520E
		dd offset loc_67E15204,	offset loc_67E151FA, offset loc_67E151F0
		dd offset loc_67E151E6,	offset loc_67E14D14, offset loc_67E151DC
		dd offset loc_67E151D2,	offset loc_67E151C8, offset loc_67E151BE
		dd offset loc_67E151B4,	offset loc_67E151AA, offset loc_67E151A0
		dd offset loc_67E14D14,	offset loc_67E15196, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E1518C
		dd offset loc_67E14D14,	offset loc_67E15182, offset loc_67E15178
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E1516E, offset loc_67E15164
		dd offset loc_67E1515A,	offset loc_67E15150, offset loc_67E15146
		dd offset loc_67E1513C,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E15132, offset loc_67E15128
		dd offset loc_67E1511E,	offset loc_67E15114, offset loc_67E1510A
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E15100
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E150F6,	offset loc_67E150EC, offset loc_67E150E2
		dd offset loc_67E150D8,	offset loc_67E150CE, offset loc_67E150C4
		dd offset loc_67E150BA,	offset loc_67E150B0, offset loc_67E150A6
		dd offset loc_67E14D14,	offset loc_67E1509C, offset loc_67E15092
		dd offset loc_67E15088,	offset loc_67E1507E, offset loc_67E15074
		dd offset loc_67E1506A,	offset loc_67E15060, offset loc_67E15056
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E1504C
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E15042,	offset loc_67E15038, offset loc_67E1502E
		dd offset loc_67E15024,	offset loc_67E1501A, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E15010
		dd offset loc_67E15006,	offset loc_67E14FFC, offset loc_67E14FF2
		dd offset loc_67E14FE8,	offset loc_67E14FDE, offset loc_67E14FD4
		dd offset loc_67E14FCA,	offset loc_67E14FC0, offset loc_67E14FB6
		dd offset loc_67E14FAC,	offset loc_67E14FA2, offset loc_67E14F98
		dd offset loc_67E14F8E,	offset loc_67E14F84, offset loc_67E14F7A
		dd offset loc_67E14F70,	offset loc_67E14F66, offset loc_67E14F5C
		dd offset loc_67E14F52,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14F48, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14F3E, offset loc_67E14F34
		dd offset loc_67E14F2A,	offset loc_67E14F20, offset loc_67E14F16
		dd offset loc_67E14F0C,	offset loc_67E14F02, offset loc_67E14EF8
		dd offset loc_67E14EEE,	offset loc_67E14EE4, offset loc_67E14EDA
		dd offset loc_67E14ED0,	offset loc_67E14EC6, offset loc_67E14EBC
		dd offset loc_67E14EB2,	offset loc_67E14EA8, offset loc_67E14E9E
		dd offset loc_67E14E94,	offset loc_67E14E8A, offset loc_67E14E80
		dd offset loc_67E14E76,	offset loc_67E14E6C, offset loc_67E14E62
		dd offset loc_67E14E58,	offset loc_67E14E4E, offset loc_67E14E44
		dd offset loc_67E14E3A,	offset loc_67E14E30, offset loc_67E14E26
		dd offset loc_67E14E1C,	offset loc_67E14E12, offset loc_67E14E08
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14DFE,	offset loc_67E14DF4, offset loc_67E14DEA
		dd offset loc_67E14DE0,	offset loc_67E14DD6, offset loc_67E14DCC
		dd offset loc_67E14DC2,	offset loc_67E14DB8, offset loc_67E14DAE
		dd offset loc_67E14DA4,	offset loc_67E14D9D, offset loc_67E14D96
		dd offset loc_67E14D8F,	offset loc_67E14D88, offset loc_67E14D81
		dd offset loc_67E14D7A,	offset loc_67E14D73, offset loc_67E14D6C
		dd offset loc_67E14D65,	offset loc_67E14D5E, offset loc_67E14D57
		dd offset loc_67E14D50,	offset loc_67E14D49, offset loc_67E14D42
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D14,	offset loc_67E14D14, offset loc_67E14D14
		dd offset loc_67E14D37
aUnixUserIdsNot	db 'UNIX user IDs not supported on Windows',0Ah,0
					; DATA XREF: .text:67E158B7o
aOrg_freedes_80	db 'org.freedesktop.DBus.Error.NotSupported',0 ; DATA XREF: .text:67E158BFo
aRBuildWin32_41	db 'r:\build\win32libs\dbus-1.4.16-20110302\work\dbus-1.4.24\dbus\dbu'
					; DATA XREF: .text:67E15901o
					; .text:67E15938o ...
		db 's-sysdeps-util-win.c',0
aFilenameDirnam	db 'filename != dirname',0 ; DATA XREF: .text:67E15911o
aFilenameNull	db 'filename != NULL',0 ; DATA XREF: .text:67E15940o
aDirnameNull	db 'dirname != NULL',0  ; DATA XREF: .text:67E1596Fo
a__1		db '.',0                ; DATA XREF: .text:67E15BC3o
aSep0		db 'sep >= 0',0         ; DATA XREF: .text:67E159EAo
					; .text:67E15AA1o ...
		align 10h
aErrorNullDb_33	db '(error) == NULL || !dbus_error_is_set ((error))',0
					; DATA XREF: .text:67E15CCDo
					; .text:67E15EF4o ...
aFailedToGetNex	db 'Failed to get next in directory: %s',0 ; DATA XREF: .text:67E15E57o
aNoMemoryToRe_0	db 'No memory to read directory entry',0 ; DATA XREF: .text:67E15E1Eo
		align 4
aOrg_freedes_81	db 'org.freedesktop.DBus.Error.NoMemory',0 ; DATA XREF: .text:67E15E26o
					; .text:67E16089o ...
aFailedToReadDi	db 'Failed to read directory "%s": %s',0 ; DATA XREF: .text:67E16023o
		align 10h
aCouldNotAlloca	db 'Could not allocate memory for directory iterator',0
					; DATA XREF: .text:67E16081o
a_exe		db '.exe',0             ; DATA XREF: .text:67E1615Eo
		align 4
a_dbus_set_sign	db '_dbus_set_signal_handler() has to be implemented',0Ah,0
					; DATA XREF: .text:67E162C3o
; char aSS_1[]
aSS_1		db '%s%s',0             ; DATA XREF: sub_67E162F0+44o
					; sub_67E162F0+A5o
byte_67E3308F	db 0			; DATA XREF: sub_67E162F0+9Do
aWritingPidFile	db 'writing pid file %s',0Ah,0 ; DATA XREF: .text:67E1641Bo
		align 4
aCouldNotCrea_1	db 'Could not create PID file %s: %s',0 ; DATA XREF: .text:67E167FDo
aLu_0		db '%lu',0Ah,0          ; DATA XREF: .text:67E164E8o
		align 10h
aFailedToFormat	db 'Failed to format PID for "%s": %s',0 ; DATA XREF: .text:67E16822o
aCouldNotWrit_0	db 'Could not write to %s: %s',0 ; DATA XREF: .text:67E165A0o
aCouldNotClos_0	db 'Could not close file %s: %s',0 ; DATA XREF: .text:67E166DDo
aPidFileWriteFa	db 'pid file write failed',0Ah,0 ; DATA XREF: .text:loc_67E165D0o
		align 10h
aErrorNullDb_34	db '(error) == NULL || dbus_error_is_set ((error))',0
					; DATA XREF: .text:67E1662Eo
aNoPidFileReque	db 'No pid file requested',0Ah,0 ; DATA XREF: .text:loc_67E167B0o
aWritingOurPidT	db 'writing our pid to pipe %d',0Ah,0 ; DATA XREF: .text:67E1671Ao
asc_67E331A2	db 0Ah,0		; DATA XREF: .text:67E16762o
aPrintingMessag	db 'Printing message bus PID: did not write enough bytes',0Ah,0
					; DATA XREF: .text:67E1689Do
		align 4
aOrg_freedes_82	db 'org.freedesktop.DBus.Error.Failed',0 ; DATA XREF: .text:67E168A5o
aNoPidPipeToWri	db 'No pid pipe to write to',0Ah,0 ; DATA XREF: .text:loc_67E1667Eo
a_dbus_strin_52	db '_dbus_string_get_dirname',0 ; DATA XREF: .text:67E158F1o
					; .text:67E15928o ...
a_dbus_director	db '_dbus_directory_get_next_file',0 ; DATA XREF: .text:loc_67E15CB5o
a_dbus_direct_0	db '_dbus_directory_open',0 ; DATA XREF: .text:67E15EDCo
a_dbus_stat	db '_dbus_stat',0       ; DATA XREF: .text:67E160CBo
a_dbus_set_si_0	db '_dbus_set_signal_handler',0 ; DATA XREF: .text:67E162CBo
		align 20h
a_dbus_write_pi	db '_dbus_write_pid_to_file_and_pipe',0 ; DATA XREF: .text:67E16423o
					; .text:67E165D8o ...
a_dbus_write__1	db '_dbus_write_pid_file',0 ; DATA XREF: .text:67E16468o
aInfo		db 'info',0             ; DATA XREF: .rdata:off_67E332ECo
aSecurity	db 'security',0         ; DATA XREF: .rdata:67E332F0o
aFatal		db 'fatal',0            ; DATA XREF: .rdata:67E332F4o
		align 4
off_67E332EC	dd offset aInfo		; DATA XREF: sub_67E162F0+39r
					; "info"
		dd offset aSecurity	; "security"
		dd offset aFatal	; "fatal"
		align 10h
; CHAR aGetaddrinfo[]
aGetaddrinfo	db 'getaddrinfo',0      ; DATA XREF: sub_67E169F0+E1o
					; sub_67E169F0+104o ...
aGetnameinfo	db 'getnameinfo',0      ; DATA XREF: sub_67E169F0+126o
					; .data:67E19038o
aFreeaddrinfo	db 'freeaddrinfo',0     ; DATA XREF: sub_67E169F0+13Co
					; .data:67E19040o
		align 4
; char aUdp[]
aUdp		db 'udp',0              ; DATA XREF: sub_67E16C20+2ECo
; char proto[]
proto		db 'tcp',0              ; DATA XREF: sub_67E16C20+13Do
; char aU[]
aU		db '%u',0               ; DATA XREF: sub_67E16FE0+83o
aUdp_0		db 'udp',0              ; DATA XREF: sub_67E16FE0+10Do
		align 4
dword_67E33338	dd 2AF9h		; DATA XREF: sub_67E16FE0+234r
		dd 2AFAh, 2AFBh
dword_67E33344	dd 2AF9h		; DATA XREF: sub_67E175F0+EBr
		dd 2AFAh, 2AFBh, 2AF9h
off_67E33354	dd offset TlsCallback_0	; DATA XREF: sub_67DC1040:loc_67DC1137r
aMingwW64Runtim	db 'Mingw-w64 runtime failure:',0Ah,0 ; DATA XREF: sub_67E178E0+1Do
; char aAddressPHasNoI[]
aAddressPHasNoI	db 'Address %p has no image-section',0 ; DATA XREF: sub_67E17940+13Ao
; char aVirtualqueryFa[]
aVirtualqueryFa	db '  VirtualQuery failed for %d bytes at address %p',0
					; DATA XREF: sub_67E17940+126o
					; sub_67E17A90+253o
		align 4
; char aUnknownPseud_0[]
aUnknownPseud_0	db '  Unknown pseudo relocation protocol version %d.',0Ah,0
					; DATA XREF: sub_67E17A90+267o
		align 4
; char aUnknownPseudoR[]
aUnknownPseudoR	db '  Unknown pseudo relocation bit size %d.',0Ah,0
					; DATA XREF: sub_67E17A90+F4o
		align 4
off_67E33428	dd offset dword_67E34A00 ; DATA	XREF: .text:67E17E28o
		dd offset dword_67E34A60
aMsvcrt_dll:				; DATA XREF: .text:loc_67E18525o
		unicode	0, <msvcrt.dll>,0
		align 4
dword_67E33448	dd 0			; DATA XREF: sub_67E17A90+57o
					; sub_67E17A90+5Co ...
dword_67E3344C	dd 0			; DATA XREF: sub_67E17A90+7Ar
dword_67E33450	dd 0			; DATA XREF: sub_67E17A90+84r
dword_67E33454	dd 6Bh dup(0)		; DATA XREF: sub_67E17A90+8Do
		align 1000h
_rdata		ends

; Section 4. (virtual address 00074000)
; Virtual size			: 00000DC4 (   3524.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0600080: Bss Readable Writable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 67E34000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_67E34000	dd ?			; DATA XREF: sub_67DC1040+Dr
					; sub_67DC1040+22w ...
; char *dword_67E34004
dword_67E34004	dd ?			; DATA XREF: sub_67DC7620:loc_67DC7639r
					; sub_67DC7620+2Bw ...
; char dword_67E34008[]
dword_67E34008	dd ?			; DATA XREF: sub_67DC7620:loc_67DC7665r
					; sub_67DC7620+58w ...
; char dword_67E3400C[]
dword_67E3400C	dd ?			; DATA XREF: sub_67DC7620:loc_67DC7692r
					; sub_67DC7620+7Fw ...
dword_67E34010	dd ?			; DATA XREF: sub_67DC7620+93w
					; sub_67DC7A30+93r ...
dword_67E34014	dd ?			; DATA XREF: sub_67DC7270+15r
					; sub_67DC7270+46w ...
dword_67E34018	dd ?			; DATA XREF: sub_67DC7270+1Dr
					; sub_67DC7270:loc_67DC72B0r ...
dword_67E3401C	dd ?			; DATA XREF: sub_67DC7270:loc_67DC7295r
					; sub_67DC7270:loc_67DC72C2r ...
dword_67E34020	dd ?			; DATA XREF: sub_67DCF230+327r
					; .text:loc_67DD03C7r ...
dword_67E34024	dd ?			; DATA XREF: sub_67DCF230+3F4o
					; .text:67DD04D5r ...
dword_67E34028	dd 4 dup(?)		; DATA XREF: dbus_connection_get_data+48o
					; dbus_connection_set_data+94o	...
dword_67E34038	dd ?			; DATA XREF: sub_67DE0E70+13r
					; sub_67DE0E70+45r ...
dword_67E3403C	dd ?			; DATA XREF: sub_67DE0E70+55r
					; dbus_message_unref+18Ar ...
dword_67E34040	dd ?			; DATA XREF: sub_67DE0E70+87r
					; sub_67DE0E70:loc_67DE10A0w ...
dword_67E34044	dd ?			; DATA XREF: sub_67DE0E70+97r
					; dbus_message_unref+1F2w ...
dword_67E34048	dd ?			; DATA XREF: sub_67DE0E70+A7r
					; dbus_message_unref+1FCw ...
dword_67E3404C	dd ?			; DATA XREF: sub_67DE0E70+B7r
					; dbus_message_unref+206w ...
dword_67E34050	dd ?			; DATA XREF: sub_67DE0E70+C7r
					; dbus_message_unref+210w ...
dword_67E34054	dd 4 dup(?)		; DATA XREF: dbus_message_get_data+43o
					; dbus_message_set_data+90o ...
dword_67E34064	dd 4 dup(?)		; DATA XREF: dbus_pending_call_get_data+48o
					; dbus_pending_call_free_data_slot+6Eo	...
dword_67E34074	dd 0Bh dup(?)		; DATA XREF: dbus_server_get_data+84o
					; dbus_server_set_data+94o ...
dword_67E340A0	dd ?			; DATA XREF: sub_67DF1C50+Cr
					; sub_67DF1CA0:loc_67DF1CB9r ...
		align 20h
dword_67E340C0	dd ?			; DATA XREF: dbus_threads_init+2EFw
					; dbus_threads_init:loc_67DF23FEw ...
dword_67E340C4	dd ?			; DATA XREF: .text:loc_67DF1A31r
					; dbus_threads_init+2FCw ...
dword_67E340C8	dd ?			; DATA XREF: .text:loc_67DF1A70r
					; sub_67DF1D10:loc_67DF1F42r ...
dword_67E340CC	dd ?			; DATA XREF: sub_67DF1A90:loc_67DF1AB0r
					; dbus_threads_init+30Cw
dword_67E340D0	dd ?			; DATA XREF: sub_67DF1AD0:loc_67DF1AF0r
					; dbus_threads_init+314w
dword_67E340D4	dd ?			; DATA XREF: .text:67DF1B13r
					; sub_67DF1CA0+9r ...
dword_67E340D8	dd ?			; DATA XREF: .text:67DF1B3Br
					; sub_67DF1C50+2Fr ...
dword_67E340DC	dd ?			; DATA XREF: sub_67DF1B60+13r
					; sub_67DF1B90+13r ...
dword_67E340E0	dd ?			; DATA XREF: sub_67DF1B90+1Cr
					; dbus_threads_init+334w
dword_67E340E4	dd ?			; DATA XREF: sub_67DF1BC0+Br
					; dbus_threads_init+33Cw
dword_67E340E8	dd ?			; DATA XREF: .text:67DF1BFBr
					; dbus_threads_init+344w
dword_67E340EC	dd ?			; DATA XREF: .text:67DF1A23r
					; dbus_threads_init+353w ...
dword_67E340F0	dd ?			; DATA XREF: .text:67DF1A5Br
					; sub_67DF1D10+10r ...
dword_67E340F4	dd ?			; DATA XREF: sub_67DF1A90+Br
					; dbus_threads_init+36Fw
dword_67E340F8	dd ?			; DATA XREF: sub_67DF1AD0+Br
					; dbus_threads_init+6D3w
		dd 4 dup(?)
dword_67E3410C	dd ?			; DATA XREF: sub_67DF1C30+3o
					; dbus_threads_init+9EEr ...
dword_67E34110	dd ?			; DATA XREF: sub_67DF1C30+Fo
					; sub_67DF1C50+1Do ...
		align 10h
dword_67E34120	dd ?			; DATA XREF: .text:67DFA910w
					; sub_67DFAAC0+4r ...
dword_67E34124	dd ?			; DATA XREF: sub_67DFAD60+3r
					; sub_67DFAD60:loc_67DFADD6w ...
dword_67E34128	dd ?			; DATA XREF: sub_67DFAD60+2Dr
					; sub_67DFAD60+62w ...
		align 20h
; CHAR Source[]
Source		dw ?			; DATA XREF: sub_67DFAAC0+49o
					; sub_67DFAAC0+6Fo ...
byte_67E34142	db ?			; DATA XREF: sub_67DFAAC0+E3w
		align 4
		dd 0FFh	dup(?)
dword_67E34540	dd 3 dup(?)		; DATA XREF: sub_67DFB5D0+55o
					; sub_67DFB5D0+74o ...
dword_67E3454C	dd ?			; DATA XREF: sub_67DFB5D0+11Fw
		align 20h
dword_67E34560	dd ?			; DATA XREF: sub_67DFBA50+1Ar
					; sub_67DFBA50+66w ...
dword_67E34564	dd ?			; DATA XREF: dbus_shutdown+4r
					; dbus_shutdown+12w ...
		align 20h
; HANDLE hFileMappingObject
hFileMappingObject dd ?			; DATA XREF: sub_67E0F1A0:loc_67E0F1E2r
					; sub_67E0F1A0+51w ...
; HANDLE hHandle
hHandle		dd ?			; DATA XREF: sub_67E0F1A0+4Cr
					; sub_67E0F1A0+63r ...
		align 20h
; CHAR Buffer[1000]
Buffer		db 3E8h	dup(?)		; DATA XREF: sub_67E0C5D0:loc_67E0C614o
					; sub_67E0C5D0+6Eo ...
dword_67E34988	dd ?			; DATA XREF: sub_67E0C5D0+4r
					; sub_67E0C5D0+3Ar ...
dword_67E3498C	dd ?			; DATA XREF: sub_67E0DA50+6r
					; sub_67E0DA50+44w ...
dword_67E34990	dd ?			; DATA XREF: sub_67E0C080+30w
					; sub_67E0C240+Er ...
dword_67E34994	dd ?			; DATA XREF: sub_67E0C080+45w
					; sub_67E0C240:loc_67E0C320r
dword_67E34998	dd ?			; DATA XREF: sub_67E0C080+5Aw
					; sub_67E0C240+ECr
dword_67E3499C	dd ?			; DATA XREF: sub_67E0C080+6Fw
					; sub_67E0C080+B9r
dword_67E349A0	dd ?			; DATA XREF: sub_67E0C080+84w
					; sub_67E0C240+149r
dword_67E349A4	dd ?			; DATA XREF: sub_67E0C080+99w
					; sub_67E0C240+232r
dword_67E349A8	dd ?			; DATA XREF: sub_67E0C080+ABw
		align 20h
dword_67E349C0	dd ?			; DATA XREF: sub_67E114C0r
					; sub_67E11910+84w
dword_67E349C4	dd ?			; DATA XREF: sub_67E16950+4r
					; sub_67E16950+57w
dword_67E349C8	dd ?			; DATA XREF: sub_67E169B0+4r
					; sub_67E169B0+33w
dword_67E349CC	dd ?			; DATA XREF: sub_67E169F0+6r
					; sub_67E169F0:loc_67E16A71w
TlsIndex	dd 4 dup(?)		; DATA XREF: .tls:TlsIndex_ptro
dword_67E349E0	dd ?			; DATA XREF: DllEntryPoint+7w
dword_67E349E4	dd ?			; DATA XREF: sub_67E17940+2Cr
					; sub_67E17940+65r ...
dword_67E349E8	dd ?			; DATA XREF: sub_67E17940:loc_67E17960r
					; sub_67E17940:loc_67E17A02w ...
dword_67E349EC	dd ?			; DATA XREF: sub_67E17A90+9r
					; sub_67E17A90:loc_67E17AB0w
dword_67E349F0	dd ?			; DATA XREF: sub_67E17DA0+3r
					; sub_67E17DA0:loc_67E17DB1w
		align 10h
dword_67E34A00	dd ?			; DATA XREF: .text:67E17DE2w
					; .rdata:off_67E33428o
dword_67E34A04	dd ?			; DATA XREF: .text:67E17DECw
		dd ?
dword_67E34A0C	dd ?			; DATA XREF: .text:67E17DFBw
		dd 14h dup(?)
dword_67E34A60	dd 2Bh dup(?)		; DATA XREF: .rdata:67E3342Co
dword_67E34B0C	dd ?			; DATA XREF: .text:67E17E0Aw
		dd 2 dup(?)
dword_67E34B18	dd ?			; DATA XREF: .text:67E17DF6w
		dd 2 dup(?)
dword_67E34B24	dd ?			; DATA XREF: .text:67E17DDCw
		dd 86h dup(?)
dword_67E34D40	dd ?			; DATA XREF: sub_67E17F30+7r
					; sub_67E17FB0+26r ...
; struct _RTL_CRITICAL_SECTION CriticalSection
CriticalSection	_RTL_CRITICAL_SECTION <?> ; DATA XREF: sub_67E17F30:loc_67E17F48o
					; sub_67E17F30:loc_67E17F95o ...
dword_67E34D5C	dd ?			; DATA XREF: sub_67E17F30+25r
					; .text:67E18065r ...
		dd ?
dword_67E34D64	dd ?			; DATA XREF: .text:67E18486r
					; .text:67E1851Aw ...
dword_67E34D68	dd ?			; DATA XREF: sub_67DC7270+4r
					; sub_67DC7270:loc_67DC729Dr ...
dword_67E34D6C	dd ?			; DATA XREF: dbus_bus_get_unique_name+38r
					; dbus_bus_get_unique_name:loc_67DC73F5r ...
dword_67E34D70	dd ?			; DATA XREF: sub_67DCF230:loc_67DCF510r
					; sub_67DCF230:loc_67DCF57Er ...
dword_67E34D74	dd ?			; DATA XREF: dbus_connection_allocate_data_slot+7o
					; dbus_threads_init+39Bo
dword_67E34D78	dd ?			; DATA XREF: sub_67DE0E70+6r
					; sub_67DE0E70+1C4r ...
dword_67E34D7C	dd ?			; DATA XREF: dbus_message_allocate_data_slot+7o
					; dbus_threads_init+3B3o
dword_67E34D80	dd ?			; DATA XREF: dbus_pending_call_allocate_data_slot+3Co
					; dbus_threads_init+3A3o
dword_67E34D84	dd ?			; DATA XREF: dbus_server_allocate_data_slot+7o
					; dbus_threads_init+3ABo
dword_67E34D88	dd ?			; DATA XREF: dbus_threads_init+3F3o
					; dbus_threads_init+653w ...
dword_67E34D8C	dd ?			; DATA XREF: dbus_threads_init+393o
					; sub_67DFBA50+9r ...
dword_67E34D90	dd ?			; DATA XREF: dbus_threads_init+3D3o
					; sub_67DFE730+26r ...
dword_67E34D94	dd ?			; DATA XREF: dbus_threads_init+38Bo
dword_67E34D98	dd ?			; DATA XREF: dbus_threads_init+383o
					; dbus_threads_init+450w ...
dword_67E34D9C	dd ?			; DATA XREF: dbus_threads_init+3DBo
dword_67E34DA0	dd ?			; DATA XREF: dbus_threads_init+3BBo
dword_67E34DA4	dd ?			; DATA XREF: sub_67DC1000+21w
					; sub_67DC1040+143r ...
dword_67E34DA8	dd ?			; DATA XREF: sub_67DC1000+1Cw
					; sub_67DC1040:loc_67DC1170r ...
dword_67E34DAC	dd ?			; DATA XREF: sub_67DC1040+4Co
					; sub_67DC1040+C1o ...
dword_67E34DB0	dd ?			; DATA XREF: sub_67DC1040+5Fr
					; sub_67DC1040:loc_67DC1116r ...
		align 400h
_bss		ends

;
; Imports from ADVAPI32.DLL
;
; Section 6. (virtual address 00078000)
; Virtual size			: 000011A0 (   4512.)
; Section size in file		: 00001200 (   4608.)
; Offset to raw	data for section: 00073C00
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Externs
; _idata
; BOOL __stdcall ConvertSidToStringSidA(PSID Sid, LPSTR	*StringSid)
		extrn __imp_ConvertSidToStringSidA:dword
					; DATA XREF: ConvertSidToStringSidAr
; BOOL __stdcall CryptAcquireContextA(HCRYPTPROV *phProv, LPCSTR szContainer, LPCSTR szProvider, DWORD dwProvType, DWORD dwFlags)
		extrn CryptAcquireContextA:dword ; CODE	XREF: sub_67E0C6A0+7Cp
					; DATA XREF: sub_67E0C6A0+7Cr
; BOOL __stdcall CryptGenRandom(HCRYPTPROV hProv, DWORD	dwLen, BYTE *pbBuffer)
		extrn CryptGenRandom:dword ; CODE XREF:	sub_67E0C6A0+98p
					; DATA XREF: sub_67E0C6A0+98r
; BOOL __stdcall CryptReleaseContext(HCRYPTPROV	hProv, DWORD dwFlags)
		extrn CryptReleaseContext:dword	; CODE XREF: sub_67E0C6A0+B4p
					; sub_67E0C6A0+D6p
					; DATA XREF: ...
; BOOL __stdcall GetCurrentHwProfileA(LPHW_PROFILE_INFOA lpHwProfileInfo)
		extrn GetCurrentHwProfileA:dword ; CODE	XREF: sub_67E0B630+17p
					; DATA XREF: sub_67E0B630+17r
; BOOL __stdcall GetTokenInformation(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass,	LPVOID TokenInformation, DWORD TokenInformationLength, PDWORD ReturnLength)
		extrn GetTokenInformation:dword	; CODE XREF: sub_67E0F2A0+F3p
					; sub_67E0F2A0+12Bp
					; DATA XREF: ...
; BOOL __stdcall IsValidSid(PSID pSid)
		extrn IsValidSid:dword	; CODE XREF: .text:67E0D613p
					; sub_67E0F2A0+18Ap
					; DATA XREF: ...
; BOOL __stdcall LookupAccountNameW(LPCWSTR lpSystemName, LPCWSTR lpAccountName, PSID Sid, LPDWORD cbSid, LPWSTR ReferencedDomainName, LPDWORD cchReferencedDomainName,	PSID_NAME_USE peUse)
		extrn LookupAccountNameW:dword ; CODE XREF: .text:67E0D58Dp
					; DATA XREF: .text:67E0D569r
; BOOL __stdcall OpenProcessToken(HANDLE ProcessHandle,	DWORD DesiredAccess, PHANDLE TokenHandle)
		extrn OpenProcessToken:dword ; CODE XREF: sub_67E0F2A0+2Bp
					; DATA XREF: sub_67E0F2A0+2Br

;
; Imports from KERNEL32.dll
;
; BOOL __stdcall CloseHandle(HANDLE hObject)
		extrn CloseHandle:dword	; CODE XREF: sub_67E0A090+D0p
					; sub_67E0A200+22Ap ...
; BOOL __stdcall CreateDirectoryA(LPCSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
		extrn CreateDirectoryA:dword ; CODE XREF: sub_67E0C790+5Cp
					; DATA XREF: sub_67E0C790+5Cr
; HANDLE __stdcall CreateEventA(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState,	LPCSTR lpName)
		extrn CreateEventA:dword ; CODE	XREF: sub_67E115F0+190p
					; .text:67E14406p
					; DATA XREF: ...
; HANDLE __stdcall CreateFileA(LPCSTR lpFileName, DWORD	dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes,	DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE	hTemplateFile)
		extrn CreateFileA:dword	; CODE XREF: sub_67E0A090+8Dp
					; sub_67E0A200+108p ...
; HANDLE __stdcall CreateFileMappingA(HANDLE hFile, LPSECURITY_ATTRIBUTES lpFileMappingAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCSTR lpName)
		extrn CreateFileMappingA:dword ; CODE XREF: sub_67E10330+134p
					; DATA XREF: sub_67E10330+134r
; HANDLE __stdcall CreateMutexA(LPSECURITY_ATTRIBUTES lpMutexAttributes, BOOL bInitialOwner, LPCSTR lpName)
		extrn CreateMutexA:dword ; CODE	XREF: sub_67E0F1A0+27p
					; sub_67E0F640+7Ep ...
; BOOL __stdcall CreateProcessA(LPCSTR lpApplicationName, LPSTR	lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES	lpThreadAttributes, BOOL bInheritHandles, DWORD	dwCreationFlags, LPVOID	lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo,	LPPROCESS_INFORMATION lpProcessInformation)
		extrn CreateProcessA:dword ; CODE XREF:	sub_67E0FCC0+406p
					; sub_67E14850+2ABp ...
; HANDLE __stdcall CreateThread(LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags,	LPDWORD	lpThreadId)
		extrn CreateThread:dword ; CODE	XREF: sub_67E0C170+82p
					; .text:67E14767p
					; DATA XREF: ...
; void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn DeleteCriticalSection:dword ; CODE XREF: sub_67E11830+Ep
					; sub_67E17FB0+41p
					; DATA XREF: ...
; BOOL __stdcall DeleteFileA(LPCSTR lpFileName)
		extrn DeleteFileA:dword	; CODE XREF: sub_67E0A200+38Fp
					; sub_67E0C520+5Cp
					; DATA XREF: ...
; BOOL __stdcall DuplicateHandle(HANDLE	hSourceProcessHandle, HANDLE hSourceHandle, HANDLE hTargetProcessHandle, LPHANDLE lpTargetHandle, DWORD	dwDesiredAccess, BOOL bInheritHandle, DWORD dwOptions)
		extrn DuplicateHandle:dword ; CODE XREF: sub_67E0C170+4Ap
					; DATA XREF: sub_67E0C170+4Ar
; void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn EnterCriticalSection:dword ; CODE	XREF: sub_67E11510+10p
					; sub_67E11560+15p ...
; BOOL __stdcall FindClose(HANDLE hFindFile)
		extrn FindClose:dword	; CODE XREF: .text:67E1605Ap
					; .text:67E168FAp
					; DATA XREF: ...
; HANDLE __stdcall FindFirstFileA(LPCSTR lpFileName, LPWIN32_FIND_DATAA	lpFindFileData)
		extrn FindFirstFileA:dword ; CODE XREF:	.text:67E15F95p
					; DATA XREF: .text:67E15F95r
; BOOL __stdcall FindNextFileA(HANDLE hFindFile, LPWIN32_FIND_DATAA lpFindFileData)
		extrn FindNextFileA:dword ; CODE XREF: .text:67E15D47p
					; DATA XREF: .text:67E15D47r
; DWORD	__stdcall FormatMessageA(DWORD dwFlags,	LPCVOID	lpSource, DWORD	dwMessageId, DWORD dwLanguageId, LPSTR lpBuffer, DWORD nSize, va_list *Arguments)
		extrn FormatMessageA:dword ; CODE XREF:	sub_67E0AD30+3Bp
					; sub_67E0ADC0+40p ...
; BOOL __stdcall FreeLibrary(HMODULE hLibModule)
		extrn FreeLibrary:dword	; CODE XREF: sub_67E169F0+184p
					; sub_67E169F0+1BEp
					; DATA XREF: ...
; HANDLE __stdcall GetCurrentProcess()
		extrn GetCurrentProcess:dword ;	CODE XREF: sub_67E0C080+C2p
					; sub_67E0C170+11p ...
; DWORD	__stdcall GetCurrentProcessId()
		extrn GetCurrentProcessId:dword	; CODE XREF: sub_67E0F7C0:loc_67E0F800p
					; sub_67E0F840:loc_67E0FA55p ...
; HANDLE __stdcall GetCurrentThread()
		extrn GetCurrentThread:dword ; CODE XREF: sub_67E0C170+15p
					; sub_67E0C240:loc_67E0C25Bp
					; DATA XREF: ...
; DWORD	__stdcall GetCurrentThreadId()
		extrn GetCurrentThreadId:dword ; CODE XREF: sub_67E17E60+74p
					; DATA XREF: sub_67E17E60+74r
; BOOL __stdcall GetExitCodeProcess(HANDLE hProcess, LPDWORD lpExitCode)
		extrn GetExitCodeProcess:dword ; CODE XREF: sub_67E14850+14Bp
					; DATA XREF: sub_67E14850+14Br
; DWORD	__stdcall GetFileAttributesA(LPCSTR lpFileName)
		extrn GetFileAttributesA:dword ; CODE XREF: sub_67E0B2C0+Ap
					; sub_67E0E600+F3p
					; DATA XREF: ...
; BOOL __stdcall GetFileAttributesExA(LPCSTR lpFileName, GET_FILEEX_INFO_LEVELS	fInfoLevelId, LPVOID lpFileInformation)
		extrn GetFileAttributesExA:dword ; CODE	XREF: .text:67E16111p
					; DATA XREF: .text:67E16111r
; DWORD	__stdcall GetFileSize(HANDLE hFile, LPDWORD lpFileSizeHigh)
		extrn GetFileSize:dword	; CODE XREF: sub_67E0A6A0+EDp
					; DATA XREF: sub_67E0A6A0+EDr
; DWORD	__stdcall GetLastError()
		extrn GetLastError:dword ; CODE	XREF: sub_67E0A090:loc_67E0A190p
					; sub_67E0A090:loc_67E0A1D2p ...
; DWORD	__stdcall GetModuleFileNameA(HMODULE hModule, LPSTR lpFilename,	DWORD nSize)
		extrn GetModuleFileNameA:dword ; CODE XREF: sub_67DFAAC0+58p
					; sub_67E0B2F0+2Dp ...
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
		extrn GetModuleHandleA:dword ; CODE XREF: sub_67DC1430+16p
					; .text:67E18511p
					; DATA XREF: ...
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
		extrn GetProcAddress:dword ; CODE XREF:	sub_67DC1430+35p
					; sub_67E0C080+28p ...
; UINT __stdcall GetSystemDirectoryA(LPSTR lpBuffer, UINT uSize)
		extrn GetSystemDirectoryA:dword	; CODE XREF: sub_67E169F0+74p
					; DATA XREF: sub_67E169F0+74r
; void __stdcall GetSystemTimeAsFileTime(LPFILETIME lpSystemTimeAsFileTime)
		extrn GetSystemTimeAsFileTime:dword ; CODE XREF: sub_67E0C850+22p
					; sub_67E0E540+22p ...
; DWORD	__stdcall GetTempPathA(DWORD nBufferLength, LPSTR lpBuffer)
		extrn GetTempPathA:dword ; CODE	XREF: sub_67E0C5D0+53p
					; DATA XREF: sub_67E0C5D0+53r
; BOOL __stdcall GetThreadContext(HANDLE hThread, LPCONTEXT lpContext)
		extrn GetThreadContext:dword ; CODE XREF: sub_67E0C240+73p
					; DATA XREF: sub_67E0C240+73r
; DWORD	__stdcall GetTickCount()
		extrn GetTickCount:dword ; CODE	XREF: sub_67E17E60+7Cp
					; DATA XREF: sub_67E17E60+7Cr
; void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn InitializeCriticalSection:dword ;	CODE XREF: sub_67E11860+22p
					; sub_67E17FB0+77p
					; DATA XREF: ...
; LONG __stdcall InterlockedCompareExchange(volatile LONG *Destination,	LONG Exchange, LONG Comperand)
		extrn InterlockedCompareExchange:dword
; LONG __stdcall InterlockedDecrement(volatile LONG *lpAddend)
		extrn InterlockedDecrement:dword
; LONG __stdcall InterlockedExchange(volatile LONG *Target, LONG Value)
		extrn InterlockedExchange:dword
; LONG __stdcall InterlockedIncrement(volatile LONG *lpAddend)
		extrn InterlockedIncrement:dword
; void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn LeaveCriticalSection:dword ; CODE	XREF: sub_67E11510+3Ep
					; sub_67E11560+4Bp ...
; HMODULE __stdcall LoadLibraryA(LPCSTR	lpLibFileName)
		extrn LoadLibraryA:dword ; CODE	XREF: sub_67E0C080+Cp
					; sub_67E169F0+CCp
					; DATA XREF: ...
; HMODULE __stdcall LoadLibraryW(LPCWSTR lpLibFileName)
		extrn LoadLibraryW:dword ; CODE	XREF: .text:67E1852Cp
					; DATA XREF: .text:67E1852Cr
; HLOCAL __stdcall LocalFree(HLOCAL hMem)
		extrn LocalFree:dword	; CODE XREF: sub_67E0ADC0+7Ap
					; sub_67E0AEE0+Ap ...
; LPVOID __stdcall MapViewOfFile(HANDLE	hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap)
		extrn MapViewOfFile:dword ; CODE XREF: sub_67E0B550+62p
					; sub_67E10330+19Ap
					; DATA XREF: ...
; BOOL __stdcall MoveFileExA(LPCSTR lpExistingFileName,	LPCSTR lpNewFileName, DWORD dwFlags)
		extrn MoveFileExA:dword	; CODE XREF: sub_67E0A200+330p
					; DATA XREF: sub_67E0A200+330r
; int __stdcall	MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr,	int cchWideChar)
		extrn MultiByteToWideChar:dword	; CODE XREF: .text:67E0D8C3p
					; DATA XREF: .text:67E0D88Fr
; HANDLE __stdcall OpenFileMappingA(DWORD dwDesiredAccess, BOOL	bInheritHandle,	LPCSTR lpName)
		extrn OpenFileMappingA:dword ; CODE XREF: sub_67E0B550+34p
					; DATA XREF: sub_67E0B550+Br
; void __stdcall OutputDebugStringA(LPCSTR lpOutputString)
		extrn OutputDebugStringA:dword ; CODE XREF: sub_67DFABC0+110p
					; sub_67E162F0+6Bp ...
; BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount)
		extrn QueryPerformanceCounter:dword ; CODE XREF: sub_67E17E60+8Bp
					; DATA XREF: sub_67E17E60+8Br
; BOOL __stdcall ReadFile(HANDLE hFile,	LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
		extrn ReadFile:dword	; CODE XREF: sub_67E0A6A0+1FCp
					; DATA XREF: sub_67E0A6A0+1FCr
; BOOL __stdcall ReleaseMutex(HANDLE hMutex)
		extrn ReleaseMutex:dword ; CODE	XREF: sub_67E0F1A0+61p
					; sub_67E0F1A0+80p ...
; BOOL __stdcall RemoveDirectoryA(LPCSTR lpPathName)
		extrn RemoveDirectoryA:dword ; CODE XREF: .text:67E10D02p
					; DATA XREF: .text:67E10D02r
; DWORD	__stdcall ResumeThread(HANDLE hThread)
		extrn ResumeThread:dword ; CODE	XREF: sub_67E0C240+1B7p
					; sub_67E0C240+1EDp
					; DATA XREF: ...
; DWORD	__stdcall SearchPathA(LPCSTR lpPath, LPCSTR lpFileName,	LPCSTR lpExtension, DWORD nBufferLength, LPSTR lpBuffer, LPSTR *lpFilePart)
		extrn SearchPathA:dword	; CODE XREF: sub_67E0FCC0+1C1p
					; DATA XREF: sub_67E0FCC0+18Er
; BOOL __stdcall SetEvent(HANDLE hEvent)
		extrn SetEvent:dword	; CODE XREF: sub_67E11510+30p
					; sub_67E11560+2Fp ...
; BOOL __stdcall SetHandleInformation(HANDLE hObject, DWORD dwMask, DWORD dwFlags)
		extrn SetHandleInformation:dword ; CODE	XREF: sub_67E0E8E0+637p
					; .text:67E0FB12p ...
; void __stdcall SetLastError(DWORD dwErrCode)
		extrn SetLastError:dword ; CODE	XREF: sub_67E0B2F0+10p
					; .text:67E15CF7p ...
; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
		extrn SetUnhandledExceptionFilter:dword	; CODE XREF: .text:67E17E1Fp
					; DATA XREF: .text:67E17E1Fr
; void __stdcall Sleep(DWORD dwMilliseconds)
		extrn Sleep:dword	; CODE XREF: sub_67DC1040+37p
					; sub_67DC1040+B0p ...
; DWORD	__stdcall SuspendThread(HANDLE hThread)
		extrn SuspendThread:dword ; CODE XREF: sub_67E0C240+5Bp
					; DATA XREF: sub_67E0C240+5Br
; BOOL __stdcall TerminateProcess(HANDLE hProcess, UINT	uExitCode)
		extrn TerminateProcess:dword ; CODE XREF: .text:67E141A9p
					; .text:67E17E49p
					; DATA XREF: ...
; DWORD	__stdcall TlsAlloc()
		extrn TlsAlloc:dword	; CODE XREF: sub_67E114D0:loc_67E114F0p
					; DATA XREF: sub_67E114D0:loc_67E114F0r
; BOOL __stdcall TlsFree(DWORD dwTlsIndex)
		extrn TlsFree:dword	; CODE XREF: sub_67E11910+66p
					; DATA XREF: sub_67E11910+66r
; LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)
		extrn TlsGetValue:dword	; CODE XREF: sub_67E115F0+25p
					; sub_67E11910+30p ...
; BOOL __stdcall TlsSetValue(DWORD dwTlsIndex, LPVOID lpTlsValue)
		extrn TlsSetValue:dword	; CODE XREF: sub_67E115F0+1AFp
					; sub_67E11910+55p ...
; LONG __stdcall UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
		extrn UnhandledExceptionFilter:dword ; CODE XREF: .text:67E17E2Fp
					; DATA XREF: .text:67E17E2Fr
; BOOL __stdcall UnmapViewOfFile(LPCVOID lpBaseAddress)
		extrn UnmapViewOfFile:dword ; CODE XREF: sub_67E0B550+88p
					; sub_67E10330+1E3p
					; DATA XREF: ...
; BOOL __stdcall VirtualProtect(LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect)
		extrn VirtualProtect:dword ; CODE XREF:	sub_67E17940+10Bp
					; sub_67E17A90+1B2p
					; DATA XREF: ...
; SIZE_T __stdcall VirtualQuery(LPCVOID	lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, SIZE_T dwLength)
		extrn VirtualQuery:dword ; CODE	XREF: sub_67E17940+A8p
					; sub_67E17A90+184p
					; DATA XREF: ...
; DWORD	__stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
		extrn WaitForSingleObject:dword	; CODE XREF: sub_67E0C170+98p
					; sub_67E0F1A0+ABp ...
; int __stdcall	WideCharToMultiByte(UINT CodePage, DWORD dwFlags, LPCWSTR lpWideCharStr, int cchWideChar, LPSTR	lpMultiByteStr,	int cbMultiByte, LPCSTR	lpDefaultChar, LPBOOL lpUsedDefaultChar)
		extrn WideCharToMultiByte:dword	; CODE XREF: .text:67E0D768p
					; .text:67E0D7B8p
					; DATA XREF: ...
; BOOL __stdcall WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite,	LPDWORD	lpNumberOfBytesWritten,	LPOVERLAPPED lpOverlapped)
		extrn WriteFile:dword	; CODE XREF: sub_67E0A200+1CAp
					; sub_67E11440+38p ...

;
; Imports from msvcrt.dll
;
; int __cdecl _putenv(const char *EnvString)
		extrn __imp__putenv:dword ; DATA XREF: _putenvr
; char *__cdecl	_strdup(const char *Src)
		extrn __imp__strdup:dword ; DATA XREF: _strdupr
; int __cdecl _stricmp(const char *Str1, const char *Str2)
		extrn __imp__stricmp:dword ; DATA XREF:	_stricmpr
; int __cdecl _strnicmp(const char *Str1, const	char *Str, size_t MaxCount)
		extrn __imp__strnicmp:dword ; DATA XREF: _strnicmpr

;
; Imports from msvcrt.dll
;
		extrn __imp___dllonexit:dword ;	DATA XREF: __dllonexitr
		extrn __imp__amsg_exit:dword ; DATA XREF: _amsg_exitr
; char **environ
		extrn _environ:dword	; DATA XREF: .text:67E09360r
					; .text:67E099F7r ...
; int *__cdecl errno()
		extrn _errno:dword	; CODE XREF: sub_67E09440+3p
					; sub_67E09460+3p ...
; void __cdecl __noreturn exit(int Code)
		extrn _exit:dword	; CODE XREF: sub_67E0CD80+Ap
					; DATA XREF: sub_67E0CD80+Ar
		extrn __imp__initterm:dword ; DATA XREF: _inittermr
		extrn _iob:dword	; DATA XREF: sub_67DFAD60+1Dr
					; sub_67DFAD60+86r ...
		extrn __imp__lock:dword	; DATA XREF: _lockr
		extrn _mbsrchr:dword	; CODE XREF: sub_67DFAAC0+76p
					; sub_67DFAAC0+8Ep ...
; _onexit_t __cdecl onexit(_onexit_t Func)
		extrn _onexit:dword	; CODE XREF: sub_67E17700+A3p
					; DATA XREF: sub_67E17700+A3r
; int snprintf(char *Dest, size_t Count, const char *Format, ...)
		extrn _snprintf:dword	; CODE XREF: sub_67E0FCC0+3B6p
					; DATA XREF: sub_67E0FCC0+3B6r
		extrn __imp__unlock:dword ; DATA XREF: _unlockr
; int __cdecl _vsnprintf(char *DstBuf, size_t MaxCount,	const char *Format, va_list ArgList)
		extrn __imp__vsnprintf:dword ; CODE XREF: sub_67E0D9B0+38p
					; DATA XREF: sub_67E0D9B0+1Fr ...
; void __cdecl abort()
		extrn __imp_abort:dword	; DATA XREF: abortr
; void *__cdecl	calloc(size_t NumOfElements, size_t SizeOfElements)
		extrn __imp_calloc:dword ; DATA	XREF: callocr
; void __cdecl __noreturn exit(int Code)
		extrn __imp_exit:dword	; DATA XREF: exitr
; int __cdecl fclose(FILE *File)
		extrn __imp_fclose:dword ; DATA	XREF: fcloser
; int __cdecl fflush(FILE *File)
		extrn __imp_fflush:dword ; DATA	XREF: fflushr
; FILE *__cdecl	fopen(const char *Filename, const char *Mode)
		extrn __imp_fopen:dword	; DATA XREF: fopenr
; int fprintf(FILE *File, const	char *Format, ...)
		extrn __imp_fprintf:dword ; DATA XREF: fprintfr
; size_t __cdecl fread(void *DstBuf, size_t ElementSize, size_t	Count, FILE *File)
		extrn __imp_fread:dword	; DATA XREF: freadr
; void __cdecl free(void *Memory)
		extrn __imp_free:dword	; DATA XREF: freer
; size_t __cdecl fwrite(const void *Str, size_t	Size, size_t Count, FILE *File)
		extrn __imp_fwrite:dword ; DATA	XREF: fwriter
; char *__cdecl	getenv(const char *VarName)
		extrn __imp_getenv:dword ; DATA	XREF: getenvr
; int __cdecl isalpha(int C)
		extrn isalpha:dword	; CODE XREF: .text:67E15B7Bp
					; .text:67E15C3Bp
					; DATA XREF: ...
; void *__cdecl	malloc(size_t Size)
		extrn __imp_malloc:dword ; DATA	XREF: mallocr
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn __imp_memcpy:dword ; DATA	XREF: memcpyr
; void *__cdecl	memmove(void *Dst, const void *Src, size_t Size)
		extrn __imp_memmove:dword ; DATA XREF: memmover
; void *__cdecl	memset(void *Dst, int Val, size_t Size)
		extrn __imp_memset:dword ; DATA	XREF: memsetr
; int printf(const char	*Format, ...)
		extrn __imp_printf:dword ; DATA	XREF: printfr
; int __cdecl puts(const char *Str)
		extrn __imp_puts:dword	; DATA XREF: putsr
; int __cdecl rand()
		extrn __imp_rand:dword	; DATA XREF: randr
; void *__cdecl	realloc(void *Memory, size_t NewSize)
		extrn __imp_realloc:dword ; DATA XREF: reallocr
; int sprintf(char *Dest, const	char *Format, ...)
		extrn __imp_sprintf:dword ; DATA XREF: sprintfr
; void __cdecl srand(unsigned int Seed)
		extrn __imp_srand:dword	; DATA XREF: srandr
; int sscanf(const char	*Src, const char *Format, ...)
		extrn __imp_sscanf:dword ; DATA	XREF: sscanfr
; char *__cdecl	strcat(char *Dest, const char *Source)
		extrn __imp_strcat:dword ; DATA	XREF: strcatr
; char *__cdecl	strchr(const char *Str,	int Val)
		extrn __imp_strchr:dword ; DATA	XREF: strchrr
; int __cdecl strcmp(const char	*Str1, const char *Str2)
		extrn __imp_strcmp:dword ; DATA	XREF: strcmpr
; char *__cdecl	strcpy(char *Dest, const char *Source)
		extrn __imp_strcpy:dword ; DATA	XREF: strcpyr
; char *__cdecl	strerror(int)
		extrn __imp_strerror:dword ; DATA XREF:	strerrorr
; size_t __cdecl strlen(const char *Str)
		extrn __imp_strlen:dword ; DATA	XREF: strlenr
; int __cdecl strncmp(const char *Str1,	const char *Str2, size_t MaxCount)
		extrn __imp_strncmp:dword ; DATA XREF: strncmpr
; char *__cdecl	strncpy(char *Dest, const char *Source,	size_t Count)
		extrn __imp_strncpy:dword ; DATA XREF: strncpyr
; char *__cdecl	strrchr(const char *Str, int Ch)
		extrn __imp_strrchr:dword ; DATA XREF: strrchrr
; __int32 __cdecl strtol(const char *Str, char **EndPtr, int Radix)
		extrn __imp_strtol:dword ; DATA	XREF: strtolr
; unsigned __int32 __cdecl strtoul(const char *Str, char **EndPtr, int Radix)
		extrn __imp_strtoul:dword ; DATA XREF: strtoulr
; int __cdecl vfprintf(FILE *File, const char *Format, va_list ArgList)
		extrn __imp_vfprintf:dword ; DATA XREF:	vfprintfr
; int __cdecl vsprintf(char *Dest, const char *Format, va_list Args)
		extrn __imp_vsprintf:dword ; DATA XREF:	vsprintfr

;
; Imports from WS2_32.dll
;
; int __stdcall	WSAGetLastError()
		extrn WSAGetLastError:dword ; CODE XREF: sub_67E0CBF0+36p
					; sub_67E0CC70+6Ep ...
; int __stdcall	WSASend(SOCKET s, LPWSABUF lpBuffers, DWORD dwBufferCount, LPDWORD lpNumberOfBytesSent,	DWORD dwFlags, LPWSAOVERLAPPED lpOverlapped, LPWSAOVERLAPPED_COMPLETION_ROUTINE	lpCompletionRoutine)
		extrn WSASend:dword	; CODE XREF: sub_67E0DDA0+1D3p
					; DATA XREF: sub_67E0DDA0+1D3r
; void __stdcall WSASetLastError(int iError)
		extrn WSASetLastError:dword ; CODE XREF: sub_67E16950+36p
					; DATA XREF: sub_67E16950+36r
; int __stdcall	WSAStartup(WORD	wVersionRequested, LPWSADATA lpWSAData)
		extrn WSAStartup:dword	; CODE XREF: sub_67E0DA50+26p
					; sub_67E0E8E0+37Fp ...
; int __stdcall	__WSAFDIsSet(SOCKET fd,	fd_set *)
		extrn __imp___WSAFDIsSet:dword ; DATA XREF: __WSAFDIsSetr
; SOCKET __stdcall accept(SOCKET s, struct sockaddr *addr, int *addrlen)
		extrn accept:dword	; CODE XREF: sub_67E0CBF0+2Ap
					; sub_67E0DAE0+139p
					; DATA XREF: ...
; int __stdcall	bind(SOCKET s, const struct sockaddr *name, int	namelen)
		extrn bind:dword	; CODE XREF: sub_67E0DAE0+8Ap
					; sub_67E0E8E0+1B5p
					; DATA XREF: ...
; int __stdcall	closesocket(SOCKET s)
		extrn closesocket:dword	; CODE XREF: sub_67E0CC70+64p
					; sub_67E0DAE0+1FAp ...
; int __stdcall	connect(SOCKET s, const	struct sockaddr	*name, int namelen)
		extrn connect:dword	; CODE XREF: sub_67E0DAE0+118p
					; sub_67E10680+19Cp ...
; struct hostent *__stdcall gethostbyaddr(const	char *addr, int	len, int type)
		extrn gethostbyaddr:dword ; CODE XREF: sub_67E16FE0+1D7p
					; DATA XREF: sub_67E16FE0+1D7r
; struct hostent *__stdcall gethostbyname(const	char *name)
		extrn gethostbyname:dword ; CODE XREF: sub_67E175F0+2Cp
					; DATA XREF: sub_67E175F0+2Cr
; struct servent *__stdcall getservbyname(const	char *name, const char *proto)
		extrn getservbyname:dword ; CODE XREF: sub_67E16C20+148p
					; sub_67E16C20+2F7p
					; DATA XREF: ...
; struct servent *__stdcall getservbyport(int port, const char *proto)
		extrn getservbyport:dword ; CODE XREF: sub_67E16FE0+11Dp
					; DATA XREF: sub_67E16FE0+11Dr
; int __stdcall	getsockname(SOCKET s, struct sockaddr *name, int *namelen)
		extrn getsockname:dword	; CODE XREF: sub_67E0DAE0+D0p
					; sub_67E0E8E0+53Ap
					; DATA XREF: ...
; u_long __stdcall htonl(u_long	hostlong)
		extrn htonl:dword	; CODE XREF: sub_67E0DAE0+6Ep
					; sub_67E16C20+378p
					; DATA XREF: ...
; u_short __stdcall htons(u_short hostshort)
		extrn htons:dword	; CODE XREF: sub_67E16C20+2BCp
					; DATA XREF: sub_67E16C20+2BCr
; unsigned __int32 __stdcall inet_addr(const char *cp)
		extrn inet_addr:dword	; CODE XREF: sub_67E17270+38p
					; DATA XREF: sub_67E17270+38r
; char *__stdcall inet_ntoa(struct in_addr in)
		extrn inet_ntoa:dword	; CODE XREF: sub_67E16C20+245p
					; sub_67E16FE0+18Ep
					; DATA XREF: ...
; int __stdcall	ioctlsocket(SOCKET s, __int32 cmd, u_long *argp)
		extrn ioctlsocket:dword	; CODE XREF: sub_67E0D430+70p
					; sub_67E0DAE0+17Ep
					; DATA XREF: ...
; int __stdcall	listen(SOCKET s, int backlog)
		extrn listen:dword	; CODE XREF: sub_67E0DAE0+A7p
					; sub_67E0E8E0+1D2p
					; DATA XREF: ...
; u_short __stdcall ntohs(u_short netshort)
		extrn ntohs:dword	; CODE XREF: sub_67E16FE0+68p
					; DATA XREF: sub_67E16FE0+68r
; int __stdcall	recv(SOCKET s, char *buf, int len, int flags)
		extrn recv:dword	; CODE XREF: sub_67E0E140+114p
					; sub_67E0F840+181p
					; DATA XREF: ...
; int __stdcall	select(int nfds, fd_set	*readfds, fd_set *writefds, fd_set *exceptfds, const struct timeval *timeout)
		extrn select:dword	; CODE XREF: sub_67E0CD90+354p
					; DATA XREF: sub_67E0CD90+354r
; int __stdcall	send(SOCKET s, const char *buf,	int len, int flags)
		extrn send:dword	; CODE XREF: sub_67E0E020+77p
					; sub_67E0E330+9Bp ...
; SOCKET __stdcall socket(int af, int type, int	protocol)
		extrn socket:dword	; CODE XREF: sub_67E0DAE0+2Dp
					; sub_67E0DAE0+F9p ...


; Section 7. (virtual address 0007A000)
; Virtual size			: 0000002C (	 44.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00074E00
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_CRT		segment	dword public 'DATA' use32
		assume cs:_CRT
		;org 67E3A000h
dword_67E3A000	dd 0			; DATA XREF: sub_67DC1040+1DDo
dword_67E3A004	dd 0			; DATA XREF: sub_67DC1040+1D5o
dword_67E3A008	dd 0			; DATA XREF: sub_67DC1040+1C9o
		dd offset sub_67DC1000
dword_67E3A010	dd 2 dup(0)		; DATA XREF: sub_67DC1040+1C1o
TlsCallbacks	dd offset TlsCallback_0	; DATA XREF: .tls:TlsCallbacks_ptro
		dd offset TlsCallback_1
		dd 0
		align 8
dword_67E3A028	dd 76h dup(0)		; DATA XREF: TlsCallback_0:loc_67E17871o
					; TlsCallback_0+36o ...
		align 1000h
_CRT		ends

; Section 8. (virtual address 0007B000)
; Virtual size			: 00000020 (	 32.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00075000
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_tls		segment	dword public 'DATA' use32
		assume cs:_tls
		;org 67E3B000h
TlsDirectory	dd offset TlsStart
TlsEnd_ptr	dd offset TlsEnd
TlsIndex_ptr	dd offset TlsIndex
TlsCallbacks_ptr dd offset TlsCallbacks
TlsSizeOfZeroFill dd 0
TlsCharacteristics dd 0
		db 0
TlsStart	db 3 dup(0)		; DATA XREF: .tls:TlsDirectoryo
TlsEnd		dd 79h dup(0)		; DATA XREF: .tls:TlsEnd_ptro
		align 1000h
_tls		ends


		end DllEntryPoint

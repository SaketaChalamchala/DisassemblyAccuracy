;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	2A02C49CA0A36157BA4D8E67149AAE4D
; Input	CRC32 :	A7BC7B16

; ---------------------------------------------------------------------------
; File Name   :	C:\compspace\compare\gpg\dlls\full\libpangocairo-1.0-0.dll
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	6D4C0000
; Section 1. (virtual address 00001000)
; Virtual size			: 00006240 (  25152.)
; Section size in file		: 00006400 (  25600.)
; Offset to raw	data for section: 00000400
; Flags	60500060: Text Data Executable Readable
; Alignment	: 16 bytes

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6D4C1000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+8]
		mov	dword ptr [esp+8], offset dword_6D4CB010
		mov	dword ptr [esp+4], offset Memory
		mov	[esp], eax
		call	__dllonexit
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C1030	proc near		; CODE XREF: sub_6D4C6E90+31p
					; sub_6D4C7210+12p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_10], offset dword_6D4CB010
		mov	[esp+18h+var_14], offset Memory
		mov	[esp+18h+var_18], eax
		call	__dllonexit
		leave
		cmp	eax, 1
		sbb	eax, eax
		retn
sub_6D4C1030	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C1060	proc near		; CODE XREF: DllEntryPoint+45p
					; DllEntryPoint+C2p

Memory		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	edx, ds:Memory
		test	edx, edx
		jz	short loc_6D4C10A5
		mov	ebx, ds:dword_6D4CB010

loc_6D4C1077:				; CODE XREF: sub_6D4C1060+22j
		sub	ebx, 4
		cmp	edx, ebx
		ja	short loc_6D4C1093

loc_6D4C107E:				; CODE XREF: sub_6D4C1060+31j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6D4C1077
		call	eax
		mov	edx, ds:Memory
		sub	ebx, 4
		cmp	edx, ebx
		jbe	short loc_6D4C107E

loc_6D4C1093:				; CODE XREF: sub_6D4C1060+1Cj
		mov	[esp+18h+Memory], edx ;	Memory
		call	free
		mov	ds:Memory, 0

loc_6D4C10A5:				; CODE XREF: sub_6D4C1060+Fj
		mov	[esp+18h+Memory], 0 ; File
		call	fflush
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
sub_6D4C1060	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)
		public DllEntryPoint
DllEntryPoint	proc near

Size		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
hinstDLL	= dword	ptr  8
fdwReason	= dword	ptr  0Ch
lpReserved	= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	[ebp+var_C], ebx
		mov	ebx, [ebp+fdwReason]
		mov	[ebp+var_8], esi
		mov	esi, [ebp+hinstDLL]
		mov	[ebp+var_4], edi
		mov	edi, [ebp+lpReserved]
		cmp	ebx, 1
		jz	short loc_6D4C1120
		mov	[esp+38h+var_30], edi
		mov	[esp+38h+var_34], ebx
		mov	[esp+38h+Size],	esi
		call	sub_6D4C6F10
		sub	esp, 0Ch
		test	ebx, ebx
		jnz	short loc_6D4C110D
		mov	edx, ds:Memory
		test	edx, edx
		jz	loc_6D4C1190
		mov	[ebp+var_1C], eax
		call	sub_6D4C1060
		mov	eax, [ebp+var_1C]

loc_6D4C110D:				; CODE XREF: DllEntryPoint+32j
					; DllEntryPoint+C0j ...
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C1120:				; CODE XREF: DllEntryPoint+1Bj
		mov	[esp+38h+Size],	80h ; Size
		call	malloc
		test	eax, eax
		mov	ds:Memory, eax
		jz	short loc_6D4C1197
		mov	dword ptr [eax], 0
		mov	ds:dword_6D4CB010, eax
		mov	eax, ds:off_6D4C9AFC
		test	eax, eax
		jz	short loc_6D4C115D
		mov	[esp+38h+var_30], edi
		mov	[esp+38h+var_34], 2
		mov	[esp+38h+Size],	esi
		call	eax ; TlsCallback_0
		sub	esp, 0Ch

loc_6D4C115D:				; CODE XREF: DllEntryPoint+87j
		call	sub_6D4C6CB0
		call	sub_6D4C6EF0
		mov	[esp+38h+var_30], edi
		mov	[esp+38h+var_34], 1
		mov	[esp+38h+Size],	esi
		call	sub_6D4C6F10
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_6D4C110D
		call	sub_6D4C1060
		xor	eax, eax
		jmp	short loc_6D4C110D
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C1190:				; CODE XREF: DllEntryPoint+3Cj
		xor	eax, eax
		jmp	loc_6D4C110D
; ---------------------------------------------------------------------------

loc_6D4C1197:				; CODE XREF: DllEntryPoint+73j
		call	_errno
		mov	dword ptr [eax], 0Ch
		xor	eax, eax
		jmp	loc_6D4C110D
DllEntryPoint	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C11B0	proc near		; CODE XREF: sub_6D4C7210+6p

lpModuleName	= dword	ptr -18h
lpProcName	= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+18h+lpModuleName],	offset ModuleName ; "libgcc_s_dw2-1.dll"
		call	GetModuleHandleA
		push	edx
		test	eax, eax
		jz	short loc_6D4C122C
		mov	[esp+18h+lpProcName], offset ProcName ;	"__register_frame_info"
		mov	[esp+18h+lpModuleName],	eax ; hModule
		call	GetProcAddress
		sub	esp, 8

loc_6D4C11DA:				; CODE XREF: sub_6D4C11B0+81j
		test	eax, eax
		jz	short loc_6D4C11EF
		mov	[esp+18h+lpProcName], offset dword_6D4CB020
		mov	[esp+18h+lpModuleName],	offset dword_6D4CA000
		call	eax

loc_6D4C11EF:				; CODE XREF: sub_6D4C11B0+2Cj
		mov	ecx, dword_6D4C8004
		test	ecx, ecx
		jz	short locret_6D4C122A
		mov	[esp+18h+lpModuleName],	offset aLibgcj11_dll ; "libgcj-11.dll"
		call	GetModuleHandleA
		push	edx
		test	eax, eax
		jz	short loc_6D4C1234
		mov	[esp+18h+lpProcName], offset a_jv_registercl ; "_Jv_RegisterClasses"
		mov	[esp+18h+lpModuleName],	eax ; hModule
		call	GetProcAddress
		sub	esp, 8

loc_6D4C121D:				; CODE XREF: sub_6D4C11B0+89j
		test	eax, eax
		jz	short locret_6D4C122A
		mov	[esp+18h+lpModuleName],	offset dword_6D4C8004
		call	eax

locret_6D4C122A:			; CODE XREF: sub_6D4C11B0+47j
					; sub_6D4C11B0+6Fj
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C122C:				; CODE XREF: sub_6D4C11B0+15j
		mov	eax, 0
		jmp	short loc_6D4C11DA
; ---------------------------------------------------------------------------
		align 4

loc_6D4C1234:				; CODE XREF: sub_6D4C11B0+58j
		mov	eax, 0
		jmp	short loc_6D4C121D
sub_6D4C11B0	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C123C	proc near		; DATA XREF: sub_6D4C7210+Bo

lpModuleName	= dword	ptr -18h
lpProcName	= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+18h+lpModuleName],	offset ModuleName ; "libgcc_s_dw2-1.dll"
		call	GetModuleHandleA
		push	ecx
		test	eax, eax
		jz	short loc_6D4C1278
		mov	[esp+18h+lpProcName], offset a__deregister_f ; "__deregister_frame_info"
		mov	[esp+18h+lpModuleName],	eax ; hModule
		call	GetProcAddress
		sub	esp, 8

loc_6D4C1266:				; CODE XREF: sub_6D4C123C+41j
		test	eax, eax
		jz	short locret_6D4C1273
		mov	[esp+18h+lpModuleName],	offset dword_6D4CA000
		call	eax

locret_6D4C1273:			; CODE XREF: sub_6D4C123C+2Cj
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C1278:				; CODE XREF: sub_6D4C123C+15j
		mov	eax, 0
		jmp	short loc_6D4C1266
sub_6D4C123C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C1280	proc near		; CODE XREF: pango_cairo_context_set_resolution+13p
					; pango_cairo_context_get_resolution+Bp ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, eax
		mov	edi, edx
		mov	esi, ds:dword_6D4CB038
		test	esi, esi
		jnz	short loc_6D4C12AA
		mov	[esp+28h+var_28], offset aPangoCairoCont ; "pango-cairo-context-info"
		call	g_quark_from_static_string
		mov	esi, eax
		mov	ds:dword_6D4CB038, eax

loc_6D4C12AA:				; CODE XREF: sub_6D4C1280+15j
		mov	[esp+28h+var_24], 50h
		mov	[esp+28h+var_28], ebx
		call	g_type_check_instance_cast
		mov	[esp+28h+var_24], esi
		mov	[esp+28h+var_28], eax
		call	g_object_get_qdata
		mov	esi, eax
		test	eax, eax
		jz	short loc_6D4C12D8

loc_6D4C12CC:				; CODE XREF: sub_6D4C1280+5Aj
					; sub_6D4C1280+A5j
		mov	eax, esi
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C12D8:				; CODE XREF: sub_6D4C1280+4Aj
		test	edi, edi
		jz	short loc_6D4C12CC
		mov	[esp+28h+var_28], 20h
		call	g_slice_alloc0
		mov	esi, eax
		mov	dword ptr [eax], 0
		mov	dword ptr [eax+4], 0BFF00000h
		mov	edi, ds:dword_6D4CB038
		mov	[esp+28h+var_24], 50h
		mov	[esp+28h+var_28], ebx
		call	g_type_check_instance_cast
		mov	[esp+28h+var_1C], offset sub_6D4C1328
		mov	[esp+28h+var_20], esi
		mov	[esp+28h+var_24], edi
		mov	[esp+28h+var_28], eax
		call	g_object_set_qdata_full
		jmp	short loc_6D4C12CC
sub_6D4C1280	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C1328	proc near		; DATA XREF: sub_6D4C1280+8Do

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+8]
		test	eax, eax
		jz	short loc_6D4C1341
		mov	[esp+18h+var_18], eax
		call	cairo_font_options_destroy

loc_6D4C1341:				; CODE XREF: sub_6D4C1328+Fj
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	short loc_6D4C1350
		mov	[esp+18h+var_18], eax
		call	cairo_font_options_destroy

loc_6D4C1350:				; CODE XREF: sub_6D4C1328+1Ej
		mov	eax, [ebx+10h]
		test	eax, eax
		jz	short loc_6D4C135F
		mov	[esp+18h+var_18], eax
		call	cairo_font_options_destroy

loc_6D4C135F:				; CODE XREF: sub_6D4C1328+2Dj
		mov	eax, [ebx+1Ch]
		test	eax, eax
		jz	short loc_6D4C136E
		mov	edx, [ebx+18h]
		mov	[esp+18h+var_18], edx
		call	eax

loc_6D4C136E:				; CODE XREF: sub_6D4C1328+3Cj
		mov	[esp+18h+var_14], ebx
		mov	[esp+18h+var_18], 20h
		call	g_slice_free1
		add	esp, 14h
		pop	ebx
		leave
		retn
sub_6D4C1328	endp

; Exported entry   5. pango_cairo_context_set_resolution

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_context_set_resolution
pango_cairo_context_set_resolution proc	near

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		mov	ebx, [ebp+arg_4]
		mov	esi, [ebp+arg_8]
		mov	edx, 1
		mov	eax, [ebp+arg_0]
		call	sub_6D4C1280
		mov	[eax], ebx
		mov	[eax+4], esi
		pop	ebx
		pop	esi
		leave
		retn
pango_cairo_context_set_resolution endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   2. pango_cairo_context_get_resolution

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_context_get_resolution
pango_cairo_context_get_resolution proc	near ; CODE XREF: sub_6D4C5634+7Dp
					; sub_6D4C6224+14p

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		xor	edx, edx
		mov	eax, [ebp+arg_0]
		call	sub_6D4C1280
		test	eax, eax
		jz	short loc_6D4C13C0
		fld	qword ptr [eax]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C13C0:				; CODE XREF: pango_cairo_context_get_resolution+12j
		fld1
		fchs
		leave
		retn
pango_cairo_context_get_resolution endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   4. pango_cairo_context_set_font_options

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_context_set_font_options
pango_cairo_context_set_font_options proc near ; CODE XREF: sub_6D4C1D8C+2DDp
					; sub_6D4C2514+151p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		call	pango_context_get_type
		test	ebx, ebx
		jz	short loc_6D4C13F9
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6D4C13E9
		cmp	[edx], eax
		jz	short loc_6D4C141C

loc_6D4C13E9:				; CODE XREF: pango_cairo_context_set_font_options+1Bj
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C141C

loc_6D4C13F9:				; CODE XREF: pango_cairo_context_set_font_options+15j
		mov	[esp+18h+var_10], offset aPango_is_conte ; "PANGO_IS_CONTEXT (context)"
		mov	[esp+18h+var_14], offset aPango_cairo_co ; "pango_cairo_context_set_font_options"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	g_return_if_fail_warning

loc_6D4C1415:				; CODE XREF: pango_cairo_context_set_font_options+85j
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C141C:				; CODE XREF: pango_cairo_context_set_font_options+1Fj
					; pango_cairo_context_set_font_options+2Fj
		mov	edx, 1
		mov	eax, ebx
		call	sub_6D4C1280
		mov	ebx, eax
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6D4C1439
		mov	[esp+18h+var_18], eax
		call	cairo_font_options_destroy

loc_6D4C1439:				; CODE XREF: pango_cairo_context_set_font_options+67j
		test	esi, esi
		jz	short loc_6D4C1468
		mov	[esp+18h+var_18], esi
		call	cairo_font_options_copy
		mov	[ebx+8], eax

loc_6D4C1448:				; CODE XREF: pango_cairo_context_set_font_options+A7j
		mov	eax, [ebx+10h]
		test	eax, eax
		jz	short loc_6D4C1415
		mov	[esp+18h+var_18], eax
		call	cairo_font_options_destroy
		mov	dword ptr [ebx+10h], 0
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C1468:				; CODE XREF: pango_cairo_context_set_font_options+73j
		mov	dword ptr [ebx+8], 0
		jmp	short loc_6D4C1448
pango_cairo_context_set_font_options endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   1. pango_cairo_context_get_font_options

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_context_get_font_options
pango_cairo_context_get_font_options proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		call	pango_context_get_type
		test	ebx, ebx
		jz	short loc_6D4C14A1
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6D4C1491
		cmp	[edx], eax
		jz	short loc_6D4C14C8

loc_6D4C1491:				; CODE XREF: pango_cairo_context_get_font_options+17j
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C14C8

loc_6D4C14A1:				; CODE XREF: pango_cairo_context_get_font_options+11j
		mov	[esp+18h+var_10], offset aPango_is_conte ; "PANGO_IS_CONTEXT (context)"
		mov	[esp+18h+var_14], offset aPango_cairo__0 ; "pango_cairo_context_get_font_options"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	g_return_if_fail_warning
		xor	eax, eax

loc_6D4C14BF:				; CODE XREF: pango_cairo_context_get_font_options+6Ej
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C14C8:				; CODE XREF: pango_cairo_context_get_font_options+1Bj
					; pango_cairo_context_get_font_options+2Bj
		xor	edx, edx
		mov	eax, ebx
		call	sub_6D4C1280
		test	eax, eax
		jz	short loc_6D4C14E0
		mov	eax, [eax+8]
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C14E0:				; CODE XREF: pango_cairo_context_get_font_options+5Fj
		xor	eax, eax
		jmp	short loc_6D4C14BF
pango_cairo_context_get_font_options endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C14E4	proc near		; CODE XREF: sub_6D4C1544+70p
					; sub_6D4C5634+2A5p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	edx, 1
		mov	eax, [ebp+arg_0]
		call	sub_6D4C1280
		mov	ebx, eax
		mov	eax, [eax+10h]
		test	eax, eax
		jz	short loc_6D4C1508
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C1508:				; CODE XREF: sub_6D4C14E4+1Bj
		call	cairo_font_options_create
		mov	[ebx+10h], eax
		mov	edx, [ebx+0Ch]
		test	edx, edx
		jz	short loc_6D4C1526
		mov	[esp+18h+var_14], edx
		mov	[esp+18h+var_18], eax
		call	cairo_font_options_merge
		mov	eax, [ebx+10h]

loc_6D4C1526:				; CODE XREF: sub_6D4C14E4+31j
		mov	edx, [ebx+8]
		test	edx, edx
		jz	short loc_6D4C1539
		mov	[esp+18h+var_14], edx
		mov	[esp+18h+var_18], eax
		call	cairo_font_options_merge

loc_6D4C1539:				; CODE XREF: sub_6D4C14E4+47j
		mov	eax, [ebx+10h]
		add	esp, 14h
		pop	ebx
		leave
		retn
sub_6D4C14E4	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C1544	proc near		; CODE XREF: pango_cairo_update_context+62j
					; pango_cairo_update_layout+64p

var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_BC		= dword	ptr -0BCh
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= byte ptr -0A8h
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0CCh
		mov	[ebp+var_AC], eax
		mov	ebx, edx
		lea	eax, [ebp+var_A8]
		mov	[ebp+var_BC], eax
		mov	esi, offset dword_6D4C9100
		mov	ecx, 0Ch
		mov	edi, eax
		rep movsd
		mov	edx, 1
		mov	eax, ebx
		call	sub_6D4C1280
		mov	esi, eax
		mov	eax, [ebp+var_AC]
		mov	[esp+0D8h+var_D8], eax
		call	cairo_get_target
		mov	edi, eax
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	loc_6D4C16B4

loc_6D4C159B:				; CODE XREF: sub_6D4C1544+178j
		mov	[esp+0D8h+var_D4], eax
		mov	[esp+0D8h+var_D8], edi
		call	cairo_surface_get_font_options
		mov	edi, [esi+10h]
		mov	dword ptr [esi+10h], 0
		mov	[esp+0D8h+var_D8], ebx
		call	sub_6D4C14E4
		mov	esi, eax
		test	edi, edi
		jz	loc_6D4C1694
		mov	[esp+0D8h+var_D4], edi
		mov	[esp+0D8h+var_D8], eax
		call	cairo_font_options_equal
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	[ebp+var_B0], eax
		mov	[esp+0D8h+var_D8], edi
		call	cairo_font_options_destroy

loc_6D4C15E5:				; CODE XREF: sub_6D4C1544+15Aj
		lea	eax, [ebp+var_48]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_AC]
		mov	[esp+0D8h+var_D8], eax
		call	cairo_get_matrix
		mov	eax, [ebp+var_48]
		mov	edx, [ebp+var_44]
		mov	[ebp+var_78], eax
		mov	[ebp+var_74], edx
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_3C]
		mov	[ebp+var_68], eax
		mov	[ebp+var_64], edx
		mov	eax, [ebp+var_38]
		mov	edx, [ebp+var_34]
		mov	[ebp+var_70], eax
		mov	[ebp+var_6C], edx
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_2C]
		mov	[ebp+var_60], eax
		mov	[ebp+var_5C], edx
		mov	[ebp+var_58], 0
		mov	[ebp+var_54], 0
		mov	[ebp+var_50], 0
		mov	[ebp+var_4C], 0
		mov	[esp+0D8h+var_D8], ebx
		call	pango_context_get_matrix
		mov	edi, eax
		test	eax, eax
		jz	short loc_6D4C16AC

loc_6D4C1654:				; CODE XREF: sub_6D4C1544+16Ej
		mov	[esp+0D8h+var_D8], esi
		call	cairo_font_options_get_hint_metrics
		dec	eax
		jz	short loc_6D4C16A4
		lea	eax, [ebp+var_78]
		mov	ecx, 30h
		mov	esi, eax
		repe cmpsb
		jz	short loc_6D4C1677
		mov	[ebp+var_B0], 1

loc_6D4C1677:				; CODE XREF: sub_6D4C1544+127j
					; sub_6D4C1544+163j
		mov	[esp+0D8h+var_D4], eax
		mov	[esp+0D8h+var_D8], ebx
		call	pango_context_set_matrix
		mov	eax, [ebp+var_B0]
		add	esp, 0CCh
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C1694:				; CODE XREF: sub_6D4C1544+79j
		mov	[ebp+var_B0], 1
		jmp	loc_6D4C15E5
; ---------------------------------------------------------------------------
		align 4

loc_6D4C16A4:				; CODE XREF: sub_6D4C1544+119j
		lea	eax, [ebp+var_78]
		jmp	short loc_6D4C1677
; ---------------------------------------------------------------------------
		align 4

loc_6D4C16AC:				; CODE XREF: sub_6D4C1544+10Ej
		lea	edi, [ebp+var_A8]
		jmp	short loc_6D4C1654
; ---------------------------------------------------------------------------

loc_6D4C16B4:				; CODE XREF: sub_6D4C1544+51j
		call	cairo_font_options_create
		mov	[esi+0Ch], eax
		jmp	loc_6D4C159B
sub_6D4C1544	endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  30. pango_cairo_update_context

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_update_context
pango_cairo_update_context proc	near	; CODE XREF: pango_cairo_create_context+25p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		test	ebx, ebx
		jz	short loc_6D4C172C
		call	pango_context_get_type
		test	esi, esi
		jz	short loc_6D4C16F9
		mov	edx, [esi]
		test	edx, edx
		jz	short loc_6D4C16E9
		cmp	[edx], eax
		jz	short loc_6D4C171C

loc_6D4C16E9:				; CODE XREF: pango_cairo_update_context+1Fj
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], esi
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C171C

loc_6D4C16F9:				; CODE XREF: pango_cairo_update_context+19j
		mov	[esp+18h+var_10], offset aPango_is_conte ; "PANGO_IS_CONTEXT (context)"
		mov	[esp+18h+var_14], offset aPango_cairo_up ; "pango_cairo_update_context"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	g_return_if_fail_warning
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C171C:				; CODE XREF: pango_cairo_update_context+23j
					; pango_cairo_update_context+33j
		mov	edx, esi
		mov	eax, ebx
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	sub_6D4C1544
; ---------------------------------------------------------------------------
		align 4

loc_6D4C172C:				; CODE XREF: pango_cairo_update_context+10j
		mov	[esp+18h+var_10], offset aCrNull ; "cr != NULL"
		mov	[esp+18h+var_14], offset aPango_cairo_up ; "pango_cairo_update_context"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	g_return_if_fail_warning
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
pango_cairo_update_context endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   6. pango_cairo_context_set_shape_renderer

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_context_set_shape_renderer
pango_cairo_context_set_shape_renderer proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		mov	edi, [ebp+arg_8]
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_1C], eax
		call	pango_context_get_type
		test	ebx, ebx
		jz	short loc_6D4C178B
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6D4C177B
		cmp	[edx], eax
		jz	short loc_6D4C17AC

loc_6D4C177B:				; CODE XREF: pango_cairo_context_set_shape_renderer+25j
		mov	[esp+38h+var_34], eax
		mov	[esp+38h+var_38], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C17AC

loc_6D4C178B:				; CODE XREF: pango_cairo_context_set_shape_renderer+1Fj
		mov	[ebp+arg_8], offset aPango_is_conte ; "PANGO_IS_CONTEXT	(context)"
		mov	[ebp+arg_4], offset aPango_cairo__1 ; "pango_cairo_context_set_shape_renderer"
		mov	[ebp+arg_0], offset aPango ; "Pango"
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	g_return_if_fail_warning
; ---------------------------------------------------------------------------

loc_6D4C17AC:				; CODE XREF: pango_cairo_context_set_shape_renderer+29j
					; pango_cairo_context_set_shape_renderer+39j
		mov	edx, 1
		mov	eax, ebx
		call	sub_6D4C1280
		mov	ebx, eax
		mov	edx, [eax+1Ch]
		test	edx, edx
		jz	short loc_6D4C17C9
		mov	eax, [eax+18h]
		mov	[esp+38h+var_38], eax
		call	edx

loc_6D4C17C9:				; CODE XREF: pango_cairo_context_set_shape_renderer+6Fj
		mov	[ebx+14h], esi
		mov	[ebx+18h], edi
		mov	eax, [ebp+var_1C]
		mov	[ebx+1Ch], eax
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
pango_cairo_context_set_shape_renderer endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry   3. pango_cairo_context_get_shape_renderer

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_context_get_shape_renderer
pango_cairo_context_get_shape_renderer proc near ; CODE	XREF: sub_6D4C38A4+31p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		call	pango_context_get_type
		test	ebx, ebx
		jz	short loc_6D4C1811
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6D4C1801
		cmp	[edx], eax
		jz	short loc_6D4C1838

loc_6D4C1801:				; CODE XREF: pango_cairo_context_get_shape_renderer+1Bj
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C1838

loc_6D4C1811:				; CODE XREF: pango_cairo_context_get_shape_renderer+15j
		mov	[esp+18h+var_10], offset aPango_is_conte ; "PANGO_IS_CONTEXT (context)"
		mov	[esp+18h+var_14], offset aPango_cairo__2 ; "pango_cairo_context_get_shape_renderer"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	g_return_if_fail_warning
		xor	eax, eax

loc_6D4C182F:				; CODE XREF: pango_cairo_context_get_shape_renderer+7Ej
					; pango_cairo_context_get_shape_renderer+88j
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C1838:				; CODE XREF: pango_cairo_context_get_shape_renderer+1Fj
					; pango_cairo_context_get_shape_renderer+2Fj
		xor	edx, edx
		mov	eax, ebx
		call	sub_6D4C1280
		test	eax, eax
		jz	short loc_6D4C1858
		test	esi, esi
		jz	short loc_6D4C184E
		mov	edx, [eax+18h]
		mov	[esi], edx

loc_6D4C184E:				; CODE XREF: pango_cairo_context_get_shape_renderer+67j
		mov	eax, [eax+14h]
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C1858:				; CODE XREF: pango_cairo_context_get_shape_renderer+63j
		test	esi, esi
		jnz	short loc_6D4C1860
		xor	eax, eax
		jmp	short loc_6D4C182F
; ---------------------------------------------------------------------------

loc_6D4C1860:				; CODE XREF: pango_cairo_context_get_shape_renderer+7Aj
		mov	dword ptr [esi], 0
		xor	eax, eax
		jmp	short loc_6D4C182F
pango_cairo_context_get_shape_renderer endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   7. pango_cairo_create_context

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_create_context
pango_cairo_create_context proc	near	; CODE XREF: pango_cairo_create_layout+11p

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	ebx, [ebp+arg_0]
		test	ebx, ebx
		jz	short loc_6D4C18A0
		call	pango_cairo_font_map_get_default
		mov	[esp+28h+var_28], eax
		call	pango_font_map_create_context
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], ebx
		mov	[ebp+var_C], eax
		call	pango_cairo_update_context
		mov	eax, [ebp+var_C]
		add	esp, 24h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C18A0:				; CODE XREF: pango_cairo_create_context+Cj
		mov	[esp+28h+var_20], offset aCrNull ; "cr != NULL"
		mov	[esp+28h+var_24], offset aPango_cairo_cr ; "pango_cairo_create_context"
		mov	[esp+28h+var_28], offset aPango	; "Pango"
		call	g_return_if_fail_warning
		xor	eax, eax
		add	esp, 24h
		pop	ebx
		leave
		retn
pango_cairo_create_context endp

; Exported entry   8. pango_cairo_create_layout

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_create_layout
pango_cairo_create_layout proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, [ebp+arg_0]
		test	eax, eax
		jz	short loc_6D4C18F8
		mov	[esp+28h+var_28], eax
		call	pango_cairo_create_context
		mov	ebx, eax
		mov	[esp+28h+var_28], eax
		call	pango_layout_new
		mov	[esp+28h+var_28], ebx
		mov	[ebp+var_C], eax
		call	g_object_unref
		mov	eax, [ebp+var_C]
		add	esp, 24h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C18F8:				; CODE XREF: pango_cairo_create_layout+Cj
		mov	[esp+28h+var_20], offset aCrNull ; "cr != NULL"
		mov	[esp+28h+var_24], offset aPango_cairo__3 ; "pango_cairo_create_layout"
		mov	[esp+28h+var_28], offset aPango	; "Pango"
		call	g_return_if_fail_warning
		xor	eax, eax
		add	esp, 24h
		pop	ebx
		leave
		retn
pango_cairo_create_layout endp

; Exported entry  31. pango_cairo_update_layout

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_update_layout
pango_cairo_update_layout proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [ebp+arg_0]
		mov	ebx, [ebp+arg_4]
		test	esi, esi
		jz	short loc_6D4C1998
		call	pango_layout_get_type
		test	ebx, ebx
		jz	short loc_6D4C1951
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6D4C1941
		cmp	[edx], eax
		jz	short loc_6D4C1974

loc_6D4C1941:				; CODE XREF: pango_cairo_update_layout+1Fj
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C1974

loc_6D4C1951:				; CODE XREF: pango_cairo_update_layout+19j
		mov	[esp+18h+var_10], offset aPango_is_layou ; "PANGO_IS_LAYOUT (layout)"
		mov	[esp+18h+var_14], offset aPango_cairo__4 ; "pango_cairo_update_layout"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	g_return_if_fail_warning

loc_6D4C196D:				; CODE XREF: pango_cairo_update_layout+6Bj
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C1974:				; CODE XREF: pango_cairo_update_layout+23j
					; pango_cairo_update_layout+33j
		mov	[esp+18h+var_18], ebx
		call	pango_layout_get_context
		mov	edx, eax
		mov	eax, esi
		call	sub_6D4C1544
		test	eax, eax
		jz	short loc_6D4C196D
		mov	[ebp+arg_0], ebx
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	pango_layout_context_changed
; ---------------------------------------------------------------------------
		align 4

loc_6D4C1998:				; CODE XREF: pango_cairo_update_layout+10j
		mov	[esp+18h+var_10], offset aCrNull ; "cr != NULL"
		mov	[esp+18h+var_14], offset aPango_cairo__4 ; "pango_cairo_update_layout"
		mov	[esp+18h+var_18], offset aPango	; "Pango"
		call	g_return_if_fail_warning
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
pango_cairo_update_layout endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C19BC	proc near		; DATA XREF: pango_cairo_font_get_type+50o
		push	ebp
		mov	ebp, esp
		leave
		retn
sub_6D4C19BC	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C19C4	proc near		; CODE XREF: sub_6D4C1AC8+D9p
					; sub_6D4C2BF0+Ep

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, eax
		test	eax, eax
		jz	short loc_6D4C19EC
		mov	eax, [eax+60h]
		mov	[esp+18h+var_18], eax
		call	cairo_font_options_destroy
		mov	[esp+18h+var_14], ebx
		mov	[esp+18h+var_18], 68h
		call	g_slice_free1

loc_6D4C19EC:				; CODE XREF: sub_6D4C19C4+Bj
		add	esp, 14h
		pop	ebx
		leave
		retn
sub_6D4C19C4	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C19F4	proc near		; DATA XREF: sub_6D4C2BF0+6Fo

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+4]
		mov	[esp+18h+var_18], eax
		call	pango_font_metrics_unref
		mov	[esp+18h+var_14], ebx
		mov	[esp+18h+var_18], 8
		call	g_slice_free1
		add	esp, 14h
		pop	ebx
		leave
		retn
sub_6D4C19F4	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  11. pango_cairo_font_get_type

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_font_get_type
pango_cairo_font_get_type proc near	; CODE XREF: sub_6D4C1AC8+23p
					; pango_cairo_font_get_scaled_font+Fp ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, ds:dword_6D4CB040
		test	eax, eax
		jz	short loc_6D4C1A3C

loc_6D4C1A30:				; CODE XREF: pango_cairo_font_get_type+2Aj
		mov	eax, ds:dword_6D4CB040
		add	esp, 24h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C1A3C:				; CODE XREF: pango_cairo_font_get_type+Ej
		mov	[esp+28h+var_28], offset dword_6D4CB040
		call	g_once_init_enter_impl
		test	eax, eax
		jz	short loc_6D4C1A30
		mov	[esp+28h+var_28], offset aPangocairofont ; "PangoCairoFont"
		call	g_intern_static_string
		mov	[esp+28h+var_10], 0
		mov	[esp+28h+var_14], 0
		mov	[esp+28h+var_18], 0
		mov	[esp+28h+var_1C], offset sub_6D4C19BC
		mov	[esp+28h+var_20], 14h
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], 8
		call	g_type_register_static_simple
		mov	ebx, eax
		call	pango_font_get_type
		test	eax, eax
		jnz	short loc_6D4C1AB8

loc_6D4C1A9B:				; CODE XREF: pango_cairo_font_get_type+A4j
		mov	[esp+28h+var_24], ebx
		mov	[esp+28h+var_28], offset dword_6D4CB040
		call	g_once_init_leave
		mov	eax, ds:dword_6D4CB040
		add	esp, 24h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C1AB8:				; CODE XREF: pango_cairo_font_get_type+79j
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], ebx
		call	g_type_interface_add_prerequisite
		jmp	short loc_6D4C1A9B
pango_cairo_font_get_type endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C1AC8	proc near		; CODE XREF: pango_cairo_font_get_scaled_font+3Cj
					; sub_6D4C1D8C+42p ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+8]
		test	eax, eax
		jz	short loc_6D4C1AE4

loc_6D4C1ADB:				; CODE XREF: sub_6D4C1AC8+21j
					; sub_6D4C1AC8+E8j
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C1AE4:				; CODE XREF: sub_6D4C1AC8+11j
		mov	edx, [ebx+4]
		test	edx, edx
		jz	short loc_6D4C1ADB
		call	pango_cairo_font_get_type
		mov	[esp+48h+var_44], eax
		mov	eax, [ebx]
		mov	eax, [eax]
		mov	[esp+48h+var_48], eax
		call	g_type_interface_peek
		mov	edx, [ebx]
		mov	[esp+48h+var_48], edx
		call	dword ptr [eax+8]
		mov	edi, eax
		test	eax, eax
		jz	short loc_6D4C1B36
		mov	eax, [ebx+4]
		mov	edx, [eax+60h]
		mov	[esp+48h+var_3C], edx
		lea	edx, [eax+30h]
		mov	[esp+48h+var_40], edx
		mov	[esp+48h+var_44], eax
		mov	[esp+48h+var_48], edi
		call	cairo_scaled_font_create
		mov	[ebx+8], eax
		mov	[esp+48h+var_48], edi
		call	cairo_font_face_destroy

loc_6D4C1B36:				; CODE XREF: sub_6D4C1AC8+44j
		mov	esi, [ebx+8]
		test	esi, esi
		jz	short loc_6D4C1B4C
		mov	[esp+48h+var_48], esi
		call	cairo_scaled_font_status
		test	eax, eax
		jz	short loc_6D4C1B9E
		mov	esi, [ebx+8]

loc_6D4C1B4C:				; CODE XREF: sub_6D4C1AC8+73j
		call	pango_font_get_type
		mov	[esp+48h+var_44], eax
		mov	eax, [ebx]
		mov	[esp+48h+var_48], eax
		call	g_type_check_instance_cast
		mov	[ebp+var_1C], eax
		cmp	ds:dword_6D4CB03C, 0
		jz	loc_6D4C1CB9

loc_6D4C1B6F:				; CODE XREF: sub_6D4C1AC8+202j
		mov	edx, ds:dword_6D4CB03C
		mov	[esp+48h+var_44], 50h
		mov	eax, [ebp+var_1C]
		mov	[esp+48h+var_48], eax
		mov	[ebp+var_24], edx
		call	g_type_check_instance_cast
		mov	edx, [ebp+var_24]
		mov	[esp+48h+var_44], edx
		mov	[esp+48h+var_48], eax
		call	g_object_get_qdata
		test	eax, eax
		jz	short loc_6D4C1BB5

loc_6D4C1B9E:				; CODE XREF: sub_6D4C1AC8+7Fj
					; sub_6D4C1AC8+1ECj
		mov	eax, [ebx+4]
		call	sub_6D4C19C4
		mov	dword ptr [ebx+4], 0
		mov	eax, [ebx+8]
		jmp	loc_6D4C1ADB
; ---------------------------------------------------------------------------

loc_6D4C1BB5:				; CODE XREF: sub_6D4C1AC8+D4j
		mov	eax, [ebp+var_1C]
		mov	[esp+48h+var_48], eax
		call	pango_font_describe
		mov	[esp+48h+var_48], eax
		mov	[ebp+var_24], eax
		call	pango_font_description_to_string
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_24]
		mov	[esp+48h+var_48], edx
		call	pango_font_description_free
		test	edi, edi
		jz	loc_6D4C1CED
		mov	eax, [ebp+var_20]
		mov	[esp+48h+var_38], eax
		mov	[esp+48h+var_3C], offset aScaledFont ; "scaled font"
		mov	[esp+48h+var_40], offset aFailedToCreate ; "failed to create cairo %s, expect ugly "...
		mov	[esp+48h+var_44], 10h
		mov	[esp+48h+var_48], offset aPango_0 ; "Pango"
		call	g_log
		mov	[esp+48h+var_48], edi
		call	cairo_font_face_status
		mov	[esp+48h+var_48], eax
		call	cairo_status_to_string
		mov	[esp+48h+var_3C], eax
		mov	[esp+48h+var_40], offset aFont_faceStatu ; "font_face status is: %s"
		mov	[esp+48h+var_44], 10h
		mov	[esp+48h+var_48], offset aPango_0 ; "Pango"
		call	g_log

loc_6D4C1C3C:				; CODE XREF: sub_6D4C1AC8+26Cj
		test	esi, esi
		jz	loc_6D4C1CCF
		mov	[esp+48h+var_48], esi
		call	cairo_scaled_font_status
		mov	[esp+48h+var_48], eax
		call	cairo_status_to_string
		mov	[esp+48h+var_3C], eax
		mov	[esp+48h+var_40], offset aScaled_fontSta ; "scaled_font	status is: %s"
		mov	[esp+48h+var_44], 10h
		mov	[esp+48h+var_48], offset aPango_0 ; "Pango"
		call	g_log

loc_6D4C1C74:				; CODE XREF: sub_6D4C1AC8+223j
		mov	eax, [ebp+var_20]
		mov	[esp+48h+var_48], eax
		call	g_free
		mov	esi, ds:dword_6D4CB03C
		mov	[esp+48h+var_44], 50h
		mov	eax, [ebp+var_1C]
		mov	[esp+48h+var_48], eax
		call	g_type_check_instance_cast
		mov	[esp+48h+var_3C], 0
		mov	[esp+48h+var_40], 1
		mov	[esp+48h+var_44], esi
		mov	[esp+48h+var_48], eax
		call	g_object_set_qdata_full
		jmp	loc_6D4C1B9E
; ---------------------------------------------------------------------------

loc_6D4C1CB9:				; CODE XREF: sub_6D4C1AC8+A1j
		mov	[esp+48h+var_48], offset aPangocairoScal ; "pangocairo-scaledfont-warned"
		call	g_quark_from_static_string
		mov	ds:dword_6D4CB03C, eax
		jmp	loc_6D4C1B6F
; ---------------------------------------------------------------------------

loc_6D4C1CCF:				; CODE XREF: sub_6D4C1AC8+176j
		mov	[esp+48h+var_40], offset aScaled_fontIsN ; "scaled_font	is NULL"
		mov	[esp+48h+var_44], 10h
		mov	[esp+48h+var_48], offset aPango_0 ; "Pango"
		call	g_log
		jmp	short loc_6D4C1C74
; ---------------------------------------------------------------------------

loc_6D4C1CED:				; CODE XREF: sub_6D4C1AC8+113j
		mov	eax, [ebp+var_20]
		mov	[esp+48h+var_38], eax
		mov	[esp+48h+var_3C], offset aFontFace ; "font face"
		mov	[esp+48h+var_40], offset aFailedToCreate ; "failed to create cairo %s, expect ugly "...
		mov	[esp+48h+var_44], 10h
		mov	[esp+48h+var_48], offset aPango_0 ; "Pango"
		call	g_log
		mov	[esp+48h+var_40], offset aFont_faceIsNul ; "font_face is NULL"
		mov	[esp+48h+var_44], 10h
		mov	[esp+48h+var_48], offset aPango_0 ; "Pango"
		call	g_log
		jmp	loc_6D4C1C3C
sub_6D4C1AC8	endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  10. pango_cairo_font_get_scaled_font

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_font_get_scaled_font
pango_cairo_font_get_scaled_font proc near ; CODE XREF:	sub_6D4C1D8C+333p
					; sub_6D4C24CC+Dp ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		test	ebx, ebx
		jz	short loc_6D4C1D80
		call	pango_cairo_font_get_type
		mov	esi, eax
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_cast
		mov	[esp+14h+var_10], esi
		mov	eax, [eax]
		mov	[esp+14h+var_14], eax
		call	g_type_interface_peek
		add	ebx, [eax+10h]
		mov	[ebp+arg_0], ebx
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	sub_6D4C1AC8
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C1D80:				; CODE XREF: pango_cairo_font_get_scaled_font+Dj
		xor	eax, eax
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
pango_cairo_font_get_scaled_font endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C1D8C	proc near		; CODE XREF: sub_6D4C2A74+3Bj
					; sub_6D4C2A74+48j ...

var_178		= qword	ptr -178h
var_170		= dword	ptr -170h
var_15C		= dword	ptr -15Ch
var_158		= qword	ptr -158h
var_140		= qword	ptr -140h
var_138		= qword	ptr -138h
var_12C		= dword	ptr -12Ch
var_128		= qword	ptr -128h
var_120		= qword	ptr -120h
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= qword	ptr -108h
var_100		= qword	ptr -100h
var_F8		= qword	ptr -0F8h
var_EC		= dword	ptr -0ECh
var_E8		= byte ptr -0E8h
var_D8		= qword	ptr -0D8h
var_D0		= qword	ptr -0D0h
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= qword	ptr -58h
var_50		= qword	ptr -50h
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
var_1A		= byte ptr -1Ah
var_19		= byte ptr -19h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 16Ch
		mov	ebx, eax
		mov	[ebp+var_1A], 0
		mov	[ebp+var_19], 0
		test	eax, eax
		jz	short loc_6D4C1DBC
		mov	esi, [eax+0Ch]
		test	esi, esi
		jz	short loc_6D4C1DCB

loc_6D4C1DAD:				; CODE XREF: sub_6D4C1D8C+4Fj
					; sub_6D4C1D8C+5Bj ...
		mov	eax, esi
		add	esp, 16Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C1DBC:				; CODE XREF: sub_6D4C1D8C+18j
		xor	esi, esi
		mov	eax, esi
		add	esp, 16Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C1DCB:				; CODE XREF: sub_6D4C1D8C+1Fj
		mov	dword ptr [esp+178h+var_178], eax
		call	sub_6D4C1AC8
		mov	[ebp+var_10C], eax
		test	eax, eax
		jz	short loc_6D4C1DAD
		mov	dword ptr [esp+178h+var_178], eax
		call	cairo_scaled_font_status
		test	eax, eax
		jnz	short loc_6D4C1DAD
		mov	eax, [ebx+10h]
		mov	[ebp+var_114], eax
		call	cairo_font_options_create
		mov	dword ptr [ebp+var_100], eax
		mov	eax, [ebx]
		mov	dword ptr [esp+178h+var_178], eax
		call	pango_font_describe_with_absolute_size
		mov	edi, eax
		mov	dword ptr [esp+178h+var_178], eax
		call	pango_font_description_get_size
		mov	dword ptr [ebp+var_F8],	eax
		lea	eax, [ebp+var_B8]
		mov	dword ptr [esp+178h+var_178+4],	eax
		mov	eax, [ebp+var_10C]
		mov	dword ptr [esp+178h+var_178], eax
		call	cairo_scaled_font_get_ctm
		mov	eax, dword ptr [ebp+var_100]
		mov	dword ptr [esp+178h+var_178+4],	eax
		mov	eax, [ebp+var_10C]
		mov	dword ptr [esp+178h+var_178], eax
		call	cairo_scaled_font_get_font_options
		mov	eax, [ebp+var_B8]
		mov	edx, [ebp+var_B4]
		mov	[ebp+var_88], eax
		mov	[ebp+var_84], edx
		mov	eax, [ebp+var_B0]
		mov	edx, [ebp+var_AC]
		mov	[ebp+var_78], eax
		mov	[ebp+var_74], edx
		mov	eax, [ebp+var_A8]
		mov	edx, [ebp+var_A4]
		mov	[ebp+var_80], eax
		mov	[ebp+var_7C], edx
		mov	eax, [ebp+var_A0]
		mov	edx, [ebp+var_9C]
		mov	[ebp+var_70], eax
		mov	[ebp+var_6C], edx
		mov	eax, [ebp+var_98]
		mov	edx, [ebp+var_94]
		mov	[ebp+var_68], eax
		mov	[ebp+var_64], edx
		mov	eax, [ebp+var_90]
		mov	edx, [ebp+var_8C]
		mov	[ebp+var_60], eax
		mov	[ebp+var_5C], edx
		lea	eax, [ebp+var_88]
		mov	dword ptr [esp+178h+var_178], eax
		call	pango_matrix_get_font_scale_factor
		fstp	[ebp+var_108]
		mov	ecx, [ebp+var_114]
		test	ecx, ecx
		jnz	loc_6D4C2382
		fld1
		fst	[ebp+var_128]
		fst	[ebp+var_120]
		fst	[ebp+var_140]
		fstp	[ebp+var_138]

loc_6D4C1EF5:				; CODE XREF: sub_6D4C1D8C+6DDj
		mov	eax, [ebx]
		mov	dword ptr [esp+178h+var_178], eax
		call	pango_font_get_font_map
		test	eax, eax
		jz	loc_6D4C1DAD
		fld	ds:flt_6D4C93F8
		fimul	dword ptr [ebp+var_F8]
		fdiv	[ebp+var_108]
		mov	dword ptr [esp+178h+var_178], eax
		fstp	[ebp+var_158]
		call	g_object_ref
		mov	dword ptr [ebp+var_F8],	eax
		mov	dword ptr [esp+178h+var_178+4],	40h
		mov	dword ptr [esp+178h+var_178], edi
		call	pango_font_description_unset_fields
		mov	dword ptr [esp+178h+var_178+4],	offset aMonospace ; "monospace"
		mov	dword ptr [esp+178h+var_178], edi
		call	pango_font_description_set_family_static
		fld	[ebp+var_158]
		fld	ds:dbl_6D4C9400
		fdivp	st(1), st
		fst	[ebp+var_108]
		mov	ecx, [ebp+var_114]
		test	ecx, ecx
		jz	loc_6D4C2335
		fld	ds:dbl_6D4C9408
		fsubp	st(1), st
		fmul	[ebp+var_120]
		fstp	[esp+178h+var_178]
		call	ceil
		fmul	[ebp+var_128]
		fstp	[ebp+var_108]
		fld	ds:flt_6D4C93E8
		fld	st
		fld	[ebp+var_108]
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		test	ah, 45h
		fld	[ebp+var_158]
		jnz	loc_6D4C2339
		fsub	ds:flt_6D4C93E4
		fstp	[ebp+var_108]
		fldz
		fld	st
		fld	[ebp+var_108]
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		test	ah, 45h
		jnz	loc_6D4C247E
		fstp	st(1)
		fxch	st(1)
		fucompp
		fnstsw	ax
		mov	[ebp+var_110], 1
		test	ah, 45h
		jz	short loc_6D4C1FFA
		fstp	[ebp+var_108]
		jmp	short loc_6D4C1FFC
; ---------------------------------------------------------------------------

loc_6D4C1FFA:				; CODE XREF: sub_6D4C1D8C+264j
		fstp	st

loc_6D4C1FFC:				; CODE XREF: sub_6D4C1D8C+26Cj
					; sub_6D4C1D8C+5BDj ...
		fld	[ebp+var_108]
		fstp	[esp+178h+var_178]
		call	pango_units_from_double
		mov	[ebp+var_EC], eax
		fild	[ebp+var_EC]
		fstp	[esp+178h+var_178+4]
		mov	dword ptr [esp+178h+var_178], edi
		call	pango_font_description_set_absolute_size
		mov	eax, dword ptr [ebp+var_F8]
		mov	dword ptr [esp+178h+var_178], eax
		call	pango_font_map_create_context
		mov	esi, eax
		lea	eax, [ebp+var_88]
		mov	dword ptr [esp+178h+var_178+4],	eax
		mov	dword ptr [esp+178h+var_178], esi
		call	pango_context_set_matrix
		mov	dword ptr [esp+178h+var_178], 19h
		call	pango_script_get_sample_language
		mov	dword ptr [esp+178h+var_178+4],	eax
		mov	dword ptr [esp+178h+var_178], esi
		call	pango_context_set_language
		mov	eax, dword ptr [ebp+var_100]
		mov	dword ptr [esp+178h+var_178+4],	eax
		mov	dword ptr [esp+178h+var_178], esi
		call	pango_cairo_context_set_font_options
		mov	[esp+178h+var_170], edi
		mov	dword ptr [esp+178h+var_178+4],	esi
		mov	eax, dword ptr [ebp+var_F8]
		mov	dword ptr [esp+178h+var_178], eax
		call	pango_font_map_load_font
		mov	[ebp+var_118], eax
		mov	dword ptr [esp+178h+var_178], esi
		call	g_object_unref
		mov	eax, dword ptr [ebp+var_F8]
		mov	dword ptr [esp+178h+var_178], eax
		call	g_object_unref
		mov	dword ptr [esp+178h+var_178], edi
		call	pango_font_description_free
		mov	eax, dword ptr [ebp+var_100]
		mov	dword ptr [esp+178h+var_178], eax
		call	cairo_font_options_destroy
		mov	eax, [ebp+var_118]
		mov	dword ptr [esp+178h+var_178], eax
		call	pango_cairo_font_get_scaled_font
		fldz
		fst	[ebp+var_F8]
		fstp	[ebp+var_100]
		xor	esi, esi
		lea	edi, [ebp+var_E8]
		mov	[ebp+var_12C], ebx
		mov	ebx, eax
		xchg	ax, ax

loc_6D4C20E4:				; CODE XREF: sub_6D4C1D8C+3BAj
		mov	al, ds:byte_6D4C9389[esi]
		mov	[ebp+var_1A], al
		mov	[esp+178h+var_170], edi
		lea	eax, [ebp+var_1A]
		mov	dword ptr [esp+178h+var_178+4],	eax
		mov	dword ptr [esp+178h+var_178], ebx
		call	cairo_scaled_font_text_extents
		fld	[ebp+var_D8]
		fld	[ebp+var_100]
		fucomp	st(1)
		fnstsw	ax
		test	ah, 45h
		jz	short loc_6D4C2120
		fstp	[ebp+var_100]
		jmp	short loc_6D4C2122
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C2120:				; CODE XREF: sub_6D4C1D8C+387j
		fstp	st

loc_6D4C2122:				; CODE XREF: sub_6D4C1D8C+38Fj
		fld	[ebp+var_D0]
		fld	[ebp+var_F8]
		fucomp	st(1)
		fnstsw	ax
		test	ah, 45h
		jz	short loc_6D4C2140
		fstp	[ebp+var_F8]
		jmp	short loc_6D4C2142
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C2140:				; CODE XREF: sub_6D4C1D8C+3A9j
		fstp	st

loc_6D4C2142:				; CODE XREF: sub_6D4C1D8C+3B1j
		inc	esi
		cmp	esi, 10h
		jnz	short loc_6D4C20E4
		mov	ebx, [ebp+var_12C]
		lea	eax, [ebp+var_58]
		mov	dword ptr [esp+178h+var_178+4],	eax
		mov	eax, [ebp+var_10C]
		mov	dword ptr [esp+178h+var_178], eax
		call	cairo_scaled_font_extents
		fld	[ebp+var_58]
		fadd	[ebp+var_50]
		fldz
		fld	st
		fucomp	st(2)
		fnstsw	ax
		test	ah, 5
		jz	loc_6D4C235D
		fstp	st
		fdiv	ds:flt_6D4C9410

loc_6D4C2182:				; CODE XREF: sub_6D4C1D8C+5EAj
		fld	[ebp+var_108]
		fucom	st(1)
		fnstsw	ax
		test	ah, 45h
		jz	short loc_6D4C2195
		fstp	st(1)
		jmp	short loc_6D4C2197
; ---------------------------------------------------------------------------

loc_6D4C2195:				; CODE XREF: sub_6D4C1D8C+403j
		fstp	st

loc_6D4C2197:				; CODE XREF: sub_6D4C1D8C+407j
		mov	dword ptr [esp+178h+var_178], 40h
		fstp	[ebp+var_158]
		call	g_slice_alloc
		mov	edi, eax
		mov	esi, eax
		mov	eax, [ebp+var_118]
		mov	[edi], eax
		mov	eax, [ebp+var_110]
		mov	[edi+4], eax
		fld	[ebp+var_100]
		fstp	qword ptr [edi+8]
		fld	[ebp+var_F8]
		fstp	qword ptr [edi+10h]
		fld	[ebp+var_158]
		fst	qword ptr [edi+18h]
		fst	qword ptr [edi+20h]
		mov	edx, [ebp+var_114]
		test	edx, edx
		jz	loc_6D4C237B
		fstp	st
		fld	ds:dbl_6D4C9408
		fsubr	[ebp+var_100]
		fmul	[ebp+var_138]
		fstp	[esp+178h+var_178]
		call	ceil
		fmul	[ebp+var_140]
		fstp	qword ptr [edi+8]
		fld	ds:dbl_6D4C9408
		fsubr	[ebp+var_F8]
		fmul	[ebp+var_120]
		fstp	[esp+178h+var_178]
		call	ceil
		fmul	[ebp+var_128]
		fst	[ebp+var_F8]
		fstp	qword ptr [edi+10h]
		fld	[ebp+var_158]
		fld	ds:dbl_6D4C9408
		fsubp	st(1), st
		fld	[ebp+var_138]
		fmul	st, st(1)
		fstp	[esp+178h+var_178]
		fstp	[ebp+var_158]
		call	ceil
		fld	[ebp+var_140]
		fmulp	st(1), st
		fst	qword ptr [edi+18h]
		fld	[ebp+var_158]
		fmul	[ebp+var_120]
		fstp	[esp+178h+var_178]
		fstp	[ebp+var_158]
		call	ceil
		fmul	[ebp+var_128]
		fst	qword ptr [edi+20h]
		fld	[ebp+var_158]
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		test	ah, 45h
		jnz	loc_6D4C2499
		fxch	st(1)

loc_6D4C22A1:				; CODE XREF: sub_6D4C1D8C+5F1j
					; sub_6D4C1D8C+711j
		fstp	qword ptr [edi+28h]
		fld	st
		fmul	ds:flt_6D4C9414
		fld	[ebp+var_F8]
		fadd	st, st(2)
		fimul	[ebp+var_110]
		faddp	st(1), st
		fst	qword ptr [edi+38h]
		cmp	[ebp+var_110], 1
		jz	loc_6D4C234E
		fld	[ebp+var_58]
		fucom	st(1)
		fnstsw	ax
		test	ah, 5
		jz	short loc_6D4C2352
		fld	[ebp+var_50]
		fld	st(1)
		fadd	st, st(1)
		fxch	st(4)
		fadd	st, st
		fld	st(4)
		fsub	st, st(1)
		fucomp	st(4)
		fnstsw	ax
		test	ah, 5
		jnz	loc_6D4C246E
		fstp	st(4)
		fstp	st
		fxch	st(1)
		fxch	st(2)
		faddp	st(2), st
		fsubp	st(1), st
		fstp	qword ptr [edi+30h]

loc_6D4C2303:				; CODE XREF: sub_6D4C1D8C+5CFj
					; sub_6D4C1D8C+6EDj
		mov	eax, [ebp+var_114]
		test	eax, eax
		jz	short loc_6D4C232D
		fld	ds:dbl_6D4C9408
		fsubr	qword ptr [edi+30h]
		fmul	[ebp+var_120]
		fstp	[esp+178h+var_178]
		call	ceil
		fmul	[ebp+var_128]
		fstp	qword ptr [edi+30h]

loc_6D4C232D:				; CODE XREF: sub_6D4C1D8C+57Fj
		mov	[ebx+0Ch], edi
		jmp	loc_6D4C1DAD
; ---------------------------------------------------------------------------

loc_6D4C2335:				; CODE XREF: sub_6D4C1D8C+1DDj
		fstp	st
		jmp	short loc_6D4C233F
; ---------------------------------------------------------------------------

loc_6D4C2339:				; CODE XREF: sub_6D4C1D8C+224j
		fstp	st
		fstp	st
		fstp	st

loc_6D4C233F:				; CODE XREF: sub_6D4C1D8C+5ABj
		mov	[ebp+var_110], 2
		jmp	loc_6D4C1FFC
; ---------------------------------------------------------------------------

loc_6D4C234E:				; CODE XREF: sub_6D4C1D8C+53Aj
		fstp	st
		jmp	short loc_6D4C2356
; ---------------------------------------------------------------------------

loc_6D4C2352:				; CODE XREF: sub_6D4C1D8C+54Aj
		fstp	st
		fstp	st

loc_6D4C2356:				; CODE XREF: sub_6D4C1D8C+5C4j
		fadd	st, st
		fstp	qword ptr [edi+30h]
		jmp	short loc_6D4C2303
; ---------------------------------------------------------------------------

loc_6D4C235D:				; CODE XREF: sub_6D4C1D8C+3E8j
		fstp	st(1)
		mov	dword ptr [ebp+var_58],	0
		mov	dword ptr [ebp+var_58+4], 402C0000h
		fstp	[ebp+var_50]
		fld	ds:dbl_6D4C93F0
		jmp	loc_6D4C2182
; ---------------------------------------------------------------------------

loc_6D4C237B:				; CODE XREF: sub_6D4C1D8C+458j
		fld	st
		jmp	loc_6D4C22A1
; ---------------------------------------------------------------------------

loc_6D4C2382:				; CODE XREF: sub_6D4C1D8C+149j
		mov	dword ptr [ebp+var_28],	0
		mov	dword ptr [ebp+var_28+4], 3FF00000h
		mov	dword ptr [ebp+var_30],	0
		mov	dword ptr [ebp+var_30+4], 0
		lea	edx, [ebp+var_30]
		mov	[esp+178h+var_170], edx
		lea	ecx, [ebp+var_28]
		mov	dword ptr [esp+178h+var_178+4],	ecx
		lea	eax, [ebp+var_B8]
		mov	dword ptr [esp+178h+var_178], eax
		mov	[ebp+var_15C], edx
		mov	dword ptr [ebp+var_158], ecx
		call	cairo_matrix_transform_distance
		fld	[ebp+var_28]
		fld	[ebp+var_30]
		fxch	st(1)
		fmul	st, st
		fxch	st(1)
		fmul	st, st
		faddp	st(1), st
		fld	st
		fsqrt
		fucom	st
		fnstsw	ax
		and	ah, 45h
		cmp	ah, 40h
		mov	edx, [ebp+var_15C]
		mov	ecx, dword ptr [ebp+var_158]
		jnz	loc_6D4C24AE
		fstp	st(1)

loc_6D4C23F8:				; CODE XREF: sub_6D4C1D8C+738j
		fstp	[ebp+var_138]
		fld1
		fld	[ebp+var_138]
		fdivr	st, st(1)
		fstp	[ebp+var_140]
		mov	dword ptr [ebp+var_28],	0
		mov	dword ptr [ebp+var_28+4], 0
		fstp	[ebp+var_30]
		mov	[esp+178h+var_170], edx
		mov	dword ptr [esp+178h+var_178+4],	ecx
		lea	eax, [ebp+var_B8]
		mov	dword ptr [esp+178h+var_178], eax
		call	cairo_matrix_transform_distance
		fld	[ebp+var_28]
		fld	[ebp+var_30]
		fxch	st(1)
		fmul	st, st
		fxch	st(1)
		fmul	st, st
		faddp	st(1), st
		fld	st
		fsqrt
		fucom	st
		fnstsw	ax
		and	ah, 45h
		cmp	ah, 40h
		jnz	short loc_6D4C24A2
		fstp	st(1)

loc_6D4C2457:				; CODE XREF: sub_6D4C1D8C+720j
		fst	[ebp+var_120]
		fdivr	ds:flt_6D4C93E4
		fstp	[ebp+var_128]
		jmp	loc_6D4C1EF5
; ---------------------------------------------------------------------------

loc_6D4C246E:				; CODE XREF: sub_6D4C1D8C+562j
		fstp	st
		fstp	st(1)
		fmulp	st(1), st
		fdivrp	st(1), st
		fstp	qword ptr [edi+30h]
		jmp	loc_6D4C2303
; ---------------------------------------------------------------------------

loc_6D4C247E:				; CODE XREF: sub_6D4C1D8C+249j
		fstp	st
		fstp	st(1)
		fstp	st(1)
		fstp	[ebp+var_108]
		mov	[ebp+var_110], 1
		jmp	loc_6D4C1FFC
; ---------------------------------------------------------------------------

loc_6D4C2499:				; CODE XREF: sub_6D4C1D8C+50Dj
		fstp	st(1)
		fld	st
		jmp	loc_6D4C22A1
; ---------------------------------------------------------------------------

loc_6D4C24A2:				; CODE XREF: sub_6D4C1D8C+6C7j
		fstp	st
		fstp	[esp+178h+var_178]
		call	sqrt
		jmp	short loc_6D4C2457
; ---------------------------------------------------------------------------

loc_6D4C24AE:				; CODE XREF: sub_6D4C1D8C+664j
		fstp	st
		fstp	[esp+178h+var_178]
		call	sqrt
		mov	ecx, dword ptr [ebp+var_158]
		mov	edx, [ebp+var_15C]
		jmp	loc_6D4C23F8
sub_6D4C1D8C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C24CC	proc near		; CODE XREF: sub_6D4C410C+70p
					; sub_6D4C4400+5Dp

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	pango_cairo_font_get_scaled_font
		mov	ebx, eax
		test	eax, eax
		jz	short loc_6D4C24F0
		mov	[esp+18h+var_18], eax
		call	cairo_scaled_font_status
		test	eax, eax
		jz	short loc_6D4C24F8

loc_6D4C24F0:				; CODE XREF: sub_6D4C24CC+16j
		xor	eax, eax
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C24F8:				; CODE XREF: sub_6D4C24CC+22j
		mov	[esp+18h+var_14], ebx
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	cairo_set_scaled_font
		mov	eax, 1
		add	esp, 14h
		pop	ebx
		leave
		retn
sub_6D4C24CC	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C2514	proc near		; DATA XREF: sub_6D4C53A8+5Do
					; sub_6D4C5BB0+5Do

Buf1		= dword	ptr -108h
Buf2		= dword	ptr -104h
Size		= dword	ptr -100h
var_EC		= dword	ptr -0ECh
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= word ptr -0BCh
var_BA		= word ptr -0BAh
var_B8		= byte ptr -0B8h
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_28		= byte ptr -28h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0FCh
		mov	ebx, [ebp+arg_0]
		test	ebx, ebx
		jz	loc_6D4C2A31
		call	pango_cairo_font_get_type
		mov	ebx, eax
		mov	[esp+108h+Buf2], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+108h+Buf1], eax
		call	g_type_check_instance_cast
		mov	[esp+108h+Buf2], ebx
		mov	eax, [eax]
		mov	[esp+108h+Buf1], eax
		call	g_type_interface_peek
		mov	edx, [ebp+arg_0]
		add	edx, [eax+10h]
		mov	[ebp+var_CC], edx

loc_6D4C255B:				; CODE XREF: sub_6D4C2514+527j
		mov	eax, [ebp+arg_4]
		mov	[esp+108h+Buf1], eax
		call	pango_language_get_sample_string
		mov	ebx, eax
		mov	edx, [ebp+var_CC]
		mov	eax, [edx+2Ch]
		test	eax, eax
		jz	short loc_6D4C2599
		mov	edx, [eax]
		mov	[ebp+var_C4], edx
		cmp	[edx], ebx
		jnz	short loc_6D4C2592
		jmp	loc_6D4C2A0D
; ---------------------------------------------------------------------------
		align 4

loc_6D4C2588:				; CODE XREF: sub_6D4C2514+83j
		mov	edx, [eax]
		cmp	[edx], ebx
		jz	loc_6D4C2A29

loc_6D4C2592:				; CODE XREF: sub_6D4C2514+6Bj
		mov	eax, [eax+4]
		test	eax, eax
		jnz	short loc_6D4C2588

loc_6D4C2599:				; CODE XREF: sub_6D4C2514+5Fj
		lea	eax, [ebp+var_B8]
		mov	[ebp+var_EC], eax
		mov	esi, offset dword_6D4C93A0
		mov	ecx, 0Ch
		mov	edi, eax
		rep movsd
		mov	edx, [ebp+arg_0]
		mov	[esp+108h+Buf1], edx
		call	pango_font_get_font_map
		test	eax, eax
		jz	loc_6D4C2A6D
		mov	[esp+108h+Buf1], eax
		call	g_object_ref
		mov	[ebp+var_DC], eax
		mov	[esp+108h+Buf1], 8
		call	g_slice_alloc0
		mov	[ebp+var_D0], eax
		mov	[ebp+var_C4], eax
		mov	[esp+108h+Buf2], eax
		mov	edx, [ebp+var_CC]
		mov	eax, [edx+2Ch]
		mov	[esp+108h+Buf1], eax
		call	g_slist_prepend
		mov	edx, [ebp+var_CC]
		mov	[edx+2Ch], eax
		mov	eax, [ebp+var_D0]
		mov	[eax], ebx
		mov	[esp+108h+Buf1], edx
		call	sub_6D4C1AC8
		mov	edi, eax
		mov	edx, [ebp+var_DC]
		mov	[esp+108h+Buf1], edx
		call	pango_font_map_create_context
		mov	[ebp+var_D4], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+108h+Buf2], eax
		mov	edx, [ebp+var_D4]
		mov	[esp+108h+Buf1], edx
		call	pango_context_set_language
		call	cairo_font_options_create
		mov	esi, eax
		mov	[esp+108h+Buf2], eax
		mov	[esp+108h+Buf1], edi
		call	cairo_scaled_font_get_font_options
		mov	[esp+108h+Buf2], esi
		mov	eax, [ebp+var_D4]
		mov	[esp+108h+Buf1], eax
		call	pango_cairo_context_set_font_options
		mov	[esp+108h+Buf1], esi
		call	cairo_font_options_destroy
		call	pango_cairo_font_get_type
		mov	[esp+108h+Buf2], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		mov	[esp+108h+Buf1], eax
		call	g_type_interface_peek
		mov	edx, [ebp+var_D4]
		mov	[esp+108h+Buf2], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+108h+Buf1], edx
		call	dword ptr [eax+0Ch]
		mov	edx, [ebp+var_D0]
		mov	[edx+4], eax
		lea	eax, [ebp+var_58]
		mov	[esp+108h+Buf2], eax
		mov	[esp+108h+Buf1], edi
		call	cairo_scaled_font_get_ctm
		mov	eax, [ebp+var_58]
		mov	edx, [ebp+var_54]
		mov	[ebp+var_88], eax
		mov	[ebp+var_84], edx
		mov	eax, [ebp+var_50]
		mov	edx, [ebp+var_4C]
		mov	[ebp+var_78], eax
		mov	[ebp+var_74], edx
		mov	eax, [ebp+var_48]
		mov	edx, [ebp+var_44]
		mov	[ebp+var_80], eax
		mov	[ebp+var_7C], edx
		mov	eax, [ebp+var_40]
		mov	edx, [ebp+var_3C]
		mov	[ebp+var_70], eax
		mov	[ebp+var_6C], edx
		mov	[ebp+var_68], 0
		mov	[ebp+var_64], 0
		mov	[ebp+var_60], 0
		mov	[ebp+var_5C], 0
		lea	esi, [ebp+var_88]
		mov	[esp+108h+Size], 20h ; Size
		mov	[esp+108h+Buf2], esi ; Buf2
		lea	eax, [ebp+var_B8]
		mov	[esp+108h+Buf1], eax ; Buf1
		call	memcmp
		test	eax, eax
		jz	loc_6D4C27E2
		mov	[esp+108h+Buf1], esi
		call	pango_matrix_get_font_scale_factor
		fldz
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		fstp	st(1)
		and	ah, 45h
		cmp	ah, 40h
		jz	short loc_6D4C274D
		fdivr	ds:flt_6D4C93E4

loc_6D4C274D:				; CODE XREF: sub_6D4C2514+231j
		mov	edx, [ebp+var_D0]
		mov	eax, [edx+4]
		fld	st
		fimul	dword ptr [eax+4]
		fnstcw	[ebp+var_BA]
		mov	dx, [ebp+var_BA]
		mov	dh, 0Ch
		mov	[ebp+var_BC], dx
		fldcw	[ebp+var_BC]
		fistp	dword ptr [eax+4]
		fldcw	[ebp+var_BA]
		fld	st
		fimul	dword ptr [eax+8]
		fldcw	[ebp+var_BC]
		fistp	dword ptr [eax+8]
		fldcw	[ebp+var_BA]
		fld	st
		fimul	dword ptr [eax+14h]
		fldcw	[ebp+var_BC]
		fistp	dword ptr [eax+14h]
		fldcw	[ebp+var_BA]
		fld	st
		fimul	dword ptr [eax+18h]
		fldcw	[ebp+var_BC]
		fistp	dword ptr [eax+18h]
		fldcw	[ebp+var_BA]
		fld	st
		fimul	dword ptr [eax+1Ch]
		fldcw	[ebp+var_BC]
		fistp	dword ptr [eax+1Ch]
		fldcw	[ebp+var_BA]
		fimul	dword ptr [eax+20h]
		fldcw	[ebp+var_BC]
		fistp	dword ptr [eax+20h]
		fldcw	[ebp+var_BA]

loc_6D4C27E2:				; CODE XREF: sub_6D4C2514+213j
		mov	[esp+108h+Buf2], esi
		mov	eax, [ebp+var_D4]
		mov	[esp+108h+Buf1], eax
		call	pango_context_set_matrix
		mov	edx, [ebp+var_D4]
		mov	[esp+108h+Buf1], edx
		call	pango_layout_new
		mov	[ebp+var_C8], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+108h+Buf1], eax
		call	pango_font_describe_with_absolute_size
		mov	esi, eax
		mov	[esp+108h+Buf2], eax
		mov	edx, [ebp+var_C8]
		mov	[esp+108h+Buf1], edx
		call	pango_layout_set_font_description
		mov	[esp+108h+Buf1], esi
		call	pango_font_description_free
		mov	[esp+108h+Size], 0FFFFFFFFh
		mov	[esp+108h+Buf2], ebx
		mov	eax, [ebp+var_C8]
		mov	[esp+108h+Buf1], eax
		call	pango_layout_set_text
		lea	eax, [ebp+var_28]
		mov	[esp+108h+Size], eax
		mov	[esp+108h+Buf2], 0
		mov	edx, [ebp+var_C8]
		mov	[esp+108h+Buf1], edx
		call	pango_layout_get_extents
		mov	eax, [ebp+var_D0]
		mov	eax, [eax+4]
		mov	[ebp+var_E0], eax
		mov	edx, [ebp+var_20]
		mov	[ebp+var_D8], edx
		test	ebx, ebx
		jz	short loc_6D4C28D8
		xor	esi, esi
		cmp	byte ptr [ebx],	0
		jz	short loc_6D4C28F6
		mov	eax, ds:g_utf8_skip
		mov	eax, [eax]
		mov	[ebp+var_C0], eax
		jmp	short loc_6D4C28B0
; ---------------------------------------------------------------------------

loc_6D4C2898:				; CODE XREF: sub_6D4C2514+3B0j
		xor	eax, eax

loc_6D4C289A:				; CODE XREF: sub_6D4C2514+3C2j
		add	esi, eax
		movzx	eax, byte ptr [ebx]
		mov	edx, [ebp+var_C0]
		movsx	eax, byte ptr [edx+eax]
		add	ebx, eax
		cmp	byte ptr [ebx],	0
		jz	short loc_6D4C28F6

loc_6D4C28B0:				; CODE XREF: sub_6D4C2514+382j
		mov	[esp+108h+Buf1], ebx
		call	g_utf8_get_char
		mov	edi, eax
		mov	[esp+108h+Buf1], eax
		call	g_unichar_iszerowidth
		test	eax, eax
		jnz	short loc_6D4C2898
		mov	[esp+108h+Buf1], edi
		call	g_unichar_iswide
		cmp	eax, 1
		sbb	eax, eax
		add	eax, 2
		jmp	short loc_6D4C289A
; ---------------------------------------------------------------------------

loc_6D4C28D8:				; CODE XREF: sub_6D4C2514+36Cj
		mov	[esp+108h+Size], offset	aPNull ; "p != NULL"
		mov	[esp+108h+Buf2], offset	aPango_utf8_str	; "pango_utf8_strwidth"
		mov	[esp+108h+Buf1], offset	aPango_0 ; "Pango"
		call	g_return_if_fail_warning
		xor	esi, esi

loc_6D4C28F6:				; CODE XREF: sub_6D4C2514+373j
					; sub_6D4C2514+39Aj
		mov	eax, [ebp+var_D8]
		cdq
		idiv	esi
		mov	edx, [ebp+var_E0]
		mov	[edx+0Ch], eax
		mov	[esp+108h+Size], 0FFFFFFFFh
		mov	[esp+108h+Buf2], offset	a0123456789 ; "0123456789"
		mov	eax, [ebp+var_C8]
		mov	[esp+108h+Buf1], eax
		call	pango_layout_set_text
		mov	edx, [ebp+var_D0]
		mov	edx, [edx+4]
		mov	[ebp+var_D8], edx
		mov	eax, [ebp+var_C8]
		mov	[esp+108h+Buf1], eax
		call	pango_layout_get_lines_readonly
		mov	[ebp+var_C0], eax
		xor	ebx, ebx
		test	eax, eax
		jz	short loc_6D4C299B

loc_6D4C294F:				; CODE XREF: sub_6D4C2514+485j
		mov	edx, [ebp+var_C0]
		mov	eax, [edx]
		mov	edi, [eax+0Ch]
		test	edi, edi
		jz	short loc_6D4C2988
		xchg	ax, ax

loc_6D4C2960:				; CODE XREF: sub_6D4C2514+472j
		mov	eax, [edi]
		mov	eax, [eax+4]
		mov	esi, [eax]
		test	esi, esi
		jle	short loc_6D4C2981
		mov	edx, [eax+4]
		xor	eax, eax

loc_6D4C2970:				; CODE XREF: sub_6D4C2514+46Bj
		mov	ecx, [edx+4]
		cmp	ebx, ecx
		jge	short loc_6D4C2979
		mov	ebx, ecx

loc_6D4C2979:				; CODE XREF: sub_6D4C2514+461j
		inc	eax
		add	edx, 14h
		cmp	eax, esi
		jnz	short loc_6D4C2970

loc_6D4C2981:				; CODE XREF: sub_6D4C2514+455j
		mov	edi, [edi+4]
		test	edi, edi
		jnz	short loc_6D4C2960

loc_6D4C2988:				; CODE XREF: sub_6D4C2514+448j
		mov	eax, [ebp+var_C0]
		mov	eax, [eax+4]
		mov	[ebp+var_C0], eax
		test	eax, eax
		jnz	short loc_6D4C294F

loc_6D4C299B:				; CODE XREF: sub_6D4C2514+439j
		mov	edx, [ebp+var_D8]
		mov	[edx+10h], ebx
		mov	eax, [ebp+var_C8]
		mov	[esp+108h+Buf1], eax
		call	g_object_unref
		mov	edx, [ebp+var_D0]
		mov	ecx, [edx+4]
		mov	ebx, [ecx+8]
		mov	esi, [ecx+4]
		add	esi, ebx
		mov	edx, [ebp+var_CC]
		mov	eax, [edx+14h]
		cmp	eax, 2
		jz	short loc_6D4C2A40
		cmp	eax, 3
		jz	short loc_6D4C2A45
		dec	eax
		jz	short loc_6D4C2A45

loc_6D4C29D9:				; CODE XREF: sub_6D4C2514+52Fj
					; sub_6D4C2514+554j
		mov	eax, esi
		sub	eax, [ecx+4]
		sub	eax, ebx
		lea	ebx, [eax+ebx]
		mov	[ecx+8], ebx
		sub	[ecx+14h], eax
		sub	[ecx+1Ch], eax
		sub	esi, ebx
		mov	[ecx+4], esi
		mov	eax, [ebp+var_D4]
		mov	[esp+108h+Buf1], eax
		call	g_object_unref
		mov	edx, [ebp+var_DC]
		mov	[esp+108h+Buf1], edx
		call	g_object_unref

loc_6D4C2A0D:				; CODE XREF: sub_6D4C2514+6Dj
					; sub_6D4C2514+51Bj
		mov	edx, [ebp+var_C4]
		mov	eax, [edx+4]
		mov	[esp+108h+Buf1], eax
		call	pango_font_metrics_ref

loc_6D4C2A1E:				; CODE XREF: sub_6D4C2514+55Ej
		add	esp, 0FCh
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C2A29:				; CODE XREF: sub_6D4C2514+78j
		mov	[ebp+var_C4], edx
		jmp	short loc_6D4C2A0D
; ---------------------------------------------------------------------------

loc_6D4C2A31:				; CODE XREF: sub_6D4C2514+11j
		mov	[ebp+var_CC], 0
		jmp	loc_6D4C255B
; ---------------------------------------------------------------------------

loc_6D4C2A40:				; CODE XREF: sub_6D4C2514+4BBj
		mov	[ecx+4], ebx
		jmp	short loc_6D4C29D9
; ---------------------------------------------------------------------------

loc_6D4C2A45:				; CODE XREF: sub_6D4C2514+4C0j
					; sub_6D4C2514+4C3j
		mov	edi, 2
		mov	eax, esi
		cdq
		idiv	edi
		mov	edx, [ebp+var_CC]
		cmp	dword ptr [edx+10h], 0
		jz	short loc_6D4C2A65
		add	eax, 200h
		and	eax, 0FFFFFC00h

loc_6D4C2A65:				; CODE XREF: sub_6D4C2514+545j
		mov	[ecx+4], eax
		jmp	loc_6D4C29D9
; ---------------------------------------------------------------------------

loc_6D4C2A6D:				; CODE XREF: sub_6D4C2514+ACj
		call	pango_font_metrics_new
		jmp	short loc_6D4C2A1E
sub_6D4C2514	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C2A74	proc near		; CODE XREF: sub_6D4C410C+55p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		test	ebx, ebx
		jz	short loc_6D4C2AB4
		call	pango_cairo_font_get_type
		mov	esi, eax
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_cast
		mov	[esp+14h+var_10], esi
		mov	eax, [eax]
		mov	[esp+14h+var_14], eax
		call	g_type_interface_peek
		add	ebx, [eax+10h]
		mov	eax, ebx
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	sub_6D4C1D8C
; ---------------------------------------------------------------------------

loc_6D4C2AB4:				; CODE XREF: sub_6D4C2A74+Dj
		xor	eax, eax
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	sub_6D4C1D8C
sub_6D4C2A74	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C2AC4	proc near		; CODE XREF: sub_6D4C5634+2D8p
					; sub_6D4C5D8C+265p

var_98		= dword	ptr -98h
var_94		= qword	ptr -94h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 8Ch
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+arg_C]
		mov	esi, [ebp+arg_10]
		mov	eax, [ebp+arg_4]
		mov	[ebx], eax
		mov	eax, [ebp+arg_8]
		mov	[ebx+14h], eax
		mov	[esp+98h+var_98], 68h
		call	g_slice_alloc
		mov	[ebx+4], eax
		mov	eax, [ebx+14h]
		mov	[esp+98h+var_98], eax
		call	pango_gravity_to_rotation
		fstp	[esp+98h+var_94]
		lea	eax, [ebp+var_48]
		mov	[esp+98h+var_98], eax
		mov	[ebp+var_4C], eax
		call	cairo_matrix_init_rotate
		mov	eax, [ebp+var_4C]
		mov	dword ptr [esp+98h+var_94+4], eax
		mov	eax, [ebp+arg_14]
		mov	dword ptr [esp+98h+var_94], eax
		mov	eax, [ebx+4]
		mov	[esp+98h+var_98], eax
		call	cairo_matrix_multiply
		test	esi, esi
		jz	loc_6D4C2BE0
		mov	[esp+98h+var_6C], 0
		mov	[esp+98h+var_68], 0
		mov	[esp+98h+var_74], 0
		mov	[esp+98h+var_70], 0
		mov	eax, [esi+18h]
		mov	edx, [esi+1Ch]
		mov	[esp+98h+var_7C], eax
		mov	[esp+98h+var_78], edx
		mov	eax, [esi+8]
		mov	edx, [esi+0Ch]
		mov	[esp+98h+var_84], eax
		mov	[esp+98h+var_80], edx
		mov	eax, [esi+10h]
		mov	edx, [esi+14h]
		mov	[esp+98h+var_8C], eax
		mov	[esp+98h+var_88], edx
		mov	eax, [esi]
		mov	edx, [esi+4]
		mov	dword ptr [esp+98h+var_94], eax
		mov	dword ptr [esp+98h+var_94+4], edx
		mov	eax, [ebx+4]
		add	eax, 30h
		mov	[esp+98h+var_98], eax
		call	cairo_matrix_init

loc_6D4C2B96:				; CODE XREF: sub_6D4C2AC4+12Aj
		mov	esi, [ebx+4]
		mov	[esp+98h+var_98], edi
		call	cairo_font_options_copy
		mov	[esi+60h], eax
		mov	[esp+98h+var_98], edi
		call	cairo_font_options_get_hint_metrics
		dec	eax
		setnz	al
		movzx	eax, al
		mov	[ebx+10h], eax
		mov	dword ptr [ebx+8], 0
		mov	dword ptr [ebx+0Ch], 0
		mov	dword ptr [ebx+28h], 0
		mov	dword ptr [ebx+2Ch], 0
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C2BE0:				; CODE XREF: sub_6D4C2AC4+67j
		mov	eax, [ebx+4]
		add	eax, 30h
		mov	[esp+98h+var_98], eax
		call	cairo_matrix_init_identity
		jmp	short loc_6D4C2B96
sub_6D4C2AC4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C2BF0	proc near		; CODE XREF: sub_6D4C5444+13p
					; sub_6D4C5C94+10p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebx+4]
		call	sub_6D4C19C4
		mov	eax, [ebx+8]
		test	eax, eax
		jz	short loc_6D4C2C12
		mov	[esp+18h+var_18], eax
		call	cairo_scaled_font_destroy

loc_6D4C2C12:				; CODE XREF: sub_6D4C2BF0+18j
		mov	dword ptr [ebx+8], 0
		mov	esi, [ebx+0Ch]
		test	esi, esi
		jz	short loc_6D4C2C3A
		mov	eax, [esi]
		mov	[esp+18h+var_18], eax
		call	g_object_unref
		mov	[esp+18h+var_14], esi
		mov	[esp+18h+var_18], 40h
		call	g_slice_free1

loc_6D4C2C3A:				; CODE XREF: sub_6D4C2BF0+2Ej
		mov	dword ptr [ebx+0Ch], 0
		mov	eax, [ebx+28h]
		test	eax, eax
		jz	short loc_6D4C2C50
		mov	[esp+18h+var_18], eax
		call	g_free

loc_6D4C2C50:				; CODE XREF: sub_6D4C2BF0+56j
		mov	dword ptr [ebx+28h], 0
		mov	[esp+18h+var_10], 0
		mov	[esp+18h+var_14], offset sub_6D4C19F4
		mov	eax, [ebx+2Ch]
		mov	[esp+18h+var_18], eax
		call	g_slist_foreach
		mov	eax, [ebx+2Ch]
		mov	[esp+18h+var_18], eax
		call	g_slist_free
		mov	dword ptr [ebx+2Ch], 0
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
sub_6D4C2BF0	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C2C8C	proc near		; CODE XREF: sub_6D4C5D8C+273p

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+10h]
		leave
		retn
sub_6D4C2C8C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C2C98	proc near		; CODE XREF: sub_6D4C542C+12j
					; sub_6D4C5C7C+10j

var_CC		= dword	ptr -0CCh
var_C8		= qword	ptr -0C8h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= qword	ptr -0B8h
var_A8		= qword	ptr -0A8h
var_90		= dword	ptr -90h
var_8C		= word ptr -8Ch
var_8A		= word ptr -8Ah
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_58		= qword	ptr -58h
var_50		= qword	ptr -50h
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0BCh
		mov	ebx, [ebp+arg_0]
		mov	edi, [ebp+arg_4]
		test	ebx, ebx
		jz	loc_6D4C2FE2
		mov	ecx, [ebx+28h]
		test	ecx, ecx
		jz	loc_6D4C2FD4

loc_6D4C2CBD:				; CODE XREF: sub_6D4C2C98+3FCj
		cmp	edi, 0FFFFFFFh
		jz	loc_6D4C2F80
		test	edi, 10000000h
		jnz	loc_6D4C2E0C
		mov	eax, edi
		and	eax, 0FFh
		lea	edx, [eax+eax*2]
		shl	edx, 3
		add	edx, [ebx+28h]
		cmp	edi, [edx]
		jz	loc_6D4C2DD0
		mov	[ebp+var_30], edi
		mov	[ebp+var_28], 0
		mov	[ebp+var_24], 0
		mov	[ebp+var_20], 0
		mov	[ebp+var_1C], 0
		mov	dword ptr [esp+0C8h+var_C8], ebx
		mov	[ebp+var_90], edx
		call	sub_6D4C1AC8
		lea	ecx, [ebp+var_88]
		mov	[esp+0C8h+var_BC], ecx
		mov	[esp+0C8h+var_C0], 1
		lea	ecx, [ebp+var_30]
		mov	dword ptr [esp+0C8h+var_C8+4], ecx
		mov	dword ptr [esp+0C8h+var_C8], eax
		call	cairo_scaled_font_glyph_extents
		mov	edx, [ebp+var_90]
		mov	[edx], edi
		mov	esi, [ebp+var_68]
		mov	edi, [ebp+var_64]
		mov	dword ptr [esp+0C8h+var_C8], esi
		mov	dword ptr [esp+0C8h+var_C8+4], edi
		call	pango_units_from_double
		mov	edx, [ebp+var_90]
		mov	[edx+4], eax
		mov	esi, [ebp+var_88]
		mov	edi, [ebp+var_84]
		mov	dword ptr [esp+0C8h+var_C8], esi
		mov	dword ptr [esp+0C8h+var_C8+4], edi
		call	pango_units_from_double
		mov	edx, [ebp+var_90]
		mov	[edx+8], eax
		mov	esi, [ebp+var_80]
		mov	edi, [ebp+var_7C]
		mov	dword ptr [esp+0C8h+var_C8], esi
		mov	dword ptr [esp+0C8h+var_C8+4], edi
		call	pango_units_from_double
		mov	edx, [ebp+var_90]
		mov	[edx+0Ch], eax
		mov	esi, [ebp+var_78]
		mov	edi, [ebp+var_74]
		mov	dword ptr [esp+0C8h+var_C8], esi
		mov	dword ptr [esp+0C8h+var_C8+4], edi
		call	pango_units_from_double
		mov	edx, [ebp+var_90]
		mov	[edx+10h], eax
		mov	esi, [ebp+var_70]
		mov	edi, [ebp+var_6C]
		mov	dword ptr [esp+0C8h+var_C8], esi
		mov	dword ptr [esp+0C8h+var_C8+4], edi
		call	pango_units_from_double
		mov	edx, [ebp+var_90]
		mov	[edx+14h], eax

loc_6D4C2DD0:				; CODE XREF: sub_6D4C2C98+4Fj
		mov	edi, [ebp+arg_8]
		test	edi, edi
		jz	short loc_6D4C2DE4
		lea	esi, [edx+8]
		mov	ecx, 4
		mov	edi, [ebp+arg_8]
		rep movsd

loc_6D4C2DE4:				; CODE XREF: sub_6D4C2C98+13Dj
		mov	esi, [ebp+arg_C]
		test	esi, esi
		jz	short loc_6D4C2E01
		lea	esi, [ebx+18h]
		mov	ecx, 4
		mov	edi, [ebp+arg_C]
		rep movsd
		mov	eax, [edx+4]
		mov	edx, [ebp+arg_C]
		mov	[edx+8], eax

loc_6D4C2E01:				; CODE XREF: sub_6D4C2C98+151j
					; sub_6D4C2C98+24Bj ...
		add	esp, 0BCh
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C2E0C:				; CODE XREF: sub_6D4C2C98+37j
		mov	eax, ebx
		call	sub_6D4C1D8C
		mov	ecx, eax
		test	eax, eax
		jz	loc_6D4C30D4
		mov	ebx, [eax+4]
		cmp	edi, 0FFFFFFFFh
		jz	loc_6D4C2FC8
		and	edi, 0EFFFFFFFh
		cmp	edi, 10FFFFh
		ja	loc_6D4C2FC8
		cmp	edi, 10000h
		sbb	eax, eax
		and	eax, 0FFFFFFFEh
		add	eax, 6
		cdq
		idiv	ebx

loc_6D4C2E4C:				; CODE XREF: sub_6D4C2C98+335j
		mov	ebx, [ebp+arg_8]
		test	ebx, ebx
		jz	loc_6D4C2EDE
		fld	qword ptr [ecx+18h]
		fld	ds:flt_6D4C9418
		fld	st(1)
		fmul	st, st(1)
		fnstcw	[ebp+var_8A]
		mov	dx, [ebp+var_8A]
		mov	dh, 0Ch
		mov	[ebp+var_8C], dx
		mov	edx, [ebp+arg_8]
		fldcw	[ebp+var_8C]
		fistp	dword ptr [edx]
		fldcw	[ebp+var_8A]
		fld	qword ptr [ecx+38h]
		fld	qword ptr [ecx+30h]
		fsub	st, st(1)
		fmul	st, st(2)
		fldcw	[ebp+var_8C]
		fistp	dword ptr [edx+4]
		fldcw	[ebp+var_8A]
		fld	st(2)
		fmul	ds:flt_6D4C9414
		fxch	st(3)
		fadd	qword ptr [ecx+8]
		push	eax
		fimul	[esp+0CCh+var_CC]
		add	esp, 4
		faddp	st(3), st
		fxch	st(2)
		fmul	st, st(1)
		fldcw	[ebp+var_8C]
		fistp	dword ptr [edx+8]
		fldcw	[ebp+var_8A]
		fmulp	st(1), st
		fldcw	[ebp+var_8C]
		fistp	dword ptr [edx+0Ch]
		fldcw	[ebp+var_8A]

loc_6D4C2EDE:				; CODE XREF: sub_6D4C2C98+1B9j
		mov	edx, [ebp+arg_C]
		test	edx, edx
		jz	loc_6D4C2E01
		mov	edx, [ebp+arg_C]
		mov	dword ptr [edx], 0
		fld	qword ptr [ecx+38h]
		fld	qword ptr [ecx+20h]
		fld	st(1)
		fadd	st, st(1)
		fsubr	qword ptr [ecx+30h]
		fld	ds:flt_6D4C9418
		fmul	st(1), st
		fxch	st(1)
		fnstcw	[ebp+var_8A]
		mov	dx, [ebp+var_8A]
		mov	dh, 0Ch
		mov	[ebp+var_8C], dx
		mov	edx, [ebp+arg_C]
		fldcw	[ebp+var_8C]
		fistp	dword ptr [edx+4]
		fldcw	[ebp+var_8A]
		fld	qword ptr [ecx+18h]
		fld	st
		fmul	ds:flt_6D4C941C
		fxch	st(1)
		fadd	qword ptr [ecx+8]
		push	eax
		fimul	[esp+0CCh+var_CC]
		add	esp, 4
		faddp	st(1), st
		fmul	st, st(1)
		fldcw	[ebp+var_8C]
		fistp	dword ptr [edx+8]
		fldcw	[ebp+var_8A]
		fxch	st(1)
		fadd	st, st
		faddp	st(2), st
		fmulp	st(1), st
		fldcw	[ebp+var_8C]
		fistp	dword ptr [edx+0Ch]
		fldcw	[ebp+var_8A]
		add	esp, 0BCh
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C2F80:				; CODE XREF: sub_6D4C2C98+2Bj
		mov	edi, [ebp+arg_8]
		test	edi, edi
		jz	short loc_6D4C2FA5
		mov	eax, [ebp+arg_8]
		mov	dword ptr [eax+0Ch], 0
		mov	dword ptr [eax+8], 0
		mov	dword ptr [eax+4], 0
		mov	dword ptr [eax], 0

loc_6D4C2FA5:				; CODE XREF: sub_6D4C2C98+2EDj
		mov	esi, [ebp+arg_C]
		test	esi, esi
		jz	loc_6D4C2E01
		lea	esi, [ebx+18h]
		mov	ecx, 4
		mov	edi, [ebp+arg_C]
		rep movsd
		add	esp, 0BCh
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C2FC8:				; CODE XREF: sub_6D4C2C98+18Bj
					; sub_6D4C2C98+19Dj
		mov	eax, 1
		jmp	loc_6D4C2E4C
; ---------------------------------------------------------------------------
		align 4

loc_6D4C2FD4:				; CODE XREF: sub_6D4C2C98+1Fj
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	sub_6D4C1AC8
		mov	esi, eax
		test	eax, eax
		jnz	short loc_6D4C3008

loc_6D4C2FE2:				; CODE XREF: sub_6D4C2C98+14j
					; sub_6D4C2C98+37Aj
		mov	eax, [ebp+arg_C]
		mov	[esp+0C8h+var_BC], eax
		mov	edx, [ebp+arg_8]
		mov	[esp+0C8h+var_C0], edx
		mov	dword ptr [esp+0C8h+var_C8+4], edi
		mov	dword ptr [esp+0C8h+var_C8], 0
		call	pango_font_get_glyph_extents
		jmp	loc_6D4C2E01
; ---------------------------------------------------------------------------
		align 4

loc_6D4C3008:				; CODE XREF: sub_6D4C2C98+348j
		mov	dword ptr [esp+0C8h+var_C8], eax
		call	cairo_scaled_font_status
		test	eax, eax
		jnz	short loc_6D4C2FE2
		lea	eax, [ebp+var_58]
		mov	dword ptr [esp+0C8h+var_C8+4], eax
		mov	dword ptr [esp+0C8h+var_C8], esi
		call	cairo_scaled_font_extents
		mov	dword ptr [ebx+18h], 0
		mov	dword ptr [ebx+20h], 0
		fld	[ebp+var_58]
		fld	[ebp+var_50]
		fld	st(1)
		fadd	st, st(1)
		fstp	[esp+0C8h+var_C8]
		fxch	st(1)
		fstp	[ebp+var_A8]
		fstp	[ebp+var_B8]
		call	pango_units_from_double
		mov	[ebx+24h], eax
		mov	edx, [ebx+14h]
		cmp	edx, 2
		fld	[ebp+var_A8]
		fld	[ebp+var_B8]
		jz	short loc_6D4C3099
		fstp	st
		cmp	edx, 3
		jz	short loc_6D4C30AA
		dec	edx
		jz	short loc_6D4C30AE
		fstp	[esp+0C8h+var_C8]
		call	pango_units_from_double
		neg	eax
		mov	[ebx+1Ch], eax

loc_6D4C307F:				; CODE XREF: sub_6D4C2C98+410j
					; sub_6D4C2C98+438j
		mov	dword ptr [esp+0C8h+var_C8], 1800h
		call	g_malloc0
		mov	[ebx+28h], eax
		mov	dword ptr [eax], 1
		jmp	loc_6D4C2CBD
; ---------------------------------------------------------------------------

loc_6D4C3099:				; CODE XREF: sub_6D4C2C98+3CEj
		fstp	st(1)
		fstp	[esp+0C8h+var_C8]
		call	pango_units_from_double
		neg	eax
		mov	[ebx+1Ch], eax
		jmp	short loc_6D4C307F
; ---------------------------------------------------------------------------

loc_6D4C30AA:				; CODE XREF: sub_6D4C2C98+3D5j
		fstp	st
		jmp	short loc_6D4C30B0
; ---------------------------------------------------------------------------

loc_6D4C30AE:				; CODE XREF: sub_6D4C2C98+3D8j
		fstp	st

loc_6D4C30B0:				; CODE XREF: sub_6D4C2C98+414j
		mov	edx, eax
		shr	edx, 1Fh
		lea	eax, [edx+eax]
		sar	eax, 1
		mov	edx, [ebx+10h]
		test	edx, edx
		jz	short loc_6D4C30CB
		add	eax, 200h
		and	eax, 0FFFFFC00h

loc_6D4C30CB:				; CODE XREF: sub_6D4C2C98+427j
		neg	eax
		mov	[ebx+1Ch], eax
		jmp	short loc_6D4C307F
; ---------------------------------------------------------------------------
		align 4

loc_6D4C30D4:				; CODE XREF: sub_6D4C2C98+17Fj
		mov	edx, [ebp+arg_C]
		mov	[esp+0C8h+var_BC], edx
		mov	eax, [ebp+arg_8]
		mov	[esp+0C8h+var_C0], eax
		mov	dword ptr [esp+0C8h+var_C8+4], edi
		mov	dword ptr [esp+0C8h+var_C8], 0
		call	pango_font_get_glyph_extents
		jmp	loc_6D4C2E01
sub_6D4C2C98	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C30F8	proc near		; DATA XREF: pango_cairo_font_map_get_type+50o
		push	ebp
		mov	ebp, esp
		leave
		retn
sub_6D4C30F8	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  16. pango_cairo_font_map_get_type

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_font_map_get_type
pango_cairo_font_map_get_type proc near	; CODE XREF: pango_cairo_font_map_set_default+Ep
					; pango_cairo_font_map_set_resolution+12p ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, ds:dword_6D4CB048
		test	eax, eax
		jz	short loc_6D4C311C

loc_6D4C3110:				; CODE XREF: pango_cairo_font_map_get_type+2Aj
		mov	eax, ds:dword_6D4CB048
		add	esp, 24h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C311C:				; CODE XREF: pango_cairo_font_map_get_type+Ej
		mov	[esp+28h+var_28], offset dword_6D4CB048
		call	g_once_init_enter_impl
		test	eax, eax
		jz	short loc_6D4C3110
		mov	[esp+28h+var_28], offset aPangocairofo_0 ; "PangoCairoFontMap"
		call	g_intern_static_string
		mov	[esp+28h+var_10], 0
		mov	[esp+28h+var_14], 0
		mov	[esp+28h+var_18], 0
		mov	[esp+28h+var_1C], offset sub_6D4C30F8
		mov	[esp+28h+var_20], 14h
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], 8
		call	g_type_register_static_simple
		mov	ebx, eax
		call	pango_font_map_get_type
		test	eax, eax
		jnz	short loc_6D4C3198

loc_6D4C317B:				; CODE XREF: pango_cairo_font_map_get_type+A4j
		mov	[esp+28h+var_24], ebx
		mov	[esp+28h+var_28], offset dword_6D4CB048
		call	g_once_init_leave
		mov	eax, ds:dword_6D4CB048
		add	esp, 24h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C3198:				; CODE XREF: pango_cairo_font_map_get_type+79j
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], ebx
		call	g_type_interface_add_prerequisite
		jmp	short loc_6D4C317B
pango_cairo_font_map_get_type endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  17. pango_cairo_font_map_new

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_font_map_new
pango_cairo_font_map_new proc near	; CODE XREF: pango_cairo_font_map_get_default:loc_6D4C323Cp

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	g_type_init
		call	sub_6D4C59D4
		mov	[esp+18h+var_14], 0
		mov	[esp+18h+var_18], eax
		call	g_object_new
		leave
		retn
pango_cairo_font_map_new endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  18. pango_cairo_font_map_new_for_font_type

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_font_map_new_for_font_type
pango_cairo_font_map_new_for_font_type proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		call	g_type_init
		cmp	ebx, 1
		jz	short loc_6D4C31F0
		cmp	ebx, 2
		jz	short loc_6D4C320C
		xor	eax, eax
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C31F0:				; CODE XREF: pango_cairo_font_map_new_for_font_type+12j
		call	sub_6D4C6328
		mov	[esp+18h+var_14], 0
		mov	[esp+18h+var_18], eax
		call	g_object_new
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C320C:				; CODE XREF: pango_cairo_font_map_new_for_font_type+17j
		call	sub_6D4C59D4
		mov	[esp+18h+var_14], 0
		mov	[esp+18h+var_18], eax
		call	g_object_new
		add	esp, 14h
		pop	ebx
		leave
		retn
pango_cairo_font_map_new_for_font_type endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  13. pango_cairo_font_map_get_default

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_font_map_get_default
pango_cairo_font_map_get_default proc near ; CODE XREF:	pango_cairo_create_context+Ep
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, ds:dword_6D4CB044
		test	eax, eax
		jz	short loc_6D4C323C
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C323C:				; CODE XREF: pango_cairo_font_map_get_default+Dj
		call	pango_cairo_font_map_new
		mov	ds:dword_6D4CB044, eax
		leave
		retn
pango_cairo_font_map_get_default endp

; Exported entry  19. pango_cairo_font_map_set_default

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_font_map_set_default
pango_cairo_font_map_set_default proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		test	ebx, ebx
		jz	short loc_6D4C3298
		call	pango_cairo_font_map_get_type
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6D4C3265
		cmp	[edx], eax
		jz	short loc_6D4C3298

loc_6D4C3265:				; CODE XREF: pango_cairo_font_map_set_default+17j
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C3298
		mov	[esp+18h+var_10], offset aFontmapNullPan ; "fontmap == NULL || PANGO_IS_CAIRO_FONT_"...
		mov	[esp+18h+var_14], offset aPango_cairo_fo ; "pango_cairo_font_map_set_default"
		mov	[esp+18h+var_18], offset aPango_1 ; "Pango"
		call	g_return_if_fail_warning

loc_6D4C3291:				; CODE XREF: pango_cairo_font_map_set_default+57j
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C3298:				; CODE XREF: pango_cairo_font_map_set_default+Cj
					; pango_cairo_font_map_set_default+1Bj	...
		mov	eax, ds:dword_6D4CB044
		cmp	ebx, eax
		jz	short loc_6D4C3291
		test	eax, eax
		jz	short loc_6D4C32AD
		mov	[esp+18h+var_18], eax
		call	g_object_unref

loc_6D4C32AD:				; CODE XREF: pango_cairo_font_map_set_default+5Bj
		test	ebx, ebx
		jz	short loc_6D4C32B9
		mov	[esp+18h+var_18], ebx
		call	g_object_ref

loc_6D4C32B9:				; CODE XREF: pango_cairo_font_map_set_default+67j
		mov	ds:dword_6D4CB044, ebx
		add	esp, 14h
		pop	ebx
		leave
		retn
pango_cairo_font_map_set_default endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  20. pango_cairo_font_map_set_resolution

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl pango_cairo_font_map_set_resolution(int, double)
		public pango_cairo_font_map_set_resolution
pango_cairo_font_map_set_resolution proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= qword	ptr -20h
arg_0		= dword	ptr  8
arg_4		= qword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [ebp+arg_0]
		fld	[ebp+arg_4]
		fstp	[ebp+var_20]
		call	pango_cairo_font_map_get_type
		mov	edi, eax
		test	ebx, ebx
		jz	short loc_6D4C32FF
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_6D4C32EF
		cmp	[esi], eax
		jz	short loc_6D4C3320

loc_6D4C32EF:				; CODE XREF: pango_cairo_font_map_set_resolution+21j
		mov	[esp+38h+var_34], edi
		mov	[esp+38h+var_38], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C3320

loc_6D4C32FF:				; CODE XREF: pango_cairo_font_map_set_resolution+1Bj
		mov	dword ptr [ebp+arg_4+4], offset	aPango_is_cairo	; "PANGO_IS_CAIRO_FONT_MAP (fontmap)"
		mov	dword ptr [ebp+arg_4], offset aPango_cairo__5 ;	"pango_cairo_font_map_set_resolution"
		mov	[ebp+arg_0], offset aPango_1 ; "Pango"
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	g_return_if_fail_warning
; ---------------------------------------------------------------------------

loc_6D4C3320:				; CODE XREF: pango_cairo_font_map_set_resolution+25j
					; pango_cairo_font_map_set_resolution+35j
		mov	[esp+38h+var_34], edi
		mov	[esp+38h+var_38], esi
		call	g_type_interface_peek
		fld	[ebp+var_20]
		fstp	[ebp+arg_4]
		mov	[ebp+arg_0], ebx
		mov	eax, [eax+8]
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	eax
pango_cairo_font_map_set_resolution endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  15. pango_cairo_font_map_get_resolution

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_font_map_get_resolution
pango_cairo_font_map_get_resolution proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [ebp+arg_0]
		call	pango_cairo_font_map_get_type
		mov	edi, eax
		test	ebx, ebx
		jz	short loc_6D4C3375
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_6D4C3365
		cmp	[esi], eax
		jz	short loc_6D4C33A0

loc_6D4C3365:				; CODE XREF: pango_cairo_font_map_get_resolution+1Bj
		mov	[esp+28h+var_24], edi
		mov	[esp+28h+var_28], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C33A0

loc_6D4C3375:				; CODE XREF: pango_cairo_font_map_get_resolution+15j
		mov	[esp+28h+var_20], offset aPango_is_cairo ; "PANGO_IS_CAIRO_FONT_MAP (fontmap)"
		mov	[esp+28h+var_24], offset aPango_cairo__6 ; "pango_cairo_font_map_get_resolution"
		mov	[esp+28h+var_28], offset aPango_1 ; "Pango"
		call	g_return_if_fail_warning
		fld	ds:flt_6D4C95C4
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C33A0:				; CODE XREF: pango_cairo_font_map_get_resolution+1Fj
					; pango_cairo_font_map_get_resolution+2Fj
		mov	[esp+28h+var_24], edi
		mov	[esp+28h+var_28], esi
		call	g_type_interface_peek
		mov	[ebp+arg_0], ebx
		mov	eax, [eax+0Ch]
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	eax
pango_cairo_font_map_get_resolution endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  12. pango_cairo_font_map_create_context

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_font_map_create_context
pango_cairo_font_map_create_context proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		call	pango_cairo_font_map_get_type
		test	ebx, ebx
		jz	short loc_6D4C33E9
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6D4C33D9
		cmp	[edx], eax
		jz	short loc_6D4C3410

loc_6D4C33D9:				; CODE XREF: pango_cairo_font_map_create_context+17j
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C3410

loc_6D4C33E9:				; CODE XREF: pango_cairo_font_map_create_context+11j
		mov	[esp+18h+var_10], offset aPango_is_cairo ; "PANGO_IS_CAIRO_FONT_MAP (fontmap)"
		mov	[esp+18h+var_14], offset aPango_cairo__7 ; "pango_cairo_font_map_create_context"
		mov	[esp+18h+var_18], offset aPango_1 ; "Pango"
		call	g_return_if_fail_warning
		xor	eax, eax
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C3410:				; CODE XREF: pango_cairo_font_map_create_context+1Bj
					; pango_cairo_font_map_create_context+2Bj
		call	pango_font_map_get_type
		mov	[esp+14h+var_10], eax
		mov	[esp+14h+var_14], ebx
		call	g_type_check_instance_cast
		mov	[ebp+arg_0], eax
		add	esp, 14h
		pop	ebx
		leave
		jmp	pango_font_map_create_context
pango_cairo_font_map_create_context endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  14. pango_cairo_font_map_get_font_type

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_font_map_get_font_type
pango_cairo_font_map_get_font_type proc	near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [ebp+arg_0]
		call	pango_cairo_font_map_get_type
		mov	edi, eax
		test	ebx, ebx
		jz	short loc_6D4C3461
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_6D4C3451
		cmp	[esi], eax
		jz	short loc_6D4C3488

loc_6D4C3451:				; CODE XREF: pango_cairo_font_map_get_font_type+1Bj
		mov	[esp+28h+var_24], edi
		mov	[esp+28h+var_28], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C3488

loc_6D4C3461:				; CODE XREF: pango_cairo_font_map_get_font_type+15j
		mov	[esp+28h+var_20], offset aPango_is_cairo ; "PANGO_IS_CAIRO_FONT_MAP (fontmap)"
		mov	[esp+28h+var_24], offset aPango_cairo__8 ; "pango_cairo_font_map_get_font_type"
		mov	[esp+28h+var_28], offset aPango_1 ; "Pango"
		call	g_return_if_fail_warning
		xor	eax, eax
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C3488:				; CODE XREF: pango_cairo_font_map_get_font_type+1Fj
					; pango_cairo_font_map_get_font_type+2Fj
		mov	[esp+28h+var_24], edi
		mov	[esp+28h+var_28], esi
		call	g_type_interface_peek
		mov	[ebp+arg_0], ebx
		mov	eax, [eax+10h]
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	eax
pango_cairo_font_map_get_font_type endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C34A4	proc near		; DATA XREF: pango_cairo_renderer_get_type+47o
		push	ebp
		mov	ebp, esp
		leave
		retn
sub_6D4C34A4	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6D4C34AC(double, double, double, double)
sub_6D4C34AC	proc near		; CODE XREF: sub_6D4C3968+5Ep
					; pango_cairo_show_error_underline+79p	...

var_A8		= dword	ptr -0A8h
var_A4		= qword	ptr -0A4h
var_9C		= qword	ptr -9Ch
var_88		= qword	ptr -88h
var_70		= qword	ptr -70h
var_68		= qword	ptr -68h
var_60		= qword	ptr -60h
var_54		= dword	ptr -54h
var_50		= qword	ptr -50h
var_48		= qword	ptr -48h
var_40		= qword	ptr -40h
var_38		= qword	ptr -38h
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h
arg_10		= qword	ptr  18h
arg_18		= qword	ptr  20h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 9Ch
		mov	ebx, eax
		fld	[ebp+arg_8]
		fstp	[ebp+var_40]
		fld	[ebp+arg_10]
		fld	[ebp+arg_18]
		fld	st
		fdiv	ds:flt_6D4C9830
		fst	[ebp+var_60]
		fmul	ds:flt_6D4C9834
		fst	[ebp+var_50]
		fadd	st, st
		fstp	[ebp+var_30]
		fld	ds:flt_6D4C9838
		fld	[ebp+var_50]
		fmul	st, st(1)
		fadd	st, st(3)
		fdiv	[ebp+var_50]
		fnstcw	[ebp+var_1A]
		mov	ax, [ebp+var_1A]
		mov	ah, 0Ch
		mov	[ebp+var_1C], ax
		fldcw	[ebp+var_1C]
		fistp	[ebp+var_54]
		fldcw	[ebp+var_1A]
		fld	[ebp+var_50]
		fimul	[ebp+var_54]
		fsubp	st(3), st
		fmul	st(2), st
		fxch	st(2)
		fadd	[ebp+arg_0]
		fxch	st(1)
		fadd	[ebp+var_40]
		fstp	[ebp+var_38]
		fld	[ebp+var_50]
		fadd	st, st(1)
		fld	[ebp+var_30]
		fadd	st, st(2)
		fstp	[ebp+var_28]
		fxch	st(2)
		fmul	[ebp+var_60]
		fst	[ebp+var_68]
		fld	[ebp+var_40]
		fadd	st, st(1)
		fst	[ebp+var_70]
		fstp	[esp+0A8h+var_9C]
		fsubp	st(1), st
		fstp	[esp+0A8h+var_A4]
		mov	[esp+0A8h+var_A8], ebx
		fstp	[ebp+var_88]
		call	cairo_move_to
		mov	edi, [ebp+var_54]
		sub	edi, 2
		test	edi, edi
		fld	[ebp+var_88]
		jle	loc_6D4C36C4
		xor	esi, esi
		fld	[ebp+var_60]
		fadd	[ebp+var_40]
		fstp	[ebp+var_48]

loc_6D4C3570:				; CODE XREF: sub_6D4C34AC+10Aj
		fld	[ebp+var_38]
		fstp	[esp+0A8h+var_9C]
		fst	[esp+0A8h+var_A4]
		mov	[esp+0A8h+var_A8], ebx
		fstp	[ebp+var_88]
		call	cairo_line_to
		fld	[ebp+var_48]
		fstp	[esp+0A8h+var_9C]
		fld	[ebp+var_28]
		fstp	[esp+0A8h+var_A4]
		mov	[esp+0A8h+var_A8], ebx
		call	cairo_line_to
		fld	[ebp+var_88]
		fadd	[ebp+var_30]
		fld	[ebp+var_28]
		fadd	[ebp+var_30]
		fstp	[ebp+var_28]
		add	esi, 2
		cmp	esi, edi
		jl	short loc_6D4C3570
		mov	eax, [ebp+var_54]
		sub	eax, 3
		shr	eax, 1
		lea	esi, [eax+eax+2]
		lea	edi, [esi+1]

loc_6D4C35C7:				; CODE XREF: sub_6D4C34AC+21Fj
		fld	[ebp+var_38]
		fstp	[esp+0A8h+var_9C]
		fst	[esp+0A8h+var_A4]
		mov	[esp+0A8h+var_A8], ebx
		fstp	[ebp+var_88]
		call	cairo_line_to
		cmp	edi, [ebp+var_54]
		fld	[ebp+var_88]
		jz	short loc_6D4C365C
		lea	eax, [esi+2]
		cmp	eax, [ebp+var_54]
		jz	loc_6D4C3684

loc_6D4C35F7:				; CODE XREF: sub_6D4C34AC+1D1j
					; sub_6D4C34AC+213j
		fld	[ebp+var_50]
		fsubr	st, st(1)
		fstp	[ebp+var_28]
		fld	[ebp+var_38]
		fsub	[ebp+var_60]
		fstp	[ebp+var_38]

loc_6D4C3608:				; CODE XREF: sub_6D4C34AC+1A0j
		fld	[ebp+var_38]
		fstp	[esp+0A8h+var_9C]
		fst	[esp+0A8h+var_A4]
		mov	[esp+0A8h+var_A8], ebx
		fstp	[ebp+var_88]
		call	cairo_line_to
		fld	[ebp+var_40]
		fstp	[esp+0A8h+var_9C]
		fld	[ebp+var_28]
		fstp	[esp+0A8h+var_A4]
		mov	[esp+0A8h+var_A8], ebx
		call	cairo_line_to
		fld	[ebp+var_28]
		fsub	[ebp+var_30]
		fstp	[ebp+var_28]
		fld	[ebp+var_88]
		fsub	[ebp+var_30]
		sub	esi, 2
		jns	short loc_6D4C3608
		fstp	st
		add	esp, 9Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C365C:				; CODE XREF: sub_6D4C34AC+13Dj
		fld	[ebp+var_38]
		fsub	[ebp+var_68]
		fstp	[esp+0A8h+var_9C]
		fld	[ebp+var_68]
		faddp	st(1), st
		fstp	[esp+0A8h+var_A4]
		mov	[esp+0A8h+var_A8], ebx
		call	cairo_line_to
		fld	[ebp+var_88]
		jmp	loc_6D4C35F7
; ---------------------------------------------------------------------------
		align 4

loc_6D4C3684:				; CODE XREF: sub_6D4C34AC+145j
		fld	[ebp+var_70]
		fstp	[esp+0A8h+var_9C]
		fld	[ebp+var_28]
		fadd	[ebp+var_68]
		fstp	[esp+0A8h+var_A4]
		mov	[esp+0A8h+var_A8], ebx
		fstp	[ebp+var_88]
		call	cairo_line_to
		fld	[ebp+var_40]
		fstp	[esp+0A8h+var_9C]
		fld	[ebp+var_28]
		fstp	[esp+0A8h+var_A4]
		mov	[esp+0A8h+var_A8], ebx
		call	cairo_line_to
		fld	[ebp+var_88]
		jmp	loc_6D4C35F7
; ---------------------------------------------------------------------------

loc_6D4C36C4:				; CODE XREF: sub_6D4C34AC+B3j
		mov	edi, 1
		xor	esi, esi
		jmp	loc_6D4C35C7
sub_6D4C34AC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C36D0	proc near		; CODE XREF: sub_6D4C4BC0+20p
					; sub_6D4C4C18+20p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, eax
		mov	eax, [eax+20h]
		mov	[esp+18h+var_18], eax
		call	cairo_has_current_point
		mov	[ebx+44h], eax
		lea	eax, [ebx+38h]
		mov	[esp+18h+var_10], eax
		lea	eax, [ebx+30h]
		mov	[esp+18h+var_14], eax
		mov	eax, [ebx+20h]
		mov	[esp+18h+var_18], eax
		call	cairo_get_current_point
		mov	eax, [ebx+20h]
		mov	[esp+18h+var_18], eax
		call	cairo_get_target
		mov	[esp+18h+var_18], eax
		call	cairo_surface_has_show_text_glyphs
		mov	[ebx+28h], eax
		add	esp, 14h
		pop	ebx
		leave
		retn
sub_6D4C36D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C371C	proc near		; CODE XREF: sub_6D4C4BC0+43p
					; sub_6D4C4C18+43p ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	edx, [eax+44h]
		test	edx, edx
		jnz	short loc_6D4C3738
		mov	eax, [eax+20h]
		mov	[esp+28h+var_28], eax
		call	cairo_new_sub_path
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C3738:				; CODE XREF: sub_6D4C371C+Bj
		mov	edx, [eax+38h]
		mov	ecx, [eax+3Ch]
		mov	[esp+28h+var_1C], edx
		mov	[esp+28h+var_18], ecx
		mov	edx, [eax+30h]
		mov	ecx, [eax+34h]
		mov	[esp+28h+var_24], edx
		mov	[esp+28h+var_20], ecx
		mov	eax, [eax+20h]
		mov	[esp+28h+var_28], eax
		call	cairo_move_to
		leave
		retn
sub_6D4C371C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C3764	proc near		; CODE XREF: sub_6D4C4BC0+51j
					; sub_6D4C4C18+51j ...

var_18		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [eax+40h]
		test	ebx, ebx
		jz	short loc_6D4C37CC
		mov	dword ptr [eax+20h], 0
		mov	dword ptr [eax+24h], 0
		mov	dword ptr [eax+28h], 0
		mov	dword ptr [eax+30h], 0
		mov	dword ptr [eax+34h], 0
		mov	dword ptr [eax+38h], 0
		mov	dword ptr [eax+3Ch], 0
		mov	eax, ds:g_threads_got_initialized
		mov	ecx, [eax]
		test	ecx, ecx
		jz	short loc_6D4C37C4
		mov	eax, ds:g_thread_functions_for_glib_use
		mov	ebx, [eax+0Ch]
		mov	eax, ds:dword_6D4CB04C
		test	eax, eax
		jz	short loc_6D4C37DC

loc_6D4C37BF:				; CODE XREF: sub_6D4C3764+84j
		mov	[esp+18h+var_18], eax
		call	ebx

loc_6D4C37C4:				; CODE XREF: sub_6D4C3764+48j
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C37CC:				; CODE XREF: sub_6D4C3764+Cj
		mov	[esp+18h+var_18], eax
		call	g_object_unref
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C37DC:				; CODE XREF: sub_6D4C3764+59j
		mov	[esp+18h+var_18], offset dword_6D4CB04C
		call	g_static_mutex_get_mutex_impl
		jmp	short loc_6D4C37BF
sub_6D4C3764	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C37EC	proc near		; DATA XREF: pango_cairo_renderer_get_type+57o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	[esp+18h+var_18], ebx
		call	g_type_class_peek_parent
		mov	ds:dword_6D4CB058, eax
		call	pango_renderer_get_type
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_class_cast
		mov	dword ptr [eax+44h], offset sub_6D4C4A4C
		mov	dword ptr [eax+6Ch], offset sub_6D4C4768
		mov	dword ptr [eax+48h], offset sub_6D4C3B4C
		mov	dword ptr [eax+54h], offset sub_6D4C3A1C
		mov	dword ptr [eax+4Ch], offset sub_6D4C3968
		mov	dword ptr [eax+50h], offset sub_6D4C38A4
		add	esp, 14h
		pop	ebx
		leave
		retn
sub_6D4C37EC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C3844	proc near		; CODE XREF: sub_6D4C38A4+B4p
					; sub_6D4C3968+9Ep ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= qword	ptr -24h
var_1C		= qword	ptr -1Ch
var_14		= qword	ptr -14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	ebx, eax
		mov	dword ptr [esp+28h+var_24], edx
		mov	[esp+28h+var_28], eax
		call	pango_renderer_get_color
		test	eax, eax
		jz	short loc_6D4C389C
		movzx	edx, word ptr [eax+4]
		fld	ds:flt_6D4C983C
		fld	st
		push	edx
		fidivr	[esp+2Ch+var_2C]
		fstp	[esp+2Ch+var_14]
		movzx	edx, word ptr [eax+2]
		fld	st
		mov	[esp+2Ch+var_2C], edx
		fidivr	[esp+2Ch+var_2C]
		fstp	[esp+2Ch+var_1C]
		movzx	eax, word ptr [eax]
		mov	[esp+2Ch+var_2C], eax
		fidivr	[esp+2Ch+var_2C]
		add	esp, 4
		fstp	[esp+28h+var_24]
		mov	eax, [ebx+20h]
		mov	[esp+28h+var_28], eax
		call	cairo_set_source_rgb

loc_6D4C389C:				; CODE XREF: sub_6D4C3844+17j
		add	esp, 24h
		pop	ebx
		leave
		retn
sub_6D4C3844	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C38A4	proc near		; DATA XREF: sub_6D4C37EC+4Bo

var_68		= dword	ptr -68h
var_64		= qword	ptr -64h
var_5C		= qword	ptr -5Ch
var_48		= qword	ptr -48h
var_38		= qword	ptr -38h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebx+20h]
		mov	[esp+68h+var_68], ebx
		call	pango_renderer_get_layout
		test	eax, eax
		jz	loc_6D4C3945
		mov	[esp+68h+var_68], eax
		call	pango_layout_get_context
		lea	edx, [ebp+var_1C]
		mov	dword ptr [esp+68h+var_64], edx
		mov	[esp+68h+var_68], eax
		call	pango_cairo_context_get_shape_renderer
		mov	edi, eax
		test	eax, eax
		jz	short loc_6D4C3945
		fld	ds:flt_6D4C9840
		fld	st
		fimul	[ebp+arg_8]
		fadd	qword ptr [ebx+30h]
		fxch	st(1)
		fimul	[ebp+arg_C]
		fadd	qword ptr [ebx+38h]
		fxch	st(1)
		mov	[esp+68h+var_68], esi
		fstp	[ebp+var_38]
		fstp	[ebp+var_48]
		call	cairo_save
		mov	eax, [ebx+24h]
		test	eax, eax
		fld	[ebp+var_38]
		fld	[ebp+var_48]
		jz	short loc_6D4C3950

loc_6D4C3913:				; CODE XREF: sub_6D4C38A4+C1j
		fstp	[esp+68h+var_5C]
		fstp	[esp+68h+var_64]
		mov	[esp+68h+var_68], esi
		call	cairo_move_to
		mov	eax, [ebp+var_1C]
		mov	dword ptr [esp+68h+var_5C], eax
		mov	eax, [ebx+24h]
		mov	dword ptr [esp+68h+var_64+4], eax
		mov	eax, [ebp+arg_4]
		mov	dword ptr [esp+68h+var_64], eax
		mov	[esp+68h+var_68], esi
		call	edi
		mov	[esp+68h+var_68], esi
		call	cairo_restore

loc_6D4C3945:				; CODE XREF: sub_6D4C38A4+19j
					; sub_6D4C38A4+3Aj
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C3950:				; CODE XREF: sub_6D4C38A4+6Dj
		fstp	st
		fstp	st
		xor	edx, edx
		mov	eax, ebx
		call	sub_6D4C3844
		fld	[ebp+var_48]
		fld	[ebp+var_38]
		fxch	st(1)
		jmp	short loc_6D4C3913
sub_6D4C38A4	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C3968	proc near		; DATA XREF: sub_6D4C37EC+44o

var_4C		= dword	ptr -4Ch
var_48		= qword	ptr -48h
var_40		= qword	ptr -40h
var_38		= qword	ptr -38h
var_30		= qword	ptr -30h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_20], eax
		mov	ecx, [ebp+arg_C]
		mov	edi, [ebp+arg_10]
		mov	esi, [ebx+20h]
		mov	eax, [ebx+24h]
		test	eax, eax
		jz	short loc_6D4C39F4

loc_6D4C3990:				; CODE XREF: sub_6D4C3968+AEj
		fld	ds:flt_6D4C9840
		fld	st
		push	edi
		fimul	[esp+4Ch+var_4C]
		fstp	[esp+4Ch+var_30] ; double
		fld	st
		mov	[esp+4Ch+var_4C], ecx
		fimul	[esp+4Ch+var_4C]
		add	esp, 4
		fstp	[esp+48h+var_38] ; double
		fld	st
		fimul	[ebp+var_20]
		fadd	qword ptr [ebx+38h]
		fstp	[esp+48h+var_40] ; double
		fimul	[ebp+var_1C]
		fadd	qword ptr [ebx+30h]
		fstp	[esp+48h+var_48] ; double
		mov	eax, esi
		call	sub_6D4C34AC
		mov	edx, [ebx+24h]
		test	edx, edx
		jz	short loc_6D4C39DC
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C39DC:				; CODE XREF: sub_6D4C3968+68j
		mov	dword ptr [esp+48h+var_48], esi
		call	cairo_fill
		mov	[ebp+arg_0], esi
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	cairo_restore
; ---------------------------------------------------------------------------
		align 4

loc_6D4C39F4:				; CODE XREF: sub_6D4C3968+26j
		mov	dword ptr [esp+48h+var_48], esi
		mov	[ebp+var_24], ecx
		call	cairo_save
		mov	edx, 2
		mov	eax, ebx
		call	sub_6D4C3844
		mov	dword ptr [esp+48h+var_48], esi
		call	cairo_new_path
		mov	ecx, [ebp+var_24]
		jmp	loc_6D4C3990
sub_6D4C3968	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6D4C3A1C(int,	int, double, double, double, double, double, double)
sub_6D4C3A1C	proc near		; DATA XREF: sub_6D4C37EC+3Do

var_68		= dword	ptr -68h
var_64		= qword	ptr -64h
var_5C		= qword	ptr -5Ch
var_48		= qword	ptr -48h
var_40		= qword	ptr -40h
var_38		= qword	ptr -38h
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
var_20		= qword	ptr -20h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= qword	ptr  10h
arg_10		= qword	ptr  18h
arg_18		= qword	ptr  20h
arg_20		= qword	ptr  28h
arg_28		= qword	ptr  30h
arg_30		= qword	ptr  38h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 60h
		mov	esi, [ebp+arg_0]
		fld	[ebp+arg_8]
		fstp	[ebp+var_20]
		fld	[ebp+arg_10]
		fstp	[ebp+var_30]
		fld	[ebp+arg_18]
		fstp	[ebp+var_38]
		fld	[ebp+arg_20]
		fstp	[ebp+var_28]
		fld	[ebp+arg_28]
		fstp	[ebp+var_40]
		fld	[ebp+arg_30]
		fstp	[ebp+var_48]
		mov	ebx, [esi+20h]
		mov	[esp+68h+var_68], ebx
		call	cairo_save
		mov	ecx, [esi+24h]
		test	ecx, ecx
		jz	loc_6D4C3B3C

loc_6D4C3A61:				; CODE XREF: sub_6D4C3A1C+12Aj
		mov	eax, [esi+30h]
		mov	edx, [esi+34h]
		mov	[ebp+var_10], eax
		mov	[ebp+var_C], edx
		mov	eax, [esi+38h]
		mov	edx, [esi+3Ch]
		mov	[ebp+var_18], eax
		mov	[ebp+var_14], edx
		lea	eax, [ebp+var_18]
		mov	dword ptr [esp+68h+var_64+4], eax
		lea	eax, [ebp+var_10]
		mov	dword ptr [esp+68h+var_64], eax
		mov	[esp+68h+var_68], ebx
		call	cairo_user_to_device_distance
		mov	[esp+68h+var_68], ebx
		call	cairo_identity_matrix
		mov	eax, [ebp+var_18]
		mov	edx, [ebp+var_14]
		mov	dword ptr [esp+68h+var_5C], eax
		mov	dword ptr [esp+68h+var_5C+4], edx
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_C]
		mov	dword ptr [esp+68h+var_64], eax
		mov	dword ptr [esp+68h+var_64+4], edx
		mov	[esp+68h+var_68], ebx
		call	cairo_translate
		fld	[ebp+var_20]
		fstp	[esp+68h+var_5C]
		fld	[ebp+var_30]
		fstp	[esp+68h+var_64]
		mov	[esp+68h+var_68], ebx
		call	cairo_move_to
		fld	[ebp+var_20]
		fstp	[esp+68h+var_5C]
		fld	[ebp+var_38]
		fstp	[esp+68h+var_64]
		mov	[esp+68h+var_68], ebx
		call	cairo_line_to
		fld	[ebp+var_28]
		fstp	[esp+68h+var_5C]
		fld	[ebp+var_48]
		fstp	[esp+68h+var_64]
		mov	[esp+68h+var_68], ebx
		call	cairo_line_to
		fld	[ebp+var_28]
		fstp	[esp+68h+var_5C]
		fld	[ebp+var_40]
		fstp	[esp+68h+var_64]
		mov	[esp+68h+var_68], ebx
		call	cairo_line_to
		mov	[esp+68h+var_68], ebx
		call	cairo_close_path
		mov	edx, [esi+24h]
		test	edx, edx
		jnz	short loc_6D4C3B2A
		mov	[esp+68h+var_68], ebx
		call	cairo_fill

loc_6D4C3B2A:				; CODE XREF: sub_6D4C3A1C+104j
		mov	[esp+68h+var_68], ebx
		call	cairo_restore
		add	esp, 60h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C3B3C:				; CODE XREF: sub_6D4C3A1C+3Fj
		mov	edx, [ebp+arg_4]
		mov	eax, esi
		call	sub_6D4C3844
		jmp	loc_6D4C3A61
sub_6D4C3A1C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C3B4C	proc near		; DATA XREF: sub_6D4C37EC+36o

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= qword	ptr -54h
var_4C		= qword	ptr -4Ch
var_44		= qword	ptr -44h
var_3C		= qword	ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_1C], eax
		mov	ecx, [ebp+arg_C]
		mov	edi, [ebp+arg_10]
		mov	esi, [ebp+arg_14]
		mov	eax, [ebx+24h]
		test	eax, eax
		jz	short loc_6D4C3BE4

loc_6D4C3B71:				; CODE XREF: sub_6D4C3B4C+B6j
		fld	ds:flt_6D4C9840
		fld	st
		push	esi
		fimul	[esp+5Ch+var_5C]
		fstp	[esp+5Ch+var_3C]
		fld	st
		mov	[esp+5Ch+var_5C], edi
		fimul	[esp+5Ch+var_5C]
		fstp	[esp+5Ch+var_44]
		fld	st
		mov	[esp+5Ch+var_5C], ecx
		fimul	[esp+5Ch+var_5C]
		add	esp, 4
		fadd	qword ptr [ebx+38h]
		fstp	[esp+58h+var_4C]
		fimul	[ebp+var_1C]
		fadd	qword ptr [ebx+30h]
		fstp	[esp+58h+var_54]
		mov	eax, [ebx+20h]
		mov	[esp+58h+var_58], eax
		call	cairo_rectangle
		mov	esi, [ebx+24h]
		test	esi, esi
		jz	short loc_6D4C3BC4
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C3BC4:				; CODE XREF: sub_6D4C3B4C+6Dj
		mov	eax, [ebx+20h]
		mov	[esp+58h+var_58], eax
		call	cairo_fill
		mov	eax, [ebx+20h]
		mov	[ebp+arg_0], eax
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	cairo_restore
; ---------------------------------------------------------------------------
		align 4

loc_6D4C3BE4:				; CODE XREF: sub_6D4C3B4C+23j
		mov	eax, [ebx+20h]
		mov	[esp+58h+var_58], eax
		mov	[ebp+var_24], edx
		mov	[ebp+var_20], ecx
		call	cairo_save
		mov	edx, [ebp+var_24]
		mov	eax, ebx
		call	sub_6D4C3844
		mov	ecx, [ebp+var_20]
		jmp	loc_6D4C3B71
sub_6D4C3B4C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6D4C3C08(double, double, double, double, double)
sub_6D4C3C08	proc near		; CODE XREF: sub_6D4C410C+130p
					; sub_6D4C410C+2ABp

var_C8		= qword	ptr -0C8h
var_C0		= qword	ptr -0C0h
var_B4		= qword	ptr -0B4h
var_AC		= qword	ptr -0ACh
var_98		= qword	ptr -98h
var_88		= qword	ptr -88h
var_78		= qword	ptr -78h
var_68		= qword	ptr -68h
var_58		= qword	ptr -58h
var_50		= qword	ptr -50h
var_48		= qword	ptr -48h
var_40		= qword	ptr -40h
var_38		= qword	ptr -38h
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
var_20		= qword	ptr -20h
var_18		= qword	ptr -18h
var_10		= qword	ptr -10h
arg_0		= qword	ptr  8
arg_8		= qword	ptr  10h
arg_10		= qword	ptr  18h
arg_18		= qword	ptr  20h
arg_20		= qword	ptr  28h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 0C0h
		fld	[ebp+arg_0]
		fstp	[ebp+var_28]
		fld	[ebp+arg_8]
		fstp	[ebp+var_30]
		fld	[ebp+arg_10]
		fst	[ebp+var_10]
		fld	[ebp+arg_18]
		fst	[ebp+var_18]
		fld	[ebp+arg_20]
		mov	esi, edx
		mov	ebx, [eax+20h]
		mov	edx, [eax+24h]
		test	edx, edx
		jz	loc_6D4C3F9C
		fld	ds:dbl_6D4C9858
		fmul	st, st(1)
		fst	[ebp+var_20]
		fxch	st(2)
		fadd	st, st(1)
		fstp	[esp+0C8h+var_AC]
		fadd	st(2), st
		fxch	st(2)
		fstp	[esp+0C8h+var_B4]
		fld	[ebp+var_30]
		fsub	st, st(1)
		fstp	[esp+0C8h+var_C0+4]
		fld	[ebp+var_28]
		fsubrp	st(1), st
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		fstp	[ebp+var_68]
		call	cairo_rectangle
		test	esi, esi
		fld	[ebp+var_68]
		jz	loc_6D4C4018
		fstp	st
		fld	[ebp+var_10]
		fstp	[esp+0C8h+var_C0]
		fld	[ebp+var_18]
		fstp	[esp+0C8h+var_C8]
		call	atan2
		fstp	[ebp+var_48]
		fld	ds:dbl_6D4C9858
		fmul	[ebp+var_48]
		fstp	[esp+0C8h+var_C8]
		call	tan
		fld	ds:dbl_6D4C9848
		fucomp	st(1)
		fnstsw	ax
		test	ah, 45h
		fld	[ebp+var_68]
		jz	loc_6D4C4050
		fxch	st(1)
		fdivr	[ebp+var_20]
		fst	[ebp+var_38]
		fld	[ebp+var_10]
		fsub	st, st(2)
		fst	[ebp+var_50]
		fxch	st(1)
		fadd	st, st
		fucompp
		fnstsw	ax
		test	ah, 45h
		jnz	short loc_6D4C3CE8

loc_6D4C3CDC:				; CODE XREF: sub_6D4C3C08+452j
		fld	[ebp+var_50]
		fmul	ds:flt_6D4C9838
		fstp	[ebp+var_38]

loc_6D4C3CE8:				; CODE XREF: sub_6D4C3C08+D2j
		fld	[ebp+var_48]
		fstp	[esp+0C8h+var_C8]
		fstp	[ebp+var_68]
		call	cos
		fld	ds:dbl_6D4C9848
		fucomp	st(1)
		fnstsw	ax
		test	ah, 45h
		fld	[ebp+var_68]
		jnz	loc_6D4C40E8
		fstp	st(1)
		fsubr	[ebp+var_18]

loc_6D4C3D11:				; CODE XREF: sub_6D4C3C08+4FEj
		fld	st
		fmul	ds:flt_6D4C9838
		fstp	[ebp+var_40]

loc_6D4C3D1C:				; CODE XREF: sub_6D4C3C08+4F8j
		mov	dword ptr [esp+0C8h+var_C8], ebx
		fstp	[ebp+var_68]
		call	cairo_new_sub_path
		fld	[ebp+var_30]
		fadd	[ebp+var_20]
		fld	[ebp+var_28]
		fadd	[ebp+var_10]
		fst	[ebp+var_58]
		fsub	[ebp+var_38]
		fxch	st(1)
		fst	[esp+0C8h+var_C0+4]
		fxch	st(1)
		fst	[esp+0C8h+var_C8+4]
		fxch	st(1)
		mov	dword ptr [esp+0C8h+var_C8], ebx
		fstp	[ebp+var_78]
		fstp	[ebp+var_98]
		call	cairo_line_to
		fld	[ebp+var_28]
		fadd	[ebp+var_38]
		fld	[ebp+var_78]
		fstp	[esp+0C8h+var_C0+4]
		fst	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		fstp	[ebp+var_88]
		call	cairo_line_to
		fld	ds:flt_6D4C9838
		fld	[ebp+var_18]
		fmul	st, st(1)
		fadd	[ebp+var_30]
		fstp	[ebp+var_38]
		fld	[ebp+var_10]
		fmul	st, st(1)
		fadd	[ebp+var_28]
		fstp	[ebp+var_10]
		fld	[ebp+var_38]
		fsub	[ebp+var_40]
		fstp	[esp+0C8h+var_C0+4]
		fld	[ebp+var_10]
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		fstp	[ebp+var_78]
		call	cairo_line_to
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_close_path
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_new_sub_path
		fld	[ebp+var_30]
		fadd	[ebp+var_18]
		fst	[ebp+var_18]
		fsub	[ebp+var_20]
		fst	[esp+0C8h+var_C0+4]
		fld	[ebp+var_98]
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		fstp	[ebp+var_98]
		call	cairo_line_to
		fld	[ebp+var_40]
		fadd	[ebp+var_38]
		fstp	[esp+0C8h+var_C0+4]
		fld	[ebp+var_10]
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_line_to
		fld	[ebp+var_98]
		fstp	[esp+0C8h+var_C0+4]
		fld	[ebp+var_88]
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_line_to
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_close_path
		fld	[ebp+var_48]
		fsubr	ds:dbl_6D4C9850
		fld	[ebp+var_78]
		fmul	st, st(1)
		fstp	[esp+0C8h+var_C8]
		fstp	[ebp+var_88]
		call	tan
		fld	ds:dbl_6D4C9848
		fucomp	st(1)
		fnstsw	ax
		test	ah, 45h
		fld	[ebp+var_68]
		fld	[ebp+var_88]
		jz	short loc_6D4C3E70
		fxch	st(2)
		fdivr	[ebp+var_20]
		fst	[ebp+var_48]
		fadd	st, st
		fucompp
		fnstsw	ax
		test	ah, 45h
		jnz	short loc_6D4C3E80
		jmp	short loc_6D4C3E74
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C3E70:				; CODE XREF: sub_6D4C3C08+24Ej
		fstp	st(1)
		fstp	st(1)

loc_6D4C3E74:				; CODE XREF: sub_6D4C3C08+263j
		fld	[ebp+var_50]
		fmul	ds:flt_6D4C9838
		fstp	[ebp+var_48]

loc_6D4C3E80:				; CODE XREF: sub_6D4C3C08+261j
		fstp	[esp+0C8h+var_C8]
		call	cos
		fld	ds:dbl_6D4C9848
		fucomp	st(1)
		fnstsw	ax
		test	ah, 45h
		jz	short loc_6D4C3EB0
		fdivr	[ebp+var_20]
		fst	[ebp+var_40]
		fadd	st, st
		fld	[ebp+var_50]
		fxch	st(1)
		fucompp
		fnstsw	ax
		test	ah, 45h
		jz	short loc_6D4C3EB2
		jmp	short loc_6D4C3EBE
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C3EB0:				; CODE XREF: sub_6D4C3C08+28Dj
		fstp	st

loc_6D4C3EB2:				; CODE XREF: sub_6D4C3C08+2A3j
		fld	[ebp+var_50]
		fmul	ds:flt_6D4C9838
		fstp	[ebp+var_40]

loc_6D4C3EBE:				; CODE XREF: sub_6D4C3C08+2A5j
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_new_sub_path
		fld	[ebp+var_30]
		fadd	[ebp+var_48]
		fld	[ebp+var_28]
		fadd	[ebp+var_20]
		fxch	st(1)
		fst	qword ptr [esp+0Ch]
		fxch	st(1)
		fst	[esp+0C4h+var_C0]
		fxch	st(1)
		mov	dword ptr [esp+0C4h+var_C8+4], ebx
		fstp	[ebp+var_68]
		fstp	[ebp+var_88]
		call	cairo_line_to
		fld	[ebp+var_18]
		fsub	[ebp+var_48]
		fst	qword ptr [esp+0Ch]
		fld	[ebp+var_88]
		fstp	[esp+0C4h+var_C0]
		mov	dword ptr [esp+0C4h+var_C8+4], ebx
		fstp	[ebp+var_78]
		call	cairo_line_to
		fld	[ebp+var_38]
		fstp	qword ptr [esp+0Ch]
		fld	[ebp+var_10]
		fsub	[ebp+var_40]
		fstp	[esp+0C4h+var_C0]
		mov	dword ptr [esp+0C4h+var_C8+4], ebx
		call	cairo_line_to
		mov	dword ptr [esp+0C4h+var_C8+4], ebx
		call	cairo_close_path
		mov	dword ptr [esp+0C4h+var_C8+4], ebx
		call	cairo_new_sub_path
		fld	[ebp+var_58]
		fsub	[ebp+var_20]
		fld	[ebp+var_68]
		fstp	qword ptr [esp+0Ch]
		fst	[esp+0C4h+var_C0]
		mov	dword ptr [esp+0C4h+var_C8+4], ebx
		fstp	[ebp+var_88]
		call	cairo_line_to
		fld	[ebp+var_38]
		fstp	qword ptr [esp+0Ch]
		fld	[ebp+var_40]
		fadd	[ebp+var_10]
		fstp	[esp+0C4h+var_C0]
		mov	dword ptr [esp+0C4h+var_C8+4], ebx
		call	cairo_line_to
		fld	[ebp+var_78]
		fstp	qword ptr [esp+0Ch]
		fld	[ebp+var_88]
		fstp	[esp+0C4h+var_C0]
		mov	dword ptr [esp+0C4h+var_C8+4], ebx
		call	cairo_line_to
		mov	dword ptr [ebp+arg_0], ebx
		add	esp, 0C0h
		pop	ebx
		pop	esi
		leave
		jmp	cairo_close_path
; ---------------------------------------------------------------------------
		align 4

loc_6D4C3F9C:				; CODE XREF: sub_6D4C3C08+30j
		fstp	st(1)
		fstp	st(1)
		fld	[ebp+var_18]
		fstp	[esp+0C8h+var_AC]
		fld	[ebp+var_10]
		fstp	[esp+0C8h+var_B4]
		fld	[ebp+var_30]
		fstp	[esp+0C8h+var_C0+4]
		fld	[ebp+var_28]
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		fstp	[ebp+var_68]
		call	cairo_rectangle
		test	esi, esi
		fld	[ebp+var_68]
		jnz	loc_6D4C4060

loc_6D4C3FD2:				; CODE XREF: sub_6D4C3C08+4DAj
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_set_line_width
		mov	dword ptr [esp+0C4h+var_C0], 0
		mov	dword ptr [esp+0C4h+var_C8+4], ebx
		call	cairo_set_line_join
		mov	dword ptr [esp+0C4h+var_C0], 0
		mov	dword ptr [esp+0C4h+var_C0+4], 40000000h
		mov	dword ptr [esp+0C4h+var_C8+4], ebx
		call	cairo_set_miter_limit
		mov	dword ptr [ebp+arg_0], ebx
		add	esp, 0C0h
		pop	ebx
		pop	esi
		leave
		jmp	cairo_stroke
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4018:				; CODE XREF: sub_6D4C3C08+73j
		fld	[ebp+var_18]
		fsub	st, st(1)
		fstp	[ebp+arg_18+4]
		fsubr	[ebp+var_10]
		fchs
		fstp	[ebp+arg_10+4]
		fld	[ebp+var_30]
		fadd	[ebp+var_20]
		fstp	[ebp+arg_8+4]
		fld	[ebp+var_28]
		fadd	[ebp+var_10]
		fsub	[ebp+var_20]
		fstp	[ebp+arg_0+4]
		mov	dword ptr [ebp+arg_0], ebx
		add	esp, 0C0h
		pop	ebx
		pop	esi
		leave
		jmp	cairo_rectangle
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C4050:				; CODE XREF: sub_6D4C3C08+B1j
		fstp	st(1)
		fld	[ebp+var_10]
		fsub	st, st(1)
		fstp	[ebp+var_50]
		jmp	loc_6D4C3CDC
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C4060:				; CODE XREF: sub_6D4C3C08+3C4j
		fstp	st
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_new_sub_path
		fld	[ebp+var_30]
		fstp	[esp+0C8h+var_C0+4]
		fld	[ebp+var_28]
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_move_to
		fld	[ebp+var_18]
		fstp	[esp+0C8h+var_C0+4]
		fld	[ebp+var_10]
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_rel_line_to
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_new_sub_path
		fld	[ebp+var_30]
		fstp	[esp+0C8h+var_C0+4]
		fld	[ebp+var_28]
		fadd	[ebp+var_10]
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_move_to
		fld	[ebp+var_18]
		fstp	[esp+0C8h+var_C0+4]
		fld	[ebp+var_10]
		fchs
		fstp	[esp+0C8h+var_C8+4]
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_rel_line_to
		mov	dword ptr [esp+0C8h+var_C8+4], 0
		mov	dword ptr [esp+0C8h+var_C8], ebx
		call	cairo_set_line_cap
		fld	[ebp+var_68]
		jmp	loc_6D4C3FD2
; ---------------------------------------------------------------------------
		align 4

loc_6D4C40E8:				; CODE XREF: sub_6D4C3C08+FEj
		fxch	st(1)
		fdivr	[ebp+var_20]
		fst	[ebp+var_40]
		fxch	st(1)
		fsubr	[ebp+var_18]
		fxch	st(1)
		fadd	st, st
		fucomp	st(1)
		fnstsw	ax
		test	ah, 45h
		jnz	loc_6D4C3D1C
		jmp	loc_6D4C3D11
sub_6D4C3C08	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6D4C410C(int,	double,	double)
sub_6D4C410C	proc near		; CODE XREF: sub_6D4C4400+B8p
					; sub_6D4C4400+283p

var_9C		= dword	ptr -9Ch
var_98		= qword	ptr -98h
var_90		= qword	ptr -90h
var_88		= qword	ptr -88h
var_80		= qword	ptr -80h
var_78		= qword	ptr -78h
var_68		= qword	ptr -68h
var_58		= qword	ptr -58h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= qword	ptr -40h
var_38		= qword	ptr -38h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_21		= byte ptr -21h
var_1A		= byte ptr -1Ah
var_19		= byte ptr -19h
arg_0		= dword	ptr  8
arg_4		= qword	ptr  0Ch
arg_C		= qword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 8Ch
		mov	ebx, eax
		mov	esi, edx
		mov	edi, ecx
		fld	[ebp+arg_4]
		fstp	[ebp+var_38]
		fld	[ebp+arg_C]
		fstp	[ebp+var_58]
		mov	[ebp+var_1A], 0
		mov	[ebp+var_19], 0
		mov	eax, [eax+20h]
		mov	dword ptr [esp+98h+var_98], eax
		call	cairo_save
		mov	eax, [edi]
		mov	edx, eax
		and	edx, 0EFFFFFFFh
		mov	[ebp+var_2C], edx
		inc	eax
		jz	loc_6D4C43EA
		xor	eax, eax
		cmp	edx, 10FFFFh
		setnbe	al
		mov	edi, eax

loc_6D4C415E:				; CODE XREF: sub_6D4C410C+2E3j
		mov	dword ptr [esp+98h+var_98], esi
		call	sub_6D4C2A74
		mov	esi, eax
		test	eax, eax
		jz	loc_6D4C4358
		mov	eax, [ebx+20h]
		mov	dword ptr [esp+98h+var_98+4], eax
		mov	eax, [esi]
		mov	dword ptr [esp+98h+var_98], eax
		call	sub_6D4C24CC
		test	eax, eax
		jz	loc_6D4C4358
		mov	eax, [esi+4]
		mov	[ebp+var_4C], eax
		test	edi, edi
		jnz	loc_6D4C43F4
		cmp	[ebp+var_2C], 0FFFFh
		ja	loc_6D4C4340
		mov	eax, 4
		cdq
		idiv	[ebp+var_4C]
		mov	[ebp+var_30], eax
		mov	eax, offset a04x ; "%04X"

loc_6D4C41B5:				; CODE XREF: sub_6D4C410C+245j
		mov	edx, [ebp+var_2C]
		mov	dword ptr [esp+98h+var_90+4], edx
		mov	dword ptr [esp+98h+var_90], eax
		mov	dword ptr [esp+98h+var_98+4], 7
		lea	eax, [ebp+var_21]
		mov	dword ptr [esp+98h+var_98], eax
		call	g_snprintf

loc_6D4C41D3:				; CODE XREF: sub_6D4C410C+2EFj
		fld	qword ptr [esi+38h]
		fld	qword ptr [esi+20h]
		fld	qword ptr [esi+18h]
		mov	eax, [esi+28h]
		mov	edx, [esi+2Ch]
		mov	dword ptr [esp+98h+var_78], eax	; double
		mov	dword ptr [esp+98h+var_78+4], edx
		fld	st(2)
		fsub	st, st(2)
		fstp	[esp+98h+var_80] ; double
		fld	ds:flt_6D4C9840
		mov	eax, [ebp+arg_0]
		fimul	dword ptr [eax]
		fld	ds:flt_6D4C9860
		fld	st(2)
		fmul	st, st(1)
		fsubp	st(2), st
		fxch	st(1)
		fstp	[esp+98h+var_88] ; double
		fld	[ebp+var_58]
		fadd	qword ptr [esi+30h]
		fsubrp	st(4), st
		fxch	st(2)
		fmul	ds:flt_6D4C9838
		faddp	st(3), st
		fxch	st(2)
		fstp	[esp+98h+var_90] ; double
		fxch	st(1)
		fmul	ds:flt_6D4C9834
		fadd	[ebp+var_38]
		fstp	[esp+98h+var_98] ; double
		mov	edx, edi
		mov	eax, ebx
		fstp	[ebp+var_68]
		call	sub_6D4C3C08
		test	edi, edi
		fld	[ebp+var_68]
		jnz	loc_6D4C43C9
		fmul	qword ptr [esi+18h]
		fld	[ebp+var_38]
		faddp	st(1), st
		fstp	[ebp+var_40]
		fld	qword ptr [esi+20h]
		fld	[ebp+var_58]
		fadd	qword ptr [esi+30h]
		fstp	[ebp+var_58]
		fld	st
		fadd	st, st(1)
		fsubr	[ebp+var_58]
		fstp	[ebp+var_58]
		mov	edi, [ebp+var_4C]
		test	edi, edi
		jle	loc_6D4C43D0
		mov	[ebp+var_48], 0
		mov	[ebp+var_44], 1
		mov	[ebp+var_2C], esi
		lea	esi, [esi+0]

loc_6D4C428C:				; CODE XREF: sub_6D4C410C+22Fj
		mov	eax, [ebp+var_4C]
		sub	eax, [ebp+var_44]
		mov	edx, [ebp+var_2C]
		fadd	qword ptr [edx+10h]
		push	eax
		fimul	[esp+9Ch+var_9C]
		add	esp, 4
		fsubr	[ebp+var_58]
		fstp	[ebp+var_38]
		mov	esi, [ebp+var_30]
		test	esi, esi
		jle	short loc_6D4C431F
		lea	esi, [ebp+var_21]
		add	esi, [ebp+var_48]
		xor	edi, edi
		jmp	short loc_6D4C42D1
; ---------------------------------------------------------------------------
		align 4

loc_6D4C42B8:				; CODE XREF: sub_6D4C410C+1F8j
		lea	edx, [ebp+var_1A]
		mov	dword ptr [esp+98h+var_98+4], edx
		mov	eax, [ebx+20h]
		mov	dword ptr [esp+98h+var_98], eax
		call	cairo_text_path
		inc	edi
		inc	esi
		cmp	[ebp+var_30], edi
		jle	short loc_6D4C431F

loc_6D4C42D1:				; CODE XREF: sub_6D4C410C+1A8j
					; sub_6D4C410C+211j
		fld	[ebp+var_38]
		fstp	[esp+98h+var_90+4]
		mov	eax, [ebp+var_2C]
		fld	qword ptr [eax+8]
		fadd	qword ptr [eax+18h]
		push	edi
		fimul	[esp+9Ch+var_9C]
		add	esp, 4
		fadd	[ebp+var_40]
		fstp	[esp+98h+var_98+4]
		mov	eax, [ebx+20h]
		mov	dword ptr [esp+98h+var_98], eax
		call	cairo_move_to
		mov	al, [esi]
		mov	[ebp+var_1A], al
		mov	ecx, [ebx+24h]
		test	ecx, ecx
		jnz	short loc_6D4C42B8
		lea	eax, [ebp+var_1A]
		mov	dword ptr [esp+98h+var_98+4], eax
		mov	eax, [ebx+20h]
		mov	dword ptr [esp+98h+var_98], eax
		call	cairo_show_text
		inc	edi
		inc	esi
		cmp	[ebp+var_30], edi
		jg	short loc_6D4C42D1

loc_6D4C431F:				; CODE XREF: sub_6D4C410C+19Ej
					; sub_6D4C410C+1C3j
		mov	edx, [ebp+var_30]
		add	[ebp+var_48], edx
		mov	eax, [ebp+var_44]
		cmp	[ebp+var_4C], eax
		jle	loc_6D4C43D4
		mov	edx, [ebp+var_2C]
		fld	qword ptr [edx+20h]
		inc	eax
		mov	[ebp+var_44], eax
		jmp	loc_6D4C428C
; ---------------------------------------------------------------------------

loc_6D4C4340:				; CODE XREF: sub_6D4C410C+92j
		mov	eax, 6
		cdq
		idiv	[ebp+var_4C]
		mov	[ebp+var_30], eax
		mov	eax, offset a06x ; "%06X"
		jmp	loc_6D4C41B5
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4358:				; CODE XREF: sub_6D4C410C+5Ej
					; sub_6D4C410C+77j
		mov	eax, [ebx+20h]
		mov	dword ptr [esp+98h+var_98], eax
		call	cairo_save
		mov	dword ptr [esp+98h+var_78], 0 ;	double
		mov	dword ptr [esp+98h+var_78+4], 3FF00000h
		mov	dword ptr [esp+98h+var_80], 0 ;	double
		mov	dword ptr [esp+98h+var_80+4], 40260000h
		fld	ds:flt_6D4C9840
		mov	edx, [ebp+arg_0]
		fimul	dword ptr [edx]
		fsub	ds:flt_6D4C9860
		fstp	[esp+98h+var_88] ; double
		fld	ds:flt_6D4C9834
		fld	[ebp+var_58]
		fadd	st, st(1)
		fsub	ds:flt_6D4C9864
		fstp	[esp+98h+var_90] ; double
		fadd	[ebp+var_38]
		fstp	[esp+98h+var_98] ; double
		mov	edx, edi
		mov	eax, ebx
		call	sub_6D4C3C08
		mov	eax, [ebx+20h]
		mov	dword ptr [esp+98h+var_98], eax
		call	cairo_restore
		jmp	short loc_6D4C43D4
; ---------------------------------------------------------------------------

loc_6D4C43C9:				; CODE XREF: sub_6D4C410C+13Aj
		fstp	st
		jmp	short loc_6D4C43D4
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C43D0:				; CODE XREF: sub_6D4C410C+166j
		fstp	st
		xchg	ax, ax

loc_6D4C43D4:				; CODE XREF: sub_6D4C410C+21Fj
					; sub_6D4C410C+2BBj ...
		mov	eax, [ebx+20h]
		mov	dword ptr [esp+98h+var_98], eax
		call	cairo_restore
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C43EA:				; CODE XREF: sub_6D4C410C+3Fj
		mov	edi, 1
		jmp	loc_6D4C415E
; ---------------------------------------------------------------------------

loc_6D4C43F4:				; CODE XREF: sub_6D4C410C+85j
		mov	[ebp+var_30], 1
		jmp	loc_6D4C41D3
sub_6D4C410C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C4400	proc near		; CODE XREF: sub_6D4C4768+1C4p
					; sub_6D4C4768+231p ...

var_86C		= dword	ptr -86Ch
var_868		= dword	ptr -868h
var_864		= qword	ptr -864h
var_85C		= qword	ptr -85Ch
var_854		= dword	ptr -854h
var_850		= dword	ptr -850h
var_84C		= dword	ptr -84Ch
var_844		= dword	ptr -844h
var_840		= dword	ptr -840h
var_83C		= dword	ptr -83Ch
var_838		= dword	ptr -838h
var_834		= dword	ptr -834h
var_830		= qword	ptr -830h
var_828		= qword	ptr -828h
var_820		= dword	ptr -820h
var_81C		= dword	ptr -81Ch
var_810		= byte ptr -810h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h
arg_1C		= dword	ptr  24h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 85Ch
		mov	esi, eax
		mov	[ebp+var_83C], edx
		mov	[ebp+var_840], ecx
		fld	ds:flt_6D4C9840
		fld	st
		fimul	[ebp+arg_18]
		fadd	qword ptr [eax+30h]
		fstp	[ebp+var_828]
		fimul	[ebp+arg_1C]
		fadd	qword ptr [eax+38h]
		fstp	[ebp+var_830]
		mov	eax, [eax+20h]
		mov	[esp+868h+var_868], eax
		call	cairo_save
		mov	ebx, [esi+24h]
		test	ebx, ebx
		jz	loc_6D4C46C8

loc_6D4C4450:				; CODE XREF: sub_6D4C4400+2D1j
		mov	eax, [esi+20h]
		mov	dword ptr [esp+868h+var_864], eax
		mov	eax, [ebp+arg_14]
		mov	[esp+868h+var_868], eax
		call	sub_6D4C24CC
		test	eax, eax
		jnz	loc_6D4C4578
		mov	edx, [ebp+arg_0]
		mov	ecx, [edx]
		test	ecx, ecx
		jle	loc_6D4C4560
		mov	[ebp+var_81C], 0
		xor	edi, edi
		mov	[ebp+var_820], esi
		mov	esi, eax
		jmp	short loc_6D4C44D5
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C4490:				; CODE XREF: sub_6D4C4400+107j
		fxch	st(1)
		push	eax
		fimul	[esp+86Ch+var_86C]
		add	esp, 4
		fadd	[ebp+var_830]

loc_6D4C449F:				; CODE XREF: sub_6D4C4400+111j
		fstp	[esp+868h+var_85C] ; double
		fstp	[esp+868h+var_864] ; double
		lea	eax, [ebx+4]
		mov	[esp+868h+var_868], eax	; int
		mov	ecx, ebx
		mov	edx, [ebp+arg_14]
		mov	eax, [ebp+var_820]
		call	sub_6D4C410C

loc_6D4C44BD:				; CODE XREF: sub_6D4C4400+E2j
		mov	eax, [ebx+4]
		inc	edi
		add	esi, 14h
		mov	edx, [ebp+arg_0]
		cmp	edi, [edx]
		jge	loc_6D4C46BC
		add	[ebp+var_81C], eax

loc_6D4C44D5:				; CODE XREF: sub_6D4C4400+8Bj
		mov	ebx, esi
		mov	ecx, [ebp+arg_4]
		add	ebx, [ecx]
		cmp	dword ptr [ebx], 0FFFFFFFh
		jz	short loc_6D4C44BD
		mov	eax, [ebp+var_81C]
		add	eax, [ebx+8]
		fld	ds:flt_6D4C9840
		fld	st
		push	eax
		fimul	[esp+86Ch+var_86C]
		add	esp, 4
		fadd	[ebp+var_828]
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jnz	short loc_6D4C4490
		fstp	st(1)
		fld	[ebp+var_830]
		jmp	short loc_6D4C449F
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4514:				; CODE XREF: sub_6D4C4400+212j
		mov	esi, [ebp+var_838]

loc_6D4C451A:				; CODE XREF: sub_6D4C4400+360j
		mov	edx, [esi+24h]
		test	edx, edx
		jz	loc_6D4C46D8
		mov	ecx, [ebp+var_820]
		mov	dword ptr [esp+868h+var_864+4],	ecx
		mov	eax, [ebp+var_834]
		mov	dword ptr [esp+868h+var_864], eax
		mov	eax, [esi+20h]
		mov	[esp+868h+var_868], eax
		call	cairo_glyph_path

loc_6D4C4544:				; CODE XREF: sub_6D4C4400+32Dj
					; sub_6D4C4400+351j
		mov	eax, [ebp+var_844]
		cmp	[ebp+var_834], eax
		jz	short loc_6D4C4560
		mov	edx, [ebp+var_834]
		mov	[esp+868h+var_868], edx
		call	g_free

loc_6D4C4560:				; CODE XREF: sub_6D4C4400+71j
					; sub_6D4C4400+150j ...
		mov	eax, [esi+20h]
		mov	[esp+868h+var_868], eax
		call	cairo_restore
		add	esp, 85Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4578:				; CODE XREF: sub_6D4C4400+64j
		mov	ecx, [ebp+arg_0]
		mov	eax, [ecx]
		cmp	eax, 55h
		jg	loc_6D4C4690
		lea	edx, [ebp+var_810]
		mov	[ebp+var_844], edx
		mov	[ebp+var_834], edx

loc_6D4C4598:				; CODE XREF: sub_6D4C4400+2B7j
		test	eax, eax
		jle	loc_6D4C4756
		xor	eax, eax
		mov	[ebp+var_820], 0
		mov	[ebp+var_81C], 0
		xor	edi, edi
		mov	[ebp+var_838], esi
		mov	esi, eax
		jmp	short loc_6D4C461E
; ---------------------------------------------------------------------------
		align 4

loc_6D4C45C4:				; CODE XREF: sub_6D4C4400+251j
		fxch	st(1)
		push	edx
		fimul	[esp+86Ch+var_86C]
		add	esp, 4
		fadd	[ebp+var_830]
		test	eax, 10000000h
		jnz	loc_6D4C466A
		fxch	st(1)
		jmp	short loc_6D4C45E6
; ---------------------------------------------------------------------------
		align 4

loc_6D4C45E4:				; CODE XREF: sub_6D4C4400+264j
		fxch	st(1)

loc_6D4C45E6:				; CODE XREF: sub_6D4C4400+1E0j
		mov	ecx, [ebp+var_820]
		lea	edx, [ecx+ecx*2]
		mov	ecx, [ebp+var_834]
		lea	edx, [ecx+edx*8]
		mov	[edx], eax
		fstp	qword ptr [edx+8]
		fstp	qword ptr [edx+10h]
		inc	[ebp+var_820]

loc_6D4C4606:				; CODE XREF: sub_6D4C4400+22Cj
					; sub_6D4C4400+288j
		mov	eax, [ebx+4]
		inc	edi
		add	esi, 14h
		mov	edx, [ebp+arg_0]
		cmp	edi, [edx]
		jge	loc_6D4C4514
		add	[ebp+var_81C], eax

loc_6D4C461E:				; CODE XREF: sub_6D4C4400+1C0j
		mov	ebx, esi
		mov	ecx, [ebp+arg_4]
		add	ebx, [ecx]
		mov	eax, [ebx]
		cmp	eax, 0FFFFFFFh
		jz	short loc_6D4C4606
		mov	edx, [ebp+var_81C]
		add	edx, [ebx+8]
		fld	ds:flt_6D4C9840
		fld	st
		push	edx
		fimul	[esp+86Ch+var_86C]
		add	esp, 4
		fadd	[ebp+var_828]
		mov	edx, [ebx+0Ch]
		test	edx, edx
		jnz	loc_6D4C45C4
		fstp	st(1)
		fld	[ebp+var_830]
		test	eax, 10000000h
		jz	loc_6D4C45E4

loc_6D4C466A:				; CODE XREF: sub_6D4C4400+1D8j
		fstp	[esp+868h+var_85C] ; double
		fstp	[esp+868h+var_864] ; double
		lea	eax, [ebx+4]
		mov	[esp+868h+var_868], eax	; int
		mov	ecx, ebx
		mov	edx, [ebp+arg_14]
		mov	eax, [ebp+var_838]
		call	sub_6D4C410C
		jmp	loc_6D4C4606
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C4690:				; CODE XREF: sub_6D4C4400+180j
		mov	dword ptr [esp+868h+var_864], 18h
		mov	[esp+868h+var_868], eax
		call	g_malloc_n
		mov	[ebp+var_834], eax
		mov	edx, [ebp+arg_0]
		mov	eax, [edx]
		lea	ecx, [ebp+var_810]
		mov	[ebp+var_844], ecx
		jmp	loc_6D4C4598
; ---------------------------------------------------------------------------

loc_6D4C46BC:				; CODE XREF: sub_6D4C4400+C9j
		mov	esi, [ebp+var_820]
		jmp	loc_6D4C4560
; ---------------------------------------------------------------------------
		align 4

loc_6D4C46C8:				; CODE XREF: sub_6D4C4400+4Aj
		xor	edx, edx
		mov	eax, esi
		call	sub_6D4C3844
		jmp	loc_6D4C4450
; ---------------------------------------------------------------------------
		align 4

loc_6D4C46D8:				; CODE XREF: sub_6D4C4400+11Fj
		mov	eax, [ebp+arg_8]
		test	eax, eax
		jz	short loc_6D4C4732
		xor	eax, eax
		cmp	[ebp+arg_10], 0
		setnz	al
		mov	[esp+868h+var_84C], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+868h+var_850], eax
		mov	edx, [ebp+arg_8]
		mov	[esp+868h+var_854], edx
		mov	ecx, [ebp+var_820]
		mov	dword ptr [esp+868h+var_85C+4],	ecx
		mov	eax, [ebp+var_834]
		mov	dword ptr [esp+868h+var_85C], eax
		mov	edx, [ebp+var_840]
		mov	dword ptr [esp+868h+var_864+4],	edx
		mov	ecx, [ebp+var_83C]
		mov	dword ptr [esp+868h+var_864], ecx
		mov	eax, [esi+20h]
		mov	[esp+868h+var_868], eax
		call	cairo_show_text_glyphs
		jmp	loc_6D4C4544
; ---------------------------------------------------------------------------

loc_6D4C4732:				; CODE XREF: sub_6D4C4400+2DDj
		mov	ecx, [ebp+var_820]
		mov	dword ptr [esp+868h+var_864+4],	ecx
		mov	eax, [ebp+var_834]
		mov	dword ptr [esp+868h+var_864], eax
		mov	eax, [esi+20h]
		mov	[esp+868h+var_868], eax
		call	cairo_show_glyphs
		jmp	loc_6D4C4544
; ---------------------------------------------------------------------------

loc_6D4C4756:				; CODE XREF: sub_6D4C4400+19Aj
		mov	[ebp+var_820], 0
		jmp	loc_6D4C451A
sub_6D4C4400	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C4768	proc near		; DATA XREF: sub_6D4C37EC+2Fo

var_888		= dword	ptr -888h
var_884		= dword	ptr -884h
var_880		= dword	ptr -880h
var_87C		= dword	ptr -87Ch
var_878		= dword	ptr -878h
var_874		= dword	ptr -874h
var_870		= dword	ptr -870h
var_86C		= dword	ptr -86Ch
var_85C		= byte ptr -85Ch
var_858		= dword	ptr -858h
var_854		= dword	ptr -854h
var_850		= dword	ptr -850h
var_84C		= dword	ptr -84Ch
var_848		= dword	ptr -848h
var_844		= dword	ptr -844h
var_840		= dword	ptr -840h
var_83C		= dword	ptr -83Ch
var_838		= byte ptr -838h
var_38		= byte ptr -38h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 87Ch
		mov	esi, [ebp+arg_8]
		mov	eax, [esi]
		mov	[ebp+var_84C], eax
		mov	edx, [eax+14h]
		mov	[ebp+var_854], edx
		mov	ebx, [esi+4]
		mov	dl, [eax+18h]
		mov	ecx, [ebp+arg_0]
		mov	edi, [ecx+28h]
		test	edi, edi
		jz	loc_6D4C4958
		mov	eax, [ecx+24h]
		test	eax, eax
		jnz	loc_6D4C4958
		mov	eax, [ebx]
		cmp	eax, 100h
		jle	loc_6D4C4A34
		mov	[esp+888h+var_884], 8
		mov	[esp+888h+var_888], eax
		mov	[ebp+var_85C], dl
		call	g_malloc_n
		mov	[ebp+var_848], eax
		lea	eax, [ebp+var_838]
		mov	[ebp+var_858], eax
		mov	dl, [ebp+var_85C]

loc_6D4C47E2:				; CODE XREF: sub_6D4C4768+2DEj
		mov	eax, edx
		and	eax, 1
		mov	[ebp+var_850], eax
		mov	edx, [ebp+arg_4]
		mov	[esp+888h+var_880], edx
		mov	[esp+888h+var_884], esi
		lea	ecx, [ebp+var_38]
		mov	[esp+888h+var_888], ecx
		call	pango_glyph_item_iter_init_start
		test	eax, eax
		jz	loc_6D4C4A24
		mov	[ebp+var_844], 0
		lea	esi, [esi+0]

loc_6D4C4818:				; CODE XREF: sub_6D4C4768+16Dj
		mov	eax, [ebp+var_20]
		mov	edx, [ebp+var_2C]
		sub	eax, edx
		mov	[ebp+var_840], eax
		mov	edi, [ebp+var_850]
		test	edi, edi
		jz	loc_6D4C49B8
		mov	edi, [ebp+var_30]
		sub	edi, [ebp+var_24]
		mov	esi, [ebp+var_840]
		test	esi, esi
		jle	loc_6D4C49CC

loc_6D4C4848:				; CODE XREF: sub_6D4C4768+25Ej
		test	edi, edi
		jle	loc_6D4C49FC

loc_6D4C4850:				; CODE XREF: sub_6D4C4768+28Cj
					; sub_6D4C4768+2B4j
		mov	eax, [ebp+var_24]
		mov	[ebp+var_83C], eax
		mov	esi, [ebp+var_30]
		cmp	eax, esi
		jl	loc_6D4C49AC
		mov	eax, esi

loc_6D4C4866:				; CODE XREF: sub_6D4C4768+24Bj
		lea	edx, [eax+eax*4]
		shl	edx, 2
		cmp	[ebp+var_83C], esi
		jg	short loc_6D4C489E

loc_6D4C4874:				; CODE XREF: sub_6D4C4768+134j
		lea	ecx, [esi+1]
		cmp	eax, ecx
		jge	short loc_6D4C48A8

loc_6D4C487B:				; CODE XREF: sub_6D4C4768+13Ej
		mov	ecx, [ebx+4]
		mov	ecx, [ecx+edx]
		cmp	ecx, 0FFFFFFFh
		jz	short loc_6D4C4891
		and	ecx, 10000000h
		jz	short loc_6D4C4892

loc_6D4C4891:				; CODE XREF: sub_6D4C4768+11Fj
		dec	edi

loc_6D4C4892:				; CODE XREF: sub_6D4C4768+127j
		inc	eax
		add	edx, 14h
		cmp	[ebp+var_83C], esi
		jle	short loc_6D4C4874

loc_6D4C489E:				; CODE XREF: sub_6D4C4768+10Aj
		mov	ecx, [ebp+var_83C]
		cmp	eax, ecx
		jl	short loc_6D4C487B

loc_6D4C48A8:				; CODE XREF: sub_6D4C4768+111j
		mov	eax, [ebp+var_840]
		mov	edx, [ebp+var_844]
		mov	ecx, [ebp+var_848]
		mov	[ecx+edx*8], eax
		mov	[ecx+edx*8+4], edi
		inc	edx
		mov	[ebp+var_844], edx
		lea	edx, [ebp+var_38]
		mov	[esp+888h+var_888], edx
		call	pango_glyph_item_iter_next_cluster
		test	eax, eax
		jnz	loc_6D4C4818

loc_6D4C48DB:				; CODE XREF: sub_6D4C4768+2C6j
		mov	eax, [ebp+var_84C]
		mov	ecx, [eax+4]
		mov	edx, [ebp+arg_4]
		add	edx, [eax]
		mov	eax, [ebp+arg_10]
		mov	[esp+888h+var_86C], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+888h+var_870], eax
		mov	eax, [ebp+var_854]
		mov	[esp+888h+var_874], eax
		mov	eax, [ebp+var_850]
		mov	[esp+888h+var_878], eax
		mov	eax, [ebp+var_844]
		mov	[esp+888h+var_87C], eax
		mov	eax, [ebp+var_848]
		mov	[esp+888h+var_880], eax
		lea	eax, [ebx+4]
		mov	[esp+888h+var_884], eax
		mov	[esp+888h+var_888], ebx
		mov	eax, [ebp+arg_0]
		call	sub_6D4C4400
		mov	edx, [ebp+var_858]
		cmp	[ebp+var_848], edx
		jz	short loc_6D4C499E
		mov	ecx, [ebp+var_848]
		mov	[esp+888h+var_888], ecx
		call	g_free
		add	esp, 87Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C4958:				; CODE XREF: sub_6D4C4768+2Ej
					; sub_6D4C4768+39j
		mov	eax, [ebp+arg_10]
		mov	[esp+888h+var_86C], eax
		mov	edx, [ebp+arg_C]
		mov	[esp+888h+var_870], edx
		mov	ecx, [ebp+var_854]
		mov	[esp+888h+var_874], ecx
		mov	[esp+888h+var_878], 0
		mov	[esp+888h+var_87C], 0
		mov	[esp+888h+var_880], 0
		lea	eax, [ebx+4]
		mov	[esp+888h+var_884], eax
		mov	[esp+888h+var_888], ebx
		xor	ecx, ecx
		xor	edx, edx
		mov	eax, [ebp+arg_0]
		call	sub_6D4C4400

loc_6D4C499E:				; CODE XREF: sub_6D4C4768+1D5j
		add	esp, 87Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C49AC:				; CODE XREF: sub_6D4C4768+F6j
		mov	eax, [ebp+var_83C]
		inc	eax
		jmp	loc_6D4C4866
; ---------------------------------------------------------------------------

loc_6D4C49B8:				; CODE XREF: sub_6D4C4768+C6j
		mov	edi, [ebp+var_24]
		sub	edi, [ebp+var_30]
		mov	esi, [ebp+var_840]
		test	esi, esi
		jg	loc_6D4C4848

loc_6D4C49CC:				; CODE XREF: sub_6D4C4768+DAj
		mov	ecx, [ebp+var_840]
		mov	[esp+888h+var_87C], ecx
		mov	[esp+888h+var_880], offset aPango_cairo_re ; "pango_cairo_renderer_draw_glyph_item: b"...
		mov	[esp+888h+var_884], 10h
		mov	[esp+888h+var_888], offset aPango_2 ; "Pango"
		call	g_log
		test	edi, edi
		jg	loc_6D4C4850
		xchg	ax, ax

loc_6D4C49FC:				; CODE XREF: sub_6D4C4768+E2j
		mov	[esp+888h+var_87C], edi
		mov	[esp+888h+var_880], offset aPango_cairo__9 ; "pango_cairo_renderer_draw_glyph_item: b"...
		mov	[esp+888h+var_884], 10h
		mov	[esp+888h+var_888], offset aPango_2 ; "Pango"
		call	g_log
		jmp	loc_6D4C4850
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4A24:				; CODE XREF: sub_6D4C4768+9Dj
		mov	[ebp+var_844], 0
		jmp	loc_6D4C48DB
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4A34:				; CODE XREF: sub_6D4C4768+46j
		lea	ecx, [ebp+var_838]
		mov	[ebp+var_858], ecx
		mov	[ebp+var_848], ecx
		jmp	loc_6D4C47E2
sub_6D4C4768	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C4A4C	proc near		; DATA XREF: sub_6D4C37EC+28o

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_10]
		mov	[esp+28h+var_C], edx
		mov	edx, [ebp+arg_C]
		mov	[esp+28h+var_10], edx
		mov	edx, [ebp+arg_4]
		mov	[esp+28h+var_14], edx
		mov	[esp+28h+var_18], 0
		mov	[esp+28h+var_1C], 0
		mov	[esp+28h+var_20], 0
		lea	edx, [eax+4]
		mov	[esp+28h+var_24], edx
		mov	[esp+28h+var_28], eax
		xor	ecx, ecx
		xor	edx, edx
		mov	eax, [ebp+arg_0]
		call	sub_6D4C4400
		leave
		retn
sub_6D4C4A4C	endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  24. pango_cairo_renderer_get_type

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_renderer_get_type
pango_cairo_renderer_get_type proc near	; CODE XREF: sub_6D4C4B2C+3Ep
					; sub_6D4C4B2C:loc_6D4C4B88p

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, ds:dword_6D4CB054
		test	eax, eax
		jz	short loc_6D4C4AB8

loc_6D4C4AAC:				; CODE XREF: pango_cairo_renderer_get_type+2Aj
		mov	eax, ds:dword_6D4CB054
		add	esp, 24h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4AB8:				; CODE XREF: pango_cairo_renderer_get_type+Ej
		mov	[esp+28h+var_28], offset dword_6D4CB054
		call	g_once_init_enter_impl
		test	eax, eax
		jz	short loc_6D4C4AAC
		mov	[esp+28h+var_28], offset aPangocairorend ; "PangoCairoRenderer"
		call	g_intern_static_string
		mov	ebx, eax
		call	pango_renderer_get_type
		mov	[esp+24h+var_C], 0
		mov	[esp+24h+var_10], offset sub_6D4C34A4
		mov	[esp+24h+var_14], 48h
		mov	[esp+24h+var_18], offset sub_6D4C37EC
		mov	[esp+24h+var_1C], 7Ch
		mov	[esp+24h+var_20], ebx
		mov	[esp+24h+var_24], eax
		call	g_type_register_static_simple
		mov	[esp+24h+var_20], eax
		mov	[esp+24h+var_24], offset dword_6D4CB054
		call	g_once_init_leave
		mov	eax, ds:dword_6D4CB054
		add	esp, 24h
		pop	ebx
		leave
		retn
pango_cairo_renderer_get_type endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C4B2C	proc near		; CODE XREF: sub_6D4C4BC0+10p
					; sub_6D4C4C18+10p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	eax, ds:g_threads_got_initialized
		mov	eax, [eax]
		test	eax, eax
		jnz	short loc_6D4C4B50

loc_6D4C4B3E:				; CODE XREF: sub_6D4C4B2C+3Cj
		mov	eax, ds:dword_6D4CB050
		test	eax, eax
		jz	short loc_6D4C4B88
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C4B50:				; CODE XREF: sub_6D4C4B2C+10j
		mov	eax, ds:g_thread_functions_for_glib_use
		mov	ebx, [eax+8]
		mov	eax, ds:dword_6D4CB04C
		test	eax, eax
		jz	short loc_6D4C4BB0

loc_6D4C4B61:				; CODE XREF: sub_6D4C4B2C+90j
		mov	[esp+18h+var_18], eax
		call	ebx
		test	eax, eax
		jnz	short loc_6D4C4B3E
		call	pango_cairo_renderer_get_type
		mov	[esp+18h+var_14], 0
		mov	[esp+18h+var_18], eax
		call	g_object_new
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4B88:				; CODE XREF: sub_6D4C4B2C+19j
		call	pango_cairo_renderer_get_type
		mov	[esp+18h+var_14], 0
		mov	[esp+18h+var_18], eax
		call	g_object_new
		mov	ds:dword_6D4CB050, eax
		mov	dword ptr [eax+40h], 1
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C4BB0:				; CODE XREF: sub_6D4C4B2C+33j
		mov	[esp+18h+var_18], offset dword_6D4CB04C
		call	g_static_mutex_get_mutex_impl
		jmp	short loc_6D4C4B61
sub_6D4C4B2C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C4BC0	proc near		; CODE XREF: pango_cairo_show_layout+64j
					; pango_cairo_layout_path+67j

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, eax
		mov	esi, edx
		mov	[ebp+var_1C], ecx
		call	sub_6D4C4B2C
		mov	edi, eax
		mov	[eax+20h], ebx
		mov	ecx, [ebp+var_1C]
		mov	[eax+24h], ecx
		call	sub_6D4C36D0
		mov	[esp+38h+var_2C], 0
		mov	[esp+38h+var_30], 0
		mov	[esp+38h+var_34], esi
		mov	[esp+38h+var_38], edi
		call	pango_renderer_draw_layout
		mov	eax, edi
		call	sub_6D4C371C
		mov	eax, edi
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	sub_6D4C3764
sub_6D4C4BC0	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C4C18	proc near		; CODE XREF: pango_cairo_show_layout_line+17j
					; pango_cairo_layout_line_path+1Aj

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, eax
		mov	esi, edx
		mov	[ebp+var_1C], ecx
		call	sub_6D4C4B2C
		mov	edi, eax
		mov	[eax+20h], ebx
		mov	ecx, [ebp+var_1C]
		mov	[eax+24h], ecx
		call	sub_6D4C36D0
		mov	[esp+38h+var_2C], 0
		mov	[esp+38h+var_30], 0
		mov	[esp+38h+var_34], esi
		mov	[esp+38h+var_38], edi
		call	pango_renderer_draw_layout_line
		mov	eax, edi
		call	sub_6D4C371C
		mov	eax, edi
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	sub_6D4C3764
sub_6D4C4C18	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C4C70	proc near		; CODE XREF: pango_cairo_show_glyph_string+1Fj
					; pango_cairo_glyph_string_path+1Fj

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	[ebp+var_1C], eax
		mov	ebx, edx
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_20], ecx
		call	sub_6D4C4B2C
		mov	esi, eax
		mov	eax, [ebp+var_1C]
		mov	[esi+20h], eax
		mov	[esi+24h], edi
		mov	eax, esi
		call	sub_6D4C36D0
		test	edi, edi
		mov	ecx, [ebp+var_20]
		jz	short loc_6D4C4CD8
		mov	[esp+48h+var_38], 0
		mov	[esp+48h+var_3C], 0
		mov	[esp+48h+var_40], ecx
		mov	[esp+48h+var_44], ebx
		mov	[esp+48h+var_48], esi
		call	pango_renderer_draw_glyphs

loc_6D4C4CC2:				; CODE XREF: sub_6D4C4C70+FBj
		mov	eax, esi
		call	sub_6D4C371C
		mov	eax, esi
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	sub_6D4C3764
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4CD8:				; CODE XREF: sub_6D4C4C70+30j
		mov	[esp+48h+var_48], esi
		call	pango_renderer_activate
		mov	[esp+48h+var_40], 0
		mov	[esp+48h+var_44], 0
		mov	[esp+48h+var_48], esi
		call	pango_renderer_set_color
		mov	[esp+48h+var_40], 0
		mov	[esp+48h+var_44], 1
		mov	[esp+48h+var_48], esi
		call	pango_renderer_set_color
		mov	[esp+48h+var_40], 0
		mov	[esp+48h+var_44], 2
		mov	[esp+48h+var_48], esi
		call	pango_renderer_set_color
		mov	[esp+48h+var_40], 0
		mov	[esp+48h+var_44], 3
		mov	[esp+48h+var_48], esi
		call	pango_renderer_set_color
		mov	[esp+48h+var_38], 0
		mov	[esp+48h+var_3C], 0
		mov	ecx, [ebp+var_20]
		mov	[esp+48h+var_40], ecx
		mov	[esp+48h+var_44], ebx
		mov	[esp+48h+var_48], esi
		call	pango_renderer_draw_glyphs
		mov	[esp+48h+var_48], esi
		call	pango_renderer_deactivate
		jmp	loc_6D4C4CC2
sub_6D4C4C70	endp

; Exported entry  27. pango_cairo_show_glyph_string

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_show_glyph_string
pango_cairo_show_glyph_string proc near

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_8]
		test	eax, eax
		jz	short loc_6D4C4D94
		test	ecx, ecx
		jz	short loc_6D4C4DB0
		mov	[ebp+arg_0], 0
		leave
		jmp	sub_6D4C4C70
; ---------------------------------------------------------------------------

loc_6D4C4D94:				; CODE XREF: pango_cairo_show_glyph_string+11j
		mov	[ebp+arg_8], offset aCrNull_0 ;	"cr != NULL"
		mov	[ebp+arg_4], offset aPango_cairo_sh ; "pango_cairo_show_glyph_string"
		mov	[ebp+arg_0], offset aPango_2 ; "Pango"
		leave
		jmp	g_return_if_fail_warning
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C4DB0:				; CODE XREF: pango_cairo_show_glyph_string+15j
		mov	[ebp+arg_8], offset aGlyphsNull	; "glyphs != NULL"
		mov	[ebp+arg_4], offset aPango_cairo_sh ; "pango_cairo_show_glyph_string"
		mov	[ebp+arg_0], offset aPango_2 ; "Pango"
		leave
		jmp	g_return_if_fail_warning
pango_cairo_show_glyph_string endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  26. pango_cairo_show_glyph_item

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_show_glyph_item
pango_cairo_show_glyph_item proc near

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [ebp+arg_0]
		mov	edi, [ebp+arg_4]
		mov	edx, [ebp+arg_8]
		test	esi, esi
		jz	loc_6D4C4EB8
		test	edi, edi
		jz	loc_6D4C4EDC
		test	edx, edx
		jz	loc_6D4C4EE8
		mov	[ebp+var_1C], edx
		call	sub_6D4C4B2C
		mov	ebx, eax
		mov	[eax+20h], esi
		mov	dword ptr [eax+24h], 0
		call	sub_6D4C36D0
		mov	[esp+48h+var_48], ebx
		call	pango_renderer_activate
		mov	[esp+44h+var_3C], 0
		mov	[esp+44h+var_40], 0
		mov	[esp+44h+var_44], ebx
		call	pango_renderer_set_color
		mov	[esp+44h+var_3C], 0
		mov	[esp+44h+var_40], 1
		mov	[esp+44h+var_44], ebx
		call	pango_renderer_set_color
		mov	[esp+44h+var_3C], 0
		mov	[esp+44h+var_40], 2
		mov	[esp+44h+var_44], ebx
		call	pango_renderer_set_color
		mov	[esp+44h+var_3C], 0
		mov	[esp+44h+var_40], 3
		mov	[esp+44h+var_44], ebx
		call	pango_renderer_set_color
		mov	[esp+44h+var_34], 0
		mov	[esp+44h+var_38], 0
		mov	edx, [ebp+var_1C]
		mov	[esp+44h+var_3C], edx
		mov	[esp+44h+var_40], edi
		mov	[esp+44h+var_44], ebx
		call	pango_renderer_draw_glyph_item
		mov	[esp+44h+var_44], ebx
		call	pango_renderer_deactivate
		mov	eax, ebx
		call	sub_6D4C371C
		mov	eax, ebx
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	sub_6D4C3764
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4EB8:				; CODE XREF: pango_cairo_show_glyph_item+14j
		mov	[ebp+arg_8], offset aCrNull_0 ;	"cr != NULL"

loc_6D4C4EBF:				; CODE XREF: pango_cairo_show_glyph_item+117j
					; pango_cairo_show_glyph_item+123j
		mov	[ebp+arg_4], offset aPango_cairo_10 ; "pango_cairo_show_glyph_item"
		mov	[ebp+arg_0], offset aPango_2 ; "Pango"
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	g_return_if_fail_warning
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4EDC:				; CODE XREF: pango_cairo_show_glyph_item+1Cj
		mov	[ebp+arg_8], offset aTextNull ;	"text != NULL"
		jmp	short loc_6D4C4EBF
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4EE8:				; CODE XREF: pango_cairo_show_glyph_item+24j
		mov	[ebp+arg_8], offset aGlyph_itemNull ; "glyph_item != NULL"
		jmp	short loc_6D4C4EBF
pango_cairo_show_glyph_item endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  29. pango_cairo_show_layout_line

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_show_layout_line
pango_cairo_show_layout_line proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		test	eax, eax
		jz	short loc_6D4C4F10
		test	edx, edx
		jz	short loc_6D4C4F30
		xor	ecx, ecx
		leave
		jmp	sub_6D4C4C18
; ---------------------------------------------------------------------------

loc_6D4C4F10:				; CODE XREF: pango_cairo_show_layout_line+Ej
		mov	[esp+18h+var_10], offset aCrNull_0 ; "cr != NULL"
		mov	[esp+18h+var_14], offset aPango_cairo_11 ; "pango_cairo_show_layout_line"
		mov	[esp+18h+var_18], offset aPango_2 ; "Pango"
		call	g_return_if_fail_warning
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C4F30:				; CODE XREF: pango_cairo_show_layout_line+12j
		mov	[esp+18h+var_10], offset aLineNull ; "line != NULL"
		mov	[esp+18h+var_14], offset aPango_cairo_11 ; "pango_cairo_show_layout_line"
		mov	[esp+18h+var_18], offset aPango_2 ; "Pango"
		call	g_return_if_fail_warning
		leave
		retn
pango_cairo_show_layout_line endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  28. pango_cairo_show_layout

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_show_layout
pango_cairo_show_layout	proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		test	ebx, ebx
		jz	short loc_6D4C4FBC
		call	pango_layout_get_type
		test	esi, esi
		jz	short loc_6D4C4F85
		mov	edx, [esi]
		test	edx, edx
		jz	short loc_6D4C4F75
		cmp	[edx], eax
		jz	short loc_6D4C4FA8

loc_6D4C4F75:				; CODE XREF: pango_cairo_show_layout+1Fj
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], esi
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C4FA8

loc_6D4C4F85:				; CODE XREF: pango_cairo_show_layout+19j
		mov	[esp+18h+var_10], offset aPango_is_lay_0 ; "PANGO_IS_LAYOUT (layout)"
		mov	[esp+18h+var_14], offset aPango_cairo_12 ; "pango_cairo_show_layout"
		mov	[esp+18h+var_18], offset aPango_2 ; "Pango"
		call	g_return_if_fail_warning
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C4FA8:				; CODE XREF: pango_cairo_show_layout+23j
					; pango_cairo_show_layout+33j
		xor	ecx, ecx
		mov	edx, esi
		mov	eax, ebx
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	sub_6D4C4BC0
; ---------------------------------------------------------------------------
		align 4

loc_6D4C4FBC:				; CODE XREF: pango_cairo_show_layout+10j
		mov	[esp+18h+var_10], offset aCrNull_0 ; "cr != NULL"
		mov	[esp+18h+var_14], offset aPango_cairo_12 ; "pango_cairo_show_layout"
		mov	[esp+18h+var_18], offset aPango_2 ; "Pango"
		call	g_return_if_fail_warning
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
pango_cairo_show_layout	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  25. pango_cairo_show_error_underline

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl pango_cairo_show_error_underline(int, int, int, double, double, double)
		public pango_cairo_show_error_underline
pango_cairo_show_error_underline proc near

var_68		= dword	ptr -68h
var_64		= qword	ptr -64h
var_5C		= qword	ptr -5Ch
var_48		= qword	ptr -48h
var_38		= qword	ptr -38h
var_20		= dword	ptr -20h
var_1C		= qword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= qword	ptr  14h
arg_14		= qword	ptr  1Ch
arg_1C		= qword	ptr  24h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebx, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_8]
		mov	esi, dword ptr [ebp+arg_C]
		mov	edi, dword ptr [ebp+arg_C+4]
		fld	[ebp+arg_14]
		fld	[ebp+arg_1C]
		test	ebx, ebx
		jz	loc_6D4C50A0
		fldz
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		test	ah, 5
		jnz	short loc_6D4C5070
		fxch	st(1)
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		test	ah, 5
		jnz	short loc_6D4C5078
		mov	[esp+68h+var_68], ebx
		mov	dword ptr [ebp+var_1C],	edx
		mov	[ebp+var_20], ecx
		fstp	[ebp+var_38]
		fstp	[ebp+var_48]
		call	cairo_new_path
		fld	[ebp+var_48]
		fstp	qword ptr [esp+18h] ; double
		fld	[ebp+var_38]
		fstp	qword ptr [esp+10h] ; double
		mov	dword ptr [esp+64h+var_5C], esi	; double
		mov	dword ptr [esp+64h+var_5C+4], edi
		mov	edx, dword ptr [ebp+var_1C]
		mov	ecx, [ebp+var_20]
		mov	dword ptr [esp+64h+var_64], edx	; double
		mov	dword ptr [esp+64h+var_64+4], ecx
		mov	eax, ebx
		call	sub_6D4C34AC
		mov	[ebp+arg_0], ebx
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	cairo_fill
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C5070:				; CODE XREF: pango_cairo_show_error_underline+31j
		fstp	st
		fstp	st
		fstp	st
		jmp	short loc_6D4C507C
; ---------------------------------------------------------------------------

loc_6D4C5078:				; CODE XREF: pango_cairo_show_error_underline+3Ej
		fstp	st
		fstp	st

loc_6D4C507C:				; CODE XREF: pango_cairo_show_error_underline+96j
		mov	[ebp+arg_8], offset aWidth0Height0 ; "(width >=	0) && (height >= 0)"

loc_6D4C5083:				; CODE XREF: pango_cairo_show_error_underline+CBj
		mov	[ebp+arg_4], offset aPango_cairo_13 ; "pango_cairo_show_error_underline"
		mov	[ebp+arg_0], offset aPango_2 ; "Pango"
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	g_return_if_fail_warning
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C50A0:				; CODE XREF: pango_cairo_show_error_underline+20j
		fstp	st
		fstp	st
		mov	[ebp+arg_8], offset aCrNull_0 ;	"cr != NULL"
		jmp	short loc_6D4C5083
pango_cairo_show_error_underline endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  21. pango_cairo_glyph_string_path

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_glyph_string_path
pango_cairo_glyph_string_path proc near

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_8]
		test	eax, eax
		jz	short loc_6D4C50D4
		test	ecx, ecx
		jz	short loc_6D4C50F0
		mov	[ebp+arg_0], 1
		leave
		jmp	sub_6D4C4C70
; ---------------------------------------------------------------------------

loc_6D4C50D4:				; CODE XREF: pango_cairo_glyph_string_path+11j
		mov	[ebp+arg_8], offset aCrNull_0 ;	"cr != NULL"
		mov	[ebp+arg_4], offset aPango_cairo_gl ; "pango_cairo_glyph_string_path"
		mov	[ebp+arg_0], offset aPango_2 ; "Pango"
		leave
		jmp	g_return_if_fail_warning
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C50F0:				; CODE XREF: pango_cairo_glyph_string_path+15j
		mov	[ebp+arg_8], offset aGlyphsNull	; "glyphs != NULL"
		mov	[ebp+arg_4], offset aPango_cairo_gl ; "pango_cairo_glyph_string_path"
		mov	[ebp+arg_0], offset aPango_2 ; "Pango"
		leave
		jmp	g_return_if_fail_warning
pango_cairo_glyph_string_path endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  22. pango_cairo_layout_line_path

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_layout_line_path
pango_cairo_layout_line_path proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		test	eax, eax
		jz	short loc_6D4C512C
		test	edx, edx
		jz	short loc_6D4C514C
		mov	ecx, 1
		leave
		jmp	sub_6D4C4C18
; ---------------------------------------------------------------------------
		align 4

loc_6D4C512C:				; CODE XREF: pango_cairo_layout_line_path+Ej
		mov	[esp+18h+var_10], offset aCrNull_0 ; "cr != NULL"
		mov	[esp+18h+var_14], offset aPango_cairo_la ; "pango_cairo_layout_line_path"
		mov	[esp+18h+var_18], offset aPango_2 ; "Pango"
		call	g_return_if_fail_warning
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C514C:				; CODE XREF: pango_cairo_layout_line_path+12j
		mov	[esp+18h+var_10], offset aLineNull ; "line != NULL"
		mov	[esp+18h+var_14], offset aPango_cairo_la ; "pango_cairo_layout_line_path"
		mov	[esp+18h+var_18], offset aPango_2 ; "Pango"
		call	g_return_if_fail_warning
		leave
		retn
pango_cairo_layout_line_path endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry  23. pango_cairo_layout_path

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public pango_cairo_layout_path
pango_cairo_layout_path	proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		test	ebx, ebx
		jz	short loc_6D4C51D8
		call	pango_layout_get_type
		test	esi, esi
		jz	short loc_6D4C51A1
		mov	edx, [esi]
		test	edx, edx
		jz	short loc_6D4C5191
		cmp	[edx], eax
		jz	short loc_6D4C51C4

loc_6D4C5191:				; CODE XREF: pango_cairo_layout_path+1Fj
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], esi
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C51C4

loc_6D4C51A1:				; CODE XREF: pango_cairo_layout_path+19j
		mov	[esp+18h+var_10], offset aPango_is_lay_0 ; "PANGO_IS_LAYOUT (layout)"
		mov	[esp+18h+var_14], offset aPango_cairo_14 ; "pango_cairo_layout_path"
		mov	[esp+18h+var_18], offset aPango_2 ; "Pango"
		call	g_return_if_fail_warning
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C51C4:				; CODE XREF: pango_cairo_layout_path+23j
					; pango_cairo_layout_path+33j
		mov	ecx, 1
		mov	edx, esi
		mov	eax, ebx
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	sub_6D4C4BC0
; ---------------------------------------------------------------------------

loc_6D4C51D8:				; CODE XREF: pango_cairo_layout_path+10j
		mov	[esp+18h+var_10], offset aCrNull_0 ; "cr != NULL"
		mov	[esp+18h+var_14], offset aPango_cairo_14 ; "pango_cairo_layout_path"
		mov	[esp+18h+var_18], offset aPango_2 ; "Pango"
		call	g_return_if_fail_warning
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
pango_cairo_layout_path	endp

; ---------------------------------------------------------------------------
		align 4
; Exported entry   9. pango_cairo_error_underline_path

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl pango_cairo_error_underline_path(int, int, int, int, double, int,	double)
		public pango_cairo_error_underline_path
pango_cairo_error_underline_path proc near

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= qword	ptr  18h
arg_1C		= qword	ptr  24h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0Ch
		mov	edx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		mov	edi, [ebp+arg_8]
		mov	ecx, [ebp+arg_C]
		mov	ebx, dword ptr [ebp+arg_10]
		fld	[ebp+arg_10+4]
		fld	[ebp+arg_1C]
		test	edx, edx
		jz	short loc_6D4C528C
		fldz
		fxch	st(2)
		fucom	st(2)
		fnstsw	ax
		test	ah, 5
		jnz	short loc_6D4C525C
		fxch	st(1)
		fucom	st(2)
		fnstsw	ax
		fstp	st(2)
		test	ah, 5
		jnz	short loc_6D4C5264
		fxch	st(1)
		fstp	qword ptr [ebp+20h]
		fstp	[ebp+arg_10]
		mov	[ebp+arg_8], ecx
		mov	[ebp+arg_C], ebx
		mov	[ebp+arg_0], esi
		mov	[ebp+arg_4], edi
		mov	eax, edx
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	sub_6D4C34AC
; ---------------------------------------------------------------------------
		align 4

loc_6D4C525C:				; CODE XREF: pango_cairo_error_underline_path+2Dj
		fstp	st
		fstp	st
		fstp	st
		jmp	short loc_6D4C5268
; ---------------------------------------------------------------------------

loc_6D4C5264:				; CODE XREF: pango_cairo_error_underline_path+3Aj
		fstp	st
		fstp	st

loc_6D4C5268:				; CODE XREF: pango_cairo_error_underline_path+66j
		mov	[ebp+arg_8], offset aWidth0Height0 ; "(width >=	0) && (height >= 0)"

loc_6D4C526F:				; CODE XREF: pango_cairo_error_underline_path+9Bj
		mov	[ebp+arg_4], offset aPango_cairo_er ; "pango_cairo_error_underline_path"
		mov	[ebp+arg_0], offset aPango_2 ; "Pango"
		add	esp, 0Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	g_return_if_fail_warning
; ---------------------------------------------------------------------------
		align 4

loc_6D4C528C:				; CODE XREF: pango_cairo_error_underline_path+20j
		fstp	st
		fstp	st
		mov	[ebp+arg_8], offset aCrNull_0 ;	"cr != NULL"
		jmp	short loc_6D4C526F
pango_cairo_error_underline_path endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C529C	proc near		; DATA XREF: sub_6D4C5480+75o

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], offset sub_6D4C5540
		mov	dword ptr [eax+0Ch], offset sub_6D4C52C4
		mov	dword ptr [eax+10h], 84h
		leave
		retn
sub_6D4C529C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C52BC	proc near		; DATA XREF: sub_6D4C5480+47o
		push	ebp
		mov	ebp, esp
		leave
		retn
sub_6D4C52BC	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C52C4	proc near		; DATA XREF: sub_6D4C529C+Do

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_40		= dword	ptr -40h
var_3C		= word ptr -3Ch
var_3A		= word ptr -3Ah
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 50h
		call	pango_font_metrics_new
		mov	ebx, eax
		mov	eax, [ebp+arg_0]
		mov	[esp+58h+var_58], eax
		call	pango_cairo_font_get_scaled_font
		mov	esi, eax
		lea	eax, [ebp+var_30]
		mov	[esp+58h+var_54], eax
		mov	[esp+58h+var_58], esi
		call	cairo_scaled_font_extents
		mov	[esp+58h+var_58], esi
		call	cairo_win32_scaled_font_done_font
		fld	ds:flt_6D4C9914
		fld	[ebp+var_30]
		fmul	st, st(1)
		fnstcw	[ebp+var_3A]
		mov	ax, [ebp+var_3A]
		mov	ah, 0Ch
		mov	[ebp+var_3C], ax
		fldcw	[ebp+var_3C]
		fistp	[ebp+var_40]
		fldcw	[ebp+var_3A]
		mov	eax, [ebp+var_40]
		mov	[ebx+4], eax
		fmul	[ebp+var_28]
		fldcw	[ebp+var_3C]
		fistp	[ebp+var_40]
		fldcw	[ebp+var_3A]
		mov	edx, [ebp+var_40]
		mov	[ebx+8], edx
		lea	eax, [edx+eax]
		mov	[ebp+var_40], eax
		fild	[ebp+var_40]
		fld	st
		fdiv	ds:flt_6D4C9918
		fldcw	[ebp+var_3C]
		fistp	[ebp+var_40]
		fldcw	[ebp+var_3A]
		mov	eax, [ebp+var_40]
		mov	[ebx+18h], eax
		mov	edx, eax
		neg	edx
		mov	[ebx+14h], edx
		mov	[ebx+20h], eax
		fmul	ds:flt_6D4C991C
		fldcw	[ebp+var_3C]
		fistp	dword ptr [ebx+1Ch]
		fldcw	[ebp+var_3A]
		lea	eax, [ebx+14h]
		mov	[esp+58h+var_54], eax
		lea	eax, [ebx+18h]
		mov	[esp+58h+var_58], eax
		call	pango_quantize_line_geometry
		lea	eax, [ebx+1Ch]
		mov	[esp+58h+var_54], eax
		lea	eax, [ebx+20h]
		mov	[esp+58h+var_58], eax
		call	pango_quantize_line_geometry
		mov	eax, [ebx+14h]
		test	eax, eax
		jnz	short loc_6D4C539C
		mov	eax, [ebx+18h]
		neg	eax
		mov	[ebx+14h], eax

loc_6D4C539C:				; CODE XREF: sub_6D4C52C4+CEj
		mov	eax, ebx
		add	esp, 50h
		pop	ebx
		pop	esi
		leave
		retn
sub_6D4C52C4	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C53A8	proc near		; DATA XREF: sub_6D4C5480+57o

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [ebp+arg_0]
		mov	[esp+28h+var_28], ebx
		call	g_type_class_peek_parent
		mov	ds:dword_6D4CB060, eax
		mov	[esp+28h+var_24], 50h
		mov	[esp+28h+var_28], ebx
		call	g_type_check_class_cast
		mov	edi, eax
		call	pango_font_get_type
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], ebx
		call	g_type_check_class_cast
		mov	esi, eax
		call	_pango_win32_font_get_type
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], ebx
		call	g_type_check_class_cast
		mov	dword ptr [edi+18h], offset sub_6D4C5444
		mov	dword ptr [esi+50h], offset sub_6D4C542C
		mov	dword ptr [esi+54h], offset sub_6D4C2514
		mov	dword ptr [eax+68h], offset sub_6D4C55F4
		mov	dword ptr [eax+6Ch], offset sub_6D4C55BC
		mov	dword ptr [eax+70h], offset sub_6D4C556C
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
sub_6D4C53A8	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C542C	proc near		; DATA XREF: sub_6D4C53A8+56o

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_0]
		add	eax, 84h
		mov	[ebp+arg_0], eax
		leave
		jmp	sub_6D4C2C98
sub_6D4C542C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5444	proc near		; DATA XREF: sub_6D4C53A8+4Fo

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebx+84h]
		mov	[esp+18h+var_18], eax
		call	sub_6D4C2BF0
		mov	[esp+18h+var_14], 50h
		mov	eax, ds:dword_6D4CB060
		mov	[esp+18h+var_18], eax
		call	g_type_check_class_cast
		mov	[ebp+arg_0], ebx
		mov	eax, [eax+18h]
		add	esp, 14h
		pop	ebx
		leave
		jmp	eax
sub_6D4C5444	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5480	proc near		; CODE XREF: sub_6D4C5540+Ap
					; sub_6D4C556C+1Ep ...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 34h
		mov	eax, ds:dword_6D4CB05C
		test	eax, eax
		jz	short loc_6D4C549C

loc_6D4C5490:				; CODE XREF: sub_6D4C5480+2Aj
		mov	eax, ds:dword_6D4CB05C
		add	esp, 34h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C549C:				; CODE XREF: sub_6D4C5480+Ej
		mov	[esp+38h+var_38], offset dword_6D4CB05C
		call	g_once_init_enter_impl
		test	eax, eax
		jz	short loc_6D4C5490
		mov	[esp+38h+var_38], offset aPangocairowin3 ; "PangoCairoWin32Font"
		call	g_intern_static_string
		mov	ebx, eax
		call	_pango_win32_font_get_type
		mov	[esp+34h+var_1C], 0
		mov	[esp+34h+var_20], offset sub_6D4C52BC
		mov	[esp+34h+var_24], 0B4h
		mov	[esp+34h+var_28], offset sub_6D4C53A8
		mov	[esp+34h+var_2C], 74h
		mov	[esp+34h+var_30], ebx
		mov	[esp+34h+var_34], eax
		call	g_type_register_static_simple
		mov	ebx, eax
		mov	[ebp+var_14], offset sub_6D4C529C
		mov	[ebp+var_10], 0
		mov	[ebp+var_C], 0
		call	pango_cairo_font_get_type
		lea	edx, [ebp+var_14]
		mov	[esp+34h+var_2C], edx
		mov	[esp+34h+var_30], eax
		mov	[esp+34h+var_34], ebx
		call	g_type_add_interface_static
		mov	[esp+34h+var_30], ebx
		mov	[esp+34h+var_34], offset dword_6D4CB05C
		call	g_once_init_leave
		mov	eax, ds:dword_6D4CB05C
		add	esp, 34h
		pop	ebx
		leave
		retn
sub_6D4C5480	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5540	proc near		; DATA XREF: sub_6D4C529C+6o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		call	sub_6D4C5480
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_cast
		add	eax, 0Ch
		mov	[ebp+arg_0], eax
		add	esp, 14h
		pop	ebx
		leave
		jmp	cairo_win32_font_face_create_for_logfontw
sub_6D4C5540	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C556C	proc near		; DATA XREF: sub_6D4C53A8+72o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		call	_pango_win32_font_get_type
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_cast
		mov	esi, eax
		call	sub_6D4C5480
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_cast
		add	eax, 84h
		mov	[esp+18h+var_18], eax
		call	sub_6D4C1AC8
		mov	[esp+18h+var_18], eax
		call	cairo_win32_scaled_font_get_metrics_factor
		fimul	dword ptr [esi+68h]
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
sub_6D4C556C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C55BC	proc near		; DATA XREF: sub_6D4C53A8+6Bo

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		call	sub_6D4C5480
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_cast
		add	eax, 84h
		mov	[esp+14h+var_14], eax
		call	sub_6D4C1AC8
		mov	[ebp+arg_0], eax
		add	esp, 14h
		pop	ebx
		leave
		jmp	cairo_win32_scaled_font_done_font
sub_6D4C55BC	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C55F4	proc near		; DATA XREF: sub_6D4C53A8+64o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	sub_6D4C5480
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	g_type_check_instance_cast
		add	eax, 84h
		mov	[esp+18h+var_18], eax
		call	sub_6D4C1AC8
		mov	edx, [ebp+arg_4]
		mov	[esp+18h+var_14], edx
		mov	[esp+18h+var_18], eax
		call	cairo_win32_scaled_font_select_font
		test	eax, eax
		setz	al
		movzx	eax, al
		leave
		retn
sub_6D4C55F4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5634	proc near		; CODE XREF: sub_6D4C5AE4+39j

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= qword	ptr -84h
var_7C		= qword	ptr -7Ch
var_74		= dword	ptr -74h
var_68		= qword	ptr -68h
var_5C		= dword	ptr -5Ch
var_58		= qword	ptr -58h
var_50		= dword	ptr -50h
var_4C		= word ptr -4Ch
var_4A		= word ptr -4Ah
var_48		= byte ptr -48h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	esi, [ebp+arg_0]
		mov	edi, [ebp+arg_C]
		call	sub_6D4C59D4
		test	esi, esi
		jz	short loc_6D4C5666
		mov	edx, [esi]
		test	edx, edx
		jz	short loc_6D4C5656
		cmp	[edx], eax
		jz	short loc_6D4C568C

loc_6D4C5656:				; CODE XREF: sub_6D4C5634+1Cj
		mov	dword ptr [esp+88h+var_84], eax
		mov	[esp+88h+var_88], esi
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C568C

loc_6D4C5666:				; CODE XREF: sub_6D4C5634+16j
		mov	dword ptr [esp+88h+var_84+4], offset aPango_is_cai_0 ; "PANGO_IS_CAIRO_WIN32_FONT_MAP (cwfontma"...
		mov	dword ptr [esp+88h+var_84], offset a_pango_cairo_w ; "_pango_cairo_win32_font_new"
		mov	[esp+88h+var_88], offset aPango_3 ; "Pango"
		call	g_return_if_fail_warning
		xor	eax, eax

loc_6D4C5684:				; CODE XREF: sub_6D4C5634+2F1j
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C568C:				; CODE XREF: sub_6D4C5634+20j
					; sub_6D4C5634+30j
		mov	[esp+88h+var_88], edi
		call	pango_font_description_get_size
		fld	ds:flt_6D4C9920
		push	eax
		fimul	[esp+8Ch+var_8C]
		add	esp, 4
		fstp	[ebp+var_58]
		mov	ebx, [ebp+arg_4]
		test	ebx, ebx
		jz	short loc_6D4C56C3
		mov	eax, [ebp+arg_4]
		mov	[esp+88h+var_88], eax
		call	pango_cairo_context_get_resolution
		fldz
		fucomp	st(1)
		fnstsw	ax
		test	ah, 5
		jnz	short loc_6D4C56C6
		fstp	st

loc_6D4C56C3:				; CODE XREF: sub_6D4C5634+75j
		fld	qword ptr [esi+28h]

loc_6D4C56C6:				; CODE XREF: sub_6D4C5634+8Bj
		mov	[esp+88h+var_88], edi
		fstp	[ebp+var_68]
		call	pango_font_description_get_size_is_absolute
		test	eax, eax
		fld	[ebp+var_68]
		jnz	short loc_6D4C56E8
		fdiv	ds:flt_6D4C9924
		fmul	[ebp+var_58]
		fstp	[ebp+var_58]
		jmp	short loc_6D4C56EA
; ---------------------------------------------------------------------------
		align 4

loc_6D4C56E8:				; CODE XREF: sub_6D4C5634+A2j
		fstp	st

loc_6D4C56EA:				; CODE XREF: sub_6D4C5634+B0j
		call	_pango_win32_font_map_get_type
		mov	dword ptr [esp+88h+var_84], eax
		mov	[esp+88h+var_88], esi
		call	g_type_check_instance_cast
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+arg_8]
		mov	edx, [eax+98h]
		test	edx, edx
		jz	loc_6D4C57BC
		fld	[ebp+var_58]
		fmul	ds:flt_6D4C9914
		fldz
		jmp	short loc_6D4C573B
; ---------------------------------------------------------------------------

loc_6D4C571C:				; CODE XREF: sub_6D4C5634+117j
		fld	ds:flt_6D4C9928
		fxch	st(2)
		fucomp	st(2)
		fnstsw	ax
		fstp	st(1)
		test	ah, 45h
		setz	al
		test	al, al
		jnz	short loc_6D4C576C

loc_6D4C5734:				; CODE XREF: sub_6D4C5634+12Dj
		mov	edx, [edx+4]
		test	edx, edx
		jz	short loc_6D4C57B8

loc_6D4C573B:				; CODE XREF: sub_6D4C5634+E6j
		mov	ebx, [edx]
		fld	st(1)
		fisubr	dword ptr [ebx+68h]
		fxch	st(1)
		fucom	st(1)
		fnstsw	ax
		test	ah, 45h
		jz	short loc_6D4C571C
		fld	ds:flt_6D4C992C
		fucomp	st(2)
		fnstsw	ax
		fstp	st(1)
		test	ah, 45h
		setz	al
		test	al, al
		jz	short loc_6D4C5734
		fstp	st
		fstp	st
		jmp	short loc_6D4C5770
; ---------------------------------------------------------------------------
		align 4

loc_6D4C576C:				; CODE XREF: sub_6D4C5634+FEj
		fstp	st
		fstp	st

loc_6D4C5770:				; CODE XREF: sub_6D4C5634+133j
		mov	[esp+88h+var_88], ebx
		call	g_object_ref
		mov	ecx, [ebx+7Ch]
		test	ecx, ecx
		jz	short loc_6D4C579F
		call	pango_font_map_get_type
		mov	dword ptr [esp+88h+var_84], eax
		mov	edx, [ebp+var_5C]
		mov	[esp+88h+var_88], edx
		call	g_type_check_instance_cast
		mov	dword ptr [esp+88h+var_84], ebx
		mov	[esp+88h+var_88], eax
		call	_pango_win32_fontmap_cache_remove

loc_6D4C579F:				; CODE XREF: sub_6D4C5634+149j
		call	pango_font_get_type
		mov	dword ptr [esp+84h+var_84+4], eax
		mov	dword ptr [esp+84h+var_84], ebx
		call	g_type_check_instance_cast
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C57B8:				; CODE XREF: sub_6D4C5634+105j
		fstp	st
		fstp	st

loc_6D4C57BC:				; CODE XREF: sub_6D4C5634+D5j
		call	sub_6D4C5480
		mov	dword ptr [esp+88h+var_84], 0
		mov	[esp+88h+var_88], eax
		call	g_object_new
		mov	[ebp+var_5C], eax
		call	_pango_win32_font_get_type
		mov	dword ptr [esp+88h+var_84], eax
		mov	eax, [ebp+var_5C]
		mov	[esp+88h+var_88], eax
		call	g_type_check_instance_cast
		mov	ebx, eax
		mov	edx, [eax+70h]
		test	edx, edx
		jz	short loc_6D4C581D
		mov	dword ptr [esp+88h+var_7C+4], offset aWin32fontFontm ; "win32font->fontmap == NULL"
		mov	dword ptr [esp+88h+var_7C], offset a_pango_cairo_w ; "_pango_cairo_win32_font_new"
		mov	dword ptr [esp+88h+var_84+4], 114h
		mov	dword ptr [esp+88h+var_84], offset aPangocairoWin3 ; "pangocairo-win32font.c"
		mov	[esp+88h+var_88], offset aPango_3 ; "Pango"
		call	g_assertion_message_expr

loc_6D4C581D:				; CODE XREF: sub_6D4C5634+1BBj
		mov	[eax+70h], esi
		mov	dword ptr [esp+88h+var_84], 50h
		mov	[esp+88h+var_88], esi
		call	g_type_check_instance_cast
		lea	edx, [ebx+70h]
		mov	dword ptr [esp+88h+var_84], edx
		mov	[esp+88h+var_88], eax
		call	g_object_add_weak_pointer
		mov	edx, [ebp+arg_8]
		mov	[ebx+78h], edx
		mov	dword ptr [esp+88h+var_84], ebx
		mov	eax, [edx+98h]
		mov	[esp+88h+var_88], eax
		call	g_slist_prepend
		mov	edx, [ebp+arg_8]
		mov	[edx+98h], eax
		fld	[ebp+var_58]
		fmul	ds:flt_6D4C9914
		fnstcw	[ebp+var_4A]
		mov	ax, [ebp+var_4A]
		mov	ah, 0Ch
		mov	[ebp+var_4C], ax
		fldcw	[ebp+var_4C]
		fistp	[ebp+var_50]
		fldcw	[ebp+var_4A]
		mov	eax, [ebp+var_50]
		mov	[ebx+68h], eax
		lea	edx, [ebx+0Ch]
		mov	dword ptr [esp+88h+var_7C], edx
		mov	dword ptr [esp+88h+var_84+4], eax
		mov	eax, [ebp+arg_8]
		add	eax, 0Ch
		mov	dword ptr [esp+88h+var_84], eax
		mov	eax, [ebx+70h]
		mov	[esp+88h+var_88], eax
		call	_pango_win32_make_matching_logfontw
		lea	ebx, [ebp+var_48]
		mov	[esp+88h+var_88], ebx
		call	cairo_matrix_init_identity
		fld	[ebp+var_58]
		fst	[esp+88h+var_7C]
		fstp	[esp+88h+var_84]
		mov	[esp+88h+var_88], ebx
		call	cairo_matrix_scale
		mov	eax, [ebp+arg_4]
		mov	[esp+88h+var_88], eax
		call	pango_context_get_matrix
		mov	edx, eax
		mov	eax, [ebp+arg_4]
		mov	[esp+88h+var_88], eax
		mov	dword ptr [ebp+var_68],	edx
		call	sub_6D4C14E4
		mov	esi, eax
		mov	[esp+88h+var_88], edi
		call	pango_font_description_get_gravity
		mov	[esp+88h+var_74], ebx
		mov	edx, dword ptr [ebp+var_68]
		mov	dword ptr [esp+88h+var_7C+4], edx
		mov	dword ptr [esp+88h+var_7C], esi
		mov	dword ptr [esp+88h+var_84+4], eax
		mov	edx, [ebp+var_5C]
		mov	dword ptr [esp+88h+var_84], edx
		mov	eax, edx
		add	eax, 84h
		mov	[esp+88h+var_88], eax
		call	sub_6D4C2AC4
		call	pango_font_get_type
		mov	dword ptr [esp+88h+var_84], eax
		mov	eax, [ebp+var_5C]
		mov	[esp+88h+var_88], eax
		call	g_type_check_instance_cast
		jmp	loc_6D4C5684
sub_6D4C5634	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C592C	proc near		; DATA XREF: sub_6D4C5938+14o
		push	ebp
		mov	ebp, esp
		mov	eax, 2
		leave
		retn
sub_6D4C592C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5938	proc near		; DATA XREF: sub_6D4C59D4+75o

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], offset sub_6D4C5AB4
		mov	dword ptr [eax+0Ch], offset sub_6D4C5A94
		mov	dword ptr [eax+10h], offset sub_6D4C592C
		leave
		retn
sub_6D4C5938	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5958	proc near		; DATA XREF: sub_6D4C59D4+57o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	[esp+18h+var_18], ebx
		call	g_type_class_peek_parent
		mov	ds:dword_6D4CB068, eax
		mov	[esp+18h+var_14], 50h
		mov	[esp+18h+var_18], ebx
		call	g_type_check_class_cast
		mov	esi, eax
		call	_pango_win32_font_map_get_type
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_class_cast
		mov	dword ptr [esi+18h], offset sub_6D4C5B24
		mov	dword ptr [eax+64h], offset sub_6D4C5AE4
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
sub_6D4C5958	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C59A8	proc near		; DATA XREF: sub_6D4C59D4+47o

hdc		= dword	ptr -28h
index		= dword	ptr -24h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		call	pango_win32_get_dc
		mov	[esp+28h+index], 5Ah ; index
		mov	[esp+28h+hdc], eax ; hdc
		call	GetDeviceCaps
		sub	esp, 8
		mov	[ebp+var_C], eax
		fild	[ebp+var_C]
		mov	eax, [ebp+arg_0]
		fstp	qword ptr [eax+28h]
		leave
		retn
sub_6D4C59A8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C59D4	proc near		; CODE XREF: pango_cairo_font_map_new+Bp
					; pango_cairo_font_map_new_for_font_type:loc_6D4C320Cp	...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 34h
		mov	eax, ds:dword_6D4CB064
		test	eax, eax
		jz	short loc_6D4C59F0

loc_6D4C59E4:				; CODE XREF: sub_6D4C59D4+2Aj
		mov	eax, ds:dword_6D4CB064
		add	esp, 34h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C59F0:				; CODE XREF: sub_6D4C59D4+Ej
		mov	[esp+38h+var_38], offset dword_6D4CB064
		call	g_once_init_enter_impl
		test	eax, eax
		jz	short loc_6D4C59E4
		mov	[esp+38h+var_38], offset aPangocairowi_0 ; "PangoCairoWin32FontMap"
		call	g_intern_static_string
		mov	ebx, eax
		call	_pango_win32_font_map_get_type
		mov	[esp+34h+var_1C], 0
		mov	[esp+34h+var_20], offset sub_6D4C59A8
		mov	[esp+34h+var_24], 30h
		mov	[esp+34h+var_28], offset sub_6D4C5958
		mov	[esp+34h+var_2C], 68h
		mov	[esp+34h+var_30], ebx
		mov	[esp+34h+var_34], eax
		call	g_type_register_static_simple
		mov	ebx, eax
		mov	[ebp+var_14], offset sub_6D4C5938
		mov	[ebp+var_10], 0
		mov	[ebp+var_C], 0
		call	pango_cairo_font_map_get_type
		lea	edx, [ebp+var_14]
		mov	[esp+34h+var_2C], edx
		mov	[esp+34h+var_30], eax
		mov	[esp+34h+var_34], ebx
		call	g_type_add_interface_static
		mov	[esp+34h+var_30], ebx
		mov	[esp+34h+var_34], offset dword_6D4CB064
		call	g_once_init_leave
		mov	eax, ds:dword_6D4CB064
		add	esp, 34h
		pop	ebx
		leave
		retn
sub_6D4C59D4	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5A94	proc near		; DATA XREF: sub_6D4C5938+Do

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	sub_6D4C59D4
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	g_type_check_instance_cast
		fld	qword ptr [eax+28h]
		leave
		retn
sub_6D4C5A94	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5AB4	proc near		; DATA XREF: sub_6D4C5938+6o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_4]
		mov	esi, [ebp+arg_8]
		call	sub_6D4C59D4
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	g_type_check_instance_cast
		mov	[eax+28h], ebx
		mov	[eax+2Ch], esi
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
sub_6D4C5AB4	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5AE4	proc near		; DATA XREF: sub_6D4C5958+42o

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [ebp+arg_4]
		mov	esi, [ebp+arg_8]
		mov	edi, [ebp+arg_C]
		call	sub_6D4C59D4
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	g_type_check_instance_cast
		mov	[ebp+arg_C], edi
		mov	[ebp+arg_8], esi
		mov	[ebp+arg_4], ebx
		mov	[ebp+arg_0], eax
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		jmp	sub_6D4C5634
sub_6D4C5AE4	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5B24	proc near		; DATA XREF: sub_6D4C5958+3Bo

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		call	sub_6D4C59D4
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_instance_cast
		mov	[esp+14h+var_10], 50h
		mov	eax, ds:dword_6D4CB068
		mov	[esp+14h+var_14], eax
		call	g_type_check_class_cast
		mov	[ebp+arg_0], ebx
		mov	eax, [eax+18h]
		add	esp, 14h
		pop	ebx
		leave
		jmp	eax
sub_6D4C5B24	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5B64	proc near		; DATA XREF: sub_6D4C5CCC+75o

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], offset sub_6D4C5B98
		mov	dword ptr [eax+0Ch], offset sub_6D4C5B8C
		mov	dword ptr [eax+10h], 58h
		leave
		retn
sub_6D4C5B64	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5B84	proc near		; DATA XREF: sub_6D4C5CCC+47o
		push	ebp
		mov	ebp, esp
		leave
		retn
sub_6D4C5B84	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5B8C	proc near		; DATA XREF: sub_6D4C5B64+Do
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		leave
		jmp	pango_fc_font_create_base_metrics_for_context
sub_6D4C5B8C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5B98	proc near		; DATA XREF: sub_6D4C5B64+6o

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+arg_0], eax
		leave
		jmp	cairo_ft_font_face_create_for_pattern
sub_6D4C5B98	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5BB0	proc near		; DATA XREF: sub_6D4C5CCC+57o

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [ebp+arg_0]
		mov	[esp+28h+var_28], ebx
		call	g_type_class_peek_parent
		mov	ds:dword_6D4CB074, eax
		mov	[esp+28h+var_24], 50h
		mov	[esp+28h+var_28], ebx
		call	g_type_check_class_cast
		mov	edi, eax
		call	pango_font_get_type
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], ebx
		call	g_type_check_class_cast
		mov	esi, eax
		call	pango_fc_font_get_type
		mov	[esp+28h+var_24], eax
		mov	[esp+28h+var_28], ebx
		call	g_type_check_class_cast
		mov	dword ptr [edi+18h], offset sub_6D4C5C94
		mov	dword ptr [esi+50h], offset sub_6D4C5C7C
		mov	dword ptr [esi+54h], offset sub_6D4C2514
		mov	dword ptr [eax+68h], offset sub_6D4C5C54
		mov	dword ptr [eax+6Ch], offset sub_6D4C5C2C
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
sub_6D4C5BB0	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5C2C	proc near		; DATA XREF: sub_6D4C5BB0+6Bo

var_18		= dword	ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		add	eax, 58h
		mov	[esp+18h+var_18], eax
		call	sub_6D4C1AC8
		test	eax, eax
		jz	short locret_6D4C5C50
		mov	[ebp+arg_0], eax
		leave
		jmp	cairo_ft_scaled_font_unlock_face
; ---------------------------------------------------------------------------
		align 10h

locret_6D4C5C50:			; CODE XREF: sub_6D4C5C2C+16j
		leave
		retn
sub_6D4C5C2C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5C54	proc near		; DATA XREF: sub_6D4C5BB0+64o

var_18		= dword	ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		add	eax, 58h
		mov	[esp+18h+var_18], eax
		call	sub_6D4C1AC8
		test	eax, eax
		jz	short locret_6D4C5C78
		mov	[ebp+arg_0], eax
		leave
		jmp	cairo_ft_scaled_font_lock_face
; ---------------------------------------------------------------------------
		align 4

locret_6D4C5C78:			; CODE XREF: sub_6D4C5C54+16j
		leave
		retn
sub_6D4C5C54	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5C7C	proc near		; DATA XREF: sub_6D4C5BB0+56o

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_0]
		add	eax, 58h
		mov	[ebp+arg_0], eax
		leave
		jmp	sub_6D4C2C98
sub_6D4C5C7C	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5C94	proc near		; DATA XREF: sub_6D4C5BB0+4Fo

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		lea	eax, [ebx+58h]
		mov	[esp+18h+var_18], eax
		call	sub_6D4C2BF0
		mov	[esp+18h+var_14], 50h
		mov	eax, ds:dword_6D4CB074
		mov	[esp+18h+var_18], eax
		call	g_type_check_class_cast
		mov	[ebp+arg_0], ebx
		mov	eax, [eax+18h]
		add	esp, 14h
		pop	ebx
		leave
		jmp	eax
sub_6D4C5C94	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5CCC	proc near		; CODE XREF: sub_6D4C5D8C+74p

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 34h
		mov	eax, ds:dword_6D4CB070
		test	eax, eax
		jz	short loc_6D4C5CE8

loc_6D4C5CDC:				; CODE XREF: sub_6D4C5CCC+2Aj
		mov	eax, ds:dword_6D4CB070
		add	esp, 34h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C5CE8:				; CODE XREF: sub_6D4C5CCC+Ej
		mov	[esp+38h+var_38], offset dword_6D4CB070
		call	g_once_init_enter_impl
		test	eax, eax
		jz	short loc_6D4C5CDC
		mov	[esp+38h+var_38], offset aPangocairofcfo ; "PangoCairoFcFont"
		call	g_intern_static_string
		mov	ebx, eax
		call	pango_fc_font_get_type
		mov	[esp+34h+var_1C], 0
		mov	[esp+34h+var_20], offset sub_6D4C5B84
		mov	[esp+34h+var_24], 88h
		mov	[esp+34h+var_28], offset sub_6D4C5BB0
		mov	[esp+34h+var_2C], 90h
		mov	[esp+34h+var_30], ebx
		mov	[esp+34h+var_34], eax
		call	g_type_register_static_simple
		mov	ebx, eax
		mov	[ebp+var_14], offset sub_6D4C5B64
		mov	[ebp+var_10], 0
		mov	[ebp+var_C], 0
		call	pango_cairo_font_get_type
		lea	edx, [ebp+var_14]
		mov	[esp+34h+var_2C], edx
		mov	[esp+34h+var_30], eax
		mov	[esp+34h+var_34], ebx
		call	g_type_add_interface_static
		mov	[esp+34h+var_30], ebx
		mov	[esp+34h+var_34], offset dword_6D4CB070
		call	g_once_init_leave
		mov	eax, ds:dword_6D4CB070
		add	esp, 34h
		pop	ebx
		leave
		retn
sub_6D4C5CCC	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C5D8C	proc near		; CODE XREF: sub_6D4C61B0+7j

var_E8		= dword	ptr -0E8h
var_E4		= qword	ptr -0E4h
var_DC		= qword	ptr -0DCh
var_D4		= qword	ptr -0D4h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_A8		= qword	ptr -0A8h
var_98		= qword	ptr -98h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_80		= byte ptr -80h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= qword	ptr -48h
var_40		= qword	ptr -40h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= qword	ptr -30h
var_28		= qword	ptr -28h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0DCh
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		mov	[esp+0E8h+var_E8], eax
		call	pango_fc_font_key_get_pattern
		mov	edi, eax
		call	sub_6D4C6328
		test	ebx, ebx
		jz	short loc_6D4C5DCB
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6D4C5DBB
		cmp	[edx], eax
		jz	short loc_6D4C5DF8

loc_6D4C5DBB:				; CODE XREF: sub_6D4C5D8C+29j
		mov	dword ptr [esp+0E8h+var_E4], eax
		mov	[esp+0E8h+var_E8], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C5DF8

loc_6D4C5DCB:				; CODE XREF: sub_6D4C5D8C+23j
		mov	dword ptr [esp+0E8h+var_E4+4], offset aPango_is_cai_1 ;	"PANGO_IS_CAIRO_FC_FONT_MAP (cffontmap)"
		mov	dword ptr [esp+0E8h+var_E4], offset a_pango_cairo_f ; "_pango_cairo_fc_font_new"
		mov	[esp+0E8h+var_E8], offset aPango_4 ; "Pango"
		call	g_return_if_fail_warning
		xor	ebx, ebx

loc_6D4C5DE9:				; CODE XREF: sub_6D4C5D8C+325j
		mov	eax, ebx
		add	esp, 0DCh
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C5DF8:				; CODE XREF: sub_6D4C5D8C+2Dj
					; sub_6D4C5D8C+3Dj
		test	edi, edi
		jz	loc_6D4C6093
		call	sub_6D4C5CCC
		mov	dword ptr [esp+0E8h+var_D4], 0
		mov	dword ptr [esp+0E8h+var_DC+4], ebx
		mov	dword ptr [esp+0E8h+var_DC], offset aFontmap ; "fontmap"
		mov	dword ptr [esp+0E8h+var_E4+4], edi
		mov	dword ptr [esp+0E8h+var_E4], offset aPattern ; "pattern"
		mov	[esp+0E8h+var_E8], eax
		call	g_object_new
		mov	[ebp+var_90], eax
		lea	ebx, [ebp+var_28]
		mov	dword ptr [esp+0E8h+var_DC], ebx
		mov	dword ptr [esp+0E8h+var_E4+4], 0
		mov	dword ptr [esp+0E8h+var_E4], offset aPixelsize ; "pixelsize"
		mov	[esp+0E8h+var_E8], edi
		call	FcPatternGetDouble
		test	eax, eax
		jnz	loc_6D4C6024
		fld	[ebp+var_28]

loc_6D4C5E5D:				; CODE XREF: sub_6D4C5D8C+2F5j
					; sub_6D4C5D8C+302j
		mov	edx, [ebp+arg_4]
		mov	[esp+0E8h+var_E8], edx
		fstp	[ebp+var_A8]
		call	pango_fc_font_key_get_matrix
		mov	[esp+0E8h+var_E8], eax
		call	pango_matrix_get_font_scale_factor
		fld	[ebp+var_A8]
		fdivrp	st(1), st
		fstp	[ebp+var_98]
		mov	[ebp+var_38], 0
		mov	[ebp+var_34], 3FF00000h
		mov	[ebp+var_50], 0
		mov	[ebp+var_4C], 3FF00000h
		mov	dword ptr [ebp+var_40],	0
		mov	dword ptr [ebp+var_40+4], 0
		mov	dword ptr [ebp+var_48],	0
		mov	dword ptr [ebp+var_48+4], 0
		xor	ebx, ebx
		lea	esi, [ebp+var_50]
		jmp	short loc_6D4C5ED8
; ---------------------------------------------------------------------------
		align 4

loc_6D4C5EC4:				; CODE XREF: sub_6D4C5D8C+169j
		mov	eax, [ebp+var_1C]
		mov	dword ptr [esp+0E8h+var_E4+4], eax
		mov	dword ptr [esp+0E8h+var_E4], esi
		mov	[esp+0E8h+var_E8], esi
		call	FcMatrixMultiply
		inc	ebx

loc_6D4C5ED8:				; CODE XREF: sub_6D4C5D8C+135j
		lea	eax, [ebp+var_1C]
		mov	dword ptr [esp+0E8h+var_DC], eax
		mov	dword ptr [esp+0E8h+var_E4+4], ebx
		mov	dword ptr [esp+0E8h+var_E4], offset aMatrix ; "matrix"
		mov	[esp+0E8h+var_E8], edi
		call	FcPatternGetMatrix
		test	eax, eax
		jz	short loc_6D4C5EC4
		mov	[esp+0E8h+var_BC], 0
		mov	[esp+0E8h+var_B8], 0
		mov	[esp+0E8h+var_C4], 0
		mov	[esp+0E8h+var_C0], 0
		mov	eax, [ebp+var_38]
		mov	edx, [ebp+var_34]
		mov	[esp+0E8h+var_CC], eax
		mov	[esp+0E8h+var_C8], edx
		fld	[ebp+var_48]
		fchs
		fstp	[esp+0E8h+var_D4]
		fld	[ebp+var_40]
		fchs
		fstp	[esp+0E8h+var_DC]
		mov	eax, [ebp+var_50]
		mov	edx, [ebp+var_4C]
		mov	dword ptr [esp+0E8h+var_E4], eax
		mov	dword ptr [esp+0E8h+var_E4+4], edx
		lea	ebx, [ebp+var_80]
		mov	[esp+0E8h+var_E8], ebx
		call	cairo_matrix_init
		fld	[ebp+var_98]
		fst	[esp+0E8h+var_DC]
		fstp	[esp+0E8h+var_E4]
		mov	[esp+0E8h+var_E8], ebx
		call	cairo_matrix_scale
		mov	eax, [ebp+arg_4]
		mov	[esp+0E8h+var_E8], eax
		call	pango_fc_font_key_get_matrix
		mov	esi, eax
		mov	edx, [ebp+arg_4]
		mov	[esp+0E8h+var_E8], edx
		call	pango_fc_font_key_get_context_key
		mov	[ebp+var_8C], eax
		lea	eax, [ebp+var_20]
		mov	dword ptr [esp+0E8h+var_DC], eax
		mov	dword ptr [esp+0E8h+var_E4+4], 0
		mov	dword ptr [esp+0E8h+var_E4], offset aPangogravity ; "pangogravity"
		mov	[esp+0E8h+var_E8], edi
		call	FcPatternGetString
		test	eax, eax
		jnz	short loc_6D4C6020
		mov	edi, [ebp+var_20]
		mov	eax, ds:dword_6D4CB06C
		test	eax, eax
		jz	loc_6D4C60B6

loc_6D4C5FB7:				; CODE XREF: sub_6D4C5D8C+33Cj
		mov	dword ptr [esp+0E8h+var_E4], edi
		mov	[esp+0E8h+var_E8], eax
		call	g_enum_get_value_by_nick
		mov	eax, [eax]

loc_6D4C5FC5:				; CODE XREF: sub_6D4C5D8C+296j
		mov	edi, [ebp+var_90]
		add	edi, 58h
		mov	dword ptr [esp+0E8h+var_D4], ebx
		mov	dword ptr [esp+0E8h+var_DC+4], esi
		mov	edx, [ebp+var_8C]
		mov	dword ptr [esp+0E8h+var_DC], edx
		mov	dword ptr [esp+0E8h+var_E4+4], eax
		mov	eax, [ebp+var_90]
		mov	dword ptr [esp+0E8h+var_E4], eax
		mov	[esp+0E8h+var_E8], edi
		call	sub_6D4C2AC4
		mov	ebx, [ebp+var_90]
		mov	[esp+0E8h+var_E8], edi
		call	sub_6D4C2C8C
		and	eax, 1
		mov	dl, [ebx+50h]
		and	edx, 0FFFFFFFEh
		or	edx, eax
		mov	[ebx+50h], dl
		mov	eax, ebx
		add	esp, 0DCh
		pop	ebx
		pop	esi
		pop	edi
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C6020:				; CODE XREF: sub_6D4C5D8C+219j
		xor	eax, eax
		jmp	short loc_6D4C5FC5
; ---------------------------------------------------------------------------

loc_6D4C6024:				; CODE XREF: sub_6D4C5D8C+C8j
		lea	eax, [ebp+var_30]
		mov	dword ptr [esp+0E8h+var_DC], eax
		mov	dword ptr [esp+0E8h+var_E4+4], 0
		mov	dword ptr [esp+0E8h+var_E4], offset aDpi ; "dpi"
		mov	[esp+0E8h+var_E8], edi
		call	FcPatternGetDouble
		test	eax, eax
		jz	short loc_6D4C6055
		mov	dword ptr [ebp+var_30],	0
		mov	dword ptr [ebp+var_30+4], 40520000h

loc_6D4C6055:				; CODE XREF: sub_6D4C5D8C+2B9j
		mov	dword ptr [esp+0E8h+var_DC], ebx
		mov	dword ptr [esp+0E8h+var_E4+4], 0
		mov	dword ptr [esp+0E8h+var_E4], offset aSize ; "size"
		mov	[esp+0E8h+var_E8], edi
		call	FcPatternGetDouble
		test	eax, eax
		jnz	short loc_6D4C6088
		fld	[ebp+var_28]
		fmul	[ebp+var_30]
		fdiv	ds:flt_6D4C99EC
		jmp	loc_6D4C5E5D
; ---------------------------------------------------------------------------
		align 4

loc_6D4C6088:				; CODE XREF: sub_6D4C5D8C+2E7j
		fld	ds:flt_6D4C99E8
		jmp	loc_6D4C5E5D
; ---------------------------------------------------------------------------

loc_6D4C6093:				; CODE XREF: sub_6D4C5D8C+6Ej
		mov	dword ptr [esp+0E8h+var_E4+4], offset aPatternNull ; "pattern != NULL"
		mov	dword ptr [esp+0E8h+var_E4], offset a_pango_cairo_f ; "_pango_cairo_fc_font_new"
		mov	[esp+0E8h+var_E8], offset aPango_4 ; "Pango"
		call	g_return_if_fail_warning
		xor	ebx, ebx
		jmp	loc_6D4C5DE9
; ---------------------------------------------------------------------------

loc_6D4C60B6:				; CODE XREF: sub_6D4C5D8C+225j
		call	pango_gravity_get_type
		mov	[esp+0E8h+var_E8], eax
		call	g_type_class_ref
		mov	ds:dword_6D4CB06C, eax
		jmp	loc_6D4C5FB7
sub_6D4C5D8C	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C60D0	proc near		; DATA XREF: sub_6D4C60E8+Do

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		fld	qword ptr [eax+10h]
		leave
		retn
sub_6D4C60D0	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C60DC	proc near		; DATA XREF: sub_6D4C60E8+14o
		push	ebp
		mov	ebp, esp
		mov	eax, 1
		leave
		retn
sub_6D4C60DC	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C60E8	proc near		; DATA XREF: sub_6D4C6328+75o

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], offset sub_6D4C6108
		mov	dword ptr [eax+0Ch], offset sub_6D4C60D0
		mov	dword ptr [eax+10h], offset sub_6D4C60DC
		leave
		retn
sub_6D4C60E8	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6108	proc near		; DATA XREF: sub_6D4C60E8+6o

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	ecx, [ebp+arg_8]
		mov	[eax+10h], edx
		mov	[eax+14h], ecx
		leave
		jmp	pango_fc_font_map_cache_clear
sub_6D4C6108	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6124	proc near		; DATA XREF: sub_6D4C6328+57o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	[esp+18h+var_18], ebx
		call	g_type_class_peek_parent
		mov	ds:dword_6D4CB07C, eax
		mov	[esp+18h+var_14], 50h
		mov	[esp+18h+var_18], ebx
		call	g_type_check_class_cast
		mov	esi, eax
		call	pango_fc_font_map_get_type
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	g_type_check_class_cast
		mov	dword ptr [esi+18h], offset sub_6D4C62A0
		mov	dword ptr [eax+84h], offset sub_6D4C6254
		mov	dword ptr [eax+6Ch], offset sub_6D4C6224
		mov	dword ptr [eax+70h], offset sub_6D4C6210
		mov	dword ptr [eax+74h], offset sub_6D4C61FC
		mov	dword ptr [eax+78h], offset sub_6D4C61E8
		mov	dword ptr [eax+7Ch], offset sub_6D4C61D4
		mov	dword ptr [eax+80h], offset sub_6D4C61BC
		mov	dword ptr [eax+88h], offset sub_6D4C61B0
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		retn
sub_6D4C6124	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C61B0	proc near		; DATA XREF: sub_6D4C6124+79o
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		leave
		jmp	sub_6D4C5D8C
sub_6D4C61B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C61BC	proc near		; DATA XREF: sub_6D4C6124+6Fo

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_8]
		mov	[ebp+arg_4], edx
		mov	[ebp+arg_0], eax
		leave
		jmp	cairo_font_options_equal
sub_6D4C61BC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C61D4	proc near		; DATA XREF: sub_6D4C6124+68o

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_4]
		mov	[ebp+arg_0], eax
		leave
		jmp	cairo_font_options_hash
sub_6D4C61D4	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C61E8	proc near		; DATA XREF: sub_6D4C6124+61o

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_4]
		mov	[ebp+arg_0], eax
		leave
		jmp	cairo_font_options_destroy
sub_6D4C61E8	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C61FC	proc near		; DATA XREF: sub_6D4C6124+5Ao

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_4]
		mov	[ebp+arg_0], eax
		leave
		jmp	cairo_font_options_copy
sub_6D4C61FC	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6210	proc near		; DATA XREF: sub_6D4C6124+53o

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, [ebp+arg_4]
		mov	[ebp+arg_0], eax
		leave
		jmp	sub_6D4C14E4
sub_6D4C6210	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6224	proc near		; DATA XREF: sub_6D4C6124+4Co

var_18		= dword	ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_6D4C624A
		mov	[esp+18h+var_18], eax
		call	pango_cairo_context_get_resolution
		fldz
		fucomp	st(1)
		fnstsw	ax
		test	ah, 5
		jnz	short loc_6D4C624D
		fstp	st

loc_6D4C624A:				; CODE XREF: sub_6D4C6224+Fj
		fld	qword ptr [ebx+10h]

loc_6D4C624D:				; CODE XREF: sub_6D4C6224+22j
		add	esp, 14h
		pop	ebx
		leave
		retn
sub_6D4C6224	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6254	proc near		; DATA XREF: sub_6D4C6124+42o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [ebp+arg_4]
		mov	ebx, [ebp+arg_8]
		mov	[esp+18h+var_10], 0
		mov	[esp+18h+var_14], ebx
		mov	[esp+18h+var_18], 0
		call	FcConfigSubstitute
		test	esi, esi
		jz	short loc_6D4C6292
		mov	[esp+18h+var_18], esi
		call	pango_fc_fontset_key_get_context_key
		mov	[esp+18h+var_14], ebx
		mov	[esp+18h+var_18], eax
		call	cairo_ft_font_options_substitute

loc_6D4C6292:				; CODE XREF: sub_6D4C6254+28j
		mov	[ebp+arg_0], ebx
		add	esp, 10h
		pop	ebx
		pop	esi
		leave
		jmp	FcDefaultSubstitute
sub_6D4C6254	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C62A0	proc near		; DATA XREF: sub_6D4C6124+3Bo

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	[esp+18h+var_14], 50h
		mov	eax, ds:dword_6D4CB07C
		mov	[esp+18h+var_18], eax
		call	g_type_check_class_cast
		mov	[esp+14h+var_14], ebx
		call	dword ptr [eax+18h]
		mov	eax, [ebx+18h]
		mov	[ebp+arg_0], eax
		add	esp, 14h
		pop	ebx
		leave
		jmp	FT_Done_FreeType
sub_6D4C62A0	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C62D8	proc near		; DATA XREF: sub_6D4C6328+47o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	dword ptr [ebx+18h], 0
		lea	eax, [ebx+18h]
		mov	[esp+18h+var_18], eax
		call	FT_Init_FreeType
		test	eax, eax
		jz	short loc_6D4C6314
		mov	[esp+18h+var_10], offset aPango_cairo_15 ; "pango_cairo_font_map_init: Could not in"...
		mov	[esp+18h+var_14], 8
		mov	[esp+18h+var_18], offset aPango_5 ; "Pango"
		call	g_log

loc_6D4C6314:				; CODE XREF: sub_6D4C62D8+1Ej
		mov	dword ptr [ebx+10h], 0
		mov	dword ptr [ebx+14h], 40580000h
		add	esp, 14h
		pop	ebx
		leave
		retn
sub_6D4C62D8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6328	proc near		; CODE XREF: pango_cairo_font_map_new_for_font_type:loc_6D4C31F0p
					; sub_6D4C5D8C+1Cp ...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 34h
		mov	eax, ds:dword_6D4CB078
		test	eax, eax
		jz	short loc_6D4C6344

loc_6D4C6338:				; CODE XREF: sub_6D4C6328+2Aj
		mov	eax, ds:dword_6D4CB078
		add	esp, 34h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C6344:				; CODE XREF: sub_6D4C6328+Ej
		mov	[esp+38h+var_38], offset dword_6D4CB078
		call	g_once_init_enter_impl
		test	eax, eax
		jz	short loc_6D4C6338
		mov	[esp+38h+var_38], offset aPangocairofc_0 ; "PangoCairoFcFontMap"
		call	g_intern_static_string
		mov	ebx, eax
		call	pango_fc_font_map_get_type
		mov	[esp+34h+var_1C], 0
		mov	[esp+34h+var_20], offset sub_6D4C62D8
		mov	[esp+34h+var_24], 20h
		mov	[esp+34h+var_28], offset sub_6D4C6124
		mov	[esp+34h+var_2C], 9Ch
		mov	[esp+34h+var_30], ebx
		mov	[esp+34h+var_34], eax
		call	g_type_register_static_simple
		mov	ebx, eax
		mov	[ebp+var_14], offset sub_6D4C60E8
		mov	[ebp+var_10], 0
		mov	[ebp+var_C], 0
		call	pango_cairo_font_map_get_type
		lea	edx, [ebp+var_14]
		mov	[esp+34h+var_2C], edx
		mov	[esp+34h+var_30], eax
		mov	[esp+34h+var_34], ebx
		call	g_type_add_interface_static
		mov	[esp+34h+var_30], ebx
		mov	[esp+34h+var_34], offset dword_6D4CB078
		call	g_once_init_leave
		mov	eax, ds:dword_6D4CB078
		add	esp, 34h
		pop	ebx
		leave
		retn
sub_6D4C6328	endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+8]
		call	sub_6D4C6328
		test	ebx, ebx
		jz	short loc_6D4C6415
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6D4C6405
		cmp	[edx], eax
		jz	short loc_6D4C643C

loc_6D4C6405:				; CODE XREF: .text:6D4C63FFj
		mov	[esp+4], eax
		mov	[esp], ebx
		call	g_type_check_instance_is_a
		test	eax, eax
		jnz	short loc_6D4C643C

loc_6D4C6415:				; CODE XREF: .text:6D4C63F9j
		mov	dword ptr [esp+8], offset aPango_is_cai_2 ; "PANGO_IS_CAIRO_FC_FONT_MAP	(fontmap)"
		mov	dword ptr [esp+4], offset a_pango_cairo_0 ; "_pango_cairo_fc_font_map_get_library"
		mov	dword ptr [esp], offset	aPango_5 ; "Pango"
		call	g_return_if_fail_warning
		xor	eax, eax
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4

loc_6D4C643C:				; CODE XREF: .text:6D4C6403j
					; .text:6D4C6413j
		mov	eax, [ebx+18h]
		add	esp, 14h
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_context_get_type]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_context_get_matrix]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_context_set_matrix]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_map_create_context]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_layout_new]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_layout_get_type]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_layout_get_context]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_layout_context_changed]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_metrics_unref]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_get_type]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_describe]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_description_to_string]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_description_free]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_describe_with_absolute_size]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_description_get_size]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_matrix_get_font_scale_factor]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_get_font_map]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_description_unset_fields]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_description_set_family_static]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_units_from_double]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_description_set_absolute_size]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_script_get_sample_language]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_context_set_language]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_map_load_font]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_language_get_sample_string]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_layout_set_font_description]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_layout_set_text]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_layout_get_extents]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_layout_get_lines_readonly]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_metrics_ref]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_metrics_new]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_gravity_to_rotation]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_get_glyph_extents]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_map_get_type]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_renderer_get_type]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_renderer_get_color]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_renderer_get_layout]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_glyph_item_iter_init_start]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_glyph_item_iter_next_cluster]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_renderer_draw_layout]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_renderer_draw_layout_line]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_renderer_draw_glyphs]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_renderer_activate]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_renderer_set_color]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_renderer_deactivate]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_renderer_draw_glyph_item]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_quantize_line_geometry]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_description_get_size_is_absolute]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_font_description_get_gravity]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_gravity_get_type]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_font_options_destroy]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_font_options_copy]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_font_options_create]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_font_options_merge]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_get_target]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_surface_get_font_options]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_font_options_equal]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_get_matrix]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_font_options_get_hint_metrics]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_scaled_font_create]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_font_face_destroy]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_scaled_font_status]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_font_face_status]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_status_to_string]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_scaled_font_get_ctm]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_scaled_font_get_font_options]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_scaled_font_text_extents]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_scaled_font_extents]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_matrix_transform_distance]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_set_scaled_font]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_matrix_init_rotate]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_matrix_multiply]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_matrix_init]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_matrix_init_identity]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_scaled_font_destroy]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_scaled_font_glyph_extents]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_move_to]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_line_to]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_has_current_point]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_get_current_point]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_surface_has_show_text_glyphs]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_new_sub_path]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_set_source_rgb]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_save]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_restore]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_fill]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_new_path]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_user_to_device_distance]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_identity_matrix]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_translate]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_close_path]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_rectangle]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_set_line_width]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_set_line_join]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_set_miter_limit]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_stroke]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_rel_line_to]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_set_line_cap]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_text_path]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_show_text]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_glyph_path]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_show_text_glyphs]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_show_glyphs]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_win32_scaled_font_done_font]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_win32_font_face_create_for_logfontw]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_win32_scaled_font_get_metrics_factor]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_win32_scaled_font_select_font]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_matrix_scale]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_ft_font_face_create_for_pattern]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_ft_scaled_font_unlock_face]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_ft_scaled_font_lock_face]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cairo_font_options_hash]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION cairo_ft_font_options_substitute]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_win32_font_get_type]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_win32_font_map_get_type]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _pango_win32_fontmap_cache_remove]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _pango_win32_make_matching_logfontw]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_win32_get_dc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetDeviceCaps]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_fc_font_create_base_metrics_for_context]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_fc_font_get_type]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_fc_font_key_get_pattern]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_fc_font_key_get_matrix]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_fc_font_key_get_context_key]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_fc_font_map_cache_clear]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION pango_fc_font_map_get_type]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION pango_fc_fontset_key_get_context_key]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_type_check_instance_cast]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_object_get_qdata]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_object_set_qdata_full]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_type_check_instance_is_a]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_object_unref]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_type_register_static_simple]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_type_interface_add_prerequisite]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_type_interface_peek]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_object_ref]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_type_init]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_object_new]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_type_class_peek_parent]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_type_check_class_cast]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_type_add_interface_static]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_object_add_weak_pointer]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_enum_get_value_by_nick]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_type_class_ref]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_quark_from_static_string]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_slice_alloc0]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_slice_free1]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_return_if_fail_warning]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_once_init_enter_impl]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_intern_static_string]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_once_init_leave]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_log]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_free]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_slice_alloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_slist_prepend]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_utf8_get_char]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_unichar_iszerowidth]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_unichar_iswide]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_slist_foreach]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_slist_free]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_malloc0]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_static_mutex_get_mutex_impl]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_snprintf]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION g_malloc_n]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION g_assertion_message_expr]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FT_Done_FreeType]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION FT_Init_FreeType]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcPatternGetDouble]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION FcMatrixMultiply]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcPatternGetMatrix]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION FcPatternGetString]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION FcConfigSubstitute]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION FcDefaultSubstitute]
		align 10h
		push	ebp
		xor	eax, eax
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public TlsCallback_1
TlsCallback_1	proc near		; DATA XREF: .CRT:6D4D0008o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_4]
		test	eax, eax
		jnz	short loc_6D4C69F0

loc_6D4C69CD:				; CODE XREF: TlsCallback_1+33j
		mov	edx, [ebp+arg_8]
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_10], edx
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6D4C6FA0
		mov	eax, 1
		leave
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C69F0:				; CODE XREF: TlsCallback_1+Bj
		cmp	eax, 3
		jz	short loc_6D4C69CD
		mov	eax, 1
		leave
		retn	0Ch
TlsCallback_1	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public TlsCallback_0
TlsCallback_0	proc near		; CODE XREF: DllEntryPoint+98p
					; DATA XREF: .rdata:off_6D4C9AFCo ...

lpLibFileName	= dword	ptr -18h
lpProcName	= dword	ptr -14h
var_10		= dword	ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	edx, ds:_winmajor
		mov	eax, [ebp+arg_4]
		cmp	dword ptr [edx], 3
		jbe	short loc_6D4C6A46
		cmp	ds:dword_6D4CB0C0, 2
		jz	short loc_6D4C6A28
		mov	ds:dword_6D4CB0C0, 2

loc_6D4C6A28:				; CODE XREF: TlsCallback_0+1Cj
		cmp	eax, 2
		jz	loc_6D4C6B36
		cmp	eax, 1
		jz	loc_6D4C6AD8

loc_6D4C6A3A:				; CODE XREF: TlsCallback_0+F2j
					; TlsCallback_0+141j
		mov	eax, 1
		mov	ebx, [ebp+var_4]
		leave
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6D4C6A46:				; CODE XREF: TlsCallback_0+13j
		mov	ds:dword_6D4CB12C, 1
		mov	[esp+18h+lpLibFileName], offset	LibFileName ; "mingwm10.dll"
		call	LoadLibraryA
		sub	esp, 4
		test	eax, eax
		mov	ds:hLibModule, eax
		jz	loc_6D4C6B66
		mov	[esp+18h+lpProcName], offset a__mingwthr_rem ; "__mingwthr_remove_key_dtor"
		mov	[esp+18h+lpLibFileName], eax ; hModule
		call	GetProcAddress
		sub	esp, 8
		mov	ds:dword_6D4CB11C, eax
		mov	[esp+18h+lpProcName], offset a__mingwthr_key ; "__mingwthr_key_dtor"
		mov	eax, ds:hLibModule
		mov	[esp+18h+lpLibFileName], eax ; hModule
		call	GetProcAddress
		mov	ds:dword_6D4CB10C, eax
		mov	eax, ds:hLibModule
		sub	esp, 8
		test	eax, eax
		jz	loc_6D4C6B66
		mov	ecx, ds:dword_6D4CB11C
		test	ecx, ecx
		jz	short loc_6D4C6AF7
		mov	edx, ds:dword_6D4CB10C
		test	edx, edx
		jz	short loc_6D4C6AF7
		mov	ds:dword_6D4CB0C0, 1
		mov	eax, 1
		mov	ebx, [ebp+var_4]
		leave
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6D4C6AD8:				; CODE XREF: TlsCallback_0+34j
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+lpProcName], 1
		mov	[esp+18h+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+lpLibFileName], eax
		call	sub_6D4C6FA0
		jmp	loc_6D4C6A3A
; ---------------------------------------------------------------------------

loc_6D4C6AF7:				; CODE XREF: TlsCallback_0+B6j
					; TlsCallback_0+C0j
		mov	ds:dword_6D4CB10C, 0
		mov	ds:dword_6D4CB11C, 0
		mov	[esp+18h+lpLibFileName], eax ; hLibModule
		call	FreeLibrary
		sub	esp, 4

loc_6D4C6B16:				; CODE XREF: TlsCallback_0+17Aj
		mov	ds:hLibModule, 0
		mov	eax, 1
		mov	ds:dword_6D4CB0C0, 0
		mov	ebx, [ebp+var_4]
		leave
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6D4C6B36:				; CODE XREF: TlsCallback_0+2Bj
		mov	ebx, offset dword_6D4D0014
		cmp	ebx, offset dword_6D4D0014
		jz	loc_6D4C6A3A

loc_6D4C6B47:				; CODE XREF: TlsCallback_0+158j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6D4C6B4F
		call	eax

loc_6D4C6B4F:				; CODE XREF: TlsCallback_0+14Bj
		add	ebx, 4
		cmp	ebx, offset dword_6D4D0014
		jnz	short loc_6D4C6B47
		mov	eax, 1
		mov	ebx, [ebp+var_4]
		leave
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6D4C6B66:				; CODE XREF: TlsCallback_0+66j
					; TlsCallback_0+A8j
		mov	ds:dword_6D4CB10C, 0
		mov	ds:dword_6D4CB11C, 0
		jmp	short loc_6D4C6B16
TlsCallback_0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

; int __cdecl sub_6D4C6B80(char	*Format, char ArgList)
sub_6D4C6B80	proc near		; CODE XREF: sub_6D4C6BD0+CDp
					; sub_6D4C6CB0+CDp ...

Str		= dword	ptr -18h
Size		= dword	ptr -14h
Count		= dword	ptr -10h
File		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
Format		= dword	ptr  8
ArgList		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[ebp+var_8], ebx
		mov	ebx, ds:_iob
		mov	[ebp+var_4], esi
		lea	esi, [ebp+ArgList]
		mov	[esp+18h+Count], 17h ; Count
		mov	[esp+18h+Size],	1 ; Size
		add	ebx, 40h
		mov	[esp+18h+File],	ebx ; File
		mov	[esp+18h+Str], offset aMingwRuntimeFa ;	"Mingw runtime failure:\n"
		call	fwrite
		mov	eax, [ebp+Format]
		mov	[esp+18h+Count], esi ; ArgList
		mov	[esp+18h+Str], ebx ; File
		mov	[esp+18h+Size],	eax ; Format
		call	vfprintf
		call	abort
sub_6D4C6B80	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __fastcall sub_6D4C6BD0(size_t Size, void	*Src)
sub_6D4C6BD0	proc near		; CODE XREF: sub_6D4C6CB0+FCp
					; sub_6D4C6CB0+128p ...

lpAddress	= dword	ptr -48h
lpBuffer	= dword	ptr -44h
dwLength	= dword	ptr -40h
lpflOldProtect	= dword	ptr -3Ch
Buffer		= _MEMORY_BASIC_INFORMATION ptr	-38h
flOldProtect	= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 48h
		test	ecx, ecx
		mov	[ebp+var_C], ebx
		mov	ebx, eax
		mov	[ebp+var_8], esi
		mov	esi, edx
		mov	[ebp+var_4], edi
		mov	edi, ecx
		jnz	short loc_6D4C6BF6

loc_6D4C6BE9:				; CODE XREF: sub_6D4C6BD0+8Bj
					; sub_6D4C6BD0+90j ...
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6D4C6BF6:				; CODE XREF: sub_6D4C6BD0+17j
		lea	eax, [ebp+Buffer]
		mov	[esp+48h+dwLength], 1Ch	; dwLength
		mov	[esp+48h+lpBuffer], eax	; lpBuffer
		mov	[esp+48h+lpAddress], ebx ; lpAddress
		call	VirtualQuery
		sub	esp, 0Ch
		test	eax, eax
		jz	short loc_6D4C6C8A
		mov	eax, [ebp+Buffer.Protect]
		cmp	eax, 4
		jz	short loc_6D4C6C45
		cmp	eax, 40h
		jz	short loc_6D4C6C45
		lea	eax, [ebp+flOldProtect]
		mov	[esp+48h+lpflOldProtect], eax ;	lpflOldProtect
		mov	eax, [ebp+Buffer.RegionSize]
		mov	[esp+48h+dwLength], 40h	; flNewProtect
		mov	[esp+48h+lpBuffer], eax	; dwSize
		mov	eax, [ebp+Buffer.BaseAddress]
		mov	[esp+48h+lpAddress], eax ; lpAddress
		call	VirtualProtect
		sub	esp, 10h

loc_6D4C6C45:				; CODE XREF: sub_6D4C6BD0+4Aj
					; sub_6D4C6BD0+4Fj
		mov	[esp+48h+dwLength], edi	; Size
		mov	[esp+48h+lpBuffer], esi	; Src
		mov	[esp+48h+lpAddress], ebx ; Dst
		call	memcpy
		mov	eax, [ebp+Buffer.Protect]
		cmp	eax, 4
		jz	short loc_6D4C6BE9
		cmp	eax, 40h
		jz	short loc_6D4C6BE9
		lea	eax, [ebp+flOldProtect]
		mov	[esp+48h+lpflOldProtect], eax ;	lpflOldProtect
		mov	eax, [ebp+flOldProtect]
		mov	[esp+48h+dwLength], eax	; flNewProtect
		mov	eax, [ebp+Buffer.RegionSize]
		mov	[esp+48h+lpBuffer], eax	; dwSize
		mov	eax, [ebp+Buffer.BaseAddress]
		mov	[esp+48h+lpAddress], eax ; lpAddress
		call	VirtualProtect
		sub	esp, 10h
		jmp	loc_6D4C6BE9
; ---------------------------------------------------------------------------

loc_6D4C6C8A:				; CODE XREF: sub_6D4C6BD0+42j
		mov	[esp+48h+dwLength], ebx
		mov	[esp+48h+lpBuffer], 1Ch	; ArgList
		mov	[esp+48h+lpAddress], offset Format ; "	VirtualQuery failed for	%d bytes at a"...
		call	sub_6D4C6B80
sub_6D4C6BD0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6CB0	proc near		; CODE XREF: DllEntryPoint:loc_6D4C115Dp

Format		= dword	ptr -38h
ArgList		= byte ptr -34h
Src		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	eax, ds:dword_6D4CB0A0
		mov	[ebp+var_C], ebx
		mov	[ebp+var_8], esi
		mov	[ebp+var_4], edi
		test	eax, eax
		jz	short loc_6D4C6CD5

loc_6D4C6CC8:				; CODE XREF: sub_6D4C6CB0+3Cj
					; sub_6D4C6CB0+92j ...
		mov	ebx, [ebp+var_C]
		mov	esi, [ebp+var_8]
		mov	edi, [ebp+var_4]
		mov	esp, ebp
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6D4C6CD5:				; CODE XREF: sub_6D4C6CB0+16j
		mov	eax, offset dword_6D4C9BAC
		sub	eax, offset dword_6D4C9BAC
		cmp	eax, 7
		mov	ds:dword_6D4CB0A0, 1
		jle	short loc_6D4C6CC8
		cmp	eax, 0Bh
		mov	ebx, offset dword_6D4C9BAC
		jle	short loc_6D4C6D20
		mov	edi, ds:dword_6D4C9BAC
		test	edi, edi
		jnz	short loc_6D4C6D20
		mov	esi, ds:dword_6D4C9BB0
		test	esi, esi
		jnz	short loc_6D4C6D20
		mov	ecx, ds:dword_6D4C9BB4
		test	ecx, ecx
		jnz	short loc_6D4C6D20
		mov	ebx, offset dword_6D4C9BB8
		nop
		lea	esi, [esi+0]

loc_6D4C6D20:				; CODE XREF: sub_6D4C6CB0+46j
					; sub_6D4C6CB0+50j ...
		mov	edx, [ebx]
		test	edx, edx
		jnz	short loc_6D4C6D82
		mov	eax, [ebx+4]
		test	eax, eax
		jnz	short loc_6D4C6D82
		mov	eax, [ebx+8]
		cmp	eax, 1
		jnz	loc_6D4C6E46
		add	ebx, 0Ch
		cmp	ebx, offset dword_6D4C9BAC
		jnb	short loc_6D4C6CC8
		mov	esi, 6D4C0000h

loc_6D4C6D49:				; CODE XREF: sub_6D4C6CB0+16Dj
		mov	eax, [ebx+4]
		mov	ecx, [ebx]
		movzx	edx, byte ptr [ebx+8]
		add	eax, esi
		add	ecx, esi
		cmp	edx, 10h
		mov	edi, [ecx]
		jz	short loc_6D4C6DC0
		cmp	edx, 20h
		jz	loc_6D4C6E00
		cmp	edx, 8
		jz	short loc_6D4C6DE0
		mov	[ebp+var_1C], 0
		mov	dword ptr [esp+38h+ArgList], edx ; ArgList
		mov	[esp+38h+Format], offset aUnknownPseudoR ; "  Unknown pseudo relocation	bit size %d"...
		call	sub_6D4C6B80
; ---------------------------------------------------------------------------

loc_6D4C6D82:				; CODE XREF: sub_6D4C6CB0+74j
					; sub_6D4C6CB0+7Bj
		cmp	ebx, offset dword_6D4C9BAC
		jnb	loc_6D4C6CC8
		mov	esi, 6D4C0000h
		lea	edi, [ebp+Src]

loc_6D4C6D96:				; CODE XREF: sub_6D4C6CB0+107j
		mov	eax, [ebx+4]
		mov	ecx, 4		; Size
		add	eax, esi
		mov	edx, [eax]
		add	edx, [ebx]
		add	ebx, 8
		mov	[ebp+Src], edx
		mov	edx, edi	; Src
		call	sub_6D4C6BD0
		cmp	ebx, offset dword_6D4C9BAC
		jb	short loc_6D4C6D96
		jmp	loc_6D4C6CC8
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C6DC0:				; CODE XREF: sub_6D4C6CB0+ABj
		movzx	edx, word ptr [eax]
		test	dx, dx
		js	short loc_6D4C6E37
		sub	edx, ecx
		lea	edi, [edx+edi]
		mov	[ebp+var_1C], edi

loc_6D4C6DD0:				; CODE XREF: sub_6D4C6CB0+194j
		mov	ecx, 2		; Size
		lea	edx, [ebp+var_1C] ; Src
		call	sub_6D4C6BD0
		jmp	short loc_6D4C6E14
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C6DE0:				; CODE XREF: sub_6D4C6CB0+B9j
		movzx	edx, byte ptr [eax]
		test	dl, dl
		js	short loc_6D4C6E28
		sub	edx, ecx
		lea	edi, [edx+edi]
		mov	[ebp+var_1C], edi

loc_6D4C6DEF:				; CODE XREF: sub_6D4C6CB0+185j
		mov	ecx, 1		; Size
		lea	edx, [ebp+var_1C] ; Src
		call	sub_6D4C6BD0
		jmp	short loc_6D4C6E14
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C6E00:				; CODE XREF: sub_6D4C6CB0+B0j
		add	edi, [eax]
		lea	edx, [ebp+var_1C] ; Src
		sub	edi, ecx
		mov	ecx, 4		; Size
		mov	[ebp+var_1C], edi
		call	sub_6D4C6BD0

loc_6D4C6E14:				; CODE XREF: sub_6D4C6CB0+12Dj
					; sub_6D4C6CB0+14Cj
		add	ebx, 0Ch
		cmp	ebx, offset dword_6D4C9BAC
		jb	loc_6D4C6D49
		jmp	loc_6D4C6CC8
; ---------------------------------------------------------------------------

loc_6D4C6E28:				; CODE XREF: sub_6D4C6CB0+135j
		or	edx, 0FFFFFF00h
		sub	edx, ecx
		add	edx, edi
		mov	[ebp+var_1C], edx
		jmp	short loc_6D4C6DEF
; ---------------------------------------------------------------------------

loc_6D4C6E37:				; CODE XREF: sub_6D4C6CB0+116j
		or	edx, 0FFFF0000h
		sub	edx, ecx
		add	edx, edi
		mov	[ebp+var_1C], edx
		jmp	short loc_6D4C6DD0
; ---------------------------------------------------------------------------

loc_6D4C6E46:				; CODE XREF: sub_6D4C6CB0+83j
		mov	dword ptr [esp+38h+ArgList], eax ; ArgList
		mov	[esp+38h+Format], offset aUnknownPseud_0 ; "  Unknown pseudo relocation	protocol ve"...
		call	sub_6D4C6B80
sub_6D4C6CB0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6E60	proc near		; DATA XREF: sub_6D4C6E90:loc_6D4C6EBAo
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	eax, off_6D4C8000
		mov	eax, [eax]
		test	eax, eax
		jz	short locret_6D4C6E88

loc_6D4C6E71:				; CODE XREF: sub_6D4C6E60+26j
		call	eax
		mov	eax, off_6D4C8000
		lea	edx, [eax+4]
		mov	eax, [eax+4]
		mov	off_6D4C8000, edx
		test	eax, eax
		jnz	short loc_6D4C6E71

locret_6D4C6E88:			; CODE XREF: sub_6D4C6E60+Fj
		leave
		retn
sub_6D4C6E60	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6E90	proc near		; CODE XREF: sub_6D4C6EF0+1Dj

var_18		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, ds:dword_6D4C722C
		cmp	ebx, 0FFFFFFFFh
		jz	short loc_6D4C6ED0

loc_6D4C6EA3:				; CODE XREF: sub_6D4C6E90+54j
		test	ebx, ebx
		jz	short loc_6D4C6EBA
		lea	esi, dword_6D4C722C[ebx*4]
		xchg	ax, ax

loc_6D4C6EB0:				; CODE XREF: sub_6D4C6E90+28j
		call	dword ptr [esi]
		sub	esi, 4
		sub	ebx, 1
		jnz	short loc_6D4C6EB0

loc_6D4C6EBA:				; CODE XREF: sub_6D4C6E90+15j
		mov	[esp+18h+var_18], offset sub_6D4C6E60
		call	sub_6D4C1030
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C6ED0:				; CODE XREF: sub_6D4C6E90+11j
		xor	ebx, ebx
		jmp	short loc_6D4C6ED6
; ---------------------------------------------------------------------------

loc_6D4C6ED4:				; CODE XREF: sub_6D4C6E90+52j
		mov	ebx, eax

loc_6D4C6ED6:				; CODE XREF: sub_6D4C6E90+42j
		lea	eax, [ebx+1]
		mov	edx, ds:dword_6D4C722C[eax*4]
		test	edx, edx
		jnz	short loc_6D4C6ED4
		jmp	short loc_6D4C6EA3
sub_6D4C6E90	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6EF0	proc near		; CODE XREF: DllEntryPoint+A2p
		push	ebp
		mov	ebp, esp
		sub	esp, 8
		mov	ecx, ds:dword_6D4CB0B0
		test	ecx, ecx
		jz	short loc_6D4C6F02
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C6F02:				; CODE XREF: sub_6D4C6EF0+Ej
		mov	ds:dword_6D4CB0B0, 1
		leave
		jmp	short sub_6D4C6E90
sub_6D4C6EF0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6F10	proc near		; CODE XREF: DllEntryPoint+28p
					; DllEntryPoint+B6p
		push	ebp
		mov	eax, 1
		mov	ebp, esp
		pop	ebp
		retn	0Ch
sub_6D4C6F10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6F20	proc near		; CODE XREF: sub_6D4C6FA0+15p
					; sub_6D4C6FA0:loc_6D4C6FC1p

lpCriticalSection= dword ptr -18h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	eax, ds:dword_6D4CB0C8
		test	eax, eax
		jnz	short loc_6D4C6F38
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6D4C6F38:				; CODE XREF: sub_6D4C6F20+Fj
		mov	[esp+18h+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	EnterCriticalSection
		mov	ebx, ds:dword_6D4CB0F8
		sub	esp, 4
		test	ebx, ebx
		jz	short loc_6D4C6F7C

loc_6D4C6F51:				; CODE XREF: sub_6D4C6F20+5Aj
		mov	eax, [ebx]
		mov	[esp+18h+lpCriticalSection], eax ; dwTlsIndex
		call	TlsGetValue
		sub	esp, 4
		mov	esi, eax
		call	GetLastError
		test	eax, eax
		jnz	short loc_6D4C6F75
		test	esi, esi
		jz	short loc_6D4C6F75
		mov	eax, [ebx+4]
		mov	[esp+18h+lpCriticalSection], esi
		call	eax

loc_6D4C6F75:				; CODE XREF: sub_6D4C6F20+47j
					; sub_6D4C6F20+4Bj
		mov	ebx, [ebx+8]
		test	ebx, ebx
		jnz	short loc_6D4C6F51

loc_6D4C6F7C:				; CODE XREF: sub_6D4C6F20+2Fj
		mov	[esp+18h+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	LeaveCriticalSection
		sub	esp, 4
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_6D4C6F20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C6FA0	proc near		; CODE XREF: TlsCallback_1+1Ep
					; TlsCallback_0+EDp

lpCriticalSection= dword ptr -18h
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_4]
		cmp	eax, 1
		jz	short loc_6D4C6FF0
		jb	short loc_6D4C6FC1
		cmp	eax, 3
		jnz	short loc_6D4C6FBA
		call	sub_6D4C6F20

loc_6D4C6FBA:				; CODE XREF: sub_6D4C6FA0+13j
					; sub_6D4C6FA0+2Ej ...
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C6FC1:				; CODE XREF: sub_6D4C6FA0+Ej
		call	sub_6D4C6F20
		mov	eax, ds:dword_6D4CB0C8
		cmp	eax, 1
		jnz	short loc_6D4C6FBA
		mov	ds:dword_6D4CB0C8, 0
		mov	[esp+18h+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	DeleteCriticalSection
		sub	esp, 4
		jmp	short loc_6D4C6FBA
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C6FF0:				; CODE XREF: sub_6D4C6FA0+Cj
		mov	eax, ds:dword_6D4CB0C8
		test	eax, eax
		jz	short loc_6D4C7010

loc_6D4C6FF9:				; CODE XREF: sub_6D4C6FA0+7Fj
		mov	ds:dword_6D4CB0C8, 1
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C7010:				; CODE XREF: sub_6D4C6FA0+57j
		mov	[esp+18h+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	InitializeCriticalSection
		sub	esp, 4
		jmp	short loc_6D4C6FF9
sub_6D4C6FA0	endp

; ---------------------------------------------------------------------------
		jmp	short loc_6D4C7030
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C7030:				; CODE XREF: .text:6D4C7021j
		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	eax, ds:dword_6D4CB0C8
		mov	ebx, [ebp+8]
		test	eax, eax
		jnz	short loc_6D4C7050
		xor	eax, eax
		mov	ebx, [ebp-4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6D4C7050:				; CODE XREF: .text:6D4C7041j
		mov	dword ptr [esp], offset	CriticalSection
		call	EnterCriticalSection
		mov	eax, ds:dword_6D4CB0F8
		sub	esp, 4
		test	eax, eax
		jz	short loc_6D4C707F
		mov	edx, [eax]
		cmp	edx, ebx
		jnz	short loc_6D4C7076
		jmp	short loc_6D4C70B4
; ---------------------------------------------------------------------------

loc_6D4C7070:				; CODE XREF: .text:6D4C707Dj
		mov	edx, [eax]
		cmp	edx, ebx
		jz	short loc_6D4C7095

loc_6D4C7076:				; CODE XREF: .text:6D4C706Cj
		mov	ecx, eax
		mov	eax, [eax+8]
		test	eax, eax
		jnz	short loc_6D4C7070

loc_6D4C707F:				; CODE XREF: .text:6D4C7066j
		mov	dword ptr [esp], offset	CriticalSection
		call	LeaveCriticalSection
		sub	esp, 4

loc_6D4C708E:				; CODE XREF: .text:6D4C70B2j
		xor	eax, eax
		mov	ebx, [ebp-4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C7095:				; CODE XREF: .text:6D4C7074j
		mov	edx, [eax+8]
		mov	[ecx+8], edx

loc_6D4C709B:				; CODE XREF: .text:6D4C70BDj
		mov	[esp], eax
		call	free
		mov	dword ptr [esp], offset	CriticalSection
		call	LeaveCriticalSection
		sub	esp, 4
		jmp	short loc_6D4C708E
; ---------------------------------------------------------------------------

loc_6D4C70B4:				; CODE XREF: .text:6D4C706Ej
		mov	edx, [eax+8]
		mov	ds:dword_6D4CB0F8, edx
		jmp	short loc_6D4C709B
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	eax, ds:dword_6D4CB0C8
		test	eax, eax
		jnz	short loc_6D4C70D5

loc_6D4C70D0:				; CODE XREF: .text:6D4C70F2j
					; .text:6D4C712Dj
		mov	ebx, [ebp-4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6D4C70D5:				; CODE XREF: .text:6D4C70CEj
		mov	dword ptr [esp+4], 0Ch
		mov	dword ptr [esp], 1
		call	calloc
		mov	ebx, eax
		mov	eax, 0FFFFFFFFh
		test	ebx, ebx
		jz	short loc_6D4C70D0
		mov	eax, [ebp+8]
		mov	dword ptr [esp], offset	CriticalSection
		mov	[ebx], eax
		mov	eax, [ebp+0Ch]
		mov	[ebx+4], eax
		call	EnterCriticalSection
		mov	eax, ds:dword_6D4CB0F8
		mov	ds:dword_6D4CB0F8, ebx
		mov	[ebx+8], eax
		sub	esp, 4
		mov	dword ptr [esp], offset	CriticalSection
		call	LeaveCriticalSection
		xor	eax, eax
		sub	esp, 4
		jmp	short loc_6D4C70D0
; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __dllonexit]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION free]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION fflush]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION malloc]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _errno]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION memcmp]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ceil]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION sqrt]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION atan2]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION tan]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION cos]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION fwrite]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION vfprintf]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION abort]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION memcpy]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION calloc]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetProcAddress]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION LoadLibraryA]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION FreeLibrary]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION VirtualQuery]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION VirtualProtect]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION TlsGetValue]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetLastError]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION DeleteCriticalSection]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION InitializeCriticalSection]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION EnterCriticalSection]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION LeaveCriticalSection]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6D4C7210	proc near		; DATA XREF: .text:6D4C7230o

var_18		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	sub_6D4C11B0
		mov	[esp+18h+var_18], offset sub_6D4C123C
		call	sub_6D4C1030
		leave
		retn
sub_6D4C7210	endp

; ---------------------------------------------------------------------------
		align 4
dword_6D4C722C	dd 0FFFFFFFFh		; DATA XREF: sub_6D4C6E90+8r
					; sub_6D4C6E90+17o ...
		dd offset sub_6D4C7210
		align 8
		dd 0FFFFFFFFh
dword_6D4C723C	dd 71h dup(0)		; DATA XREF: .data:off_6D4C8000o
		dd 300h	dup(?)
_text		ends

; Section 2. (virtual address 00008000)
; Virtual size			: 00000008 (	  8.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00006800
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 6D4C8000h
off_6D4C8000	dd offset dword_6D4C723C ; DATA	XREF: sub_6D4C6E60+6r
					; sub_6D4C6E60+13r ...
dword_6D4C8004	dd 0			; DATA XREF: sub_6D4C11B0:loc_6D4C11EFr
					; sub_6D4C11B0+71o
		align 1000h
_data		ends

; Section 3. (virtual address 00009000)
; Virtual size			: 00000BAC (   2988.)
; Section size in file		: 00000C00 (   3072.)
; Offset to raw	data for section: 00006A00
; Flags	40600040: Data Readable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 6D4C9000h
; CHAR ModuleName[]
ModuleName	db 'libgcc_s_dw2-1.dll',0 ; DATA XREF: sub_6D4C11B0+6o
					; sub_6D4C123C+6o
; CHAR ProcName[]
ProcName	db '__register_frame_info',0 ; DATA XREF: sub_6D4C11B0+17o
; CHAR aLibgcj11_dll[]
aLibgcj11_dll	db 'libgcj-11.dll',0    ; DATA XREF: sub_6D4C11B0+49o
; CHAR a_jv_registercl[]
a_jv_registercl	db '_Jv_RegisterClasses',0 ; DATA XREF: sub_6D4C11B0+5Ao
; CHAR a__deregister_f[]
a__deregister_f	db '__deregister_frame_info',0 ; DATA XREF: sub_6D4C123C+17o
		align 20h
aPangoCairoCont	db 'pango-cairo-context-info',0 ; DATA XREF: sub_6D4C1280+17o
aPango_is_conte	db 'PANGO_IS_CONTEXT (context)',0
					; DATA XREF: pango_cairo_context_set_font_options:loc_6D4C13F9o
					; pango_cairo_context_get_font_options:loc_6D4C14A1o ...
aPango		db 'Pango',0            ; DATA XREF: pango_cairo_context_set_font_options+41o
					; pango_cairo_context_get_font_options+3Do ...
aCrNull		db 'cr != NULL',0       ; DATA XREF: pango_cairo_update_context:loc_6D4C172Co
					; pango_cairo_create_context:loc_6D4C18A0o ...
aPango_is_layou	db 'PANGO_IS_LAYOUT (layout)',0
					; DATA XREF: pango_cairo_update_layout:loc_6D4C1951o
aPango_cairo__4	db 'pango_cairo_update_layout',0 ; DATA XREF: pango_cairo_update_layout+3Do
					; pango_cairo_update_layout+84o
		align 10h
dword_6D4C9100	dd 0			; DATA XREF: sub_6D4C1544+20o
		dd 3FF00000h, 5	dup(0)
		dd 3FF00000h, 4	dup(0)
aPango_cairo__3	db 'pango_cairo_create_layout',0 ; DATA XREF: pango_cairo_create_layout+3Co
aPango_cairo_cr	db 'pango_cairo_create_context',0
					; DATA XREF: pango_cairo_create_context+3Co
		align 20h
aPango_cairo__2	db 'pango_cairo_context_get_shape_renderer',0
					; DATA XREF: pango_cairo_context_get_shape_renderer+39o
		align 20h
aPango_cairo__1	db 'pango_cairo_context_set_shape_renderer',0
					; DATA XREF: pango_cairo_context_set_shape_renderer+42o
		align 20h
aPango_cairo__0	db 'pango_cairo_context_get_font_options',0
					; DATA XREF: pango_cairo_context_get_font_options+35o
		align 20h
aPango_cairo_co	db 'pango_cairo_context_set_font_options',0
					; DATA XREF: pango_cairo_context_set_font_options+39o
aPango_cairo_up	db 'pango_cairo_update_context',0
					; DATA XREF: pango_cairo_update_context+3Do
					; pango_cairo_update_context+70o
aPangocairofont	db 'PangoCairoFont',0   ; DATA XREF: pango_cairo_font_get_type+2Co
aPangocairoScal	db 'pangocairo-scaledfont-warned',0 ; DATA XREF: sub_6D4C1AC8:loc_6D4C1CB9o
aScaledFont	db 'scaled font',0      ; DATA XREF: sub_6D4C1AC8+120o
aFailedToCreate	db 'failed to create cairo %s, expect ugly output. the offending font'
					; DATA XREF: sub_6D4C1AC8+128o
					; sub_6D4C1AC8+234o
		db ' is ',27h,'%s',27h,0
aPango_0	db 'Pango',0            ; DATA XREF: sub_6D4C1AC8+138o
					; sub_6D4C1AC8+168o ...
aFont_faceStatu	db 'font_face status is: %s',0 ; DATA XREF: sub_6D4C1AC8+158o
aScaled_fontIsN	db 'scaled_font is NULL',0 ; DATA XREF: sub_6D4C1AC8:loc_6D4C1CCFo
aScaled_fontSta	db 'scaled_font status is: %s',0 ; DATA XREF: sub_6D4C1AC8+190o
aFontFace	db 'font face',0        ; DATA XREF: sub_6D4C1AC8+22Co
aFont_faceIsNul	db 'font_face is NULL',0 ; DATA XREF: sub_6D4C1AC8+250o
aMonospace	db 'monospace',0        ; DATA XREF: sub_6D4C1D8C+1B1o
a0123456789	db '0123456789',0       ; DATA XREF: sub_6D4C2514+3FCo
aPNull		db 'p != NULL',0        ; DATA XREF: sub_6D4C2514:loc_6D4C28D8o
byte_6D4C9389	db 30h			; DATA XREF: sub_6D4C1D8C:loc_6D4C20E4r
a123456789abcde	db '123456789ABCDEF',0
		align 10h
dword_6D4C93A0	dd 0			; DATA XREF: sub_6D4C2514+91o
		dd 3FF00000h, 5	dup(0)
		dd 3FF00000h, 4	dup(0)
aPango_utf8_str	db 'pango_utf8_strwidth',0 ; DATA XREF: sub_6D4C2514+3CCo
flt_6D4C93E4	dd 1.0			; DATA XREF: sub_6D4C1D8C+22Ar
					; sub_6D4C1D8C+6D1r ...
flt_6D4C93E8	dd 6.0			; DATA XREF: sub_6D4C1D8C+205r
		align 10h
dbl_6D4C93F0	dq 0.3255813953488372	; DATA XREF: sub_6D4C1D8C+5E4r
flt_6D4C93F8	dd 0.0009765625		; DATA XREF: sub_6D4C1D8C+17Br
		align 10h
dbl_6D4C9400	dq 2.2			; DATA XREF: sub_6D4C1D8C+1C7r
dbl_6D4C9408	dq 0.00001		; DATA XREF: sub_6D4C1D8C+1E3r
					; sub_6D4C1D8C+460r ...
flt_6D4C9410	dd 43.0			; DATA XREF: sub_6D4C1D8C+3F0r
flt_6D4C9414	dd 3.0			; DATA XREF: sub_6D4C1D8C+51Ar
					; sub_6D4C2C98+20Er
flt_6D4C9418	dd 1024.0		; DATA XREF: sub_6D4C2C98+1C2r
					; sub_6D4C2C98+267r
flt_6D4C941C	dd 5.0			; DATA XREF: sub_6D4C2C98+29Er
aPangocairofo_0	db 'PangoCairoFontMap',0 ; DATA XREF: pango_cairo_font_map_get_type+2Co
		align 4
aFontmapNullPan	db 'fontmap == NULL || PANGO_IS_CAIRO_FONT_MAP (fontmap)',0
					; DATA XREF: pango_cairo_font_map_set_default+2Do
aPango_1	db 'Pango',0            ; DATA XREF: pango_cairo_font_map_set_default+3Do
					; pango_cairo_font_map_set_resolution+45o ...
		align 10h
aPango_is_cairo	db 'PANGO_IS_CAIRO_FONT_MAP (fontmap)',0
					; DATA XREF: pango_cairo_font_map_set_resolution:loc_6D4C32FFo
					; pango_cairo_font_map_get_resolution:loc_6D4C3375o ...
		align 10h
aPango_cairo__8	db 'pango_cairo_font_map_get_font_type',0
					; DATA XREF: pango_cairo_font_map_get_font_type+39o
		align 20h
aPango_cairo__7	db 'pango_cairo_font_map_create_context',0
					; DATA XREF: pango_cairo_font_map_create_context+35o
		align 20h
aPango_cairo__6	db 'pango_cairo_font_map_get_resolution',0
					; DATA XREF: pango_cairo_font_map_get_resolution+39o
		align 20h
aPango_cairo__5	db 'pango_cairo_font_map_set_resolution',0
					; DATA XREF: pango_cairo_font_map_set_resolution+3Eo
		align 20h
aPango_cairo_fo	db 'pango_cairo_font_map_set_default',0
					; DATA XREF: pango_cairo_font_map_set_default+35o
		align 4
flt_6D4C95C4	dd 96.0			; DATA XREF: pango_cairo_font_map_get_resolution+4Dr
		align 20h
a06x		db '%06X',0             ; DATA XREF: sub_6D4C410C+240o
a04x		db '%04X',0             ; DATA XREF: sub_6D4C410C+A4o
		align 4
aPango_cairo_re	db 'pango_cairo_renderer_draw_glyph_item: bad cluster has num_bytess '
					; DATA XREF: sub_6D4C4768+26Eo
		db '%d',0
aPango_2	db 'Pango',0            ; DATA XREF: sub_6D4C4768+27Eo
					; sub_6D4C4768+2A8o ...
		align 4
aPango_cairo__9	db 'pango_cairo_renderer_draw_glyph_item: bad cluster has num_glyphs '
					; DATA XREF: sub_6D4C4768+298o
		db '%d',0
aPangocairorend	db 'PangoCairoRenderer',0 ; DATA XREF: pango_cairo_renderer_get_type+2Co
aCrNull_0	db 'cr != NULL',0       ; DATA XREF: pango_cairo_show_glyph_string:loc_6D4C4D94o
					; pango_cairo_show_glyph_item:loc_6D4C4EB8o ...
aGlyphsNull	db 'glyphs != NULL',0   ; DATA XREF: pango_cairo_show_glyph_string:loc_6D4C4DB0o
					; pango_cairo_glyph_string_path:loc_6D4C50F0o
aTextNull	db 'text != NULL',0     ; DATA XREF: pango_cairo_show_glyph_item:loc_6D4C4EDCo
aGlyph_itemNull	db 'glyph_item != NULL',0
					; DATA XREF: pango_cairo_show_glyph_item:loc_6D4C4EE8o
aLineNull	db 'line != NULL',0     ; DATA XREF: pango_cairo_show_layout_line:loc_6D4C4F30o
					; pango_cairo_layout_line_path:loc_6D4C514Co
aPango_is_lay_0	db 'PANGO_IS_LAYOUT (layout)',0
					; DATA XREF: pango_cairo_show_layout:loc_6D4C4F85o
					; pango_cairo_layout_path:loc_6D4C51A1o
aWidth0Height0	db '(width >= 0) && (height >= 0)',0
					; DATA XREF: pango_cairo_show_error_underline:loc_6D4C507Co
					; pango_cairo_error_underline_path:loc_6D4C5268o
		align 20h
aPango_cairo_er	db 'pango_cairo_error_underline_path',0
					; DATA XREF: pango_cairo_error_underline_path:loc_6D4C526Fo
aPango_cairo_14	db 'pango_cairo_layout_path',0 ; DATA XREF: pango_cairo_layout_path+3Do
					; pango_cairo_layout_path+74o
aPango_cairo_la	db 'pango_cairo_layout_line_path',0
					; DATA XREF: pango_cairo_layout_line_path+28o
					; pango_cairo_layout_line_path+48o
aPango_cairo_gl	db 'pango_cairo_glyph_string_path',0
					; DATA XREF: pango_cairo_glyph_string_path+2Bo
					; pango_cairo_glyph_string_path+47o
		align 10h
aPango_cairo_13	db 'pango_cairo_show_error_underline',0
					; DATA XREF: pango_cairo_show_error_underline:loc_6D4C5083o
aPango_cairo_12	db 'pango_cairo_show_layout',0 ; DATA XREF: pango_cairo_show_layout+3Do
					; pango_cairo_show_layout+74o
aPango_cairo_11	db 'pango_cairo_show_layout_line',0
					; DATA XREF: pango_cairo_show_layout_line+24o
					; pango_cairo_show_layout_line+44o
aPango_cairo_10	db 'pango_cairo_show_glyph_item',0
					; DATA XREF: pango_cairo_show_glyph_item:loc_6D4C4EBFo
aPango_cairo_sh	db 'pango_cairo_show_glyph_string',0
					; DATA XREF: pango_cairo_show_glyph_string+2Bo
					; pango_cairo_show_glyph_string+47o
flt_6D4C9830	dd 2.5			; DATA XREF: sub_6D4C34AC+1Cr
flt_6D4C9834	dd 1.5			; DATA XREF: sub_6D4C34AC+25r
					; sub_6D4C410C+11Dr ...
flt_6D4C9838	dd 0.5			; DATA XREF: sub_6D4C34AC+33r
					; sub_6D4C3C08+D7r ...
flt_6D4C983C	dd 65535.0		; DATA XREF: sub_6D4C3844+1Dr
flt_6D4C9840	dd 0.0009765625		; DATA XREF: sub_6D4C38A4+3Cr
					; sub_6D4C3968:loc_6D4C3990r ...
		align 8
dbl_6D4C9848	dq 0.00001		; DATA XREF: sub_6D4C3C08+A1r
					; sub_6D4C3C08+EEr ...
dbl_6D4C9850	dq 1.570796326794897	; DATA XREF: sub_6D4C3C08+21Fr
dbl_6D4C9858	dq 0.5			; DATA XREF: sub_6D4C3C08+36r
					; sub_6D4C3C08+90r
flt_6D4C9860	dd 3.0			; DATA XREF: sub_6D4C410C+F1r
					; sub_6D4C410C+282r
flt_6D4C9864	dd 14.0			; DATA XREF: sub_6D4C410C+297r
		align 20h
aPangocairowin3	db 'PangoCairoWin32Font',0 ; DATA XREF: sub_6D4C5480+2Co
aPango_is_cai_0	db 'PANGO_IS_CAIRO_WIN32_FONT_MAP (cwfontmap)',0
					; DATA XREF: sub_6D4C5634:loc_6D4C5666o
aPango_3	db 'Pango',0            ; DATA XREF: sub_6D4C5634+42o
					; sub_6D4C5634+1DDo
aWin32fontFontm	db 'win32font->fontmap == NULL',0 ; DATA XREF: sub_6D4C5634+1BDo
aPangocairoWin3	db 'pangocairo-win32font.c',0 ; DATA XREF: sub_6D4C5634+1D5o
a_pango_cairo_w	db '_pango_cairo_win32_font_new',0 ; DATA XREF: sub_6D4C5634+3Ao
					; sub_6D4C5634+1C5o
		align 4
flt_6D4C9914	dd 1024.0		; DATA XREF: sub_6D4C52C4+33r
					; sub_6D4C5634+DEr ...
flt_6D4C9918	dd 14.0			; DATA XREF: sub_6D4C52C4+77r
flt_6D4C991C	dd 0.25			; DATA XREF: sub_6D4C52C4+96r
flt_6D4C9920	dd 0.0009765625		; DATA XREF: sub_6D4C5634+60r
flt_6D4C9924	dd 72.0			; DATA XREF: sub_6D4C5634+A4r
flt_6D4C9928	dd -2.0			; DATA XREF: sub_6D4C5634:loc_6D4C571Cr
flt_6D4C992C	dd 2.0			; DATA XREF: sub_6D4C5634+119r
aPangocairowi_0	db 'PangoCairoWin32FontMap',0 ; DATA XREF: sub_6D4C59D4+2Co
		align 4
aPangocairofcfo	db 'PangoCairoFcFont',0 ; DATA XREF: sub_6D4C5CCC+2Co
aFontmap	db 'fontmap',0          ; DATA XREF: sub_6D4C5D8C+85o
aPattern	db 'pattern',0          ; DATA XREF: sub_6D4C5D8C+91o
aPixelsize	db 'pixelsize',0        ; DATA XREF: sub_6D4C5D8C+B6o
aDpi		db 'dpi',0              ; DATA XREF: sub_6D4C5D8C+2A7o
aSize		db 'size',0             ; DATA XREF: sub_6D4C5D8C+2D5o
aMatrix		db 'matrix',0           ; DATA XREF: sub_6D4C5D8C+157o
aPangogravity	db 'pangogravity',0     ; DATA XREF: sub_6D4C5D8C+207o
aPango_is_cai_1	db 'PANGO_IS_CAIRO_FC_FONT_MAP (cffontmap)',0
					; DATA XREF: sub_6D4C5D8C:loc_6D4C5DCBo
aPango_4	db 'Pango',0            ; DATA XREF: sub_6D4C5D8C+4Fo
					; sub_6D4C5D8C+317o
aPatternNull	db 'pattern != NULL',0  ; DATA XREF: sub_6D4C5D8C:loc_6D4C6093o
a_pango_cairo_f	db '_pango_cairo_fc_font_new',0 ; DATA XREF: sub_6D4C5D8C+47o
					; sub_6D4C5D8C+30Fo
		align 4
flt_6D4C99E8	dd 18.0			; DATA XREF: sub_6D4C5D8C:loc_6D4C6088r
flt_6D4C99EC	dd 72.0			; DATA XREF: sub_6D4C5D8C+2EFr
		align 20h
aPango_cairo_15	db 'pango_cairo_font_map_init: Could not initialize freetype',0
					; DATA XREF: sub_6D4C62D8+20o
aPango_5	db 'Pango',0            ; DATA XREF: sub_6D4C62D8+30o
					; .text:6D4C6425o
aPangocairofc_0	db 'PangoCairoFcFontMap',0 ; DATA XREF: sub_6D4C6328+2Co
		align 4
aPango_is_cai_2	db 'PANGO_IS_CAIRO_FC_FONT_MAP (fontmap)',0 ; DATA XREF: .text:loc_6D4C6415o
		align 10h
a_pango_cairo_0	db '_pango_cairo_fc_font_map_get_library',0 ; DATA XREF: .text:6D4C641Do
		align 20h
; CHAR LibFileName[]
LibFileName	db 'mingwm10.dll',0     ; DATA XREF: TlsCallback_0+50o
; CHAR a__mingwthr_rem[]
a__mingwthr_rem	db '__mingwthr_remove_key_dtor',0 ; DATA XREF: TlsCallback_0+6Co
; CHAR a__mingwthr_key[]
a__mingwthr_key	db '__mingwthr_key_dtor',0 ; DATA XREF: TlsCallback_0+84o
off_6D4C9AFC	dd offset TlsCallback_0	; DATA XREF: DllEntryPoint+80r
aMingwRuntimeFa	db 'Mingw runtime failure:',0Ah,0 ; DATA XREF: sub_6D4C6B80+2Co
; char Format[]
Format		db '  VirtualQuery failed for %d bytes at address %p',0
					; DATA XREF: sub_6D4C6BD0+C6o
		align 4
; char aUnknownPseud_0[]
aUnknownPseud_0	db '  Unknown pseudo relocation protocol version %d.',0Ah,0
					; DATA XREF: sub_6D4C6CB0+19Ao
		align 10h
; char aUnknownPseudoR[]
aUnknownPseudoR	db '  Unknown pseudo relocation bit size %d.',0Ah,0
					; DATA XREF: sub_6D4C6CB0+C6o
		align 4
dword_6D4C9BAC	dd 0			; DATA XREF: sub_6D4C6CB0:loc_6D4C6CD5o
					; sub_6D4C6CB0+2Ao ...
dword_6D4C9BB0	dd 0			; DATA XREF: sub_6D4C6CB0+52r
dword_6D4C9BB4	dd 0			; DATA XREF: sub_6D4C6CB0+5Cr
dword_6D4C9BB8	dd 12h dup(0)		; DATA XREF: sub_6D4C6CB0+66o
		align 800h
_rdata		ends

; Section 4. (virtual address 0000A000)
; Virtual size			: 00000004 (	  4.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00007600
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_eh_fram	segment	dword public 'DATA' use32
		assume cs:_eh_fram
		;org 6D4CA000h
dword_6D4CA000	dd 80h dup(0)		; DATA XREF: sub_6D4C11B0+36o
					; sub_6D4C123C+2Eo
		align 1000h
_eh_fram	ends

; Section 5. (virtual address 0000B000)
; Virtual size			: 0000014C (	332.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0400080: Bss Readable Writable
; Alignment	: 8 bytes
; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment 'qword' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 6D4CB000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
; void *Memory
Memory		dd ?			; DATA XREF: .text:6D4C1011o
					; sub_6D4C1030+11o ...
		align 10h
dword_6D4CB010	dd ?			; DATA XREF: .text:6D4C1009o
					; sub_6D4C1030+9o ...
		align 10h
dword_6D4CB020	dd 6 dup(?)		; DATA XREF: sub_6D4C11B0+2Eo
dword_6D4CB038	dd ?			; DATA XREF: sub_6D4C1280+Dr
					; sub_6D4C1280+25w ...
dword_6D4CB03C	dd ?			; DATA XREF: sub_6D4C1AC8+9Ar
					; sub_6D4C1AC8:loc_6D4C1B6Fr ...
dword_6D4CB040	dd ?			; DATA XREF: pango_cairo_font_get_type+7r
					; pango_cairo_font_get_type:loc_6D4C1A30r ...
dword_6D4CB044	dd ?			; DATA XREF: pango_cairo_font_map_get_default+6r
					; pango_cairo_font_map_get_default+19w	...
dword_6D4CB048	dd ?			; DATA XREF: pango_cairo_font_map_get_type+7r
					; pango_cairo_font_map_get_type:loc_6D4C3110r ...
dword_6D4CB04C	dd ?			; DATA XREF: sub_6D4C3764+52r
					; sub_6D4C3764:loc_6D4C37DCo ...
dword_6D4CB050	dd ?			; DATA XREF: sub_6D4C4B2C:loc_6D4C4B3Er
					; sub_6D4C4B2C+71w
dword_6D4CB054	dd ?			; DATA XREF: pango_cairo_renderer_get_type+7r
					; pango_cairo_renderer_get_type:loc_6D4C4AACr ...
dword_6D4CB058	dd ?			; DATA XREF: sub_6D4C37EC+12w
dword_6D4CB05C	dd ?			; DATA XREF: sub_6D4C5480+7r
					; sub_6D4C5480:loc_6D4C5490r ...
dword_6D4CB060	dd ?			; DATA XREF: sub_6D4C53A8+14w
					; sub_6D4C5444+20r
dword_6D4CB064	dd ?			; DATA XREF: sub_6D4C59D4+7r
					; sub_6D4C59D4:loc_6D4C59E4r ...
dword_6D4CB068	dd ?			; DATA XREF: sub_6D4C5958+13w
					; sub_6D4C5B24+23r
dword_6D4CB06C	dd ?			; DATA XREF: sub_6D4C5D8C+21Er
					; sub_6D4C5D8C+337w
dword_6D4CB070	dd ?			; DATA XREF: sub_6D4C5CCC+7r
					; sub_6D4C5CCC:loc_6D4C5CDCr ...
dword_6D4CB074	dd ?			; DATA XREF: sub_6D4C5BB0+14w
					; sub_6D4C5C94+1Dr
dword_6D4CB078	dd ?			; DATA XREF: sub_6D4C6328+7r
					; sub_6D4C6328:loc_6D4C6338r ...
dword_6D4CB07C	dd ?			; DATA XREF: sub_6D4C6124+13w
					; sub_6D4C62A0+12r
TlsIndex	dd 4 dup(?)		; DATA XREF: .tls:TlsIndex_ptro
; HMODULE hLibModule
hLibModule	dd ?			; DATA XREF: TlsCallback_0+61w
					; TlsCallback_0+8Cr ...
		align 10h
dword_6D4CB0A0	dd ?			; DATA XREF: sub_6D4C6CB0+6r
					; sub_6D4C6CB0+32w
		align 10h
dword_6D4CB0B0	dd ?			; DATA XREF: sub_6D4C6EF0+6r
					; sub_6D4C6EF0:loc_6D4C6F02w
		align 10h
dword_6D4CB0C0	dd ?			; DATA XREF: TlsCallback_0+15r
					; TlsCallback_0+1Ew ...
		align 8
dword_6D4CB0C8	dd ?			; DATA XREF: sub_6D4C6F20+8r
					; sub_6D4C6FA0+26r ...
		dd 3 dup(?)
; struct _RTL_CRITICAL_SECTION CriticalSection
CriticalSection	_RTL_CRITICAL_SECTION <?> ; DATA XREF: sub_6D4C6F20:loc_6D4C6F38o
					; sub_6D4C6F20:loc_6D4C6F7Co ...
		dd 2 dup(?)
dword_6D4CB0F8	dd ?			; DATA XREF: sub_6D4C6F20+24r
					; .text:6D4C705Cr ...
		dd 4 dup(?)
dword_6D4CB10C	dd ?			; DATA XREF: TlsCallback_0+99w
					; TlsCallback_0+B8r ...
		dd 3 dup(?)
dword_6D4CB11C	dd ?			; DATA XREF: TlsCallback_0+7Fw
					; TlsCallback_0+AEr ...
		dd 3 dup(?)
dword_6D4CB12C	dd ?			; DATA XREF: TlsCallback_0:loc_6D4C6A46w
		align 1000h
_bss		ends

;
; Imports from libpango-1.0-0.dll
;
; Section 7. (virtual address 0000D000)
; Virtual size			: 00002084 (   8324.)
; Section size in file		: 00002200 (   8704.)
; Offset to raw	data for section: 00007E00
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Externs
; _idata
		extrn __imp_pango_context_get_matrix:dword
					; DATA XREF: pango_context_get_matrixr
		extrn __imp_pango_context_get_type:dword
					; DATA XREF: pango_context_get_typer
		extrn __imp_pango_context_set_language:dword
					; DATA XREF: pango_context_set_languager
		extrn __imp_pango_context_set_matrix:dword
					; DATA XREF: pango_context_set_matrixr
		extrn __imp_pango_font_describe:dword ;	DATA XREF: pango_font_describer
		extrn __imp_pango_font_describe_with_absolute_size:dword
					; DATA XREF: pango_font_describe_with_absolute_sizer
		extrn __imp_pango_font_description_free:dword
					; DATA XREF: pango_font_description_freer
		extrn __imp_pango_font_description_get_gravity:dword
					; DATA XREF: pango_font_description_get_gravityr
		extrn __imp_pango_font_description_get_size:dword
					; DATA XREF: pango_font_description_get_sizer
		extrn __imp_pango_font_description_get_size_is_absolute:dword
					; DATA XREF: pango_font_description_get_size_is_absoluter
		extrn __imp_pango_font_description_set_absolute_size:dword
					; DATA XREF: pango_font_description_set_absolute_sizer
		extrn __imp_pango_font_description_set_family_static:dword
					; DATA XREF: pango_font_description_set_family_staticr
		extrn __imp_pango_font_description_to_string:dword
					; DATA XREF: pango_font_description_to_stringr
		extrn __imp_pango_font_description_unset_fields:dword
					; DATA XREF: pango_font_description_unset_fieldsr
		extrn __imp_pango_font_get_font_map:dword
					; DATA XREF: pango_font_get_font_mapr
		extrn __imp_pango_font_get_glyph_extents:dword
					; DATA XREF: pango_font_get_glyph_extentsr
		extrn __imp_pango_font_get_type:dword ;	DATA XREF: pango_font_get_typer
		extrn __imp_pango_font_map_create_context:dword
					; DATA XREF: pango_font_map_create_contextr
		extrn __imp_pango_font_map_get_type:dword
					; DATA XREF: pango_font_map_get_typer
		extrn __imp_pango_font_map_load_font:dword
					; DATA XREF: pango_font_map_load_fontr
		extrn __imp_pango_font_metrics_new:dword
					; DATA XREF: pango_font_metrics_newr
		extrn __imp_pango_font_metrics_ref:dword
					; DATA XREF: pango_font_metrics_refr
		extrn __imp_pango_font_metrics_unref:dword
					; DATA XREF: pango_font_metrics_unrefr
		extrn __imp_pango_glyph_item_iter_init_start:dword
					; DATA XREF: pango_glyph_item_iter_init_startr
		extrn __imp_pango_glyph_item_iter_next_cluster:dword
					; DATA XREF: pango_glyph_item_iter_next_clusterr
		extrn __imp_pango_gravity_get_type:dword
					; DATA XREF: pango_gravity_get_typer
		extrn __imp_pango_gravity_to_rotation:dword
					; DATA XREF: pango_gravity_to_rotationr
		extrn __imp_pango_language_get_sample_string:dword
					; DATA XREF: pango_language_get_sample_stringr
		extrn __imp_pango_layout_context_changed:dword
					; DATA XREF: pango_layout_context_changedr
		extrn __imp_pango_layout_get_context:dword
					; DATA XREF: pango_layout_get_contextr
		extrn __imp_pango_layout_get_extents:dword
					; DATA XREF: pango_layout_get_extentsr
		extrn __imp_pango_layout_get_lines_readonly:dword
					; DATA XREF: pango_layout_get_lines_readonlyr
		extrn __imp_pango_layout_get_type:dword	; DATA XREF: pango_layout_get_typer
		extrn __imp_pango_layout_new:dword ; DATA XREF:	pango_layout_newr
		extrn __imp_pango_layout_set_font_description:dword
					; DATA XREF: pango_layout_set_font_descriptionr
		extrn __imp_pango_layout_set_text:dword	; DATA XREF: pango_layout_set_textr
		extrn __imp_pango_matrix_get_font_scale_factor:dword
					; DATA XREF: pango_matrix_get_font_scale_factorr
		extrn __imp_pango_quantize_line_geometry:dword
					; DATA XREF: pango_quantize_line_geometryr
		extrn __imp_pango_renderer_activate:dword
					; DATA XREF: pango_renderer_activater
		extrn __imp_pango_renderer_deactivate:dword
					; DATA XREF: pango_renderer_deactivater
		extrn __imp_pango_renderer_draw_glyph_item:dword
					; DATA XREF: pango_renderer_draw_glyph_itemr
		extrn __imp_pango_renderer_draw_glyphs:dword
					; DATA XREF: pango_renderer_draw_glyphsr
		extrn __imp_pango_renderer_draw_layout:dword
					; DATA XREF: pango_renderer_draw_layoutr
		extrn __imp_pango_renderer_draw_layout_line:dword
					; DATA XREF: pango_renderer_draw_layout_liner
		extrn __imp_pango_renderer_get_color:dword
					; DATA XREF: pango_renderer_get_colorr
		extrn __imp_pango_renderer_get_layout:dword
					; DATA XREF: pango_renderer_get_layoutr
		extrn __imp_pango_renderer_get_type:dword
					; DATA XREF: pango_renderer_get_typer
		extrn __imp_pango_renderer_set_color:dword
					; DATA XREF: pango_renderer_set_colorr
		extrn __imp_pango_script_get_sample_language:dword
					; DATA XREF: pango_script_get_sample_languager
		extrn __imp_pango_units_from_double:dword
					; DATA XREF: pango_units_from_doubler

;
; Imports from libpangoft2-1.0-0.dll
;
		extrn __imp_pango_fc_font_create_base_metrics_for_context:dword
					; DATA XREF: pango_fc_font_create_base_metrics_for_contextr
		extrn __imp_pango_fc_font_get_type:dword
					; DATA XREF: pango_fc_font_get_typer
		extrn __imp_pango_fc_font_key_get_context_key:dword
					; DATA XREF: pango_fc_font_key_get_context_keyr
		extrn __imp_pango_fc_font_key_get_matrix:dword
					; DATA XREF: pango_fc_font_key_get_matrixr
		extrn __imp_pango_fc_font_key_get_pattern:dword
					; DATA XREF: pango_fc_font_key_get_patternr
		extrn __imp_pango_fc_font_map_cache_clear:dword
					; DATA XREF: pango_fc_font_map_cache_clearr
		extrn __imp_pango_fc_font_map_get_type:dword
					; DATA XREF: pango_fc_font_map_get_typer
		extrn __imp_pango_fc_fontset_key_get_context_key:dword
					; DATA XREF: pango_fc_fontset_key_get_context_keyr

;
; Imports from libpangowin32-1.0-0.dll
;
		extrn __imp__pango_win32_font_get_type:dword
					; DATA XREF: _pango_win32_font_get_typer
		extrn __imp__pango_win32_font_map_get_type:dword
					; DATA XREF: _pango_win32_font_map_get_typer
		extrn __imp__pango_win32_fontmap_cache_remove:dword
					; DATA XREF: _pango_win32_fontmap_cache_remover
		extrn __imp__pango_win32_make_matching_logfontw:dword
					; DATA XREF: _pango_win32_make_matching_logfontwr
		extrn __imp_pango_win32_get_dc:dword ; DATA XREF: pango_win32_get_dcr

;
; Imports from libcairo-2.dll
;
		extrn __imp_cairo_close_path:dword ; DATA XREF:	cairo_close_pathr
		extrn __imp_cairo_fill:dword ; DATA XREF: cairo_fillr
		extrn __imp_cairo_font_face_destroy:dword
					; DATA XREF: cairo_font_face_destroyr
		extrn __imp_cairo_font_face_status:dword
					; DATA XREF: cairo_font_face_statusr
		extrn __imp_cairo_font_options_copy:dword
					; DATA XREF: cairo_font_options_copyr
		extrn __imp_cairo_font_options_create:dword
					; DATA XREF: cairo_font_options_creater
		extrn __imp_cairo_font_options_destroy:dword
					; DATA XREF: cairo_font_options_destroyr
		extrn __imp_cairo_font_options_equal:dword
					; DATA XREF: cairo_font_options_equalr
		extrn __imp_cairo_font_options_get_hint_metrics:dword
					; DATA XREF: cairo_font_options_get_hint_metricsr
		extrn __imp_cairo_font_options_hash:dword
					; DATA XREF: cairo_font_options_hashr
		extrn __imp_cairo_font_options_merge:dword
					; DATA XREF: cairo_font_options_merger
		extrn __imp_cairo_ft_font_face_create_for_pattern:dword
					; DATA XREF: cairo_ft_font_face_create_for_patternr
		extrn __imp_cairo_ft_font_options_substitute:dword
					; DATA XREF: cairo_ft_font_options_substituter
		extrn __imp_cairo_ft_scaled_font_lock_face:dword
					; DATA XREF: cairo_ft_scaled_font_lock_facer
		extrn __imp_cairo_ft_scaled_font_unlock_face:dword
					; DATA XREF: cairo_ft_scaled_font_unlock_facer
		extrn __imp_cairo_get_current_point:dword
					; DATA XREF: cairo_get_current_pointr
		extrn __imp_cairo_get_matrix:dword ; DATA XREF:	cairo_get_matrixr
		extrn __imp_cairo_get_target:dword ; DATA XREF:	cairo_get_targetr
		extrn __imp_cairo_glyph_path:dword ; DATA XREF:	cairo_glyph_pathr
		extrn __imp_cairo_has_current_point:dword
					; DATA XREF: cairo_has_current_pointr
		extrn __imp_cairo_identity_matrix:dword	; DATA XREF: cairo_identity_matrixr
		extrn __imp_cairo_line_to:dword	; DATA XREF: cairo_line_tor
		extrn __imp_cairo_matrix_init:dword ; DATA XREF: cairo_matrix_initr
		extrn __imp_cairo_matrix_init_identity:dword
					; DATA XREF: cairo_matrix_init_identityr
		extrn __imp_cairo_matrix_init_rotate:dword
					; DATA XREF: cairo_matrix_init_rotater
		extrn __imp_cairo_matrix_multiply:dword	; DATA XREF: cairo_matrix_multiplyr
		extrn __imp_cairo_matrix_scale:dword ; DATA XREF: cairo_matrix_scaler
		extrn __imp_cairo_matrix_transform_distance:dword
					; DATA XREF: cairo_matrix_transform_distancer
		extrn __imp_cairo_move_to:dword	; DATA XREF: cairo_move_tor
		extrn __imp_cairo_new_path:dword ; DATA	XREF: cairo_new_pathr
		extrn __imp_cairo_new_sub_path:dword ; DATA XREF: cairo_new_sub_pathr
		extrn __imp_cairo_rectangle:dword ; DATA XREF: cairo_rectangler
		extrn __imp_cairo_rel_line_to:dword ; DATA XREF: cairo_rel_line_tor
		extrn __imp_cairo_restore:dword	; DATA XREF: cairo_restorer
		extrn __imp_cairo_save:dword ; DATA XREF: cairo_saver
		extrn __imp_cairo_scaled_font_create:dword
					; DATA XREF: cairo_scaled_font_creater
		extrn __imp_cairo_scaled_font_destroy:dword
					; DATA XREF: cairo_scaled_font_destroyr
		extrn __imp_cairo_scaled_font_extents:dword
					; DATA XREF: cairo_scaled_font_extentsr
		extrn __imp_cairo_scaled_font_get_ctm:dword
					; DATA XREF: cairo_scaled_font_get_ctmr
		extrn __imp_cairo_scaled_font_get_font_options:dword
					; DATA XREF: cairo_scaled_font_get_font_optionsr
		extrn __imp_cairo_scaled_font_glyph_extents:dword
					; DATA XREF: cairo_scaled_font_glyph_extentsr
		extrn __imp_cairo_scaled_font_status:dword
					; DATA XREF: cairo_scaled_font_statusr
		extrn __imp_cairo_scaled_font_text_extents:dword
					; DATA XREF: cairo_scaled_font_text_extentsr
		extrn __imp_cairo_set_line_cap:dword ; DATA XREF: cairo_set_line_capr
		extrn __imp_cairo_set_line_join:dword ;	DATA XREF: cairo_set_line_joinr
		extrn __imp_cairo_set_line_width:dword ; DATA XREF: cairo_set_line_widthr
		extrn __imp_cairo_set_miter_limit:dword	; DATA XREF: cairo_set_miter_limitr
		extrn __imp_cairo_set_scaled_font:dword	; DATA XREF: cairo_set_scaled_fontr
		extrn __imp_cairo_set_source_rgb:dword ; DATA XREF: cairo_set_source_rgbr
		extrn __imp_cairo_show_glyphs:dword ; DATA XREF: cairo_show_glyphsr
		extrn __imp_cairo_show_text:dword ; DATA XREF: cairo_show_textr
		extrn __imp_cairo_show_text_glyphs:dword
					; DATA XREF: cairo_show_text_glyphsr
		extrn __imp_cairo_status_to_string:dword
					; DATA XREF: cairo_status_to_stringr
		extrn __imp_cairo_stroke:dword ; DATA XREF: cairo_stroker
		extrn __imp_cairo_surface_get_font_options:dword
					; DATA XREF: cairo_surface_get_font_optionsr
		extrn __imp_cairo_surface_has_show_text_glyphs:dword
					; DATA XREF: cairo_surface_has_show_text_glyphsr
		extrn __imp_cairo_text_path:dword ; DATA XREF: cairo_text_pathr
		extrn __imp_cairo_translate:dword ; DATA XREF: cairo_translater
		extrn __imp_cairo_user_to_device_distance:dword
					; DATA XREF: cairo_user_to_device_distancer
		extrn __imp_cairo_win32_font_face_create_for_logfontw:dword
					; DATA XREF: cairo_win32_font_face_create_for_logfontwr
		extrn __imp_cairo_win32_scaled_font_done_font:dword
					; DATA XREF: cairo_win32_scaled_font_done_fontr
		extrn __imp_cairo_win32_scaled_font_get_metrics_factor:dword
					; DATA XREF: cairo_win32_scaled_font_get_metrics_factorr
		extrn __imp_cairo_win32_scaled_font_select_font:dword
					; DATA XREF: cairo_win32_scaled_font_select_fontr

;
; Imports from libfontconfig-1.dll
;
		extrn __imp_FcConfigSubstitute:dword ; DATA XREF: FcConfigSubstituter
		extrn __imp_FcDefaultSubstitute:dword ;	DATA XREF: FcDefaultSubstituter
		extrn __imp_FcMatrixMultiply:dword ; DATA XREF:	FcMatrixMultiplyr
		extrn __imp_FcPatternGetDouble:dword ; DATA XREF: FcPatternGetDoubler
		extrn __imp_FcPatternGetMatrix:dword ; DATA XREF: FcPatternGetMatrixr
		extrn __imp_FcPatternGetString:dword ; DATA XREF: FcPatternGetStringr

;
; Imports from freetype6.dll
;
		extrn __imp_FT_Done_FreeType:dword ; DATA XREF:	FT_Done_FreeTyper
		extrn __imp_FT_Init_FreeType:dword ; DATA XREF:	FT_Init_FreeTyper

;
; Imports from libglib-2.0-0.dll
;
		extrn __imp_g_assertion_message_expr:dword
					; DATA XREF: g_assertion_message_exprr
		extrn __imp_g_free:dword ; DATA	XREF: g_freer
		extrn __imp_g_intern_static_string:dword
					; DATA XREF: g_intern_static_stringr
		extrn __imp_g_log:dword	; DATA XREF: g_logr
		extrn __imp_g_malloc0:dword ; DATA XREF: g_malloc0r
		extrn __imp_g_malloc_n:dword ; DATA XREF: g_malloc_nr
		extrn __imp_g_once_init_enter_impl:dword
					; DATA XREF: g_once_init_enter_implr
		extrn __imp_g_once_init_leave:dword ; DATA XREF: g_once_init_leaver
		extrn __imp_g_quark_from_static_string:dword
					; DATA XREF: g_quark_from_static_stringr
		extrn __imp_g_return_if_fail_warning:dword
					; DATA XREF: g_return_if_fail_warningr
		extrn __imp_g_slice_alloc:dword	; DATA XREF: g_slice_allocr
		extrn __imp_g_slice_alloc0:dword ; DATA	XREF: g_slice_alloc0r
		extrn __imp_g_slice_free1:dword	; DATA XREF: g_slice_free1r
		extrn __imp_g_slist_foreach:dword ; DATA XREF: g_slist_foreachr
		extrn __imp_g_slist_free:dword ; DATA XREF: g_slist_freer
		extrn __imp_g_slist_prepend:dword ; DATA XREF: g_slist_prependr
		extrn __imp_g_snprintf:dword ; DATA XREF: g_snprintfr
		extrn __imp_g_static_mutex_get_mutex_impl:dword
					; DATA XREF: g_static_mutex_get_mutex_implr
		extrn g_thread_functions_for_glib_use:dword ; DATA XREF: sub_6D4C3764+4Ar
					; sub_6D4C4B2C:loc_6D4C4B50r
		extrn g_threads_got_initialized:dword ;	DATA XREF: sub_6D4C3764+3Fr
					; sub_6D4C4B2C+7r
		extrn __imp_g_unichar_iswide:dword ; DATA XREF:	g_unichar_iswider
		extrn __imp_g_unichar_iszerowidth:dword	; DATA XREF: g_unichar_iszerowidthr
		extrn __imp_g_utf8_get_char:dword ; DATA XREF: g_utf8_get_charr
		extrn g_utf8_skip:dword	; DATA XREF: sub_6D4C2514+375r

;
; Imports from libgobject-2.0-0.dll
;
		extrn __imp_g_enum_get_value_by_nick:dword
					; DATA XREF: g_enum_get_value_by_nickr
		extrn __imp_g_object_add_weak_pointer:dword
					; DATA XREF: g_object_add_weak_pointerr
		extrn __imp_g_object_get_qdata:dword ; DATA XREF: g_object_get_qdatar
		extrn __imp_g_object_new:dword ; DATA XREF: g_object_newr
		extrn __imp_g_object_ref:dword ; DATA XREF: g_object_refr
		extrn __imp_g_object_set_qdata_full:dword
					; DATA XREF: g_object_set_qdata_fullr
		extrn __imp_g_object_unref:dword ; DATA	XREF: g_object_unrefr
		extrn __imp_g_type_add_interface_static:dword
					; DATA XREF: g_type_add_interface_staticr
		extrn __imp_g_type_check_class_cast:dword
					; DATA XREF: g_type_check_class_castr
		extrn __imp_g_type_check_instance_cast:dword
					; DATA XREF: g_type_check_instance_castr
		extrn __imp_g_type_check_instance_is_a:dword
					; DATA XREF: g_type_check_instance_is_ar
		extrn __imp_g_type_class_peek_parent:dword
					; DATA XREF: g_type_class_peek_parentr
		extrn __imp_g_type_class_ref:dword ; DATA XREF:	g_type_class_refr
		extrn __imp_g_type_init:dword ;	DATA XREF: g_type_initr
		extrn __imp_g_type_interface_add_prerequisite:dword
					; DATA XREF: g_type_interface_add_prerequisiter
		extrn __imp_g_type_interface_peek:dword	; DATA XREF: g_type_interface_peekr
		extrn __imp_g_type_register_static_simple:dword
					; DATA XREF: g_type_register_static_simpler

;
; Imports from GDI32.dll
;
; int __stdcall	GetDeviceCaps(HDC hdc, int index)
		extrn __imp_GetDeviceCaps:dword	; DATA XREF: GetDeviceCapsr

;
; Imports from KERNEL32.dll
;
; void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp_DeleteCriticalSection:dword	; DATA XREF: DeleteCriticalSectionr
; void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp_EnterCriticalSection:dword ; DATA XREF: EnterCriticalSectionr
; BOOL __stdcall FreeLibrary(HMODULE hLibModule)
		extrn __imp_FreeLibrary:dword ;	DATA XREF: FreeLibraryr
; DWORD	__stdcall GetLastError()
		extrn __imp_GetLastError:dword ; DATA XREF: GetLastErrorr
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
		extrn __imp_GetModuleHandleA:dword ; DATA XREF:	GetModuleHandleAr
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
		extrn __imp_GetProcAddress:dword ; DATA	XREF: GetProcAddressr
; void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp_InitializeCriticalSection:dword
					; DATA XREF: InitializeCriticalSectionr
; void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp_LeaveCriticalSection:dword ; DATA XREF: LeaveCriticalSectionr
; HMODULE __stdcall LoadLibraryA(LPCSTR	lpLibFileName)
		extrn __imp_LoadLibraryA:dword ; DATA XREF: LoadLibraryAr
; LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)
		extrn __imp_TlsGetValue:dword ;	DATA XREF: TlsGetValuer
; BOOL __stdcall VirtualProtect(LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect)
		extrn __imp_VirtualProtect:dword ; DATA	XREF: VirtualProtectr
; SIZE_T __stdcall VirtualQuery(LPCVOID	lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, SIZE_T dwLength)
		extrn __imp_VirtualQuery:dword ; DATA XREF: VirtualQueryr

;
; Imports from msvcrt.dll
;
		extrn __imp___dllonexit:dword ;	DATA XREF: __dllonexitr
; int *__cdecl _errno()
		extrn __imp__errno:dword ; DATA	XREF: _errnor
		extrn _iob:dword	; DATA XREF: sub_6D4C6B80+9r
		extrn _winmajor:dword	; DATA XREF: TlsCallback_0+7r
; void __cdecl abort()
		extrn __imp_abort:dword	; DATA XREF: abortr
		extrn __imp_atan2:dword	; DATA XREF: atan2r
; void *__cdecl	calloc(size_t NumOfElements, size_t SizeOfElements)
		extrn __imp_calloc:dword ; DATA	XREF: callocr
		extrn __imp_ceil:dword	; DATA XREF: ceilr
		extrn __imp_cos:dword	; DATA XREF: cosr
; int __cdecl fflush(FILE *File)
		extrn __imp_fflush:dword ; DATA	XREF: fflushr
; void __cdecl free(void *Memory)
		extrn __imp_free:dword	; DATA XREF: freer
; size_t __cdecl fwrite(const void *Str, size_t	Size, size_t Count, FILE *File)
		extrn __imp_fwrite:dword ; DATA	XREF: fwriter
; void *__cdecl	malloc(size_t Size)
		extrn __imp_malloc:dword ; DATA	XREF: mallocr
; int __cdecl memcmp(const void	*Buf1, const void *Buf2, size_t	Size)
		extrn __imp_memcmp:dword ; DATA	XREF: memcmpr
; void *__cdecl	memcpy(void *Dst, const	void *Src, size_t Size)
		extrn __imp_memcpy:dword ; DATA	XREF: memcpyr
		extrn __imp_sqrt:dword	; DATA XREF: sqrtr
		extrn __imp_tan:dword	; DATA XREF: tanr
; int __cdecl vfprintf(FILE *File, const char *Format, va_list ArgList)
		extrn __imp_vfprintf:dword ; DATA XREF:	vfprintfr


; Section 8. (virtual address 00010000)
; Virtual size			: 00000018 (	 24.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 0000A000
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_CRT		segment	dword public 'DATA' use32
		assume cs:_CRT
		;org 6D4D0000h
		dd 0
TlsCallbacks	dd offset TlsCallback_0	; DATA XREF: .tls:TlsCallbacks_ptro
		dd offset TlsCallback_1
		dd 0
		dd 0
dword_6D4D0014	dd 7Bh dup(0)		; DATA XREF: TlsCallback_0:loc_6D4C6B36o
					; TlsCallback_0+13Bo ...
		align 1000h
_CRT		ends

; Section 9. (virtual address 00011000)
; Virtual size			: 00000020 (	 32.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 0000A200
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_tls		segment	dword public 'DATA' use32
		assume cs:_tls
		;org 6D4D1000h
TlsDirectory	dd offset TlsStart
TlsEnd_ptr	dd offset TlsEnd
TlsIndex_ptr	dd offset TlsIndex
TlsCallbacks_ptr dd offset TlsCallbacks
TlsSizeOfZeroFill dd 0
TlsCharacteristics dd 0
		db 0
TlsStart	db 3 dup(0)		; DATA XREF: .tls:TlsDirectoryo
TlsEnd		dd 79h dup(0)		; DATA XREF: .tls:TlsEnd_ptro
		align 1000h
_tls		ends


		end DllEntryPoint

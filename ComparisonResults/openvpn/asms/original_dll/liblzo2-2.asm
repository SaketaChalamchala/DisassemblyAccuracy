;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	B20A6124ADDA97CD0198D3B8CD4BFB9F
; Input	CRC32 :	AA874EE5

; File Name   :	C:\compspace\compare\openvpn\dlls\original\liblzo2-2.dll
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	6CB80000
; Section 1. (virtual address 00001000)
; Virtual size			: 00024D14 ( 150804.)
; Section size in file		: 00024E00 ( 151040.)
; Offset to raw	data for section: 00000400
; Flags	60700060: Text Data Executable Readable
; Alignment	: 64 bytes

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
; Segment alignment '64byte' can not be represented in assembly
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6CB81000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


sub_6CB81000	proc near		; DATA XREF: .CRT:6CBAB00Co

Size		= dword	ptr -1Ch

		push	ebx
		sub	esp, 18h
		mov	[esp+1Ch+Size],	80h ; Size
		call	_malloc
		mov	[esp+1Ch+Size],	eax
		mov	ebx, eax
		call	sub_6CBA4F10
		test	ebx, ebx
		mov	ds:dword_6CBA83A8, eax
		mov	ds:dword_6CBA83A4, eax
		jz	short loc_6CB81035
		mov	dword ptr [ebx], 0
		add	esp, 18h
		xor	eax, eax
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6CB81035:				; CODE XREF: sub_6CB81000+26j
		add	esp, 18h
		mov	eax, 1
		pop	ebx
		retn
sub_6CB81000	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB81040	proc near		; CODE XREF: sub_6CB81260+7Dp
					; sub_6CB81260+104p ...

dwMilliseconds	= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	edx, [ebp+arg_4]
		test	edx, edx
		jnz	short loc_6CB810B8
		mov	eax, ds:dword_6CBA8000
		test	eax, eax
		jle	loc_6CB81163
		sub	eax, 1
		xor	ebx, ebx
		mov	esi, ds:__imp__Sleep@4 ; Sleep(x)
		mov	ds:dword_6CBA8000, eax
		jmp	short loc_6CB8107C
; ---------------------------------------------------------------------------
		align 10h

loc_6CB81070:				; CODE XREF: sub_6CB81040+4Dj
		mov	[esp+28h+dwMilliseconds], 3E8h ; dwMilliseconds
		call	esi ; Sleep(x)	; Sleep(x)
		sub	esp, 4

loc_6CB8107C:				; CODE XREF: sub_6CB81040+2Dj
		mov	edx, 1
		mov	eax, ebx
		lock cmpxchg ds:dword_6CBA83AC,	edx
		test	eax, eax
		jnz	short loc_6CB81070
		mov	eax, ds:dword_6CBA83B0
		cmp	eax, 2
		jz	loc_6CB81170
		mov	[esp+28h+dwMilliseconds], 1Fh
		call	__amsg_exit
		mov	eax, 1

loc_6CB810AE:				; CODE XREF: sub_6CB81040+80j
					; sub_6CB81040+125j
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6CB810B8:				; CODE XREF: sub_6CB81040+Ej
		cmp	edx, 1
		mov	eax, 1
		jnz	short loc_6CB810AE
		mov	eax, large fs:18h
		xor	esi, esi
		mov	ebx, [eax+4]
		mov	edi, ds:__imp__Sleep@4 ; Sleep(x)
		jmp	short loc_6CB810E9
; ---------------------------------------------------------------------------

loc_6CB810D5:				; CODE XREF: sub_6CB81040+B5j
		cmp	eax, ebx
		jz	loc_6CB811E5
		mov	[esp+28h+dwMilliseconds], 3E8h ; dwMilliseconds
		call	edi ; Sleep(x)	; Sleep(x)
		sub	esp, 4

loc_6CB810E9:				; CODE XREF: sub_6CB81040+93j
		mov	eax, esi
		lock cmpxchg ds:dword_6CBA83AC,	ebx
		test	eax, eax
		jnz	short loc_6CB810D5
		xor	ebx, ebx

loc_6CB810F9:				; CODE XREF: sub_6CB81040+1AAj
		mov	eax, ds:dword_6CBA83B0
		cmp	eax, 1
		jz	loc_6CB81223
		mov	eax, ds:dword_6CBA83B0
		test	eax, eax
		jz	loc_6CB81200

loc_6CB81114:				; CODE XREF: sub_6CB81040+1DEj
					; sub_6CB81040+1EFj
		mov	eax, ds:dword_6CBA83B0
		cmp	eax, 1
		jz	loc_6CB81234

loc_6CB81122:				; CODE XREF: sub_6CB81040+212j
		test	ebx, ebx
		jz	loc_6CB811F0

loc_6CB8112A:				; CODE XREF: sub_6CB81040+1B6j
		mov	eax, ds:off_6CBA77D8
		test	eax, eax
		jz	short loc_6CB8114D
		mov	edx, [ebp+arg_8]
		mov	[esp+28h+var_24], 2
		mov	[esp+28h+var_20], edx
		mov	edx, [ebp+arg_0]
		mov	[esp+28h+dwMilliseconds], edx
		call	eax ; TlsCallback_0
		sub	esp, 0Ch

loc_6CB8114D:				; CODE XREF: sub_6CB81040+F1j
		add	ds:dword_6CBA8000, 1
		mov	eax, 1
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6CB81163:				; CODE XREF: sub_6CB81040+17j
		xor	eax, eax
		jmp	loc_6CB810AE
; ---------------------------------------------------------------------------
		align 10h

loc_6CB81170:				; CODE XREF: sub_6CB81040+57j
		mov	eax, ds:dword_6CBA83A8
		mov	[esp+28h+dwMilliseconds], eax
		call	sub_6CBA4F00
		test	eax, eax
		mov	esi, eax
		jz	short loc_6CB811C4
		mov	eax, ds:dword_6CBA83A4
		mov	[esp+28h+dwMilliseconds], eax
		call	sub_6CBA4F00
		mov	ebx, eax

loc_6CB81192:				; CODE XREF: sub_6CB81040+15Dj
		sub	ebx, 4
		cmp	esi, ebx
		ja	short loc_6CB811A8

loc_6CB81199:				; CODE XREF: sub_6CB81040+166j
		mov	edx, [ebx]
		test	edx, edx
		jz	short loc_6CB81192
		sub	ebx, 4
		call	edx
		cmp	esi, ebx
		jbe	short loc_6CB81199

loc_6CB811A8:				; CODE XREF: sub_6CB81040+157j
		mov	[esp+28h+dwMilliseconds], esi ;	Memory
		call	_free
		mov	ds:dword_6CBA83A4, 0
		mov	ds:dword_6CBA83A8, 0

loc_6CB811C4:				; CODE XREF: sub_6CB81040+141j
		xor	eax, eax
		mov	ds:dword_6CBA83B0, 0
		xchg	eax, ds:dword_6CBA83AC
		mov	eax, 1
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6CB811E5:				; CODE XREF: sub_6CB81040+97j
		mov	ebx, 1
		jmp	loc_6CB810F9
; ---------------------------------------------------------------------------
		align 10h

loc_6CB811F0:				; CODE XREF: sub_6CB81040+E4j
		xchg	ebx, ds:dword_6CBA83AC
		jmp	loc_6CB8112A
; ---------------------------------------------------------------------------
		align 10h

loc_6CB81200:				; CODE XREF: sub_6CB81040+CEj
		mov	[esp+28h+var_24], offset dword_6CBAB010
		mov	[esp+28h+dwMilliseconds], offset dword_6CBAB008
		mov	ds:dword_6CBA83B0, 1
		call	__initterm
		jmp	loc_6CB81114
; ---------------------------------------------------------------------------

loc_6CB81223:				; CODE XREF: sub_6CB81040+C1j
		mov	[esp+28h+dwMilliseconds], 1Fh
		call	__amsg_exit
		jmp	loc_6CB81114
; ---------------------------------------------------------------------------

loc_6CB81234:				; CODE XREF: sub_6CB81040+DCj
		mov	[esp+28h+var_24], offset dword_6CBAB004
		mov	[esp+28h+dwMilliseconds], offset dword_6CBAB000
		call	__initterm
		mov	ds:dword_6CBA83B0, 2
		jmp	loc_6CB81122
sub_6CB81040	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB81260	proc near		; CODE XREF: DllEntryPoint+1Ep

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		mov	edi, ecx
		push	esi
		mov	esi, eax
		push	ebx
		mov	ebx, edx
		sub	esp, 1Ch
		test	edx, edx
		mov	dword_6CBA6004,	edx
		jnz	short loc_6CB812C5
		mov	eax, ds:dword_6CBA8000
		test	eax, eax
		jz	short loc_6CB812F0
		call	sub_6CBA51C0
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], 0
		mov	[esp+28h+var_28], esi
		call	sub_6CBA5C30
		sub	esp, 0Ch
		mov	edx, eax

loc_6CB812A0:				; CODE XREF: sub_6CB81260+BCj
					; sub_6CB81260+C1j ...
		cmp	ebx, 3
		jz	loc_6CB81377

loc_6CB812A9:				; CODE XREF: sub_6CB81260+111j
		test	ebx, ebx
		jz	loc_6CB81377

loc_6CB812B1:				; CODE XREF: sub_6CB81260+92j
					; sub_6CB81260+14Dj ...
		mov	dword_6CBA6004,	0FFFFFFFFh
		lea	esp, [ebp-0Ch]
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6CB812C5:				; CODE XREF: sub_6CB81260+17j
		call	sub_6CBA51C0
		lea	eax, [ebx-1]
		cmp	eax, 1
		ja	short loc_6CB81305
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], ebx
		mov	[esp+28h+var_28], esi
		call	sub_6CB81040
		sub	esp, 0Ch
		test	eax, eax
		jnz	loc_6CB813B2
		lea	esi, [esi+0]

loc_6CB812F0:				; CODE XREF: sub_6CB81260+20j
					; sub_6CB81260+170j
		xor	edx, edx
		jmp	short loc_6CB812B1
; ---------------------------------------------------------------------------

loc_6CB812F4:				; CODE XREF: sub_6CB81260+167j
		cmp	ebx, 1
		jnz	loc_6CB813F8
		lea	esi, [esi+0]
		call	sub_6CBA5510

loc_6CB81305:				; CODE XREF: sub_6CB81260+70j
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], ebx
		mov	[esp+28h+var_28], esi
		call	sub_6CBA5C30
		sub	esp, 0Ch
		test	eax, eax
		mov	edx, eax
		jnz	short loc_6CB812A0
		cmp	ebx, 1
		jnz	loc_6CB812A0
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], 0
		mov	[esp+28h+var_28], esi
		call	sub_6CBA5C30
		sub	esp, 0Ch
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], 0
		mov	[esp+28h+var_28], esi
		call	sub_6CBA5C40
		sub	esp, 0Ch
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], 0
		mov	[esp+28h+var_28], esi
		call	sub_6CB81040
		xor	edx, edx
		sub	esp, 0Ch
		cmp	ebx, 3
		jnz	loc_6CB812A9

loc_6CB81377:				; CODE XREF: sub_6CB81260+43j
					; sub_6CB81260+4Bj
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], ebx
		mov	[esp+28h+var_28], esi
		call	sub_6CBA5C40
		sub	esp, 0Ch
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], ebx
		mov	[esp+28h+var_28], esi
		mov	[ebp+var_1C], eax
		call	sub_6CB81040
		mov	edx, [ebp+var_1C]
		sub	esp, 0Ch
		test	eax, eax
		mov	eax, 0
		cmovz	edx, eax
		jmp	loc_6CB812B1
; ---------------------------------------------------------------------------

loc_6CB813B2:				; CODE XREF: sub_6CB81260+87j
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], ebx
		mov	[esp+28h+var_28], esi
		call	sub_6CBA5C40
		sub	esp, 0Ch
		test	eax, eax
		jnz	loc_6CB812F4
		cmp	ebx, 1
		jnz	loc_6CB812F0
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], 0
		mov	[esp+28h+var_28], esi
		mov	[ebp+var_1C], eax
		call	sub_6CB81040
		mov	edx, [ebp+var_1C]
		sub	esp, 0Ch
		jmp	loc_6CB812B1
; ---------------------------------------------------------------------------

loc_6CB813F8:				; CODE XREF: sub_6CB81260+97j
		mov	[esp+28h+var_20], edi
		mov	[esp+28h+var_24], 2
		mov	[esp+28h+var_28], esi
		call	sub_6CBA5C30
		sub	esp, 0Ch
		mov	edx, eax
		jmp	loc_6CB812A0
sub_6CB81260	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; BOOL __stdcall DllEntryPoint(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)
		public DllEntryPoint
DllEntryPoint	proc near

var_10		= dword	ptr -10h
hinstDLL	= dword	ptr  4
fdwReason	= dword	ptr  8
lpReserved	= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	edx, [esp+1Ch+fdwReason]
		mov	ds:dword_6CBA8014, 0
		cmp	edx, 1
		jz	short loc_6CB81450

loc_6CB81436:				; CODE XREF: DllEntryPoint+3Dj
		mov	ecx, [esp+1Ch+lpReserved]
		mov	eax, [esp+1Ch+hinstDLL]
		call	sub_6CB81260
		add	esp, 1Ch
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_6CB81450:				; CODE XREF: DllEntryPoint+14j
		mov	[esp+1Ch+var_10], edx
		call	sub_6CBA5530
		mov	edx, [esp+1Ch+var_10]
		jmp	short loc_6CB81436
DllEntryPoint	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CB81460	proc near		; CODE XREF: sub_6CBA5CE0+6p

lpModuleName	= dword	ptr -1Ch
lpProcName	= dword	ptr -18h

		mov	eax, dword_6CBA6018
		test	eax, eax
		jz	short locret_6CB814AC
		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+1Ch+lpModuleName],	offset ModuleName ; "libgcj-13.dll"
		call	ds:__imp__GetModuleHandleA@4 ; GetModuleHandleA(x)
		mov	edx, 0
		sub	esp, 4
		test	eax, eax
		jz	short loc_6CB8149E
		mov	[esp+1Ch+lpProcName], offset ProcName ;	"_Jv_RegisterClasses"
		mov	[esp+1Ch+lpModuleName],	eax ; hModule
		call	ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
		sub	esp, 8
		mov	edx, eax

loc_6CB8149E:				; CODE XREF: sub_6CB81460+26j
		test	edx, edx
		jz	short locret_6CB814AB
		mov	[esp+1Ch+lpModuleName],	offset dword_6CBA6018
		call	edx

locret_6CB814AB:			; CODE XREF: sub_6CB81460+40j
		leave

locret_6CB814AC:			; CODE XREF: sub_6CB81460+7j
		rep retn
sub_6CB81460	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB814B0()
sub_6CB814B0	proc near		; DATA XREF: sub_6CBA5CE0+Bo
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_6CB814B0	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  35. lzo1_info

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1_info
lzo1_info	proc near

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		cmp	[ebp+arg_0], 0
		jz	short loc_6CB814DC
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 5

loc_6CB814DC:				; CODE XREF: lzo1_info+7j
		cmp	[ebp+arg_4], 0
		jz	short loc_6CB814EB
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 1

loc_6CB814EB:				; CODE XREF: lzo1_info+16j
		mov	eax, 8000h
		pop	ebp
		retn
lzo1_info	endp

; Exported entry  34. lzo1_decompress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1_decompress
lzo1_decompress	proc near

Dst		= dword	ptr -38h
Src		= dword	ptr -34h
Size		= dword	ptr -30h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_10], eax
		jmp	loc_6CB81677
; ---------------------------------------------------------------------------

loc_6CB81514:				; CODE XREF: lzo1_decompress+18Bj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 1Fh
		ja	loc_6CB815D5
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB815AF
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0F7h
		jbe	short loc_6CB815AB
		sub	[ebp+var_14], 0F8h
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB81567
		mov	[ebp+var_14], 118h
		jmp	short loc_6CB81581
; ---------------------------------------------------------------------------

loc_6CB81567:				; CODE XREF: lzo1_decompress+6Aj
		mov	[ebp+var_18], 100h

loc_6CB8156E:				; CODE XREF: lzo1_decompress+87j
		shl	[ebp+var_18], 1
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB8156E
		mov	eax, [ebp+var_18]
		mov	[ebp+var_14], eax

loc_6CB81581:				; CODE XREF: lzo1_decompress+73j
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax
		jmp	loc_6CB81677
; ---------------------------------------------------------------------------

loc_6CB815AB:				; CODE XREF: lzo1_decompress+5Dj
		add	[ebp+var_14], 20h

loc_6CB815AF:				; CODE XREF: lzo1_decompress+42j
					; lzo1_decompress+DCj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB815AF
		jmp	loc_6CB81677
; ---------------------------------------------------------------------------

loc_6CB815D5:				; CODE XREF: lzo1_decompress+38j
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_14]
		and	eax, 1Fh
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, ecx
		neg	eax
		add	[ebp+var_20], eax
		cmp	[ebp+var_14], 0DFh
		jbe	short loc_6CB8161F
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	eax, 7
		mov	[ebp+var_1C], eax
		jmp	short loc_6CB81628
; ---------------------------------------------------------------------------

loc_6CB8161F:				; CODE XREF: lzo1_decompress+114j
		mov	eax, [ebp+var_14]
		shr	eax, 5
		mov	[ebp+var_1C], eax

loc_6CB81628:				; CODE XREF: lzo1_decompress+12Bj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_20]
		lea	ecx, [edx+1]
		mov	[ebp+var_20], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_20]
		lea	ecx, [edx+1]
		mov	[ebp+var_20], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB81656:				; CODE XREF: lzo1_decompress+183j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_20]
		lea	ecx, [edx+1]
		mov	[ebp+var_20], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_1C], 1
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CB81656

loc_6CB81677:				; CODE XREF: lzo1_decompress+1Dj
					; lzo1_decompress+B4j ...
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_24]
		jb	loc_6CB81514
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_24]
		jz	short loc_6CB816B2
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_24]
		jnb	short loc_6CB816AB
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CB816B7
; ---------------------------------------------------------------------------

loc_6CB816AB:				; CODE XREF: lzo1_decompress+1B0j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB816B7
; ---------------------------------------------------------------------------

loc_6CB816B2:				; CODE XREF: lzo1_decompress+1A8j
		mov	eax, 0

locret_6CB816B7:			; CODE XREF: lzo1_decompress+1B7j
					; lzo1_decompress+1BEj
		leave
		retn
lzo1_decompress	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB816B9(void	*, void	*, int)
sub_6CB816B9	proc near		; CODE XREF: sub_6CB81842+2BEp
					; sub_6CB81842+4FEp ...

Dst		= dword	ptr -28h
Src		= dword	ptr -24h
Size		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		cmp	[ebp+arg_8], 1FFh
		jbe	loc_6CB81770
		mov	[ebp+var_C], 7
		jmp	short loc_6CB8174B
; ---------------------------------------------------------------------------

loc_6CB816D5:				; CODE XREF: sub_6CB816B9+B1j
		jmp	short loc_6CB8174B
; ---------------------------------------------------------------------------

loc_6CB816D7:				; CODE XREF: sub_6CB816B9+A3j
		mov	eax, [ebp+var_C]
		mov	edx, 100h
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		sub	[ebp+arg_8], eax
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	edx, [ebp+var_C]
		sub	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	edx, 100h
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		mov	[esp+28h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+Src], eax ; Src
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_C]
		mov	edx, 100h
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		add	[ebp+arg_0], eax
		mov	eax, [ebp+var_C]
		mov	edx, 100h
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		add	[ebp+arg_4], eax

loc_6CB8174B:				; CODE XREF: sub_6CB816B9+1Aj
					; sub_6CB816B9:loc_6CB816D5j
		mov	eax, [ebp+var_C]
		mov	edx, 100h
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		cmp	eax, [ebp+arg_8]
		jbe	loc_6CB816D7
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	loc_6CB816D5

loc_6CB81770:				; CODE XREF: sub_6CB816B9+Dj
		jmp	short loc_6CB817B9
; ---------------------------------------------------------------------------

loc_6CB81772:				; CODE XREF: sub_6CB816B9+107j
		sub	[ebp+arg_8], 118h
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	byte ptr [eax],	0F8h
		mov	[esp+28h+Size],	118h ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+Src], eax ; Src
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax ; Dst
		call	_memcpy
		add	[ebp+arg_0], 118h
		add	[ebp+arg_4], 118h

loc_6CB817B9:				; CODE XREF: sub_6CB816B9:loc_6CB81770j
		cmp	[ebp+arg_8], 117h
		ja	short loc_6CB81772
		cmp	[ebp+arg_8], 1Fh
		jbe	short loc_6CB81808
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB817E5:				; CODE XREF: sub_6CB816B9+14Bj
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	edx, [ebp+arg_4]
		lea	ecx, [edx+1]
		mov	[ebp+arg_4], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CB817E5
		jmp	short loc_6CB8183D
; ---------------------------------------------------------------------------

loc_6CB81808:				; CODE XREF: sub_6CB816B9+10Dj
		cmp	[ebp+arg_8], 0
		jz	short loc_6CB8183D
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl

loc_6CB8181C:				; CODE XREF: sub_6CB816B9+182j
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	edx, [ebp+arg_4]
		lea	ecx, [edx+1]
		mov	[ebp+arg_4], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CB8181C

loc_6CB8183D:				; CODE XREF: sub_6CB816B9+14Dj
					; sub_6CB816B9+153j
		mov	eax, [ebp+arg_0]
		leave
		retn
sub_6CB816B9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB81842(int,	int, int, int, void *)
sub_6CB81842	proc near		; CODE XREF: lzo1_compress+71p

Dst		= dword	ptr -58h
Val		= dword	ptr -54h
Size		= dword	ptr -50h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-0Ch]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-3]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_34], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_18], eax
		cmp	[ebp+arg_4], 0Dh
		ja	short loc_6CB81887
		jmp	loc_6CB81D11
; ---------------------------------------------------------------------------

loc_6CB81887:				; CODE XREF: sub_6CB81842+3Ej
		mov	[esp+58h+Size],	8000h ;	Size
		mov	[esp+58h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_38], eax

loc_6CB81925:				; CODE XREF: sub_6CB81842+4C9j
		mov	[ebp+var_1C], 0
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 1FFFh
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	loc_6CB81A5C
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 2000h
		ja	loc_6CB81A5C
		mov	eax, [ebp+var_14]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB819E6
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB819E6
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB819E6
		jmp	loc_6CB81A86
; ---------------------------------------------------------------------------

loc_6CB819E6:				; CODE XREF: sub_6CB81842+171j
					; sub_6CB81842+187j ...
		xor	[ebp+var_20], 1FFFh
		mov	eax, [ebp+var_20]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	short loc_6CB81A5C
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 2000h
		ja	short loc_6CB81A5C
		mov	eax, [ebp+var_14]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB81A5B
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB81A5B
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB81A5B
		jmp	short loc_6CB81A86
; ---------------------------------------------------------------------------

loc_6CB81A5B:				; CODE XREF: sub_6CB81842+1E9j
					; sub_6CB81842+1FFj ...
		nop

loc_6CB81A5C:				; CODE XREF: sub_6CB81842+143j
					; sub_6CB81842+15Dj ...
		mov	eax, [ebp+var_20]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_2C]
		jb	short loc_6CB81A81
		jmp	loc_6CB81D11
; ---------------------------------------------------------------------------

loc_6CB81A81:				; CODE XREF: sub_6CB81842+238j
		jmp	loc_6CB81D05
; ---------------------------------------------------------------------------

loc_6CB81A86:				; CODE XREF: sub_6CB81842+19Fj
					; sub_6CB81842+217j
		mov	eax, [ebp+var_20]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_14], 3
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		cmp	edx, eax
		jz	short loc_6CB81B08
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 1Fh
		ja	short loc_6CB81AEC
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		mov	[eax], dl

loc_6CB81AC9:				; CODE XREF: sub_6CB81842+2A6j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_24], 1
		cmp	[ebp+var_24], 0
		jnz	short loc_6CB81AC9
		jmp	short loc_6CB81B08
; ---------------------------------------------------------------------------

loc_6CB81AEC:				; CODE XREF: sub_6CB81842+277j
		mov	eax, [ebp+var_24]
		mov	[esp+58h+Size],	eax ; int
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Val], eax ; void *
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Dst], eax ; void *
		call	sub_6CB816B9
		mov	[ebp+var_10], eax

loc_6CB81B08:				; CODE XREF: sub_6CB81842+264j
					; sub_6CB81842+2A8j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_18], eax
		add	[ebp+var_C], 3
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB81BC2
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB81BC2
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB81BC2
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB81BC2
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB81BC2
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	loc_6CB81C43

loc_6CB81BC2:				; CODE XREF: sub_6CB81842+2EAj
					; sub_6CB81842+30Aj ...
		sub	[ebp+var_C], 1
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		sub	[ebp+var_1C], 1
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_40]
		sub	edx, 2
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_1C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_1C]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_38], eax
		jmp	loc_6CB81D05
; ---------------------------------------------------------------------------

loc_6CB81C43:				; CODE XREF: sub_6CB81842+37Aj
		mov	edx, [ebp+var_30]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 0FFh
		ja	short loc_6CB81C5C
		mov	eax, [ebp+var_30]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB81C71
; ---------------------------------------------------------------------------

loc_6CB81C5C:				; CODE XREF: sub_6CB81842+410j
		mov	eax, [ebp+var_C]
		add	eax, 0FFh
		mov	[ebp+var_28], eax
		jmp	short loc_6CB81C71
; ---------------------------------------------------------------------------

loc_6CB81C69:				; CODE XREF: sub_6CB81842+445j
		add	[ebp+var_14], 1
		add	[ebp+var_C], 1

loc_6CB81C71:				; CODE XREF: sub_6CB81842+418j
					; sub_6CB81842+425j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_28]
		jnb	short loc_6CB81C89
		mov	eax, [ebp+var_14]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB81C69

loc_6CB81C89:				; CODE XREF: sub_6CB81842+435j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		sub	[ebp+var_1C], 1
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_1C]
		or	edx, 0FFFFFFE0h
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_1C]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_3C]
		sub	edx, 9
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_38], eax

loc_6CB81D05:				; CODE XREF: sub_6CB81842:loc_6CB81A81j
					; sub_6CB81842+3FCj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_2C]
		jb	loc_6CB81925

loc_6CB81D11:				; CODE XREF: sub_6CB81842+40j
					; sub_6CB81842+23Aj
		mov	eax, [ebp+var_30]
		add	eax, 3
		mov	edx, eax
		mov	eax, [ebp+var_18]
		cmp	edx, eax
		jz	short loc_6CB81D48
		mov	eax, [ebp+var_30]
		add	eax, 3
		mov	edx, eax
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[esp+58h+Size],	eax ; int
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Val], eax ; void *
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Dst], eax ; void *
		call	sub_6CB816B9
		mov	[ebp+var_10], eax

loc_6CB81D48:				; CODE XREF: sub_6CB81842+4DCj
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB81842	endp

; Exported entry  33. lzo1_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1_compress(void *, int, void *, int, void *)
		public lzo1_compress
lzo1_compress	proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	[ebp+var_C], 0
		cmp	[ebp+arg_4], 0
		jnz	short loc_6CB81D7E
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		jmp	short loc_6CB81DD9
; ---------------------------------------------------------------------------

loc_6CB81D7E:				; CODE XREF: lzo1_compress+11j
		cmp	[ebp+arg_4], 0Dh
		ja	short loc_6CB81DAF
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_30], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_34], eax ;	void *
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_38], eax ;	void *
		call	sub_6CB816B9
		mov	edx, eax
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		jmp	short loc_6CB81DD9
; ---------------------------------------------------------------------------

loc_6CB81DAF:				; CODE XREF: lzo1_compress+22j
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax ;	void *
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax ;	int
		call	sub_6CB81842
		mov	[ebp+var_C], eax

loc_6CB81DD9:				; CODE XREF: lzo1_compress+1Cj
					; lzo1_compress+4Dj
		mov	eax, [ebp+var_C]
		leave
		retn
lzo1_compress	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB81DEA	proc near		; CODE XREF: lzo1_99_compress+30p

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		cmp	[ebp+arg_4], 0
		jnz	short loc_6CB81E08
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	[ebp+var_C], 0
		jmp	short loc_6CB81E7C
; ---------------------------------------------------------------------------

loc_6CB81E08:				; CODE XREF: sub_6CB81DEA+Aj
		cmp	[ebp+arg_4], 0Ah
		ja	short loc_6CB81E52
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_38], eax
		call	_lzo1b_store_run
		mov	edx, eax
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_4]
		jbe	short loc_6CB81E48
		mov	eax, 0
		jmp	short loc_6CB81E4D
; ---------------------------------------------------------------------------

loc_6CB81E48:				; CODE XREF: sub_6CB81DEA+55j
		mov	eax, 0FFFFFFFFh

loc_6CB81E4D:				; CODE XREF: sub_6CB81DEA+5Cj
		mov	[ebp+var_C], eax
		jmp	short loc_6CB81E7C
; ---------------------------------------------------------------------------

loc_6CB81E52:				; CODE XREF: sub_6CB81DEA+22j
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax
		mov	eax, [ebp+arg_14]
		call	eax
		mov	[ebp+var_C], eax

loc_6CB81E7C:				; CODE XREF: sub_6CB81DEA+1Cj
					; sub_6CB81DEA+66j
		mov	eax, [ebp+var_C]
		leave
		retn
sub_6CB81DEA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB81E81(int,	int, int, int, void *)
sub_6CB81E81	proc near		; DATA XREF: lzo1_99_compress+6o

Dst		= dword	ptr -68h
Val		= dword	ptr -64h
Size		= dword	ptr -60h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_44], eax
		mov	[esp+68h+Size],	40000h ; Size
		mov	[esp+68h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+68h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	ecx, ax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 7
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB81F6D:				; CODE XREF: sub_6CB81E81+651j
					; sub_6CB81E81:loc_6CB824D7j
		mov	[ebp+var_24], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	eax, edx
		mov	[ebp+var_2C], eax
		mov	[ebp+var_30], 8
		mov	[ebp+var_48], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_28], 0

loc_6CB81FB0:				; CODE XREF: sub_6CB81E81+301j
		mov	eax, [ebp+var_2C]
		mov	eax, [eax]
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_6CB81FD4
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_20]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_48], eax
		cmp	[ebp+var_48], 2000h
		jbe	short loc_6CB81FE1

loc_6CB81FD4:				; CODE XREF: sub_6CB81E81+13Bj
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_C]
		mov	[eax], edx
		jmp	loc_6CB82176
; ---------------------------------------------------------------------------

loc_6CB81FE1:				; CODE XREF: sub_6CB81E81+151j
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+var_20]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_28]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB82176
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB82170
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB82170
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB82170
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8210B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8210B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8210B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8210B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8210B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB8214D

loc_6CB8210B:				; CODE XREF: sub_6CB81E81+1F8j
					; sub_6CB81E81+218j ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_50]
		cmp	eax, [ebp+var_28]
		jbe	short loc_6CB82133
		mov	eax, [ebp+var_50]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_24], eax
		jmp	short loc_6CB8214B
; ---------------------------------------------------------------------------

loc_6CB82133:				; CODE XREF: sub_6CB81E81+2A2j
		mov	eax, [ebp+var_50]
		cmp	eax, [ebp+var_28]
		jnz	short loc_6CB8214B
		mov	eax, [ebp+var_48]
		cmp	eax, [ebp+var_24]
		jnb	short loc_6CB8214B
		mov	eax, [ebp+var_48]
		mov	[ebp+var_24], eax
		jmp	short loc_6CB82168
; ---------------------------------------------------------------------------

loc_6CB8214B:				; CODE XREF: sub_6CB81E81+2B0j
					; sub_6CB81E81+2B8j ...
		jmp	short loc_6CB82168
; ---------------------------------------------------------------------------

loc_6CB8214D:				; CODE XREF: sub_6CB81E81+288j
		cmp	[ebp+var_28], 8
		jbe	short loc_6CB8215B
		mov	eax, [ebp+var_48]
		cmp	eax, [ebp+var_24]
		jnb	short loc_6CB82168

loc_6CB8215B:				; CODE XREF: sub_6CB81E81+2D0j
		mov	[ebp+var_28], 9
		mov	eax, [ebp+var_48]
		mov	[ebp+var_24], eax

loc_6CB82168:				; CODE XREF: sub_6CB81E81+2C8j
					; sub_6CB81E81:loc_6CB8214Bj ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB82176
; ---------------------------------------------------------------------------

loc_6CB82170:				; CODE XREF: sub_6CB81E81+198j
					; sub_6CB81E81+1B8j ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax

loc_6CB82176:				; CODE XREF: sub_6CB81E81+15Bj
					; sub_6CB81E81+178j ...
		add	[ebp+var_2C], 4
		sub	[ebp+var_30], 1
		cmp	[ebp+var_30], 0
		jnz	loc_6CB81FB0
		sub	[ebp+var_2C], 20h
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_2C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 7
		cmp	[ebp+var_28], 3
		jbe	short loc_6CB821B2
		jmp	short loc_6CB821FC
; ---------------------------------------------------------------------------

loc_6CB821B2:				; CODE XREF: sub_6CB81E81+32Dj
		cmp	[ebp+var_28], 3
		jnz	short loc_6CB821BA
		jmp	short loc_6CB821FC
; ---------------------------------------------------------------------------

loc_6CB821BA:				; CODE XREF: sub_6CB81E81+335j
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB821CC
		jmp	loc_6CB824DC
; ---------------------------------------------------------------------------

loc_6CB821CC:				; CODE XREF: sub_6CB81E81+344j
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB824D7
; ---------------------------------------------------------------------------

loc_6CB821FC:				; CODE XREF: sub_6CB81E81+32Fj
					; sub_6CB81E81+337j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB822B9
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_34], eax
		cmp	[ebp+var_34], 1Fh
		ja	short loc_6CB8224E
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_34]
		mov	[eax], dl

loc_6CB8222B:				; CODE XREF: sub_6CB81E81+3C9j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	short loc_6CB8222B
		jmp	short loc_6CB822B9
; ---------------------------------------------------------------------------

loc_6CB8224E:				; CODE XREF: sub_6CB81E81+39Aj
		cmp	[ebp+var_34], 117h
		ja	short loc_6CB82297
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_34]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB82274:				; CODE XREF: sub_6CB81E81+412j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	short loc_6CB82274
		jmp	short loc_6CB822B9
; ---------------------------------------------------------------------------

loc_6CB82297:				; CODE XREF: sub_6CB81E81+3D4j
		mov	eax, [ebp+var_34]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB822B9:				; CODE XREF: sub_6CB81E81+383j
					; sub_6CB81E81+3CBj ...
		mov	eax, [ebp+var_28]
		add	[ebp+var_C], eax
		cmp	[ebp+var_28], 8
		ja	loc_6CB8239D
		sub	[ebp+var_24], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		sub	edx, 2
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_24]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_24]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB8230F
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB824DC
; ---------------------------------------------------------------------------

loc_6CB8230F:				; CODE XREF: sub_6CB81E81+481j
		add	[ebp+var_1C], 1

loc_6CB82313:				; CODE XREF: sub_6CB81E81+4EAj
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB82313
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB824D7
; ---------------------------------------------------------------------------

loc_6CB8239D:				; CODE XREF: sub_6CB81E81+442j
		mov	eax, [ebp+var_24]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 0FFh
		ja	short loc_6CB823C5
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_38], eax
		jmp	short loc_6CB823DA
; ---------------------------------------------------------------------------

loc_6CB823C5:				; CODE XREF: sub_6CB81E81+53Aj
		mov	eax, [ebp+var_C]
		add	eax, 0FFh
		mov	[ebp+var_38], eax
		jmp	short loc_6CB823DA
; ---------------------------------------------------------------------------

loc_6CB823D2:				; CODE XREF: sub_6CB81E81+56Fj
		add	[ebp+var_20], 1
		add	[ebp+var_C], 1

loc_6CB823DA:				; CODE XREF: sub_6CB81E81+542j
					; sub_6CB81E81+54Fj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_38]
		jnb	short loc_6CB823F2
		mov	eax, [ebp+var_20]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB823D2

loc_6CB823F2:				; CODE XREF: sub_6CB81E81+55Fj
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_28], eax
		sub	[ebp+var_24], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_24]
		or	edx, 0FFFFFFE0h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_24]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		sub	edx, 9
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB82449
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB824DC
; ---------------------------------------------------------------------------

loc_6CB82449:				; CODE XREF: sub_6CB81E81+5BBj
		add	[ebp+var_1C], 1

loc_6CB8244D:				; CODE XREF: sub_6CB81E81+624j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB8244D
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB81F6D
; ---------------------------------------------------------------------------

loc_6CB824D7:				; CODE XREF: sub_6CB81E81+376j
					; sub_6CB81E81+517j
		jmp	loc_6CB81F6D
; ---------------------------------------------------------------------------

loc_6CB824DC:				; CODE XREF: sub_6CB81E81+346j
					; sub_6CB81E81+489j ...
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8250F
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax

loc_6CB8250F:				; CODE XREF: sub_6CB81E81+663j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB81E81	endp

; Exported entry  32. lzo1_99_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1_99_compress
lzo1_99_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB81E81
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	sub_6CB81DEA
		leave
		retn
lzo1_99_compress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  39. lzo1a_info

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1a_info
lzo1a_info	proc near

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		cmp	[ebp+arg_0], 0
		jz	short loc_6CB8257C
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 5

loc_6CB8257C:				; CODE XREF: lzo1a_info+7j
		cmp	[ebp+arg_4], 0
		jz	short loc_6CB8258B
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax], 1

loc_6CB8258B:				; CODE XREF: lzo1a_info+16j
		mov	eax, 8000h
		pop	ebp
		retn
lzo1a_info	endp

; Exported entry  38. lzo1a_decompress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1a_decompress
lzo1a_decompress proc near

Dst		= dword	ptr -38h
Src		= dword	ptr -34h
Size		= dword	ptr -30h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_10], eax
		jmp	loc_6CB82800
; ---------------------------------------------------------------------------

loc_6CB825B4:				; CODE XREF: lzo1a_decompress+274j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB82647
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0F7h
		jbe	short loc_6CB82641
		sub	[ebp+var_14], 0F8h
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB825FD
		mov	[ebp+var_14], 118h
		jmp	short loc_6CB82617
; ---------------------------------------------------------------------------

loc_6CB825FD:				; CODE XREF: lzo1a_decompress+60j
		mov	[ebp+var_1C], 100h

loc_6CB82604:				; CODE XREF: lzo1a_decompress+7Dj
		shl	[ebp+var_1C], 1
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB82604
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_14], eax

loc_6CB82617:				; CODE XREF: lzo1a_decompress+69j
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax
		jmp	loc_6CB82800
; ---------------------------------------------------------------------------

loc_6CB82641:				; CODE XREF: lzo1a_decompress+53j
		add	[ebp+var_14], 20h
		jmp	short loc_6CB82651
; ---------------------------------------------------------------------------

loc_6CB82647:				; CODE XREF: lzo1a_decompress+38j
		cmp	[ebp+var_14], 1Fh
		ja	loc_6CB82714

loc_6CB82651:				; CODE XREF: lzo1a_decompress+B3j
					; lzo1a_decompress+DEj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB82651
		jmp	loc_6CB82703
; ---------------------------------------------------------------------------

loc_6CB82677:				; CODE XREF: lzo1a_decompress+177j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 1Fh
		jbe	short loc_6CB82694
		jmp	loc_6CB82714
; ---------------------------------------------------------------------------

loc_6CB82694:				; CODE XREF: lzo1a_decompress+FBj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, [ebp+var_14]
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		movzx	edx, byte ptr [edx+1]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		movzx	edx, byte ptr [edx+2]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB82703:				; CODE XREF: lzo1a_decompress+E0j
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_20]
		jb	loc_6CB82677
		jmp	loc_6CB82800
; ---------------------------------------------------------------------------

loc_6CB82714:				; CODE XREF: lzo1a_decompress+B9j
					; lzo1a_decompress+FDj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		and	eax, 1Fh
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, ecx
		neg	eax
		add	[ebp+var_18], eax
		cmp	[ebp+var_14], 0DFh
		ja	short loc_6CB8279C
		shr	[ebp+var_14], 5
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB82779:				; CODE XREF: lzo1a_decompress+206j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB82779
		jmp	short loc_6CB82800
; ---------------------------------------------------------------------------

loc_6CB8279C:				; CODE XREF: lzo1a_decompress+1B3j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	eax, 7
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB827DF:				; CODE XREF: lzo1a_decompress+26Cj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB827DF

loc_6CB82800:				; CODE XREF: lzo1a_decompress+1Dj
					; lzo1a_decompress+AAj	...
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_20]
		jb	loc_6CB825B4
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_20]
		jz	short loc_6CB8283B
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CB82834
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CB82840
; ---------------------------------------------------------------------------

loc_6CB82834:				; CODE XREF: lzo1a_decompress+299j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB82840
; ---------------------------------------------------------------------------

loc_6CB8283B:				; CODE XREF: lzo1a_decompress+291j
		mov	eax, 0

locret_6CB82840:			; CODE XREF: lzo1a_decompress+2A0j
					; lzo1a_decompress+2A7j
		leave
		retn
lzo1a_decompress endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB82842	proc near		; CODE XREF: sub_6CB82A02+3A4p
					; sub_6CB82A02+5E4p ...

Dst		= dword	ptr -38h
Src		= dword	ptr -34h
Size		= dword	ptr -30h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_10], eax
		cmp	[ebp+arg_8], 1FFh
		jbe	loc_6CB82928
		mov	[ebp+var_18], 6
		mov	[ebp+var_1C], 8000h
		jmp	short loc_6CB828B4
; ---------------------------------------------------------------------------

loc_6CB82871:				; CODE XREF: sub_6CB82842+7Ej
		mov	eax, [ebp+var_14]
		sub	[ebp+arg_8], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0FFh
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax

loc_6CB828B4:				; CODE XREF: sub_6CB82842+2Dj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+arg_8]
		jbe	short loc_6CB82871
		shr	[ebp+var_1C], 1

loc_6CB828C5:				; CODE XREF: sub_6CB82842+E4j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+arg_8]
		ja	short loc_6CB8291B
		mov	eax, [ebp+var_14]
		sub	[ebp+arg_8], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		sub	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax

loc_6CB8291B:				; CODE XREF: sub_6CB82842+8Fj
		shr	[ebp+var_1C], 1
		sub	[ebp+var_18], 1
		cmp	[ebp+var_18], 0
		jnz	short loc_6CB828C5

loc_6CB82928:				; CODE XREF: sub_6CB82842+19j
		jmp	short loc_6CB8296D
; ---------------------------------------------------------------------------

loc_6CB8292A:				; CODE XREF: sub_6CB82842+138j
		mov	eax, [ebp+var_14]
		sub	[ebp+arg_8], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0F8h
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax

loc_6CB8296D:				; CODE XREF: sub_6CB82842:loc_6CB82928j
		mov	[ebp+var_14], 118h
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+arg_8]
		jbe	short loc_6CB8292A
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 1Fh
		jbe	short loc_6CB829C8
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_14]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB829A5:				; CODE XREF: sub_6CB82842+182j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB829A5
		jmp	short loc_6CB829FD
; ---------------------------------------------------------------------------

loc_6CB829C8:				; CODE XREF: sub_6CB82842+144j
		cmp	[ebp+var_14], 0
		jz	short loc_6CB829FD
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_14]
		mov	[eax], dl

loc_6CB829DC:				; CODE XREF: sub_6CB82842+1B9j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB829DC

loc_6CB829FD:				; CODE XREF: sub_6CB82842+184j
					; sub_6CB82842+18Aj
		mov	eax, [ebp+var_C]
		leave
		retn
sub_6CB82842	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB82A02(int,	int, int, int, void *)
sub_6CB82A02	proc near		; CODE XREF: lzo1a_compress+71p

Dst		= dword	ptr -58h
Val		= dword	ptr -54h
Size		= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-0Ch]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-3]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_30]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_18], eax
		mov	[esp+58h+Size],	8000h ;	Size
		mov	[esp+58h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+var_3C]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_3C], eax
		mov	eax, [ebp+var_3C]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_3C], eax

loc_6CB82AE0:				; CODE XREF: sub_6CB82A02+5AFj
		mov	[ebp+var_20], 0
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 1FFFh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB82B72
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_6CB82B72
		cmp	[ebp+var_20], 2000h
		jbe	short loc_6CB82B79

loc_6CB82B72:				; CODE XREF: sub_6CB82A02+152j
					; sub_6CB82A02+165j
		mov	eax, 1
		jmp	short loc_6CB82B7E
; ---------------------------------------------------------------------------

loc_6CB82B79:				; CODE XREF: sub_6CB82A02+16Ej
		mov	eax, 0

loc_6CB82B7E:				; CODE XREF: sub_6CB82A02+175j
		test	eax, eax
		jz	short loc_6CB82B87
		jmp	loc_6CB82C6A
; ---------------------------------------------------------------------------

loc_6CB82B87:				; CODE XREF: sub_6CB82A02+17Ej
		mov	eax, [ebp+var_10]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB82BC8
		mov	eax, [ebp+var_10]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB82BC8
		mov	eax, [ebp+var_10]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB82BC8
		jmp	loc_6CB82C94
; ---------------------------------------------------------------------------

loc_6CB82BC8:				; CODE XREF: sub_6CB82A02+193j
					; sub_6CB82A02+1A9j ...
		xor	[ebp+var_24], 1FFFh
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB82C19
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_6CB82C19
		cmp	[ebp+var_20], 2000h
		jbe	short loc_6CB82C20

loc_6CB82C19:				; CODE XREF: sub_6CB82A02+1F9j
					; sub_6CB82A02+20Cj
		mov	eax, 1
		jmp	short loc_6CB82C25
; ---------------------------------------------------------------------------

loc_6CB82C20:				; CODE XREF: sub_6CB82A02+215j
		mov	eax, 0

loc_6CB82C25:				; CODE XREF: sub_6CB82A02+21Cj
		test	eax, eax
		jz	short loc_6CB82C2B
		jmp	short loc_6CB82C6A
; ---------------------------------------------------------------------------

loc_6CB82C2B:				; CODE XREF: sub_6CB82A02+225j
		mov	eax, [ebp+var_10]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB82C69
		mov	eax, [ebp+var_10]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB82C69
		mov	eax, [ebp+var_10]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB82C69
		jmp	short loc_6CB82C94
; ---------------------------------------------------------------------------

loc_6CB82C69:				; CODE XREF: sub_6CB82A02+237j
					; sub_6CB82A02+24Dj ...
		nop

loc_6CB82C6A:				; CODE XREF: sub_6CB82A02+180j
					; sub_6CB82A02+227j
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_30]
		jb	short loc_6CB82C8F
		jmp	loc_6CB82FB7
; ---------------------------------------------------------------------------

loc_6CB82C8F:				; CODE XREF: sub_6CB82A02+286j
		jmp	loc_6CB82FAB
; ---------------------------------------------------------------------------

loc_6CB82C94:				; CODE XREF: sub_6CB82A02+1C1j
					; sub_6CB82A02+265j
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_10], 3
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		cmp	edx, eax
		jz	loc_6CB82DAE
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 4
		jnz	short loc_6CB82D06
		mov	eax, [ebp+var_14]
		sub	eax, 2
		mov	edx, [ebp+var_14]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	edx, [ebp+var_18]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB82DAE
; ---------------------------------------------------------------------------

loc_6CB82D06:				; CODE XREF: sub_6CB82A02+2D2j
		cmp	[ebp+var_28], 1Fh
		ja	short loc_6CB82D43
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl

loc_6CB82D1A:				; CODE XREF: sub_6CB82A02+337j
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_28], 1
		cmp	[ebp+var_28], 0
		jnz	short loc_6CB82D1A
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	short loc_6CB82DAE
; ---------------------------------------------------------------------------

loc_6CB82D43:				; CODE XREF: sub_6CB82A02+308j
		cmp	[ebp+var_28], 117h
		ja	short loc_6CB82D92
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	edx, [ebp+var_28]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB82D69:				; CODE XREF: sub_6CB82A02+386j
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_28], 1
		cmp	[ebp+var_28], 0
		jnz	short loc_6CB82D69
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	short loc_6CB82DAE
; ---------------------------------------------------------------------------

loc_6CB82D92:				; CODE XREF: sub_6CB82A02+348j
		mov	eax, [ebp+var_28]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Dst], eax
		call	sub_6CB82842
		mov	[ebp+var_14], eax

loc_6CB82DAE:				; CODE XREF: sub_6CB82A02+2B2j
					; sub_6CB82A02+2FFj ...
		mov	eax, [ebp+var_C]
		mov	[ebp+var_18], eax
		add	[ebp+var_C], 3
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB82E68
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB82E68
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB82E68
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB82E68
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB82E68
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	loc_6CB82EE9

loc_6CB82E68:				; CODE XREF: sub_6CB82A02+3D0j
					; sub_6CB82A02+3F0j ...
		sub	[ebp+var_C], 1
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_44], eax
		sub	[ebp+var_20], 1
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	edx, [ebp+var_44]
		sub	edx, 2
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_20]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	edx, [ebp+var_20]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_3C], eax
		jmp	loc_6CB82FAB
; ---------------------------------------------------------------------------

loc_6CB82EE9:				; CODE XREF: sub_6CB82A02+460j
		mov	edx, [ebp+var_34]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 0FFh
		ja	short loc_6CB82F02
		mov	eax, [ebp+var_34]
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB82F17
; ---------------------------------------------------------------------------

loc_6CB82F02:				; CODE XREF: sub_6CB82A02+4F6j
		mov	eax, [ebp+var_C]
		add	eax, 0FFh
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB82F17
; ---------------------------------------------------------------------------

loc_6CB82F0F:				; CODE XREF: sub_6CB82A02+52Bj
		add	[ebp+var_10], 1
		add	[ebp+var_C], 1

loc_6CB82F17:				; CODE XREF: sub_6CB82A02+4FEj
					; sub_6CB82A02+50Bj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_2C]
		jnb	short loc_6CB82F2F
		mov	eax, [ebp+var_10]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB82F0F

loc_6CB82F2F:				; CODE XREF: sub_6CB82A02+51Bj
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		sub	[ebp+var_20], 1
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	edx, [ebp+var_20]
		or	edx, 0FFFFFFE0h
		mov	[eax], dl
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	edx, [ebp+var_20]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		mov	edx, [ebp+var_40]
		sub	edx, 9
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_3C], eax

loc_6CB82FAB:				; CODE XREF: sub_6CB82A02:loc_6CB82C8Fj
					; sub_6CB82A02+4E2j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_30]
		jb	loc_6CB82AE0

loc_6CB82FB7:				; CODE XREF: sub_6CB82A02+288j
		mov	eax, [ebp+var_34]
		add	eax, 3
		mov	edx, eax
		mov	eax, [ebp+var_18]
		cmp	edx, eax
		jz	short loc_6CB82FEE
		mov	eax, [ebp+var_34]
		add	eax, 3
		mov	edx, eax
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Dst], eax
		call	sub_6CB82842
		mov	[ebp+var_14], eax

loc_6CB82FEE:				; CODE XREF: sub_6CB82A02+5C2j
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB82A02	endp

; Exported entry  37. lzo1a_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1a_compress(int, int, int, int, void *)
		public lzo1a_compress
lzo1a_compress	proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	[ebp+var_C], 0
		cmp	[ebp+arg_4], 0
		jnz	short loc_6CB83024
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		jmp	short loc_6CB8307F
; ---------------------------------------------------------------------------

loc_6CB83024:				; CODE XREF: lzo1a_compress+11j
		cmp	[ebp+arg_4], 0Dh
		ja	short loc_6CB83055
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_38], eax
		call	sub_6CB82842
		mov	edx, eax
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		jmp	short loc_6CB8307F
; ---------------------------------------------------------------------------

loc_6CB83055:				; CODE XREF: lzo1a_compress+22j
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax ;	void *
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax ;	int
		call	sub_6CB82A02
		mov	[ebp+var_C], eax

loc_6CB8307F:				; CODE XREF: lzo1a_compress+1Cj
					; lzo1a_compress+4Dj
		mov	eax, [ebp+var_C]
		leave
		retn
lzo1a_compress	endp

; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8308E	proc near		; CODE XREF: lzo1a_99_compress+30p

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		cmp	[ebp+arg_4], 0
		jnz	short loc_6CB830AC
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	[ebp+var_C], 0
		jmp	short loc_6CB83120
; ---------------------------------------------------------------------------

loc_6CB830AC:				; CODE XREF: sub_6CB8308E+Aj
		cmp	[ebp+arg_4], 0Ah
		ja	short loc_6CB830F6
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_38], eax
		call	_lzo1b_store_run
		mov	edx, eax
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_4]
		jbe	short loc_6CB830EC
		mov	eax, 0
		jmp	short loc_6CB830F1
; ---------------------------------------------------------------------------

loc_6CB830EC:				; CODE XREF: sub_6CB8308E+55j
		mov	eax, 0FFFFFFFFh

loc_6CB830F1:				; CODE XREF: sub_6CB8308E+5Cj
		mov	[ebp+var_C], eax
		jmp	short loc_6CB83120
; ---------------------------------------------------------------------------

loc_6CB830F6:				; CODE XREF: sub_6CB8308E+22j
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax
		mov	eax, [ebp+arg_14]
		call	eax
		mov	[ebp+var_C], eax

loc_6CB83120:				; CODE XREF: sub_6CB8308E+1Cj
					; sub_6CB8308E+66j
		mov	eax, [ebp+var_C]
		leave
		retn
sub_6CB8308E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB83125(int,	int, int, int, void *)
sub_6CB83125	proc near		; DATA XREF: lzo1a_99_compress+6o

Dst		= dword	ptr -68h
Val		= dword	ptr -64h
Size		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_48], eax
		mov	[esp+68h+Size],	40000h ; Size
		mov	[esp+68h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+68h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	ecx, ax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_48]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 7
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB83217:				; CODE XREF: sub_6CB83125+6AAj
					; sub_6CB83125:loc_6CB837D4j
		mov	[ebp+var_28], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_48]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	[ebp+var_34], 8
		mov	[ebp+var_4C], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_50], eax
		mov	[ebp+var_2C], 0

loc_6CB8325A:				; CODE XREF: sub_6CB83125+307j
		mov	eax, [ebp+var_30]
		mov	eax, [eax]
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	short loc_6CB8327E
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_24]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_4C], eax
		cmp	[ebp+var_4C], 2000h
		jbe	short loc_6CB8328B

loc_6CB8327E:				; CODE XREF: sub_6CB83125+141j
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_C]
		mov	[eax], edx
		jmp	loc_6CB83420
; ---------------------------------------------------------------------------

loc_6CB8328B:				; CODE XREF: sub_6CB83125+157j
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_24]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB83420
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8341A
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8341A
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8341A
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB833B5
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB833B5
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB833B5
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB833B5
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB833B5
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB833F7

loc_6CB833B5:				; CODE XREF: sub_6CB83125+1FEj
					; sub_6CB83125+21Ej ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_50]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_2C]
		jbe	short loc_6CB833DD
		mov	eax, [ebp+var_54]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB833F5
; ---------------------------------------------------------------------------

loc_6CB833DD:				; CODE XREF: sub_6CB83125+2A8j
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_2C]
		jnz	short loc_6CB833F5
		mov	eax, [ebp+var_4C]
		cmp	eax, [ebp+var_28]
		jnb	short loc_6CB833F5
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB83412
; ---------------------------------------------------------------------------

loc_6CB833F5:				; CODE XREF: sub_6CB83125+2B6j
					; sub_6CB83125+2BEj ...
		jmp	short loc_6CB83412
; ---------------------------------------------------------------------------

loc_6CB833F7:				; CODE XREF: sub_6CB83125+28Ej
		cmp	[ebp+var_2C], 8
		jbe	short loc_6CB83405
		mov	eax, [ebp+var_4C]
		cmp	eax, [ebp+var_28]
		jnb	short loc_6CB83412

loc_6CB83405:				; CODE XREF: sub_6CB83125+2D6j
		mov	[ebp+var_2C], 9
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_28], eax

loc_6CB83412:				; CODE XREF: sub_6CB83125+2CEj
					; sub_6CB83125:loc_6CB833F5j ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB83420
; ---------------------------------------------------------------------------

loc_6CB8341A:				; CODE XREF: sub_6CB83125+19Ej
					; sub_6CB83125+1BEj ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax

loc_6CB83420:				; CODE XREF: sub_6CB83125+161j
					; sub_6CB83125+17Ej ...
		add	[ebp+var_30], 4
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	loc_6CB8325A
		sub	[ebp+var_30], 20h
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 7
		cmp	[ebp+var_2C], 3
		jbe	short loc_6CB8345C
		jmp	short loc_6CB834A6
; ---------------------------------------------------------------------------

loc_6CB8345C:				; CODE XREF: sub_6CB83125+333j
		cmp	[ebp+var_2C], 3
		jnz	short loc_6CB83464
		jmp	short loc_6CB834A6
; ---------------------------------------------------------------------------

loc_6CB83464:				; CODE XREF: sub_6CB83125+33Bj
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_44]
		jb	short loc_6CB83476
		jmp	loc_6CB837D9
; ---------------------------------------------------------------------------

loc_6CB83476:				; CODE XREF: sub_6CB83125+34Aj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB837D4
; ---------------------------------------------------------------------------

loc_6CB834A6:				; CODE XREF: sub_6CB83125+335j
					; sub_6CB83125+33Dj
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB835B6
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB83502
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB835B6
; ---------------------------------------------------------------------------

loc_6CB83502:				; CODE XREF: sub_6CB83125+3A2j
		cmp	[ebp+var_38], 1Fh
		ja	short loc_6CB83542
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		mov	[eax], dl

loc_6CB83516:				; CODE XREF: sub_6CB83125+410j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB83516
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB835B6
; ---------------------------------------------------------------------------

loc_6CB83542:				; CODE XREF: sub_6CB83125+3E1j
		cmp	[ebp+var_38], 117h
		ja	short loc_6CB83594
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB83568:				; CODE XREF: sub_6CB83125+462j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB83568
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB835B6
; ---------------------------------------------------------------------------

loc_6CB83594:				; CODE XREF: sub_6CB83125+424j
		mov	eax, [ebp+var_38]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB835B6:				; CODE XREF: sub_6CB83125+389j
					; sub_6CB83125+3D8j ...
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		cmp	[ebp+var_2C], 8
		ja	loc_6CB8369A
		sub	[ebp+var_28], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 2
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_28]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_44]
		jb	short loc_6CB8360C
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB837D9
; ---------------------------------------------------------------------------

loc_6CB8360C:				; CODE XREF: sub_6CB83125+4DAj
		add	[ebp+var_1C], 1

loc_6CB83610:				; CODE XREF: sub_6CB83125+543j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_48]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB83610
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB837D4
; ---------------------------------------------------------------------------

loc_6CB8369A:				; CODE XREF: sub_6CB83125+49Bj
		mov	eax, [ebp+var_28]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 0FFh
		ja	short loc_6CB836C2
		mov	eax, [ebp+var_40]
		mov	[ebp+var_3C], eax
		jmp	short loc_6CB836D7
; ---------------------------------------------------------------------------

loc_6CB836C2:				; CODE XREF: sub_6CB83125+593j
		mov	eax, [ebp+var_C]
		add	eax, 0FFh
		mov	[ebp+var_3C], eax
		jmp	short loc_6CB836D7
; ---------------------------------------------------------------------------

loc_6CB836CF:				; CODE XREF: sub_6CB83125+5C8j
		add	[ebp+var_24], 1
		add	[ebp+var_C], 1

loc_6CB836D7:				; CODE XREF: sub_6CB83125+59Bj
					; sub_6CB83125+5A8j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CB836EF
		mov	eax, [ebp+var_24]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB836CF

loc_6CB836EF:				; CODE XREF: sub_6CB83125+5B8j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		sub	[ebp+var_28], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		or	edx, 0FFFFFFE0h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 9
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_44]
		jb	short loc_6CB83746
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB837D9
; ---------------------------------------------------------------------------

loc_6CB83746:				; CODE XREF: sub_6CB83125+614j
		add	[ebp+var_1C], 1

loc_6CB8374A:				; CODE XREF: sub_6CB83125+67Dj
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_48]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB8374A
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB83217
; ---------------------------------------------------------------------------

loc_6CB837D4:				; CODE XREF: sub_6CB83125+37Cj
					; sub_6CB83125+570j
		jmp	loc_6CB83217
; ---------------------------------------------------------------------------

loc_6CB837D9:				; CODE XREF: sub_6CB83125+34Cj
					; sub_6CB83125+4E2j ...
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8380C
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax

loc_6CB8380C:				; CODE XREF: sub_6CB83125+6BCj
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB83125	endp

; Exported entry  36. lzo1a_99_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1a_99_compress
lzo1a_99_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB83125
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	sub_6CB8308E
		leave
		retn
lzo1a_99_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB83866(int,	int, int, int, void *)
sub_6CB83866	proc near		; DATA XREF: lzo1b_1_compress+6o
					; .rdata:_lzo1b_1_compress_funco

Dst		= dword	ptr -58h
Val		= dword	ptr -54h
Size		= dword	ptr -50h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_34]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_38], eax
		mov	[esp+58h+Size],	10000h ; Size
		mov	[esp+58h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		add	[ebp+var_C], 1

loc_6CB838C2:				; CODE XREF: sub_6CB83866+574j
					; sub_6CB83866:loc_6CB83DDFj
		mov	[ebp+var_20], 0
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB83967
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_6CB83967
		cmp	[ebp+var_20], 0FFFFh
		jbe	short loc_6CB8396E

loc_6CB83967:				; CODE XREF: sub_6CB83866+E3j
					; sub_6CB83866+F6j
		mov	eax, 1
		jmp	short loc_6CB83973
; ---------------------------------------------------------------------------

loc_6CB8396E:				; CODE XREF: sub_6CB83866+FFj
		mov	eax, 0

loc_6CB83973:				; CODE XREF: sub_6CB83866+106j
		test	eax, eax
		jz	short loc_6CB8397C
		jmp	loc_6CB83A98
; ---------------------------------------------------------------------------

loc_6CB8397C:				; CODE XREF: sub_6CB83866+10Fj
		cmp	[ebp+var_20], 2000h
		jbe	loc_6CB83A33
		mov	eax, [ebp+var_1C]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	loc_6CB83A33
		mov	eax, [ebp+var_24]
		and	eax, 7FFh
		xor	eax, 201Fh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB839FD
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_6CB839FD
		cmp	[ebp+var_20], 0FFFFh
		jbe	short loc_6CB83A04

loc_6CB839FD:				; CODE XREF: sub_6CB83866+179j
					; sub_6CB83866+18Cj
		mov	eax, 1
		jmp	short loc_6CB83A09
; ---------------------------------------------------------------------------

loc_6CB83A04:				; CODE XREF: sub_6CB83866+195j
		mov	eax, 0

loc_6CB83A09:				; CODE XREF: sub_6CB83866+19Cj
		test	eax, eax
		jz	short loc_6CB83A12
		jmp	loc_6CB83A98
; ---------------------------------------------------------------------------

loc_6CB83A12:				; CODE XREF: sub_6CB83866+1A5j
		cmp	[ebp+var_20], 2000h
		jbe	short loc_6CB83A33
		mov	eax, [ebp+var_1C]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB83A33
		jmp	short loc_6CB83A98
; ---------------------------------------------------------------------------

loc_6CB83A33:				; CODE XREF: sub_6CB83866+11Dj
					; sub_6CB83866+137j ...
		mov	eax, [ebp+var_1C]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB83A98
		mov	eax, [ebp+var_1C]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB83A98
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB83A98
		add	[ebp+var_1C], 3
		nop
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	loc_6CB83BC4
		jmp	short loc_6CB83AC2
; ---------------------------------------------------------------------------

loc_6CB83A98:				; CODE XREF: sub_6CB83866+111j
					; sub_6CB83866+1A7j ...
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_34]
		jb	short loc_6CB83ABD
		jmp	loc_6CB83DE4
; ---------------------------------------------------------------------------

loc_6CB83ABD:				; CODE XREF: sub_6CB83866+250j
		jmp	loc_6CB83DDF
; ---------------------------------------------------------------------------

loc_6CB83AC2:				; CODE XREF: sub_6CB83866+230j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_18]
		jnz	short loc_6CB83B10
		mov	eax, [ebp+var_10]
		sub	eax, 2
		mov	edx, [ebp+var_10]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	loc_6CB83BC4
; ---------------------------------------------------------------------------

loc_6CB83B10:				; CODE XREF: sub_6CB83866+26Fj
		cmp	[ebp+var_2C], 1Fh
		ja	short loc_6CB83B50
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB83B24:				; CODE XREF: sub_6CB83866+2DDj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_2C], 1
		cmp	[ebp+var_2C], 0
		jnz	short loc_6CB83B24
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB83BC4
; ---------------------------------------------------------------------------

loc_6CB83B50:				; CODE XREF: sub_6CB83866+2AEj
		cmp	[ebp+var_2C], 117h
		ja	short loc_6CB83BA2
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB83B76:				; CODE XREF: sub_6CB83866+32Fj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_2C], 1
		cmp	[ebp+var_2C], 0
		jnz	short loc_6CB83B76
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB83BC4
; ---------------------------------------------------------------------------

loc_6CB83BA2:				; CODE XREF: sub_6CB83866+2F1j
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax

loc_6CB83BC4:				; CODE XREF: sub_6CB83866+22Aj
					; sub_6CB83866+2A5j ...
		add	[ebp+var_C], 3
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB83C78
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB83C78
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB83C78
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB83C78
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB83C78
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	loc_6CB83D18

loc_6CB83C78:				; CODE XREF: sub_6CB83866+37Cj
					; sub_6CB83866+39Cj ...
		sub	[ebp+var_C], 1
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_28], eax
		cmp	[ebp+var_20], 2000h
		ja	short loc_6CB83CC7
		sub	[ebp+var_20], 1
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_20]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB83CFA
; ---------------------------------------------------------------------------

loc_6CB83CC7:				; CODE XREF: sub_6CB83866+42Aj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		shr	edx, 8
		mov	[eax], dl

loc_6CB83CFA:				; CODE XREF: sub_6CB83866+45Fj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_34]
		jb	short loc_6CB83D0D
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB83DE4
; ---------------------------------------------------------------------------

loc_6CB83D0D:				; CODE XREF: sub_6CB83866+49Aj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB83DDF
; ---------------------------------------------------------------------------

loc_6CB83D18:				; CODE XREF: sub_6CB83866+40Cj
		mov	eax, [ebp+var_30]
		mov	[ebp+var_3C], eax
		jmp	short loc_6CB83D28
; ---------------------------------------------------------------------------

loc_6CB83D20:				; CODE XREF: sub_6CB83866+4D8j
		add	[ebp+var_1C], 1
		add	[ebp+var_C], 1

loc_6CB83D28:				; CODE XREF: sub_6CB83866+4B8j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CB83D40
		mov	eax, [ebp+var_1C]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB83D20

loc_6CB83D40:				; CODE XREF: sub_6CB83866+4C8j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_28], eax
		cmp	[ebp+var_28], 22h
		ja	short loc_6CB83D69
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB83DA5
; ---------------------------------------------------------------------------

loc_6CB83D69:				; CODE XREF: sub_6CB83866+4EBj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_28], 22h
		jmp	short loc_6CB83D8E
; ---------------------------------------------------------------------------

loc_6CB83D7B:				; CODE XREF: sub_6CB83866+52Fj
		sub	[ebp+var_28], 0FFh
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0

loc_6CB83D8E:				; CODE XREF: sub_6CB83866+513j
		cmp	[ebp+var_28], 0FFh
		ja	short loc_6CB83D7B
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl

loc_6CB83DA5:				; CODE XREF: sub_6CB83866+501j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_34]
		jb	short loc_6CB83DD4
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	short loc_6CB83DE4
; ---------------------------------------------------------------------------

loc_6CB83DD4:				; CODE XREF: sub_6CB83866+564j
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB838C2
; ---------------------------------------------------------------------------

loc_6CB83DDF:				; CODE XREF: sub_6CB83866:loc_6CB83ABDj
					; sub_6CB83866+4ADj
		jmp	loc_6CB838C2
; ---------------------------------------------------------------------------

loc_6CB83DE4:				; CODE XREF: sub_6CB83866+252j
					; sub_6CB83866+4A2j ...
		mov	edx, [ebp+var_30]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	short loc_6CB83E17
		mov	edx, [ebp+var_30]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_10], eax

loc_6CB83E17:				; CODE XREF: sub_6CB83866+586j
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB83866	endp

; Exported entry  40. lzo1b_1_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_1_compress
lzo1b_1_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB83866
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1b_do_compress
		leave
		retn
lzo1b_1_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB83E72(int,	int, int, int, void *)
sub_6CB83E72	proc near		; DATA XREF: lzo1b_2_compress+6o
					; .rdata:_lzo1b_2_compress_funco

Dst		= dword	ptr -58h
Val		= dword	ptr -54h
Size		= dword	ptr -50h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_34]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_38], eax
		mov	[esp+58h+Size],	10000h ; Size
		mov	[esp+58h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		add	[ebp+var_C], 1

loc_6CB83ECE:				; CODE XREF: sub_6CB83E72+64Cj
					; sub_6CB83E72:loc_6CB844C3j
		mov	[ebp+var_20], 0
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB83F73
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_6CB83F73
		cmp	[ebp+var_20], 0FFFFh
		jbe	short loc_6CB83F7A

loc_6CB83F73:				; CODE XREF: sub_6CB83E72+E3j
					; sub_6CB83E72+F6j
		mov	eax, 1
		jmp	short loc_6CB83F7F
; ---------------------------------------------------------------------------

loc_6CB83F7A:				; CODE XREF: sub_6CB83E72+FFj
		mov	eax, 0

loc_6CB83F7F:				; CODE XREF: sub_6CB83E72+106j
		test	eax, eax
		jz	short loc_6CB83F88
		jmp	loc_6CB840A4
; ---------------------------------------------------------------------------

loc_6CB83F88:				; CODE XREF: sub_6CB83E72+10Fj
		cmp	[ebp+var_20], 2000h
		jbe	loc_6CB8403F
		mov	eax, [ebp+var_1C]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	loc_6CB8403F
		mov	eax, [ebp+var_24]
		and	eax, 7FFh
		xor	eax, 201Fh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB84009
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_6CB84009
		cmp	[ebp+var_20], 0FFFFh
		jbe	short loc_6CB84010

loc_6CB84009:				; CODE XREF: sub_6CB83E72+179j
					; sub_6CB83E72+18Cj
		mov	eax, 1
		jmp	short loc_6CB84015
; ---------------------------------------------------------------------------

loc_6CB84010:				; CODE XREF: sub_6CB83E72+195j
		mov	eax, 0

loc_6CB84015:				; CODE XREF: sub_6CB83E72+19Cj
		test	eax, eax
		jz	short loc_6CB8401E
		jmp	loc_6CB840A4
; ---------------------------------------------------------------------------

loc_6CB8401E:				; CODE XREF: sub_6CB83E72+1A5j
		cmp	[ebp+var_20], 2000h
		jbe	short loc_6CB8403F
		mov	eax, [ebp+var_1C]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8403F
		jmp	short loc_6CB840A4
; ---------------------------------------------------------------------------

loc_6CB8403F:				; CODE XREF: sub_6CB83E72+11Dj
					; sub_6CB83E72+137j ...
		mov	eax, [ebp+var_1C]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB840A4
		mov	eax, [ebp+var_1C]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB840A4
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB840A4
		add	[ebp+var_1C], 3
		nop
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	loc_6CB841D0
		jmp	short loc_6CB840CE
; ---------------------------------------------------------------------------

loc_6CB840A4:				; CODE XREF: sub_6CB83E72+111j
					; sub_6CB83E72+1A7j ...
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_34]
		jb	short loc_6CB840C9
		jmp	loc_6CB844C8
; ---------------------------------------------------------------------------

loc_6CB840C9:				; CODE XREF: sub_6CB83E72+250j
		jmp	loc_6CB844C3
; ---------------------------------------------------------------------------

loc_6CB840CE:				; CODE XREF: sub_6CB83E72+230j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_18]
		jnz	short loc_6CB8411C
		mov	eax, [ebp+var_10]
		sub	eax, 2
		mov	edx, [ebp+var_10]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	loc_6CB841D0
; ---------------------------------------------------------------------------

loc_6CB8411C:				; CODE XREF: sub_6CB83E72+26Fj
		cmp	[ebp+var_2C], 1Fh
		ja	short loc_6CB8415C
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB84130:				; CODE XREF: sub_6CB83E72+2DDj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_2C], 1
		cmp	[ebp+var_2C], 0
		jnz	short loc_6CB84130
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB841D0
; ---------------------------------------------------------------------------

loc_6CB8415C:				; CODE XREF: sub_6CB83E72+2AEj
		cmp	[ebp+var_2C], 117h
		ja	short loc_6CB841AE
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB84182:				; CODE XREF: sub_6CB83E72+32Fj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_2C], 1
		cmp	[ebp+var_2C], 0
		jnz	short loc_6CB84182
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB841D0
; ---------------------------------------------------------------------------

loc_6CB841AE:				; CODE XREF: sub_6CB83E72+2F1j
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax

loc_6CB841D0:				; CODE XREF: sub_6CB83E72+22Aj
					; sub_6CB83E72+2A5j ...
		add	[ebp+var_C], 3
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB84284
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84284
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84284
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84284
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84284
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	loc_6CB84390

loc_6CB84284:				; CODE XREF: sub_6CB83E72+37Cj
					; sub_6CB83E72+39Cj ...
		sub	[ebp+var_C], 1
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_28], eax
		cmp	[ebp+var_20], 2000h
		ja	short loc_6CB842D3
		sub	[ebp+var_20], 1
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_20]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB84306
; ---------------------------------------------------------------------------

loc_6CB842D3:				; CODE XREF: sub_6CB83E72+42Aj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		shr	edx, 8
		mov	[eax], dl

loc_6CB84306:				; CODE XREF: sub_6CB83E72+45Fj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_34]
		jb	short loc_6CB84319
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB844C8
; ---------------------------------------------------------------------------

loc_6CB84319:				; CODE XREF: sub_6CB83E72+49Aj
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB844C3
; ---------------------------------------------------------------------------

loc_6CB84390:				; CODE XREF: sub_6CB83E72+40Cj
		mov	eax, [ebp+var_30]
		mov	[ebp+var_3C], eax
		jmp	short loc_6CB843A0
; ---------------------------------------------------------------------------

loc_6CB84398:				; CODE XREF: sub_6CB83E72+544j
		add	[ebp+var_1C], 1
		add	[ebp+var_C], 1

loc_6CB843A0:				; CODE XREF: sub_6CB83E72+524j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CB843B8
		mov	eax, [ebp+var_1C]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB84398

loc_6CB843B8:				; CODE XREF: sub_6CB83E72+534j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_28], eax
		cmp	[ebp+var_28], 22h
		ja	short loc_6CB843E1
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8441D
; ---------------------------------------------------------------------------

loc_6CB843E1:				; CODE XREF: sub_6CB83E72+557j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_28], 22h
		jmp	short loc_6CB84406
; ---------------------------------------------------------------------------

loc_6CB843F3:				; CODE XREF: sub_6CB83E72+59Bj
		sub	[ebp+var_28], 0FFh
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0

loc_6CB84406:				; CODE XREF: sub_6CB83E72+57Fj
		cmp	[ebp+var_28], 0FFh
		ja	short loc_6CB843F3
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl

loc_6CB8441D:				; CODE XREF: sub_6CB83E72+56Dj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_34]
		jb	short loc_6CB8444C
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	short loc_6CB844C8
; ---------------------------------------------------------------------------

loc_6CB8444C:				; CODE XREF: sub_6CB83E72+5D0j
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB83ECE
; ---------------------------------------------------------------------------

loc_6CB844C3:				; CODE XREF: sub_6CB83E72:loc_6CB840C9j
					; sub_6CB83E72+519j
		jmp	loc_6CB83ECE
; ---------------------------------------------------------------------------

loc_6CB844C8:				; CODE XREF: sub_6CB83E72+252j
					; sub_6CB83E72+4A2j ...
		mov	edx, [ebp+var_30]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	short loc_6CB844FB
		mov	edx, [ebp+var_30]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_10], eax

loc_6CB844FB:				; CODE XREF: sub_6CB83E72+65Ej
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB83E72	endp

; Exported entry  41. lzo1b_2_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_2_compress
lzo1b_2_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB83E72
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1b_do_compress
		leave
		retn
lzo1b_2_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB84556(int,	int, int, int, void *)
sub_6CB84556	proc near		; DATA XREF: lzo1b_3_compress+6o
					; .rdata:_lzo1b_3_compress_funco

Dst		= dword	ptr -58h
Val		= dword	ptr -54h
Size		= dword	ptr -50h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_34]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_38], eax
		mov	[esp+58h+Size],	10000h ; Size
		mov	[esp+58h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		add	[ebp+var_C], 1

loc_6CB845B2:				; CODE XREF: sub_6CB84556+727j
					; sub_6CB84556:loc_6CB84C82j
		mov	[ebp+var_20], 0
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB84657
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_6CB84657
		cmp	[ebp+var_20], 0FFFFh
		jbe	short loc_6CB8465E

loc_6CB84657:				; CODE XREF: sub_6CB84556+E3j
					; sub_6CB84556+F6j
		mov	eax, 1
		jmp	short loc_6CB84663
; ---------------------------------------------------------------------------

loc_6CB8465E:				; CODE XREF: sub_6CB84556+FFj
		mov	eax, 0

loc_6CB84663:				; CODE XREF: sub_6CB84556+106j
		test	eax, eax
		jz	short loc_6CB8466C
		jmp	loc_6CB84788
; ---------------------------------------------------------------------------

loc_6CB8466C:				; CODE XREF: sub_6CB84556+10Fj
		cmp	[ebp+var_20], 2000h
		jbe	loc_6CB84723
		mov	eax, [ebp+var_1C]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	loc_6CB84723
		mov	eax, [ebp+var_24]
		and	eax, 7FFh
		xor	eax, 201Fh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB846ED
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 0
		jz	short loc_6CB846ED
		cmp	[ebp+var_20], 0FFFFh
		jbe	short loc_6CB846F4

loc_6CB846ED:				; CODE XREF: sub_6CB84556+179j
					; sub_6CB84556+18Cj
		mov	eax, 1
		jmp	short loc_6CB846F9
; ---------------------------------------------------------------------------

loc_6CB846F4:				; CODE XREF: sub_6CB84556+195j
		mov	eax, 0

loc_6CB846F9:				; CODE XREF: sub_6CB84556+19Cj
		test	eax, eax
		jz	short loc_6CB84702
		jmp	loc_6CB84788
; ---------------------------------------------------------------------------

loc_6CB84702:				; CODE XREF: sub_6CB84556+1A5j
		cmp	[ebp+var_20], 2000h
		jbe	short loc_6CB84723
		mov	eax, [ebp+var_1C]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB84723
		jmp	short loc_6CB84788
; ---------------------------------------------------------------------------

loc_6CB84723:				; CODE XREF: sub_6CB84556+11Dj
					; sub_6CB84556+137j ...
		mov	eax, [ebp+var_1C]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB84788
		mov	eax, [ebp+var_1C]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB84788
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB84788
		add	[ebp+var_1C], 3
		nop
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	loc_6CB848B4
		jmp	short loc_6CB847B2
; ---------------------------------------------------------------------------

loc_6CB84788:				; CODE XREF: sub_6CB84556+111j
					; sub_6CB84556+1A7j ...
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_34]
		jb	short loc_6CB847AD
		jmp	loc_6CB84C87
; ---------------------------------------------------------------------------

loc_6CB847AD:				; CODE XREF: sub_6CB84556+250j
		jmp	loc_6CB84C82
; ---------------------------------------------------------------------------

loc_6CB847B2:				; CODE XREF: sub_6CB84556+230j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_18]
		jnz	short loc_6CB84800
		mov	eax, [ebp+var_10]
		sub	eax, 2
		mov	edx, [ebp+var_10]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	loc_6CB848B4
; ---------------------------------------------------------------------------

loc_6CB84800:				; CODE XREF: sub_6CB84556+26Fj
		cmp	[ebp+var_2C], 1Fh
		ja	short loc_6CB84840
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB84814:				; CODE XREF: sub_6CB84556+2DDj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_2C], 1
		cmp	[ebp+var_2C], 0
		jnz	short loc_6CB84814
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB848B4
; ---------------------------------------------------------------------------

loc_6CB84840:				; CODE XREF: sub_6CB84556+2AEj
		cmp	[ebp+var_2C], 117h
		ja	short loc_6CB84892
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB84866:				; CODE XREF: sub_6CB84556+32Fj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_2C], 1
		cmp	[ebp+var_2C], 0
		jnz	short loc_6CB84866
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB848B4
; ---------------------------------------------------------------------------

loc_6CB84892:				; CODE XREF: sub_6CB84556+2F1j
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax

loc_6CB848B4:				; CODE XREF: sub_6CB84556+22Aj
					; sub_6CB84556+2A5j ...
		add	[ebp+var_C], 3
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB84968
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84968
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84968
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84968
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84968
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	[ebp+var_1C], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	loc_6CB84AE0

loc_6CB84968:				; CODE XREF: sub_6CB84556+37Cj
					; sub_6CB84556+39Cj ...
		sub	[ebp+var_C], 1
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_28], eax
		cmp	[ebp+var_20], 2000h
		ja	short loc_6CB849B7
		sub	[ebp+var_20], 1
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_20]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB849EA
; ---------------------------------------------------------------------------

loc_6CB849B7:				; CODE XREF: sub_6CB84556+42Aj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		shr	edx, 8
		mov	[eax], dl

loc_6CB849EA:				; CODE XREF: sub_6CB84556+45Fj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_34]
		jb	short loc_6CB849FD
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB84C87
; ---------------------------------------------------------------------------

loc_6CB849FD:				; CODE XREF: sub_6CB84556+49Aj
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB84C82
; ---------------------------------------------------------------------------

loc_6CB84AE0:				; CODE XREF: sub_6CB84556+40Cj
		mov	eax, [ebp+var_30]
		mov	[ebp+var_3C], eax
		jmp	short loc_6CB84AF0
; ---------------------------------------------------------------------------

loc_6CB84AE8:				; CODE XREF: sub_6CB84556+5B0j
		add	[ebp+var_1C], 1
		add	[ebp+var_C], 1

loc_6CB84AF0:				; CODE XREF: sub_6CB84556+590j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CB84B08
		mov	eax, [ebp+var_1C]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB84AE8

loc_6CB84B08:				; CODE XREF: sub_6CB84556+5A0j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_28], eax
		cmp	[ebp+var_28], 22h
		ja	short loc_6CB84B31
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB84B6D
; ---------------------------------------------------------------------------

loc_6CB84B31:				; CODE XREF: sub_6CB84556+5C3j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_28], 22h
		jmp	short loc_6CB84B56
; ---------------------------------------------------------------------------

loc_6CB84B43:				; CODE XREF: sub_6CB84556+607j
		sub	[ebp+var_28], 0FFh
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0

loc_6CB84B56:				; CODE XREF: sub_6CB84556+5EBj
		cmp	[ebp+var_28], 0FFh
		ja	short loc_6CB84B43
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl

loc_6CB84B6D:				; CODE XREF: sub_6CB84556+5D9j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_20]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_34]
		jb	short loc_6CB84B9F
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB84C87
; ---------------------------------------------------------------------------

loc_6CB84B9F:				; CODE XREF: sub_6CB84556+63Cj
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_38]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB845B2
; ---------------------------------------------------------------------------

loc_6CB84C82:				; CODE XREF: sub_6CB84556:loc_6CB847ADj
					; sub_6CB84556+585j
		jmp	loc_6CB845B2
; ---------------------------------------------------------------------------

loc_6CB84C87:				; CODE XREF: sub_6CB84556+252j
					; sub_6CB84556+4A2j ...
		mov	edx, [ebp+var_30]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	short loc_6CB84CBA
		mov	edx, [ebp+var_30]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_10], eax

loc_6CB84CBA:				; CODE XREF: sub_6CB84556+739j
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB84556	endp

; Exported entry  42. lzo1b_3_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_3_compress
lzo1b_3_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB84556
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1b_do_compress
		leave
		retn
lzo1b_3_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB84D16(int,	int, int, int, void *)
sub_6CB84D16	proc near		; DATA XREF: lzo1b_4_compress+6o
					; .rdata:_lzo1b_4_compress_funco

Dst		= dword	ptr -68h
Val		= dword	ptr -64h
Size		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_44], eax
		mov	[esp+68h+Size],	10000h ; Size
		mov	[esp+68h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+68h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB84E0A:				; CODE XREF: sub_6CB84D16+74Fj
					; sub_6CB84D16:loc_6CB8546Aj
		mov	[ebp+var_28], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	edx, ds:0[eax*8]
		mov	eax, [ebp+var_44]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	[ebp+var_34], 2
		mov	[ebp+var_48], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_2C], 0

loc_6CB84E4C:				; CODE XREF: sub_6CB84D16+31Fj
		mov	eax, [ebp+var_30]
		mov	eax, [eax]
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	loc_6CB85029
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_24]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_48], eax
		cmp	[ebp+var_48], 0FFFFh
		ja	loc_6CB85029
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_24]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB85029
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB85023
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB85023
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB85023
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB84FA2
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84FA2
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84FA2
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84FA2
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB84FA2
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB84FCC

loc_6CB84FA2:				; CODE XREF: sub_6CB84D16+1FAj
					; sub_6CB84D16+21Aj ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_50]
		cmp	eax, [ebp+var_2C]
		jbe	short loc_6CB84FCA
		mov	eax, [ebp+var_50]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB8501B
; ---------------------------------------------------------------------------

loc_6CB84FCA:				; CODE XREF: sub_6CB84D16+2A4j
		jmp	short loc_6CB8501B
; ---------------------------------------------------------------------------

loc_6CB84FCC:				; CODE XREF: sub_6CB84D16+28Aj
		mov	[ebp+var_2C], 9
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_34]
		mov	eax, 0
		sub	eax, edx
		shl	eax, 2
		mov	edx, 0FFFFFFF8h
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_30], eax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		jmp	loc_6CB850B8
; ---------------------------------------------------------------------------

loc_6CB8501B:				; CODE XREF: sub_6CB84D16+2B2j
					; sub_6CB84D16:loc_6CB84FCAj
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB85029
; ---------------------------------------------------------------------------

loc_6CB85023:				; CODE XREF: sub_6CB84D16+19Aj
					; sub_6CB84D16+1BAj ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax

loc_6CB85029:				; CODE XREF: sub_6CB84D16+142j
					; sub_6CB84D16+15Cj ...
		add	[ebp+var_30], 4
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	loc_6CB84E4C
		sub	[ebp+var_30], 8
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		cmp	[ebp+var_2C], 3
		jbe	short loc_6CB85065
		jmp	short loc_6CB850B8
; ---------------------------------------------------------------------------

loc_6CB85065:				; CODE XREF: sub_6CB84D16+34Bj
		cmp	[ebp+var_2C], 3
		jnz	short loc_6CB85076
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB85076
		jmp	short loc_6CB850B8
; ---------------------------------------------------------------------------

loc_6CB85076:				; CODE XREF: sub_6CB84D16+353j
					; sub_6CB84D16+35Cj
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB85088
		jmp	loc_6CB8546F
; ---------------------------------------------------------------------------

loc_6CB85088:				; CODE XREF: sub_6CB84D16+36Bj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8546A
; ---------------------------------------------------------------------------

loc_6CB850B8:				; CODE XREF: sub_6CB84D16+300j
					; sub_6CB84D16+34Dj ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB851C8
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB85114
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB851C8
; ---------------------------------------------------------------------------

loc_6CB85114:				; CODE XREF: sub_6CB84D16+3C3j
		cmp	[ebp+var_38], 1Fh
		ja	short loc_6CB85154
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		mov	[eax], dl

loc_6CB85128:				; CODE XREF: sub_6CB84D16+431j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB85128
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB851C8
; ---------------------------------------------------------------------------

loc_6CB85154:				; CODE XREF: sub_6CB84D16+402j
		cmp	[ebp+var_38], 117h
		ja	short loc_6CB851A6
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8517A:				; CODE XREF: sub_6CB84D16+483j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB8517A
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB851C8
; ---------------------------------------------------------------------------

loc_6CB851A6:				; CODE XREF: sub_6CB84D16+445j
		mov	eax, [ebp+var_38]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB851C8:				; CODE XREF: sub_6CB84D16+3AAj
					; sub_6CB84D16+3F9j ...
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		cmp	[ebp+var_2C], 8
		ja	loc_6CB852FC
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB85216
		sub	[ebp+var_28], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_28]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB85249
; ---------------------------------------------------------------------------

loc_6CB85216:				; CODE XREF: sub_6CB84D16+4C9j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl

loc_6CB85249:				; CODE XREF: sub_6CB84D16+4FEj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB8525C
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8546F
; ---------------------------------------------------------------------------

loc_6CB8525C:				; CODE XREF: sub_6CB84D16+539j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8546A
; ---------------------------------------------------------------------------

loc_6CB852FC:				; CODE XREF: sub_6CB84D16+4BCj
		mov	eax, [ebp+var_28]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_54], eax
		jmp	short loc_6CB8531B
; ---------------------------------------------------------------------------

loc_6CB85313:				; CODE XREF: sub_6CB84D16+61Bj
		add	[ebp+var_24], 1
		add	[ebp+var_C], 1

loc_6CB8531B:				; CODE XREF: sub_6CB84D16+5FBj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_54]
		jnb	short loc_6CB85333
		mov	eax, [ebp+var_24]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB85313

loc_6CB85333:				; CODE XREF: sub_6CB84D16+60Bj
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 22h
		ja	short loc_6CB8535C
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB85398
; ---------------------------------------------------------------------------

loc_6CB8535C:				; CODE XREF: sub_6CB84D16+62Ej
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_2C], 22h
		jmp	short loc_6CB85381
; ---------------------------------------------------------------------------

loc_6CB8536E:				; CODE XREF: sub_6CB84D16+672j
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB85381:				; CODE XREF: sub_6CB84D16+656j
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CB8536E
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB85398:				; CODE XREF: sub_6CB84D16+644j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB853CA
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8546F
; ---------------------------------------------------------------------------

loc_6CB853CA:				; CODE XREF: sub_6CB84D16+6A7j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB84E0A
; ---------------------------------------------------------------------------

loc_6CB8546A:				; CODE XREF: sub_6CB84D16+39Dj
					; sub_6CB84D16+5E1j
		jmp	loc_6CB84E0A
; ---------------------------------------------------------------------------

loc_6CB8546F:				; CODE XREF: sub_6CB84D16+36Dj
					; sub_6CB84D16+541j ...
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB854A2
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax

loc_6CB854A2:				; CODE XREF: sub_6CB84D16+761j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB84D16	endp

; Exported entry  43. lzo1b_4_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_4_compress
lzo1b_4_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB84D16
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1b_do_compress
		leave
		retn
lzo1b_4_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB854FE(int,	int, int, int, void *)
sub_6CB854FE	proc near		; DATA XREF: lzo1b_5_compress+6o
					; .rdata:_lzo1b_5_compress_funco

Dst		= dword	ptr -68h
Val		= dword	ptr -64h
Size		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_44], eax
		mov	[esp+68h+Size],	10000h ; Size
		mov	[esp+68h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+68h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB855F2:				; CODE XREF: sub_6CB854FE+815j
					; sub_6CB854FE:loc_6CB85D18j
		mov	[ebp+var_28], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	edx, ds:0[eax*8]
		mov	eax, [ebp+var_44]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	[ebp+var_34], 2
		mov	[ebp+var_48], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_2C], 0

loc_6CB85634:				; CODE XREF: sub_6CB854FE+31Fj
		mov	eax, [ebp+var_30]
		mov	eax, [eax]
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	loc_6CB85811
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_24]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_48], eax
		cmp	[ebp+var_48], 0FFFFh
		ja	loc_6CB85811
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_24]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB85811
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8580B
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8580B
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8580B
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8578A
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8578A
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8578A
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8578A
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8578A
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB857B4

loc_6CB8578A:				; CODE XREF: sub_6CB854FE+1FAj
					; sub_6CB854FE+21Aj ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_50]
		cmp	eax, [ebp+var_2C]
		jbe	short loc_6CB857B2
		mov	eax, [ebp+var_50]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB85803
; ---------------------------------------------------------------------------

loc_6CB857B2:				; CODE XREF: sub_6CB854FE+2A4j
		jmp	short loc_6CB85803
; ---------------------------------------------------------------------------

loc_6CB857B4:				; CODE XREF: sub_6CB854FE+28Aj
		mov	[ebp+var_2C], 9
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_34]
		mov	eax, 0
		sub	eax, edx
		shl	eax, 2
		mov	edx, 0FFFFFFF8h
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_30], eax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		jmp	loc_6CB858A0
; ---------------------------------------------------------------------------

loc_6CB85803:				; CODE XREF: sub_6CB854FE+2B2j
					; sub_6CB854FE:loc_6CB857B2j
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB85811
; ---------------------------------------------------------------------------

loc_6CB8580B:				; CODE XREF: sub_6CB854FE+19Aj
					; sub_6CB854FE+1BAj ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax

loc_6CB85811:				; CODE XREF: sub_6CB854FE+142j
					; sub_6CB854FE+15Cj ...
		add	[ebp+var_30], 4
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	loc_6CB85634
		sub	[ebp+var_30], 8
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		cmp	[ebp+var_2C], 3
		jbe	short loc_6CB8584D
		jmp	short loc_6CB858A0
; ---------------------------------------------------------------------------

loc_6CB8584D:				; CODE XREF: sub_6CB854FE+34Bj
		cmp	[ebp+var_2C], 3
		jnz	short loc_6CB8585E
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB8585E
		jmp	short loc_6CB858A0
; ---------------------------------------------------------------------------

loc_6CB8585E:				; CODE XREF: sub_6CB854FE+353j
					; sub_6CB854FE+35Cj
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB85870
		jmp	loc_6CB85D1D
; ---------------------------------------------------------------------------

loc_6CB85870:				; CODE XREF: sub_6CB854FE+36Bj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB85D18
; ---------------------------------------------------------------------------

loc_6CB858A0:				; CODE XREF: sub_6CB854FE+300j
					; sub_6CB854FE+34Dj ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB859B0
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB858FC
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB859B0
; ---------------------------------------------------------------------------

loc_6CB858FC:				; CODE XREF: sub_6CB854FE+3C3j
		cmp	[ebp+var_38], 1Fh
		ja	short loc_6CB8593C
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		mov	[eax], dl

loc_6CB85910:				; CODE XREF: sub_6CB854FE+431j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB85910
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB859B0
; ---------------------------------------------------------------------------

loc_6CB8593C:				; CODE XREF: sub_6CB854FE+402j
		cmp	[ebp+var_38], 117h
		ja	short loc_6CB8598E
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB85962:				; CODE XREF: sub_6CB854FE+483j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB85962
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB859B0
; ---------------------------------------------------------------------------

loc_6CB8598E:				; CODE XREF: sub_6CB854FE+445j
		mov	eax, [ebp+var_38]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB859B0:				; CODE XREF: sub_6CB854FE+3AAj
					; sub_6CB854FE+3F9j ...
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		cmp	[ebp+var_2C], 8
		ja	loc_6CB85B47
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB859FE
		sub	[ebp+var_28], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_28]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB85A31
; ---------------------------------------------------------------------------

loc_6CB859FE:				; CODE XREF: sub_6CB854FE+4C9j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl

loc_6CB85A31:				; CODE XREF: sub_6CB854FE+4FEj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB85A44
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB85D1D
; ---------------------------------------------------------------------------

loc_6CB85A44:				; CODE XREF: sub_6CB854FE+539j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB85D18
; ---------------------------------------------------------------------------

loc_6CB85B47:				; CODE XREF: sub_6CB854FE+4BCj
		mov	eax, [ebp+var_28]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_54], eax
		jmp	short loc_6CB85B66
; ---------------------------------------------------------------------------

loc_6CB85B5E:				; CODE XREF: sub_6CB854FE+67Ej
		add	[ebp+var_24], 1
		add	[ebp+var_C], 1

loc_6CB85B66:				; CODE XREF: sub_6CB854FE+65Ej
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_54]
		jnb	short loc_6CB85B7E
		mov	eax, [ebp+var_24]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB85B5E

loc_6CB85B7E:				; CODE XREF: sub_6CB854FE+66Ej
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 22h
		ja	short loc_6CB85BA7
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB85BE3
; ---------------------------------------------------------------------------

loc_6CB85BA7:				; CODE XREF: sub_6CB854FE+691j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_2C], 22h
		jmp	short loc_6CB85BCC
; ---------------------------------------------------------------------------

loc_6CB85BB9:				; CODE XREF: sub_6CB854FE+6D5j
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB85BCC:				; CODE XREF: sub_6CB854FE+6B9j
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CB85BB9
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB85BE3:				; CODE XREF: sub_6CB854FE+6A7j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB85C15
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB85D1D
; ---------------------------------------------------------------------------

loc_6CB85C15:				; CODE XREF: sub_6CB854FE+70Aj
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB855F2
; ---------------------------------------------------------------------------

loc_6CB85D18:				; CODE XREF: sub_6CB854FE+39Dj
					; sub_6CB854FE+644j
		jmp	loc_6CB855F2
; ---------------------------------------------------------------------------

loc_6CB85D1D:				; CODE XREF: sub_6CB854FE+36Dj
					; sub_6CB854FE+541j ...
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB85D50
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax

loc_6CB85D50:				; CODE XREF: sub_6CB854FE+827j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB854FE	endp

; Exported entry  44. lzo1b_5_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_5_compress
lzo1b_5_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB854FE
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1b_do_compress
		leave
		retn
lzo1b_5_compress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB85DAA(int,	int, int, int, void *)
sub_6CB85DAA	proc near		; DATA XREF: lzo1b_6_compress+6o
					; .rdata:_lzo1b_6_compress_funco

Dst		= dword	ptr -68h
Val		= dword	ptr -64h
Size		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_44], eax
		mov	[esp+68h+Size],	10000h ; Size
		mov	[esp+68h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+68h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB85E9E:				; CODE XREF: sub_6CB85DAA+865j
					; sub_6CB85DAA:loc_6CB86614j
		mov	[ebp+var_28], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	edx, ds:0[eax*8]
		mov	eax, [ebp+var_44]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	[ebp+var_34], 2
		mov	[ebp+var_48], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_2C], 0

loc_6CB85EE0:				; CODE XREF: sub_6CB85DAA+31Fj
		mov	eax, [ebp+var_30]
		mov	eax, [eax]
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	loc_6CB860BD
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_24]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_48], eax
		cmp	[ebp+var_48], 0FFFFh
		ja	loc_6CB860BD
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_24]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB860BD
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB860B7
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB860B7
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB860B7
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB86036
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB86036
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB86036
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB86036
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB86036
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB86060

loc_6CB86036:				; CODE XREF: sub_6CB85DAA+1FAj
					; sub_6CB85DAA+21Aj ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_50]
		cmp	eax, [ebp+var_2C]
		jbe	short loc_6CB8605E
		mov	eax, [ebp+var_50]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB860AF
; ---------------------------------------------------------------------------

loc_6CB8605E:				; CODE XREF: sub_6CB85DAA+2A4j
		jmp	short loc_6CB860AF
; ---------------------------------------------------------------------------

loc_6CB86060:				; CODE XREF: sub_6CB85DAA+28Aj
		mov	[ebp+var_2C], 9
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_34]
		mov	eax, 0
		sub	eax, edx
		shl	eax, 2
		mov	edx, 0FFFFFFF8h
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_30], eax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		jmp	loc_6CB8614C
; ---------------------------------------------------------------------------

loc_6CB860AF:				; CODE XREF: sub_6CB85DAA+2B2j
					; sub_6CB85DAA:loc_6CB8605Ej
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB860BD
; ---------------------------------------------------------------------------

loc_6CB860B7:				; CODE XREF: sub_6CB85DAA+19Aj
					; sub_6CB85DAA+1BAj ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax

loc_6CB860BD:				; CODE XREF: sub_6CB85DAA+142j
					; sub_6CB85DAA+15Cj ...
		add	[ebp+var_30], 4
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	loc_6CB85EE0
		sub	[ebp+var_30], 8
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		cmp	[ebp+var_2C], 3
		jbe	short loc_6CB860F9
		jmp	short loc_6CB8614C
; ---------------------------------------------------------------------------

loc_6CB860F9:				; CODE XREF: sub_6CB85DAA+34Bj
		cmp	[ebp+var_2C], 3
		jnz	short loc_6CB8610A
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB8610A
		jmp	short loc_6CB8614C
; ---------------------------------------------------------------------------

loc_6CB8610A:				; CODE XREF: sub_6CB85DAA+353j
					; sub_6CB85DAA+35Cj
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB8611C
		jmp	loc_6CB86619
; ---------------------------------------------------------------------------

loc_6CB8611C:				; CODE XREF: sub_6CB85DAA+36Bj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB86614
; ---------------------------------------------------------------------------

loc_6CB8614C:				; CODE XREF: sub_6CB85DAA+300j
					; sub_6CB85DAA+34Dj ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB8625C
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB861A8
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB8625C
; ---------------------------------------------------------------------------

loc_6CB861A8:				; CODE XREF: sub_6CB85DAA+3C3j
		cmp	[ebp+var_38], 1Fh
		ja	short loc_6CB861E8
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		mov	[eax], dl

loc_6CB861BC:				; CODE XREF: sub_6CB85DAA+431j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB861BC
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8625C
; ---------------------------------------------------------------------------

loc_6CB861E8:				; CODE XREF: sub_6CB85DAA+402j
		cmp	[ebp+var_38], 117h
		ja	short loc_6CB8623A
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8620E:				; CODE XREF: sub_6CB85DAA+483j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB8620E
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8625C
; ---------------------------------------------------------------------------

loc_6CB8623A:				; CODE XREF: sub_6CB85DAA+445j
		mov	eax, [ebp+var_38]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB8625C:				; CODE XREF: sub_6CB85DAA+3AAj
					; sub_6CB85DAA+3F9j ...
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		cmp	[ebp+var_2C], 8
		ja	loc_6CB8637D
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB862AA
		sub	[ebp+var_28], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_28]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB862DD
; ---------------------------------------------------------------------------

loc_6CB862AA:				; CODE XREF: sub_6CB85DAA+4C9j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl

loc_6CB862DD:				; CODE XREF: sub_6CB85DAA+4FEj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB862F0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB86619
; ---------------------------------------------------------------------------

loc_6CB862F0:				; CODE XREF: sub_6CB85DAA+539j
		add	[ebp+var_1C], 1

loc_6CB862F4:				; CODE XREF: sub_6CB85DAA+5A1j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	edx, ds:0[eax*8]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB862F4
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB86614
; ---------------------------------------------------------------------------

loc_6CB8637D:				; CODE XREF: sub_6CB85DAA+4BCj
		mov	eax, [ebp+var_28]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_54], eax
		jmp	short loc_6CB8639C
; ---------------------------------------------------------------------------

loc_6CB86394:				; CODE XREF: sub_6CB85DAA+608j
		add	[ebp+var_24], 1
		add	[ebp+var_C], 1

loc_6CB8639C:				; CODE XREF: sub_6CB85DAA+5E8j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_54]
		jnb	short loc_6CB863B4
		mov	eax, [ebp+var_24]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB86394

loc_6CB863B4:				; CODE XREF: sub_6CB85DAA+5F8j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 22h
		ja	short loc_6CB863DD
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB86419
; ---------------------------------------------------------------------------

loc_6CB863DD:				; CODE XREF: sub_6CB85DAA+61Bj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_2C], 22h
		jmp	short loc_6CB86402
; ---------------------------------------------------------------------------

loc_6CB863EF:				; CODE XREF: sub_6CB85DAA+65Fj
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB86402:				; CODE XREF: sub_6CB85DAA+643j
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CB863EF
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB86419:				; CODE XREF: sub_6CB85DAA+631j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB8644B
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB86619
; ---------------------------------------------------------------------------

loc_6CB8644B:				; CODE XREF: sub_6CB85DAA+694j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB85E9E
; ---------------------------------------------------------------------------

loc_6CB86614:				; CODE XREF: sub_6CB85DAA+39Dj
					; sub_6CB85DAA+5CEj
		jmp	loc_6CB85E9E
; ---------------------------------------------------------------------------

loc_6CB86619:				; CODE XREF: sub_6CB85DAA+36Dj
					; sub_6CB85DAA+541j ...
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8664C
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax

loc_6CB8664C:				; CODE XREF: sub_6CB85DAA+877j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB85DAA	endp

; Exported entry  45. lzo1b_6_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_6_compress
lzo1b_6_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB85DAA
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1b_do_compress
		leave
		retn
lzo1b_6_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB866A6(int,	int, int, int, void *)
sub_6CB866A6	proc near		; DATA XREF: lzo1b_7_compress+6o
					; .rdata:_lzo1b_7_compress_funco

Dst		= dword	ptr -68h
Val		= dword	ptr -64h
Size		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_44], eax
		mov	[esp+68h+Size],	10000h ; Size
		mov	[esp+68h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+68h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB8679E:				; CODE XREF: sub_6CB866A6+827j
					; sub_6CB866A6:loc_6CB86ED2j
		mov	[ebp+var_28], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_44]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	[ebp+var_34], 4
		mov	[ebp+var_48], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_2C], 0

loc_6CB867DE:				; CODE XREF: sub_6CB866A6+321j
		mov	eax, [ebp+var_30]
		mov	eax, [eax]
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	loc_6CB869BB
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_24]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_48], eax
		cmp	[ebp+var_48], 0FFFFh
		ja	loc_6CB869BB
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_24]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB869BB
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB869B5
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB869B5
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB869B5
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB86934
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB86934
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB86934
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB86934
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB86934
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB8695E

loc_6CB86934:				; CODE XREF: sub_6CB866A6+1FCj
					; sub_6CB866A6+21Cj ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_50]
		cmp	eax, [ebp+var_2C]
		jbe	short loc_6CB8695C
		mov	eax, [ebp+var_50]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB869AD
; ---------------------------------------------------------------------------

loc_6CB8695C:				; CODE XREF: sub_6CB866A6+2A6j
		jmp	short loc_6CB869AD
; ---------------------------------------------------------------------------

loc_6CB8695E:				; CODE XREF: sub_6CB866A6+28Cj
		mov	[ebp+var_2C], 9
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_34]
		mov	eax, 0
		sub	eax, edx
		shl	eax, 2
		mov	edx, 0FFFFFFF0h
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_30], eax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		jmp	loc_6CB86A4A
; ---------------------------------------------------------------------------

loc_6CB869AD:				; CODE XREF: sub_6CB866A6+2B4j
					; sub_6CB866A6:loc_6CB8695Cj
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB869BB
; ---------------------------------------------------------------------------

loc_6CB869B5:				; CODE XREF: sub_6CB866A6+19Cj
					; sub_6CB866A6+1BCj ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax

loc_6CB869BB:				; CODE XREF: sub_6CB866A6+144j
					; sub_6CB866A6+15Ej ...
		add	[ebp+var_30], 4
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	loc_6CB867DE
		sub	[ebp+var_30], 10h
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		cmp	[ebp+var_2C], 3
		jbe	short loc_6CB869F7
		jmp	short loc_6CB86A4A
; ---------------------------------------------------------------------------

loc_6CB869F7:				; CODE XREF: sub_6CB866A6+34Dj
		cmp	[ebp+var_2C], 3
		jnz	short loc_6CB86A08
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB86A08
		jmp	short loc_6CB86A4A
; ---------------------------------------------------------------------------

loc_6CB86A08:				; CODE XREF: sub_6CB866A6+355j
					; sub_6CB866A6+35Ej
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB86A1A
		jmp	loc_6CB86ED7
; ---------------------------------------------------------------------------

loc_6CB86A1A:				; CODE XREF: sub_6CB866A6+36Dj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB86ED2
; ---------------------------------------------------------------------------

loc_6CB86A4A:				; CODE XREF: sub_6CB866A6+302j
					; sub_6CB866A6+34Fj ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB86B5A
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB86AA6
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB86B5A
; ---------------------------------------------------------------------------

loc_6CB86AA6:				; CODE XREF: sub_6CB866A6+3C5j
		cmp	[ebp+var_38], 1Fh
		ja	short loc_6CB86AE6
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		mov	[eax], dl

loc_6CB86ABA:				; CODE XREF: sub_6CB866A6+433j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB86ABA
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB86B5A
; ---------------------------------------------------------------------------

loc_6CB86AE6:				; CODE XREF: sub_6CB866A6+404j
		cmp	[ebp+var_38], 117h
		ja	short loc_6CB86B38
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB86B0C:				; CODE XREF: sub_6CB866A6+485j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB86B0C
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB86B5A
; ---------------------------------------------------------------------------

loc_6CB86B38:				; CODE XREF: sub_6CB866A6+447j
		mov	eax, [ebp+var_38]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB86B5A:				; CODE XREF: sub_6CB866A6+3ACj
					; sub_6CB866A6+3FBj ...
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		cmp	[ebp+var_2C], 8
		ja	loc_6CB86CF9
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB86BA8
		sub	[ebp+var_28], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_28]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB86BDB
; ---------------------------------------------------------------------------

loc_6CB86BA8:				; CODE XREF: sub_6CB866A6+4CBj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl

loc_6CB86BDB:				; CODE XREF: sub_6CB866A6+500j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB86BEE
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB86ED7
; ---------------------------------------------------------------------------

loc_6CB86BEE:				; CODE XREF: sub_6CB866A6+53Bj
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB86ED2
; ---------------------------------------------------------------------------

loc_6CB86CF9:				; CODE XREF: sub_6CB866A6+4BEj
		mov	eax, [ebp+var_28]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_54], eax
		jmp	short loc_6CB86D18
; ---------------------------------------------------------------------------

loc_6CB86D10:				; CODE XREF: sub_6CB866A6+688j
		add	[ebp+var_24], 1
		add	[ebp+var_C], 1

loc_6CB86D18:				; CODE XREF: sub_6CB866A6+668j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_54]
		jnb	short loc_6CB86D30
		mov	eax, [ebp+var_24]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB86D10

loc_6CB86D30:				; CODE XREF: sub_6CB866A6+678j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 22h
		ja	short loc_6CB86D59
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB86D95
; ---------------------------------------------------------------------------

loc_6CB86D59:				; CODE XREF: sub_6CB866A6+69Bj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_2C], 22h
		jmp	short loc_6CB86D7E
; ---------------------------------------------------------------------------

loc_6CB86D6B:				; CODE XREF: sub_6CB866A6+6DFj
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB86D7E:				; CODE XREF: sub_6CB866A6+6C3j
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CB86D6B
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB86D95:				; CODE XREF: sub_6CB866A6+6B1j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB86DC7
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB86ED7
; ---------------------------------------------------------------------------

loc_6CB86DC7:				; CODE XREF: sub_6CB866A6+714j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8679E
; ---------------------------------------------------------------------------

loc_6CB86ED2:				; CODE XREF: sub_6CB866A6+39Fj
					; sub_6CB866A6+64Ej
		jmp	loc_6CB8679E
; ---------------------------------------------------------------------------

loc_6CB86ED7:				; CODE XREF: sub_6CB866A6+36Fj
					; sub_6CB866A6+543j ...
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB86F0A
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax

loc_6CB86F0A:				; CODE XREF: sub_6CB866A6+839j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB866A6	endp

; Exported entry  46. lzo1b_7_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_7_compress
lzo1b_7_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB866A6
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1b_do_compress
		leave
		retn
lzo1b_7_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB86F66(int,	int, int, int, void *)
sub_6CB86F66	proc near		; DATA XREF: lzo1b_8_compress+6o
					; .rdata:_lzo1b_8_compress_funco

Dst		= dword	ptr -68h
Val		= dword	ptr -64h
Size		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_44], eax
		mov	[esp+68h+Size],	10000h ; Size
		mov	[esp+68h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+68h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB8705E:				; CODE XREF: sub_6CB86F66+A11j
					; sub_6CB86F66:loc_6CB8797Cj
		mov	[ebp+var_28], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_44]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	[ebp+var_34], 4
		mov	[ebp+var_48], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_2C], 0

loc_6CB8709E:				; CODE XREF: sub_6CB86F66+321j
		mov	eax, [ebp+var_30]
		mov	eax, [eax]
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	loc_6CB8727B
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_24]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_48], eax
		cmp	[ebp+var_48], 0FFFFh
		ja	loc_6CB8727B
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_24]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8727B
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB87275
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB87275
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB87275
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB871F4
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB871F4
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB871F4
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB871F4
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB871F4
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB8721E

loc_6CB871F4:				; CODE XREF: sub_6CB86F66+1FCj
					; sub_6CB86F66+21Cj ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_50]
		cmp	eax, [ebp+var_2C]
		jbe	short loc_6CB8721C
		mov	eax, [ebp+var_50]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB8726D
; ---------------------------------------------------------------------------

loc_6CB8721C:				; CODE XREF: sub_6CB86F66+2A6j
		jmp	short loc_6CB8726D
; ---------------------------------------------------------------------------

loc_6CB8721E:				; CODE XREF: sub_6CB86F66+28Cj
		mov	[ebp+var_2C], 9
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_34]
		mov	eax, 0
		sub	eax, edx
		shl	eax, 2
		mov	edx, 0FFFFFFF0h
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_30], eax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		jmp	loc_6CB8730A
; ---------------------------------------------------------------------------

loc_6CB8726D:				; CODE XREF: sub_6CB86F66+2B4j
					; sub_6CB86F66:loc_6CB8721Cj
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB8727B
; ---------------------------------------------------------------------------

loc_6CB87275:				; CODE XREF: sub_6CB86F66+19Cj
					; sub_6CB86F66+1BCj ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax

loc_6CB8727B:				; CODE XREF: sub_6CB86F66+144j
					; sub_6CB86F66+15Ej ...
		add	[ebp+var_30], 4
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	loc_6CB8709E
		sub	[ebp+var_30], 10h
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		cmp	[ebp+var_2C], 3
		jbe	short loc_6CB872B7
		jmp	short loc_6CB8730A
; ---------------------------------------------------------------------------

loc_6CB872B7:				; CODE XREF: sub_6CB86F66+34Dj
		cmp	[ebp+var_2C], 3
		jnz	short loc_6CB872C8
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB872C8
		jmp	short loc_6CB8730A
; ---------------------------------------------------------------------------

loc_6CB872C8:				; CODE XREF: sub_6CB86F66+355j
					; sub_6CB86F66+35Ej
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB872DA
		jmp	loc_6CB87981
; ---------------------------------------------------------------------------

loc_6CB872DA:				; CODE XREF: sub_6CB86F66+36Dj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8797C
; ---------------------------------------------------------------------------

loc_6CB8730A:				; CODE XREF: sub_6CB86F66+302j
					; sub_6CB86F66+34Fj ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB8741A
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB87366
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB8741A
; ---------------------------------------------------------------------------

loc_6CB87366:				; CODE XREF: sub_6CB86F66+3C5j
		cmp	[ebp+var_38], 1Fh
		ja	short loc_6CB873A6
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		mov	[eax], dl

loc_6CB8737A:				; CODE XREF: sub_6CB86F66+433j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB8737A
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8741A
; ---------------------------------------------------------------------------

loc_6CB873A6:				; CODE XREF: sub_6CB86F66+404j
		cmp	[ebp+var_38], 117h
		ja	short loc_6CB873F8
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB873CC:				; CODE XREF: sub_6CB86F66+485j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB873CC
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8741A
; ---------------------------------------------------------------------------

loc_6CB873F8:				; CODE XREF: sub_6CB86F66+447j
		mov	eax, [ebp+var_38]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB8741A:				; CODE XREF: sub_6CB86F66+3ACj
					; sub_6CB86F66+3FBj ...
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		cmp	[ebp+var_2C], 8
		ja	loc_6CB87539
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB87468
		sub	[ebp+var_28], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_28]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8749B
; ---------------------------------------------------------------------------

loc_6CB87468:				; CODE XREF: sub_6CB86F66+4CBj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl

loc_6CB8749B:				; CODE XREF: sub_6CB86F66+500j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB874AE
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB87981
; ---------------------------------------------------------------------------

loc_6CB874AE:				; CODE XREF: sub_6CB86F66+53Bj
		add	[ebp+var_1C], 1

loc_6CB874B2:				; CODE XREF: sub_6CB86F66+5A1j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB874B2
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8797C
; ---------------------------------------------------------------------------

loc_6CB87539:				; CODE XREF: sub_6CB86F66+4BEj
		mov	eax, [ebp+var_28]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_54], eax
		jmp	short loc_6CB87558
; ---------------------------------------------------------------------------

loc_6CB87550:				; CODE XREF: sub_6CB86F66+608j
		add	[ebp+var_24], 1
		add	[ebp+var_C], 1

loc_6CB87558:				; CODE XREF: sub_6CB86F66+5E8j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_54]
		jnb	short loc_6CB87570
		mov	eax, [ebp+var_24]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB87550

loc_6CB87570:				; CODE XREF: sub_6CB86F66+5F8j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 22h
		ja	short loc_6CB87599
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB875D5
; ---------------------------------------------------------------------------

loc_6CB87599:				; CODE XREF: sub_6CB86F66+61Bj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_2C], 22h
		jmp	short loc_6CB875BE
; ---------------------------------------------------------------------------

loc_6CB875AB:				; CODE XREF: sub_6CB86F66+65Fj
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB875BE:				; CODE XREF: sub_6CB86F66+643j
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CB875AB
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB875D5:				; CODE XREF: sub_6CB86F66+631j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB87607
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB87981
; ---------------------------------------------------------------------------

loc_6CB87607:				; CODE XREF: sub_6CB86F66+694j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8705E
; ---------------------------------------------------------------------------

loc_6CB8797C:				; CODE XREF: sub_6CB86F66+39Fj
					; sub_6CB86F66+5CEj
		jmp	loc_6CB8705E
; ---------------------------------------------------------------------------

loc_6CB87981:				; CODE XREF: sub_6CB86F66+36Fj
					; sub_6CB86F66+543j ...
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB879B4
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax

loc_6CB879B4:				; CODE XREF: sub_6CB86F66+A23j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB86F66	endp

; Exported entry  47. lzo1b_8_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_8_compress
lzo1b_8_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB86F66
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1b_do_compress
		leave
		retn
lzo1b_8_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB87A0E(int,	int, int, int, void *)
sub_6CB87A0E	proc near		; DATA XREF: lzo1b_9_compress+6o
					; .rdata:_lzo1b_9_compress_funco

Dst		= dword	ptr -68h
Val		= dword	ptr -64h
Size		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_44], eax
		mov	[esp+68h+Size],	10000h ; Size
		mov	[esp+68h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+68h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB87B06:				; CODE XREF: sub_6CB87A0E+710j
					; sub_6CB87A0E:loc_6CB88123j
		mov	[ebp+var_28], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_44]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	[ebp+var_34], 4
		mov	[ebp+var_48], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_2C], 0

loc_6CB87B46:				; CODE XREF: sub_6CB87A0E+30Aj
		mov	eax, [ebp+var_30]
		mov	eax, [eax]
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	short loc_6CB87B6A
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_24]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_48], eax
		cmp	[ebp+var_48], 0FFFFh
		jbe	short loc_6CB87B77

loc_6CB87B6A:				; CODE XREF: sub_6CB87A0E+144j
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_C]
		mov	[eax], edx
		jmp	loc_6CB87D0C
; ---------------------------------------------------------------------------

loc_6CB87B77:				; CODE XREF: sub_6CB87A0E+15Aj
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_24]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB87D0C
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB87D06
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB87D06
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB87D06
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB87CA1
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB87CA1
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB87CA1
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB87CA1
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB87CA1
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB87CE3

loc_6CB87CA1:				; CODE XREF: sub_6CB87A0E+201j
					; sub_6CB87A0E+221j ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_50]
		cmp	eax, [ebp+var_2C]
		jbe	short loc_6CB87CC9
		mov	eax, [ebp+var_50]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB87CE1
; ---------------------------------------------------------------------------

loc_6CB87CC9:				; CODE XREF: sub_6CB87A0E+2ABj
		mov	eax, [ebp+var_50]
		cmp	eax, [ebp+var_2C]
		jnz	short loc_6CB87CE1
		mov	eax, [ebp+var_48]
		cmp	eax, [ebp+var_28]
		jnb	short loc_6CB87CE1
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB87CFE
; ---------------------------------------------------------------------------

loc_6CB87CE1:				; CODE XREF: sub_6CB87A0E+2B9j
					; sub_6CB87A0E+2C1j ...
		jmp	short loc_6CB87CFE
; ---------------------------------------------------------------------------

loc_6CB87CE3:				; CODE XREF: sub_6CB87A0E+291j
		cmp	[ebp+var_2C], 8
		jbe	short loc_6CB87CF1
		mov	eax, [ebp+var_48]
		cmp	eax, [ebp+var_28]
		jnb	short loc_6CB87CFE

loc_6CB87CF1:				; CODE XREF: sub_6CB87A0E+2D9j
		mov	[ebp+var_2C], 9
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax

loc_6CB87CFE:				; CODE XREF: sub_6CB87A0E+2D1j
					; sub_6CB87A0E:loc_6CB87CE1j ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB87D0C
; ---------------------------------------------------------------------------

loc_6CB87D06:				; CODE XREF: sub_6CB87A0E+1A1j
					; sub_6CB87A0E+1C1j ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax

loc_6CB87D0C:				; CODE XREF: sub_6CB87A0E+164j
					; sub_6CB87A0E+181j ...
		add	[ebp+var_30], 4
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	loc_6CB87B46
		sub	[ebp+var_30], 10h
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		cmp	[ebp+var_2C], 3
		jbe	short loc_6CB87D48
		jmp	short loc_6CB87D9B
; ---------------------------------------------------------------------------

loc_6CB87D48:				; CODE XREF: sub_6CB87A0E+336j
		cmp	[ebp+var_2C], 3
		jnz	short loc_6CB87D59
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB87D59
		jmp	short loc_6CB87D9B
; ---------------------------------------------------------------------------

loc_6CB87D59:				; CODE XREF: sub_6CB87A0E+33Ej
					; sub_6CB87A0E+347j
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB87D6B
		jmp	loc_6CB88128
; ---------------------------------------------------------------------------

loc_6CB87D6B:				; CODE XREF: sub_6CB87A0E+356j
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB88123
; ---------------------------------------------------------------------------

loc_6CB87D9B:				; CODE XREF: sub_6CB87A0E+338j
					; sub_6CB87A0E+349j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB87EAB
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB87DF7
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB87EAB
; ---------------------------------------------------------------------------

loc_6CB87DF7:				; CODE XREF: sub_6CB87A0E+3AEj
		cmp	[ebp+var_38], 1Fh
		ja	short loc_6CB87E37
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		mov	[eax], dl

loc_6CB87E0B:				; CODE XREF: sub_6CB87A0E+41Cj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB87E0B
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB87EAB
; ---------------------------------------------------------------------------

loc_6CB87E37:				; CODE XREF: sub_6CB87A0E+3EDj
		cmp	[ebp+var_38], 117h
		ja	short loc_6CB87E89
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB87E5D:				; CODE XREF: sub_6CB87A0E+46Ej
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB87E5D
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB87EAB
; ---------------------------------------------------------------------------

loc_6CB87E89:				; CODE XREF: sub_6CB87A0E+430j
		mov	eax, [ebp+var_38]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB87EAB:				; CODE XREF: sub_6CB87A0E+395j
					; sub_6CB87A0E+3E4j ...
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		cmp	[ebp+var_2C], 8
		ja	loc_6CB87FCA
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB87EF9
		sub	[ebp+var_28], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_28]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB87F2C
; ---------------------------------------------------------------------------

loc_6CB87EF9:				; CODE XREF: sub_6CB87A0E+4B4j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl

loc_6CB87F2C:				; CODE XREF: sub_6CB87A0E+4E9j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB87F3F
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB88128
; ---------------------------------------------------------------------------

loc_6CB87F3F:				; CODE XREF: sub_6CB87A0E+524j
		add	[ebp+var_1C], 1

loc_6CB87F43:				; CODE XREF: sub_6CB87A0E+58Aj
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB87F43
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB88123
; ---------------------------------------------------------------------------

loc_6CB87FCA:				; CODE XREF: sub_6CB87A0E+4A7j
		mov	eax, [ebp+var_28]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_54], eax
		jmp	short loc_6CB87FE9
; ---------------------------------------------------------------------------

loc_6CB87FE1:				; CODE XREF: sub_6CB87A0E+5F1j
		add	[ebp+var_24], 1
		add	[ebp+var_C], 1

loc_6CB87FE9:				; CODE XREF: sub_6CB87A0E+5D1j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_54]
		jnb	short loc_6CB88001
		mov	eax, [ebp+var_24]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB87FE1

loc_6CB88001:				; CODE XREF: sub_6CB87A0E+5E1j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 22h
		ja	short loc_6CB8802A
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB88066
; ---------------------------------------------------------------------------

loc_6CB8802A:				; CODE XREF: sub_6CB87A0E+604j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_2C], 22h
		jmp	short loc_6CB8804F
; ---------------------------------------------------------------------------

loc_6CB8803C:				; CODE XREF: sub_6CB87A0E+648j
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB8804F:				; CODE XREF: sub_6CB87A0E+62Cj
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CB8803C
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB88066:				; CODE XREF: sub_6CB87A0E+61Aj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB88098
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB88128
; ---------------------------------------------------------------------------

loc_6CB88098:				; CODE XREF: sub_6CB87A0E+67Dj
		add	[ebp+var_1C], 1

loc_6CB8809C:				; CODE XREF: sub_6CB87A0E+6E3j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB8809C
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB87B06
; ---------------------------------------------------------------------------

loc_6CB88123:				; CODE XREF: sub_6CB87A0E+388j
					; sub_6CB87A0E+5B7j
		jmp	loc_6CB87B06
; ---------------------------------------------------------------------------

loc_6CB88128:				; CODE XREF: sub_6CB87A0E+358j
					; sub_6CB87A0E+52Cj ...
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8815B
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax

loc_6CB8815B:				; CODE XREF: sub_6CB87A0E+722j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB87A0E	endp

; Exported entry  51. lzo1b_9_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_9_compress
lzo1b_9_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB87A0E
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1b_do_compress
		leave
		retn
lzo1b_9_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB881B6(int,	int, int, int, void *)
sub_6CB881B6	proc near		; DATA XREF: lzo1b_99_compress+6o
					; .rdata:_lzo1b_99_compress_funco

Dst		= dword	ptr -68h
Val		= dword	ptr -64h
Size		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 68h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_44], eax
		mov	[esp+68h+Size],	40000h ; Size
		mov	[esp+68h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+68h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	ecx, ax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 7
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB882A8:				; CODE XREF: sub_6CB881B6+726j
					; sub_6CB881B6:loc_6CB888E1j
		mov	[ebp+var_28], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	[ebp+var_34], 8
		mov	[ebp+var_48], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_4C], eax
		mov	[ebp+var_2C], 0

loc_6CB882EB:				; CODE XREF: sub_6CB881B6+35Ej
		mov	eax, [ebp+var_30]
		mov	eax, [eax]
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	short loc_6CB8830F
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_24]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_48], eax
		cmp	[ebp+var_48], 0FFFFh
		jbe	short loc_6CB8831C

loc_6CB8830F:				; CODE XREF: sub_6CB881B6+141j
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_C]
		mov	[eax], edx
		jmp	loc_6CB88508
; ---------------------------------------------------------------------------

loc_6CB8831C:				; CODE XREF: sub_6CB881B6+157j
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_24]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB88508
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB88502
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB88502
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB88502
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB88446
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB88446
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB88446
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB88446
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB88446
		mov	eax, [ebp+var_24]
		lea	edx, [eax+1]
		mov	[ebp+var_24], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB88488

loc_6CB88446:				; CODE XREF: sub_6CB881B6+1FEj
					; sub_6CB881B6+21Ej ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_2C]
		jbe	short loc_6CB8846E
		mov	eax, [ebp+var_54]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB88486
; ---------------------------------------------------------------------------

loc_6CB8846E:				; CODE XREF: sub_6CB881B6+2A8j
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_2C]
		jnz	short loc_6CB88486
		mov	eax, [ebp+var_48]
		cmp	eax, [ebp+var_28]
		jnb	short loc_6CB88486
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB884FA
; ---------------------------------------------------------------------------

loc_6CB88486:				; CODE XREF: sub_6CB881B6+2B6j
					; sub_6CB881B6+2BEj ...
		jmp	short loc_6CB884FA
; ---------------------------------------------------------------------------

loc_6CB88488:				; CODE XREF: sub_6CB881B6+28Ej
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_50], eax
		jmp	short loc_6CB88498
; ---------------------------------------------------------------------------

loc_6CB88490:				; CODE XREF: sub_6CB881B6+2F8j
		add	[ebp+var_24], 1
		add	[ebp+var_C], 1

loc_6CB88498:				; CODE XREF: sub_6CB881B6+2D8j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_50]
		jnb	short loc_6CB884B0
		mov	eax, [ebp+var_24]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB88490

loc_6CB884B0:				; CODE XREF: sub_6CB881B6+2E8j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_4C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_2C]
		jbe	short loc_6CB884E4
		mov	eax, [ebp+var_54]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_3C]
		jb	short loc_6CB884FA
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		jmp	loc_6CB88597
; ---------------------------------------------------------------------------

loc_6CB884E4:				; CODE XREF: sub_6CB881B6+30Dj
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_2C]
		jnz	short loc_6CB884FA
		mov	eax, [ebp+var_48]
		cmp	eax, [ebp+var_28]
		jnb	short loc_6CB884FA
		mov	eax, [ebp+var_48]
		mov	[ebp+var_28], eax

loc_6CB884FA:				; CODE XREF: sub_6CB881B6+2CEj
					; sub_6CB881B6:loc_6CB88486j ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB88508
; ---------------------------------------------------------------------------

loc_6CB88502:				; CODE XREF: sub_6CB881B6+19Ej
					; sub_6CB881B6+1BEj ...
		mov	eax, [ebp+var_4C]
		mov	[ebp+var_C], eax

loc_6CB88508:				; CODE XREF: sub_6CB881B6+161j
					; sub_6CB881B6+17Ej ...
		add	[ebp+var_30], 4
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	loc_6CB882EB
		sub	[ebp+var_30], 20h
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_30]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 7
		cmp	[ebp+var_2C], 3
		jbe	short loc_6CB88544
		jmp	short loc_6CB88597
; ---------------------------------------------------------------------------

loc_6CB88544:				; CODE XREF: sub_6CB881B6+38Aj
		cmp	[ebp+var_2C], 3
		jnz	short loc_6CB88555
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB88555
		jmp	short loc_6CB88597
; ---------------------------------------------------------------------------

loc_6CB88555:				; CODE XREF: sub_6CB881B6+392j
					; sub_6CB881B6+39Bj
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB88567
		jmp	loc_6CB888E6
; ---------------------------------------------------------------------------

loc_6CB88567:				; CODE XREF: sub_6CB881B6+3AAj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB888E1
; ---------------------------------------------------------------------------

loc_6CB88597:				; CODE XREF: sub_6CB881B6+329j
					; sub_6CB881B6+38Cj ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB886A7
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB885F3
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB886A7
; ---------------------------------------------------------------------------

loc_6CB885F3:				; CODE XREF: sub_6CB881B6+402j
		cmp	[ebp+var_38], 1Fh
		ja	short loc_6CB88633
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		mov	[eax], dl

loc_6CB88607:				; CODE XREF: sub_6CB881B6+470j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB88607
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB886A7
; ---------------------------------------------------------------------------

loc_6CB88633:				; CODE XREF: sub_6CB881B6+441j
		cmp	[ebp+var_38], 117h
		ja	short loc_6CB88685
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_38]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB88659:				; CODE XREF: sub_6CB881B6+4C2j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	short loc_6CB88659
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB886A7
; ---------------------------------------------------------------------------

loc_6CB88685:				; CODE XREF: sub_6CB881B6+484j
		mov	eax, [ebp+var_38]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB886A7:				; CODE XREF: sub_6CB881B6+3E9j
					; sub_6CB881B6+438j ...
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		cmp	[ebp+var_2C], 8
		ja	loc_6CB887C9
		cmp	[ebp+var_28], 2000h
		ja	short loc_6CB886F5
		sub	[ebp+var_28], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_28]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB88728
; ---------------------------------------------------------------------------

loc_6CB886F5:				; CODE XREF: sub_6CB881B6+508j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl

loc_6CB88728:				; CODE XREF: sub_6CB881B6+53Dj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB8873B
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB888E6
; ---------------------------------------------------------------------------

loc_6CB8873B:				; CODE XREF: sub_6CB881B6+578j
		add	[ebp+var_1C], 1

loc_6CB8873F:				; CODE XREF: sub_6CB881B6+5E1j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB8873F
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB888E1
; ---------------------------------------------------------------------------

loc_6CB887C9:				; CODE XREF: sub_6CB881B6+4FBj
		cmp	[ebp+var_2C], 22h
		ja	short loc_6CB887E5
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB88821
; ---------------------------------------------------------------------------

loc_6CB887E5:				; CODE XREF: sub_6CB881B6+617j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_2C], 22h
		jmp	short loc_6CB8880A
; ---------------------------------------------------------------------------

loc_6CB887F7:				; CODE XREF: sub_6CB881B6+65Bj
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB8880A:				; CODE XREF: sub_6CB881B6+63Fj
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CB887F7
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB88821:				; CODE XREF: sub_6CB881B6+62Dj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_28]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jb	short loc_6CB88853
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB888E6
; ---------------------------------------------------------------------------

loc_6CB88853:				; CODE XREF: sub_6CB881B6+690j
		add	[ebp+var_1C], 1

loc_6CB88857:				; CODE XREF: sub_6CB881B6+6F9j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_44]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB88857
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB882A8
; ---------------------------------------------------------------------------

loc_6CB888E1:				; CODE XREF: sub_6CB881B6+3DCj
					; sub_6CB881B6+60Ej
		jmp	loc_6CB882A8
; ---------------------------------------------------------------------------

loc_6CB888E6:				; CODE XREF: sub_6CB881B6+3ACj
					; sub_6CB881B6+580j ...
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB88919
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		mov	[esp+68h+Size],	eax
		mov	eax, [ebp+var_1C]
		mov	[esp+68h+Val], eax
		mov	eax, [ebp+var_18]
		mov	[esp+68h+Dst], eax
		call	_lzo1b_store_run
		mov	[ebp+var_18], eax

loc_6CB88919:				; CODE XREF: sub_6CB881B6+738j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB881B6	endp

; Exported entry  50. lzo1b_99_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_99_compress
lzo1b_99_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB881B6
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1b_do_compress
		leave
		retn
lzo1b_99_compress endp

; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB88972(int,	void *,	size_t)
sub_6CB88972	proc near		; CODE XREF: sub_6CB88B28+D5p

Dst		= dword	ptr -18h
Src		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+3Ch], 0
		cmp	[ebp+arg_4], 0
		jz	short loc_6CB889A4
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CB889A6

loc_6CB889A4:				; CODE XREF: sub_6CB88972+2Aj
		jmp	short locret_6CB88A0C
; ---------------------------------------------------------------------------

loc_6CB889A6:				; CODE XREF: sub_6CB88972+30j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_8]
		jnb	short loc_6CB889C7
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+arg_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+arg_8], eax

loc_6CB889C7:				; CODE XREF: sub_6CB88972+3Cj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+5Ch]
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Src], eax ; Src
		mov	[esp+18h+Dst], edx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+40h], edx

locret_6CB88A0C:			; CODE XREF: sub_6CB88972:loc_6CB889A4j
		leave
		retn
sub_6CB88972	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB88A0E	proc near		; CODE XREF: sub_6CB88B28+1DDp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		sub	eax, [ebp+arg_8]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+58h], edx
		cmp	[ebp+arg_8], 0
		jz	locret_6CB88B26

loc_6CB88A37:				; CODE XREF: sub_6CB88A0E+112j
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 50h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 29414h
		mov	eax, [eax+edx*4+4]
		test	eax, eax
		jz	short loc_6CB88AB0
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 4414h
		mov	eax, [eax+edx*4+0Ch]
		jmp	short loc_6CB88AB5
; ---------------------------------------------------------------------------

loc_6CB88AB0:				; CODE XREF: sub_6CB88A0E+8Ej
		mov	eax, 0FFFFFFFFh

loc_6CB88AB5:				; CODE XREF: sub_6CB88A0E+A0j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		add	ecx, 8414h
		mov	[edx+ecx*4+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		lea	ecx, [edx+4414h]
		mov	edx, [ebp+arg_4]
		mov	[eax+ecx*4+0Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 18C14h
		mov	[eax+edx*4+8], ecx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 29414h
		mov	eax, [eax+edx*4+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 29414h
		mov	[eax+edx*4+4], ecx
		add	[ebp+arg_4], 1
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	loc_6CB88A37

locret_6CB88B26:			; CODE XREF: sub_6CB88A0E+23j
		leave
		retn
sub_6CB88A0E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB88B28(int,	void *,	size_t)
sub_6CB88B28	proc near		; CODE XREF: sub_6CB8945C+90p

Dst		= dword	ptr -28h
Val		= dword	ptr -24h
Size		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0FFFFh
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 800h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 2
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0Ch], 800h
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+18h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+50h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		mov	eax, [ebp+arg_0]
		add	eax, 0A5054h
		mov	[esp+28h+Size],	10000h ; Size
		mov	[esp+28h+Val], 0 ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+Size],	eax ; size_t
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+Val], eax ; void *
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax ; int
		call	sub_6CB88972
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+44h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+58h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+24h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+1Ch]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CB88CBE
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jbe	short loc_6CB88C60
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB88C60:				; CODE XREF: sub_6CB88B28+12Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+1Ch]
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+40h]
		lea	ebx, [ecx+50h]
		mov	ecx, [ebp+arg_0]
		add	ecx, ebx
		add	ecx, 0Ch
		mov	[esp+28h+Size],	edx ; Size
		mov	[esp+28h+Val], eax ; Src
		mov	[esp+28h+Dst], ecx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	ecx, [edx+1Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+24h]
		add	edx, ecx
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx

loc_6CB88CBE:				; CODE XREF: sub_6CB88B28+11Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CB88CD8
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0

loc_6CB88CD8:				; CODE XREF: sub_6CB88B28+1A4j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 1
		jbe	short loc_6CB88D0A
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		test	eax, eax
		jz	short loc_6CB88D0A
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		mov	[esp+28h+Size],	eax
		mov	[esp+28h+Val], 0
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax
		call	sub_6CB88A0E

loc_6CB88D0A:				; CODE XREF: sub_6CB88B28+1B9j
					; sub_6CB88B28+1C3j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+58h]
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		cmp	edx, eax
		jb	short loc_6CB88D3C
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		jmp	short loc_6CB88D5A
; ---------------------------------------------------------------------------

loc_6CB88D3C:				; CODE XREF: sub_6CB88B28+1FCj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		sub	ecx, eax
		mov	eax, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx

loc_6CB88D5A:				; CODE XREF: sub_6CB88B28+212j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		ja	short loc_6CB88D9D
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		mov	edx, [ebp+var_C]
		add	edx, 2
		mov	byte ptr [edx],	0
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	[eax], dl

loc_6CB88D9D:				; CODE XREF: sub_6CB88B28+23Bj
		mov	eax, 0
		add	esp, 24h
		pop	ebx
		pop	ebp
		retn
sub_6CB88B28	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB88DA8	proc near		; CODE XREF: sub_6CB8945C+A4p
					; sub_6CB89525+C1p
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_6CB88DA8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB88DAD	proc near		; CODE XREF: sub_6CB88F83+116p
					; sub_6CB89525+98p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jnb	short loc_6CB88DE0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+2Ch]
		mov	eax, [edx+1Ch]
		lea	ecx, [eax+1]
		mov	[edx+1Ch], ecx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		jmp	short loc_6CB88DE5
; ---------------------------------------------------------------------------

loc_6CB88DE0:				; CODE XREF: sub_6CB88DAD+1Aj
		mov	eax, 0FFFFFFFFh

loc_6CB88DE5:				; CODE XREF: sub_6CB88DAD+31j
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jns	short loc_6CB88E38
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CB88E07
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB88E07:				; CODE XREF: sub_6CB88DAD+49j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		mov	edx, [ebp+arg_0]
		mov	byte ptr [edx+eax+5Ch],	0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB88E6D
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		add	eax, edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB88E6D
; ---------------------------------------------------------------------------

loc_6CB88E38:				; CODE XREF: sub_6CB88DAD+3Fj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		mov	edx, [ebp+var_4]
		mov	ecx, edx
		mov	edx, [ebp+arg_0]
		mov	[edx+eax+5Ch], cl
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB88E6D
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		add	edx, eax
		mov	eax, [ebp+var_4]
		mov	[edx], al

loc_6CB88E6D:				; CODE XREF: sub_6CB88DAD+76j
					; sub_6CB88DAD+89j ...
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CB88E96
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0

loc_6CB88E96:				; CODE XREF: sub_6CB88DAD+DDj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+44h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CB88EBF
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0

loc_6CB88EBF:				; CODE XREF: sub_6CB88DAD+106j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short locret_6CB88EE8
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0

locret_6CB88EE8:			; CODE XREF: sub_6CB88DAD+12Fj
		leave
		retn
sub_6CB88DAD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB88EEA	proc near		; CODE XREF: sub_6CB88F83+20p
					; sub_6CB89243+20Ep

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		test	eax, eax
		jnz	short loc_6CB88F72
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 50h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 29414h
		mov	eax, [eax+edx*4+4]
		lea	ecx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 29414h
		mov	[eax+edx*4+4], ecx
		jmp	short locret_6CB88F81
; ---------------------------------------------------------------------------

loc_6CB88F72:				; CODE XREF: sub_6CB88EEA+Ej
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx

locret_6CB88F81:			; CODE XREF: sub_6CB88EEA+86j
		leave
		retn
sub_6CB88EEA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB88F83	proc near		; CODE XREF: sub_6CB89525+21p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		cmp	[ebp+arg_4], 0
		jz	locret_6CB890AC

loc_6CB88F93:				; CODE XREF: sub_6CB88F83+123j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB88EEA
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 29414h
		mov	eax, [eax+edx*4+4]
		test	eax, eax
		jz	short loc_6CB8902C
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 4414h
		mov	eax, [eax+edx*4+0Ch]
		jmp	short loc_6CB89031
; ---------------------------------------------------------------------------

loc_6CB8902C:				; CODE XREF: sub_6CB88F83+95j
		mov	eax, 0FFFFFFFFh

loc_6CB89031:				; CODE XREF: sub_6CB88F83+A7j
		mov	edx, [ebp+arg_0]
		add	ecx, 8414h
		mov	[edx+ecx*4+0Ch], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 4414h
		mov	[eax+ecx*4+0Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 18C14h
		mov	[eax+edx*4+8], ecx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 29414h
		mov	eax, [eax+edx*4+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 29414h
		mov	[eax+edx*4+4], ecx
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB88DAD
		sub	[ebp+arg_4], 1
		cmp	[ebp+arg_4], 0
		jnz	loc_6CB88F93

locret_6CB890AC:			; CODE XREF: sub_6CB88F83+Aj
		leave
		retn
sub_6CB88F83	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB890AE	proc near		; CODE XREF: sub_6CB89243+195p

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_D		= byte ptr -0Dh
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 30h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		add	eax, 5Ch
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al
		jmp	loc_6CB89230
; ---------------------------------------------------------------------------

loc_6CB8910C:				; CODE XREF: sub_6CB890AE+18Dj
		mov	eax, [ebp+var_18]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_14]
		add	eax, edx
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_8]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		cmp	al, [ebp+var_D]
		jnz	loc_6CB8921D
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_8]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	ecx, [ebp+var_4]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8921D
		mov	eax, [ebp+var_8]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8921D
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8921D
		add	[ebp+var_4], 2
		add	[ebp+var_8], 2

loc_6CB8918E:				; CODE XREF: sub_6CB890AE+FEj
		add	[ebp+var_4], 1
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CB891AE
		mov	eax, [ebp+var_4]
		movzx	edx, byte ptr [eax]
		add	[ebp+var_8], 1
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8918E

loc_6CB891AE:				; CODE XREF: sub_6CB890AE+EAj
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_C]
		jbe	short loc_6CB8921D
		mov	eax, [ebp+var_24]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB891E8
		jmp	short locret_6CB89241
; ---------------------------------------------------------------------------

loc_6CB891E8:				; CODE XREF: sub_6CB890AE+136j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+10h]
		cmp	eax, [ebp+var_C]
		ja	short loc_6CB891F5
		jmp	short locret_6CB89241
; ---------------------------------------------------------------------------

loc_6CB891F5:				; CODE XREF: sub_6CB890AE+143j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 18C14h
		mov	eax, [eax+edx*4+8]
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB8920C
		jmp	short locret_6CB89241
; ---------------------------------------------------------------------------

loc_6CB8920C:				; CODE XREF: sub_6CB890AE+15Aj
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al

loc_6CB8921D:				; CODE XREF: sub_6CB890AE+86j
					; sub_6CB890AE+A4j ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 8414h
		mov	eax, [eax+edx*4+0Ch]
		mov	[ebp+arg_4], eax

loc_6CB89230:				; CODE XREF: sub_6CB890AE+59j
		mov	eax, [ebp+arg_8]
		lea	edx, [eax-1]
		mov	[ebp+arg_8], edx
		test	eax, eax
		jnz	loc_6CB8910C

locret_6CB89241:			; CODE XREF: sub_6CB890AE+138j
					; sub_6CB890AE+145j ...
		leave
		retn
sub_6CB890AE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB89243	proc near		; CODE XREF: sub_6CB89525+75p

var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 1Ch
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 29414h
		mov	eax, [eax+ecx*4+4]
		test	eax, eax
		jz	short loc_6CB892CE
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 4414h
		mov	eax, [eax+ecx*4+0Ch]
		jmp	short loc_6CB892D3
; ---------------------------------------------------------------------------

loc_6CB892CE:				; CODE XREF: sub_6CB89243+77j
		mov	eax, 0FFFFFFFFh

loc_6CB892D3:				; CODE XREF: sub_6CB89243+89j
		mov	ecx, [ebp+arg_0]
		lea	ebx, [edx+8414h]
		mov	[ecx+ebx*4+0Ch], eax
		mov	eax, [ebp+arg_0]
		add	edx, 8414h
		mov	eax, [eax+edx*4+0Ch]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 29414h
		mov	eax, [eax+edx*4+4]
		lea	ecx, [eax+1]
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_C]
		add	ebx, 29414h
		mov	[edx+ebx*4+4], ecx
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		cmp	eax, [ebp+var_8]
		jnb	short loc_6CB89334
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_6CB89334
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_8], eax

loc_6CB89334:				; CODE XREF: sub_6CB89243+DCj
					; sub_6CB89243+E6j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 4414h
		mov	[eax+ecx*4+0Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	edx, al
		mov	eax, [ebp+arg_0]
		mov	[eax+28h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jb	short loc_6CB893B9
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jnz	short loc_6CB8938E
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0FFFFFFFFh

loc_6CB8938E:				; CODE XREF: sub_6CB89243+13Fj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 18C14h
		mov	[eax+edx*4+8], ecx
		jmp	loc_6CB89441
; ---------------------------------------------------------------------------

loc_6CB893B9:				; CODE XREF: sub_6CB89243+135j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		jbe	short loc_6CB893DD
		mov	eax, [ebp+var_8]
		mov	[esp+20h+var_18], eax
		mov	eax, [ebp+var_10]
		mov	[esp+20h+var_1C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+20h+var_20], eax
		call	sub_6CB890AE

loc_6CB893DD:				; CODE XREF: sub_6CB89243+17Fj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, [ebp+var_14]
		jbe	short loc_6CB89428
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		cmp	edx, eax
		jbe	short loc_6CB8940A
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		sub	edx, eax
		mov	eax, edx
		jmp	short loc_6CB89422
; ---------------------------------------------------------------------------

loc_6CB8940A:				; CODE XREF: sub_6CB89243+1B3j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		sub	ecx, eax
		mov	eax, ecx
		add	eax, edx

loc_6CB89422:				; CODE XREF: sub_6CB89243+1C5j
		mov	edx, [ebp+arg_0]
		mov	[edx+20h], eax

loc_6CB89428:				; CODE XREF: sub_6CB89243+1A3j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		add	ecx, 18C14h
		mov	[eax+ecx*4+8], edx

loc_6CB89441:				; CODE XREF: sub_6CB89243+171j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		mov	[esp+20h+var_1C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+20h+var_20], eax
		call	sub_6CB88EEA
		add	esp, 1Ch
		pop	ebx
		pop	ebp
		retn
sub_6CB89243	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB8945C(int,	int, void *, size_t, int)
sub_6CB8945C	proc near		; CODE XREF: lzo1b_999_compress_callback+C1p

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 1
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+14h]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+34h]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_20], eax ;	size_t
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_24], eax ;	void *
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax ;	int
		call	sub_6CB88B28
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jz	short loc_6CB8950A
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax
		call	sub_6CB88DA8
		mov	eax, [ebp+var_C]
		jmp	short locret_6CB89523
; ---------------------------------------------------------------------------

loc_6CB8950A:				; CODE XREF: sub_6CB8945C+9Cj
		mov	eax, [ebp+arg_10]
		and	eax, 1
		test	eax, eax
		setnz	al
		movzx	edx, al
		mov	eax, [ebp+arg_4]
		mov	[eax+14h], edx
		mov	eax, 0

locret_6CB89523:			; CODE XREF: sub_6CB8945C+ACj
		leave
		retn
sub_6CB8945C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB89525	proc near		; CODE XREF: lzo1b_999_compress_callback+103p
					; lzo1b_999_compress_callback+1F8p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		cmp	[ebp+arg_C], 0
		jz	short loc_6CB89568
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB88F83
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	eax, edx
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		jmp	short loc_6CB89580
; ---------------------------------------------------------------------------

loc_6CB89568:				; CODE XREF: sub_6CB89525+Bj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx

loc_6CB89580:				; CODE XREF: sub_6CB89525+41j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+1Ch], 2
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB89243
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+20h]
		mov	eax, [ebp+arg_0]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB88DAD
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+28h]
		test	eax, eax
		jns	short loc_6CB895ED
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB88DA8
		jmp	short loc_6CB895FC
; ---------------------------------------------------------------------------

loc_6CB895ED:				; CODE XREF: sub_6CB89525+A5j
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+24h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+4], edx

loc_6CB895FC:				; CODE XREF: sub_6CB89525+C6j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		neg	eax
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+18h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB8967B
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB8967B
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+30h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		cmp	edx, eax
		jbe	short loc_6CB8967B
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+arg_0]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+arg_0]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+var_10], ebx
		mov	[esp+18h+var_14], ecx
		mov	[esp+18h+var_18], edx
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		lea	edx, [eax+400h]
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx

loc_6CB8967B:				; CODE XREF: sub_6CB89525+F5j
					; sub_6CB89525+102j ...
		mov	eax, 0
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
sub_6CB89525	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB89686	proc near		; CODE XREF: lzo1b_999_compress_callback+344p

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		cmp	[ebp+arg_8], 8
		ja	short loc_6CB896DF
		cmp	[ebp+arg_C], 2000h
		ja	short loc_6CB896DF
		sub	[ebp+arg_C], 1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+arg_C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+58h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+58h], edx
		jmp	loc_6CB8976F
; ---------------------------------------------------------------------------

loc_6CB896DF:				; CODE XREF: sub_6CB89686+7j
					; sub_6CB89686+10j
		cmp	[ebp+arg_8], 22h
		ja	short loc_6CB896FB
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB89737
; ---------------------------------------------------------------------------

loc_6CB896FB:				; CODE XREF: sub_6CB89686+5Dj
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+arg_8], 22h
		jmp	short loc_6CB89720
; ---------------------------------------------------------------------------

loc_6CB8970D:				; CODE XREF: sub_6CB89686+A1j
		sub	[ebp+arg_8], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB89720:				; CODE XREF: sub_6CB89686+85j
		cmp	[ebp+arg_8], 0FFh
		ja	short loc_6CB8970D
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl

loc_6CB89737:				; CODE XREF: sub_6CB89686+73j
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4Ch], 0
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+5Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+5Ch], edx

loc_6CB8976F:				; CODE XREF: sub_6CB89686+54j
		mov	eax, [ebp+arg_4]
		pop	ebp
		retn
sub_6CB89686	endp

; Exported entry  49. lzo1b_999_compress_callback

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_999_compress_callback
lzo1b_999_compress_callback proc near	; CODE XREF: lzo1b_999_compress+38p

var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_90		= byte ptr -90h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0B4h
		lea	eax, [ebp+var_90]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+arg_0]
		mov	[eax+20h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [eax+20h]
		mov	eax, [ebp+var_24]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	edx, eax
		mov	eax, [ebp+var_24]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+arg_14]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+5Ch], 0
		mov	eax, [ebp+var_24]
		mov	edx, [eax+5Ch]
		mov	eax, [ebp+var_24]
		mov	[eax+58h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [eax+58h]
		mov	eax, [ebp+var_24]
		mov	[eax+54h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [eax+54h]
		mov	eax, [ebp+var_24]
		mov	[eax+50h], edx
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_24]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_10], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+4Ch], 0
		mov	[esp+0B8h+var_A8], 0 ; int
		mov	[esp+0B8h+var_AC], 0 ; size_t
		mov	[esp+0B8h+var_B0], 0 ; void *
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax ; int
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax ; int
		call	sub_6CB8945C
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 0
		jz	short loc_6CB8984B
		mov	eax, [ebp+var_2C]
		jmp	loc_6CB89BBB
; ---------------------------------------------------------------------------

loc_6CB8984B:				; CODE XREF: lzo1b_999_compress_callback+CDj
		cmp	[ebp+arg_18], 0
		jz	short loc_6CB8985A
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_18]
		mov	[eax+0Ch], edx

loc_6CB8985A:				; CODE XREF: lzo1b_999_compress_callback+DBj
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], 0
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB89525
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 0
		jz	short loc_6CB8988D
		mov	eax, [ebp+var_2C]
		jmp	loc_6CB89BBB
; ---------------------------------------------------------------------------

loc_6CB8988D:				; CODE XREF: lzo1b_999_compress_callback+10Fj
		jmp	loc_6CB89AF8
; ---------------------------------------------------------------------------

loc_6CB89892:				; CODE XREF: lzo1b_999_compress_callback+38Cj
		mov	[ebp+var_1C], 0FFFFFFFFh
		mov	[ebp+var_20], 0
		mov	eax, [ebp+var_24]
		mov	eax, [eax+8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_24]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_30], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB898CB
		mov	eax, [ebp+var_24]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		neg	eax
		add	eax, edx
		mov	[ebp+var_10], eax

loc_6CB898CB:				; CODE XREF: lzo1b_999_compress_callback+142j
		cmp	[ebp+var_18], 2
		jbe	short loc_6CB898E0
		cmp	[ebp+var_18], 3
		ja	short loc_6CB898E9
		cmp	[ebp+var_30], 2000h
		jbe	short loc_6CB898E9

loc_6CB898E0:				; CODE XREF: lzo1b_999_compress_callback+15Bj
		mov	[ebp+var_18], 0
		jmp	short loc_6CB8992D
; ---------------------------------------------------------------------------

loc_6CB898E9:				; CODE XREF: lzo1b_999_compress_callback+161j
					; lzo1b_999_compress_callback+16Aj
		cmp	[ebp+var_14], 0
		jz	short loc_6CB89912
		cmp	[ebp+var_14], 1
		jnz	short loc_6CB89909
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4Ch]
		cmp	eax, 3
		jnz	short loc_6CB89909
		mov	[ebp+var_1C], 0FFFFFFFFh
		jmp	short loc_6CB8992D
; ---------------------------------------------------------------------------

loc_6CB89909:				; CODE XREF: lzo1b_999_compress_callback+17Fj
					; lzo1b_999_compress_callback+18Aj
		mov	[ebp+var_1C], 1
		jmp	short loc_6CB8992D
; ---------------------------------------------------------------------------

loc_6CB89912:				; CODE XREF: lzo1b_999_compress_callback+179j
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4Ch]
		cmp	eax, 3
		jnz	short loc_6CB89926
		mov	[ebp+var_1C], 0
		jmp	short loc_6CB8992D
; ---------------------------------------------------------------------------

loc_6CB89926:				; CODE XREF: lzo1b_999_compress_callback+1A7j
		mov	[ebp+var_1C], 0FFFFFFFFh

loc_6CB8992D:				; CODE XREF: lzo1b_999_compress_callback+173j
					; lzo1b_999_compress_callback+193j ...
		cmp	[ebp+var_18], 0
		jnz	short loc_6CB8993A
		mov	[ebp+var_1C], 0FFFFFFFFh

loc_6CB8993A:				; CODE XREF: lzo1b_999_compress_callback+1BDj
		cmp	[ebp+var_1C], 0
		js	loc_6CB899C5
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB899C5
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], 1
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB89525
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_18], 8
		ja	short loc_6CB89994
		cmp	[ebp+var_30], 2000h
		ja	short loc_6CB89994
		mov	eax, [ebp+var_24]
		mov	eax, [eax+0Ch]
		cmp	eax, 2000h
		jbe	short loc_6CB89994
		add	[ebp+var_1C], 1

loc_6CB89994:				; CODE XREF: lzo1b_999_compress_callback+204j
					; lzo1b_999_compress_callback+20Dj ...
		mov	eax, [ebp+var_24]
		mov	eax, [eax+8]
		mov	ecx, [ebp+var_1C]
		mov	edx, [ebp+var_18]
		add	edx, ecx
		cmp	eax, edx
		jb	short loc_6CB899BE
		mov	eax, [ebp+var_24]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_24]
		mov	[eax+48h], edx
		add	[ebp+var_14], 1
		jmp	loc_6CB89AF8
; ---------------------------------------------------------------------------

loc_6CB899BE:				; CODE XREF: lzo1b_999_compress_callback+230j
		mov	[ebp+var_20], 1

loc_6CB899C5:				; CODE XREF: lzo1b_999_compress_callback+1CAj
					; lzo1b_999_compress_callback+1D9j
		cmp	[ebp+var_18], 0
		jnz	short loc_6CB899F9
		add	[ebp+var_14], 1
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], 1
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB89525
		mov	[ebp+var_2C], eax
		jmp	loc_6CB89AE6
; ---------------------------------------------------------------------------

loc_6CB899F9:				; CODE XREF: lzo1b_999_compress_callback+255j
		cmp	[ebp+var_14], 0
		jz	loc_6CB89A93
		cmp	[ebp+var_14], 1
		jnz	short loc_6CB89A50
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4Ch]
		cmp	eax, 3
		jnz	short loc_6CB89A50
		mov	eax, [ebp+var_C]
		sub	eax, 2
		mov	edx, [ebp+var_C]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_24]
		mov	eax, [eax+50h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_24]
		mov	[eax+50h], edx
		jmp	short loc_6CB89A6C
; ---------------------------------------------------------------------------

loc_6CB89A50:				; CODE XREF: lzo1b_999_compress_callback+293j
					; lzo1b_999_compress_callback+29Ej
		mov	eax, [ebp+var_14]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0B8h+var_B8], eax
		call	_lzo1b_store_run
		mov	[ebp+var_C], eax

loc_6CB89A6C:				; CODE XREF: lzo1b_999_compress_callback+2DAj
		cmp	[ebp+var_14], 117h
		ja	short loc_6CB89A80
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+var_18]
		mov	[eax+4Ch], edx
		jmp	short loc_6CB89A8A
; ---------------------------------------------------------------------------

loc_6CB89A80:				; CODE XREF: lzo1b_999_compress_callback+2FFj
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+4Ch], 0

loc_6CB89A8A:				; CODE XREF: lzo1b_999_compress_callback+30Aj
		mov	[ebp+var_14], 0
		jmp	short loc_6CB89A9D
; ---------------------------------------------------------------------------

loc_6CB89A93:				; CODE XREF: lzo1b_999_compress_callback+289j
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+4Ch], 0

loc_6CB89A9D:				; CODE XREF: lzo1b_999_compress_callback+31Dj
		mov	eax, [ebp+var_30]
		mov	[esp+0B8h+var_AC], eax
		mov	eax, [ebp+var_18]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB89686
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[esp+0B8h+var_AC], eax
		mov	eax, [ebp+var_18]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB89525
		mov	[ebp+var_2C], eax

loc_6CB89AE6:				; CODE XREF: lzo1b_999_compress_callback+280j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_24]
		mov	[eax+34h], edx

loc_6CB89AF8:				; CODE XREF: lzo1b_999_compress_callback:loc_6CB8988Dj
					; lzo1b_999_compress_callback+245j
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		test	eax, eax
		jnz	loc_6CB89892
		cmp	[ebp+var_14], 0
		jz	short loc_6CB89B28
		mov	eax, [ebp+var_14]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0B8h+var_B8], eax
		call	_lzo1b_store_run
		mov	[ebp+var_C], eax

loc_6CB89B28:				; CODE XREF: lzo1b_999_compress_callback+396j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	21h
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_24]
		mov	[eax+34h], edx
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_24]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB89BB6
		mov	eax, [ebp+var_24]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB89BB6
		mov	eax, [ebp+var_24]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+var_24]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+var_24]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+var_24]
		mov	edx, [edx+2Ch]
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], ebx
		mov	[esp+0B8h+var_B4], ecx
		mov	[esp+0B8h+var_B8], edx
		call	eax

loc_6CB89BB6:				; CODE XREF: lzo1b_999_compress_callback+403j
					; lzo1b_999_compress_callback+410j
		mov	eax, 0

loc_6CB89BBB:				; CODE XREF: lzo1b_999_compress_callback+D2j
					; lzo1b_999_compress_callback+114j
		add	esp, 0B4h
		pop	ebx
		pop	ebp
		retn
lzo1b_999_compress_callback endp

; Exported entry  48. lzo1b_999_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_999_compress
lzo1b_999_compress proc	near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_10], 0
		mov	[esp+28h+var_14], 0
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	lzo1b_999_compress_callback
		leave
		retn
lzo1b_999_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  15. _lzo1b_do_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _lzo1b_do_compress
_lzo1b_do_compress proc	near		; CODE XREF: lzo1b_1_compress+30p
					; lzo1b_2_compress+30p	...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		cmp	[ebp+arg_4], 0
		jnz	short loc_6CB89C2C
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	[ebp+var_C], 0
		jmp	short loc_6CB89CA0
; ---------------------------------------------------------------------------

loc_6CB89C2C:				; CODE XREF: _lzo1b_do_compress+Aj
		cmp	[ebp+arg_4], 0Ah
		ja	short loc_6CB89C76
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_38], eax
		call	_lzo1b_store_run
		mov	edx, eax
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_4]
		jbe	short loc_6CB89C6C
		mov	eax, 0
		jmp	short loc_6CB89C71
; ---------------------------------------------------------------------------

loc_6CB89C6C:				; CODE XREF: _lzo1b_do_compress+55j
		mov	eax, 0FFFFFFFFh

loc_6CB89C71:				; CODE XREF: _lzo1b_do_compress+5Cj
		mov	[ebp+var_C], eax
		jmp	short loc_6CB89CA0
; ---------------------------------------------------------------------------

loc_6CB89C76:				; CODE XREF: _lzo1b_do_compress+22j
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax
		mov	eax, [ebp+arg_14]
		call	eax
		mov	[ebp+var_C], eax

loc_6CB89CA0:				; CODE XREF: _lzo1b_do_compress+1Cj
					; _lzo1b_do_compress+66j
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB89CD8
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		mov	byte ptr [eax],	21h
		mov	eax, [ebp+var_10]
		add	eax, 1
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		add	eax, 2
		mov	byte ptr [eax],	0
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		lea	edx, [eax+3]
		mov	eax, [ebp+arg_C]
		mov	[eax], edx

loc_6CB89CD8:				; CODE XREF: _lzo1b_do_compress+96j
		mov	eax, [ebp+var_C]
		leave
		retn
_lzo1b_do_compress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  53. lzo1b_decompress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_decompress
lzo1b_decompress proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax

loc_6CB89D07:				; CODE XREF: lzo1b_decompress+259j
					; lzo1b_decompress:loc_6CB8A0B5j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 1Fh
		ja	loc_6CB89EB4
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB89DA7
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0F7h
		jbe	short loc_6CB89DA3
		sub	[ebp+var_C], 0F8h
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB89D5A
		mov	[ebp+var_C], 118h
		jmp	short loc_6CB89D74
; ---------------------------------------------------------------------------

loc_6CB89D5A:				; CODE XREF: lzo1b_decompress+65j
		mov	[ebp+var_14], 100h

loc_6CB89D61:				; CODE XREF: lzo1b_decompress+82j
		shl	[ebp+var_14], 1
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB89D61
		mov	eax, [ebp+var_14]
		mov	[ebp+var_C], eax

loc_6CB89D74:				; CODE XREF: lzo1b_decompress+6Ej
					; lzo1b_decompress+B2j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		mov	eax, [ebp+var_4]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_8]
		mov	eax, [eax+4]
		mov	[edx], eax
		add	[ebp+var_4], 8
		add	[ebp+var_8], 8
		sub	[ebp+var_C], 8
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB89D74
		jmp	loc_6CB8A0B5
; ---------------------------------------------------------------------------

loc_6CB89DA3:				; CODE XREF: lzo1b_decompress+58j
		add	[ebp+var_C], 20h

loc_6CB89DA7:				; CODE XREF: lzo1b_decompress+3Dj
		cmp	[ebp+var_C], 3
		jbe	short loc_6CB89DF2

loc_6CB89DAD:				; CODE XREF: lzo1b_decompress+DDj
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB89DAD
		cmp	[ebp+var_C], 0
		jz	short loc_6CB89E13

loc_6CB89DCF:				; CODE XREF: lzo1b_decompress+104j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB89DCF
		jmp	short loc_6CB89E13
; ---------------------------------------------------------------------------

loc_6CB89DF2:				; CODE XREF: lzo1b_decompress+C1j
					; lzo1b_decompress+127j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB89DF2

loc_6CB89E13:				; CODE XREF: lzo1b_decompress+E3j
					; lzo1b_decompress+106j ...
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 1Fh
		jbe	short loc_6CB89E30
		jmp	loc_6CB89EB4
; ---------------------------------------------------------------------------

loc_6CB89E30:				; CODE XREF: lzo1b_decompress+13Fj
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, [ebp+var_C]
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB89E13
; ---------------------------------------------------------------------------

loc_6CB89EB4:				; CODE XREF: lzo1b_decompress+33j
					; lzo1b_decompress+141j
		cmp	[ebp+var_C], 3Fh
		jbe	loc_6CB89F48
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		and	eax, 1Fh
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, ecx
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB89F22:				; CODE XREF: lzo1b_decompress+257j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB89F22
		jmp	loc_6CB89D07
; ---------------------------------------------------------------------------

loc_6CB89F48:				; CODE XREF: lzo1b_decompress+1CEj
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB89F83
		jmp	short loc_6CB89F5F
; ---------------------------------------------------------------------------

loc_6CB89F54:				; CODE XREF: lzo1b_decompress+27Dj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CB89F5F:				; CODE XREF: lzo1b_decompress+268j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB89F54
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CB89F83:				; CODE XREF: lzo1b_decompress+266j
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 8
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CB89FDF
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jz	loc_6CB8A0D0
		jmp	loc_6CB8A0BA
; ---------------------------------------------------------------------------

loc_6CB89FDF:				; CODE XREF: lzo1b_decompress+2D0j
		cmp	[ebp+var_C], 4
		jbe	short loc_6CB8A04F
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CB8A04F
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 1

loc_6CB8A00A:				; CODE XREF: lzo1b_decompress+33Aj
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB8A00A
		cmp	[ebp+var_C], 0
		jz	short loc_6CB8A04D

loc_6CB8A02C:				; CODE XREF: lzo1b_decompress+361j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A02C

loc_6CB8A04D:				; CODE XREF: lzo1b_decompress+340j
		jmp	short loc_6CB8A0B5
; ---------------------------------------------------------------------------

loc_6CB8A04F:				; CODE XREF: lzo1b_decompress+2F9j
					; lzo1b_decompress+308j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB8A094:				; CODE XREF: lzo1b_decompress+3C9j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A094

loc_6CB8A0B5:				; CODE XREF: lzo1b_decompress+B4j
					; lzo1b_decompress:loc_6CB8A04Dj
		jmp	loc_6CB89D07
; ---------------------------------------------------------------------------

loc_6CB8A0BA:				; CODE XREF: lzo1b_decompress+2F0j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jnb	short loc_6CB8A0C9
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CB8A0D5
; ---------------------------------------------------------------------------

loc_6CB8A0C9:				; CODE XREF: lzo1b_decompress+3D6j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB8A0D5
; ---------------------------------------------------------------------------

loc_6CB8A0D0:				; CODE XREF: lzo1b_decompress+2EAj
		mov	eax, 0

locret_6CB8A0D5:			; CODE XREF: lzo1b_decompress+3DDj
					; lzo1b_decompress+3E4j
		leave
		retn
lzo1b_decompress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  54. lzo1b_decompress_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_decompress_safe
lzo1b_decompress_safe proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		jmp	loc_6CB8A637
; ---------------------------------------------------------------------------

loc_6CB8A111:				; CODE XREF: lzo1b_decompress_safe+55Bj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 1Fh
		ja	loc_6CB8A37D
		cmp	[ebp+var_C], 0
		jnz	loc_6CB8A1F0
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB8A146
		jmp	loc_6CB8A678
; ---------------------------------------------------------------------------

loc_6CB8A146:				; CODE XREF: lzo1b_decompress_safe+5Dj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0F7h
		jbe	loc_6CB8A1EC
		sub	[ebp+var_C], 0F8h
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A17B
		mov	[ebp+var_C], 118h
		jmp	short loc_6CB8A195
; ---------------------------------------------------------------------------

loc_6CB8A17B:				; CODE XREF: lzo1b_decompress_safe+8Ej
		mov	[ebp+var_14], 100h

loc_6CB8A182:				; CODE XREF: lzo1b_decompress_safe+ABj
		shl	[ebp+var_14], 1
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A182
		mov	eax, [ebp+var_14]
		mov	[ebp+var_C], eax

loc_6CB8A195:				; CODE XREF: lzo1b_decompress_safe+97j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB8A1A9
		jmp	loc_6CB8A678
; ---------------------------------------------------------------------------

loc_6CB8A1A9:				; CODE XREF: lzo1b_decompress_safe+C0j
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB8A1BD
		jmp	loc_6CB8A690
; ---------------------------------------------------------------------------

loc_6CB8A1BD:				; CODE XREF: lzo1b_decompress_safe+D4j
					; lzo1b_decompress_safe+103j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		mov	eax, [ebp+var_4]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_8]
		mov	eax, [eax+4]
		mov	[edx], eax
		add	[ebp+var_4], 8
		add	[ebp+var_8], 8
		sub	[ebp+var_C], 8
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A1BD
		jmp	loc_6CB8A637
; ---------------------------------------------------------------------------

loc_6CB8A1EC:				; CODE XREF: lzo1b_decompress_safe+7Dj
		add	[ebp+var_C], 20h

loc_6CB8A1F0:				; CODE XREF: lzo1b_decompress_safe+4Fj
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB8A204
		jmp	loc_6CB8A678
; ---------------------------------------------------------------------------

loc_6CB8A204:				; CODE XREF: lzo1b_decompress_safe+11Bj
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB8A218
		jmp	loc_6CB8A690
; ---------------------------------------------------------------------------

loc_6CB8A218:				; CODE XREF: lzo1b_decompress_safe+12Fj
		cmp	[ebp+var_C], 3
		jbe	short loc_6CB8A266

loc_6CB8A21E:				; CODE XREF: lzo1b_decompress_safe+156j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB8A21E
		cmp	[ebp+var_C], 0
		jz	short loc_6CB8A287

loc_6CB8A240:				; CODE XREF: lzo1b_decompress_safe+17Dj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A240
		jmp	loc_6CB8A36C
; ---------------------------------------------------------------------------

loc_6CB8A266:				; CODE XREF: lzo1b_decompress_safe+13Aj
					; lzo1b_decompress_safe+1A3j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A266

loc_6CB8A287:				; CODE XREF: lzo1b_decompress_safe+15Cj
		jmp	loc_6CB8A36C
; ---------------------------------------------------------------------------

loc_6CB8A28C:				; CODE XREF: lzo1b_decompress_safe+290j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 1Fh
		jbe	short loc_6CB8A2A9
		jmp	loc_6CB8A37D
; ---------------------------------------------------------------------------

loc_6CB8A2A9:				; CODE XREF: lzo1b_decompress_safe+1C0j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB8A2BD
		jmp	loc_6CB8A678
; ---------------------------------------------------------------------------

loc_6CB8A2BD:				; CODE XREF: lzo1b_decompress_safe+1D4j
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		ja	short loc_6CB8A2D1
		jmp	loc_6CB8A690
; ---------------------------------------------------------------------------

loc_6CB8A2D1:				; CODE XREF: lzo1b_decompress_safe+1E8j
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, [ebp+var_C]
		neg	eax
		add	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB8A6A8
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB8A6A8
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB8A36C:				; CODE XREF: lzo1b_decompress_safe+17Fj
					; lzo1b_decompress_safe:loc_6CB8A287j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jb	loc_6CB8A28C
		jmp	loc_6CB8A643
; ---------------------------------------------------------------------------

loc_6CB8A37D:				; CODE XREF: lzo1b_decompress_safe+45j
					; lzo1b_decompress_safe+1C2j
		cmp	[ebp+var_C], 3Fh
		jbe	loc_6CB8A455
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB8A396
		jmp	loc_6CB8A678
; ---------------------------------------------------------------------------

loc_6CB8A396:				; CODE XREF: lzo1b_decompress_safe+2ADj
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		and	eax, 1Fh
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, ecx
		neg	eax
		add	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB8A6A8
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB8A6A8
		mov	eax, [ebp+var_C]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CB8A401
		jmp	loc_6CB8A690
; ---------------------------------------------------------------------------

loc_6CB8A401:				; CODE XREF: lzo1b_decompress_safe+318j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB8A42F:				; CODE XREF: lzo1b_decompress_safe+36Cj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A42F
		jmp	loc_6CB8A637
; ---------------------------------------------------------------------------

loc_6CB8A455:				; CODE XREF: lzo1b_decompress_safe+29Fj
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A4BC
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB8A46E
		jmp	loc_6CB8A678
; ---------------------------------------------------------------------------

loc_6CB8A46E:				; CODE XREF: lzo1b_decompress_safe+385j
		jmp	short loc_6CB8A498
; ---------------------------------------------------------------------------

loc_6CB8A470:				; CODE XREF: lzo1b_decompress_safe+3BEj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CB8A489
		jmp	loc_6CB8A690
; ---------------------------------------------------------------------------

loc_6CB8A489:				; CODE XREF: lzo1b_decompress_safe+3A0j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB8A498
		jmp	loc_6CB8A678
; ---------------------------------------------------------------------------

loc_6CB8A498:				; CODE XREF: lzo1b_decompress_safe:loc_6CB8A46Ej
					; lzo1b_decompress_safe+3AFj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB8A470
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CB8A4BC:				; CODE XREF: lzo1b_decompress_safe+37Bj
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB8A4D0
		jmp	loc_6CB8A678
; ---------------------------------------------------------------------------

loc_6CB8A4D0:				; CODE XREF: lzo1b_decompress_safe+3E7j
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 8
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CB8A52C
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jz	loc_6CB8A671
		jmp	loc_6CB8A65B
; ---------------------------------------------------------------------------

loc_6CB8A52C:				; CODE XREF: lzo1b_decompress_safe+425j
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB8A6A8
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB8A6A8
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB8A561
		jmp	loc_6CB8A690
; ---------------------------------------------------------------------------

loc_6CB8A561:				; CODE XREF: lzo1b_decompress_safe+478j
		cmp	[ebp+var_C], 4
		jbe	short loc_6CB8A5D1
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CB8A5D1
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 1

loc_6CB8A58C:				; CODE XREF: lzo1b_decompress_safe+4C4j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB8A58C
		cmp	[ebp+var_C], 0
		jz	short loc_6CB8A5CF

loc_6CB8A5AE:				; CODE XREF: lzo1b_decompress_safe+4EBj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A5AE

loc_6CB8A5CF:				; CODE XREF: lzo1b_decompress_safe+4CAj
		jmp	short loc_6CB8A637
; ---------------------------------------------------------------------------

loc_6CB8A5D1:				; CODE XREF: lzo1b_decompress_safe+483j
					; lzo1b_decompress_safe+492j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB8A616:				; CODE XREF: lzo1b_decompress_safe+553j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A616

loc_6CB8A637:				; CODE XREF: lzo1b_decompress_safe+2Aj
					; lzo1b_decompress_safe+105j ...
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jb	loc_6CB8A111

loc_6CB8A643:				; CODE XREF: lzo1b_decompress_safe+296j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFF9h
		jmp	short locret_6CB8A6BE
; ---------------------------------------------------------------------------

loc_6CB8A65B:				; CODE XREF: lzo1b_decompress_safe+445j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jnb	short loc_6CB8A66A
		mov	eax, 0FFFFFFF8h
		jmp	short loc_6CB8A676
; ---------------------------------------------------------------------------

loc_6CB8A66A:				; CODE XREF: lzo1b_decompress_safe+57Fj
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB8A6BE
; ---------------------------------------------------------------------------

loc_6CB8A671:				; CODE XREF: lzo1b_decompress_safe+43Fj
		mov	eax, 0

loc_6CB8A676:				; CODE XREF: lzo1b_decompress_safe+586j
		jmp	short locret_6CB8A6BE
; ---------------------------------------------------------------------------

loc_6CB8A678:				; CODE XREF: lzo1b_decompress_safe+5Fj
					; lzo1b_decompress_safe+C2j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB8A6BE
; ---------------------------------------------------------------------------

loc_6CB8A690:				; CODE XREF: lzo1b_decompress_safe+D6j
					; lzo1b_decompress_safe+131j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFBh
		jmp	short locret_6CB8A6BE
; ---------------------------------------------------------------------------

loc_6CB8A6A8:				; CODE XREF: lzo1b_decompress_safe+21Aj
					; lzo1b_decompress_safe+228j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFAh

locret_6CB8A6BE:			; CODE XREF: lzo1b_decompress_safe+577j
					; lzo1b_decompress_safe+58Dj ...
		leave
		retn
lzo1b_decompress_safe endp

; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  16. _lzo1b_store_run

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _lzo1b_store_run
_lzo1b_store_run proc near		; CODE XREF: sub_6CB81DEA+38p
					; sub_6CB81E81+42Ap ...

Dst		= dword	ptr -38h
Src		= dword	ptr -34h
Size		= dword	ptr -30h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_10], eax
		cmp	[ebp+arg_8], 1FFh
		jbe	loc_6CB8A7B0
		mov	[ebp+var_18], 6
		mov	[ebp+var_1C], 8000h
		jmp	short loc_6CB8A73C
; ---------------------------------------------------------------------------

loc_6CB8A6F9:				; CODE XREF: _lzo1b_store_run+7Ej
		mov	eax, [ebp+var_14]
		sub	[ebp+arg_8], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0FFh
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax

loc_6CB8A73C:				; CODE XREF: _lzo1b_store_run+2Dj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+arg_8]
		jbe	short loc_6CB8A6F9
		shr	[ebp+var_1C], 1

loc_6CB8A74D:				; CODE XREF: _lzo1b_store_run+E4j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+arg_8]
		ja	short loc_6CB8A7A3
		mov	eax, [ebp+var_14]
		sub	[ebp+arg_8], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		sub	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax

loc_6CB8A7A3:				; CODE XREF: _lzo1b_store_run+8Fj
		shr	[ebp+var_1C], 1
		sub	[ebp+var_18], 1
		cmp	[ebp+var_18], 0
		jnz	short loc_6CB8A74D

loc_6CB8A7B0:				; CODE XREF: _lzo1b_store_run+19j
		jmp	short loc_6CB8A7F5
; ---------------------------------------------------------------------------

loc_6CB8A7B2:				; CODE XREF: _lzo1b_store_run+138j
		mov	eax, [ebp+var_14]
		sub	[ebp+arg_8], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0F8h
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax

loc_6CB8A7F5:				; CODE XREF: _lzo1b_store_run:loc_6CB8A7B0j
		mov	[ebp+var_14], 118h
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+arg_8]
		jbe	short loc_6CB8A7B2
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 1Fh
		jbe	short loc_6CB8A850
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_14]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8A82D:				; CODE XREF: _lzo1b_store_run+182j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB8A82D
		jmp	short loc_6CB8A885
; ---------------------------------------------------------------------------

loc_6CB8A850:				; CODE XREF: _lzo1b_store_run+144j
		cmp	[ebp+var_14], 0
		jz	short loc_6CB8A885
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_14]
		mov	[eax], dl

loc_6CB8A864:				; CODE XREF: _lzo1b_store_run+1B9j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB8A864

loc_6CB8A885:				; CODE XREF: _lzo1b_store_run+184j
					; _lzo1b_store_run+18Aj
		mov	eax, [ebp+var_C]
		leave
		retn
_lzo1b_store_run endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8A896	proc near		; CODE XREF: lzo1b_compress+Cp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		cmp	[ebp+arg_0], 0
		jle	short loc_6CB8A8A8
		cmp	[ebp+arg_0], 9
		jle	short loc_6CB8A8BE

loc_6CB8A8A8:				; CODE XREF: sub_6CB8A896+Aj
		cmp	[ebp+arg_0], 0FFFFFFFFh
		jnz	short loc_6CB8A8B7
		mov	[ebp+arg_0], 1
		jmp	short loc_6CB8A8BE
; ---------------------------------------------------------------------------

loc_6CB8A8B7:				; CODE XREF: sub_6CB8A896+16j
		mov	eax, 0
		jmp	short locret_6CB8A8D3
; ---------------------------------------------------------------------------

loc_6CB8A8BE:				; CODE XREF: sub_6CB8A896+10j
					; sub_6CB8A896+1Fj
		mov	eax, [ebp+arg_0]
		sub	eax, 1
		mov	eax, ds:off_6CBA7060[eax*4]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	eax, [eax]

locret_6CB8A8D3:			; CODE XREF: sub_6CB8A896+26j
		leave
		retn
sub_6CB8A896	endp

; Exported entry  52. lzo1b_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1b_compress
lzo1b_compress	proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	eax, [ebp+arg_14]
		mov	[esp+38h+var_38], eax
		call	sub_6CB8A896
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB8A8F6
		mov	eax, 0FFFFFFFFh
		jmp	short locret_6CB8A924
; ---------------------------------------------------------------------------

loc_6CB8A8F6:				; CODE XREF: lzo1b_compress+18j
		mov	eax, [ebp+var_C]
		mov	[esp+38h+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax
		call	_lzo1b_do_compress

locret_6CB8A924:			; CODE XREF: lzo1b_compress+1Fj
		leave
		retn
lzo1b_compress	endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8A932	proc near		; DATA XREF: lzo1c_1_compress+6o
					; .rdata:_lzo1c_1_compress_funco

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		add	[ebp+var_C], 1

loc_6CB8A97C:				; CODE XREF: sub_6CB8A932+59Dj
					; sub_6CB8A932:loc_6CB8AED4j
		mov	[ebp+var_24], 0
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8AA21
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_20]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	short loc_6CB8AA21
		cmp	[ebp+var_24], 3FFFh
		jbe	short loc_6CB8AA28

loc_6CB8AA21:				; CODE XREF: sub_6CB8A932+D1j
					; sub_6CB8A932+E4j
		mov	eax, 1
		jmp	short loc_6CB8AA2D
; ---------------------------------------------------------------------------

loc_6CB8AA28:				; CODE XREF: sub_6CB8A932+EDj
		mov	eax, 0

loc_6CB8AA2D:				; CODE XREF: sub_6CB8A932+F4j
		test	eax, eax
		jz	short loc_6CB8AA36
		jmp	loc_6CB8AB52
; ---------------------------------------------------------------------------

loc_6CB8AA36:				; CODE XREF: sub_6CB8A932+FDj
		cmp	[ebp+var_24], 2000h
		jbe	loc_6CB8AAED
		mov	eax, [ebp+var_20]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	loc_6CB8AAED
		mov	eax, [ebp+var_28]
		and	eax, 7FFh
		xor	eax, 201Fh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8AAB7
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_20]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	short loc_6CB8AAB7
		cmp	[ebp+var_24], 3FFFh
		jbe	short loc_6CB8AABE

loc_6CB8AAB7:				; CODE XREF: sub_6CB8A932+167j
					; sub_6CB8A932+17Aj
		mov	eax, 1
		jmp	short loc_6CB8AAC3
; ---------------------------------------------------------------------------

loc_6CB8AABE:				; CODE XREF: sub_6CB8A932+183j
		mov	eax, 0

loc_6CB8AAC3:				; CODE XREF: sub_6CB8A932+18Aj
		test	eax, eax
		jz	short loc_6CB8AACC
		jmp	loc_6CB8AB52
; ---------------------------------------------------------------------------

loc_6CB8AACC:				; CODE XREF: sub_6CB8A932+193j
		cmp	[ebp+var_24], 2000h
		jbe	short loc_6CB8AAED
		mov	eax, [ebp+var_20]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8AAED
		jmp	short loc_6CB8AB52
; ---------------------------------------------------------------------------

loc_6CB8AAED:				; CODE XREF: sub_6CB8A932+10Bj
					; sub_6CB8A932+125j ...
		mov	eax, [ebp+var_20]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB8AB52
		mov	eax, [ebp+var_20]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB8AB52
		mov	eax, [ebp+var_20]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB8AB52
		add	[ebp+var_20], 3
		nop
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	loc_6CB8ACA7
		jmp	short loc_6CB8AB7C
; ---------------------------------------------------------------------------

loc_6CB8AB52:				; CODE XREF: sub_6CB8A932+FFj
					; sub_6CB8A932+195j ...
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_38]
		jb	short loc_6CB8AB77
		jmp	loc_6CB8AED9
; ---------------------------------------------------------------------------

loc_6CB8AB77:				; CODE XREF: sub_6CB8A932+23Ej
		jmp	loc_6CB8AED4
; ---------------------------------------------------------------------------

loc_6CB8AB7C:				; CODE XREF: sub_6CB8A932+21Ej
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_18]
		jnz	short loc_6CB8ABCA
		mov	eax, [ebp+var_10]
		sub	eax, 2
		mov	edx, [ebp+var_10]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	loc_6CB8ACA7
; ---------------------------------------------------------------------------

loc_6CB8ABCA:				; CODE XREF: sub_6CB8A932+25Dj
		cmp	[ebp+var_30], 1Fh
		ja	short loc_6CB8AC33
		cmp	[ebp+var_30], 3
		ja	short loc_6CB8ABF9
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_1C]
		jnz	short loc_6CB8ABF9
		mov	eax, [ebp+var_1C]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_1C]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_30]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB8AC07
; ---------------------------------------------------------------------------

loc_6CB8ABF9:				; CODE XREF: sub_6CB8A932+2A2j
					; sub_6CB8A932+2AAj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_30]
		mov	[eax], dl

loc_6CB8AC07:				; CODE XREF: sub_6CB8A932+2C5j
					; sub_6CB8A932+2F4j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_30], 1
		cmp	[ebp+var_30], 0
		jnz	short loc_6CB8AC07
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB8ACA7
; ---------------------------------------------------------------------------

loc_6CB8AC33:				; CODE XREF: sub_6CB8A932+29Cj
		cmp	[ebp+var_30], 117h
		ja	short loc_6CB8AC85
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_30]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8AC59:				; CODE XREF: sub_6CB8A932+346j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_30], 1
		cmp	[ebp+var_30], 0
		jnz	short loc_6CB8AC59
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB8ACA7
; ---------------------------------------------------------------------------

loc_6CB8AC85:				; CODE XREF: sub_6CB8A932+308j
		mov	eax, [ebp+var_30]
		mov	[esp+58h+var_50], eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+var_54], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+var_58], eax
		call	_lzo1c_store_run
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax

loc_6CB8ACA7:				; CODE XREF: sub_6CB8A932+218j
					; sub_6CB8A932+293j ...
		add	[ebp+var_C], 3
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8AD5B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8AD5B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8AD5B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8AD5B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8AD5B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	loc_6CB8AE04

loc_6CB8AD5B:				; CODE XREF: sub_6CB8A932+393j
					; sub_6CB8A932+3B3j ...
		sub	[ebp+var_C], 1
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_24], 2000h
		ja	short loc_6CB8ADAA
		sub	[ebp+var_24], 1
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_24]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8ADE6
; ---------------------------------------------------------------------------

loc_6CB8ADAA:				; CODE XREF: sub_6CB8A932+441j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		mov	[ebp+var_1C], eax

loc_6CB8ADE6:				; CODE XREF: sub_6CB8A932+476j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_38]
		jb	short loc_6CB8ADF9
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB8AED9
; ---------------------------------------------------------------------------

loc_6CB8ADF9:				; CODE XREF: sub_6CB8A932+4BAj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB8AED4
; ---------------------------------------------------------------------------

loc_6CB8AE04:				; CODE XREF: sub_6CB8A932+423j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_40], eax
		jmp	short loc_6CB8AE14
; ---------------------------------------------------------------------------

loc_6CB8AE0C:				; CODE XREF: sub_6CB8A932+4F8j
		add	[ebp+var_20], 1
		add	[ebp+var_C], 1

loc_6CB8AE14:				; CODE XREF: sub_6CB8A932+4D8j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jnb	short loc_6CB8AE2C
		mov	eax, [ebp+var_20]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8AE0C

loc_6CB8AE2C:				; CODE XREF: sub_6CB8A932+4E8j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 22h
		ja	short loc_6CB8AE55
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8AE91
; ---------------------------------------------------------------------------

loc_6CB8AE55:				; CODE XREF: sub_6CB8A932+50Bj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_2C], 22h
		jmp	short loc_6CB8AE7A
; ---------------------------------------------------------------------------

loc_6CB8AE67:				; CODE XREF: sub_6CB8A932+54Fj
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0

loc_6CB8AE7A:				; CODE XREF: sub_6CB8A932+533j
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CB8AE67
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB8AE91:				; CODE XREF: sub_6CB8A932+521j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_38]
		jb	short loc_6CB8AEC9
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	short loc_6CB8AED9
; ---------------------------------------------------------------------------

loc_6CB8AEC9:				; CODE XREF: sub_6CB8A932+58Dj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB8A97C
; ---------------------------------------------------------------------------

loc_6CB8AED4:				; CODE XREF: sub_6CB8A932:loc_6CB8AB77j
					; sub_6CB8A932+4CDj
		jmp	loc_6CB8A97C
; ---------------------------------------------------------------------------

loc_6CB8AED9:				; CODE XREF: sub_6CB8A932+240j
					; sub_6CB8A932+4C2j ...
		mov	edx, [ebp+var_34]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	short loc_6CB8AF0C
		mov	edx, [ebp+var_34]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		mov	[esp+58h+var_50], eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+var_54], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+var_58], eax
		call	_lzo1c_store_run
		mov	[ebp+var_10], eax

loc_6CB8AF0C:				; CODE XREF: sub_6CB8A932+5AFj
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB8A932	endp

; Exported entry  55. lzo1c_1_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_1_compress
lzo1c_1_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB8A932
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1c_do_compress
		leave
		retn
lzo1c_1_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8AF66	proc near		; DATA XREF: lzo1c_2_compress+6o
					; .rdata:_lzo1c_2_compress_funco

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		add	[ebp+var_C], 1

loc_6CB8AFB0:				; CODE XREF: sub_6CB8AF66+675j
					; sub_6CB8AF66:loc_6CB8B5E0j
		mov	[ebp+var_24], 0
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8B055
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_20]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	short loc_6CB8B055
		cmp	[ebp+var_24], 3FFFh
		jbe	short loc_6CB8B05C

loc_6CB8B055:				; CODE XREF: sub_6CB8AF66+D1j
					; sub_6CB8AF66+E4j
		mov	eax, 1
		jmp	short loc_6CB8B061
; ---------------------------------------------------------------------------

loc_6CB8B05C:				; CODE XREF: sub_6CB8AF66+EDj
		mov	eax, 0

loc_6CB8B061:				; CODE XREF: sub_6CB8AF66+F4j
		test	eax, eax
		jz	short loc_6CB8B06A
		jmp	loc_6CB8B186
; ---------------------------------------------------------------------------

loc_6CB8B06A:				; CODE XREF: sub_6CB8AF66+FDj
		cmp	[ebp+var_24], 2000h
		jbe	loc_6CB8B121
		mov	eax, [ebp+var_20]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	loc_6CB8B121
		mov	eax, [ebp+var_28]
		and	eax, 7FFh
		xor	eax, 201Fh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8B0EB
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_20]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	short loc_6CB8B0EB
		cmp	[ebp+var_24], 3FFFh
		jbe	short loc_6CB8B0F2

loc_6CB8B0EB:				; CODE XREF: sub_6CB8AF66+167j
					; sub_6CB8AF66+17Aj
		mov	eax, 1
		jmp	short loc_6CB8B0F7
; ---------------------------------------------------------------------------

loc_6CB8B0F2:				; CODE XREF: sub_6CB8AF66+183j
		mov	eax, 0

loc_6CB8B0F7:				; CODE XREF: sub_6CB8AF66+18Aj
		test	eax, eax
		jz	short loc_6CB8B100
		jmp	loc_6CB8B186
; ---------------------------------------------------------------------------

loc_6CB8B100:				; CODE XREF: sub_6CB8AF66+193j
		cmp	[ebp+var_24], 2000h
		jbe	short loc_6CB8B121
		mov	eax, [ebp+var_20]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8B121
		jmp	short loc_6CB8B186
; ---------------------------------------------------------------------------

loc_6CB8B121:				; CODE XREF: sub_6CB8AF66+10Bj
					; sub_6CB8AF66+125j ...
		mov	eax, [ebp+var_20]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB8B186
		mov	eax, [ebp+var_20]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB8B186
		mov	eax, [ebp+var_20]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB8B186
		add	[ebp+var_20], 3
		nop
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	loc_6CB8B2DB
		jmp	short loc_6CB8B1B0
; ---------------------------------------------------------------------------

loc_6CB8B186:				; CODE XREF: sub_6CB8AF66+FFj
					; sub_6CB8AF66+195j ...
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_38]
		jb	short loc_6CB8B1AB
		jmp	loc_6CB8B5E5
; ---------------------------------------------------------------------------

loc_6CB8B1AB:				; CODE XREF: sub_6CB8AF66+23Ej
		jmp	loc_6CB8B5E0
; ---------------------------------------------------------------------------

loc_6CB8B1B0:				; CODE XREF: sub_6CB8AF66+21Ej
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_18]
		jnz	short loc_6CB8B1FE
		mov	eax, [ebp+var_10]
		sub	eax, 2
		mov	edx, [ebp+var_10]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	loc_6CB8B2DB
; ---------------------------------------------------------------------------

loc_6CB8B1FE:				; CODE XREF: sub_6CB8AF66+25Dj
		cmp	[ebp+var_30], 1Fh
		ja	short loc_6CB8B267
		cmp	[ebp+var_30], 3
		ja	short loc_6CB8B22D
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_1C]
		jnz	short loc_6CB8B22D
		mov	eax, [ebp+var_1C]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_1C]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_30]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB8B23B
; ---------------------------------------------------------------------------

loc_6CB8B22D:				; CODE XREF: sub_6CB8AF66+2A2j
					; sub_6CB8AF66+2AAj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_30]
		mov	[eax], dl

loc_6CB8B23B:				; CODE XREF: sub_6CB8AF66+2C5j
					; sub_6CB8AF66+2F4j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_30], 1
		cmp	[ebp+var_30], 0
		jnz	short loc_6CB8B23B
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB8B2DB
; ---------------------------------------------------------------------------

loc_6CB8B267:				; CODE XREF: sub_6CB8AF66+29Cj
		cmp	[ebp+var_30], 117h
		ja	short loc_6CB8B2B9
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_30]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8B28D:				; CODE XREF: sub_6CB8AF66+346j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_30], 1
		cmp	[ebp+var_30], 0
		jnz	short loc_6CB8B28D
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB8B2DB
; ---------------------------------------------------------------------------

loc_6CB8B2B9:				; CODE XREF: sub_6CB8AF66+308j
		mov	eax, [ebp+var_30]
		mov	[esp+58h+var_50], eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+var_54], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+var_58], eax
		call	_lzo1c_store_run
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax

loc_6CB8B2DB:				; CODE XREF: sub_6CB8AF66+218j
					; sub_6CB8AF66+293j ...
		add	[ebp+var_C], 3
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8B38F
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8B38F
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8B38F
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8B38F
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8B38F
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	loc_6CB8B4A4

loc_6CB8B38F:				; CODE XREF: sub_6CB8AF66+393j
					; sub_6CB8AF66+3B3j ...
		sub	[ebp+var_C], 1
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_24], 2000h
		ja	short loc_6CB8B3DE
		sub	[ebp+var_24], 1
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_24]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8B41A
; ---------------------------------------------------------------------------

loc_6CB8B3DE:				; CODE XREF: sub_6CB8AF66+441j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		mov	[ebp+var_1C], eax

loc_6CB8B41A:				; CODE XREF: sub_6CB8AF66+476j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_38]
		jb	short loc_6CB8B42D
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB8B5E5
; ---------------------------------------------------------------------------

loc_6CB8B42D:				; CODE XREF: sub_6CB8AF66+4BAj
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB8B5E0
; ---------------------------------------------------------------------------

loc_6CB8B4A4:				; CODE XREF: sub_6CB8AF66+423j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_40], eax
		jmp	short loc_6CB8B4B4
; ---------------------------------------------------------------------------

loc_6CB8B4AC:				; CODE XREF: sub_6CB8AF66+564j
		add	[ebp+var_20], 1
		add	[ebp+var_C], 1

loc_6CB8B4B4:				; CODE XREF: sub_6CB8AF66+544j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jnb	short loc_6CB8B4CC
		mov	eax, [ebp+var_20]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8B4AC

loc_6CB8B4CC:				; CODE XREF: sub_6CB8AF66+554j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 22h
		ja	short loc_6CB8B4F5
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8B531
; ---------------------------------------------------------------------------

loc_6CB8B4F5:				; CODE XREF: sub_6CB8AF66+577j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_2C], 22h
		jmp	short loc_6CB8B51A
; ---------------------------------------------------------------------------

loc_6CB8B507:				; CODE XREF: sub_6CB8AF66+5BBj
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0

loc_6CB8B51A:				; CODE XREF: sub_6CB8AF66+59Fj
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CB8B507
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB8B531:				; CODE XREF: sub_6CB8AF66+58Dj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_38]
		jb	short loc_6CB8B569
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	short loc_6CB8B5E5
; ---------------------------------------------------------------------------

loc_6CB8B569:				; CODE XREF: sub_6CB8AF66+5F9j
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB8AFB0
; ---------------------------------------------------------------------------

loc_6CB8B5E0:				; CODE XREF: sub_6CB8AF66:loc_6CB8B1ABj
					; sub_6CB8AF66+539j
		jmp	loc_6CB8AFB0
; ---------------------------------------------------------------------------

loc_6CB8B5E5:				; CODE XREF: sub_6CB8AF66+240j
					; sub_6CB8AF66+4C2j ...
		mov	edx, [ebp+var_34]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	short loc_6CB8B618
		mov	edx, [ebp+var_34]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		mov	[esp+58h+var_50], eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+var_54], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+var_58], eax
		call	_lzo1c_store_run
		mov	[ebp+var_10], eax

loc_6CB8B618:				; CODE XREF: sub_6CB8AF66+687j
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB8AF66	endp

; Exported entry  56. lzo1c_2_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_2_compress
lzo1c_2_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB8AF66
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1c_do_compress
		leave
		retn
lzo1c_2_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8B672	proc near		; DATA XREF: lzo1c_3_compress+6o
					; .rdata:_lzo1c_3_compress_funco

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		add	[ebp+var_C], 1

loc_6CB8B6BC:				; CODE XREF: sub_6CB8B672+750j
					; sub_6CB8B672:loc_6CB8BDC7j
		mov	[ebp+var_24], 0
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8B761
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_20]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	short loc_6CB8B761
		cmp	[ebp+var_24], 3FFFh
		jbe	short loc_6CB8B768

loc_6CB8B761:				; CODE XREF: sub_6CB8B672+D1j
					; sub_6CB8B672+E4j
		mov	eax, 1
		jmp	short loc_6CB8B76D
; ---------------------------------------------------------------------------

loc_6CB8B768:				; CODE XREF: sub_6CB8B672+EDj
		mov	eax, 0

loc_6CB8B76D:				; CODE XREF: sub_6CB8B672+F4j
		test	eax, eax
		jz	short loc_6CB8B776
		jmp	loc_6CB8B892
; ---------------------------------------------------------------------------

loc_6CB8B776:				; CODE XREF: sub_6CB8B672+FDj
		cmp	[ebp+var_24], 2000h
		jbe	loc_6CB8B82D
		mov	eax, [ebp+var_20]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	loc_6CB8B82D
		mov	eax, [ebp+var_28]
		and	eax, 7FFh
		xor	eax, 201Fh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8B7F7
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_20]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 0
		jz	short loc_6CB8B7F7
		cmp	[ebp+var_24], 3FFFh
		jbe	short loc_6CB8B7FE

loc_6CB8B7F7:				; CODE XREF: sub_6CB8B672+167j
					; sub_6CB8B672+17Aj
		mov	eax, 1
		jmp	short loc_6CB8B803
; ---------------------------------------------------------------------------

loc_6CB8B7FE:				; CODE XREF: sub_6CB8B672+183j
		mov	eax, 0

loc_6CB8B803:				; CODE XREF: sub_6CB8B672+18Aj
		test	eax, eax
		jz	short loc_6CB8B80C
		jmp	loc_6CB8B892
; ---------------------------------------------------------------------------

loc_6CB8B80C:				; CODE XREF: sub_6CB8B672+193j
		cmp	[ebp+var_24], 2000h
		jbe	short loc_6CB8B82D
		mov	eax, [ebp+var_20]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8B82D
		jmp	short loc_6CB8B892
; ---------------------------------------------------------------------------

loc_6CB8B82D:				; CODE XREF: sub_6CB8B672+10Bj
					; sub_6CB8B672+125j ...
		mov	eax, [ebp+var_20]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB8B892
		mov	eax, [ebp+var_20]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB8B892
		mov	eax, [ebp+var_20]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB8B892
		add	[ebp+var_20], 3
		nop
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	loc_6CB8B9E7
		jmp	short loc_6CB8B8BC
; ---------------------------------------------------------------------------

loc_6CB8B892:				; CODE XREF: sub_6CB8B672+FFj
					; sub_6CB8B672+195j ...
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_38]
		jb	short loc_6CB8B8B7
		jmp	loc_6CB8BDCC
; ---------------------------------------------------------------------------

loc_6CB8B8B7:				; CODE XREF: sub_6CB8B672+23Ej
		jmp	loc_6CB8BDC7
; ---------------------------------------------------------------------------

loc_6CB8B8BC:				; CODE XREF: sub_6CB8B672+21Ej
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_18]
		jnz	short loc_6CB8B90A
		mov	eax, [ebp+var_10]
		sub	eax, 2
		mov	edx, [ebp+var_10]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	loc_6CB8B9E7
; ---------------------------------------------------------------------------

loc_6CB8B90A:				; CODE XREF: sub_6CB8B672+25Dj
		cmp	[ebp+var_30], 1Fh
		ja	short loc_6CB8B973
		cmp	[ebp+var_30], 3
		ja	short loc_6CB8B939
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_1C]
		jnz	short loc_6CB8B939
		mov	eax, [ebp+var_1C]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_1C]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_30]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB8B947
; ---------------------------------------------------------------------------

loc_6CB8B939:				; CODE XREF: sub_6CB8B672+2A2j
					; sub_6CB8B672+2AAj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_30]
		mov	[eax], dl

loc_6CB8B947:				; CODE XREF: sub_6CB8B672+2C5j
					; sub_6CB8B672+2F4j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_30], 1
		cmp	[ebp+var_30], 0
		jnz	short loc_6CB8B947
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB8B9E7
; ---------------------------------------------------------------------------

loc_6CB8B973:				; CODE XREF: sub_6CB8B672+29Cj
		cmp	[ebp+var_30], 117h
		ja	short loc_6CB8B9C5
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_30]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8B999:				; CODE XREF: sub_6CB8B672+346j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+1]
		mov	[ebp+var_14], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_30], 1
		cmp	[ebp+var_30], 0
		jnz	short loc_6CB8B999
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_18], eax
		jmp	short loc_6CB8B9E7
; ---------------------------------------------------------------------------

loc_6CB8B9C5:				; CODE XREF: sub_6CB8B672+308j
		mov	eax, [ebp+var_30]
		mov	[esp+58h+var_50], eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+var_54], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+var_58], eax
		call	_lzo1c_store_run
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax

loc_6CB8B9E7:				; CODE XREF: sub_6CB8B672+218j
					; sub_6CB8B672+293j ...
		add	[ebp+var_C], 3
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8BA9B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8BA9B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8BA9B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8BA9B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8BA9B
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	loc_6CB8BC1C

loc_6CB8BA9B:				; CODE XREF: sub_6CB8B672+393j
					; sub_6CB8B672+3B3j ...
		sub	[ebp+var_C], 1
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_24], 2000h
		ja	short loc_6CB8BAEA
		sub	[ebp+var_24], 1
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_24]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8BB26
; ---------------------------------------------------------------------------

loc_6CB8BAEA:				; CODE XREF: sub_6CB8B672+441j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		mov	[ebp+var_1C], eax

loc_6CB8BB26:				; CODE XREF: sub_6CB8B672+476j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_38]
		jb	short loc_6CB8BB39
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB8BDCC
; ---------------------------------------------------------------------------

loc_6CB8BB39:				; CODE XREF: sub_6CB8B672+4BAj
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB8BDC7
; ---------------------------------------------------------------------------

loc_6CB8BC1C:				; CODE XREF: sub_6CB8B672+423j
		mov	eax, [ebp+var_34]
		mov	[ebp+var_40], eax
		jmp	short loc_6CB8BC2C
; ---------------------------------------------------------------------------

loc_6CB8BC24:				; CODE XREF: sub_6CB8B672+5D0j
		add	[ebp+var_20], 1
		add	[ebp+var_C], 1

loc_6CB8BC2C:				; CODE XREF: sub_6CB8B672+5B0j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jnb	short loc_6CB8BC44
		mov	eax, [ebp+var_20]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8BC24

loc_6CB8BC44:				; CODE XREF: sub_6CB8B672+5C0j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 22h
		ja	short loc_6CB8BC6D
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8BCA9
; ---------------------------------------------------------------------------

loc_6CB8BC6D:				; CODE XREF: sub_6CB8B672+5E3j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_2C], 22h
		jmp	short loc_6CB8BC92
; ---------------------------------------------------------------------------

loc_6CB8BC7F:				; CODE XREF: sub_6CB8B672+627j
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0

loc_6CB8BC92:				; CODE XREF: sub_6CB8B672+60Bj
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CB8BC7F
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl

loc_6CB8BCA9:				; CODE XREF: sub_6CB8B672+5F9j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_24]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_10]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_38]
		jb	short loc_6CB8BCE4
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB8BDCC
; ---------------------------------------------------------------------------

loc_6CB8BCE4:				; CODE XREF: sub_6CB8B672+665j
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_14]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_14]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_3C]
		add	edx, eax
		mov	eax, [ebp+var_14]
		mov	[edx], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		jmp	loc_6CB8B6BC
; ---------------------------------------------------------------------------

loc_6CB8BDC7:				; CODE XREF: sub_6CB8B672:loc_6CB8B8B7j
					; sub_6CB8B672+5A5j
		jmp	loc_6CB8B6BC
; ---------------------------------------------------------------------------

loc_6CB8BDCC:				; CODE XREF: sub_6CB8B672+240j
					; sub_6CB8B672+4C2j ...
		mov	edx, [ebp+var_34]
		mov	eax, [ebp+var_14]
		cmp	edx, eax
		jz	short loc_6CB8BDFF
		mov	edx, [ebp+var_34]
		mov	eax, [ebp+var_14]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		mov	[esp+58h+var_50], eax
		mov	eax, [ebp+var_14]
		mov	[esp+58h+var_54], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+var_58], eax
		call	_lzo1c_store_run
		mov	[ebp+var_10], eax

loc_6CB8BDFF:				; CODE XREF: sub_6CB8B672+762j
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB8B672	endp

; Exported entry  57. lzo1c_3_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_3_compress
lzo1c_3_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB8B672
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1c_do_compress
		leave
		retn
lzo1c_3_compress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8BE5A	proc near		; DATA XREF: lzo1c_4_compress+6o
					; .rdata:_lzo1c_4_compress_funco

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_48], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_4C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB8BF3C:				; CODE XREF: sub_6CB8BE5A+79Ej
					; sub_6CB8BE5A:loc_6CB8C5FDj
		mov	[ebp+var_2C], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	edx, ds:0[eax*8]
		mov	eax, [ebp+var_4C]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	[ebp+var_38], 2
		mov	[ebp+var_3C], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_50], eax
		mov	[ebp+var_30], 0

loc_6CB8BF7E:				; CODE XREF: sub_6CB8BE5A+333j
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8BFBC
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_28]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		cmp	[ebp+var_3C], 0
		jz	short loc_6CB8BFBC
		cmp	[ebp+var_3C], 3FFFh
		jbe	short loc_6CB8BFC3

loc_6CB8BFBC:				; CODE XREF: sub_6CB8BE5A+144j
					; sub_6CB8BE5A+157j
		mov	eax, 1
		jmp	short loc_6CB8BFC8
; ---------------------------------------------------------------------------

loc_6CB8BFC3:				; CODE XREF: sub_6CB8BE5A+160j
		mov	eax, 0

loc_6CB8BFC8:				; CODE XREF: sub_6CB8BE5A+167j
		test	eax, eax
		jnz	loc_6CB8C181
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_28]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_30]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8C181
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8C17B
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8C17B
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8C17B
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8C0FA
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8C0FA
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8C0FA
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8C0FA
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8C0FA
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB8C124

loc_6CB8C0FA:				; CODE XREF: sub_6CB8BE5A+20Ej
					; sub_6CB8BE5A+22Ej ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_50]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_30]
		jbe	short loc_6CB8C122
		mov	eax, [ebp+var_54]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB8C173
; ---------------------------------------------------------------------------

loc_6CB8C122:				; CODE XREF: sub_6CB8BE5A+2B8j
		jmp	short loc_6CB8C173
; ---------------------------------------------------------------------------

loc_6CB8C124:				; CODE XREF: sub_6CB8BE5A+29Ej
		mov	[ebp+var_30], 9
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_38]
		mov	eax, 0
		sub	eax, edx
		shl	eax, 2
		mov	edx, 0FFFFFFF8h
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_34], eax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		jmp	loc_6CB8C210
; ---------------------------------------------------------------------------

loc_6CB8C173:				; CODE XREF: sub_6CB8BE5A+2C6j
					; sub_6CB8BE5A:loc_6CB8C122j
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB8C181
; ---------------------------------------------------------------------------

loc_6CB8C17B:				; CODE XREF: sub_6CB8BE5A+1AEj
					; sub_6CB8BE5A+1CEj ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax

loc_6CB8C181:				; CODE XREF: sub_6CB8BE5A+170j
					; sub_6CB8BE5A+18Ej ...
		add	[ebp+var_34], 4
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	loc_6CB8BF7E
		sub	[ebp+var_34], 8
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		cmp	[ebp+var_30], 3
		jbe	short loc_6CB8C1BD
		jmp	short loc_6CB8C210
; ---------------------------------------------------------------------------

loc_6CB8C1BD:				; CODE XREF: sub_6CB8BE5A+35Fj
		cmp	[ebp+var_30], 3
		jnz	short loc_6CB8C1CE
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8C1CE
		jmp	short loc_6CB8C210
; ---------------------------------------------------------------------------

loc_6CB8C1CE:				; CODE XREF: sub_6CB8BE5A+367j
					; sub_6CB8BE5A+370j
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8C1E0
		jmp	loc_6CB8C602
; ---------------------------------------------------------------------------

loc_6CB8C1E0:				; CODE XREF: sub_6CB8BE5A+37Fj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8C5FD
; ---------------------------------------------------------------------------

loc_6CB8C210:				; CODE XREF: sub_6CB8BE5A+314j
					; sub_6CB8BE5A+361j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB8C349
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB8C26C
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB8C349
; ---------------------------------------------------------------------------

loc_6CB8C26C:				; CODE XREF: sub_6CB8BE5A+3D7j
		cmp	[ebp+var_40], 1Fh
		ja	short loc_6CB8C2D5
		cmp	[ebp+var_40], 3
		ja	short loc_6CB8C29B
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_24]
		jnz	short loc_6CB8C29B
		mov	eax, [ebp+var_24]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_24]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_40]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB8C2A9
; ---------------------------------------------------------------------------

loc_6CB8C29B:				; CODE XREF: sub_6CB8BE5A+41Cj
					; sub_6CB8BE5A+424j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		mov	[eax], dl

loc_6CB8C2A9:				; CODE XREF: sub_6CB8BE5A+43Fj
					; sub_6CB8BE5A+46Ej
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8C2A9
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8C349
; ---------------------------------------------------------------------------

loc_6CB8C2D5:				; CODE XREF: sub_6CB8BE5A+416j
		cmp	[ebp+var_40], 117h
		ja	short loc_6CB8C327
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8C2FB:				; CODE XREF: sub_6CB8BE5A+4C0j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8C2FB
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8C349
; ---------------------------------------------------------------------------

loc_6CB8C327:				; CODE XREF: sub_6CB8BE5A+482j
		mov	eax, [ebp+var_40]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB8C349:				; CODE XREF: sub_6CB8BE5A+3BEj
					; sub_6CB8BE5A+40Dj ...
		mov	eax, [ebp+var_30]
		add	[ebp+var_C], eax
		cmp	[ebp+var_30], 8
		ja	loc_6CB8C486
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8C397
		sub	[ebp+var_2C], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_2C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8C3D3
; ---------------------------------------------------------------------------

loc_6CB8C397:				; CODE XREF: sub_6CB8BE5A+506j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax

loc_6CB8C3D3:				; CODE XREF: sub_6CB8BE5A+53Bj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8C3E6
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8C602
; ---------------------------------------------------------------------------

loc_6CB8C3E6:				; CODE XREF: sub_6CB8BE5A+57Fj
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8C5FD
; ---------------------------------------------------------------------------

loc_6CB8C486:				; CODE XREF: sub_6CB8BE5A+4F9j
		mov	eax, [ebp+var_2C]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_44]
		mov	[ebp+var_58], eax
		jmp	short loc_6CB8C4A5
; ---------------------------------------------------------------------------

loc_6CB8C49D:				; CODE XREF: sub_6CB8BE5A+661j
		add	[ebp+var_28], 1
		add	[ebp+var_C], 1

loc_6CB8C4A5:				; CODE XREF: sub_6CB8BE5A+641j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_58]
		jnb	short loc_6CB8C4BD
		mov	eax, [ebp+var_28]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8C49D

loc_6CB8C4BD:				; CODE XREF: sub_6CB8BE5A+651j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 22h
		ja	short loc_6CB8C4E6
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8C522
; ---------------------------------------------------------------------------

loc_6CB8C4E6:				; CODE XREF: sub_6CB8BE5A+674j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_30], 22h
		jmp	short loc_6CB8C50B
; ---------------------------------------------------------------------------

loc_6CB8C4F8:				; CODE XREF: sub_6CB8BE5A+6B8j
		sub	[ebp+var_30], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB8C50B:				; CODE XREF: sub_6CB8BE5A+69Cj
		cmp	[ebp+var_30], 0FFh
		ja	short loc_6CB8C4F8
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		mov	[eax], dl

loc_6CB8C522:				; CODE XREF: sub_6CB8BE5A+68Aj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8C55D
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8C602
; ---------------------------------------------------------------------------

loc_6CB8C55D:				; CODE XREF: sub_6CB8BE5A+6F6j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8BF3C
; ---------------------------------------------------------------------------

loc_6CB8C5FD:				; CODE XREF: sub_6CB8BE5A+3B1j
					; sub_6CB8BE5A+627j
		jmp	loc_6CB8BF3C
; ---------------------------------------------------------------------------

loc_6CB8C602:				; CODE XREF: sub_6CB8BE5A+381j
					; sub_6CB8BE5A+587j ...
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8C635
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_5C]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax

loc_6CB8C635:				; CODE XREF: sub_6CB8BE5A+7B0j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB8BE5A	endp

; Exported entry  58. lzo1c_4_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_4_compress
lzo1c_4_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB8BE5A
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1c_do_compress
		leave
		retn
lzo1c_4_compress endp

; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8C68E	proc near		; DATA XREF: lzo1c_5_compress+6o
					; .rdata:_lzo1c_5_compress_funco

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_48], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_4C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB8C770:				; CODE XREF: sub_6CB8C68E+864j
					; sub_6CB8C68E:loc_6CB8CEF7j
		mov	[ebp+var_2C], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	edx, ds:0[eax*8]
		mov	eax, [ebp+var_4C]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	[ebp+var_38], 2
		mov	[ebp+var_3C], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_50], eax
		mov	[ebp+var_30], 0

loc_6CB8C7B2:				; CODE XREF: sub_6CB8C68E+333j
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8C7F0
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_28]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		cmp	[ebp+var_3C], 0
		jz	short loc_6CB8C7F0
		cmp	[ebp+var_3C], 3FFFh
		jbe	short loc_6CB8C7F7

loc_6CB8C7F0:				; CODE XREF: sub_6CB8C68E+144j
					; sub_6CB8C68E+157j
		mov	eax, 1
		jmp	short loc_6CB8C7FC
; ---------------------------------------------------------------------------

loc_6CB8C7F7:				; CODE XREF: sub_6CB8C68E+160j
		mov	eax, 0

loc_6CB8C7FC:				; CODE XREF: sub_6CB8C68E+167j
		test	eax, eax
		jnz	loc_6CB8C9B5
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_28]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_30]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8C9B5
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8C9AF
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8C9AF
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8C9AF
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8C92E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8C92E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8C92E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8C92E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8C92E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB8C958

loc_6CB8C92E:				; CODE XREF: sub_6CB8C68E+20Ej
					; sub_6CB8C68E+22Ej ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_50]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_30]
		jbe	short loc_6CB8C956
		mov	eax, [ebp+var_54]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB8C9A7
; ---------------------------------------------------------------------------

loc_6CB8C956:				; CODE XREF: sub_6CB8C68E+2B8j
		jmp	short loc_6CB8C9A7
; ---------------------------------------------------------------------------

loc_6CB8C958:				; CODE XREF: sub_6CB8C68E+29Ej
		mov	[ebp+var_30], 9
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_38]
		mov	eax, 0
		sub	eax, edx
		shl	eax, 2
		mov	edx, 0FFFFFFF8h
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_34], eax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		jmp	loc_6CB8CA44
; ---------------------------------------------------------------------------

loc_6CB8C9A7:				; CODE XREF: sub_6CB8C68E+2C6j
					; sub_6CB8C68E:loc_6CB8C956j
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB8C9B5
; ---------------------------------------------------------------------------

loc_6CB8C9AF:				; CODE XREF: sub_6CB8C68E+1AEj
					; sub_6CB8C68E+1CEj ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax

loc_6CB8C9B5:				; CODE XREF: sub_6CB8C68E+170j
					; sub_6CB8C68E+18Ej ...
		add	[ebp+var_34], 4
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	loc_6CB8C7B2
		sub	[ebp+var_34], 8
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		cmp	[ebp+var_30], 3
		jbe	short loc_6CB8C9F1
		jmp	short loc_6CB8CA44
; ---------------------------------------------------------------------------

loc_6CB8C9F1:				; CODE XREF: sub_6CB8C68E+35Fj
		cmp	[ebp+var_30], 3
		jnz	short loc_6CB8CA02
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8CA02
		jmp	short loc_6CB8CA44
; ---------------------------------------------------------------------------

loc_6CB8CA02:				; CODE XREF: sub_6CB8C68E+367j
					; sub_6CB8C68E+370j
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8CA14
		jmp	loc_6CB8CEFC
; ---------------------------------------------------------------------------

loc_6CB8CA14:				; CODE XREF: sub_6CB8C68E+37Fj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8CEF7
; ---------------------------------------------------------------------------

loc_6CB8CA44:				; CODE XREF: sub_6CB8C68E+314j
					; sub_6CB8C68E+361j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB8CB7D
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB8CAA0
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB8CB7D
; ---------------------------------------------------------------------------

loc_6CB8CAA0:				; CODE XREF: sub_6CB8C68E+3D7j
		cmp	[ebp+var_40], 1Fh
		ja	short loc_6CB8CB09
		cmp	[ebp+var_40], 3
		ja	short loc_6CB8CACF
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_24]
		jnz	short loc_6CB8CACF
		mov	eax, [ebp+var_24]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_24]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_40]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB8CADD
; ---------------------------------------------------------------------------

loc_6CB8CACF:				; CODE XREF: sub_6CB8C68E+41Cj
					; sub_6CB8C68E+424j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		mov	[eax], dl

loc_6CB8CADD:				; CODE XREF: sub_6CB8C68E+43Fj
					; sub_6CB8C68E+46Ej
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8CADD
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8CB7D
; ---------------------------------------------------------------------------

loc_6CB8CB09:				; CODE XREF: sub_6CB8C68E+416j
		cmp	[ebp+var_40], 117h
		ja	short loc_6CB8CB5B
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8CB2F:				; CODE XREF: sub_6CB8C68E+4C0j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8CB2F
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8CB7D
; ---------------------------------------------------------------------------

loc_6CB8CB5B:				; CODE XREF: sub_6CB8C68E+482j
		mov	eax, [ebp+var_40]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB8CB7D:				; CODE XREF: sub_6CB8C68E+3BEj
					; sub_6CB8C68E+40Dj ...
		mov	eax, [ebp+var_30]
		add	[ebp+var_C], eax
		cmp	[ebp+var_30], 8
		ja	loc_6CB8CD1D
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8CBCB
		sub	[ebp+var_2C], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_2C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8CC07
; ---------------------------------------------------------------------------

loc_6CB8CBCB:				; CODE XREF: sub_6CB8C68E+506j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax

loc_6CB8CC07:				; CODE XREF: sub_6CB8C68E+53Bj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8CC1A
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8CEFC
; ---------------------------------------------------------------------------

loc_6CB8CC1A:				; CODE XREF: sub_6CB8C68E+57Fj
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8CEF7
; ---------------------------------------------------------------------------

loc_6CB8CD1D:				; CODE XREF: sub_6CB8C68E+4F9j
		mov	eax, [ebp+var_2C]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_44]
		mov	[ebp+var_58], eax
		jmp	short loc_6CB8CD3C
; ---------------------------------------------------------------------------

loc_6CB8CD34:				; CODE XREF: sub_6CB8C68E+6C4j
		add	[ebp+var_28], 1
		add	[ebp+var_C], 1

loc_6CB8CD3C:				; CODE XREF: sub_6CB8C68E+6A4j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_58]
		jnb	short loc_6CB8CD54
		mov	eax, [ebp+var_28]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8CD34

loc_6CB8CD54:				; CODE XREF: sub_6CB8C68E+6B4j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 22h
		ja	short loc_6CB8CD7D
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8CDB9
; ---------------------------------------------------------------------------

loc_6CB8CD7D:				; CODE XREF: sub_6CB8C68E+6D7j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_30], 22h
		jmp	short loc_6CB8CDA2
; ---------------------------------------------------------------------------

loc_6CB8CD8F:				; CODE XREF: sub_6CB8C68E+71Bj
		sub	[ebp+var_30], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB8CDA2:				; CODE XREF: sub_6CB8C68E+6FFj
		cmp	[ebp+var_30], 0FFh
		ja	short loc_6CB8CD8F
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		mov	[eax], dl

loc_6CB8CDB9:				; CODE XREF: sub_6CB8C68E+6EDj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8CDF4
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8CEFC
; ---------------------------------------------------------------------------

loc_6CB8CDF4:				; CODE XREF: sub_6CB8C68E+759j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8C770
; ---------------------------------------------------------------------------

loc_6CB8CEF7:				; CODE XREF: sub_6CB8C68E+3B1j
					; sub_6CB8C68E+68Aj
		jmp	loc_6CB8C770
; ---------------------------------------------------------------------------

loc_6CB8CEFC:				; CODE XREF: sub_6CB8C68E+381j
					; sub_6CB8C68E+587j ...
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8CF2F
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_5C]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax

loc_6CB8CF2F:				; CODE XREF: sub_6CB8C68E+876j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB8C68E	endp

; Exported entry  59. lzo1c_5_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_5_compress
lzo1c_5_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB8C68E
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1c_do_compress
		leave
		retn
lzo1c_5_compress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8CF8A	proc near		; DATA XREF: lzo1c_6_compress+6o
					; .rdata:_lzo1c_6_compress_funco

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_48], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_4C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB8D06C:				; CODE XREF: sub_6CB8CF8A+8B4j
					; sub_6CB8CF8A:loc_6CB8D843j
		mov	[ebp+var_2C], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	edx, ds:0[eax*8]
		mov	eax, [ebp+var_4C]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	[ebp+var_38], 2
		mov	[ebp+var_3C], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_50], eax
		mov	[ebp+var_30], 0

loc_6CB8D0AE:				; CODE XREF: sub_6CB8CF8A+333j
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8D0EC
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_28]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		cmp	[ebp+var_3C], 0
		jz	short loc_6CB8D0EC
		cmp	[ebp+var_3C], 3FFFh
		jbe	short loc_6CB8D0F3

loc_6CB8D0EC:				; CODE XREF: sub_6CB8CF8A+144j
					; sub_6CB8CF8A+157j
		mov	eax, 1
		jmp	short loc_6CB8D0F8
; ---------------------------------------------------------------------------

loc_6CB8D0F3:				; CODE XREF: sub_6CB8CF8A+160j
		mov	eax, 0

loc_6CB8D0F8:				; CODE XREF: sub_6CB8CF8A+167j
		test	eax, eax
		jnz	loc_6CB8D2B1
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_28]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_30]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8D2B1
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8D2AB
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8D2AB
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8D2AB
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8D22A
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8D22A
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8D22A
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8D22A
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8D22A
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB8D254

loc_6CB8D22A:				; CODE XREF: sub_6CB8CF8A+20Ej
					; sub_6CB8CF8A+22Ej ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_50]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_30]
		jbe	short loc_6CB8D252
		mov	eax, [ebp+var_54]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB8D2A3
; ---------------------------------------------------------------------------

loc_6CB8D252:				; CODE XREF: sub_6CB8CF8A+2B8j
		jmp	short loc_6CB8D2A3
; ---------------------------------------------------------------------------

loc_6CB8D254:				; CODE XREF: sub_6CB8CF8A+29Ej
		mov	[ebp+var_30], 9
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_38]
		mov	eax, 0
		sub	eax, edx
		shl	eax, 2
		mov	edx, 0FFFFFFF8h
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_34], eax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		jmp	loc_6CB8D340
; ---------------------------------------------------------------------------

loc_6CB8D2A3:				; CODE XREF: sub_6CB8CF8A+2C6j
					; sub_6CB8CF8A:loc_6CB8D252j
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB8D2B1
; ---------------------------------------------------------------------------

loc_6CB8D2AB:				; CODE XREF: sub_6CB8CF8A+1AEj
					; sub_6CB8CF8A+1CEj ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax

loc_6CB8D2B1:				; CODE XREF: sub_6CB8CF8A+170j
					; sub_6CB8CF8A+18Ej ...
		add	[ebp+var_34], 4
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	loc_6CB8D0AE
		sub	[ebp+var_34], 8
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		cmp	[ebp+var_30], 3
		jbe	short loc_6CB8D2ED
		jmp	short loc_6CB8D340
; ---------------------------------------------------------------------------

loc_6CB8D2ED:				; CODE XREF: sub_6CB8CF8A+35Fj
		cmp	[ebp+var_30], 3
		jnz	short loc_6CB8D2FE
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8D2FE
		jmp	short loc_6CB8D340
; ---------------------------------------------------------------------------

loc_6CB8D2FE:				; CODE XREF: sub_6CB8CF8A+367j
					; sub_6CB8CF8A+370j
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8D310
		jmp	loc_6CB8D848
; ---------------------------------------------------------------------------

loc_6CB8D310:				; CODE XREF: sub_6CB8CF8A+37Fj
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8D843
; ---------------------------------------------------------------------------

loc_6CB8D340:				; CODE XREF: sub_6CB8CF8A+314j
					; sub_6CB8CF8A+361j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB8D479
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB8D39C
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB8D479
; ---------------------------------------------------------------------------

loc_6CB8D39C:				; CODE XREF: sub_6CB8CF8A+3D7j
		cmp	[ebp+var_40], 1Fh
		ja	short loc_6CB8D405
		cmp	[ebp+var_40], 3
		ja	short loc_6CB8D3CB
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_24]
		jnz	short loc_6CB8D3CB
		mov	eax, [ebp+var_24]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_24]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_40]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB8D3D9
; ---------------------------------------------------------------------------

loc_6CB8D3CB:				; CODE XREF: sub_6CB8CF8A+41Cj
					; sub_6CB8CF8A+424j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		mov	[eax], dl

loc_6CB8D3D9:				; CODE XREF: sub_6CB8CF8A+43Fj
					; sub_6CB8CF8A+46Ej
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8D3D9
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8D479
; ---------------------------------------------------------------------------

loc_6CB8D405:				; CODE XREF: sub_6CB8CF8A+416j
		cmp	[ebp+var_40], 117h
		ja	short loc_6CB8D457
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8D42B:				; CODE XREF: sub_6CB8CF8A+4C0j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8D42B
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8D479
; ---------------------------------------------------------------------------

loc_6CB8D457:				; CODE XREF: sub_6CB8CF8A+482j
		mov	eax, [ebp+var_40]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB8D479:				; CODE XREF: sub_6CB8CF8A+3BEj
					; sub_6CB8CF8A+40Dj ...
		mov	eax, [ebp+var_30]
		add	[ebp+var_C], eax
		cmp	[ebp+var_30], 8
		ja	loc_6CB8D5A3
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8D4C7
		sub	[ebp+var_2C], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_2C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8D503
; ---------------------------------------------------------------------------

loc_6CB8D4C7:				; CODE XREF: sub_6CB8CF8A+506j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax

loc_6CB8D503:				; CODE XREF: sub_6CB8CF8A+53Bj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8D516
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8D848
; ---------------------------------------------------------------------------

loc_6CB8D516:				; CODE XREF: sub_6CB8CF8A+57Fj
		add	[ebp+var_1C], 1

loc_6CB8D51A:				; CODE XREF: sub_6CB8CF8A+5E7j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	edx, ds:0[eax*8]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB8D51A
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8D843
; ---------------------------------------------------------------------------

loc_6CB8D5A3:				; CODE XREF: sub_6CB8CF8A+4F9j
		mov	eax, [ebp+var_2C]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_44]
		mov	[ebp+var_58], eax
		jmp	short loc_6CB8D5C2
; ---------------------------------------------------------------------------

loc_6CB8D5BA:				; CODE XREF: sub_6CB8CF8A+64Ej
		add	[ebp+var_28], 1
		add	[ebp+var_C], 1

loc_6CB8D5C2:				; CODE XREF: sub_6CB8CF8A+62Ej
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_58]
		jnb	short loc_6CB8D5DA
		mov	eax, [ebp+var_28]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8D5BA

loc_6CB8D5DA:				; CODE XREF: sub_6CB8CF8A+63Ej
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 22h
		ja	short loc_6CB8D603
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8D63F
; ---------------------------------------------------------------------------

loc_6CB8D603:				; CODE XREF: sub_6CB8CF8A+661j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_30], 22h
		jmp	short loc_6CB8D628
; ---------------------------------------------------------------------------

loc_6CB8D615:				; CODE XREF: sub_6CB8CF8A+6A5j
		sub	[ebp+var_30], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB8D628:				; CODE XREF: sub_6CB8CF8A+689j
		cmp	[ebp+var_30], 0FFh
		ja	short loc_6CB8D615
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		mov	[eax], dl

loc_6CB8D63F:				; CODE XREF: sub_6CB8CF8A+677j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8D67A
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8D848
; ---------------------------------------------------------------------------

loc_6CB8D67A:				; CODE XREF: sub_6CB8CF8A+6E3j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 1FFFh
		lea	ecx, [eax+eax]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 1
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8D06C
; ---------------------------------------------------------------------------

loc_6CB8D843:				; CODE XREF: sub_6CB8CF8A+3B1j
					; sub_6CB8CF8A+614j
		jmp	loc_6CB8D06C
; ---------------------------------------------------------------------------

loc_6CB8D848:				; CODE XREF: sub_6CB8CF8A+381j
					; sub_6CB8CF8A+587j ...
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8D87B
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_5C]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax

loc_6CB8D87B:				; CODE XREF: sub_6CB8CF8A+8C6j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB8CF8A	endp

; Exported entry  60. lzo1c_6_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_6_compress
lzo1c_6_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB8CF8A
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1c_do_compress
		leave
		retn
lzo1c_6_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8D8D6	proc near		; DATA XREF: lzo1c_7_compress+6o
					; .rdata:_lzo1c_7_compress_funco

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_48], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_4C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB8D9BC:				; CODE XREF: sub_6CB8D8D6+876j
					; sub_6CB8D8D6:loc_6CB8E151j
		mov	[ebp+var_2C], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	[ebp+var_38], 4
		mov	[ebp+var_3C], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_50], eax
		mov	[ebp+var_30], 0

loc_6CB8D9FC:				; CODE XREF: sub_6CB8D8D6+335j
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8DA3A
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_28]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		cmp	[ebp+var_3C], 0
		jz	short loc_6CB8DA3A
		cmp	[ebp+var_3C], 3FFFh
		jbe	short loc_6CB8DA41

loc_6CB8DA3A:				; CODE XREF: sub_6CB8D8D6+146j
					; sub_6CB8D8D6+159j
		mov	eax, 1
		jmp	short loc_6CB8DA46
; ---------------------------------------------------------------------------

loc_6CB8DA41:				; CODE XREF: sub_6CB8D8D6+162j
		mov	eax, 0

loc_6CB8DA46:				; CODE XREF: sub_6CB8D8D6+169j
		test	eax, eax
		jnz	loc_6CB8DBFF
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_28]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_30]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8DBFF
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8DBF9
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8DBF9
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8DBF9
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8DB78
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8DB78
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8DB78
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8DB78
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8DB78
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB8DBA2

loc_6CB8DB78:				; CODE XREF: sub_6CB8D8D6+210j
					; sub_6CB8D8D6+230j ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_50]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_30]
		jbe	short loc_6CB8DBA0
		mov	eax, [ebp+var_54]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB8DBF1
; ---------------------------------------------------------------------------

loc_6CB8DBA0:				; CODE XREF: sub_6CB8D8D6+2BAj
		jmp	short loc_6CB8DBF1
; ---------------------------------------------------------------------------

loc_6CB8DBA2:				; CODE XREF: sub_6CB8D8D6+2A0j
		mov	[ebp+var_30], 9
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_38]
		mov	eax, 0
		sub	eax, edx
		shl	eax, 2
		mov	edx, 0FFFFFFF0h
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_34], eax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		jmp	loc_6CB8DC8E
; ---------------------------------------------------------------------------

loc_6CB8DBF1:				; CODE XREF: sub_6CB8D8D6+2C8j
					; sub_6CB8D8D6:loc_6CB8DBA0j
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB8DBFF
; ---------------------------------------------------------------------------

loc_6CB8DBF9:				; CODE XREF: sub_6CB8D8D6+1B0j
					; sub_6CB8D8D6+1D0j ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax

loc_6CB8DBFF:				; CODE XREF: sub_6CB8D8D6+172j
					; sub_6CB8D8D6+190j ...
		add	[ebp+var_34], 4
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	loc_6CB8D9FC
		sub	[ebp+var_34], 10h
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		cmp	[ebp+var_30], 3
		jbe	short loc_6CB8DC3B
		jmp	short loc_6CB8DC8E
; ---------------------------------------------------------------------------

loc_6CB8DC3B:				; CODE XREF: sub_6CB8D8D6+361j
		cmp	[ebp+var_30], 3
		jnz	short loc_6CB8DC4C
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8DC4C
		jmp	short loc_6CB8DC8E
; ---------------------------------------------------------------------------

loc_6CB8DC4C:				; CODE XREF: sub_6CB8D8D6+369j
					; sub_6CB8D8D6+372j
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8DC5E
		jmp	loc_6CB8E156
; ---------------------------------------------------------------------------

loc_6CB8DC5E:				; CODE XREF: sub_6CB8D8D6+381j
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8E151
; ---------------------------------------------------------------------------

loc_6CB8DC8E:				; CODE XREF: sub_6CB8D8D6+316j
					; sub_6CB8D8D6+363j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB8DDC7
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB8DCEA
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB8DDC7
; ---------------------------------------------------------------------------

loc_6CB8DCEA:				; CODE XREF: sub_6CB8D8D6+3D9j
		cmp	[ebp+var_40], 1Fh
		ja	short loc_6CB8DD53
		cmp	[ebp+var_40], 3
		ja	short loc_6CB8DD19
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_24]
		jnz	short loc_6CB8DD19
		mov	eax, [ebp+var_24]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_24]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_40]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB8DD27
; ---------------------------------------------------------------------------

loc_6CB8DD19:				; CODE XREF: sub_6CB8D8D6+41Ej
					; sub_6CB8D8D6+426j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		mov	[eax], dl

loc_6CB8DD27:				; CODE XREF: sub_6CB8D8D6+441j
					; sub_6CB8D8D6+470j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8DD27
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8DDC7
; ---------------------------------------------------------------------------

loc_6CB8DD53:				; CODE XREF: sub_6CB8D8D6+418j
		cmp	[ebp+var_40], 117h
		ja	short loc_6CB8DDA5
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8DD79:				; CODE XREF: sub_6CB8D8D6+4C2j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8DD79
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8DDC7
; ---------------------------------------------------------------------------

loc_6CB8DDA5:				; CODE XREF: sub_6CB8D8D6+484j
		mov	eax, [ebp+var_40]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB8DDC7:				; CODE XREF: sub_6CB8D8D6+3C0j
					; sub_6CB8D8D6+40Fj ...
		mov	eax, [ebp+var_30]
		add	[ebp+var_C], eax
		cmp	[ebp+var_30], 8
		ja	loc_6CB8DF6F
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8DE15
		sub	[ebp+var_2C], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_2C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8DE51
; ---------------------------------------------------------------------------

loc_6CB8DE15:				; CODE XREF: sub_6CB8D8D6+508j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax

loc_6CB8DE51:				; CODE XREF: sub_6CB8D8D6+53Dj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8DE64
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8E156
; ---------------------------------------------------------------------------

loc_6CB8DE64:				; CODE XREF: sub_6CB8D8D6+581j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8E151
; ---------------------------------------------------------------------------

loc_6CB8DF6F:				; CODE XREF: sub_6CB8D8D6+4FBj
		mov	eax, [ebp+var_2C]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_44]
		mov	[ebp+var_58], eax
		jmp	short loc_6CB8DF8E
; ---------------------------------------------------------------------------

loc_6CB8DF86:				; CODE XREF: sub_6CB8D8D6+6CEj
		add	[ebp+var_28], 1
		add	[ebp+var_C], 1

loc_6CB8DF8E:				; CODE XREF: sub_6CB8D8D6+6AEj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_58]
		jnb	short loc_6CB8DFA6
		mov	eax, [ebp+var_28]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8DF86

loc_6CB8DFA6:				; CODE XREF: sub_6CB8D8D6+6BEj
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 22h
		ja	short loc_6CB8DFCF
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8E00B
; ---------------------------------------------------------------------------

loc_6CB8DFCF:				; CODE XREF: sub_6CB8D8D6+6E1j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_30], 22h
		jmp	short loc_6CB8DFF4
; ---------------------------------------------------------------------------

loc_6CB8DFE1:				; CODE XREF: sub_6CB8D8D6+725j
		sub	[ebp+var_30], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB8DFF4:				; CODE XREF: sub_6CB8D8D6+709j
		cmp	[ebp+var_30], 0FFh
		ja	short loc_6CB8DFE1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		mov	[eax], dl

loc_6CB8E00B:				; CODE XREF: sub_6CB8D8D6+6F7j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8E046
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8E156
; ---------------------------------------------------------------------------

loc_6CB8E046:				; CODE XREF: sub_6CB8D8D6+763j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8D9BC
; ---------------------------------------------------------------------------

loc_6CB8E151:				; CODE XREF: sub_6CB8D8D6+3B3j
					; sub_6CB8D8D6+694j
		jmp	loc_6CB8D9BC
; ---------------------------------------------------------------------------

loc_6CB8E156:				; CODE XREF: sub_6CB8D8D6+383j
					; sub_6CB8D8D6+589j ...
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8E189
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_5C]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax

loc_6CB8E189:				; CODE XREF: sub_6CB8D8D6+888j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB8D8D6	endp

; Exported entry  61. lzo1c_7_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_7_compress
lzo1c_7_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB8D8D6
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1c_do_compress
		leave
		retn
lzo1c_7_compress endp

; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8E1E2	proc near		; DATA XREF: lzo1c_8_compress+6o
					; .rdata:_lzo1c_8_compress_funco

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_48], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_4C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB8E2C8:				; CODE XREF: sub_6CB8E1E2+A60j
					; sub_6CB8E1E2:loc_6CB8EC47j
		mov	[ebp+var_2C], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	[ebp+var_38], 4
		mov	[ebp+var_3C], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_50], eax
		mov	[ebp+var_30], 0

loc_6CB8E308:				; CODE XREF: sub_6CB8E1E2+335j
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8E346
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_28]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		cmp	[ebp+var_3C], 0
		jz	short loc_6CB8E346
		cmp	[ebp+var_3C], 3FFFh
		jbe	short loc_6CB8E34D

loc_6CB8E346:				; CODE XREF: sub_6CB8E1E2+146j
					; sub_6CB8E1E2+159j
		mov	eax, 1
		jmp	short loc_6CB8E352
; ---------------------------------------------------------------------------

loc_6CB8E34D:				; CODE XREF: sub_6CB8E1E2+162j
		mov	eax, 0

loc_6CB8E352:				; CODE XREF: sub_6CB8E1E2+169j
		test	eax, eax
		jnz	loc_6CB8E50B
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_28]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_30]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8E50B
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8E505
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8E505
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8E505
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8E484
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8E484
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8E484
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8E484
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8E484
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB8E4AE

loc_6CB8E484:				; CODE XREF: sub_6CB8E1E2+210j
					; sub_6CB8E1E2+230j ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_50]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_30]
		jbe	short loc_6CB8E4AC
		mov	eax, [ebp+var_54]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB8E4FD
; ---------------------------------------------------------------------------

loc_6CB8E4AC:				; CODE XREF: sub_6CB8E1E2+2BAj
		jmp	short loc_6CB8E4FD
; ---------------------------------------------------------------------------

loc_6CB8E4AE:				; CODE XREF: sub_6CB8E1E2+2A0j
		mov	[ebp+var_30], 9
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_38]
		mov	eax, 0
		sub	eax, edx
		shl	eax, 2
		mov	edx, 0FFFFFFF0h
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_34], eax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		jmp	loc_6CB8E59A
; ---------------------------------------------------------------------------

loc_6CB8E4FD:				; CODE XREF: sub_6CB8E1E2+2C8j
					; sub_6CB8E1E2:loc_6CB8E4ACj
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB8E50B
; ---------------------------------------------------------------------------

loc_6CB8E505:				; CODE XREF: sub_6CB8E1E2+1B0j
					; sub_6CB8E1E2+1D0j ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax

loc_6CB8E50B:				; CODE XREF: sub_6CB8E1E2+172j
					; sub_6CB8E1E2+190j ...
		add	[ebp+var_34], 4
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	loc_6CB8E308
		sub	[ebp+var_34], 10h
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		cmp	[ebp+var_30], 3
		jbe	short loc_6CB8E547
		jmp	short loc_6CB8E59A
; ---------------------------------------------------------------------------

loc_6CB8E547:				; CODE XREF: sub_6CB8E1E2+361j
		cmp	[ebp+var_30], 3
		jnz	short loc_6CB8E558
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8E558
		jmp	short loc_6CB8E59A
; ---------------------------------------------------------------------------

loc_6CB8E558:				; CODE XREF: sub_6CB8E1E2+369j
					; sub_6CB8E1E2+372j
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8E56A
		jmp	loc_6CB8EC4C
; ---------------------------------------------------------------------------

loc_6CB8E56A:				; CODE XREF: sub_6CB8E1E2+381j
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8EC47
; ---------------------------------------------------------------------------

loc_6CB8E59A:				; CODE XREF: sub_6CB8E1E2+316j
					; sub_6CB8E1E2+363j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB8E6D3
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB8E5F6
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB8E6D3
; ---------------------------------------------------------------------------

loc_6CB8E5F6:				; CODE XREF: sub_6CB8E1E2+3D9j
		cmp	[ebp+var_40], 1Fh
		ja	short loc_6CB8E65F
		cmp	[ebp+var_40], 3
		ja	short loc_6CB8E625
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_24]
		jnz	short loc_6CB8E625
		mov	eax, [ebp+var_24]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_24]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_40]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB8E633
; ---------------------------------------------------------------------------

loc_6CB8E625:				; CODE XREF: sub_6CB8E1E2+41Ej
					; sub_6CB8E1E2+426j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		mov	[eax], dl

loc_6CB8E633:				; CODE XREF: sub_6CB8E1E2+441j
					; sub_6CB8E1E2+470j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8E633
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8E6D3
; ---------------------------------------------------------------------------

loc_6CB8E65F:				; CODE XREF: sub_6CB8E1E2+418j
		cmp	[ebp+var_40], 117h
		ja	short loc_6CB8E6B1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8E685:				; CODE XREF: sub_6CB8E1E2+4C2j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8E685
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8E6D3
; ---------------------------------------------------------------------------

loc_6CB8E6B1:				; CODE XREF: sub_6CB8E1E2+484j
		mov	eax, [ebp+var_40]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB8E6D3:				; CODE XREF: sub_6CB8E1E2+3C0j
					; sub_6CB8E1E2+40Fj ...
		mov	eax, [ebp+var_30]
		add	[ebp+var_C], eax
		cmp	[ebp+var_30], 8
		ja	loc_6CB8E7FB
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8E721
		sub	[ebp+var_2C], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_2C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8E75D
; ---------------------------------------------------------------------------

loc_6CB8E721:				; CODE XREF: sub_6CB8E1E2+508j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax

loc_6CB8E75D:				; CODE XREF: sub_6CB8E1E2+53Dj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8E770
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8EC4C
; ---------------------------------------------------------------------------

loc_6CB8E770:				; CODE XREF: sub_6CB8E1E2+581j
		add	[ebp+var_1C], 1

loc_6CB8E774:				; CODE XREF: sub_6CB8E1E2+5E7j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB8E774
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8EC47
; ---------------------------------------------------------------------------

loc_6CB8E7FB:				; CODE XREF: sub_6CB8E1E2+4FBj
		mov	eax, [ebp+var_2C]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_44]
		mov	[ebp+var_58], eax
		jmp	short loc_6CB8E81A
; ---------------------------------------------------------------------------

loc_6CB8E812:				; CODE XREF: sub_6CB8E1E2+64Ej
		add	[ebp+var_28], 1
		add	[ebp+var_C], 1

loc_6CB8E81A:				; CODE XREF: sub_6CB8E1E2+62Ej
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_58]
		jnb	short loc_6CB8E832
		mov	eax, [ebp+var_28]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8E812

loc_6CB8E832:				; CODE XREF: sub_6CB8E1E2+63Ej
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 22h
		ja	short loc_6CB8E85B
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8E897
; ---------------------------------------------------------------------------

loc_6CB8E85B:				; CODE XREF: sub_6CB8E1E2+661j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_30], 22h
		jmp	short loc_6CB8E880
; ---------------------------------------------------------------------------

loc_6CB8E86D:				; CODE XREF: sub_6CB8E1E2+6A5j
		sub	[ebp+var_30], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB8E880:				; CODE XREF: sub_6CB8E1E2+689j
		cmp	[ebp+var_30], 0FFh
		ja	short loc_6CB8E86D
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		mov	[eax], dl

loc_6CB8E897:				; CODE XREF: sub_6CB8E1E2+677j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8E8D2
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8EC4C
; ---------------------------------------------------------------------------

loc_6CB8E8D2:				; CODE XREF: sub_6CB8E1E2+6E3j
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8E2C8
; ---------------------------------------------------------------------------

loc_6CB8EC47:				; CODE XREF: sub_6CB8E1E2+3B3j
					; sub_6CB8E1E2+614j
		jmp	loc_6CB8E2C8
; ---------------------------------------------------------------------------

loc_6CB8EC4C:				; CODE XREF: sub_6CB8E1E2+383j
					; sub_6CB8E1E2+589j ...
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8EC7F
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_5C]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax

loc_6CB8EC7F:				; CODE XREF: sub_6CB8E1E2+A72j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB8E1E2	endp

; Exported entry  62. lzo1c_8_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_8_compress
lzo1c_8_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB8E1E2
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1c_do_compress
		leave
		retn
lzo1c_8_compress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8ECDA	proc near		; DATA XREF: lzo1c_9_compress+6o
					; .rdata:_lzo1c_9_compress_funco

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_48], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_4C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB8EDC0:				; CODE XREF: sub_6CB8ECDA+763j
					; sub_6CB8ECDA:loc_6CB8F442j
		mov	[ebp+var_2C], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	[ebp+var_38], 4
		mov	[ebp+var_3C], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_50], eax
		mov	[ebp+var_30], 0

loc_6CB8EE00:				; CODE XREF: sub_6CB8ECDA+322j
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8EE3E
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_28]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		cmp	[ebp+var_3C], 0
		jz	short loc_6CB8EE3E
		cmp	[ebp+var_3C], 3FFFh
		jbe	short loc_6CB8EE45

loc_6CB8EE3E:				; CODE XREF: sub_6CB8ECDA+146j
					; sub_6CB8ECDA+159j
		mov	eax, 1
		jmp	short loc_6CB8EE4A
; ---------------------------------------------------------------------------

loc_6CB8EE45:				; CODE XREF: sub_6CB8ECDA+162j
		mov	eax, 0

loc_6CB8EE4A:				; CODE XREF: sub_6CB8ECDA+169j
		test	eax, eax
		jz	short loc_6CB8EE5B
		mov	eax, [ebp+var_34]
		mov	edx, [ebp+var_C]
		mov	[eax], edx
		jmp	loc_6CB8EFF0
; ---------------------------------------------------------------------------

loc_6CB8EE5B:				; CODE XREF: sub_6CB8ECDA+172j
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_28]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_30]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8EFF0
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8EFEA
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8EFEA
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8EFEA
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8EF85
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8EF85
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8EF85
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8EF85
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8EF85
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB8EFC7

loc_6CB8EF85:				; CODE XREF: sub_6CB8ECDA+219j
					; sub_6CB8ECDA+239j ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_50]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_30]
		jbe	short loc_6CB8EFAD
		mov	eax, [ebp+var_54]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB8EFC5
; ---------------------------------------------------------------------------

loc_6CB8EFAD:				; CODE XREF: sub_6CB8ECDA+2C3j
		mov	eax, [ebp+var_54]
		cmp	eax, [ebp+var_30]
		jnz	short loc_6CB8EFC5
		mov	eax, [ebp+var_3C]
		cmp	eax, [ebp+var_2C]
		jnb	short loc_6CB8EFC5
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB8EFE2
; ---------------------------------------------------------------------------

loc_6CB8EFC5:				; CODE XREF: sub_6CB8ECDA+2D1j
					; sub_6CB8ECDA+2D9j ...
		jmp	short loc_6CB8EFE2
; ---------------------------------------------------------------------------

loc_6CB8EFC7:				; CODE XREF: sub_6CB8ECDA+2A9j
		cmp	[ebp+var_30], 8
		jbe	short loc_6CB8EFD5
		mov	eax, [ebp+var_3C]
		cmp	eax, [ebp+var_2C]
		jnb	short loc_6CB8EFE2

loc_6CB8EFD5:				; CODE XREF: sub_6CB8ECDA+2F1j
		mov	[ebp+var_30], 9
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax

loc_6CB8EFE2:				; CODE XREF: sub_6CB8ECDA+2E9j
					; sub_6CB8ECDA:loc_6CB8EFC5j ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB8EFF0
; ---------------------------------------------------------------------------

loc_6CB8EFEA:				; CODE XREF: sub_6CB8ECDA+1B9j
					; sub_6CB8ECDA+1D9j ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax

loc_6CB8EFF0:				; CODE XREF: sub_6CB8ECDA+17Cj
					; sub_6CB8ECDA+199j ...
		add	[ebp+var_34], 4
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	loc_6CB8EE00
		sub	[ebp+var_34], 10h
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 3
		cmp	[ebp+var_30], 3
		jbe	short loc_6CB8F02C
		jmp	short loc_6CB8F07F
; ---------------------------------------------------------------------------

loc_6CB8F02C:				; CODE XREF: sub_6CB8ECDA+34Ej
		cmp	[ebp+var_30], 3
		jnz	short loc_6CB8F03D
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8F03D
		jmp	short loc_6CB8F07F
; ---------------------------------------------------------------------------

loc_6CB8F03D:				; CODE XREF: sub_6CB8ECDA+356j
					; sub_6CB8ECDA+35Fj
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8F04F
		jmp	loc_6CB8F447
; ---------------------------------------------------------------------------

loc_6CB8F04F:				; CODE XREF: sub_6CB8ECDA+36Ej
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8F442
; ---------------------------------------------------------------------------

loc_6CB8F07F:				; CODE XREF: sub_6CB8ECDA+350j
					; sub_6CB8ECDA+361j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB8F1B8
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB8F0DB
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB8F1B8
; ---------------------------------------------------------------------------

loc_6CB8F0DB:				; CODE XREF: sub_6CB8ECDA+3C6j
		cmp	[ebp+var_40], 1Fh
		ja	short loc_6CB8F144
		cmp	[ebp+var_40], 3
		ja	short loc_6CB8F10A
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_24]
		jnz	short loc_6CB8F10A
		mov	eax, [ebp+var_24]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_24]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_40]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB8F118
; ---------------------------------------------------------------------------

loc_6CB8F10A:				; CODE XREF: sub_6CB8ECDA+40Bj
					; sub_6CB8ECDA+413j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		mov	[eax], dl

loc_6CB8F118:				; CODE XREF: sub_6CB8ECDA+42Ej
					; sub_6CB8ECDA+45Dj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8F118
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8F1B8
; ---------------------------------------------------------------------------

loc_6CB8F144:				; CODE XREF: sub_6CB8ECDA+405j
		cmp	[ebp+var_40], 117h
		ja	short loc_6CB8F196
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8F16A:				; CODE XREF: sub_6CB8ECDA+4AFj
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8F16A
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8F1B8
; ---------------------------------------------------------------------------

loc_6CB8F196:				; CODE XREF: sub_6CB8ECDA+471j
		mov	eax, [ebp+var_40]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB8F1B8:				; CODE XREF: sub_6CB8ECDA+3ADj
					; sub_6CB8ECDA+3FCj ...
		mov	eax, [ebp+var_30]
		add	[ebp+var_C], eax
		cmp	[ebp+var_30], 8
		ja	loc_6CB8F2E0
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8F206
		sub	[ebp+var_2C], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_2C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8F242
; ---------------------------------------------------------------------------

loc_6CB8F206:				; CODE XREF: sub_6CB8ECDA+4F5j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax

loc_6CB8F242:				; CODE XREF: sub_6CB8ECDA+52Aj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8F255
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8F447
; ---------------------------------------------------------------------------

loc_6CB8F255:				; CODE XREF: sub_6CB8ECDA+56Ej
		add	[ebp+var_1C], 1

loc_6CB8F259:				; CODE XREF: sub_6CB8ECDA+5D4j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB8F259
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8F442
; ---------------------------------------------------------------------------

loc_6CB8F2E0:				; CODE XREF: sub_6CB8ECDA+4E8j
		mov	eax, [ebp+var_2C]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_44]
		mov	[ebp+var_58], eax
		jmp	short loc_6CB8F2FF
; ---------------------------------------------------------------------------

loc_6CB8F2F7:				; CODE XREF: sub_6CB8ECDA+63Bj
		add	[ebp+var_28], 1
		add	[ebp+var_C], 1

loc_6CB8F2FF:				; CODE XREF: sub_6CB8ECDA+61Bj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_58]
		jnb	short loc_6CB8F317
		mov	eax, [ebp+var_28]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8F2F7

loc_6CB8F317:				; CODE XREF: sub_6CB8ECDA+62Bj
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 22h
		ja	short loc_6CB8F340
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8F37C
; ---------------------------------------------------------------------------

loc_6CB8F340:				; CODE XREF: sub_6CB8ECDA+64Ej
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_30], 22h
		jmp	short loc_6CB8F365
; ---------------------------------------------------------------------------

loc_6CB8F352:				; CODE XREF: sub_6CB8ECDA+692j
		sub	[ebp+var_30], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB8F365:				; CODE XREF: sub_6CB8ECDA+676j
		cmp	[ebp+var_30], 0FFh
		ja	short loc_6CB8F352
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		mov	[eax], dl

loc_6CB8F37C:				; CODE XREF: sub_6CB8ECDA+664j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8F3B7
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8F447
; ---------------------------------------------------------------------------

loc_6CB8F3B7:				; CODE XREF: sub_6CB8ECDA+6D0j
		add	[ebp+var_1C], 1

loc_6CB8F3BB:				; CODE XREF: sub_6CB8ECDA+736j
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 0FFFh
		shl	eax, 4
		mov	edx, eax
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB8F3BB
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8EDC0
; ---------------------------------------------------------------------------

loc_6CB8F442:				; CODE XREF: sub_6CB8ECDA+3A0j
					; sub_6CB8ECDA+601j
		jmp	loc_6CB8EDC0
; ---------------------------------------------------------------------------

loc_6CB8F447:				; CODE XREF: sub_6CB8ECDA+370j
					; sub_6CB8ECDA+576j ...
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8F47A
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_5C]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax

loc_6CB8F47A:				; CODE XREF: sub_6CB8ECDA+775j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB8ECDA	endp

; Exported entry  66. lzo1c_9_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_9_compress
lzo1c_9_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB8ECDA
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1c_do_compress
		leave
		retn
lzo1c_9_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8F4D6	proc near		; DATA XREF: lzo1c_99_compress+6o
					; .rdata:_lzo1c_99_compress_funco

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 78h
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_44], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_48], eax
		mov	eax, [ebp+var_48]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_8]
		add	eax, 1
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_4C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	ecx, ax
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		add	eax, ecx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 7
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax

loc_6CB8F5B6:				; CODE XREF: sub_6CB8F4D6+779j
					; sub_6CB8F4D6:loc_6CB8FC54j
		mov	[ebp+var_2C], 0
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	[ebp+var_38], 8
		mov	[ebp+var_3C], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_50], eax
		mov	[ebp+var_30], 0

loc_6CB8F5F9:				; CODE XREF: sub_6CB8F4D6+376j
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	edx, [ebp+var_28]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB8F637
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_28]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		cmp	[ebp+var_3C], 0
		jz	short loc_6CB8F637
		cmp	[ebp+var_3C], 3FFFh
		jbe	short loc_6CB8F63E

loc_6CB8F637:				; CODE XREF: sub_6CB8F4D6+143j
					; sub_6CB8F4D6+156j
		mov	eax, 1
		jmp	short loc_6CB8F643
; ---------------------------------------------------------------------------

loc_6CB8F63E:				; CODE XREF: sub_6CB8F4D6+15Fj
		mov	eax, 0

loc_6CB8F643:				; CODE XREF: sub_6CB8F4D6+166j
		test	eax, eax
		jz	short loc_6CB8F654
		mov	eax, [ebp+var_34]
		mov	edx, [ebp+var_C]
		mov	[eax], edx
		jmp	loc_6CB8F840
; ---------------------------------------------------------------------------

loc_6CB8F654:				; CODE XREF: sub_6CB8F4D6+16Fj
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+var_28]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_30]
		mov	ecx, [ebp+var_C]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB8F840
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8F83A
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8F83A
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8F83A
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB8F77E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8F77E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8F77E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8F77E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB8F77E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+1]
		mov	[ebp+var_28], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	short loc_6CB8F7C0

loc_6CB8F77E:				; CODE XREF: sub_6CB8F4D6+216j
					; sub_6CB8F4D6+236j ...
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	edx, eax
		mov	eax, [ebp+var_50]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		cmp	eax, [ebp+var_30]
		jbe	short loc_6CB8F7A6
		mov	eax, [ebp+var_58]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB8F7BE
; ---------------------------------------------------------------------------

loc_6CB8F7A6:				; CODE XREF: sub_6CB8F4D6+2C0j
		mov	eax, [ebp+var_58]
		cmp	eax, [ebp+var_30]
		jnz	short loc_6CB8F7BE
		mov	eax, [ebp+var_3C]
		cmp	eax, [ebp+var_2C]
		jnb	short loc_6CB8F7BE
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		jmp	short loc_6CB8F832
; ---------------------------------------------------------------------------

loc_6CB8F7BE:				; CODE XREF: sub_6CB8F4D6+2CEj
					; sub_6CB8F4D6+2D6j ...
		jmp	short loc_6CB8F832
; ---------------------------------------------------------------------------

loc_6CB8F7C0:				; CODE XREF: sub_6CB8F4D6+2A6j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_54], eax
		jmp	short loc_6CB8F7D0
; ---------------------------------------------------------------------------

loc_6CB8F7C8:				; CODE XREF: sub_6CB8F4D6+310j
		add	[ebp+var_28], 1
		add	[ebp+var_C], 1

loc_6CB8F7D0:				; CODE XREF: sub_6CB8F4D6+2F0j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_54]
		jnb	short loc_6CB8F7E8
		mov	eax, [ebp+var_28]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB8F7C8

loc_6CB8F7E8:				; CODE XREF: sub_6CB8F4D6+300j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_50]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		cmp	eax, [ebp+var_30]
		jbe	short loc_6CB8F81C
		mov	eax, [ebp+var_58]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_44]
		jb	short loc_6CB8F832
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		jmp	loc_6CB8F8CF
; ---------------------------------------------------------------------------

loc_6CB8F81C:				; CODE XREF: sub_6CB8F4D6+325j
		mov	eax, [ebp+var_58]
		cmp	eax, [ebp+var_30]
		jnz	short loc_6CB8F832
		mov	eax, [ebp+var_3C]
		cmp	eax, [ebp+var_2C]
		jnb	short loc_6CB8F832
		mov	eax, [ebp+var_3C]
		mov	[ebp+var_2C], eax

loc_6CB8F832:				; CODE XREF: sub_6CB8F4D6+2E6j
					; sub_6CB8F4D6:loc_6CB8F7BEj ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax
		jmp	short loc_6CB8F840
; ---------------------------------------------------------------------------

loc_6CB8F83A:				; CODE XREF: sub_6CB8F4D6+1B6j
					; sub_6CB8F4D6+1D6j ...
		mov	eax, [ebp+var_50]
		mov	[ebp+var_C], eax

loc_6CB8F840:				; CODE XREF: sub_6CB8F4D6+179j
					; sub_6CB8F4D6+196j ...
		add	[ebp+var_34], 4
		sub	[ebp+var_38], 1
		cmp	[ebp+var_38], 0
		jnz	loc_6CB8F5F9
		sub	[ebp+var_34], 20h
		mov	eax, [ebp+var_14]
		lea	edx, [eax+1]
		mov	[ebp+var_14], edx
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_34]
		add	edx, eax
		mov	eax, [ebp+var_C]
		mov	[edx], eax
		and	[ebp+var_14], 7
		cmp	[ebp+var_30], 3
		jbe	short loc_6CB8F87C
		jmp	short loc_6CB8F8CF
; ---------------------------------------------------------------------------

loc_6CB8F87C:				; CODE XREF: sub_6CB8F4D6+3A2j
		cmp	[ebp+var_30], 3
		jnz	short loc_6CB8F88D
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8F88D
		jmp	short loc_6CB8F8CF
; ---------------------------------------------------------------------------

loc_6CB8F88D:				; CODE XREF: sub_6CB8F4D6+3AAj
					; sub_6CB8F4D6+3B3j
		nop
		add	[ebp+var_C], 1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8F89F
		jmp	loc_6CB8FC59
; ---------------------------------------------------------------------------

loc_6CB8F89F:				; CODE XREF: sub_6CB8F4D6+3C2j
		mov	eax, [ebp+var_C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8FC54
; ---------------------------------------------------------------------------

loc_6CB8F8CF:				; CODE XREF: sub_6CB8F4D6+341j
					; sub_6CB8F4D6+3A4j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	loc_6CB8FA08
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_20]
		jnz	short loc_6CB8F92B
		mov	eax, [ebp+var_18]
		sub	eax, 2
		mov	edx, [ebp+var_18]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	loc_6CB8FA08
; ---------------------------------------------------------------------------

loc_6CB8F92B:				; CODE XREF: sub_6CB8F4D6+41Aj
		cmp	[ebp+var_40], 1Fh
		ja	short loc_6CB8F994
		cmp	[ebp+var_40], 3
		ja	short loc_6CB8F95A
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_24]
		jnz	short loc_6CB8F95A
		mov	eax, [ebp+var_24]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_24]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_40]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB8F968
; ---------------------------------------------------------------------------

loc_6CB8F95A:				; CODE XREF: sub_6CB8F4D6+45Fj
					; sub_6CB8F4D6+467j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		mov	[eax], dl

loc_6CB8F968:				; CODE XREF: sub_6CB8F4D6+482j
					; sub_6CB8F4D6+4B1j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8F968
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8FA08
; ---------------------------------------------------------------------------

loc_6CB8F994:				; CODE XREF: sub_6CB8F4D6+459j
		cmp	[ebp+var_40], 117h
		ja	short loc_6CB8F9E6
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_40]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB8F9BA:				; CODE XREF: sub_6CB8F4D6+503j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_1C]
		lea	ecx, [edx+1]
		mov	[ebp+var_1C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_40], 1
		cmp	[ebp+var_40], 0
		jnz	short loc_6CB8F9BA
		mov	eax, [ebp+var_C]
		add	eax, 4
		mov	[ebp+var_20], eax
		jmp	short loc_6CB8FA08
; ---------------------------------------------------------------------------

loc_6CB8F9E6:				; CODE XREF: sub_6CB8F4D6+4C5j
		mov	eax, [ebp+var_40]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax

loc_6CB8FA08:				; CODE XREF: sub_6CB8F4D6+401j
					; sub_6CB8F4D6+450j ...
		mov	eax, [ebp+var_30]
		add	[ebp+var_C], eax
		cmp	[ebp+var_30], 8
		ja	loc_6CB8FB33
		cmp	[ebp+var_2C], 2000h
		ja	short loc_6CB8FA56
		sub	[ebp+var_2C], 1
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_2C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 5
		mov	[eax], dl
		jmp	short loc_6CB8FA92
; ---------------------------------------------------------------------------

loc_6CB8FA56:				; CODE XREF: sub_6CB8F4D6+549j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax

loc_6CB8FA92:				; CODE XREF: sub_6CB8F4D6+57Ej
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8FAA5
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8FC59
; ---------------------------------------------------------------------------

loc_6CB8FAA5:				; CODE XREF: sub_6CB8F4D6+5C2j
		add	[ebp+var_1C], 1

loc_6CB8FAA9:				; CODE XREF: sub_6CB8F4D6+62Bj
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB8FAA9
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8FC54
; ---------------------------------------------------------------------------

loc_6CB8FB33:				; CODE XREF: sub_6CB8F4D6+53Cj
		cmp	[ebp+var_30], 22h
		ja	short loc_6CB8FB4F
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB8FB8B
; ---------------------------------------------------------------------------

loc_6CB8FB4F:				; CODE XREF: sub_6CB8F4D6+661j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+var_30], 22h
		jmp	short loc_6CB8FB74
; ---------------------------------------------------------------------------

loc_6CB8FB61:				; CODE XREF: sub_6CB8F4D6+6A5j
		sub	[ebp+var_30], 0FFh
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	byte ptr [eax],	0

loc_6CB8FB74:				; CODE XREF: sub_6CB8F4D6+689j
		cmp	[ebp+var_30], 0FFh
		ja	short loc_6CB8FB61
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_30]
		mov	[eax], dl

loc_6CB8FB8B:				; CODE XREF: sub_6CB8F4D6+677j
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		lea	edx, [eax+1]
		mov	[ebp+var_18], edx
		mov	edx, [ebp+var_2C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+var_18]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_48]
		jb	short loc_6CB8FBC6
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jmp	loc_6CB8FC59
; ---------------------------------------------------------------------------

loc_6CB8FBC6:				; CODE XREF: sub_6CB8F4D6+6E3j
		add	[ebp+var_1C], 1

loc_6CB8FBCA:				; CODE XREF: sub_6CB8F4D6+74Cj
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		imul	eax, 9F5Fh
		shr	eax, 5
		shl	eax, 3
		movzx	eax, ax
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_4C]
		add	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[edx], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_C]
		jb	short loc_6CB8FBCA
		mov	eax, [ebp+var_1C]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 0Ah
		xor	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		mov	[ebp+var_10], eax
		jmp	loc_6CB8F5B6
; ---------------------------------------------------------------------------

loc_6CB8FC54:				; CODE XREF: sub_6CB8F4D6+3F4j
					; sub_6CB8F4D6+658j
		jmp	loc_6CB8F5B6
; ---------------------------------------------------------------------------

loc_6CB8FC59:				; CODE XREF: sub_6CB8F4D6+3C4j
					; sub_6CB8F4D6+5CAj ...
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		cmp	edx, eax
		jz	short loc_6CB8FC8C
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_1C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_5C], eax
		mov	eax, [ebp+var_5C]
		mov	[esp+78h+var_70], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+78h+var_74], eax
		mov	eax, [ebp+var_18]
		mov	[esp+78h+var_78], eax
		call	_lzo1c_store_run
		mov	[ebp+var_18], eax

loc_6CB8FC8C:				; CODE XREF: sub_6CB8F4D6+78Bj
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB8F4D6	endp

; Exported entry  65. lzo1c_99_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_99_compress
lzo1c_99_compress proc near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_14], offset sub_6CB8F4D6
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	_lzo1c_do_compress
		leave
		retn
lzo1c_99_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB8FCE6(int,	void *,	size_t)
sub_6CB8FCE6	proc near		; CODE XREF: sub_6CB8FEA6+D5p

Dst		= dword	ptr -18h
Src		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+3Ch], 0
		cmp	[ebp+arg_4], 0
		jz	short loc_6CB8FD18
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CB8FD1A

loc_6CB8FD18:				; CODE XREF: sub_6CB8FCE6+2Aj
		jmp	short locret_6CB8FD80
; ---------------------------------------------------------------------------

loc_6CB8FD1A:				; CODE XREF: sub_6CB8FCE6+30j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_8]
		jnb	short loc_6CB8FD3B
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+arg_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+arg_8], eax

loc_6CB8FD3B:				; CODE XREF: sub_6CB8FCE6+3Cj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+5Ch]
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Src], eax ; Src
		mov	[esp+18h+Dst], edx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+40h], edx

locret_6CB8FD80:			; CODE XREF: sub_6CB8FCE6:loc_6CB8FD18j
		leave
		retn
sub_6CB8FCE6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB8FD82	proc near		; CODE XREF: sub_6CB8FEA6+1DDp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		sub	eax, [ebp+arg_8]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+58h], edx
		cmp	[ebp+arg_8], 0
		jz	locret_6CB8FEA4

loc_6CB8FDAB:				; CODE XREF: sub_6CB8FD82+11Cj
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 50h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CB8FE27
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 2828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CB8FE2C
; ---------------------------------------------------------------------------

loc_6CB8FE27:				; CODE XREF: sub_6CB8FD82+90j
		mov	eax, 0FFFFFFFFh

loc_6CB8FE2C:				; CODE XREF: sub_6CB8FD82+A3j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		add	ecx, 6828h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_4]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 2828h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 0B028h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		mov	[eax+edx*2+8], cx
		add	[ebp+arg_4], 1
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	loc_6CB8FDAB

locret_6CB8FEA4:			; CODE XREF: sub_6CB8FD82+23j
		leave
		retn
sub_6CB8FD82	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB8FEA6(int,	void *,	size_t)
sub_6CB8FEA6	proc near		; CODE XREF: sub_6CB90802+90p

Dst		= dword	ptr -28h
Val		= dword	ptr -24h
Size		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 3FFFh
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 800h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 2
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0Ch], 800h
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+18h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+50h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		mov	eax, [ebp+arg_0]
		add	eax, 1F058h
		mov	[esp+28h+Size],	8000h ;	Size
		mov	[esp+28h+Val], 0 ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+Size],	eax ; size_t
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+Val], eax ; void *
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax ; int
		call	sub_6CB8FCE6
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+44h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+58h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+24h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+1Ch]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CB9003C
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jbe	short loc_6CB8FFDE
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB8FFDE:				; CODE XREF: sub_6CB8FEA6+12Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+1Ch]
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+40h]
		lea	ebx, [ecx+50h]
		mov	ecx, [ebp+arg_0]
		add	ecx, ebx
		add	ecx, 0Ch
		mov	[esp+28h+Size],	edx ; Size
		mov	[esp+28h+Val], eax ; Src
		mov	[esp+28h+Dst], ecx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	ecx, [edx+1Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+24h]
		add	edx, ecx
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx

loc_6CB9003C:				; CODE XREF: sub_6CB8FEA6+11Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CB90056
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0

loc_6CB90056:				; CODE XREF: sub_6CB8FEA6+1A4j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 1
		jbe	short loc_6CB90088
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		test	eax, eax
		jz	short loc_6CB90088
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		mov	[esp+28h+Size],	eax
		mov	[esp+28h+Val], 0
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax
		call	sub_6CB8FD82

loc_6CB90088:				; CODE XREF: sub_6CB8FEA6+1B9j
					; sub_6CB8FEA6+1C3j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+58h]
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		cmp	edx, eax
		jb	short loc_6CB900BA
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		jmp	short loc_6CB900D8
; ---------------------------------------------------------------------------

loc_6CB900BA:				; CODE XREF: sub_6CB8FEA6+1FCj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		sub	ecx, eax
		mov	eax, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx

loc_6CB900D8:				; CODE XREF: sub_6CB8FEA6+212j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		ja	short loc_6CB9011B
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		mov	edx, [ebp+var_C]
		add	edx, 2
		mov	byte ptr [edx],	0
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	[eax], dl

loc_6CB9011B:				; CODE XREF: sub_6CB8FEA6+23Bj
		mov	eax, 0
		add	esp, 24h
		pop	ebx
		pop	ebp
		retn
sub_6CB8FEA6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB90126	proc near		; CODE XREF: sub_6CB90802+A4p
					; sub_6CB908CB+C1p
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_6CB90126	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9012B	proc near		; CODE XREF: sub_6CB90303+120p
					; sub_6CB908CB+98p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jnb	short loc_6CB9015E
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+2Ch]
		mov	eax, [edx+1Ch]
		lea	ecx, [eax+1]
		mov	[edx+1Ch], ecx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		jmp	short loc_6CB90163
; ---------------------------------------------------------------------------

loc_6CB9015E:				; CODE XREF: sub_6CB9012B+1Aj
		mov	eax, 0FFFFFFFFh

loc_6CB90163:				; CODE XREF: sub_6CB9012B+31j
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jns	short loc_6CB901B6
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CB90185
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB90185:				; CODE XREF: sub_6CB9012B+49j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		mov	edx, [ebp+arg_0]
		mov	byte ptr [edx+eax+5Ch],	0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB901EB
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		add	eax, edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB901EB
; ---------------------------------------------------------------------------

loc_6CB901B6:				; CODE XREF: sub_6CB9012B+3Fj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		mov	edx, [ebp+var_4]
		mov	ecx, edx
		mov	edx, [ebp+arg_0]
		mov	[edx+eax+5Ch], cl
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB901EB
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		add	edx, eax
		mov	eax, [ebp+var_4]
		mov	[edx], al

loc_6CB901EB:				; CODE XREF: sub_6CB9012B+76j
					; sub_6CB9012B+89j ...
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CB90214
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0

loc_6CB90214:				; CODE XREF: sub_6CB9012B+DDj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+44h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CB9023D
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0

loc_6CB9023D:				; CODE XREF: sub_6CB9012B+106j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short locret_6CB90266
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0

locret_6CB90266:			; CODE XREF: sub_6CB9012B+12Fj
		leave
		retn
sub_6CB9012B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB90268	proc near		; CODE XREF: sub_6CB90303+20p
					; sub_6CB905D5+222p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		test	eax, eax
		jnz	short loc_6CB902F2
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 50h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		mov	[eax+edx*2+8], cx
		jmp	short locret_6CB90301
; ---------------------------------------------------------------------------

loc_6CB902F2:				; CODE XREF: sub_6CB90268+Ej
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx

locret_6CB90301:			; CODE XREF: sub_6CB90268+88j
		leave
		retn
sub_6CB90268	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB90303	proc near		; CODE XREF: sub_6CB908CB+21p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		cmp	[ebp+arg_4], 0
		jz	locret_6CB90436

loc_6CB90313:				; CODE XREF: sub_6CB90303+12Dj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB90268
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CB903AF
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 2828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CB903B4
; ---------------------------------------------------------------------------

loc_6CB903AF:				; CODE XREF: sub_6CB90303+97j
		mov	eax, 0FFFFFFFFh

loc_6CB903B4:				; CODE XREF: sub_6CB90303+AAj
		mov	edx, [ebp+arg_0]
		add	ecx, 6828h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 2828h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 0B028h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB9012B
		sub	[ebp+arg_4], 1
		cmp	[ebp+arg_4], 0
		jnz	loc_6CB90313

locret_6CB90436:			; CODE XREF: sub_6CB90303+Aj
		leave
		retn
sub_6CB90303	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB90438	proc near		; CODE XREF: sub_6CB905D5+1A6p

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_D		= byte ptr -0Dh
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 30h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		add	eax, 5Ch
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al
		jmp	loc_6CB905C2
; ---------------------------------------------------------------------------

loc_6CB90496:				; CODE XREF: sub_6CB90438+195j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_14]
		add	eax, edx
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_8]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		cmp	al, [ebp+var_D]
		jnz	loc_6CB905AB
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_8]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	ecx, [ebp+var_4]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB905AB
		mov	eax, [ebp+var_8]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB905AB
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB905AB
		add	[ebp+var_4], 2
		add	[ebp+var_8], 2

loc_6CB90518:				; CODE XREF: sub_6CB90438+FEj
		add	[ebp+var_4], 1
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CB90538
		mov	eax, [ebp+var_4]
		movzx	edx, byte ptr [eax]
		add	[ebp+var_8], 1
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB90518

loc_6CB90538:				; CODE XREF: sub_6CB90438+EAj
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_C]
		jbe	short loc_6CB905AB
		mov	eax, [ebp+var_24]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB90572
		jmp	short locret_6CB905D3
; ---------------------------------------------------------------------------

loc_6CB90572:				; CODE XREF: sub_6CB90438+136j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+10h]
		cmp	eax, [ebp+var_C]
		ja	short loc_6CB9057F
		jmp	short locret_6CB905D3
; ---------------------------------------------------------------------------

loc_6CB9057F:				; CODE XREF: sub_6CB90438+143j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 0B028h
		movzx	eax, word ptr [eax+edx*2+0Ah]
		movzx	eax, ax
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB9059A
		jmp	short locret_6CB905D3
; ---------------------------------------------------------------------------

loc_6CB9059A:				; CODE XREF: sub_6CB90438+15Ej
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al

loc_6CB905AB:				; CODE XREF: sub_6CB90438+86j
					; sub_6CB90438+A4j ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 6828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+arg_4], eax

loc_6CB905C2:				; CODE XREF: sub_6CB90438+59j
		mov	eax, [ebp+arg_8]
		lea	edx, [eax-1]
		mov	[ebp+arg_8], edx
		test	eax, eax
		jnz	loc_6CB90496

locret_6CB905D3:			; CODE XREF: sub_6CB90438+138j
					; sub_6CB90438+145j ...
		leave
		retn
sub_6CB90438	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB905D5	proc near		; CODE XREF: sub_6CB908CB+75p

var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 1Ch
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 0F828h
		movzx	eax, word ptr [eax+ecx*2+8]
		test	ax, ax
		jz	short loc_6CB90663
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 2828h
		movzx	eax, word ptr [eax+ecx*2+0Ch]
		jmp	short loc_6CB90668
; ---------------------------------------------------------------------------

loc_6CB90663:				; CODE XREF: sub_6CB905D5+79j
		mov	eax, 0FFFFFFFFh

loc_6CB90668:				; CODE XREF: sub_6CB905D5+8Cj
		mov	ecx, [ebp+arg_0]
		lea	ebx, [edx+6828h]
		mov	[ecx+ebx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		add	edx, 6828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_C]
		add	ebx, 0F828h
		mov	[edx+ebx*2+8], cx
		movzx	eax, ax
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		cmp	eax, [ebp+var_8]
		jnb	short loc_6CB906D3
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_6CB906D3
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_8], eax

loc_6CB906D3:				; CODE XREF: sub_6CB905D5+E9j
					; sub_6CB905D5+F3j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 2828h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	edx, al
		mov	eax, [ebp+arg_0]
		mov	[eax+28h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jb	short loc_6CB9075C
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jnz	short loc_6CB90730
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0FFFFFFFFh

loc_6CB90730:				; CODE XREF: sub_6CB905D5+14Fj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 0B028h
		mov	[eax+edx*2+0Ah], cx
		jmp	loc_6CB907E7
; ---------------------------------------------------------------------------

loc_6CB9075C:				; CODE XREF: sub_6CB905D5+145j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		jbe	short loc_6CB90780
		mov	eax, [ebp+var_8]
		mov	[esp+20h+var_18], eax
		mov	eax, [ebp+var_10]
		mov	[esp+20h+var_1C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+20h+var_20], eax
		call	sub_6CB90438

loc_6CB90780:				; CODE XREF: sub_6CB905D5+190j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, [ebp+var_14]
		jbe	short loc_6CB907CB
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		cmp	edx, eax
		jbe	short loc_6CB907AD
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		sub	edx, eax
		mov	eax, edx
		jmp	short loc_6CB907C5
; ---------------------------------------------------------------------------

loc_6CB907AD:				; CODE XREF: sub_6CB905D5+1C4j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		sub	ecx, eax
		mov	eax, ecx
		add	eax, edx

loc_6CB907C5:				; CODE XREF: sub_6CB905D5+1D6j
		mov	edx, [ebp+arg_0]
		mov	[edx+20h], eax

loc_6CB907CB:				; CODE XREF: sub_6CB905D5+1B4j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		add	ecx, 0B028h
		mov	[eax+ecx*2+0Ah], dx

loc_6CB907E7:				; CODE XREF: sub_6CB905D5+182j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		mov	[esp+20h+var_1C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+20h+var_20], eax
		call	sub_6CB90268
		add	esp, 1Ch
		pop	ebx
		pop	ebp
		retn
sub_6CB905D5	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB90802(int,	int, void *, size_t, int)
sub_6CB90802	proc near		; CODE XREF: lzo1c_999_compress_callback+CDp

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 1
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+14h]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+34h]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_20], eax ;	size_t
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_24], eax ;	void *
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax ;	int
		call	sub_6CB8FEA6
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jz	short loc_6CB908B0
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax
		call	sub_6CB90126
		mov	eax, [ebp+var_C]
		jmp	short locret_6CB908C9
; ---------------------------------------------------------------------------

loc_6CB908B0:				; CODE XREF: sub_6CB90802+9Cj
		mov	eax, [ebp+arg_10]
		and	eax, 1
		test	eax, eax
		setnz	al
		movzx	edx, al
		mov	eax, [ebp+arg_4]
		mov	[eax+14h], edx
		mov	eax, 0

locret_6CB908C9:			; CODE XREF: sub_6CB90802+ACj
		leave
		retn
sub_6CB90802	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB908CB	proc near		; CODE XREF: lzo1c_999_compress_callback+10Fp
					; lzo1c_999_compress_callback+248p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		cmp	[ebp+arg_C], 0
		jz	short loc_6CB9090E
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB90303
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	eax, edx
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		jmp	short loc_6CB90926
; ---------------------------------------------------------------------------

loc_6CB9090E:				; CODE XREF: sub_6CB908CB+Bj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx

loc_6CB90926:				; CODE XREF: sub_6CB908CB+41j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+1Ch], 2
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB905D5
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+20h]
		mov	eax, [ebp+arg_0]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB9012B
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+28h]
		test	eax, eax
		jns	short loc_6CB90993
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB90126
		jmp	short loc_6CB909A2
; ---------------------------------------------------------------------------

loc_6CB90993:				; CODE XREF: sub_6CB908CB+A5j
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+24h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+4], edx

loc_6CB909A2:				; CODE XREF: sub_6CB908CB+C6j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		neg	eax
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+18h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB90A21
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB90A21
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+30h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		cmp	edx, eax
		jbe	short loc_6CB90A21
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+arg_0]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+arg_0]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+var_10], ebx
		mov	[esp+18h+var_14], ecx
		mov	[esp+18h+var_18], edx
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		lea	edx, [eax+400h]
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx

loc_6CB90A21:				; CODE XREF: sub_6CB908CB+F5j
					; sub_6CB908CB+102j ...
		mov	eax, 0
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
sub_6CB908CB	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB90A2C	proc near		; CODE XREF: lzo1c_999_compress_callback+3F6p

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		cmp	[ebp+arg_8], 8
		ja	short loc_6CB90A85
		cmp	[ebp+arg_C], 2000h
		ja	short loc_6CB90A85
		sub	[ebp+arg_C], 1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+arg_C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+5Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+5Ch], edx
		jmp	loc_6CB90B21
; ---------------------------------------------------------------------------

loc_6CB90A85:				; CODE XREF: sub_6CB90A2C+7j
					; sub_6CB90A2C+10j
		cmp	[ebp+arg_8], 22h
		ja	short loc_6CB90AA1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 3
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB90ADD
; ---------------------------------------------------------------------------

loc_6CB90AA1:				; CODE XREF: sub_6CB90A2C+5Dj
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	20h
		sub	[ebp+arg_8], 22h
		jmp	short loc_6CB90AC6
; ---------------------------------------------------------------------------

loc_6CB90AB3:				; CODE XREF: sub_6CB90A2C+A1j
		sub	[ebp+arg_8], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB90AC6:				; CODE XREF: sub_6CB90A2C+85j
		cmp	[ebp+arg_8], 0FFh
		ja	short loc_6CB90AB3
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl

loc_6CB90ADD:				; CODE XREF: sub_6CB90A2C+73j
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		and	edx, 3Fh
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4Ch], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+50h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+60h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+60h], edx

loc_6CB90B21:				; CODE XREF: sub_6CB90A2C+54j
		mov	eax, [ebp+arg_4]
		pop	ebp
		retn
sub_6CB90A2C	endp

; Exported entry  64. lzo1c_999_compress_callback

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_999_compress_callback
lzo1c_999_compress_callback proc near	; CODE XREF: lzo1c_999_compress+38p

var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_94		= byte ptr -94h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0B4h
		lea	eax, [ebp+var_94]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+arg_0]
		mov	[eax+20h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [eax+20h]
		mov	eax, [ebp+var_24]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	edx, eax
		mov	eax, [ebp+var_24]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+arg_14]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+60h], 0
		mov	eax, [ebp+var_24]
		mov	edx, [eax+60h]
		mov	eax, [ebp+var_24]
		mov	[eax+5Ch], edx
		mov	eax, [ebp+var_24]
		mov	edx, [eax+5Ch]
		mov	eax, [ebp+var_24]
		mov	[eax+58h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [eax+58h]
		mov	eax, [ebp+var_24]
		mov	[eax+54h], edx
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_24]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_10], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+4Ch], 0
		mov	eax, [ebp+arg_8]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_24]
		mov	[eax+50h], edx
		mov	[esp+0B8h+var_A8], 0 ; int
		mov	[esp+0B8h+var_AC], 0 ; size_t
		mov	[esp+0B8h+var_B0], 0 ; void *
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax ; int
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax ; int
		call	sub_6CB90802
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 0
		jz	short loc_6CB90C09
		mov	eax, [ebp+var_2C]
		jmp	loc_6CB9101F
; ---------------------------------------------------------------------------

loc_6CB90C09:				; CODE XREF: lzo1c_999_compress_callback+D9j
		cmp	[ebp+arg_18], 0
		jz	short loc_6CB90C18
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_18]
		mov	[eax+0Ch], edx

loc_6CB90C18:				; CODE XREF: lzo1c_999_compress_callback+E7j
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], 0
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB908CB
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 0
		jz	short loc_6CB90C4B
		mov	eax, [ebp+var_2C]
		jmp	loc_6CB9101F
; ---------------------------------------------------------------------------

loc_6CB90C4B:				; CODE XREF: lzo1c_999_compress_callback+11Bj
		jmp	loc_6CB90F5C
; ---------------------------------------------------------------------------

loc_6CB90C50:				; CODE XREF: lzo1c_999_compress_callback+43Ej
		mov	[ebp+var_1C], 0FFFFFFFFh
		mov	[ebp+var_20], 0
		mov	eax, [ebp+var_24]
		mov	eax, [eax+8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_24]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_30], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB90C89
		mov	eax, [ebp+var_24]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		neg	eax
		add	eax, edx
		mov	[ebp+var_10], eax

loc_6CB90C89:				; CODE XREF: lzo1c_999_compress_callback+14Ej
		cmp	[ebp+var_18], 2
		jbe	short loc_6CB90C9E
		cmp	[ebp+var_18], 3
		ja	short loc_6CB90CAA
		cmp	[ebp+var_30], 2000h
		jbe	short loc_6CB90CAA

loc_6CB90C9E:				; CODE XREF: lzo1c_999_compress_callback+167j
		mov	[ebp+var_18], 0
		jmp	loc_6CB90D2F
; ---------------------------------------------------------------------------

loc_6CB90CAA:				; CODE XREF: lzo1c_999_compress_callback+16Dj
					; lzo1c_999_compress_callback+176j
		cmp	[ebp+var_14], 0
		jz	short loc_6CB90D09
		cmp	[ebp+var_14], 1
		jnz	short loc_6CB90CCA
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4Ch]
		cmp	eax, 3
		jnz	short loc_6CB90CCA
		mov	[ebp+var_1C], 0FFFFFFFFh
		jmp	short loc_6CB90D07
; ---------------------------------------------------------------------------

loc_6CB90CCA:				; CODE XREF: lzo1c_999_compress_callback+18Ej
					; lzo1c_999_compress_callback+199j
		cmp	[ebp+var_14], 3
		jnz	short loc_6CB90CE4
		mov	eax, [ebp+var_24]
		mov	eax, [eax+50h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB90CE4
		mov	[ebp+var_1C], 0FFFFFFFFh
		jmp	short loc_6CB90D07
; ---------------------------------------------------------------------------

loc_6CB90CE4:				; CODE XREF: lzo1c_999_compress_callback+1A8j
					; lzo1c_999_compress_callback+1B3j
		cmp	[ebp+var_14], 2
		ja	short loc_6CB90CFE
		mov	eax, [ebp+var_24]
		mov	eax, [eax+50h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB90CFE
		mov	[ebp+var_1C], 0
		jmp	short loc_6CB90D07
; ---------------------------------------------------------------------------

loc_6CB90CFE:				; CODE XREF: lzo1c_999_compress_callback+1C2j
					; lzo1c_999_compress_callback+1CDj
		mov	[ebp+var_1C], 1
		jmp	short loc_6CB90D2F
; ---------------------------------------------------------------------------

loc_6CB90D07:				; CODE XREF: lzo1c_999_compress_callback+1A2j
					; lzo1c_999_compress_callback+1BCj ...
		jmp	short loc_6CB90D2F
; ---------------------------------------------------------------------------

loc_6CB90D09:				; CODE XREF: lzo1c_999_compress_callback+188j
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4Ch]
		cmp	eax, 3
		jz	short loc_6CB90D1F
		mov	eax, [ebp+var_24]
		mov	eax, [eax+50h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB90D28

loc_6CB90D1F:				; CODE XREF: lzo1c_999_compress_callback+1ECj
		mov	[ebp+var_1C], 0
		jmp	short loc_6CB90D2F
; ---------------------------------------------------------------------------

loc_6CB90D28:				; CODE XREF: lzo1c_999_compress_callback+1F7j
		mov	[ebp+var_1C], 0FFFFFFFFh

loc_6CB90D2F:				; CODE XREF: lzo1c_999_compress_callback+17Fj
					; lzo1c_999_compress_callback+1DFj ...
		cmp	[ebp+var_18], 0
		jnz	short loc_6CB90D3C
		mov	[ebp+var_1C], 0FFFFFFFFh

loc_6CB90D3C:				; CODE XREF: lzo1c_999_compress_callback+20Dj
		cmp	[ebp+var_1C], 0
		js	loc_6CB90DC7
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB90DC7
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], 1
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB908CB
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_18], 8
		ja	short loc_6CB90D96
		cmp	[ebp+var_30], 2000h
		ja	short loc_6CB90D96
		mov	eax, [ebp+var_24]
		mov	eax, [eax+0Ch]
		cmp	eax, 2000h
		jbe	short loc_6CB90D96
		add	[ebp+var_1C], 1

loc_6CB90D96:				; CODE XREF: lzo1c_999_compress_callback+254j
					; lzo1c_999_compress_callback+25Dj ...
		mov	eax, [ebp+var_24]
		mov	eax, [eax+8]
		mov	ecx, [ebp+var_1C]
		mov	edx, [ebp+var_18]
		add	edx, ecx
		cmp	eax, edx
		jb	short loc_6CB90DC0
		mov	eax, [ebp+var_24]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_24]
		mov	[eax+48h], edx
		add	[ebp+var_14], 1
		jmp	loc_6CB90F5C
; ---------------------------------------------------------------------------

loc_6CB90DC0:				; CODE XREF: lzo1c_999_compress_callback+280j
		mov	[ebp+var_20], 1

loc_6CB90DC7:				; CODE XREF: lzo1c_999_compress_callback+21Aj
					; lzo1c_999_compress_callback+229j
		cmp	[ebp+var_18], 0
		jnz	short loc_6CB90DFB
		add	[ebp+var_14], 1
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], 1
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB908CB
		mov	[ebp+var_2C], eax
		jmp	loc_6CB90F4A
; ---------------------------------------------------------------------------

loc_6CB90DFB:				; CODE XREF: lzo1c_999_compress_callback+2A5j
		cmp	[ebp+var_14], 0
		jz	loc_6CB90EF7
		cmp	[ebp+var_14], 1
		jnz	short loc_6CB90E52
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4Ch]
		cmp	eax, 3
		jnz	short loc_6CB90E52
		mov	eax, [ebp+var_C]
		sub	eax, 2
		mov	edx, [ebp+var_C]
		sub	edx, 2
		movzx	edx, byte ptr [edx]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_24]
		mov	eax, [eax+54h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_24]
		mov	[eax+54h], edx
		jmp	short loc_6CB90ED0
; ---------------------------------------------------------------------------

loc_6CB90E52:				; CODE XREF: lzo1c_999_compress_callback+2E3j
					; lzo1c_999_compress_callback+2EEj
		cmp	[ebp+var_14], 3
		ja	short loc_6CB90EB4
		mov	eax, [ebp+var_24]
		mov	eax, [eax+50h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB90EB4
		mov	eax, [ebp+var_24]
		mov	eax, [eax+50h]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_24]
		mov	eax, [eax+50h]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		mov	ecx, [ebp+var_14]
		shl	ecx, 6
		or	eax, ecx
		mov	[edx], al

loc_6CB90E82:				; CODE XREF: lzo1c_999_compress_callback+37Bj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB90E82
		mov	eax, [ebp+var_24]
		mov	eax, [eax+58h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_24]
		mov	[eax+58h], edx
		jmp	short loc_6CB90ED0
; ---------------------------------------------------------------------------

loc_6CB90EB4:				; CODE XREF: lzo1c_999_compress_callback+330j
					; lzo1c_999_compress_callback+33Bj
		mov	eax, [ebp+var_14]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0B8h+var_B8], eax
		call	_lzo1c_store_run
		mov	[ebp+var_C], eax

loc_6CB90ED0:				; CODE XREF: lzo1c_999_compress_callback+32Aj
					; lzo1c_999_compress_callback+38Cj
		cmp	[ebp+var_14], 117h
		ja	short loc_6CB90EE4
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+var_18]
		mov	[eax+4Ch], edx
		jmp	short loc_6CB90EEE
; ---------------------------------------------------------------------------

loc_6CB90EE4:				; CODE XREF: lzo1c_999_compress_callback+3B1j
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+4Ch], 0

loc_6CB90EEE:				; CODE XREF: lzo1c_999_compress_callback+3BCj
		mov	[ebp+var_14], 0
		jmp	short loc_6CB90F01
; ---------------------------------------------------------------------------

loc_6CB90EF7:				; CODE XREF: lzo1c_999_compress_callback+2D9j
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+4Ch], 0

loc_6CB90F01:				; CODE XREF: lzo1c_999_compress_callback+3CFj
		mov	eax, [ebp+var_30]
		mov	[esp+0B8h+var_AC], eax
		mov	eax, [ebp+var_18]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB90A2C
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[esp+0B8h+var_AC], eax
		mov	eax, [ebp+var_18]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB908CB
		mov	[ebp+var_2C], eax

loc_6CB90F4A:				; CODE XREF: lzo1c_999_compress_callback+2D0j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_24]
		mov	[eax+34h], edx

loc_6CB90F5C:				; CODE XREF: lzo1c_999_compress_callback:loc_6CB90C4Bj
					; lzo1c_999_compress_callback+295j
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		test	eax, eax
		jnz	loc_6CB90C50
		cmp	[ebp+var_14], 0
		jz	short loc_6CB90F8C
		mov	eax, [ebp+var_14]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0B8h+var_B8], eax
		call	_lzo1c_store_run
		mov	[ebp+var_C], eax

loc_6CB90F8C:				; CODE XREF: lzo1c_999_compress_callback+448j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	21h
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_24]
		mov	[eax+34h], edx
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_24]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB9101A
		mov	eax, [ebp+var_24]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB9101A
		mov	eax, [ebp+var_24]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+var_24]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+var_24]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+var_24]
		mov	edx, [edx+2Ch]
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], ebx
		mov	[esp+0B8h+var_B4], ecx
		mov	[esp+0B8h+var_B8], edx
		call	eax

loc_6CB9101A:				; CODE XREF: lzo1c_999_compress_callback+4B5j
					; lzo1c_999_compress_callback+4C2j
		mov	eax, 0

loc_6CB9101F:				; CODE XREF: lzo1c_999_compress_callback+DEj
					; lzo1c_999_compress_callback+120j
		add	esp, 0B4h
		pop	ebx
		pop	ebp
		retn
lzo1c_999_compress_callback endp

; Exported entry  63. lzo1c_999_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_999_compress
lzo1c_999_compress proc	near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_10], 0
		mov	[esp+28h+var_14], 0
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	lzo1c_999_compress_callback
		leave
		retn
lzo1c_999_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  27. _lzo1c_do_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _lzo1c_do_compress
_lzo1c_do_compress proc	near		; CODE XREF: lzo1c_1_compress+30p
					; lzo1c_2_compress+30p	...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		cmp	[ebp+arg_4], 0
		jnz	short loc_6CB91090
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	[ebp+var_C], 0
		jmp	short loc_6CB91104
; ---------------------------------------------------------------------------

loc_6CB91090:				; CODE XREF: _lzo1c_do_compress+Aj
		cmp	[ebp+arg_4], 0Ah
		ja	short loc_6CB910DA
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_38], eax
		call	_lzo1c_store_run
		mov	edx, eax
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_4]
		jbe	short loc_6CB910D0
		mov	eax, 0
		jmp	short loc_6CB910D5
; ---------------------------------------------------------------------------

loc_6CB910D0:				; CODE XREF: _lzo1c_do_compress+55j
		mov	eax, 0FFFFFFFFh

loc_6CB910D5:				; CODE XREF: _lzo1c_do_compress+5Cj
		mov	[ebp+var_C], eax
		jmp	short loc_6CB91104
; ---------------------------------------------------------------------------

loc_6CB910DA:				; CODE XREF: _lzo1c_do_compress+22j
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax
		mov	eax, [ebp+arg_14]
		call	eax
		mov	[ebp+var_C], eax

loc_6CB91104:				; CODE XREF: _lzo1c_do_compress+1Cj
					; _lzo1c_do_compress+66j
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9113C
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		mov	byte ptr [eax],	21h
		mov	eax, [ebp+var_10]
		add	eax, 1
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		add	eax, 2
		mov	byte ptr [eax],	0
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		lea	edx, [eax+3]
		mov	eax, [ebp+arg_C]
		mov	[eax], edx

loc_6CB9113C:				; CODE XREF: _lzo1c_do_compress+96j
		mov	eax, [ebp+var_C]
		leave
		retn
_lzo1c_do_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  68. lzo1c_decompress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_decompress
lzo1c_decompress proc near

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax

loc_6CB9116B:				; CODE XREF: lzo1c_decompress+259j
					; lzo1c_decompress:loc_6CB91539j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 1Fh
		ja	loc_6CB91318
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9120B
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0F7h
		jbe	short loc_6CB91207
		sub	[ebp+var_C], 0F8h
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB911BE
		mov	[ebp+var_C], 118h
		jmp	short loc_6CB911D8
; ---------------------------------------------------------------------------

loc_6CB911BE:				; CODE XREF: lzo1c_decompress+65j
		mov	[ebp+var_14], 100h

loc_6CB911C5:				; CODE XREF: lzo1c_decompress+82j
		shl	[ebp+var_14], 1
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB911C5
		mov	eax, [ebp+var_14]
		mov	[ebp+var_C], eax

loc_6CB911D8:				; CODE XREF: lzo1c_decompress+6Ej
					; lzo1c_decompress+B2j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		mov	eax, [ebp+var_4]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_8]
		mov	eax, [eax+4]
		mov	[edx], eax
		add	[ebp+var_4], 8
		add	[ebp+var_8], 8
		sub	[ebp+var_C], 8
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB911D8
		jmp	loc_6CB91539
; ---------------------------------------------------------------------------

loc_6CB91207:				; CODE XREF: lzo1c_decompress+58j
		add	[ebp+var_C], 20h

loc_6CB9120B:				; CODE XREF: lzo1c_decompress+3Dj
		cmp	[ebp+var_C], 3
		jbe	short loc_6CB91256

loc_6CB91211:				; CODE XREF: lzo1c_decompress+DDj
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB91211
		cmp	[ebp+var_C], 0
		jz	short loc_6CB91277

loc_6CB91233:				; CODE XREF: lzo1c_decompress+104j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB91233
		jmp	short loc_6CB91277
; ---------------------------------------------------------------------------

loc_6CB91256:				; CODE XREF: lzo1c_decompress+C1j
					; lzo1c_decompress+127j ...
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB91256

loc_6CB91277:				; CODE XREF: lzo1c_decompress+E3j
					; lzo1c_decompress+106j ...
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 1Fh
		jbe	short loc_6CB91294
		jmp	loc_6CB91318
; ---------------------------------------------------------------------------

loc_6CB91294:				; CODE XREF: lzo1c_decompress+13Fj
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, [ebp+var_C]
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB91277
; ---------------------------------------------------------------------------

loc_6CB91318:				; CODE XREF: lzo1c_decompress+33j
					; lzo1c_decompress+141j
		cmp	[ebp+var_C], 3Fh
		jbe	loc_6CB913AC
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		and	eax, 1Fh
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, ecx
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB91386:				; CODE XREF: lzo1c_decompress+257j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB91386
		jmp	loc_6CB9116B
; ---------------------------------------------------------------------------

loc_6CB913AC:				; CODE XREF: lzo1c_decompress+1CEj
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB913E7
		jmp	short loc_6CB913C3
; ---------------------------------------------------------------------------

loc_6CB913B8:				; CODE XREF: lzo1c_decompress+27Dj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CB913C3:				; CODE XREF: lzo1c_decompress+268j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB913B8
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CB913E7:				; CODE XREF: lzo1c_decompress+266j
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3Fh
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CB91446
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jz	loc_6CB91554
		jmp	loc_6CB9153E
; ---------------------------------------------------------------------------

loc_6CB91446:				; CODE XREF: lzo1c_decompress+2D3j
		cmp	[ebp+var_C], 4
		jbe	short loc_6CB914B6
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CB914B6
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 1

loc_6CB91471:				; CODE XREF: lzo1c_decompress+33Dj
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB91471
		cmp	[ebp+var_C], 0
		jz	short loc_6CB914B4

loc_6CB91493:				; CODE XREF: lzo1c_decompress+364j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB91493

loc_6CB914B4:				; CODE XREF: lzo1c_decompress+343j
		jmp	short loc_6CB9151C
; ---------------------------------------------------------------------------

loc_6CB914B6:				; CODE XREF: lzo1c_decompress+2FCj
					; lzo1c_decompress+30Bj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB914FB:				; CODE XREF: lzo1c_decompress+3CCj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB914FB

loc_6CB9151C:				; CODE XREF: lzo1c_decompress:loc_6CB914B4j
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		shr	al, 6
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jz	short loc_6CB91539
		jmp	loc_6CB91256
; ---------------------------------------------------------------------------

loc_6CB91539:				; CODE XREF: lzo1c_decompress+B4j
					; lzo1c_decompress+3E4j
		jmp	loc_6CB9116B
; ---------------------------------------------------------------------------

loc_6CB9153E:				; CODE XREF: lzo1c_decompress+2F3j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jnb	short loc_6CB9154D
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CB91559
; ---------------------------------------------------------------------------

loc_6CB9154D:				; CODE XREF: lzo1c_decompress+3F6j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB91559
; ---------------------------------------------------------------------------

loc_6CB91554:				; CODE XREF: lzo1c_decompress+2EDj
		mov	eax, 0

locret_6CB91559:			; CODE XREF: lzo1c_decompress+3FDj
					; lzo1c_decompress+404j
		leave
		retn
lzo1c_decompress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  71. lzo1c_decompress_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_decompress_safe
lzo1c_decompress_safe proc near		; CODE XREF: lzo1c_decompress_asm_safe+28p

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		jmp	loc_6CB91AFD
; ---------------------------------------------------------------------------

loc_6CB91595:				; CODE XREF: lzo1c_decompress_safe+59Dj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 1Fh
		ja	loc_6CB91801
		cmp	[ebp+var_C], 0
		jnz	loc_6CB91674
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB915CA
		jmp	loc_6CB91B3E
; ---------------------------------------------------------------------------

loc_6CB915CA:				; CODE XREF: lzo1c_decompress_safe+5Dj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0F7h
		jbe	loc_6CB91670
		sub	[ebp+var_C], 0F8h
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB915FF
		mov	[ebp+var_C], 118h
		jmp	short loc_6CB91619
; ---------------------------------------------------------------------------

loc_6CB915FF:				; CODE XREF: lzo1c_decompress_safe+8Ej
		mov	[ebp+var_14], 100h

loc_6CB91606:				; CODE XREF: lzo1c_decompress_safe+ABj
		shl	[ebp+var_14], 1
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB91606
		mov	eax, [ebp+var_14]
		mov	[ebp+var_C], eax

loc_6CB91619:				; CODE XREF: lzo1c_decompress_safe+97j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB9162D
		jmp	loc_6CB91B3E
; ---------------------------------------------------------------------------

loc_6CB9162D:				; CODE XREF: lzo1c_decompress_safe+C0j
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB91641
		jmp	loc_6CB91B56
; ---------------------------------------------------------------------------

loc_6CB91641:				; CODE XREF: lzo1c_decompress_safe+D4j
					; lzo1c_decompress_safe+103j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		mov	eax, [ebp+var_4]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_8]
		mov	eax, [eax+4]
		mov	[edx], eax
		add	[ebp+var_4], 8
		add	[ebp+var_8], 8
		sub	[ebp+var_C], 8
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB91641
		jmp	loc_6CB91AFD
; ---------------------------------------------------------------------------

loc_6CB91670:				; CODE XREF: lzo1c_decompress_safe+7Dj
		add	[ebp+var_C], 20h

loc_6CB91674:				; CODE XREF: lzo1c_decompress_safe+4Fj
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB91688
		jmp	loc_6CB91B3E
; ---------------------------------------------------------------------------

loc_6CB91688:				; CODE XREF: lzo1c_decompress_safe+11Bj
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB9169C
		jmp	loc_6CB91B56
; ---------------------------------------------------------------------------

loc_6CB9169C:				; CODE XREF: lzo1c_decompress_safe+12Fj
		cmp	[ebp+var_C], 3
		jbe	short loc_6CB916EA

loc_6CB916A2:				; CODE XREF: lzo1c_decompress_safe+156j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB916A2
		cmp	[ebp+var_C], 0
		jz	short loc_6CB9170B

loc_6CB916C4:				; CODE XREF: lzo1c_decompress_safe+17Dj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB916C4
		jmp	loc_6CB917F0
; ---------------------------------------------------------------------------

loc_6CB916EA:				; CODE XREF: lzo1c_decompress_safe+13Aj
					; lzo1c_decompress_safe+1A3j ...
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB916EA

loc_6CB9170B:				; CODE XREF: lzo1c_decompress_safe+15Cj
		jmp	loc_6CB917F0
; ---------------------------------------------------------------------------

loc_6CB91710:				; CODE XREF: lzo1c_decompress_safe+290j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 1Fh
		jbe	short loc_6CB9172D
		jmp	loc_6CB91801
; ---------------------------------------------------------------------------

loc_6CB9172D:				; CODE XREF: lzo1c_decompress_safe+1C0j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB91741
		jmp	loc_6CB91B3E
; ---------------------------------------------------------------------------

loc_6CB91741:				; CODE XREF: lzo1c_decompress_safe+1D4j
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		ja	short loc_6CB91755
		jmp	loc_6CB91B56
; ---------------------------------------------------------------------------

loc_6CB91755:				; CODE XREF: lzo1c_decompress_safe+1E8j
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, [ebp+var_C]
		neg	eax
		add	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB91B6E
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB91B6E
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB917F0:				; CODE XREF: lzo1c_decompress_safe+17Fj
					; lzo1c_decompress_safe:loc_6CB9170Bj
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jb	loc_6CB91710
		jmp	loc_6CB91B09
; ---------------------------------------------------------------------------

loc_6CB91801:				; CODE XREF: lzo1c_decompress_safe+45j
					; lzo1c_decompress_safe+1C2j
		cmp	[ebp+var_C], 3Fh
		jbe	loc_6CB918D9
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB9181A
		jmp	loc_6CB91B3E
; ---------------------------------------------------------------------------

loc_6CB9181A:				; CODE XREF: lzo1c_decompress_safe+2ADj
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		and	eax, 1Fh
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, ecx
		neg	eax
		add	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB91B6E
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB91B6E
		mov	eax, [ebp+var_C]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CB91885
		jmp	loc_6CB91B56
; ---------------------------------------------------------------------------

loc_6CB91885:				; CODE XREF: lzo1c_decompress_safe+318j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB918B3:				; CODE XREF: lzo1c_decompress_safe+36Cj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB918B3
		jmp	loc_6CB91AFD
; ---------------------------------------------------------------------------

loc_6CB918D9:				; CODE XREF: lzo1c_decompress_safe+29Fj
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB91940
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB918F2
		jmp	loc_6CB91B3E
; ---------------------------------------------------------------------------

loc_6CB918F2:				; CODE XREF: lzo1c_decompress_safe+385j
		jmp	short loc_6CB9191C
; ---------------------------------------------------------------------------

loc_6CB918F4:				; CODE XREF: lzo1c_decompress_safe+3BEj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CB9190D
		jmp	loc_6CB91B56
; ---------------------------------------------------------------------------

loc_6CB9190D:				; CODE XREF: lzo1c_decompress_safe+3A0j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB9191C
		jmp	loc_6CB91B3E
; ---------------------------------------------------------------------------

loc_6CB9191C:				; CODE XREF: lzo1c_decompress_safe:loc_6CB918F2j
					; lzo1c_decompress_safe+3AFj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB918F4
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CB91940:				; CODE XREF: lzo1c_decompress_safe+37Bj
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB91954
		jmp	loc_6CB91B3E
; ---------------------------------------------------------------------------

loc_6CB91954:				; CODE XREF: lzo1c_decompress_safe+3E7j
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3Fh
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CB919B3
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jz	loc_6CB91B37
		jmp	loc_6CB91B21
; ---------------------------------------------------------------------------

loc_6CB919B3:				; CODE XREF: lzo1c_decompress_safe+428j
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB91B6E
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB91B6E
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB919E8
		jmp	loc_6CB91B56
; ---------------------------------------------------------------------------

loc_6CB919E8:				; CODE XREF: lzo1c_decompress_safe+47Bj
		cmp	[ebp+var_C], 4
		jbe	short loc_6CB91A58
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CB91A58
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 1

loc_6CB91A13:				; CODE XREF: lzo1c_decompress_safe+4C7j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB91A13
		cmp	[ebp+var_C], 0
		jz	short loc_6CB91A56

loc_6CB91A35:				; CODE XREF: lzo1c_decompress_safe+4EEj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB91A35

loc_6CB91A56:				; CODE XREF: lzo1c_decompress_safe+4CDj
		jmp	short loc_6CB91ABE
; ---------------------------------------------------------------------------

loc_6CB91A58:				; CODE XREF: lzo1c_decompress_safe+486j
					; lzo1c_decompress_safe+495j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB91A9D:				; CODE XREF: lzo1c_decompress_safe+556j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB91A9D

loc_6CB91ABE:				; CODE XREF: lzo1c_decompress_safe:loc_6CB91A56j
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		shr	al, 6
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jz	short loc_6CB91AFD
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB91AE7
		jmp	short loc_6CB91B3E
; ---------------------------------------------------------------------------

loc_6CB91AE7:				; CODE XREF: lzo1c_decompress_safe+57Dj
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB91AF8
		jmp	short loc_6CB91B56
; ---------------------------------------------------------------------------

loc_6CB91AF8:				; CODE XREF: lzo1c_decompress_safe+58Ej
		jmp	loc_6CB916EA
; ---------------------------------------------------------------------------

loc_6CB91AFD:				; CODE XREF: lzo1c_decompress_safe+2Aj
					; lzo1c_decompress_safe+105j ...
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jb	loc_6CB91595

loc_6CB91B09:				; CODE XREF: lzo1c_decompress_safe+296j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFF9h
		jmp	short locret_6CB91B84
; ---------------------------------------------------------------------------

loc_6CB91B21:				; CODE XREF: lzo1c_decompress_safe+448j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jnb	short loc_6CB91B30
		mov	eax, 0FFFFFFF8h
		jmp	short loc_6CB91B3C
; ---------------------------------------------------------------------------

loc_6CB91B30:				; CODE XREF: lzo1c_decompress_safe+5C1j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB91B84
; ---------------------------------------------------------------------------

loc_6CB91B37:				; CODE XREF: lzo1c_decompress_safe+442j
		mov	eax, 0

loc_6CB91B3C:				; CODE XREF: lzo1c_decompress_safe+5C8j
		jmp	short locret_6CB91B84
; ---------------------------------------------------------------------------

loc_6CB91B3E:				; CODE XREF: lzo1c_decompress_safe+5Fj
					; lzo1c_decompress_safe+C2j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB91B84
; ---------------------------------------------------------------------------

loc_6CB91B56:				; CODE XREF: lzo1c_decompress_safe+D6j
					; lzo1c_decompress_safe+131j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFBh
		jmp	short locret_6CB91B84
; ---------------------------------------------------------------------------

loc_6CB91B6E:				; CODE XREF: lzo1c_decompress_safe+21Aj
					; lzo1c_decompress_safe+228j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFAh

locret_6CB91B84:			; CODE XREF: lzo1c_decompress_safe+5B9j
					; lzo1c_decompress_safe+5CFj ...
		leave
		retn
lzo1c_decompress_safe endp

; Exported entry  70. lzo1c_decompress_asm_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_decompress_asm_safe
lzo1c_decompress_asm_safe proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		mov	eax, [ebp+arg_10]
		mov	[esp+14h+var_4], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+14h+var_8], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+14h+var_C], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+14h+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+14h+var_14], eax
		call	lzo1c_decompress_safe
		leave
		retn
lzo1c_decompress_asm_safe endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  28. _lzo1c_store_run

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _lzo1c_store_run
_lzo1c_store_run proc near		; CODE XREF: sub_6CB8A932+367p
					; sub_6CB8A932+5D2p ...

Dst		= dword	ptr -38h
Src		= dword	ptr -34h
Size		= dword	ptr -30h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_10], eax
		cmp	[ebp+arg_8], 1FFh
		jbe	loc_6CB91CA8
		mov	[ebp+var_18], 6
		mov	[ebp+var_1C], 8000h
		jmp	short loc_6CB91C34
; ---------------------------------------------------------------------------

loc_6CB91BF1:				; CODE XREF: _lzo1c_store_run+7Ej
		mov	eax, [ebp+var_14]
		sub	[ebp+arg_8], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0FFh
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax

loc_6CB91C34:				; CODE XREF: _lzo1c_store_run+2Dj
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+arg_8]
		jbe	short loc_6CB91BF1
		shr	[ebp+var_1C], 1

loc_6CB91C45:				; CODE XREF: _lzo1c_store_run+E4j
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+arg_8]
		ja	short loc_6CB91C9B
		mov	eax, [ebp+var_14]
		sub	[ebp+arg_8], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		sub	edx, 8
		mov	[eax], dl
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax

loc_6CB91C9B:				; CODE XREF: _lzo1c_store_run+8Fj
		shr	[ebp+var_1C], 1
		sub	[ebp+var_18], 1
		cmp	[ebp+var_18], 0
		jnz	short loc_6CB91C45

loc_6CB91CA8:				; CODE XREF: _lzo1c_store_run+19j
		jmp	short loc_6CB91CED
; ---------------------------------------------------------------------------

loc_6CB91CAA:				; CODE XREF: _lzo1c_store_run+138j
		mov	eax, [ebp+var_14]
		sub	[ebp+arg_8], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0F8h
		mov	eax, [ebp+var_14]
		mov	[esp+38h+Size],	eax ; Size
		mov	eax, [ebp+var_10]
		mov	[esp+38h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+38h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_10], eax

loc_6CB91CED:				; CODE XREF: _lzo1c_store_run:loc_6CB91CA8j
		mov	[ebp+var_14], 118h
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+arg_8]
		jbe	short loc_6CB91CAA
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 1Fh
		jbe	short loc_6CB91D48
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_14]
		sub	edx, 20h
		mov	[eax], dl

loc_6CB91D25:				; CODE XREF: _lzo1c_store_run+182j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB91D25
		jmp	short loc_6CB91D7D
; ---------------------------------------------------------------------------

loc_6CB91D48:				; CODE XREF: _lzo1c_store_run+144j
		cmp	[ebp+var_14], 0
		jz	short loc_6CB91D7D
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_14]
		mov	[eax], dl

loc_6CB91D5C:				; CODE XREF: _lzo1c_store_run+1B9j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB91D5C

loc_6CB91D7D:				; CODE XREF: _lzo1c_store_run+184j
					; _lzo1c_store_run+18Aj
		mov	eax, [ebp+var_C]
		leave
		retn
_lzo1c_store_run endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB91D8E	proc near		; CODE XREF: lzo1c_compress+Cp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		cmp	[ebp+arg_0], 0
		jle	short loc_6CB91DA0
		cmp	[ebp+arg_0], 9
		jle	short loc_6CB91DB6

loc_6CB91DA0:				; CODE XREF: sub_6CB91D8E+Aj
		cmp	[ebp+arg_0], 0FFFFFFFFh
		jnz	short loc_6CB91DAF
		mov	[ebp+arg_0], 1
		jmp	short loc_6CB91DB6
; ---------------------------------------------------------------------------

loc_6CB91DAF:				; CODE XREF: sub_6CB91D8E+16j
		mov	eax, 0
		jmp	short locret_6CB91DCB
; ---------------------------------------------------------------------------

loc_6CB91DB6:				; CODE XREF: sub_6CB91D8E+10j
					; sub_6CB91D8E+1Fj
		mov	eax, [ebp+arg_0]
		sub	eax, 1
		mov	eax, ds:off_6CBA70E0[eax*4]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	eax, [eax]

locret_6CB91DCB:			; CODE XREF: sub_6CB91D8E+26j
		leave
		retn
sub_6CB91D8E	endp

; Exported entry  67. lzo1c_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1c_compress
lzo1c_compress	proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	eax, [ebp+arg_14]
		mov	[esp+38h+var_38], eax
		call	sub_6CB91D8E
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB91DEE
		mov	eax, 0FFFFFFFFh
		jmp	short locret_6CB91E1C
; ---------------------------------------------------------------------------

loc_6CB91DEE:				; CODE XREF: lzo1c_compress+18j
		mov	eax, [ebp+var_C]
		mov	[esp+38h+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax
		call	_lzo1c_do_compress

locret_6CB91E1C:			; CODE XREF: lzo1c_compress+1Fj
		leave
		retn
lzo1c_compress	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB91E2A	proc near		; CODE XREF: lzo1f_1_compress+8Ep

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 60h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-9]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_40], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		add	[ebp+var_4], 1

loc_6CB91E65:				; CODE XREF: sub_6CB91E2A:loc_6CB9235Fj
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_4]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, edx
		shl	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_4]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	edx, eax
		mov	eax, edx
		shl	eax, 5
		add	eax, edx
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_1C]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_40]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB91F0A
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	short loc_6CB91F0A
		cmp	[ebp+var_14], 3FFFh
		jbe	short loc_6CB91F11

loc_6CB91F0A:				; CODE XREF: sub_6CB91E2A+C2j
					; sub_6CB91E2A+D5j
		mov	eax, 1
		jmp	short loc_6CB91F16
; ---------------------------------------------------------------------------

loc_6CB91F11:				; CODE XREF: sub_6CB91E2A+DEj
		mov	eax, 0

loc_6CB91F16:				; CODE XREF: sub_6CB91E2A+E5j
		test	eax, eax
		jz	short loc_6CB91F1F
		jmp	loc_6CB92044
; ---------------------------------------------------------------------------

loc_6CB91F1F:				; CODE XREF: sub_6CB91E2A+EEj
		cmp	[ebp+var_14], 800h
		jbe	loc_6CB91FD6
		mov	eax, [ebp+var_10]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	loc_6CB91FD6
		mov	eax, [ebp+var_1C]
		and	eax, 7FFh
		xor	eax, 201Fh
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_1C]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_40]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_0]
		cmp	edx, eax
		jb	short loc_6CB91FA0
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	short loc_6CB91FA0
		cmp	[ebp+var_14], 3FFFh
		jbe	short loc_6CB91FA7

loc_6CB91FA0:				; CODE XREF: sub_6CB91E2A+158j
					; sub_6CB91E2A+16Bj
		mov	eax, 1
		jmp	short loc_6CB91FAC
; ---------------------------------------------------------------------------

loc_6CB91FA7:				; CODE XREF: sub_6CB91E2A+174j
		mov	eax, 0

loc_6CB91FAC:				; CODE XREF: sub_6CB91E2A+17Bj
		test	eax, eax
		jz	short loc_6CB91FB5
		jmp	loc_6CB92044
; ---------------------------------------------------------------------------

loc_6CB91FB5:				; CODE XREF: sub_6CB91E2A+184j
		cmp	[ebp+var_14], 800h
		jbe	short loc_6CB91FD6
		mov	eax, [ebp+var_10]
		add	eax, 3
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB91FD6
		jmp	short loc_6CB92044
; ---------------------------------------------------------------------------

loc_6CB91FD6:				; CODE XREF: sub_6CB91E2A+FCj
					; sub_6CB91E2A+116j ...
		mov	eax, [ebp+var_10]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB92044
		mov	eax, [ebp+var_10]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB92044
		mov	eax, [ebp+var_10]
		add	eax, 2
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	short loc_6CB92044
		add	[ebp+var_10], 3
		nop
		mov	eax, [ebp+var_1C]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_40]
		add	edx, eax
		mov	eax, [ebp+var_4]
		mov	[edx], eax
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_44], eax
		cmp	[ebp+var_44], 0
		jz	loc_6CB92116
		jmp	short loc_6CB9206E
; ---------------------------------------------------------------------------

loc_6CB92044:				; CODE XREF: sub_6CB91E2A+F0j
					; sub_6CB91E2A+186j ...
		mov	eax, [ebp+var_1C]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+var_40]
		add	edx, eax
		mov	eax, [ebp+var_4]
		mov	[edx], eax
		add	[ebp+var_4], 1
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_3C]
		jb	short loc_6CB92069
		jmp	loc_6CB92364
; ---------------------------------------------------------------------------

loc_6CB92069:				; CODE XREF: sub_6CB91E2A+238j
		jmp	loc_6CB9235F
; ---------------------------------------------------------------------------

loc_6CB9206E:				; CODE XREF: sub_6CB91E2A+218j
		mov	eax, [ebp+var_44]
		mov	[ebp+var_20], eax
		cmp	[ebp+var_20], 3
		ja	short loc_6CB9209A
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+arg_8]
		jbe	short loc_6CB9209A
		mov	eax, [ebp+var_8]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_20]
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB920F5
; ---------------------------------------------------------------------------

loc_6CB9209A:				; CODE XREF: sub_6CB91E2A+24Ej
					; sub_6CB91E2A+256j
		cmp	[ebp+var_20], 1Fh
		ja	short loc_6CB920B0
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_20]
		mov	[eax], dl
		jmp	short loc_6CB920F5
; ---------------------------------------------------------------------------

loc_6CB920B0:				; CODE XREF: sub_6CB91E2A+274j
		mov	eax, [ebp+var_20]
		sub	eax, 1Fh
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB920DE
; ---------------------------------------------------------------------------

loc_6CB920C7:				; CODE XREF: sub_6CB91E2A+2BBj
		sub	[ebp+var_24], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_48], eax
		mov	eax, [ebp+var_48]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB920DE:				; CODE XREF: sub_6CB91E2A+29Bj
		cmp	[ebp+var_24], 0FFh
		ja	short loc_6CB920C7
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_24]
		mov	[eax], dl

loc_6CB920F5:				; CODE XREF: sub_6CB91E2A+26Ej
					; sub_6CB91E2A+284j ...
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_C]
		lea	ecx, [edx+1]
		mov	[ebp+var_C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_20], 1
		cmp	[ebp+var_20], 0
		jnz	short loc_6CB920F5

loc_6CB92116:				; CODE XREF: sub_6CB91E2A+212j
		add	[ebp+var_4], 3
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	loc_6CB921CA
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB921CA
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB921CA
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB921CA
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jnz	short loc_6CB921CA
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		movzx	eax, byte ptr [eax]
		cmp	cl, al
		jz	loc_6CB9229C

loc_6CB921CA:				; CODE XREF: sub_6CB91E2A+30Aj
					; sub_6CB91E2A+32Aj ...
		sub	[ebp+var_4], 1
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_18], eax
		cmp	[ebp+var_14], 800h
		ja	short loc_6CB9221C
		sub	[ebp+var_14], 1
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_18]
		sub	edx, 2
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_14]
		and	edx, 7
		shl	edx, 2
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		shr	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB92297
; ---------------------------------------------------------------------------

loc_6CB9221C:				; CODE XREF: sub_6CB91E2A+3B8j
		cmp	[ebp+var_18], 3
		jnz	short loc_6CB9225C
		cmp	[ebp+var_14], 1000h
		ja	short loc_6CB9225C
		cmp	[ebp+var_44], 0
		jz	short loc_6CB9225C
		sub	[ebp+var_14], 1
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		and	edx, 7
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		shr	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB92297
; ---------------------------------------------------------------------------

loc_6CB9225C:				; CODE XREF: sub_6CB91E2A+3F6j
					; sub_6CB91E2A+3FFj ...
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_18]
		sub	edx, 2
		or	edx, 0FFFFFFE0h
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB9234F
; ---------------------------------------------------------------------------

loc_6CB92297:				; CODE XREF: sub_6CB91E2A+3F0j
					; sub_6CB91E2A+430j
		jmp	loc_6CB9234F
; ---------------------------------------------------------------------------

loc_6CB9229C:				; CODE XREF: sub_6CB91E2A+39Aj
		mov	eax, [ebp+var_38]
		mov	[ebp+var_4C], eax
		jmp	short loc_6CB922AC
; ---------------------------------------------------------------------------

loc_6CB922A4:				; CODE XREF: sub_6CB91E2A+498j
		add	[ebp+var_10], 1
		add	[ebp+var_4], 1

loc_6CB922AC:				; CODE XREF: sub_6CB91E2A+478j
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_4C]
		jnb	short loc_6CB922C4
		mov	eax, [ebp+var_10]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB922A4

loc_6CB922C4:				; CODE XREF: sub_6CB91E2A+488j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_18], eax
		cmp	[ebp+var_18], 21h
		ja	short loc_6CB922ED
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_18]
		sub	edx, 2
		or	edx, 0FFFFFFE0h
		mov	[eax], dl
		jmp	short loc_6CB9232D
; ---------------------------------------------------------------------------

loc_6CB922ED:				; CODE XREF: sub_6CB91E2A+4ABj
		sub	[ebp+var_18], 21h
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	0E0h
		jmp	short loc_6CB92316
; ---------------------------------------------------------------------------

loc_6CB922FF:				; CODE XREF: sub_6CB91E2A+4F3j
		sub	[ebp+var_18], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_50], eax
		mov	eax, [ebp+var_50]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB92316:				; CODE XREF: sub_6CB91E2A+4D3j
		cmp	[ebp+var_18], 0FFh
		ja	short loc_6CB922FF
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_18]
		mov	[eax], dl

loc_6CB9232D:				; CODE XREF: sub_6CB91E2A+4C1j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		shr	edx, 6
		mov	[eax], dl

loc_6CB9234F:				; CODE XREF: sub_6CB91E2A+468j
					; sub_6CB91E2A:loc_6CB92297j
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_3C]
		jb	short loc_6CB9235F
		jmp	short loc_6CB92364
; ---------------------------------------------------------------------------

loc_6CB9235F:				; CODE XREF: sub_6CB91E2A:loc_6CB92069j
					; sub_6CB91E2A+531j
		jmp	loc_6CB91E65
; ---------------------------------------------------------------------------

loc_6CB92364:				; CODE XREF: sub_6CB91E2A+23Aj
					; sub_6CB91E2A+533j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_C]
		cmp	edx, eax
		jz	loc_6CB92487
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_54], eax
		cmp	[ebp+var_54], 3
		ja	short loc_6CB923A5
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+arg_8]
		jbe	short loc_6CB923A5
		mov	eax, [ebp+var_8]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_54]
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB92400
; ---------------------------------------------------------------------------

loc_6CB923A5:				; CODE XREF: sub_6CB91E2A+559j
					; sub_6CB91E2A+561j
		cmp	[ebp+var_54], 1Fh
		ja	short loc_6CB923BB
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_54]
		mov	[eax], dl
		jmp	short loc_6CB92400
; ---------------------------------------------------------------------------

loc_6CB923BB:				; CODE XREF: sub_6CB91E2A+57Fj
		mov	eax, [ebp+var_54]
		sub	eax, 1Fh
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB923E9
; ---------------------------------------------------------------------------

loc_6CB923D2:				; CODE XREF: sub_6CB91E2A+5C6j
		sub	[ebp+var_28], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_58], eax
		mov	eax, [ebp+var_58]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB923E9:				; CODE XREF: sub_6CB91E2A+5A6j
		cmp	[ebp+var_28], 0FFh
		ja	short loc_6CB923D2
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_28]
		mov	[eax], dl

loc_6CB92400:				; CODE XREF: sub_6CB91E2A+579j
					; sub_6CB91E2A+58Fj
		mov	eax, [ebp+var_8]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_54]
		mov	[ebp+var_34], eax
		jmp	short loc_6CB92438
; ---------------------------------------------------------------------------

loc_6CB92414:				; CODE XREF: sub_6CB91E2A+612j
		mov	eax, [ebp+var_30]
		mov	edx, [eax]
		mov	eax, [ebp+var_2C]
		mov	[eax], edx
		mov	eax, [ebp+var_2C]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_30]
		mov	eax, [eax+4]
		mov	[edx], eax
		add	[ebp+var_2C], 8
		add	[ebp+var_30], 8
		sub	[ebp+var_34], 8

loc_6CB92438:				; CODE XREF: sub_6CB91E2A+5E8j
		cmp	[ebp+var_34], 7
		ja	short loc_6CB92414
		cmp	[ebp+var_34], 3
		jbe	short loc_6CB9245A
		mov	eax, [ebp+var_30]
		mov	edx, [eax]
		mov	eax, [ebp+var_2C]
		mov	[eax], edx
		add	[ebp+var_2C], 4
		add	[ebp+var_30], 4
		sub	[ebp+var_34], 4

loc_6CB9245A:				; CODE XREF: sub_6CB91E2A+618j
		cmp	[ebp+var_34], 0
		jz	short loc_6CB92481

loc_6CB92460:				; CODE XREF: sub_6CB91E2A+655j
		mov	eax, [ebp+var_2C]
		lea	edx, [eax+1]
		mov	[ebp+var_2C], edx
		mov	edx, [ebp+var_30]
		lea	ecx, [edx+1]
		mov	[ebp+var_30], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_34], 1
		cmp	[ebp+var_34], 0
		jnz	short loc_6CB92460

loc_6CB92481:				; CODE XREF: sub_6CB91E2A+634j
		mov	eax, [ebp+var_54]
		add	[ebp+var_8], eax

loc_6CB92487:				; CODE XREF: sub_6CB91E2A+542j
		mov	edx, [ebp+var_8]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
sub_6CB91E2A	endp

; Exported entry  72. lzo1f_1_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1f_1_compress
lzo1f_1_compress proc near

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 24h
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	[ebp+var_8], 0
		cmp	[ebp+arg_4], 0
		jnz	short loc_6CB924C3
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		jmp	short loc_6CB92535
; ---------------------------------------------------------------------------

loc_6CB924C3:				; CODE XREF: lzo1f_1_compress+17j
		cmp	[ebp+arg_4], 0Ah
		ja	short loc_6CB9250B
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+arg_4]
		mov	[eax], dl

loc_6CB924D7:				; CODE XREF: lzo1f_1_compress+57j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+arg_0]
		lea	ecx, [edx+1]
		mov	[ebp+arg_0], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+arg_4], 1
		cmp	[ebp+arg_4], 0
		jnz	short loc_6CB924D7
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		jmp	short loc_6CB92535
; ---------------------------------------------------------------------------

loc_6CB9250B:				; CODE XREF: lzo1f_1_compress+28j
		mov	eax, [ebp+arg_10]
		mov	[esp+24h+var_14], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+24h+var_18], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+24h+var_1C], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+24h+var_20], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+24h+var_24], eax
		call	sub_6CB91E2A
		mov	[ebp+var_8], eax

loc_6CB92535:				; CODE XREF: lzo1f_1_compress+22j
					; lzo1f_1_compress+6Aj
		cmp	[ebp+var_8], 0
		jnz	short loc_6CB9256D
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	byte ptr [eax],	0E1h
		mov	eax, [ebp+var_4]
		add	eax, 1
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_4]
		add	eax, 2
		mov	byte ptr [eax],	0
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		lea	edx, [eax+3]
		mov	eax, [ebp+arg_C]
		mov	[eax], edx

loc_6CB9256D:				; CODE XREF: lzo1f_1_compress+9Aj
		mov	eax, [ebp+var_8]
		leave
		retn
lzo1f_1_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB9257E(int,	void *,	size_t)
sub_6CB9257E	proc near		; CODE XREF: sub_6CB9273E+D5p

Dst		= dword	ptr -18h
Src		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+3Ch], 0
		cmp	[ebp+arg_4], 0
		jz	short loc_6CB925B0
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CB925B2

loc_6CB925B0:				; CODE XREF: sub_6CB9257E+2Aj
		jmp	short locret_6CB92618
; ---------------------------------------------------------------------------

loc_6CB925B2:				; CODE XREF: sub_6CB9257E+30j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_8]
		jnb	short loc_6CB925D3
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+arg_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+arg_8], eax

loc_6CB925D3:				; CODE XREF: sub_6CB9257E+3Cj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+5Ch]
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Src], eax ; Src
		mov	[esp+18h+Dst], edx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+40h], edx

locret_6CB92618:			; CODE XREF: sub_6CB9257E:loc_6CB925B0j
		leave
		retn
sub_6CB9257E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9261A	proc near		; CODE XREF: sub_6CB9273E+1DDp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		sub	eax, [ebp+arg_8]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+58h], edx
		cmp	[ebp+arg_8], 0
		jz	locret_6CB9273C

loc_6CB92643:				; CODE XREF: sub_6CB9261A+11Cj
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 50h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CB926BF
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 2828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CB926C4
; ---------------------------------------------------------------------------

loc_6CB926BF:				; CODE XREF: sub_6CB9261A+90j
		mov	eax, 0FFFFFFFFh

loc_6CB926C4:				; CODE XREF: sub_6CB9261A+A3j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		add	ecx, 6828h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_4]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 2828h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 0B028h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		mov	[eax+edx*2+8], cx
		add	[ebp+arg_4], 1
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	loc_6CB92643

locret_6CB9273C:			; CODE XREF: sub_6CB9261A+23j
		leave
		retn
sub_6CB9261A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB9273E(int,	void *,	size_t)
sub_6CB9273E	proc near		; CODE XREF: sub_6CB9309A+90p

Dst		= dword	ptr -28h
Val		= dword	ptr -24h
Size		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 3FFFh
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 800h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 2
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0Ch], 800h
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+18h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+50h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		mov	eax, [ebp+arg_0]
		add	eax, 1F058h
		mov	[esp+28h+Size],	8000h ;	Size
		mov	[esp+28h+Val], 0 ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+Size],	eax ; size_t
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+Val], eax ; void *
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax ; int
		call	sub_6CB9257E
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+44h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+58h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+24h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+1Ch]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CB928D4
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jbe	short loc_6CB92876
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB92876:				; CODE XREF: sub_6CB9273E+12Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+1Ch]
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+40h]
		lea	ebx, [ecx+50h]
		mov	ecx, [ebp+arg_0]
		add	ecx, ebx
		add	ecx, 0Ch
		mov	[esp+28h+Size],	edx ; Size
		mov	[esp+28h+Val], eax ; Src
		mov	[esp+28h+Dst], ecx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	ecx, [edx+1Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+24h]
		add	edx, ecx
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx

loc_6CB928D4:				; CODE XREF: sub_6CB9273E+11Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CB928EE
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0

loc_6CB928EE:				; CODE XREF: sub_6CB9273E+1A4j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 1
		jbe	short loc_6CB92920
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		test	eax, eax
		jz	short loc_6CB92920
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		mov	[esp+28h+Size],	eax
		mov	[esp+28h+Val], 0
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax
		call	sub_6CB9261A

loc_6CB92920:				; CODE XREF: sub_6CB9273E+1B9j
					; sub_6CB9273E+1C3j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+58h]
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		cmp	edx, eax
		jb	short loc_6CB92952
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		jmp	short loc_6CB92970
; ---------------------------------------------------------------------------

loc_6CB92952:				; CODE XREF: sub_6CB9273E+1FCj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		sub	ecx, eax
		mov	eax, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx

loc_6CB92970:				; CODE XREF: sub_6CB9273E+212j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		ja	short loc_6CB929B3
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		mov	edx, [ebp+var_C]
		add	edx, 2
		mov	byte ptr [edx],	0
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	[eax], dl

loc_6CB929B3:				; CODE XREF: sub_6CB9273E+23Bj
		mov	eax, 0
		add	esp, 24h
		pop	ebx
		pop	ebp
		retn
sub_6CB9273E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB929BE	proc near		; CODE XREF: sub_6CB9309A+A4p
					; sub_6CB93163+C1p
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_6CB929BE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB929C3	proc near		; CODE XREF: sub_6CB92B9B+120p
					; sub_6CB93163+98p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jnb	short loc_6CB929F6
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+2Ch]
		mov	eax, [edx+1Ch]
		lea	ecx, [eax+1]
		mov	[edx+1Ch], ecx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		jmp	short loc_6CB929FB
; ---------------------------------------------------------------------------

loc_6CB929F6:				; CODE XREF: sub_6CB929C3+1Aj
		mov	eax, 0FFFFFFFFh

loc_6CB929FB:				; CODE XREF: sub_6CB929C3+31j
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jns	short loc_6CB92A4E
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CB92A1D
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB92A1D:				; CODE XREF: sub_6CB929C3+49j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		mov	edx, [ebp+arg_0]
		mov	byte ptr [edx+eax+5Ch],	0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB92A83
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		add	eax, edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB92A83
; ---------------------------------------------------------------------------

loc_6CB92A4E:				; CODE XREF: sub_6CB929C3+3Fj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		mov	edx, [ebp+var_4]
		mov	ecx, edx
		mov	edx, [ebp+arg_0]
		mov	[edx+eax+5Ch], cl
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB92A83
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		add	edx, eax
		mov	eax, [ebp+var_4]
		mov	[edx], al

loc_6CB92A83:				; CODE XREF: sub_6CB929C3+76j
					; sub_6CB929C3+89j ...
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CB92AAC
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0

loc_6CB92AAC:				; CODE XREF: sub_6CB929C3+DDj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+44h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CB92AD5
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0

loc_6CB92AD5:				; CODE XREF: sub_6CB929C3+106j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short locret_6CB92AFE
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0

locret_6CB92AFE:			; CODE XREF: sub_6CB929C3+12Fj
		leave
		retn
sub_6CB929C3	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB92B00	proc near		; CODE XREF: sub_6CB92B9B+20p
					; sub_6CB92E6D+222p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		test	eax, eax
		jnz	short loc_6CB92B8A
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 50h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		mov	[eax+edx*2+8], cx
		jmp	short locret_6CB92B99
; ---------------------------------------------------------------------------

loc_6CB92B8A:				; CODE XREF: sub_6CB92B00+Ej
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx

locret_6CB92B99:			; CODE XREF: sub_6CB92B00+88j
		leave
		retn
sub_6CB92B00	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB92B9B	proc near		; CODE XREF: sub_6CB93163+21p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		cmp	[ebp+arg_4], 0
		jz	locret_6CB92CCE

loc_6CB92BAB:				; CODE XREF: sub_6CB92B9B+12Dj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB92B00
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CB92C47
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 2828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CB92C4C
; ---------------------------------------------------------------------------

loc_6CB92C47:				; CODE XREF: sub_6CB92B9B+97j
		mov	eax, 0FFFFFFFFh

loc_6CB92C4C:				; CODE XREF: sub_6CB92B9B+AAj
		mov	edx, [ebp+arg_0]
		add	ecx, 6828h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 2828h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 0B028h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0F828h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB929C3
		sub	[ebp+arg_4], 1
		cmp	[ebp+arg_4], 0
		jnz	loc_6CB92BAB

locret_6CB92CCE:			; CODE XREF: sub_6CB92B9B+Aj
		leave
		retn
sub_6CB92B9B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB92CD0	proc near		; CODE XREF: sub_6CB92E6D+1A6p

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_D		= byte ptr -0Dh
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 30h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		add	eax, 5Ch
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al
		jmp	loc_6CB92E5A
; ---------------------------------------------------------------------------

loc_6CB92D2E:				; CODE XREF: sub_6CB92CD0+195j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_14]
		add	eax, edx
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_8]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		cmp	al, [ebp+var_D]
		jnz	loc_6CB92E43
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_8]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	ecx, [ebp+var_4]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB92E43
		mov	eax, [ebp+var_8]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB92E43
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB92E43
		add	[ebp+var_4], 2
		add	[ebp+var_8], 2

loc_6CB92DB0:				; CODE XREF: sub_6CB92CD0+FEj
		add	[ebp+var_4], 1
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CB92DD0
		mov	eax, [ebp+var_4]
		movzx	edx, byte ptr [eax]
		add	[ebp+var_8], 1
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB92DB0

loc_6CB92DD0:				; CODE XREF: sub_6CB92CD0+EAj
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_C]
		jbe	short loc_6CB92E43
		mov	eax, [ebp+var_24]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB92E0A
		jmp	short locret_6CB92E6B
; ---------------------------------------------------------------------------

loc_6CB92E0A:				; CODE XREF: sub_6CB92CD0+136j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+10h]
		cmp	eax, [ebp+var_C]
		ja	short loc_6CB92E17
		jmp	short locret_6CB92E6B
; ---------------------------------------------------------------------------

loc_6CB92E17:				; CODE XREF: sub_6CB92CD0+143j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 0B028h
		movzx	eax, word ptr [eax+edx*2+0Ah]
		movzx	eax, ax
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB92E32
		jmp	short locret_6CB92E6B
; ---------------------------------------------------------------------------

loc_6CB92E32:				; CODE XREF: sub_6CB92CD0+15Ej
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al

loc_6CB92E43:				; CODE XREF: sub_6CB92CD0+86j
					; sub_6CB92CD0+A4j ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 6828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+arg_4], eax

loc_6CB92E5A:				; CODE XREF: sub_6CB92CD0+59j
		mov	eax, [ebp+arg_8]
		lea	edx, [eax-1]
		mov	[ebp+arg_8], edx
		test	eax, eax
		jnz	loc_6CB92D2E

locret_6CB92E6B:			; CODE XREF: sub_6CB92CD0+138j
					; sub_6CB92CD0+145j ...
		leave
		retn
sub_6CB92CD0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB92E6D	proc near		; CODE XREF: sub_6CB93163+75p

var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 1Ch
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 0F828h
		movzx	eax, word ptr [eax+ecx*2+8]
		test	ax, ax
		jz	short loc_6CB92EFB
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 2828h
		movzx	eax, word ptr [eax+ecx*2+0Ch]
		jmp	short loc_6CB92F00
; ---------------------------------------------------------------------------

loc_6CB92EFB:				; CODE XREF: sub_6CB92E6D+79j
		mov	eax, 0FFFFFFFFh

loc_6CB92F00:				; CODE XREF: sub_6CB92E6D+8Cj
		mov	ecx, [ebp+arg_0]
		lea	ebx, [edx+6828h]
		mov	[ecx+ebx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		add	edx, 6828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 0F828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_C]
		add	ebx, 0F828h
		mov	[edx+ebx*2+8], cx
		movzx	eax, ax
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		cmp	eax, [ebp+var_8]
		jnb	short loc_6CB92F6B
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_6CB92F6B
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_8], eax

loc_6CB92F6B:				; CODE XREF: sub_6CB92E6D+E9j
					; sub_6CB92E6D+F3j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 2828h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	edx, al
		mov	eax, [ebp+arg_0]
		mov	[eax+28h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jb	short loc_6CB92FF4
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jnz	short loc_6CB92FC8
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0FFFFFFFFh

loc_6CB92FC8:				; CODE XREF: sub_6CB92E6D+14Fj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 0B028h
		mov	[eax+edx*2+0Ah], cx
		jmp	loc_6CB9307F
; ---------------------------------------------------------------------------

loc_6CB92FF4:				; CODE XREF: sub_6CB92E6D+145j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		jbe	short loc_6CB93018
		mov	eax, [ebp+var_8]
		mov	[esp+20h+var_18], eax
		mov	eax, [ebp+var_10]
		mov	[esp+20h+var_1C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+20h+var_20], eax
		call	sub_6CB92CD0

loc_6CB93018:				; CODE XREF: sub_6CB92E6D+190j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, [ebp+var_14]
		jbe	short loc_6CB93063
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		cmp	edx, eax
		jbe	short loc_6CB93045
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		sub	edx, eax
		mov	eax, edx
		jmp	short loc_6CB9305D
; ---------------------------------------------------------------------------

loc_6CB93045:				; CODE XREF: sub_6CB92E6D+1C4j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		sub	ecx, eax
		mov	eax, ecx
		add	eax, edx

loc_6CB9305D:				; CODE XREF: sub_6CB92E6D+1D6j
		mov	edx, [ebp+arg_0]
		mov	[edx+20h], eax

loc_6CB93063:				; CODE XREF: sub_6CB92E6D+1B4j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		add	ecx, 0B028h
		mov	[eax+ecx*2+0Ah], dx

loc_6CB9307F:				; CODE XREF: sub_6CB92E6D+182j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		mov	[esp+20h+var_1C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+20h+var_20], eax
		call	sub_6CB92B00
		add	esp, 1Ch
		pop	ebx
		pop	ebp
		retn
sub_6CB92E6D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB9309A(int,	int, void *, size_t, int)
sub_6CB9309A	proc near		; CODE XREF: lzo1f_999_compress_callback+C1p

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 1
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+14h]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+34h]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_20], eax ;	size_t
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_24], eax ;	void *
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax ;	int
		call	sub_6CB9273E
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jz	short loc_6CB93148
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax
		call	sub_6CB929BE
		mov	eax, [ebp+var_C]
		jmp	short locret_6CB93161
; ---------------------------------------------------------------------------

loc_6CB93148:				; CODE XREF: sub_6CB9309A+9Cj
		mov	eax, [ebp+arg_10]
		and	eax, 1
		test	eax, eax
		setnz	al
		movzx	edx, al
		mov	eax, [ebp+arg_4]
		mov	[eax+14h], edx
		mov	eax, 0

locret_6CB93161:			; CODE XREF: sub_6CB9309A+ACj
		leave
		retn
sub_6CB9309A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB93163	proc near		; CODE XREF: lzo1f_999_compress_callback+103p
					; lzo1f_999_compress_callback+1E9p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		cmp	[ebp+arg_C], 0
		jz	short loc_6CB931A6
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB92B9B
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	eax, edx
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		jmp	short loc_6CB931BE
; ---------------------------------------------------------------------------

loc_6CB931A6:				; CODE XREF: sub_6CB93163+Bj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx

loc_6CB931BE:				; CODE XREF: sub_6CB93163+41j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+1Ch], 2
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB92E6D
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+20h]
		mov	eax, [ebp+arg_0]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB929C3
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+28h]
		test	eax, eax
		jns	short loc_6CB9322B
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CB929BE
		jmp	short loc_6CB9323A
; ---------------------------------------------------------------------------

loc_6CB9322B:				; CODE XREF: sub_6CB93163+A5j
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+24h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+4], edx

loc_6CB9323A:				; CODE XREF: sub_6CB93163+C6j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		neg	eax
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+18h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB932B9
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB932B9
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+30h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		cmp	edx, eax
		jbe	short loc_6CB932B9
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+arg_0]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+arg_0]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+var_10], ebx
		mov	[esp+18h+var_14], ecx
		mov	[esp+18h+var_18], edx
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		lea	edx, [eax+400h]
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx

loc_6CB932B9:				; CODE XREF: sub_6CB93163+F5j
					; sub_6CB93163+102j ...
		mov	eax, 0
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
sub_6CB93163	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB932C4	proc near		; CODE XREF: lzo1f_999_compress_callback+34Dp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		cmp	[ebp+arg_8], 8
		ja	short loc_6CB93320
		cmp	[ebp+arg_C], 800h
		ja	short loc_6CB93320
		sub	[ebp+arg_C], 1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 2
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+arg_C]
		and	edx, 7
		shl	edx, 2
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+58h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+58h], edx
		jmp	loc_6CB93402
; ---------------------------------------------------------------------------

loc_6CB93320:				; CODE XREF: sub_6CB932C4+7j
					; sub_6CB932C4+10j
		cmp	[ebp+arg_8], 3
		jnz	short loc_6CB93379
		cmp	[ebp+arg_C], 1000h
		ja	short loc_6CB93379
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		test	eax, eax
		jz	short loc_6CB93379
		sub	[ebp+arg_C], 801h
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		and	edx, 7
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		jmp	loc_6CB93402
; ---------------------------------------------------------------------------

loc_6CB93379:				; CODE XREF: sub_6CB932C4+60j
					; sub_6CB932C4+69j ...
		cmp	[ebp+arg_8], 21h
		ja	short loc_6CB93395
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 2
		or	edx, 0FFFFFFE0h
		mov	[eax], dl
		jmp	short loc_6CB933D1
; ---------------------------------------------------------------------------

loc_6CB93395:				; CODE XREF: sub_6CB932C4+B9j
		sub	[ebp+arg_8], 21h
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0E0h
		jmp	short loc_6CB933BA
; ---------------------------------------------------------------------------

loc_6CB933A7:				; CODE XREF: sub_6CB932C4+FDj
		sub	[ebp+arg_8], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB933BA:				; CODE XREF: sub_6CB932C4+E1j
		cmp	[ebp+arg_8], 0FFh
		ja	short loc_6CB933A7
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl

loc_6CB933D1:				; CODE XREF: sub_6CB932C4+CFj
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+5Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+5Ch], edx

loc_6CB93402:				; CODE XREF: sub_6CB932C4+57j
					; sub_6CB932C4+B0j
		mov	eax, [ebp+arg_4]
		pop	ebp
		retn
sub_6CB932C4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB93407	proc near		; CODE XREF: lzo1f_999_compress_callback+2F9p
					; lzo1f_999_compress_callback+3BCp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		cmp	[ebp+arg_8], 3
		ja	short loc_6CB93433
		mov	eax, [ebp+arg_0]
		cmp	eax, [ebp+arg_C]
		jbe	short loc_6CB93433
		mov	eax, [ebp+arg_0]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_0]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+arg_8]
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB9348A
; ---------------------------------------------------------------------------

loc_6CB93433:				; CODE XREF: sub_6CB93407+Aj
					; sub_6CB93407+12j
		cmp	[ebp+arg_8], 1Fh
		ja	short loc_6CB93449
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl
		jmp	short loc_6CB9348A
; ---------------------------------------------------------------------------

loc_6CB93449:				; CODE XREF: sub_6CB93407+30j
		mov	eax, [ebp+arg_8]
		sub	eax, 1Fh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB93473
; ---------------------------------------------------------------------------

loc_6CB93460:				; CODE XREF: sub_6CB93407+73j
		sub	[ebp+var_4], 0FFh
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	byte ptr [eax],	0

loc_6CB93473:				; CODE XREF: sub_6CB93407+57j
		cmp	[ebp+var_4], 0FFh
		ja	short loc_6CB93460
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	edx, [ebp+var_4]
		mov	[eax], dl

loc_6CB9348A:				; CODE XREF: sub_6CB93407+2Aj
					; sub_6CB93407+40j ...
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	[ebp+arg_0], edx
		mov	edx, [ebp+arg_4]
		lea	ecx, [edx+1]
		mov	[ebp+arg_4], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CB9348A
		mov	eax, [ebp+arg_0]
		leave
		retn
sub_6CB93407	endp

; Exported entry  74. lzo1f_999_compress_callback

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1f_999_compress_callback
lzo1f_999_compress_callback proc near	; CODE XREF: lzo1f_999_compress+38p

var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_90		= byte ptr -90h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0B4h
		lea	eax, [ebp+var_90]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+arg_0]
		mov	[eax+20h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [eax+20h]
		mov	eax, [ebp+var_24]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	edx, eax
		mov	eax, [ebp+var_24]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+arg_14]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+5Ch], 0
		mov	eax, [ebp+var_24]
		mov	edx, [eax+5Ch]
		mov	eax, [ebp+var_24]
		mov	[eax+58h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [eax+58h]
		mov	eax, [ebp+var_24]
		mov	[eax+54h], edx
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_24]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_10], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+50h], 0
		mov	eax, [ebp+var_24]
		mov	edx, [eax+50h]
		mov	eax, [ebp+var_24]
		mov	[eax+4Ch], edx
		mov	[esp+0B8h+var_A8], 0 ; int
		mov	[esp+0B8h+var_AC], 0 ; size_t
		mov	[esp+0B8h+var_B0], 0 ; void *
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax ; int
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax ; int
		call	sub_6CB9309A
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 0
		jz	short loc_6CB93587
		mov	eax, [ebp+var_2C]
		jmp	loc_6CB93907
; ---------------------------------------------------------------------------

loc_6CB93587:				; CODE XREF: lzo1f_999_compress_callback+CDj
		cmp	[ebp+arg_18], 0
		jz	short loc_6CB93596
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_18]
		mov	[eax+0Ch], edx

loc_6CB93596:				; CODE XREF: lzo1f_999_compress_callback+DBj
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], 0
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB93163
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_2C], 0
		jz	short loc_6CB935C9
		mov	eax, [ebp+var_2C]
		jmp	loc_6CB93907
; ---------------------------------------------------------------------------

loc_6CB935C9:				; CODE XREF: lzo1f_999_compress_callback+10Fj
		jmp	loc_6CB9383D
; ---------------------------------------------------------------------------

loc_6CB935CE:				; CODE XREF: lzo1f_999_compress_callback+395j
		mov	[ebp+var_1C], 0FFFFFFFFh
		mov	[ebp+var_20], 0
		mov	eax, [ebp+var_24]
		mov	eax, [eax+8]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_24]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_30], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB93607
		mov	eax, [ebp+var_24]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		neg	eax
		add	eax, edx
		mov	[ebp+var_10], eax

loc_6CB93607:				; CODE XREF: lzo1f_999_compress_callback+142j
		cmp	[ebp+var_18], 2
		jbe	short loc_6CB9361C
		cmp	[ebp+var_18], 2
		ja	short loc_6CB93625
		cmp	[ebp+var_30], 800h
		jbe	short loc_6CB93625

loc_6CB9361C:				; CODE XREF: lzo1f_999_compress_callback+15Bj
		mov	[ebp+var_18], 0
		jmp	short loc_6CB93659
; ---------------------------------------------------------------------------

loc_6CB93625:				; CODE XREF: lzo1f_999_compress_callback+161j
					; lzo1f_999_compress_callback+16Aj
		cmp	[ebp+var_14], 2
		ja	short loc_6CB93634
		mov	[ebp+var_1C], 1
		jmp	short loc_6CB93659
; ---------------------------------------------------------------------------

loc_6CB93634:				; CODE XREF: lzo1f_999_compress_callback+179j
		cmp	[ebp+var_14], 3
		jnz	short loc_6CB93643
		mov	[ebp+var_1C], 3
		jmp	short loc_6CB93659
; ---------------------------------------------------------------------------

loc_6CB93643:				; CODE XREF: lzo1f_999_compress_callback+188j
		cmp	[ebp+var_14], 1Fh
		jnz	short loc_6CB93652
		mov	[ebp+var_1C], 3
		jmp	short loc_6CB93659
; ---------------------------------------------------------------------------

loc_6CB93652:				; CODE XREF: lzo1f_999_compress_callback+197j
		mov	[ebp+var_1C], 1

loc_6CB93659:				; CODE XREF: lzo1f_999_compress_callback+173j
					; lzo1f_999_compress_callback+182j ...
		cmp	[ebp+var_18], 0
		jz	loc_6CB93754
		cmp	[ebp+var_1C], 0
		js	loc_6CB93754
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		cmp	eax, [ebp+var_18]
		jbe	loc_6CB93754
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], 1
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB93163
		mov	[ebp+var_2C], eax
		cmp	[ebp+var_18], 8
		ja	short loc_6CB936C3
		cmp	[ebp+var_30], 800h
		ja	short loc_6CB936C3
		mov	eax, [ebp+var_24]
		mov	eax, [eax+0Ch]
		cmp	eax, 800h
		jbe	short loc_6CB936C3
		add	[ebp+var_1C], 1
		jmp	short loc_6CB93723
; ---------------------------------------------------------------------------

loc_6CB936C3:				; CODE XREF: lzo1f_999_compress_callback+1F5j
					; lzo1f_999_compress_callback+1FEj ...
		mov	eax, [ebp+var_24]
		mov	eax, [eax+8]
		cmp	eax, 8
		ja	short loc_6CB936F2
		mov	eax, [ebp+var_24]
		mov	eax, [eax+0Ch]
		cmp	eax, 800h
		ja	short loc_6CB936F2
		cmp	[ebp+var_30], 800h
		jbe	short loc_6CB936F2
		cmp	[ebp+var_1C], 0
		jle	short loc_6CB936F0
		sub	[ebp+var_1C], 1
		jmp	short loc_6CB93723
; ---------------------------------------------------------------------------

loc_6CB936F0:				; CODE XREF: lzo1f_999_compress_callback+238j
		jmp	short loc_6CB93723
; ---------------------------------------------------------------------------

loc_6CB936F2:				; CODE XREF: lzo1f_999_compress_callback+21Cj
					; lzo1f_999_compress_callback+229j ...
		cmp	[ebp+var_18], 3
		jnz	short loc_6CB93723
		mov	eax, [ebp+var_24]
		mov	eax, [eax+8]
		cmp	eax, 3
		jnz	short loc_6CB93723
		mov	eax, [ebp+var_24]
		mov	eax, [eax+0Ch]
		cmp	eax, 1000h
		ja	short loc_6CB93723
		cmp	[ebp+var_30], 800h
		jbe	short loc_6CB93723
		cmp	[ebp+var_1C], 0
		jle	short loc_6CB93723
		sub	[ebp+var_1C], 1

loc_6CB93723:				; CODE XREF: lzo1f_999_compress_callback+211j
					; lzo1f_999_compress_callback+23Ej ...
		mov	eax, [ebp+var_24]
		mov	eax, [eax+8]
		mov	ecx, [ebp+var_1C]
		mov	edx, [ebp+var_18]
		add	edx, ecx
		cmp	eax, edx
		jb	short loc_6CB9374D
		mov	eax, [ebp+var_24]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_24]
		mov	[eax+48h], edx
		add	[ebp+var_14], 1
		jmp	loc_6CB9383D
; ---------------------------------------------------------------------------

loc_6CB9374D:				; CODE XREF: lzo1f_999_compress_callback+283j
		mov	[ebp+var_20], 1

loc_6CB93754:				; CODE XREF: lzo1f_999_compress_callback+1ADj
					; lzo1f_999_compress_callback+1B7j ...
		cmp	[ebp+var_18], 0
		jnz	short loc_6CB93788
		add	[ebp+var_14], 1
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], 1
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB93163
		mov	[ebp+var_2C], eax
		jmp	loc_6CB9382B
; ---------------------------------------------------------------------------

loc_6CB93788:				; CODE XREF: lzo1f_999_compress_callback+2A8j
		cmp	[ebp+var_14], 0
		jz	short loc_6CB937CC
		mov	eax, [ebp+arg_8]
		mov	[esp+0B8h+var_AC], eax
		mov	eax, [ebp+var_14]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB93407
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+var_18]
		mov	[eax+50h], edx
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+var_14]
		mov	[eax+4Ch], edx
		mov	[ebp+var_14], 0
		jmp	short loc_6CB937E2
; ---------------------------------------------------------------------------

loc_6CB937CC:				; CODE XREF: lzo1f_999_compress_callback+2DCj
		mov	eax, [ebp+var_24]
		mov	dword ptr [eax+50h], 0
		mov	eax, [ebp+var_24]
		mov	edx, [eax+50h]
		mov	eax, [ebp+var_24]
		mov	[eax+4Ch], edx

loc_6CB937E2:				; CODE XREF: lzo1f_999_compress_callback+31Aj
		mov	eax, [ebp+var_30]
		mov	[esp+0B8h+var_AC], eax
		mov	eax, [ebp+var_18]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB932C4
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_20]
		add	eax, 1
		mov	[esp+0B8h+var_AC], eax
		mov	eax, [ebp+var_18]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB93163
		mov	[ebp+var_2C], eax

loc_6CB9382B:				; CODE XREF: lzo1f_999_compress_callback+2D3j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_24]
		mov	[eax+34h], edx

loc_6CB9383D:				; CODE XREF: lzo1f_999_compress_callback:loc_6CB935C9j
					; lzo1f_999_compress_callback+298j
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		test	eax, eax
		jnz	loc_6CB935CE
		cmp	[ebp+var_14], 0
		jz	short loc_6CB93874
		mov	eax, [ebp+arg_8]
		mov	[esp+0B8h+var_AC], eax
		mov	eax, [ebp+var_14]
		mov	[esp+0B8h+var_B0], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0B8h+var_B4], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0B8h+var_B8], eax
		call	sub_6CB93407
		mov	[ebp+var_C], eax

loc_6CB93874:				; CODE XREF: lzo1f_999_compress_callback+39Fj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0E1h
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_24]
		mov	[eax+34h], edx
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_24]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB93902
		mov	eax, [ebp+var_24]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB93902
		mov	eax, [ebp+var_24]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+var_24]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+var_24]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+var_24]
		mov	edx, [edx+2Ch]
		mov	[esp+0B8h+var_AC], 0
		mov	[esp+0B8h+var_B0], ebx
		mov	[esp+0B8h+var_B4], ecx
		mov	[esp+0B8h+var_B8], edx
		call	eax

loc_6CB93902:				; CODE XREF: lzo1f_999_compress_callback+413j
					; lzo1f_999_compress_callback+420j
		mov	eax, 0

loc_6CB93907:				; CODE XREF: lzo1f_999_compress_callback+D2j
					; lzo1f_999_compress_callback+114j
		add	esp, 0B4h
		pop	ebx
		pop	ebp
		retn
lzo1f_999_compress_callback endp

; Exported entry  73. lzo1f_999_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1f_999_compress
lzo1f_999_compress proc	near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_10], 0
		mov	[esp+28h+var_14], 0
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	lzo1f_999_compress_callback
		leave
		retn
lzo1f_999_compress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  75. lzo1f_decompress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1f_decompress
lzo1f_decompress proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax

loc_6CB93980:				; CODE XREF: lzo1f_decompress+312j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 1Fh
		jbe	short loc_6CB9399D
		jmp	loc_6CB93AD2
; ---------------------------------------------------------------------------

loc_6CB9399D:				; CODE XREF: lzo1f_decompress+3Cj
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB939D4
		jmp	short loc_6CB939B0
; ---------------------------------------------------------------------------

loc_6CB939A5:				; CODE XREF: lzo1f_decompress+5Ej
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CB939B0:				; CODE XREF: lzo1f_decompress+49j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB939A5
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CB939D4:				; CODE XREF: lzo1f_decompress+47j
		cmp	[ebp+var_C], 3
		jbe	short loc_6CB93A1F

loc_6CB939DA:				; CODE XREF: lzo1f_decompress+9Aj
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB939DA
		cmp	[ebp+var_C], 0
		jz	short loc_6CB93A40

loc_6CB939FC:				; CODE XREF: lzo1f_decompress+C1j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB939FC
		jmp	short loc_6CB93A40
; ---------------------------------------------------------------------------

loc_6CB93A1F:				; CODE XREF: lzo1f_decompress+7Ej
					; lzo1f_decompress+E4j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB93A1F

loc_6CB93A40:				; CODE XREF: lzo1f_decompress+A0j
					; lzo1f_decompress+C3j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax

loc_6CB93A52:				; CODE XREF: lzo1f_decompress+34Aj
		cmp	[ebp+var_C], 1Fh
		ja	short loc_6CB93AD2
		mov	eax, [ebp+var_4]
		sub	eax, 801h
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		and	eax, 7
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 3
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB93C53
; ---------------------------------------------------------------------------

loc_6CB93AD2:				; CODE XREF: lzo1f_decompress+3Ej
					; lzo1f_decompress+FCj
		cmp	[ebp+var_C], 0DFh
		ja	short loc_6CB93B12
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		and	eax, 7
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 3
		neg	eax
		add	[ebp+var_10], eax
		shr	[ebp+var_C], 5
		jmp	loc_6CB93C04
; ---------------------------------------------------------------------------

loc_6CB93B12:				; CODE XREF: lzo1f_decompress+17Fj
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB93B4D
		jmp	short loc_6CB93B29
; ---------------------------------------------------------------------------

loc_6CB93B1E:				; CODE XREF: lzo1f_decompress+1D7j
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CB93B29:				; CODE XREF: lzo1f_decompress+1C2j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB93B1E
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CB93B4D:				; CODE XREF: lzo1f_decompress+1C0j
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		movzx	eax, word ptr [eax]
		shr	ax, 2
		movzx	eax, ax
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CB93B94
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jz	loc_6CB93CBF
		jmp	loc_6CB93CA9
; ---------------------------------------------------------------------------

loc_6CB93B94:				; CODE XREF: lzo1f_decompress+215j
		cmp	[ebp+var_C], 5
		jbe	short loc_6CB93C04
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CB93C04
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 2

loc_6CB93BBF:				; CODE XREF: lzo1f_decompress+27Fj
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB93BBF
		cmp	[ebp+var_C], 0
		jz	short loc_6CB93C02

loc_6CB93BE1:				; CODE XREF: lzo1f_decompress+2A6j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB93BE1

loc_6CB93C02:				; CODE XREF: lzo1f_decompress+285j
		jmp	short loc_6CB93C53
; ---------------------------------------------------------------------------

loc_6CB93C04:				; CODE XREF: lzo1f_decompress+1B3j
					; lzo1f_decompress+23Ej ...
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB93C32:				; CODE XREF: lzo1f_decompress+2F7j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB93C32

loc_6CB93C53:				; CODE XREF: lzo1f_decompress+173j
					; lzo1f_decompress:loc_6CB93C02j
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB93C71
		nop
		jmp	loc_6CB93980
; ---------------------------------------------------------------------------

loc_6CB93C71:				; CODE XREF: lzo1f_decompress+30Fj
					; lzo1f_decompress+336j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB93C71
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		jmp	loc_6CB93A52
; ---------------------------------------------------------------------------

loc_6CB93CA9:				; CODE XREF: lzo1f_decompress+235j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CB93CB8
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CB93CC4
; ---------------------------------------------------------------------------

loc_6CB93CB8:				; CODE XREF: lzo1f_decompress+355j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB93CC4
; ---------------------------------------------------------------------------

loc_6CB93CBF:				; CODE XREF: lzo1f_decompress+22Fj
		mov	eax, 0

locret_6CB93CC4:			; CODE XREF: lzo1f_decompress+35Cj
					; lzo1f_decompress+363j
		leave
		retn
lzo1f_decompress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  78. lzo1f_decompress_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1f_decompress_safe
lzo1f_decompress_safe proc near		; CODE XREF: lzo1f_decompress_asm_fast_safe+28p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		jmp	loc_6CB9419F
; ---------------------------------------------------------------------------

loc_6CB93D0A:				; CODE XREF: lzo1f_decompress_safe+4D3j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 1Fh
		jbe	short loc_6CB93D27
		jmp	loc_6CB93EEE
; ---------------------------------------------------------------------------

loc_6CB93D27:				; CODE XREF: lzo1f_decompress_safe+4Ej
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB93D8A
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB93D3C
		jmp	loc_6CB941E0
; ---------------------------------------------------------------------------

loc_6CB93D3C:				; CODE XREF: lzo1f_decompress_safe+63j
		jmp	short loc_6CB93D66
; ---------------------------------------------------------------------------

loc_6CB93D3E:				; CODE XREF: lzo1f_decompress_safe+9Cj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CB93D57
		jmp	loc_6CB941E0
; ---------------------------------------------------------------------------

loc_6CB93D57:				; CODE XREF: lzo1f_decompress_safe+7Ej
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB93D66
		jmp	loc_6CB941E0
; ---------------------------------------------------------------------------

loc_6CB93D66:				; CODE XREF: lzo1f_decompress_safe:loc_6CB93D3Cj
					; lzo1f_decompress_safe+8Dj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB93D3E
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CB93D8A:				; CODE XREF: lzo1f_decompress_safe+59j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB93D9E
		jmp	loc_6CB941F8
; ---------------------------------------------------------------------------

loc_6CB93D9E:				; CODE XREF: lzo1f_decompress_safe+C5j
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 1
		cmp	eax, edx
		jnb	short loc_6CB93DB7
		jmp	loc_6CB941E0
; ---------------------------------------------------------------------------

loc_6CB93DB7:				; CODE XREF: lzo1f_decompress_safe+DEj
		cmp	[ebp+var_C], 3
		jbe	short loc_6CB93E02

loc_6CB93DBD:				; CODE XREF: lzo1f_decompress_safe+105j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB93DBD
		cmp	[ebp+var_C], 0
		jz	short loc_6CB93E23

loc_6CB93DDF:				; CODE XREF: lzo1f_decompress_safe+12Cj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB93DDF
		jmp	short loc_6CB93E23
; ---------------------------------------------------------------------------

loc_6CB93E02:				; CODE XREF: lzo1f_decompress_safe+E9j
					; lzo1f_decompress_safe+14Fj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB93E02

loc_6CB93E23:				; CODE XREF: lzo1f_decompress_safe+10Bj
					; lzo1f_decompress_safe+12Ej
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		jmp	loc_6CB94193
; ---------------------------------------------------------------------------

loc_6CB93E3A:				; CODE XREF: lzo1f_decompress_safe+4C7j
		cmp	[ebp+var_C], 1Fh
		ja	loc_6CB93EEE
		mov	eax, [ebp+var_4]
		sub	eax, 801h
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		and	eax, 7
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 3
		neg	eax
		add	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB94210
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB94210
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CB93EA4
		jmp	loc_6CB941F8
; ---------------------------------------------------------------------------

loc_6CB93EA4:				; CODE XREF: lzo1f_decompress_safe+1CBj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB94119
; ---------------------------------------------------------------------------

loc_6CB93EEE:				; CODE XREF: lzo1f_decompress_safe+50j
					; lzo1f_decompress_safe+16Cj
		cmp	[ebp+var_C], 0DFh
		ja	short loc_6CB93F63
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		and	eax, 7
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 3
		neg	eax
		add	[ebp+var_10], eax
		shr	[ebp+var_C], 5
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB94210
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB94210
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CB93F5E
		jmp	loc_6CB941F8
; ---------------------------------------------------------------------------

loc_6CB93F5E:				; CODE XREF: lzo1f_decompress_safe+285j
		jmp	loc_6CB940CA
; ---------------------------------------------------------------------------

loc_6CB93F63:				; CODE XREF: lzo1f_decompress_safe+223j
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB93FCA
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB93F7C
		jmp	loc_6CB941E0
; ---------------------------------------------------------------------------

loc_6CB93F7C:				; CODE XREF: lzo1f_decompress_safe+2A3j
		jmp	short loc_6CB93FA6
; ---------------------------------------------------------------------------

loc_6CB93F7E:				; CODE XREF: lzo1f_decompress_safe+2DCj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CB93F97
		jmp	loc_6CB941F8
; ---------------------------------------------------------------------------

loc_6CB93F97:				; CODE XREF: lzo1f_decompress_safe+2BEj
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB93FA6
		jmp	loc_6CB941E0
; ---------------------------------------------------------------------------

loc_6CB93FA6:				; CODE XREF: lzo1f_decompress_safe:loc_6CB93F7Cj
					; lzo1f_decompress_safe+2CDj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB93F7E
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CB93FCA:				; CODE XREF: lzo1f_decompress_safe+299j
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB93FDE
		jmp	loc_6CB941E0
; ---------------------------------------------------------------------------

loc_6CB93FDE:				; CODE XREF: lzo1f_decompress_safe+305j
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		movzx	eax, word ptr [eax]
		shr	ax, 2
		movzx	eax, ax
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CB94025
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jz	loc_6CB941D9
		jmp	loc_6CB941C3
; ---------------------------------------------------------------------------

loc_6CB94025:				; CODE XREF: lzo1f_decompress_safe+32Ej
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB94210
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB94210
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CB9405A
		jmp	loc_6CB941F8
; ---------------------------------------------------------------------------

loc_6CB9405A:				; CODE XREF: lzo1f_decompress_safe+381j
		cmp	[ebp+var_C], 5
		jbe	short loc_6CB940CA
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CB940CA
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 2

loc_6CB94085:				; CODE XREF: lzo1f_decompress_safe+3CDj
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB94085
		cmp	[ebp+var_C], 0
		jz	short loc_6CB940C8

loc_6CB940A7:				; CODE XREF: lzo1f_decompress_safe+3F4j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB940A7

loc_6CB940C8:				; CODE XREF: lzo1f_decompress_safe+3D3j
		jmp	short loc_6CB94119
; ---------------------------------------------------------------------------

loc_6CB940CA:				; CODE XREF: lzo1f_decompress_safe:loc_6CB93F5Ej
					; lzo1f_decompress_safe+38Cj ...
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB940F8:				; CODE XREF: lzo1f_decompress_safe+445j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB940F8

loc_6CB94119:				; CODE XREF: lzo1f_decompress_safe+217j
					; lzo1f_decompress_safe:loc_6CB940C8j
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB94133
		jmp	short loc_6CB9419F
; ---------------------------------------------------------------------------

loc_6CB94133:				; CODE XREF: lzo1f_decompress_safe+45Dj
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB94147
		jmp	loc_6CB941F8
; ---------------------------------------------------------------------------

loc_6CB94147:				; CODE XREF: lzo1f_decompress_safe+46Ej
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 1
		cmp	eax, edx
		jnb	short loc_6CB94160
		jmp	loc_6CB941E0
; ---------------------------------------------------------------------------

loc_6CB94160:				; CODE XREF: lzo1f_decompress_safe+487j
					; lzo1f_decompress_safe+4ADj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB94160
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax

loc_6CB94193:				; CODE XREF: lzo1f_decompress_safe+163j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jb	loc_6CB93E3A

loc_6CB9419F:				; CODE XREF: lzo1f_decompress_safe+33j
					; lzo1f_decompress_safe+45Fj
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jb	loc_6CB93D0A
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFF9h
		jmp	short locret_6CB94226
; ---------------------------------------------------------------------------

loc_6CB941C3:				; CODE XREF: lzo1f_decompress_safe+34Ej
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CB941D2
		mov	eax, 0FFFFFFF8h
		jmp	short loc_6CB941DE
; ---------------------------------------------------------------------------

loc_6CB941D2:				; CODE XREF: lzo1f_decompress_safe+4F7j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB94226
; ---------------------------------------------------------------------------

loc_6CB941D9:				; CODE XREF: lzo1f_decompress_safe+348j
		mov	eax, 0

loc_6CB941DE:				; CODE XREF: lzo1f_decompress_safe+4FEj
		jmp	short locret_6CB94226
; ---------------------------------------------------------------------------

loc_6CB941E0:				; CODE XREF: lzo1f_decompress_safe+65j
					; lzo1f_decompress_safe+80j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB94226
; ---------------------------------------------------------------------------

loc_6CB941F8:				; CODE XREF: lzo1f_decompress_safe+C7j
					; lzo1f_decompress_safe+1CDj ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFBh
		jmp	short locret_6CB94226
; ---------------------------------------------------------------------------

loc_6CB94210:				; CODE XREF: lzo1f_decompress_safe+1AAj
					; lzo1f_decompress_safe+1B8j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFAh

locret_6CB94226:			; CODE XREF: lzo1f_decompress_safe+4EFj
					; lzo1f_decompress_safe+505j ...
		leave
		retn
lzo1f_decompress_safe endp

; Exported entry  77. lzo1f_decompress_asm_fast_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1f_decompress_asm_fast_safe
lzo1f_decompress_asm_fast_safe proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		mov	eax, [ebp+arg_10]
		mov	[esp+14h+var_4], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+14h+var_8], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+14h+var_C], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+14h+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+14h+var_14], eax
		call	lzo1f_decompress_safe
		leave
		retn
lzo1f_decompress_asm_fast_safe endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB94262	proc near		; CODE XREF: lzo1x_1_compress+C5p

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 50h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-14h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_14]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		cmp	[ebp+arg_10], 3
		ja	short loc_6CB942A9
		mov	eax, 4
		sub	eax, [ebp+arg_10]
		jmp	short loc_6CB942AE
; ---------------------------------------------------------------------------

loc_6CB942A9:				; CODE XREF: sub_6CB94262+3Bj
		mov	eax, 0

loc_6CB942AE:				; CODE XREF: sub_6CB94262+45j
		add	[ebp+var_4], eax

loc_6CB942B1:				; CODE XREF: sub_6CB94262+D1j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		sar	eax, 5
		add	eax, 1
		add	[ebp+var_4], eax

loc_6CB942C4:				; CODE XREF: sub_6CB94262+492j
					; sub_6CB94262:loc_6CB946F9j
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_24]
		setnb	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB942D9
		jmp	loc_6CB946FE
; ---------------------------------------------------------------------------

loc_6CB942D9:				; CODE XREF: sub_6CB94262+70j
		mov	eax, [ebp+var_4]
		mov	eax, [eax]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_2C]
		imul	eax, 1824429Dh
		shr	eax, 12h
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_30]
		lea	edx, [eax+eax]
		mov	eax, [ebp+var_28]
		add	eax, edx
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_30]
		lea	edx, [eax+eax]
		mov	eax, [ebp+var_28]
		add	edx, eax
		mov	ecx, [ebp+var_4]
		mov	eax, [ebp+arg_0]
		sub	ecx, eax
		mov	eax, ecx
		mov	[edx], ax
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		cmp	eax, [ebp+var_2C]
		setnz	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB94338
		jmp	loc_6CB942B1
; ---------------------------------------------------------------------------

loc_6CB94338:				; CODE XREF: sub_6CB94262+CFj
		mov	eax, [ebp+arg_10]
		neg	eax
		add	[ebp+var_C], eax
		mov	[ebp+arg_10], 0
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	loc_6CB944B8
		cmp	[ebp+var_14], 3
		ja	short loc_6CB9438F
		mov	eax, [ebp+var_8]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_14]
		or	eax, ecx
		mov	[edx], al
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_14]
		add	[ebp+var_8], eax
		jmp	loc_6CB944B8
; ---------------------------------------------------------------------------

loc_6CB9438F:				; CODE XREF: sub_6CB94262+100j
		cmp	[ebp+var_14], 10h
		ja	short loc_6CB943E5
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		sub	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+4]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+8]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[edx], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_8], eax
		jmp	loc_6CB944B8
; ---------------------------------------------------------------------------

loc_6CB943E5:				; CODE XREF: sub_6CB94262+131j
		cmp	[ebp+var_14], 12h
		ja	short loc_6CB943FE
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		sub	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB9444B
; ---------------------------------------------------------------------------

loc_6CB943FE:				; CODE XREF: sub_6CB94262+187j
		mov	eax, [ebp+var_14]
		sub	eax, 12h
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB9442C
; ---------------------------------------------------------------------------

loc_6CB94415:				; CODE XREF: sub_6CB94262+1D9j
		sub	[ebp+var_18], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB9442C:				; CODE XREF: sub_6CB94262+1B1j
		cmp	[ebp+var_18], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB94415
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_18]
		mov	[eax], dl

loc_6CB9444B:				; CODE XREF: sub_6CB94262+19Aj
					; sub_6CB94262+22Dj
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+4]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+8]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[edx], eax
		add	[ebp+var_8], 10h
		add	[ebp+var_C], 10h
		sub	[ebp+var_14], 10h
		cmp	[ebp+var_14], 0Fh
		ja	short loc_6CB9444B
		cmp	[ebp+var_14], 0
		jz	short loc_6CB944B8

loc_6CB94497:				; CODE XREF: sub_6CB94262+254j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_C]
		lea	ecx, [edx+1]
		mov	[ebp+var_C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB94497

loc_6CB944B8:				; CODE XREF: sub_6CB94262+F6j
					; sub_6CB94262+128j ...
		mov	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 0
		setz	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB94545

loc_6CB944E6:				; CODE XREF: sub_6CB94262+2E1j
		add	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 0
		jz	short loc_6CB9450B
		jmp	short loc_6CB94545
; ---------------------------------------------------------------------------

loc_6CB9450B:				; CODE XREF: sub_6CB94262+2A5j
		add	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		cmp	eax, [ebp+var_24]
		setnb	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB9453F
		jmp	short loc_6CB94550
; ---------------------------------------------------------------------------

loc_6CB9453F:				; CODE XREF: sub_6CB94262+2D9j
		cmp	[ebp+var_1C], 0
		jz	short loc_6CB944E6

loc_6CB94545:				; CODE XREF: sub_6CB94262+282j
					; sub_6CB94262+2A7j
		tzcnt	eax, [ebp+var_1C]
		shr	eax, 3
		add	[ebp+var_10], eax

loc_6CB94550:				; CODE XREF: sub_6CB94262+2DBj
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_34]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+var_10]
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		cmp	[ebp+var_10], 8
		ja	short loc_6CB945B3
		cmp	[ebp+var_3C], 800h
		ja	short loc_6CB945B3
		sub	[ebp+var_3C], 1
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_3C]
		and	edx, 7
		shl	edx, 2
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 3
		mov	[eax], dl
		jmp	loc_6CB946F9
; ---------------------------------------------------------------------------

loc_6CB945B3:				; CODE XREF: sub_6CB94262+30Bj
					; sub_6CB94262+314j
		cmp	[ebp+var_3C], 4000h
		ja	loc_6CB9464F
		sub	[ebp+var_3C], 1
		cmp	[ebp+var_10], 21h
		ja	short loc_6CB945E0
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		sub	edx, 2
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB94628
; ---------------------------------------------------------------------------

loc_6CB945E0:				; CODE XREF: sub_6CB94262+366j
		sub	[ebp+var_10], 21h
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	20h
		jmp	short loc_6CB94609
; ---------------------------------------------------------------------------

loc_6CB945F2:				; CODE XREF: sub_6CB94262+3B6j
		sub	[ebp+var_10], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB94609:				; CODE XREF: sub_6CB94262+38Ej
		cmp	[ebp+var_10], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB945F2
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		mov	[eax], dl

loc_6CB94628:				; CODE XREF: sub_6CB94262+37Cj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB946F9
; ---------------------------------------------------------------------------

loc_6CB9464F:				; CODE XREF: sub_6CB94262+358j
		sub	[ebp+var_3C], 4000h
		cmp	[ebp+var_10], 9
		ja	short loc_6CB9467F
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 0Bh
		mov	ecx, edx
		and	ecx, 8
		mov	edx, [ebp+var_10]
		sub	edx, 2
		or	edx, ecx
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB946D2
; ---------------------------------------------------------------------------

loc_6CB9467F:				; CODE XREF: sub_6CB94262+3F8j
		sub	[ebp+var_10], 9
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 0Bh
		and	edx, 8
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB946B3
; ---------------------------------------------------------------------------

loc_6CB9469C:				; CODE XREF: sub_6CB94262+460j
		sub	[ebp+var_10], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB946B3:				; CODE XREF: sub_6CB94262+438j
		cmp	[ebp+var_10], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB9469C
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		mov	[eax], dl

loc_6CB946D2:				; CODE XREF: sub_6CB94262+41Bj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB942C4
; ---------------------------------------------------------------------------

loc_6CB946F9:				; CODE XREF: sub_6CB94262+34Cj
					; sub_6CB94262+3E8j
		jmp	loc_6CB942C4
; ---------------------------------------------------------------------------

loc_6CB946FE:				; CODE XREF: sub_6CB94262+72j
		mov	edx, [ebp+var_8]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_10]
		neg	eax
		mov	ecx, eax
		mov	eax, [ebp+var_C]
		add	eax, ecx
		sub	edx, eax
		mov	eax, edx
		leave
		retn
sub_6CB94262	endp

; Exported entry  82. lzo1x_1_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1x_1_compress(int, int, int, int, void	*)
		public lzo1x_1_compress
lzo1x_1_compress proc near

Dst		= dword	ptr -58h
Val		= dword	ptr -54h
Size		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_14], eax
		mov	[ebp+var_18], 0
		jmp	loc_6CB94805
; ---------------------------------------------------------------------------

loc_6CB94748:				; CODE XREF: lzo1x_1_compress+E5j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_2C], eax
		mov	eax, 0C000h
		cmp	[ebp+var_2C], 0C000h
		cmovbe	eax, [ebp+var_2C]
		mov	[ebp+var_2C], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_2C]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_18]
		add	eax, edx
		shr	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_30]
		add	eax, edx
		cmp	eax, [ebp+var_30]
		jbe	loc_6CB9480F
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_18]
		add	eax, edx
		shr	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_30]
		add	eax, edx
		mov	edx, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	edx, ecx
		cmp	eax, edx
		jbe	short loc_6CB9480F
		mov	[esp+58h+Size],	8000h ;	Size
		mov	[esp+58h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+var_44], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+var_48], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+58h+var_4C], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax
		call	sub_6CB94262
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_2C]
		sub	[ebp+var_14], eax

loc_6CB94805:				; CODE XREF: lzo1x_1_compress+1Fj
		cmp	[ebp+var_14], 14h
		ja	loc_6CB94748

loc_6CB9480F:				; CODE XREF: lzo1x_1_compress+5Dj
					; lzo1x_1_compress+7Fj
		mov	eax, [ebp+var_14]
		add	[ebp+var_18], eax
		cmp	[ebp+var_18], 0
		jz	loc_6CB94956
		mov	eax, [ebp+var_18]
		mov	edx, [ebp+arg_4]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+arg_8]
		jnz	short loc_6CB94853
		cmp	[ebp+var_18], 0EEh
		ja	short loc_6CB94853
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		add	edx, 11h
		mov	[eax], dl
		jmp	short loc_6CB948CF
; ---------------------------------------------------------------------------

loc_6CB94853:				; CODE XREF: lzo1x_1_compress+111j
					; lzo1x_1_compress+11Aj
		cmp	[ebp+var_18], 3
		ja	short loc_6CB94871
		mov	eax, [ebp+var_10]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_18]
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB948CF
; ---------------------------------------------------------------------------

loc_6CB94871:				; CODE XREF: lzo1x_1_compress+133j
		cmp	[ebp+var_18], 12h
		ja	short loc_6CB9488A
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		sub	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB948CF
; ---------------------------------------------------------------------------

loc_6CB9488A:				; CODE XREF: lzo1x_1_compress+151j
		mov	eax, [ebp+var_18]
		sub	eax, 12h
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB948B8
; ---------------------------------------------------------------------------

loc_6CB948A1:				; CODE XREF: lzo1x_1_compress+19Bj
		sub	[ebp+var_1C], 0FFh
		mov	eax, [ebp+var_10]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	byte ptr [eax],	0
		add	[ebp+var_10], 1

loc_6CB948B8:				; CODE XREF: lzo1x_1_compress+17Bj
		cmp	[ebp+var_1C], 0FFh
		ja	short loc_6CB948A1
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_1C]
		mov	[eax], dl

loc_6CB948CF:				; CODE XREF: lzo1x_1_compress+12Dj
					; lzo1x_1_compress+14Bj ...
		mov	eax, [ebp+var_10]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_34]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_18]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB94907
; ---------------------------------------------------------------------------

loc_6CB948E3:				; CODE XREF: lzo1x_1_compress+1E7j
		mov	eax, [ebp+var_24]
		mov	edx, [eax]
		mov	eax, [ebp+var_20]
		mov	[eax], edx
		mov	eax, [ebp+var_20]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		mov	[edx], eax
		add	[ebp+var_20], 8
		add	[ebp+var_24], 8
		sub	[ebp+var_28], 8

loc_6CB94907:				; CODE XREF: lzo1x_1_compress+1BDj
		cmp	[ebp+var_28], 7
		ja	short loc_6CB948E3
		cmp	[ebp+var_28], 3
		jbe	short loc_6CB94929
		mov	eax, [ebp+var_24]
		mov	edx, [eax]
		mov	eax, [ebp+var_20]
		mov	[eax], edx
		add	[ebp+var_20], 4
		add	[ebp+var_24], 4
		sub	[ebp+var_28], 4

loc_6CB94929:				; CODE XREF: lzo1x_1_compress+1EDj
		cmp	[ebp+var_28], 0
		jz	short loc_6CB94950

loc_6CB9492F:				; CODE XREF: lzo1x_1_compress+22Aj
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		mov	edx, [ebp+var_24]
		lea	ecx, [edx+1]
		mov	[ebp+var_24], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_28], 1
		cmp	[ebp+var_28], 0
		jnz	short loc_6CB9492F

loc_6CB94950:				; CODE XREF: lzo1x_1_compress+209j
		mov	eax, [ebp+var_18]
		add	[ebp+var_10], eax

loc_6CB94956:				; CODE XREF: lzo1x_1_compress+F5j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	11h
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
lzo1x_1_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9499E	proc near		; CODE XREF: lzo1x_1_11_compress+C5p

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 50h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-14h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_14]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		cmp	[ebp+arg_10], 3
		ja	short loc_6CB949E5
		mov	eax, 4
		sub	eax, [ebp+arg_10]
		jmp	short loc_6CB949EA
; ---------------------------------------------------------------------------

loc_6CB949E5:				; CODE XREF: sub_6CB9499E+3Bj
		mov	eax, 0

loc_6CB949EA:				; CODE XREF: sub_6CB9499E+45j
		add	[ebp+var_4], eax

loc_6CB949ED:				; CODE XREF: sub_6CB9499E+D1j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		sar	eax, 5
		add	eax, 1
		add	[ebp+var_4], eax

loc_6CB94A00:				; CODE XREF: sub_6CB9499E+492j
					; sub_6CB9499E:loc_6CB94E35j
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_24]
		setnb	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB94A15
		jmp	loc_6CB94E3A
; ---------------------------------------------------------------------------

loc_6CB94A15:				; CODE XREF: sub_6CB9499E+70j
		mov	eax, [ebp+var_4]
		mov	eax, [eax]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_2C]
		imul	eax, 1824429Dh
		shr	eax, 15h
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_30]
		lea	edx, [eax+eax]
		mov	eax, [ebp+var_28]
		add	eax, edx
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_30]
		lea	edx, [eax+eax]
		mov	eax, [ebp+var_28]
		add	edx, eax
		mov	ecx, [ebp+var_4]
		mov	eax, [ebp+arg_0]
		sub	ecx, eax
		mov	eax, ecx
		mov	[edx], ax
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		cmp	eax, [ebp+var_2C]
		setnz	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB94A74
		jmp	loc_6CB949ED
; ---------------------------------------------------------------------------

loc_6CB94A74:				; CODE XREF: sub_6CB9499E+CFj
		mov	eax, [ebp+arg_10]
		neg	eax
		add	[ebp+var_C], eax
		mov	[ebp+arg_10], 0
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	loc_6CB94BF4
		cmp	[ebp+var_14], 3
		ja	short loc_6CB94ACB
		mov	eax, [ebp+var_8]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_14]
		or	eax, ecx
		mov	[edx], al
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_14]
		add	[ebp+var_8], eax
		jmp	loc_6CB94BF4
; ---------------------------------------------------------------------------

loc_6CB94ACB:				; CODE XREF: sub_6CB9499E+100j
		cmp	[ebp+var_14], 10h
		ja	short loc_6CB94B21
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		sub	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+4]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+8]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[edx], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_8], eax
		jmp	loc_6CB94BF4
; ---------------------------------------------------------------------------

loc_6CB94B21:				; CODE XREF: sub_6CB9499E+131j
		cmp	[ebp+var_14], 12h
		ja	short loc_6CB94B3A
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		sub	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB94B87
; ---------------------------------------------------------------------------

loc_6CB94B3A:				; CODE XREF: sub_6CB9499E+187j
		mov	eax, [ebp+var_14]
		sub	eax, 12h
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB94B68
; ---------------------------------------------------------------------------

loc_6CB94B51:				; CODE XREF: sub_6CB9499E+1D9j
		sub	[ebp+var_18], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB94B68:				; CODE XREF: sub_6CB9499E+1B1j
		cmp	[ebp+var_18], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB94B51
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_18]
		mov	[eax], dl

loc_6CB94B87:				; CODE XREF: sub_6CB9499E+19Aj
					; sub_6CB9499E+22Dj
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+4]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+8]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[edx], eax
		add	[ebp+var_8], 10h
		add	[ebp+var_C], 10h
		sub	[ebp+var_14], 10h
		cmp	[ebp+var_14], 0Fh
		ja	short loc_6CB94B87
		cmp	[ebp+var_14], 0
		jz	short loc_6CB94BF4

loc_6CB94BD3:				; CODE XREF: sub_6CB9499E+254j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_C]
		lea	ecx, [edx+1]
		mov	[ebp+var_C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB94BD3

loc_6CB94BF4:				; CODE XREF: sub_6CB9499E+F6j
					; sub_6CB9499E+128j ...
		mov	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 0
		setz	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB94C81

loc_6CB94C22:				; CODE XREF: sub_6CB9499E+2E1j
		add	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 0
		jz	short loc_6CB94C47
		jmp	short loc_6CB94C81
; ---------------------------------------------------------------------------

loc_6CB94C47:				; CODE XREF: sub_6CB9499E+2A5j
		add	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		cmp	eax, [ebp+var_24]
		setnb	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB94C7B
		jmp	short loc_6CB94C8C
; ---------------------------------------------------------------------------

loc_6CB94C7B:				; CODE XREF: sub_6CB9499E+2D9j
		cmp	[ebp+var_1C], 0
		jz	short loc_6CB94C22

loc_6CB94C81:				; CODE XREF: sub_6CB9499E+282j
					; sub_6CB9499E+2A7j
		tzcnt	eax, [ebp+var_1C]
		shr	eax, 3
		add	[ebp+var_10], eax

loc_6CB94C8C:				; CODE XREF: sub_6CB9499E+2DBj
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_34]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+var_10]
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		cmp	[ebp+var_10], 8
		ja	short loc_6CB94CEF
		cmp	[ebp+var_3C], 800h
		ja	short loc_6CB94CEF
		sub	[ebp+var_3C], 1
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_3C]
		and	edx, 7
		shl	edx, 2
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 3
		mov	[eax], dl
		jmp	loc_6CB94E35
; ---------------------------------------------------------------------------

loc_6CB94CEF:				; CODE XREF: sub_6CB9499E+30Bj
					; sub_6CB9499E+314j
		cmp	[ebp+var_3C], 4000h
		ja	loc_6CB94D8B
		sub	[ebp+var_3C], 1
		cmp	[ebp+var_10], 21h
		ja	short loc_6CB94D1C
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		sub	edx, 2
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB94D64
; ---------------------------------------------------------------------------

loc_6CB94D1C:				; CODE XREF: sub_6CB9499E+366j
		sub	[ebp+var_10], 21h
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	20h
		jmp	short loc_6CB94D45
; ---------------------------------------------------------------------------

loc_6CB94D2E:				; CODE XREF: sub_6CB9499E+3B6j
		sub	[ebp+var_10], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB94D45:				; CODE XREF: sub_6CB9499E+38Ej
		cmp	[ebp+var_10], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB94D2E
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		mov	[eax], dl

loc_6CB94D64:				; CODE XREF: sub_6CB9499E+37Cj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB94E35
; ---------------------------------------------------------------------------

loc_6CB94D8B:				; CODE XREF: sub_6CB9499E+358j
		sub	[ebp+var_3C], 4000h
		cmp	[ebp+var_10], 9
		ja	short loc_6CB94DBB
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 0Bh
		mov	ecx, edx
		and	ecx, 8
		mov	edx, [ebp+var_10]
		sub	edx, 2
		or	edx, ecx
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB94E0E
; ---------------------------------------------------------------------------

loc_6CB94DBB:				; CODE XREF: sub_6CB9499E+3F8j
		sub	[ebp+var_10], 9
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 0Bh
		and	edx, 8
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB94DEF
; ---------------------------------------------------------------------------

loc_6CB94DD8:				; CODE XREF: sub_6CB9499E+460j
		sub	[ebp+var_10], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB94DEF:				; CODE XREF: sub_6CB9499E+438j
		cmp	[ebp+var_10], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB94DD8
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		mov	[eax], dl

loc_6CB94E0E:				; CODE XREF: sub_6CB9499E+41Bj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB94A00
; ---------------------------------------------------------------------------

loc_6CB94E35:				; CODE XREF: sub_6CB9499E+34Cj
					; sub_6CB9499E+3E8j
		jmp	loc_6CB94A00
; ---------------------------------------------------------------------------

loc_6CB94E3A:				; CODE XREF: sub_6CB9499E+72j
		mov	edx, [ebp+var_8]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_10]
		neg	eax
		mov	ecx, eax
		mov	eax, [ebp+var_C]
		add	eax, ecx
		sub	edx, eax
		mov	eax, edx
		leave
		retn
sub_6CB9499E	endp

; Exported entry  79. lzo1x_1_11_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1x_1_11_compress(int, int, int, int, void *)
		public lzo1x_1_11_compress
lzo1x_1_11_compress proc near

Dst		= dword	ptr -58h
Val		= dword	ptr -54h
Size		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_14], eax
		mov	[ebp+var_18], 0
		jmp	loc_6CB94F41
; ---------------------------------------------------------------------------

loc_6CB94E84:				; CODE XREF: lzo1x_1_11_compress+E5j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_2C], eax
		mov	eax, 0C000h
		cmp	[ebp+var_2C], 0C000h
		cmovbe	eax, [ebp+var_2C]
		mov	[ebp+var_2C], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_2C]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_18]
		add	eax, edx
		shr	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_30]
		add	eax, edx
		cmp	eax, [ebp+var_30]
		jbe	loc_6CB94F4B
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_18]
		add	eax, edx
		shr	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_30]
		add	eax, edx
		mov	edx, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	edx, ecx
		cmp	eax, edx
		jbe	short loc_6CB94F4B
		mov	[esp+58h+Size],	1000h ;	Size
		mov	[esp+58h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+var_44], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+var_48], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+58h+var_4C], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax
		call	sub_6CB9499E
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_2C]
		sub	[ebp+var_14], eax

loc_6CB94F41:				; CODE XREF: lzo1x_1_11_compress+1Fj
		cmp	[ebp+var_14], 14h
		ja	loc_6CB94E84

loc_6CB94F4B:				; CODE XREF: lzo1x_1_11_compress+5Dj
					; lzo1x_1_11_compress+7Fj
		mov	eax, [ebp+var_14]
		add	[ebp+var_18], eax
		cmp	[ebp+var_18], 0
		jz	loc_6CB95092
		mov	eax, [ebp+var_18]
		mov	edx, [ebp+arg_4]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+arg_8]
		jnz	short loc_6CB94F8F
		cmp	[ebp+var_18], 0EEh
		ja	short loc_6CB94F8F
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		add	edx, 11h
		mov	[eax], dl
		jmp	short loc_6CB9500B
; ---------------------------------------------------------------------------

loc_6CB94F8F:				; CODE XREF: lzo1x_1_11_compress+111j
					; lzo1x_1_11_compress+11Aj
		cmp	[ebp+var_18], 3
		ja	short loc_6CB94FAD
		mov	eax, [ebp+var_10]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_18]
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB9500B
; ---------------------------------------------------------------------------

loc_6CB94FAD:				; CODE XREF: lzo1x_1_11_compress+133j
		cmp	[ebp+var_18], 12h
		ja	short loc_6CB94FC6
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		sub	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB9500B
; ---------------------------------------------------------------------------

loc_6CB94FC6:				; CODE XREF: lzo1x_1_11_compress+151j
		mov	eax, [ebp+var_18]
		sub	eax, 12h
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB94FF4
; ---------------------------------------------------------------------------

loc_6CB94FDD:				; CODE XREF: lzo1x_1_11_compress+19Bj
		sub	[ebp+var_1C], 0FFh
		mov	eax, [ebp+var_10]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	byte ptr [eax],	0
		add	[ebp+var_10], 1

loc_6CB94FF4:				; CODE XREF: lzo1x_1_11_compress+17Bj
		cmp	[ebp+var_1C], 0FFh
		ja	short loc_6CB94FDD
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_1C]
		mov	[eax], dl

loc_6CB9500B:				; CODE XREF: lzo1x_1_11_compress+12Dj
					; lzo1x_1_11_compress+14Bj ...
		mov	eax, [ebp+var_10]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_34]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_18]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB95043
; ---------------------------------------------------------------------------

loc_6CB9501F:				; CODE XREF: lzo1x_1_11_compress+1E7j
		mov	eax, [ebp+var_24]
		mov	edx, [eax]
		mov	eax, [ebp+var_20]
		mov	[eax], edx
		mov	eax, [ebp+var_20]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		mov	[edx], eax
		add	[ebp+var_20], 8
		add	[ebp+var_24], 8
		sub	[ebp+var_28], 8

loc_6CB95043:				; CODE XREF: lzo1x_1_11_compress+1BDj
		cmp	[ebp+var_28], 7
		ja	short loc_6CB9501F
		cmp	[ebp+var_28], 3
		jbe	short loc_6CB95065
		mov	eax, [ebp+var_24]
		mov	edx, [eax]
		mov	eax, [ebp+var_20]
		mov	[eax], edx
		add	[ebp+var_20], 4
		add	[ebp+var_24], 4
		sub	[ebp+var_28], 4

loc_6CB95065:				; CODE XREF: lzo1x_1_11_compress+1EDj
		cmp	[ebp+var_28], 0
		jz	short loc_6CB9508C

loc_6CB9506B:				; CODE XREF: lzo1x_1_11_compress+22Aj
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		mov	edx, [ebp+var_24]
		lea	ecx, [edx+1]
		mov	[ebp+var_24], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_28], 1
		cmp	[ebp+var_28], 0
		jnz	short loc_6CB9506B

loc_6CB9508C:				; CODE XREF: lzo1x_1_11_compress+209j
		mov	eax, [ebp+var_18]
		add	[ebp+var_10], eax

loc_6CB95092:				; CODE XREF: lzo1x_1_11_compress+F5j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	11h
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
lzo1x_1_11_compress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB950DA	proc near		; CODE XREF: lzo1x_1_12_compress+C5p

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 50h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-14h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_14]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		cmp	[ebp+arg_10], 3
		ja	short loc_6CB95121
		mov	eax, 4
		sub	eax, [ebp+arg_10]
		jmp	short loc_6CB95126
; ---------------------------------------------------------------------------

loc_6CB95121:				; CODE XREF: sub_6CB950DA+3Bj
		mov	eax, 0

loc_6CB95126:				; CODE XREF: sub_6CB950DA+45j
		add	[ebp+var_4], eax

loc_6CB95129:				; CODE XREF: sub_6CB950DA+D1j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		sar	eax, 5
		add	eax, 1
		add	[ebp+var_4], eax

loc_6CB9513C:				; CODE XREF: sub_6CB950DA+492j
					; sub_6CB950DA:loc_6CB95571j
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_24]
		setnb	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB95151
		jmp	loc_6CB95576
; ---------------------------------------------------------------------------

loc_6CB95151:				; CODE XREF: sub_6CB950DA+70j
		mov	eax, [ebp+var_4]
		mov	eax, [eax]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_2C]
		imul	eax, 1824429Dh
		shr	eax, 14h
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_30]
		lea	edx, [eax+eax]
		mov	eax, [ebp+var_28]
		add	eax, edx
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_30]
		lea	edx, [eax+eax]
		mov	eax, [ebp+var_28]
		add	edx, eax
		mov	ecx, [ebp+var_4]
		mov	eax, [ebp+arg_0]
		sub	ecx, eax
		mov	eax, ecx
		mov	[edx], ax
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		cmp	eax, [ebp+var_2C]
		setnz	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB951B0
		jmp	loc_6CB95129
; ---------------------------------------------------------------------------

loc_6CB951B0:				; CODE XREF: sub_6CB950DA+CFj
		mov	eax, [ebp+arg_10]
		neg	eax
		add	[ebp+var_C], eax
		mov	[ebp+arg_10], 0
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	loc_6CB95330
		cmp	[ebp+var_14], 3
		ja	short loc_6CB95207
		mov	eax, [ebp+var_8]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_14]
		or	eax, ecx
		mov	[edx], al
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_14]
		add	[ebp+var_8], eax
		jmp	loc_6CB95330
; ---------------------------------------------------------------------------

loc_6CB95207:				; CODE XREF: sub_6CB950DA+100j
		cmp	[ebp+var_14], 10h
		ja	short loc_6CB9525D
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		sub	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+4]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+8]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[edx], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_8], eax
		jmp	loc_6CB95330
; ---------------------------------------------------------------------------

loc_6CB9525D:				; CODE XREF: sub_6CB950DA+131j
		cmp	[ebp+var_14], 12h
		ja	short loc_6CB95276
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		sub	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB952C3
; ---------------------------------------------------------------------------

loc_6CB95276:				; CODE XREF: sub_6CB950DA+187j
		mov	eax, [ebp+var_14]
		sub	eax, 12h
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB952A4
; ---------------------------------------------------------------------------

loc_6CB9528D:				; CODE XREF: sub_6CB950DA+1D9j
		sub	[ebp+var_18], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB952A4:				; CODE XREF: sub_6CB950DA+1B1j
		cmp	[ebp+var_18], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB9528D
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_18]
		mov	[eax], dl

loc_6CB952C3:				; CODE XREF: sub_6CB950DA+19Aj
					; sub_6CB950DA+22Dj
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+4]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+8]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[edx], eax
		add	[ebp+var_8], 10h
		add	[ebp+var_C], 10h
		sub	[ebp+var_14], 10h
		cmp	[ebp+var_14], 0Fh
		ja	short loc_6CB952C3
		cmp	[ebp+var_14], 0
		jz	short loc_6CB95330

loc_6CB9530F:				; CODE XREF: sub_6CB950DA+254j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_C]
		lea	ecx, [edx+1]
		mov	[ebp+var_C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9530F

loc_6CB95330:				; CODE XREF: sub_6CB950DA+F6j
					; sub_6CB950DA+128j ...
		mov	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 0
		setz	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB953BD

loc_6CB9535E:				; CODE XREF: sub_6CB950DA+2E1j
		add	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 0
		jz	short loc_6CB95383
		jmp	short loc_6CB953BD
; ---------------------------------------------------------------------------

loc_6CB95383:				; CODE XREF: sub_6CB950DA+2A5j
		add	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		cmp	eax, [ebp+var_24]
		setnb	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB953B7
		jmp	short loc_6CB953C8
; ---------------------------------------------------------------------------

loc_6CB953B7:				; CODE XREF: sub_6CB950DA+2D9j
		cmp	[ebp+var_1C], 0
		jz	short loc_6CB9535E

loc_6CB953BD:				; CODE XREF: sub_6CB950DA+282j
					; sub_6CB950DA+2A7j
		tzcnt	eax, [ebp+var_1C]
		shr	eax, 3
		add	[ebp+var_10], eax

loc_6CB953C8:				; CODE XREF: sub_6CB950DA+2DBj
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_34]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+var_10]
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		cmp	[ebp+var_10], 8
		ja	short loc_6CB9542B
		cmp	[ebp+var_3C], 800h
		ja	short loc_6CB9542B
		sub	[ebp+var_3C], 1
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_3C]
		and	edx, 7
		shl	edx, 2
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 3
		mov	[eax], dl
		jmp	loc_6CB95571
; ---------------------------------------------------------------------------

loc_6CB9542B:				; CODE XREF: sub_6CB950DA+30Bj
					; sub_6CB950DA+314j
		cmp	[ebp+var_3C], 4000h
		ja	loc_6CB954C7
		sub	[ebp+var_3C], 1
		cmp	[ebp+var_10], 21h
		ja	short loc_6CB95458
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		sub	edx, 2
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB954A0
; ---------------------------------------------------------------------------

loc_6CB95458:				; CODE XREF: sub_6CB950DA+366j
		sub	[ebp+var_10], 21h
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	20h
		jmp	short loc_6CB95481
; ---------------------------------------------------------------------------

loc_6CB9546A:				; CODE XREF: sub_6CB950DA+3B6j
		sub	[ebp+var_10], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB95481:				; CODE XREF: sub_6CB950DA+38Ej
		cmp	[ebp+var_10], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB9546A
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		mov	[eax], dl

loc_6CB954A0:				; CODE XREF: sub_6CB950DA+37Cj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB95571
; ---------------------------------------------------------------------------

loc_6CB954C7:				; CODE XREF: sub_6CB950DA+358j
		sub	[ebp+var_3C], 4000h
		cmp	[ebp+var_10], 9
		ja	short loc_6CB954F7
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 0Bh
		mov	ecx, edx
		and	ecx, 8
		mov	edx, [ebp+var_10]
		sub	edx, 2
		or	edx, ecx
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB9554A
; ---------------------------------------------------------------------------

loc_6CB954F7:				; CODE XREF: sub_6CB950DA+3F8j
		sub	[ebp+var_10], 9
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 0Bh
		and	edx, 8
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB9552B
; ---------------------------------------------------------------------------

loc_6CB95514:				; CODE XREF: sub_6CB950DA+460j
		sub	[ebp+var_10], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB9552B:				; CODE XREF: sub_6CB950DA+438j
		cmp	[ebp+var_10], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB95514
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		mov	[eax], dl

loc_6CB9554A:				; CODE XREF: sub_6CB950DA+41Bj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB9513C
; ---------------------------------------------------------------------------

loc_6CB95571:				; CODE XREF: sub_6CB950DA+34Cj
					; sub_6CB950DA+3E8j
		jmp	loc_6CB9513C
; ---------------------------------------------------------------------------

loc_6CB95576:				; CODE XREF: sub_6CB950DA+72j
		mov	edx, [ebp+var_8]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_10]
		neg	eax
		mov	ecx, eax
		mov	eax, [ebp+var_C]
		add	eax, ecx
		sub	edx, eax
		mov	eax, edx
		leave
		retn
sub_6CB950DA	endp

; Exported entry  80. lzo1x_1_12_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1x_1_12_compress(int, int, int, int, void *)
		public lzo1x_1_12_compress
lzo1x_1_12_compress proc near

Dst		= dword	ptr -58h
Val		= dword	ptr -54h
Size		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_14], eax
		mov	[ebp+var_18], 0
		jmp	loc_6CB9567D
; ---------------------------------------------------------------------------

loc_6CB955C0:				; CODE XREF: lzo1x_1_12_compress+E5j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_2C], eax
		mov	eax, 0C000h
		cmp	[ebp+var_2C], 0C000h
		cmovbe	eax, [ebp+var_2C]
		mov	[ebp+var_2C], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_2C]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_18]
		add	eax, edx
		shr	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_30]
		add	eax, edx
		cmp	eax, [ebp+var_30]
		jbe	loc_6CB95687
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_18]
		add	eax, edx
		shr	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_30]
		add	eax, edx
		mov	edx, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	edx, ecx
		cmp	eax, edx
		jbe	short loc_6CB95687
		mov	[esp+58h+Size],	2000h ;	Size
		mov	[esp+58h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+var_44], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+var_48], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+58h+var_4C], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax
		call	sub_6CB950DA
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_2C]
		sub	[ebp+var_14], eax

loc_6CB9567D:				; CODE XREF: lzo1x_1_12_compress+1Fj
		cmp	[ebp+var_14], 14h
		ja	loc_6CB955C0

loc_6CB95687:				; CODE XREF: lzo1x_1_12_compress+5Dj
					; lzo1x_1_12_compress+7Fj
		mov	eax, [ebp+var_14]
		add	[ebp+var_18], eax
		cmp	[ebp+var_18], 0
		jz	loc_6CB957CE
		mov	eax, [ebp+var_18]
		mov	edx, [ebp+arg_4]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+arg_8]
		jnz	short loc_6CB956CB
		cmp	[ebp+var_18], 0EEh
		ja	short loc_6CB956CB
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		add	edx, 11h
		mov	[eax], dl
		jmp	short loc_6CB95747
; ---------------------------------------------------------------------------

loc_6CB956CB:				; CODE XREF: lzo1x_1_12_compress+111j
					; lzo1x_1_12_compress+11Aj
		cmp	[ebp+var_18], 3
		ja	short loc_6CB956E9
		mov	eax, [ebp+var_10]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_18]
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB95747
; ---------------------------------------------------------------------------

loc_6CB956E9:				; CODE XREF: lzo1x_1_12_compress+133j
		cmp	[ebp+var_18], 12h
		ja	short loc_6CB95702
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		sub	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB95747
; ---------------------------------------------------------------------------

loc_6CB95702:				; CODE XREF: lzo1x_1_12_compress+151j
		mov	eax, [ebp+var_18]
		sub	eax, 12h
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB95730
; ---------------------------------------------------------------------------

loc_6CB95719:				; CODE XREF: lzo1x_1_12_compress+19Bj
		sub	[ebp+var_1C], 0FFh
		mov	eax, [ebp+var_10]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	byte ptr [eax],	0
		add	[ebp+var_10], 1

loc_6CB95730:				; CODE XREF: lzo1x_1_12_compress+17Bj
		cmp	[ebp+var_1C], 0FFh
		ja	short loc_6CB95719
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_1C]
		mov	[eax], dl

loc_6CB95747:				; CODE XREF: lzo1x_1_12_compress+12Dj
					; lzo1x_1_12_compress+14Bj ...
		mov	eax, [ebp+var_10]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_34]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_18]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB9577F
; ---------------------------------------------------------------------------

loc_6CB9575B:				; CODE XREF: lzo1x_1_12_compress+1E7j
		mov	eax, [ebp+var_24]
		mov	edx, [eax]
		mov	eax, [ebp+var_20]
		mov	[eax], edx
		mov	eax, [ebp+var_20]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		mov	[edx], eax
		add	[ebp+var_20], 8
		add	[ebp+var_24], 8
		sub	[ebp+var_28], 8

loc_6CB9577F:				; CODE XREF: lzo1x_1_12_compress+1BDj
		cmp	[ebp+var_28], 7
		ja	short loc_6CB9575B
		cmp	[ebp+var_28], 3
		jbe	short loc_6CB957A1
		mov	eax, [ebp+var_24]
		mov	edx, [eax]
		mov	eax, [ebp+var_20]
		mov	[eax], edx
		add	[ebp+var_20], 4
		add	[ebp+var_24], 4
		sub	[ebp+var_28], 4

loc_6CB957A1:				; CODE XREF: lzo1x_1_12_compress+1EDj
		cmp	[ebp+var_28], 0
		jz	short loc_6CB957C8

loc_6CB957A7:				; CODE XREF: lzo1x_1_12_compress+22Aj
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		mov	edx, [ebp+var_24]
		lea	ecx, [edx+1]
		mov	[ebp+var_24], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_28], 1
		cmp	[ebp+var_28], 0
		jnz	short loc_6CB957A7

loc_6CB957C8:				; CODE XREF: lzo1x_1_12_compress+209j
		mov	eax, [ebp+var_18]
		add	[ebp+var_10], eax

loc_6CB957CE:				; CODE XREF: lzo1x_1_12_compress+F5j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	11h
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
lzo1x_1_12_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB95816	proc near		; CODE XREF: lzo1x_1_15_compress+C5p

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 50h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-14h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_14]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		cmp	[ebp+arg_10], 3
		ja	short loc_6CB9585D
		mov	eax, 4
		sub	eax, [ebp+arg_10]
		jmp	short loc_6CB95862
; ---------------------------------------------------------------------------

loc_6CB9585D:				; CODE XREF: sub_6CB95816+3Bj
		mov	eax, 0

loc_6CB95862:				; CODE XREF: sub_6CB95816+45j
		add	[ebp+var_4], eax

loc_6CB95865:				; CODE XREF: sub_6CB95816+D1j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		sar	eax, 5
		add	eax, 1
		add	[ebp+var_4], eax

loc_6CB95878:				; CODE XREF: sub_6CB95816+492j
					; sub_6CB95816:loc_6CB95CADj
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_24]
		setnb	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB9588D
		jmp	loc_6CB95CB2
; ---------------------------------------------------------------------------

loc_6CB9588D:				; CODE XREF: sub_6CB95816+70j
		mov	eax, [ebp+var_4]
		mov	eax, [eax]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_2C]
		imul	eax, 1824429Dh
		shr	eax, 13h
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_30]
		lea	edx, [eax+eax]
		mov	eax, [ebp+var_28]
		add	eax, edx
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_30]
		lea	edx, [eax+eax]
		mov	eax, [ebp+var_28]
		add	edx, eax
		mov	ecx, [ebp+var_4]
		mov	eax, [ebp+arg_0]
		sub	ecx, eax
		mov	eax, ecx
		mov	[edx], ax
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		cmp	eax, [ebp+var_2C]
		setnz	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB958EC
		jmp	loc_6CB95865
; ---------------------------------------------------------------------------

loc_6CB958EC:				; CODE XREF: sub_6CB95816+CFj
		mov	eax, [ebp+arg_10]
		neg	eax
		add	[ebp+var_C], eax
		mov	[ebp+arg_10], 0
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	loc_6CB95A6C
		cmp	[ebp+var_14], 3
		ja	short loc_6CB95943
		mov	eax, [ebp+var_8]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_14]
		or	eax, ecx
		mov	[edx], al
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_14]
		add	[ebp+var_8], eax
		jmp	loc_6CB95A6C
; ---------------------------------------------------------------------------

loc_6CB95943:				; CODE XREF: sub_6CB95816+100j
		cmp	[ebp+var_14], 10h
		ja	short loc_6CB95999
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		sub	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+4]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+8]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[edx], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_8], eax
		jmp	loc_6CB95A6C
; ---------------------------------------------------------------------------

loc_6CB95999:				; CODE XREF: sub_6CB95816+131j
		cmp	[ebp+var_14], 12h
		ja	short loc_6CB959B2
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		sub	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB959FF
; ---------------------------------------------------------------------------

loc_6CB959B2:				; CODE XREF: sub_6CB95816+187j
		mov	eax, [ebp+var_14]
		sub	eax, 12h
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB959E0
; ---------------------------------------------------------------------------

loc_6CB959C9:				; CODE XREF: sub_6CB95816+1D9j
		sub	[ebp+var_18], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB959E0:				; CODE XREF: sub_6CB95816+1B1j
		cmp	[ebp+var_18], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB959C9
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_18]
		mov	[eax], dl

loc_6CB959FF:				; CODE XREF: sub_6CB95816+19Aj
					; sub_6CB95816+22Dj
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+4]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+8]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[edx], eax
		add	[ebp+var_8], 10h
		add	[ebp+var_C], 10h
		sub	[ebp+var_14], 10h
		cmp	[ebp+var_14], 0Fh
		ja	short loc_6CB959FF
		cmp	[ebp+var_14], 0
		jz	short loc_6CB95A6C

loc_6CB95A4B:				; CODE XREF: sub_6CB95816+254j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_C]
		lea	ecx, [edx+1]
		mov	[ebp+var_C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB95A4B

loc_6CB95A6C:				; CODE XREF: sub_6CB95816+F6j
					; sub_6CB95816+128j ...
		mov	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 0
		setz	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB95AF9

loc_6CB95A9A:				; CODE XREF: sub_6CB95816+2E1j
		add	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 0
		jz	short loc_6CB95ABF
		jmp	short loc_6CB95AF9
; ---------------------------------------------------------------------------

loc_6CB95ABF:				; CODE XREF: sub_6CB95816+2A5j
		add	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		cmp	eax, [ebp+var_24]
		setnb	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB95AF3
		jmp	short loc_6CB95B04
; ---------------------------------------------------------------------------

loc_6CB95AF3:				; CODE XREF: sub_6CB95816+2D9j
		cmp	[ebp+var_1C], 0
		jz	short loc_6CB95A9A

loc_6CB95AF9:				; CODE XREF: sub_6CB95816+282j
					; sub_6CB95816+2A7j
		tzcnt	eax, [ebp+var_1C]
		shr	eax, 3
		add	[ebp+var_10], eax

loc_6CB95B04:				; CODE XREF: sub_6CB95816+2DBj
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_34]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+var_10]
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		cmp	[ebp+var_10], 8
		ja	short loc_6CB95B67
		cmp	[ebp+var_3C], 800h
		ja	short loc_6CB95B67
		sub	[ebp+var_3C], 1
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_3C]
		and	edx, 7
		shl	edx, 2
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 3
		mov	[eax], dl
		jmp	loc_6CB95CAD
; ---------------------------------------------------------------------------

loc_6CB95B67:				; CODE XREF: sub_6CB95816+30Bj
					; sub_6CB95816+314j
		cmp	[ebp+var_3C], 4000h
		ja	loc_6CB95C03
		sub	[ebp+var_3C], 1
		cmp	[ebp+var_10], 21h
		ja	short loc_6CB95B94
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		sub	edx, 2
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB95BDC
; ---------------------------------------------------------------------------

loc_6CB95B94:				; CODE XREF: sub_6CB95816+366j
		sub	[ebp+var_10], 21h
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	20h
		jmp	short loc_6CB95BBD
; ---------------------------------------------------------------------------

loc_6CB95BA6:				; CODE XREF: sub_6CB95816+3B6j
		sub	[ebp+var_10], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB95BBD:				; CODE XREF: sub_6CB95816+38Ej
		cmp	[ebp+var_10], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB95BA6
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		mov	[eax], dl

loc_6CB95BDC:				; CODE XREF: sub_6CB95816+37Cj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB95CAD
; ---------------------------------------------------------------------------

loc_6CB95C03:				; CODE XREF: sub_6CB95816+358j
		sub	[ebp+var_3C], 4000h
		cmp	[ebp+var_10], 9
		ja	short loc_6CB95C33
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 0Bh
		mov	ecx, edx
		and	ecx, 8
		mov	edx, [ebp+var_10]
		sub	edx, 2
		or	edx, ecx
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB95C86
; ---------------------------------------------------------------------------

loc_6CB95C33:				; CODE XREF: sub_6CB95816+3F8j
		sub	[ebp+var_10], 9
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 0Bh
		and	edx, 8
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB95C67
; ---------------------------------------------------------------------------

loc_6CB95C50:				; CODE XREF: sub_6CB95816+460j
		sub	[ebp+var_10], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB95C67:				; CODE XREF: sub_6CB95816+438j
		cmp	[ebp+var_10], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB95C50
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		mov	[eax], dl

loc_6CB95C86:				; CODE XREF: sub_6CB95816+41Bj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB95878
; ---------------------------------------------------------------------------

loc_6CB95CAD:				; CODE XREF: sub_6CB95816+34Cj
					; sub_6CB95816+3E8j
		jmp	loc_6CB95878
; ---------------------------------------------------------------------------

loc_6CB95CB2:				; CODE XREF: sub_6CB95816+72j
		mov	edx, [ebp+var_8]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_10]
		neg	eax
		mov	ecx, eax
		mov	eax, [ebp+var_C]
		add	eax, ecx
		sub	edx, eax
		mov	eax, edx
		leave
		retn
sub_6CB95816	endp

; Exported entry  81. lzo1x_1_15_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1x_1_15_compress(int, int, int, int, void *)
		public lzo1x_1_15_compress
lzo1x_1_15_compress proc near

Dst		= dword	ptr -58h
Val		= dword	ptr -54h
Size		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_14], eax
		mov	[ebp+var_18], 0
		jmp	loc_6CB95DB9
; ---------------------------------------------------------------------------

loc_6CB95CFC:				; CODE XREF: lzo1x_1_15_compress+E5j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_2C], eax
		mov	eax, 0C000h
		cmp	[ebp+var_2C], 0C000h
		cmovbe	eax, [ebp+var_2C]
		mov	[ebp+var_2C], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_2C]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_18]
		add	eax, edx
		shr	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_30]
		add	eax, edx
		cmp	eax, [ebp+var_30]
		jbe	loc_6CB95DC3
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_18]
		add	eax, edx
		shr	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_30]
		add	eax, edx
		mov	edx, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	edx, ecx
		cmp	eax, edx
		jbe	short loc_6CB95DC3
		mov	[esp+58h+Size],	4000h ;	Size
		mov	[esp+58h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+var_44], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+var_48], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+58h+var_4C], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax
		call	sub_6CB95816
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_2C]
		sub	[ebp+var_14], eax

loc_6CB95DB9:				; CODE XREF: lzo1x_1_15_compress+1Fj
		cmp	[ebp+var_14], 14h
		ja	loc_6CB95CFC

loc_6CB95DC3:				; CODE XREF: lzo1x_1_15_compress+5Dj
					; lzo1x_1_15_compress+7Fj
		mov	eax, [ebp+var_14]
		add	[ebp+var_18], eax
		cmp	[ebp+var_18], 0
		jz	loc_6CB95F0A
		mov	eax, [ebp+var_18]
		mov	edx, [ebp+arg_4]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+arg_8]
		jnz	short loc_6CB95E07
		cmp	[ebp+var_18], 0EEh
		ja	short loc_6CB95E07
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		add	edx, 11h
		mov	[eax], dl
		jmp	short loc_6CB95E83
; ---------------------------------------------------------------------------

loc_6CB95E07:				; CODE XREF: lzo1x_1_15_compress+111j
					; lzo1x_1_15_compress+11Aj
		cmp	[ebp+var_18], 3
		ja	short loc_6CB95E25
		mov	eax, [ebp+var_10]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_18]
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB95E83
; ---------------------------------------------------------------------------

loc_6CB95E25:				; CODE XREF: lzo1x_1_15_compress+133j
		cmp	[ebp+var_18], 12h
		ja	short loc_6CB95E3E
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		sub	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB95E83
; ---------------------------------------------------------------------------

loc_6CB95E3E:				; CODE XREF: lzo1x_1_15_compress+151j
		mov	eax, [ebp+var_18]
		sub	eax, 12h
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB95E6C
; ---------------------------------------------------------------------------

loc_6CB95E55:				; CODE XREF: lzo1x_1_15_compress+19Bj
		sub	[ebp+var_1C], 0FFh
		mov	eax, [ebp+var_10]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	byte ptr [eax],	0
		add	[ebp+var_10], 1

loc_6CB95E6C:				; CODE XREF: lzo1x_1_15_compress+17Bj
		cmp	[ebp+var_1C], 0FFh
		ja	short loc_6CB95E55
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_1C]
		mov	[eax], dl

loc_6CB95E83:				; CODE XREF: lzo1x_1_15_compress+12Dj
					; lzo1x_1_15_compress+14Bj ...
		mov	eax, [ebp+var_10]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_34]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_18]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB95EBB
; ---------------------------------------------------------------------------

loc_6CB95E97:				; CODE XREF: lzo1x_1_15_compress+1E7j
		mov	eax, [ebp+var_24]
		mov	edx, [eax]
		mov	eax, [ebp+var_20]
		mov	[eax], edx
		mov	eax, [ebp+var_20]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		mov	[edx], eax
		add	[ebp+var_20], 8
		add	[ebp+var_24], 8
		sub	[ebp+var_28], 8

loc_6CB95EBB:				; CODE XREF: lzo1x_1_15_compress+1BDj
		cmp	[ebp+var_28], 7
		ja	short loc_6CB95E97
		cmp	[ebp+var_28], 3
		jbe	short loc_6CB95EDD
		mov	eax, [ebp+var_24]
		mov	edx, [eax]
		mov	eax, [ebp+var_20]
		mov	[eax], edx
		add	[ebp+var_20], 4
		add	[ebp+var_24], 4
		sub	[ebp+var_28], 4

loc_6CB95EDD:				; CODE XREF: lzo1x_1_15_compress+1EDj
		cmp	[ebp+var_28], 0
		jz	short loc_6CB95F04

loc_6CB95EE3:				; CODE XREF: lzo1x_1_15_compress+22Aj
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		mov	edx, [ebp+var_24]
		lea	ecx, [edx+1]
		mov	[ebp+var_24], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_28], 1
		cmp	[ebp+var_28], 0
		jnz	short loc_6CB95EE3

loc_6CB95F04:				; CODE XREF: lzo1x_1_15_compress+209j
		mov	eax, [ebp+var_18]
		add	[ebp+var_10], eax

loc_6CB95F0A:				; CODE XREF: lzo1x_1_15_compress+F5j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	11h
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
lzo1x_1_15_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB95F52(int,	void *,	size_t)
sub_6CB95F52	proc near		; CODE XREF: sub_6CB9616B+145p

Dst		= dword	ptr -18h
Src		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+148h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+148h]
		mov	eax, [ebp+arg_0]
		mov	[eax+144h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14Ch], 0
		cmp	[ebp+arg_4], 0
		jz	short loc_6CB95F90
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CB95F92

loc_6CB95F90:				; CODE XREF: sub_6CB95F52+36j
		jmp	short locret_6CB96007
; ---------------------------------------------------------------------------

loc_6CB95F92:				; CODE XREF: sub_6CB95F52+3Cj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_8]
		jnb	short loc_6CB95FB3
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+arg_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+arg_8], eax

loc_6CB95FB3:				; CODE XREF: sub_6CB95F52+48j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+144h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+14Ch], edx
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+148h], edx
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+16Ch]
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Src], eax ; Src
		mov	[esp+18h+Dst], edx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+150h], edx

locret_6CB96007:			; CODE XREF: sub_6CB95F52:loc_6CB95F90j
		leave
		retn
sub_6CB95F52	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB96009	proc near		; CODE XREF: sub_6CB9616B+287p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		sub	eax, [ebp+arg_8]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+164h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+168h], edx
		cmp	[ebp+arg_8], 0
		jz	locret_6CB96169

loc_6CB96038:				; CODE XREF: sub_6CB96009+15Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 160h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CB960BC
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 68B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CB960C1
; ---------------------------------------------------------------------------

loc_6CB960BC:				; CODE XREF: sub_6CB96009+9Ej
		mov	eax, 0FFFFFFFFh

loc_6CB960C1:				; CODE XREF: sub_6CB96009+B1j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		add	ecx, 0A8B0h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_4]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 68B0h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 170B0h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 278B0h
		mov	[eax+ecx*2+8], dx
		add	[ebp+arg_4], 1
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	loc_6CB96038

locret_6CB96169:			; CODE XREF: sub_6CB96009+29j
		leave
		retn
sub_6CB96009	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB9616B(int,	void *,	size_t)
sub_6CB9616B	proc near		; CODE XREF: sub_6CB96EAD+93p

Dst		= dword	ptr -28h
Val		= dword	ptr -24h
Size		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	[ebp+var_C], 0
		jmp	short loc_6CB961BE
; ---------------------------------------------------------------------------

loc_6CB9618F:				; CODE XREF: sub_6CB9616B+57j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 2Ch
		mov	dword ptr [eax+edx*4+0Ch], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 2Ch
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 8
		mov	[eax+ecx*4+0Ch], edx
		add	[ebp+var_C], 1

loc_6CB961BE:				; CODE XREF: sub_6CB9616B+22j
		cmp	[ebp+var_C], 21h
		jbe	short loc_6CB9618F
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0BFFFh
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 800h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 1
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0Ch], 800h
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+18h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+15Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+160h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax+164h], edx
		mov	eax, [ebp+arg_0]
		add	eax, 47168h
		mov	[esp+28h+Size],	8000h ;	Size
		mov	[esp+28h+Val], 0 ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		add	eax, 4F168h
		mov	[esp+28h+Size],	20000h ; Size
		mov	[esp+28h+Val], 0FFh ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+150h], 0
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+Size],	eax ; size_t
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+Val], eax ; void *
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax ; int
		call	sub_6CB95F52
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	[eax+154h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	[eax+168h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+24h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+1Ch]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	loc_6CB9639C
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jbe	short loc_6CB96329
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB96329:				; CODE XREF: sub_6CB9616B+1B0j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+1Ch]
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+150h]
		lea	ebx, [ecx+160h]
		mov	ecx, [ebp+arg_0]
		add	ecx, ebx
		add	ecx, 0Ch
		mov	[esp+28h+Size],	edx ; Size
		mov	[esp+28h+Val], eax ; Src
		mov	[esp+28h+Dst], ecx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+0B4h]
		mov	ecx, [edx+1Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+24h]
		add	edx, ecx
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+150h], edx

loc_6CB9639C:				; CODE XREF: sub_6CB9616B+19Cj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short loc_6CB963BF
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+150h], 0

loc_6CB963BF:				; CODE XREF: sub_6CB9616B+245j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 1
		jbe	short loc_6CB963F7
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14Ch]
		test	eax, eax
		jz	short loc_6CB963F7
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14Ch]
		mov	[esp+28h+Size],	eax
		mov	[esp+28h+Val], 0
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax
		call	sub_6CB96009

loc_6CB963F7:				; CODE XREF: sub_6CB9616B+25Dj
					; sub_6CB9616B+26Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+168h]
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		cmp	edx, eax
		jb	short loc_6CB9643E
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx
		jmp	short loc_6CB96468
; ---------------------------------------------------------------------------

loc_6CB9643E:				; CODE XREF: sub_6CB9616B+2B2j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+15Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		sub	ecx, eax
		mov	eax, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx

loc_6CB96468:				; CODE XREF: sub_6CB9616B+2D1j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		ja	short loc_6CB964B1
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		add	eax, 1
		mov	edx, [ebp+var_10]
		add	edx, 2
		mov	byte ptr [edx],	0
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_10]
		mov	[eax], dl

loc_6CB964B1:				; CODE XREF: sub_6CB9616B+306j
		mov	eax, 0
		add	esp, 24h
		pop	ebx
		pop	ebp
		retn
sub_6CB9616B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB964BC	proc near		; CODE XREF: sub_6CB96EAD+A7p
					; sub_6CB96F79+EBp
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_6CB964BC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB964C1	proc near		; CODE XREF: sub_6CB9674A+17Ap
					; sub_6CB96F79+C2p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jnb	short loc_6CB964FD
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0B4h]
		mov	eax, [edx+1Ch]
		lea	ecx, [eax+1]
		mov	[edx+1Ch], ecx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		jmp	short loc_6CB96502
; ---------------------------------------------------------------------------

loc_6CB964FD:				; CODE XREF: sub_6CB964C1+20j
		mov	eax, 0FFFFFFFFh

loc_6CB96502:				; CODE XREF: sub_6CB964C1+3Aj
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jns	short loc_6CB96564
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CB96524
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB96524:				; CODE XREF: sub_6CB964C1+52j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		mov	edx, [ebp+arg_0]
		mov	byte ptr [edx+eax+16Ch], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB965A8
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		add	eax, edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB965A8
; ---------------------------------------------------------------------------

loc_6CB96564:				; CODE XREF: sub_6CB964C1+48j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		mov	edx, [ebp+var_4]
		mov	ecx, edx
		mov	edx, [ebp+arg_0]
		mov	[edx+eax+16Ch],	cl
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB965A8
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		add	edx, eax
		mov	eax, [ebp+var_4]
		mov	[edx], al

loc_6CB965A8:				; CODE XREF: sub_6CB964C1+88j
					; sub_6CB964C1+A1j ...
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+150h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short loc_6CB965E0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+150h], 0

loc_6CB965E0:				; CODE XREF: sub_6CB964C1+110j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+154h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short loc_6CB96618
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+154h], 0

loc_6CB96618:				; CODE XREF: sub_6CB964C1+148j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+158h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short locret_6CB96650
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+158h], 0

locret_6CB96650:			; CODE XREF: sub_6CB964C1+180j
		leave
		retn
sub_6CB964C1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB96652	proc near		; CODE XREF: sub_6CB9674A+23p
					; sub_6CB96B3C+32Ap

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		test	eax, eax
		jnz	loc_6CB96733
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 160h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 278B0h
		movzx	eax, word ptr [eax+edx*2+8]
		movzx	eax, ax
		cmp	eax, [ebp+arg_4]
		jnz	short loc_6CB96731
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 278B0h
		mov	word ptr [eax+edx*2+8],	0FFFFh
		jmp	short locret_6CB96748
; ---------------------------------------------------------------------------

loc_6CB96731:				; CODE XREF: sub_6CB96652+C8j
		jmp	short locret_6CB96748
; ---------------------------------------------------------------------------

loc_6CB96733:				; CODE XREF: sub_6CB96652+11j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+164h], edx

locret_6CB96748:			; CODE XREF: sub_6CB96652+DDj
					; sub_6CB96652:loc_6CB96731j
		leave
		retn
sub_6CB96652	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9674A	proc near		; CODE XREF: sub_6CB96F79+21p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		cmp	[ebp+arg_4], 0
		jz	locret_6CB968D7

loc_6CB9675A:				; CODE XREF: sub_6CB9674A+187j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+158h]
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB96652
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+16Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CB9680E
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 68B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CB96813
; ---------------------------------------------------------------------------

loc_6CB9680E:				; CODE XREF: sub_6CB9674A+AFj
		mov	eax, 0FFFFFFFFh

loc_6CB96813:				; CODE XREF: sub_6CB9674A+C2j
		mov	edx, [ebp+arg_0]
		add	ecx, 0A8B0h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 68B0h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 170B0h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 278B0h
		mov	[eax+ecx*2+8], dx
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB964C1
		sub	[ebp+arg_4], 1
		cmp	[ebp+arg_4], 0
		jnz	loc_6CB9675A

locret_6CB968D7:			; CODE XREF: sub_6CB9674A+Aj
		leave
		retn
sub_6CB9674A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB968D9	proc near		; CODE XREF: sub_6CB96B3C+1D6p

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_D		= byte ptr -0Dh
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 30h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		add	eax, 16Ch
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al
		jmp	loc_6CB96A9E
; ---------------------------------------------------------------------------

loc_6CB96945:				; CODE XREF: sub_6CB968D9+1D0j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_14]
		add	eax, edx
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_8]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		cmp	al, [ebp+var_D]
		jnz	loc_6CB96A87
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_8]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	ecx, [ebp+var_4]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB96A87
		mov	eax, [ebp+var_8]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB96A87
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB96A87
		add	[ebp+var_4], 2
		add	[ebp+var_8], 2

loc_6CB969C7:				; CODE XREF: sub_6CB968D9+10Cj
		add	[ebp+var_4], 1
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CB969E7
		mov	eax, [ebp+var_4]
		movzx	edx, byte ptr [eax]
		add	[ebp+var_8], 1
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB969C7

loc_6CB969E7:				; CODE XREF: sub_6CB968D9+F8j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 21h
		ja	short loc_6CB96A1E
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_24]
		add	edx, 2Ch
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jnz	short loc_6CB96A1E
		mov	eax, [ebp+arg_4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_24]
		add	edx, 2Ch
		mov	[eax+edx*4+0Ch], ecx

loc_6CB96A1E:				; CODE XREF: sub_6CB968D9+11Fj
					; sub_6CB968D9+130j
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_C]
		jbe	short loc_6CB96A87
		mov	eax, [ebp+var_24]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+0B8h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB96A4E
		jmp	short locret_6CB96AAF
; ---------------------------------------------------------------------------

loc_6CB96A4E:				; CODE XREF: sub_6CB968D9+171j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+10h]
		cmp	eax, [ebp+var_C]
		ja	short loc_6CB96A5B
		jmp	short locret_6CB96AAF
; ---------------------------------------------------------------------------

loc_6CB96A5B:				; CODE XREF: sub_6CB968D9+17Ej
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 170B0h
		movzx	eax, word ptr [eax+edx*2+0Ah]
		movzx	eax, ax
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB96A76
		jmp	short locret_6CB96AAF
; ---------------------------------------------------------------------------

loc_6CB96A76:				; CODE XREF: sub_6CB968D9+199j
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al

loc_6CB96A87:				; CODE XREF: sub_6CB968D9+94j
					; sub_6CB968D9+B2j ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 0A8B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+arg_4], eax

loc_6CB96A9E:				; CODE XREF: sub_6CB968D9+67j
		mov	eax, [ebp+arg_8]
		lea	edx, [eax-1]
		mov	[ebp+arg_8], edx
		test	eax, eax
		jnz	loc_6CB96945

locret_6CB96AAF:			; CODE XREF: sub_6CB968D9+173j
					; sub_6CB968D9+180j ...
		leave
		retn
sub_6CB968D9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB96AB1	proc near		; CODE XREF: sub_6CB96B3C+1AEp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	eax, [ebp+arg_0]
		add	edx, 278B0h
		movzx	eax, word ptr [eax+edx*2+8]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0FFFFh
		jnz	short loc_6CB96AF8
		mov	eax, 0
		jmp	short locret_6CB96B3A
; ---------------------------------------------------------------------------

loc_6CB96AF8:				; CODE XREF: sub_6CB96AB1+3Ej
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0C4h]
		test	eax, eax
		jnz	short loc_6CB96B14
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+0C4h], edx

loc_6CB96B14:				; CODE XREF: sub_6CB96AB1+52j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, 1
		ja	short loc_6CB96B35
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 2
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		mov	[eax+0B8h], edx

loc_6CB96B35:				; CODE XREF: sub_6CB96AB1+6Cj
		mov	eax, 1

locret_6CB96B3A:			; CODE XREF: sub_6CB96AB1+45j
		leave
		retn
sub_6CB96AB1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB96B3C	proc near		; CODE XREF: sub_6CB96F79+9Fp

var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 2Ch
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+16Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 238B0h
		movzx	eax, word ptr [eax+ecx*2+8]
		test	ax, ax
		jz	short loc_6CB96BDF
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 68B0h
		movzx	eax, word ptr [eax+ecx*2+0Ch]
		jmp	short loc_6CB96BE4
; ---------------------------------------------------------------------------

loc_6CB96BDF:				; CODE XREF: sub_6CB96B3C+8Ej
		mov	eax, 0FFFFFFFFh

loc_6CB96BE4:				; CODE XREF: sub_6CB96B3C+A1j
		mov	ecx, [ebp+arg_0]
		lea	ebx, [edx+0A8B0h]
		mov	[ecx+ebx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		add	edx, 0A8B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_10]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_10]
		add	ebx, 238B0h
		mov	[edx+ebx*2+8], cx
		movzx	eax, ax
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		cmp	eax, [ebp+var_8]
		jnb	short loc_6CB96C4F
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_6CB96C4F
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_8], eax

loc_6CB96C4F:				; CODE XREF: sub_6CB96B3C+FEj
					; sub_6CB96B3C+108j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 68B0h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+16Ch]
		movzx	edx, al
		mov	eax, [ebp+arg_0]
		mov	[eax+28h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jb	short loc_6CB96CE4
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jnz	short loc_6CB96CB5
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0FFFFFFFFh

loc_6CB96CB5:				; CODE XREF: sub_6CB96B3C+16Dj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 170B0h
		mov	[eax+edx*2+0Ah], cx
		jmp	loc_6CB96E53
; ---------------------------------------------------------------------------

loc_6CB96CE4:				; CODE XREF: sub_6CB96B3C+163j
		mov	eax, [ebp+arg_0]
		mov	[esp+30h+var_30], eax
		call	sub_6CB96AB1
		test	eax, eax
		jz	short loc_6CB96D17
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		jbe	short loc_6CB96D17
		mov	eax, [ebp+var_8]
		mov	[esp+30h+var_28], eax
		mov	eax, [ebp+var_14]
		mov	[esp+30h+var_2C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+30h+var_30], eax
		call	sub_6CB968D9

loc_6CB96D17:				; CODE XREF: sub_6CB96B3C+1B5j
					; sub_6CB96B3C+1C0j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB96D77
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B8h]
		cmp	edx, eax
		jbe	short loc_6CB96D50
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B8h]
		sub	edx, eax
		mov	eax, edx
		jmp	short loc_6CB96D71
; ---------------------------------------------------------------------------

loc_6CB96D50:				; CODE XREF: sub_6CB96B3C+1FAj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+15Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B8h]
		sub	ecx, eax
		mov	eax, ecx
		add	eax, edx

loc_6CB96D71:				; CODE XREF: sub_6CB96B3C+212j
		mov	edx, [ebp+arg_0]
		mov	[edx+20h], eax

loc_6CB96D77:				; CODE XREF: sub_6CB96B3C+1E4j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		add	ecx, 170B0h
		mov	[eax+ecx*2+0Ah], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	loc_6CB96E53
		mov	[ebp+var_C], 2
		jmp	loc_6CB96E49
; ---------------------------------------------------------------------------

loc_6CB96DB0:				; CODE XREF: sub_6CB96B3C+311j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 2Ch
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB96E34
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 2Ch
		mov	eax, [eax+ecx*4+0Ch]
		sub	eax, 1
		cmp	edx, eax
		jbe	short loc_6CB96DFD
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 2Ch
		mov	eax, [eax+ecx*4+0Ch]
		sub	edx, eax
		mov	eax, edx
		add	eax, 1
		jmp	short loc_6CB96E25
; ---------------------------------------------------------------------------

loc_6CB96DFD:				; CODE XREF: sub_6CB96B3C+2A0j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+15Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ebx, [ebp+var_C]
		add	ebx, 2Ch
		mov	eax, [eax+ebx*4+0Ch]
		sub	ecx, eax
		mov	eax, ecx
		add	eax, edx
		add	eax, 1

loc_6CB96E25:				; CODE XREF: sub_6CB96B3C+2BFj
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 8
		mov	[edx+ecx*4+0Ch], eax
		jmp	short loc_6CB96E45
; ---------------------------------------------------------------------------

loc_6CB96E34:				; CODE XREF: sub_6CB96B3C+283j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 8
		mov	dword ptr [eax+edx*4+0Ch], 0

loc_6CB96E45:				; CODE XREF: sub_6CB96B3C+2F6j
		add	[ebp+var_C], 1

loc_6CB96E49:				; CODE XREF: sub_6CB96B3C+26Fj
		cmp	[ebp+var_C], 21h
		jbe	loc_6CB96DB0

loc_6CB96E53:				; CODE XREF: sub_6CB96B3C+1A3j
					; sub_6CB96B3C+262j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+158h]
		mov	[esp+30h+var_2C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+30h+var_30], eax
		call	sub_6CB96652
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 278B0h
		mov	[eax+ecx*2+8], dx
		add	esp, 2Ch
		pop	ebx
		pop	ebp
		retn
sub_6CB96B3C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB96EAD(int,	int, void *, size_t, int)
sub_6CB96EAD	proc near		; CODE XREF: lzo1x_999_compress_internal+148p

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 1
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[eax+0B4h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+14h]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+34h]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_20], eax ;	size_t
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_24], eax ;	void *
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax ;	int
		call	sub_6CB9616B
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jz	short loc_6CB96F5E
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax
		call	sub_6CB964BC
		mov	eax, [ebp+var_C]
		jmp	short locret_6CB96F77
; ---------------------------------------------------------------------------

loc_6CB96F5E:				; CODE XREF: sub_6CB96EAD+9Fj
		mov	eax, [ebp+arg_10]
		and	eax, 1
		test	eax, eax
		setnz	al
		movzx	edx, al
		mov	eax, [ebp+arg_4]
		mov	[eax+14h], edx
		mov	eax, 0

locret_6CB96F77:			; CODE XREF: sub_6CB96EAD+AFj
		leave
		retn
sub_6CB96EAD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB96F79	proc near		; CODE XREF: lzo1x_999_compress_internal+199p
					; lzo1x_999_compress_internal+284p ...

Dst		= dword	ptr -18h
Val		= dword	ptr -14h
Size		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		cmp	[ebp+arg_C], 0
		jz	short loc_6CB96FBC
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	[esp+18h+Val], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB9674A
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	eax, edx
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		jmp	short loc_6CB96FD4
; ---------------------------------------------------------------------------

loc_6CB96FBC:				; CODE XREF: sub_6CB96F79+Bj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx

loc_6CB96FD4:				; CODE XREF: sub_6CB96F79+41j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+1Ch], 1
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_6CB97012
		mov	eax, [ebp+arg_4]
		add	eax, 0BCh
		mov	[esp+18h+Size],	88h ; Size
		mov	[esp+18h+Val], 0 ; Val
		mov	[esp+18h+Dst], eax ; Dst
		call	_memset

loc_6CB97012:				; CODE XREF: sub_6CB96F79+77j
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB96B3C
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+20h]
		mov	eax, [ebp+arg_0]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB964C1
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+28h]
		test	eax, eax
		jns	short loc_6CB9706B
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB964BC
		jmp	short loc_6CB9707A
; ---------------------------------------------------------------------------

loc_6CB9706B:				; CODE XREF: sub_6CB96F79+CFj
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+24h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+4], edx

loc_6CB9707A:				; CODE XREF: sub_6CB96F79+F0j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		neg	eax
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+18h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB970F9
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB970F9
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+30h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		cmp	edx, eax
		jbe	short loc_6CB970F9
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+arg_0]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+arg_0]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+Size],	ebx
		mov	[esp+18h+Val], ecx
		mov	[esp+18h+Dst], edx
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		lea	edx, [eax+400h]
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx

loc_6CB970F9:				; CODE XREF: sub_6CB96F79+11Fj
					; sub_6CB96F79+12Cj ...
		mov	eax, 0
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
sub_6CB96F79	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB97104	proc near		; CODE XREF: lzo1x_999_compress_internal+4B9p
					; lzo1x_999_compress_internal+536p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_8]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		cmp	[ebp+arg_8], 2
		jnz	short loc_6CB9716A
		sub	[ebp+arg_C], 1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		and	edx, 3
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		jmp	loc_6CB97364
; ---------------------------------------------------------------------------

loc_6CB9716A:				; CODE XREF: sub_6CB97104+27j
		cmp	[ebp+arg_8], 8
		ja	short loc_6CB971C3
		cmp	[ebp+arg_C], 800h
		ja	short loc_6CB971C3
		sub	[ebp+arg_C], 1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+arg_C]
		and	edx, 7
		shl	edx, 2
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+5Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+5Ch], edx
		jmp	loc_6CB97364
; ---------------------------------------------------------------------------

loc_6CB971C3:				; CODE XREF: sub_6CB97104+6Aj
					; sub_6CB97104+73j
		cmp	[ebp+arg_8], 3
		jnz	short loc_6CB9721D
		cmp	[ebp+arg_C], 0C00h
		ja	short loc_6CB9721D
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	eax, 3
		jbe	short loc_6CB9721D
		sub	[ebp+arg_C], 801h
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		and	edx, 3
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+58h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+58h], edx
		jmp	loc_6CB97364
; ---------------------------------------------------------------------------

loc_6CB9721D:				; CODE XREF: sub_6CB97104+C3j
					; sub_6CB97104+CCj ...
		cmp	[ebp+arg_C], 4000h
		ja	loc_6CB972BC
		sub	[ebp+arg_C], 1
		cmp	[ebp+arg_8], 21h
		ja	short loc_6CB9724A
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 2
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB97286
; ---------------------------------------------------------------------------

loc_6CB9724A:				; CODE XREF: sub_6CB97104+12Ej
		sub	[ebp+arg_8], 21h
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	20h
		jmp	short loc_6CB9726F
; ---------------------------------------------------------------------------

loc_6CB9725C:				; CODE XREF: sub_6CB97104+172j
		sub	[ebp+arg_8], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB9726F:				; CODE XREF: sub_6CB97104+156j
		cmp	[ebp+arg_8], 0FFh
		ja	short loc_6CB9725C
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl

loc_6CB97286:				; CODE XREF: sub_6CB97104+144j
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+60h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+60h], edx
		jmp	loc_6CB97364
; ---------------------------------------------------------------------------

loc_6CB972BC:				; CODE XREF: sub_6CB97104+120j
		sub	[ebp+arg_C], 4000h
		mov	eax, [ebp+arg_C]
		and	eax, 4000h
		shr	eax, 0Bh
		mov	[ebp+var_C], eax
		cmp	[ebp+arg_8], 9
		ja	short loc_6CB972F2
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+var_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, 2
		or	edx, ecx
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB97333
; ---------------------------------------------------------------------------

loc_6CB972F2:				; CODE XREF: sub_6CB97104+1D1j
		sub	[ebp+arg_8], 9
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+var_C]
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB9731C
; ---------------------------------------------------------------------------

loc_6CB97309:				; CODE XREF: sub_6CB97104+21Fj
		sub	[ebp+arg_8], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB9731C:				; CODE XREF: sub_6CB97104+203j
		cmp	[ebp+arg_8], 0FFh
		ja	short loc_6CB97309
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl

loc_6CB97333:				; CODE XREF: sub_6CB97104+1ECj
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+64h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+64h], edx

loc_6CB97364:				; CODE XREF: sub_6CB97104+61j
					; sub_6CB97104+BAj ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_8]
		mov	[eax+14h], edx
		mov	eax, [ebp+arg_4]
		leave
		retn
sub_6CB97104	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9737B	proc near		; CODE XREF: sub_6CB97487+27p
					; lzo1x_999_compress_internal+59Cp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+3Ch]
		mov	eax, [ebp+arg_C]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+28h]
		cmp	eax, [ebp+arg_4]
		jnz	short loc_6CB973BC
		cmp	[ebp+arg_C], 0EEh
		ja	short loc_6CB973BC
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		add	edx, 11h
		mov	[eax], dl
		jmp	loc_6CB97461
; ---------------------------------------------------------------------------

loc_6CB973BC:				; CODE XREF: sub_6CB9737B+20j
					; sub_6CB9737B+29j
		cmp	[ebp+arg_C], 3
		ja	short loc_6CB973E9
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_4]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+arg_C]
		or	eax, ecx
		mov	[edx], al
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+68h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+68h], edx
		jmp	short loc_6CB97461
; ---------------------------------------------------------------------------

loc_6CB973E9:				; CODE XREF: sub_6CB9737B+45j
		cmp	[ebp+arg_C], 12h
		ja	short loc_6CB97411
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		sub	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+6Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+6Ch], edx
		jmp	short loc_6CB97461
; ---------------------------------------------------------------------------

loc_6CB97411:				; CODE XREF: sub_6CB9737B+72j
		mov	eax, [ebp+arg_C]
		sub	eax, 12h
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB9743B
; ---------------------------------------------------------------------------

loc_6CB97428:				; CODE XREF: sub_6CB9737B+C7j
		sub	[ebp+var_4], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB9743B:				; CODE XREF: sub_6CB9737B+ABj
		cmp	[ebp+var_4], 0FFh
		ja	short loc_6CB97428
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+var_4]
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+70h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+70h], edx

loc_6CB97461:				; CODE XREF: sub_6CB9737B+3Cj
					; sub_6CB9737B+6Cj ...
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		lea	ecx, [edx+1]
		mov	[ebp+arg_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+arg_C], 1
		cmp	[ebp+arg_C], 0
		jnz	short loc_6CB97461
		mov	eax, [ebp+arg_4]
		leave
		retn
sub_6CB9737B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB97487	proc near		; CODE XREF: lzo1x_999_compress_internal+48Fp
					; lzo1x_999_compress_internal+50Cp

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		cmp	[ebp+arg_C], 0
		jz	short loc_6CB974CA
		mov	eax, [ebp+arg_C]
		mov	[esp+10h+var_4], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+10h+var_8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+10h+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+10h+var_10], eax
		call	sub_6CB9737B
		mov	[ebp+arg_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_10]
		mov	[eax+50h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_C]
		mov	[eax+4Ch], edx
		jmp	short loc_6CB974DE
; ---------------------------------------------------------------------------

loc_6CB974CA:				; CODE XREF: sub_6CB97487+Aj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+50h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4Ch], 0

loc_6CB974DE:				; CODE XREF: sub_6CB97487+41j
		mov	eax, [ebp+arg_4]
		leave
		retn
sub_6CB97487	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB974E3	proc near		; CODE XREF: lzo1x_999_compress_internal+2F0p
					; lzo1x_999_compress_internal+3D2p ...

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	[ebp+var_4], 4
		cmp	[ebp+arg_0], 1
		ja	short loc_6CB97500
		mov	eax, 0
		jmp	locret_6CB975D3
; ---------------------------------------------------------------------------

loc_6CB97500:				; CODE XREF: sub_6CB974E3+11j
		cmp	[ebp+arg_0], 2
		jnz	short loc_6CB9752F
		cmp	[ebp+arg_4], 400h
		ja	short loc_6CB97525
		cmp	[ebp+arg_8], 0
		jz	short loc_6CB97525
		cmp	[ebp+arg_8], 3
		ja	short loc_6CB97525
		mov	eax, 2
		jmp	locret_6CB975D3
; ---------------------------------------------------------------------------

loc_6CB97525:				; CODE XREF: sub_6CB974E3+2Aj
					; sub_6CB974E3+30j ...
		mov	eax, 0
		jmp	locret_6CB975D3
; ---------------------------------------------------------------------------

loc_6CB9752F:				; CODE XREF: sub_6CB974E3+21j
		cmp	[ebp+arg_0], 8
		ja	short loc_6CB97548
		cmp	[ebp+arg_4], 800h
		ja	short loc_6CB97548
		mov	eax, 2
		jmp	locret_6CB975D3
; ---------------------------------------------------------------------------

loc_6CB97548:				; CODE XREF: sub_6CB974E3+50j
					; sub_6CB974E3+59j
		cmp	[ebp+arg_0], 3
		jnz	short loc_6CB97564
		cmp	[ebp+arg_4], 0C00h
		ja	short loc_6CB97564
		cmp	[ebp+arg_8], 3
		jbe	short loc_6CB97564
		mov	eax, 2
		jmp	short locret_6CB975D3
; ---------------------------------------------------------------------------

loc_6CB97564:				; CODE XREF: sub_6CB974E3+69j
					; sub_6CB974E3+72j ...
		cmp	[ebp+arg_4], 4000h
		ja	short loc_6CB97599
		cmp	[ebp+arg_0], 21h
		ja	short loc_6CB9757A
		mov	eax, 3
		jmp	short locret_6CB975D3
; ---------------------------------------------------------------------------

loc_6CB9757A:				; CODE XREF: sub_6CB974E3+8Ej
		sub	[ebp+arg_0], 21h
		jmp	short loc_6CB9758B
; ---------------------------------------------------------------------------

loc_6CB97580:				; CODE XREF: sub_6CB974E3+AFj
		sub	[ebp+arg_0], 0FFh
		add	[ebp+var_4], 1

loc_6CB9758B:				; CODE XREF: sub_6CB974E3+9Bj
		cmp	[ebp+arg_0], 0FFh
		ja	short loc_6CB97580
		mov	eax, [ebp+var_4]
		jmp	short locret_6CB975D3
; ---------------------------------------------------------------------------

loc_6CB97599:				; CODE XREF: sub_6CB974E3+88j
		cmp	[ebp+arg_4], 0BFFFh
		ja	short loc_6CB975CE
		cmp	[ebp+arg_0], 9
		ja	short loc_6CB975AF
		mov	eax, 3
		jmp	short locret_6CB975D3
; ---------------------------------------------------------------------------

loc_6CB975AF:				; CODE XREF: sub_6CB974E3+C3j
		sub	[ebp+arg_0], 9
		jmp	short loc_6CB975C0
; ---------------------------------------------------------------------------

loc_6CB975B5:				; CODE XREF: sub_6CB974E3+E4j
		sub	[ebp+arg_0], 0FFh
		add	[ebp+var_4], 1

loc_6CB975C0:				; CODE XREF: sub_6CB974E3+D0j
		cmp	[ebp+arg_0], 0FFh
		ja	short loc_6CB975B5
		mov	eax, [ebp+var_4]
		jmp	short locret_6CB975D3
; ---------------------------------------------------------------------------

loc_6CB975CE:				; CODE XREF: sub_6CB974E3+BDj
		mov	eax, 0

locret_6CB975D3:			; CODE XREF: sub_6CB974E3+18j
					; sub_6CB974E3+3Dj ...
		leave
		retn
sub_6CB974E3	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB975D5	proc near		; CODE XREF: lzo1x_999_compress_internal+43Ep

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_4], 3
		ja	short loc_6CB975FE
		cmp	[ebp+arg_8], 3
		ja	short loc_6CB975F4
		mov	eax, 0
		jmp	short loc_6CB975F9
; ---------------------------------------------------------------------------

loc_6CB975F4:				; CODE XREF: sub_6CB975D5+16j
		mov	eax, 2

loc_6CB975F9:				; CODE XREF: sub_6CB975D5+1Dj
		add	[ebp+var_4], eax
		jmp	short loc_6CB97611
; ---------------------------------------------------------------------------

loc_6CB975FE:				; CODE XREF: sub_6CB975D5+10j
		cmp	[ebp+arg_4], 12h
		ja	short loc_6CB97611
		cmp	[ebp+arg_8], 12h
		setnbe	al
		movzx	eax, al
		add	[ebp+var_4], eax

loc_6CB97611:				; CODE XREF: sub_6CB975D5+27j
					; sub_6CB975D5+2Dj
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_10]
		sub	edx, eax
		mov	eax, edx
		add	eax, eax
		add	[ebp+var_4], eax
		cmp	[ebp+arg_14], 0
		jz	short loc_6CB97635
		mov	eax, [ebp+arg_14]
		mov	edx, [ebp+arg_0]
		sub	edx, eax
		mov	eax, edx
		add	eax, eax
		sub	[ebp+var_4], eax

loc_6CB97635:				; CODE XREF: sub_6CB975D5+4Fj
		mov	eax, [ebp+var_4]
		test	eax, eax
		jns	short loc_6CB97643
		mov	[ebp+var_4], 0

loc_6CB97643:				; CODE XREF: sub_6CB975D5+65j
		mov	eax, [ebp+var_4]
		leave
		retn
sub_6CB975D5	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB97648	proc near		; CODE XREF: lzo1x_999_compress_internal+2AFp
					; lzo1x_999_compress_internal+3ADp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 3
		ja	short loc_6CB9765A
		jmp	loc_6CB977C2
; ---------------------------------------------------------------------------

loc_6CB9765A:				; CODE XREF: sub_6CB97648+Bj
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 800h
		ja	short loc_6CB9766B
		jmp	loc_6CB977C2
; ---------------------------------------------------------------------------

loc_6CB9766B:				; CODE XREF: sub_6CB97648+1Cj
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 800h
		jbe	short loc_6CB976E0
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 3
		jbe	short loc_6CB976E0
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 9
		ja	short loc_6CB976E0
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB976E0
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		cmp	eax, 800h
		ja	short loc_6CB976E0
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_8]
		mov	[eax], edx
		jmp	loc_6CB977C2
; ---------------------------------------------------------------------------

loc_6CB976E0:				; CODE XREF: sub_6CB97648+2Dj
					; sub_6CB97648+37j ...
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 4000h
		jbe	short loc_6CB97752
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 9
		jbe	short loc_6CB97752
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 0Ah
		ja	short loc_6CB97752
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB97752
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		cmp	eax, 800h
		ja	short loc_6CB97752
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_8]
		mov	[eax], edx
		jmp	short loc_6CB977C2
; ---------------------------------------------------------------------------

loc_6CB97752:				; CODE XREF: sub_6CB97648+A2j
					; sub_6CB97648+ACj ...
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 4000h
		jbe	short loc_6CB977C2
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 9
		jbe	short loc_6CB977C2
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 22h
		ja	short loc_6CB977C2
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB977C2
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		cmp	eax, 4000h
		ja	short loc_6CB977C2
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_8]
		mov	[eax], edx

loc_6CB977C2:				; CODE XREF: sub_6CB97648+Dj
					; sub_6CB97648+1Ej ...
		pop	ebp
		retn
sub_6CB97648	endp

; Exported entry  85. lzo1x_999_compress_internal

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1x_999_compress_internal(int, int, int, int, int, void	*, size_t, int,	int, int, int, int, int, int)
		public lzo1x_999_compress_internal
lzo1x_999_compress_internal proc near	; CODE XREF: lzo1x_999_compress_level+D8p

var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_B8		= byte ptr -0B8h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h
arg_1C		= dword	ptr  24h
arg_20		= dword	ptr  28h
arg_24		= dword	ptr  2Ch
arg_28		= dword	ptr  30h
arg_2C		= dword	ptr  34h
arg_30		= dword	ptr  38h
arg_34		= dword	ptr  3Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0D4h
		lea	eax, [ebp+var_B8]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+arg_20]
		mov	[ebp+var_18], eax
		cmp	[ebp+arg_20], 0
		jns	short loc_6CB977F0
		mov	[ebp+var_18], 1

loc_6CB977F0:				; CODE XREF: lzo1x_999_compress_internal+23j
		cmp	[ebp+arg_24], 0
		jnz	short loc_6CB977FD
		mov	[ebp+arg_24], 20h

loc_6CB977FD:				; CODE XREF: lzo1x_999_compress_internal+30j
		cmp	[ebp+arg_28], 0
		jnz	short loc_6CB9780A
		mov	[ebp+arg_28], 20h

loc_6CB9780A:				; CODE XREF: lzo1x_999_compress_internal+3Dj
		cmp	[ebp+arg_2C], 0
		jnz	short loc_6CB97817
		mov	[ebp+arg_2C], 0

loc_6CB97817:				; CODE XREF: lzo1x_999_compress_internal+4Aj
		cmp	[ebp+arg_30], 0
		jnz	short loc_6CB97824
		mov	[ebp+arg_30], 800h

loc_6CB97824:				; CODE XREF: lzo1x_999_compress_internal+57j
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_0]
		mov	[eax+20h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+20h]
		mov	eax, [ebp+var_28]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	edx, eax
		mov	eax, [ebp+var_28]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_8]
		mov	[eax+28h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_1C]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax+64h], 0
		mov	eax, [ebp+var_28]
		mov	edx, [eax+64h]
		mov	eax, [ebp+var_28]
		mov	[eax+60h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+60h]
		mov	eax, [ebp+var_28]
		mov	[eax+5Ch], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+5Ch]
		mov	eax, [ebp+var_28]
		mov	[eax+58h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+58h]
		mov	eax, [ebp+var_28]
		mov	[eax+54h], edx
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax+70h], 0
		mov	eax, [ebp+var_28]
		mov	edx, [eax+70h]
		mov	eax, [ebp+var_28]
		mov	[eax+6Ch], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+6Ch]
		mov	eax, [ebp+var_28]
		mov	[eax+68h], edx
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_28]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_10], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax+50h], 0
		mov	eax, [ebp+var_28]
		mov	edx, [eax+50h]
		mov	eax, [ebp+var_28]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+arg_34]
		mov	[esp+0D8h+var_C8], eax ; int
		mov	eax, [ebp+arg_18]
		mov	[esp+0D8h+var_CC], eax ; size_t
		mov	eax, [ebp+arg_14]
		mov	[esp+0D8h+var_D0], eax ; void *
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax ; int
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax ; int
		call	sub_6CB96EAD
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 0
		jz	short loc_6CB97922
		mov	eax, [ebp+var_30]
		jmp	loc_6CB97DFB
; ---------------------------------------------------------------------------

loc_6CB97922:				; CODE XREF: lzo1x_999_compress_internal+154j
		cmp	[ebp+arg_30], 0
		jz	short loc_6CB97931
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx

loc_6CB97931:				; CODE XREF: lzo1x_999_compress_internal+162j
		cmp	[ebp+arg_2C], 0
		jz	short loc_6CB97940
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_2C]
		mov	[eax+10h], edx

loc_6CB97940:				; CODE XREF: lzo1x_999_compress_internal+171j
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], 0
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB96F79
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 0
		jz	short loc_6CB97973
		mov	eax, [ebp+var_30]
		jmp	loc_6CB97DFB
; ---------------------------------------------------------------------------

loc_6CB97973:				; CODE XREF: lzo1x_999_compress_internal+1A5j
		jmp	loc_6CB97D31
; ---------------------------------------------------------------------------

loc_6CB97978:				; CODE XREF: lzo1x_999_compress_internal+575j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_28]
		mov	[eax+34h], edx
		mov	eax, [ebp+var_28]
		mov	eax, [eax+8]
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_28]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_44], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB979AB
		mov	eax, [ebp+var_28]
		mov	eax, [eax+18h]
		mov	[ebp+var_10], eax

loc_6CB979AB:				; CODE XREF: lzo1x_999_compress_internal+1DCj
		mov	eax, [ebp+var_40]
		cmp	eax, 1
		jbe	short loc_6CB979EF
		mov	eax, [ebp+var_40]
		cmp	eax, 2
		jnz	short loc_6CB979D1
		mov	eax, [ebp+var_44]
		cmp	eax, 400h
		ja	short loc_6CB979EF
		cmp	[ebp+var_14], 0
		jz	short loc_6CB979EF
		cmp	[ebp+var_14], 3
		ja	short loc_6CB979EF

loc_6CB979D1:				; CODE XREF: lzo1x_999_compress_internal+1F5j
		mov	eax, [ebp+var_40]
		cmp	eax, 2
		jnz	short loc_6CB979E1
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+arg_8]
		jz	short loc_6CB979EF

loc_6CB979E1:				; CODE XREF: lzo1x_999_compress_internal+213j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+arg_8]
		jnz	short loc_6CB979F8
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB979F8

loc_6CB979EF:				; CODE XREF: lzo1x_999_compress_internal+1EDj
					; lzo1x_999_compress_internal+1FFj ...
		mov	[ebp+var_40], 0
		jmp	short loc_6CB97A17
; ---------------------------------------------------------------------------

loc_6CB979F8:				; CODE XREF: lzo1x_999_compress_internal+223j
					; lzo1x_999_compress_internal+229j
		mov	eax, [ebp+var_40]
		cmp	eax, 3
		jnz	short loc_6CB97A17
		mov	eax, [ebp+var_44]
		cmp	eax, 0C00h
		jbe	short loc_6CB97A17
		cmp	[ebp+var_14], 3
		jbe	short loc_6CB97A17
		mov	[ebp+var_40], 0

loc_6CB97A17:				; CODE XREF: lzo1x_999_compress_internal+232j
					; lzo1x_999_compress_internal+23Aj ...
		mov	eax, [ebp+var_40]
		test	eax, eax
		jnz	short loc_6CB97A55
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], 1
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB96F79
		mov	[ebp+var_30], eax
		jmp	loc_6CB97D31
; ---------------------------------------------------------------------------

loc_6CB97A55:				; CODE XREF: lzo1x_999_compress_internal+258j
		mov	eax, [ebp+var_2C]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_6CB97A78
		lea	eax, [ebp+var_44]
		mov	[esp+0D8h+var_D0], eax
		lea	eax, [ebp+var_40]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB97648

loc_6CB97A78:				; CODE XREF: lzo1x_999_compress_internal+299j
		mov	[ebp+var_1C], 0
		cmp	[ebp+var_18], 0
		jz	short loc_6CB97A8D
		mov	eax, [ebp+var_40]
		cmp	eax, [ebp+arg_28]
		jb	short loc_6CB97AA0

loc_6CB97A8D:				; CODE XREF: lzo1x_999_compress_internal+2BFj
		mov	[ebp+var_24], 0
		mov	[ebp+var_20], 0
		jmp	loc_6CB97C95
; ---------------------------------------------------------------------------

loc_6CB97AA0:				; CODE XREF: lzo1x_999_compress_internal+2C7j
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_40]
		mov	ecx, [ebp+var_14]
		mov	[esp+0D8h+var_D0], ecx
		mov	[esp+0D8h+var_D4], edx
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB974E3
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		cmp	edx, eax
		cmovbe	eax, edx
		mov	[ebp+var_20], eax
		jmp	loc_6CB97C95
; ---------------------------------------------------------------------------

loc_6CB97AD2:				; CODE XREF: lzo1x_999_compress_internal+4E4j
		mov	eax, [ebp+var_40]
		cmp	eax, [ebp+arg_24]
		jb	short loc_6CB97AEA
		mov	eax, [ebp+arg_30]
		shr	eax, 2
		mov	edx, eax
		mov	eax, [ebp+var_2C]
		mov	[eax+0Ch], edx
		jmp	short loc_6CB97AF3
; ---------------------------------------------------------------------------

loc_6CB97AEA:				; CODE XREF: lzo1x_999_compress_internal+314j
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx

loc_6CB97AF3:				; CODE XREF: lzo1x_999_compress_internal+324j
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], 1
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB96F79
		mov	[ebp+var_30], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_28]
		mov	edx, [eax+8]
		mov	eax, [ebp+var_40]
		cmp	edx, eax
		jnb	short loc_6CB97B2E
		jmp	loc_6CB97C95
; ---------------------------------------------------------------------------

loc_6CB97B2E:				; CODE XREF: lzo1x_999_compress_internal+363j
		mov	eax, [ebp+var_28]
		mov	edx, [eax+8]
		mov	eax, [ebp+var_40]
		cmp	edx, eax
		jnz	short loc_6CB97B4D
		mov	eax, [ebp+var_28]
		mov	edx, [eax+0Ch]
		mov	eax, [ebp+var_44]
		cmp	edx, eax
		jb	short loc_6CB97B4D
		jmp	loc_6CB97C95
; ---------------------------------------------------------------------------

loc_6CB97B4D:				; CODE XREF: lzo1x_999_compress_internal+375j
					; lzo1x_999_compress_internal+382j
		mov	eax, [ebp+var_2C]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_6CB97B76
		mov	eax, [ebp+var_28]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_28]
		add	eax, 8
		mov	[esp+0D8h+var_D0], edx
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB97648

loc_6CB97B76:				; CODE XREF: lzo1x_999_compress_internal+391j
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+eax]
		mov	eax, [ebp+var_28]
		mov	edx, [eax+0Ch]
		mov	eax, [ebp+var_28]
		mov	eax, [eax+8]
		mov	[esp+0D8h+var_D0], ecx
		mov	[esp+0D8h+var_D4], edx
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB974E3
		mov	[ebp+var_34], eax
		cmp	[ebp+var_34], 0
		jnz	short loc_6CB97BA9
		jmp	loc_6CB97C95
; ---------------------------------------------------------------------------

loc_6CB97BA9:				; CODE XREF: lzo1x_999_compress_internal+3DEj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+arg_8]
		jz	short loc_6CB97BCC
		mov	eax, [ebp+var_44]
		mov	edx, [ebp+var_14]
		mov	[esp+0D8h+var_D0], edx
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB974E3
		jmp	short loc_6CB97BD1
; ---------------------------------------------------------------------------

loc_6CB97BCC:				; CODE XREF: lzo1x_999_compress_internal+3EBj
		mov	eax, 0

loc_6CB97BD1:				; CODE XREF: lzo1x_999_compress_internal+406j
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+var_14]
		add	edx, eax
		mov	eax, [ebp+var_38]
		mov	[esp+0D8h+var_C4], eax
		mov	eax, [ebp+var_34]
		mov	[esp+0D8h+var_C8], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0D8h+var_CC], eax
		mov	[esp+0D8h+var_D0], edx
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB975D5
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+var_28]
		mov	eax, [eax+8]
		mov	ecx, [ebp+var_40]
		mov	edx, [ebp+var_3C]
		add	edx, ecx
		cmp	eax, edx
		jb	short loc_6CB97C95
		mov	eax, [ebp+var_28]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_28]
		mov	[eax+48h], edx
		cmp	[ebp+var_38], 0
		jz	short loc_6CB97C8A
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_C8], eax
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB97487
		mov	[ebp+var_C], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_44]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB97104
		mov	[ebp+var_C], eax
		jmp	loc_6CB97D31
; ---------------------------------------------------------------------------

loc_6CB97C8A:				; CODE XREF: lzo1x_999_compress_internal+46Bj
		mov	eax, [ebp+var_1C]
		add	[ebp+var_14], eax
		jmp	loc_6CB97D31
; ---------------------------------------------------------------------------

loc_6CB97C95:				; CODE XREF: lzo1x_999_compress_internal+2D7j
					; lzo1x_999_compress_internal+309j ...
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CB97CAE
		mov	eax, [ebp+var_28]
		mov	edx, [eax+4]
		mov	eax, [ebp+var_40]
		cmp	edx, eax
		ja	loc_6CB97AD2

loc_6CB97CAE:				; CODE XREF: lzo1x_999_compress_internal+4D7j
		mov	eax, [ebp+var_40]
		mov	[esp+0D8h+var_C8], eax
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB97487
		mov	[ebp+var_C], eax
		mov	[ebp+var_14], 0
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_40]
		mov	[esp+0D8h+var_CC], edx
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB97104
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_40]
		mov	[esp+0D8h+var_CC], edx
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB96F79
		mov	[ebp+var_30], eax

loc_6CB97D31:				; CODE XREF: lzo1x_999_compress_internal:loc_6CB97973j
					; lzo1x_999_compress_internal+28Cj ...
		mov	eax, [ebp+var_28]
		mov	eax, [eax+4]
		test	eax, eax
		jnz	loc_6CB97978
		cmp	[ebp+var_14], 0
		jz	short loc_6CB97D68
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9737B
		mov	[ebp+var_C], eax

loc_6CB97D68:				; CODE XREF: lzo1x_999_compress_internal+57Fj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	11h
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_28]
		mov	[eax+34h], edx
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_28]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB97DF6
		mov	eax, [ebp+var_28]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB97DF6
		mov	eax, [ebp+var_28]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+var_28]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+var_28]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+var_28]
		mov	edx, [edx+2Ch]
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], ebx
		mov	[esp+0D8h+var_D4], ecx
		mov	[esp+0D8h+var_D8], edx
		call	eax

loc_6CB97DF6:				; CODE XREF: lzo1x_999_compress_internal+5F3j
					; lzo1x_999_compress_internal+600j
		mov	eax, 0

loc_6CB97DFB:				; CODE XREF: lzo1x_999_compress_internal+159j
					; lzo1x_999_compress_internal+1AAj
		add	esp, 0D4h
		pop	ebx
		pop	ebp
		retn
lzo1x_999_compress_internal endp

; Exported entry  86. lzo1x_999_compress_level

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1x_999_compress_level(int, int, int, int, int,	void *,	size_t,	int, int)
		public lzo1x_999_compress_level
lzo1x_999_compress_level proc near	; CODE XREF: lzo1x_999_compress_dict+46p
					; lzo1x_999_compress+48p

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h
arg_1C		= dword	ptr  24h
arg_20		= dword	ptr  28h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		cmp	[ebp+arg_20], 0
		jle	short loc_6CB97E19
		cmp	[ebp+arg_20], 9
		jle	short loc_6CB97E23

loc_6CB97E19:				; CODE XREF: lzo1x_999_compress_level+Dj
		mov	eax, 0FFFFFFFFh
		jmp	loc_6CB97EE1
; ---------------------------------------------------------------------------

loc_6CB97E23:				; CODE XREF: lzo1x_999_compress_level+13j
		sub	[ebp+arg_20], 1
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA7130
		mov	edi, [eax+4]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA7130
		mov	esi, [eax]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA7120
		mov	ebx, [eax+8]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA7120
		mov	ecx, [eax+4]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA7120
		mov	eax, [eax]
		mov	[esp+58h+var_24], edi ;	int
		mov	[esp+58h+var_28], esi ;	int
		mov	[esp+58h+var_2C], 0 ; int
		mov	[esp+58h+var_30], ebx ;	int
		mov	[esp+58h+var_34], ecx ;	int
		mov	[esp+58h+var_38], eax ;	int
		mov	eax, [ebp+arg_1C]
		mov	[esp+58h+var_3C], eax ;	int
		mov	eax, [ebp+arg_18]
		mov	[esp+58h+var_40], eax ;	size_t
		mov	eax, [ebp+arg_14]
		mov	[esp+58h+var_44], eax ;	void *
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+var_48], eax ;	int
		mov	eax, [ebp+arg_C]
		mov	[esp+58h+var_4C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+58h+var_50], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+58h+var_54], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+58h+var_58], eax ;	int
		call	lzo1x_999_compress_internal

loc_6CB97EE1:				; CODE XREF: lzo1x_999_compress_level+1Aj
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
lzo1x_999_compress_level endp

; Exported entry  84. lzo1x_999_compress_dict

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1x_999_compress_dict(int, int,	int, int, int, void *, size_t)
		public lzo1x_999_compress_dict
lzo1x_999_compress_dict	proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	[esp+38h+var_18], 8 ; int
		mov	[esp+38h+var_1C], 0 ; int
		mov	eax, [ebp+arg_18]
		mov	[esp+38h+var_20], eax ;	size_t
		mov	eax, [ebp+arg_14]
		mov	[esp+38h+var_24], eax ;	void *
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax ;	int
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax ;	int
		call	lzo1x_999_compress_level
		leave
		retn
lzo1x_999_compress_dict	endp

; Exported entry  83. lzo1x_999_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1x_999_compress
lzo1x_999_compress proc	near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	[esp+38h+var_18], 8 ; int
		mov	[esp+38h+var_1C], 0 ; int
		mov	[esp+38h+var_20], 0 ; size_t
		mov	[esp+38h+var_24], 0 ; void *
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax ;	int
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax ;	int
		call	lzo1x_999_compress_level
		leave
		retn
lzo1x_999_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  87. lzo1x_decompress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1x_decompress
lzo1x_decompress proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CB98008
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 3
		ja	short loc_6CB97FE2
		jmp	loc_6CB983F1
; ---------------------------------------------------------------------------

loc_6CB97FE2:				; CODE XREF: lzo1x_decompress+49j
					; lzo1x_decompress+6Fj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB97FE2
		jmp	loc_6CB980E4
; ---------------------------------------------------------------------------

loc_6CB98008:				; CODE XREF: lzo1x_decompress+2Ej
					; lzo1x_decompress+45Aj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CB98025
		jmp	loc_6CB9816F
; ---------------------------------------------------------------------------

loc_6CB98025:				; CODE XREF: lzo1x_decompress+8Cj
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9805C
		jmp	short loc_6CB98038
; ---------------------------------------------------------------------------

loc_6CB9802D:				; CODE XREF: lzo1x_decompress+AEj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CB98038:				; CODE XREF: lzo1x_decompress+99j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9802D
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 0Fh
		mov	[ebp+var_C], eax

loc_6CB9805C:				; CODE XREF: lzo1x_decompress+97j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jz	short loc_6CB980E4
		cmp	[ebp+var_C], 3
		jbe	short loc_6CB980C3

loc_6CB9807E:				; CODE XREF: lzo1x_decompress+106j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB9807E
		cmp	[ebp+var_C], 0
		jz	short loc_6CB980E4

loc_6CB980A0:				; CODE XREF: lzo1x_decompress+12Dj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB980A0
		jmp	short loc_6CB980E4
; ---------------------------------------------------------------------------

loc_6CB980C3:				; CODE XREF: lzo1x_decompress+EAj
					; lzo1x_decompress+150j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB980C3

loc_6CB980E4:				; CODE XREF: lzo1x_decompress+71j
					; lzo1x_decompress+E4j	...
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CB980FE
		jmp	short loc_6CB9816F
; ---------------------------------------------------------------------------

loc_6CB980FE:				; CODE XREF: lzo1x_decompress+168j
		mov	eax, [ebp+var_4]
		sub	eax, 801h
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB983D3
; ---------------------------------------------------------------------------

loc_6CB9816F:				; CODE XREF: lzo1x_decompress+8Ej
					; lzo1x_decompress+16Aj ...
		cmp	[ebp+var_C], 3Fh
		jbe	short loc_6CB981B4
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		and	eax, 7
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 3
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_C], eax
		jmp	loc_6CB98384
; ---------------------------------------------------------------------------

loc_6CB981B4:				; CODE XREF: lzo1x_decompress+1E1j
		cmp	[ebp+var_C], 1Fh
		jbe	short loc_6CB98219
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB981F5
		jmp	short loc_6CB981D1
; ---------------------------------------------------------------------------

loc_6CB981C6:				; CODE XREF: lzo1x_decompress+247j
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CB981D1:				; CODE XREF: lzo1x_decompress+232j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB981C6
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CB981F5:				; CODE XREF: lzo1x_decompress+230j
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		movzx	eax, word ptr [eax]
		shr	ax, 2
		movzx	eax, ax
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		jmp	loc_6CB98314
; ---------------------------------------------------------------------------

loc_6CB98219:				; CODE XREF: lzo1x_decompress+226j
		cmp	[ebp+var_C], 0Fh
		jbe	loc_6CB982BC
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		and	eax, 8
		shl	eax, 0Bh
		neg	eax
		add	[ebp+var_10], eax
		and	[ebp+var_C], 7
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB98272
		jmp	short loc_6CB9824E
; ---------------------------------------------------------------------------

loc_6CB98243:				; CODE XREF: lzo1x_decompress+2C4j
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CB9824E:				; CODE XREF: lzo1x_decompress+2AFj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB98243
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 7
		mov	[ebp+var_C], eax

loc_6CB98272:				; CODE XREF: lzo1x_decompress+2ADj
		mov	eax, [ebp+var_8]
		movzx	eax, word ptr [eax]
		shr	ax, 2
		movzx	eax, ax
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CB982B3
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jz	loc_6CB9846F
		jmp	loc_6CB98459
; ---------------------------------------------------------------------------

loc_6CB982B3:				; CODE XREF: lzo1x_decompress+2FCj
		sub	[ebp+var_10], 4000h
		jmp	short loc_6CB98314
; ---------------------------------------------------------------------------

loc_6CB982BC:				; CODE XREF: lzo1x_decompress+28Bj
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB983D3
; ---------------------------------------------------------------------------

loc_6CB98314:				; CODE XREF: lzo1x_decompress+282j
					; lzo1x_decompress+328j
		cmp	[ebp+var_C], 5
		jbe	short loc_6CB98384
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CB98384
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 2

loc_6CB9833F:				; CODE XREF: lzo1x_decompress+3C7j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB9833F
		cmp	[ebp+var_C], 0
		jz	short loc_6CB98382

loc_6CB98361:				; CODE XREF: lzo1x_decompress+3EEj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB98361

loc_6CB98382:				; CODE XREF: lzo1x_decompress+3CDj
		jmp	short loc_6CB983D3
; ---------------------------------------------------------------------------

loc_6CB98384:				; CODE XREF: lzo1x_decompress+21Dj
					; lzo1x_decompress+386j ...
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB983B2:				; CODE XREF: lzo1x_decompress+43Fj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB983B2

loc_6CB983D3:				; CODE XREF: lzo1x_decompress+1D8j
					; lzo1x_decompress+37Dj ...
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB983F1
		nop
		jmp	loc_6CB98008
; ---------------------------------------------------------------------------

loc_6CB983F1:				; CODE XREF: lzo1x_decompress+4Bj
					; lzo1x_decompress+457j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 1
		jbe	short loc_6CB98442
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 2
		jbe	short loc_6CB98442
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB98442:				; CODE XREF: lzo1x_decompress+47Aj
					; lzo1x_decompress+497j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		jmp	loc_6CB9816F
; ---------------------------------------------------------------------------

loc_6CB98459:				; CODE XREF: lzo1x_decompress+31Cj
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CB98468
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CB98474
; ---------------------------------------------------------------------------

loc_6CB98468:				; CODE XREF: lzo1x_decompress+4CDj
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB98474
; ---------------------------------------------------------------------------

loc_6CB9846F:				; CODE XREF: lzo1x_decompress+316j
		mov	eax, 0

locret_6CB98474:			; CODE XREF: lzo1x_decompress+4D4j
					; lzo1x_decompress+4DBj
		leave
		retn
lzo1x_decompress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  93. lzo1x_decompress_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1x_decompress_safe
lzo1x_decompress_safe proc near		; CODE XREF: lzo1x_decompress_asm_safe+28p
					; lzo1x_decompress_asm_fast_safe+28p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB984C4
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB984C4:				; CODE XREF: lzo1x_decompress_safe+3Bj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CB98541
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 3
		ja	short loc_6CB984EE
		jmp	loc_6CB98AC3
; ---------------------------------------------------------------------------

loc_6CB984EE:				; CODE XREF: lzo1x_decompress_safe+65j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB98502
		jmp	loc_6CB98B8D
; ---------------------------------------------------------------------------

loc_6CB98502:				; CODE XREF: lzo1x_decompress_safe+79j
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB9851B
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB9851B:				; CODE XREF: lzo1x_decompress_safe+92j
					; lzo1x_decompress_safe+B8j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9851B
		jmp	loc_6CB98680
; ---------------------------------------------------------------------------

loc_6CB98541:				; CODE XREF: lzo1x_decompress_safe+4Aj
					; lzo1x_decompress_safe+63Cj
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CB98555
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB98555:				; CODE XREF: lzo1x_decompress_safe+CCj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CB98572
		jmp	loc_6CB9873E
; ---------------------------------------------------------------------------

loc_6CB98572:				; CODE XREF: lzo1x_decompress_safe+E9j
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB985C6
		jmp	short loc_6CB985A2
; ---------------------------------------------------------------------------

loc_6CB9857A:				; CODE XREF: lzo1x_decompress_safe+128j
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CB98593
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB98593:				; CODE XREF: lzo1x_decompress_safe+10Aj
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB985A2
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB985A2:				; CODE XREF: lzo1x_decompress_safe+F6j
					; lzo1x_decompress_safe+119j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9857A
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 0Fh
		mov	[ebp+var_C], eax

loc_6CB985C6:				; CODE XREF: lzo1x_decompress_safe+F4j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB985DF
		jmp	loc_6CB98B8D
; ---------------------------------------------------------------------------

loc_6CB985DF:				; CODE XREF: lzo1x_decompress_safe+156j
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 6
		cmp	eax, edx
		jnb	short loc_6CB985F8
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB985F8:				; CODE XREF: lzo1x_decompress_safe+16Fj
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jz	short loc_6CB98680
		cmp	[ebp+var_C], 3
		jbe	short loc_6CB9865F

loc_6CB9861A:				; CODE XREF: lzo1x_decompress_safe+1B2j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB9861A
		cmp	[ebp+var_C], 0
		jz	short loc_6CB98680

loc_6CB9863C:				; CODE XREF: lzo1x_decompress_safe+1D9j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9863C
		jmp	short loc_6CB98680
; ---------------------------------------------------------------------------

loc_6CB9865F:				; CODE XREF: lzo1x_decompress_safe+196j
					; lzo1x_decompress_safe+1FCj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9865F

loc_6CB98680:				; CODE XREF: lzo1x_decompress_safe+BAj
					; lzo1x_decompress_safe+190j ...
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CB9869D
		jmp	loc_6CB9873E
; ---------------------------------------------------------------------------

loc_6CB9869D:				; CODE XREF: lzo1x_decompress_safe+214j
		mov	eax, [ebp+var_4]
		sub	eax, 801h
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB98BA5
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB98BA5
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CB986FA
		jmp	loc_6CB98B8D
; ---------------------------------------------------------------------------

loc_6CB986FA:				; CODE XREF: lzo1x_decompress_safe+271j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB98AA5
; ---------------------------------------------------------------------------

loc_6CB9873E:				; CODE XREF: lzo1x_decompress_safe+EBj
					; lzo1x_decompress_safe+216j ...
		cmp	[ebp+var_C], 3Fh
		jbe	short loc_6CB987B8
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		and	eax, 7
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 3
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB98BA5
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB98BA5
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CB987B3
		jmp	loc_6CB98B8D
; ---------------------------------------------------------------------------

loc_6CB987B3:				; CODE XREF: lzo1x_decompress_safe+32Aj
		jmp	loc_6CB98A56
; ---------------------------------------------------------------------------

loc_6CB987B8:				; CODE XREF: lzo1x_decompress_safe+2C0j
		cmp	[ebp+var_C], 1Fh
		jbe	loc_6CB98852
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9882E
		jmp	short loc_6CB987F6
; ---------------------------------------------------------------------------

loc_6CB987CE:				; CODE XREF: lzo1x_decompress_safe+37Cj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CB987E7
		jmp	loc_6CB98B8D
; ---------------------------------------------------------------------------

loc_6CB987E7:				; CODE XREF: lzo1x_decompress_safe+35Ej
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB987F6
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB987F6:				; CODE XREF: lzo1x_decompress_safe+34Aj
					; lzo1x_decompress_safe+36Dj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB987CE
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB9882E
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB9882E:				; CODE XREF: lzo1x_decompress_safe+348j
					; lzo1x_decompress_safe+3A5j
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		movzx	eax, word ptr [eax]
		shr	ax, 2
		movzx	eax, ax
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		jmp	loc_6CB989B1
; ---------------------------------------------------------------------------

loc_6CB98852:				; CODE XREF: lzo1x_decompress_safe+33Aj
		cmp	[ebp+var_C], 0Fh
		jbe	loc_6CB98929
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		and	eax, 8
		shl	eax, 0Bh
		neg	eax
		add	[ebp+var_10], eax
		and	[ebp+var_C], 7
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB988DC
		jmp	short loc_6CB988A4
; ---------------------------------------------------------------------------

loc_6CB9887C:				; CODE XREF: lzo1x_decompress_safe+42Aj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CB98895
		jmp	loc_6CB98B8D
; ---------------------------------------------------------------------------

loc_6CB98895:				; CODE XREF: lzo1x_decompress_safe+40Cj
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB988A4
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB988A4:				; CODE XREF: lzo1x_decompress_safe+3F8j
					; lzo1x_decompress_safe+41Bj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9887C
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 7
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB988DC
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB988DC:				; CODE XREF: lzo1x_decompress_safe+3F6j
					; lzo1x_decompress_safe+453j
		mov	eax, [ebp+var_8]
		movzx	eax, word ptr [eax]
		shr	ax, 2
		movzx	eax, ax
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CB9891D
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jz	loc_6CB98B6E
		jmp	loc_6CB98B58
; ---------------------------------------------------------------------------

loc_6CB9891D:				; CODE XREF: lzo1x_decompress_safe+476j
		sub	[ebp+var_10], 4000h
		jmp	loc_6CB989B1
; ---------------------------------------------------------------------------

loc_6CB98929:				; CODE XREF: lzo1x_decompress_safe+3D4j
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB98BA5
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB98BA5
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB98984
		jmp	loc_6CB98B8D
; ---------------------------------------------------------------------------

loc_6CB98984:				; CODE XREF: lzo1x_decompress_safe+4FBj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB98AA5
; ---------------------------------------------------------------------------

loc_6CB989B1:				; CODE XREF: lzo1x_decompress_safe+3CBj
					; lzo1x_decompress_safe+4A2j
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB98BA5
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB98BA5
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CB989E6
		jmp	loc_6CB98B8D
; ---------------------------------------------------------------------------

loc_6CB989E6:				; CODE XREF: lzo1x_decompress_safe+55Dj
		cmp	[ebp+var_C], 5
		jbe	short loc_6CB98A56
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CB98A56
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 2

loc_6CB98A11:				; CODE XREF: lzo1x_decompress_safe+5A9j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB98A11
		cmp	[ebp+var_C], 0
		jz	short loc_6CB98A54

loc_6CB98A33:				; CODE XREF: lzo1x_decompress_safe+5D0j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB98A33

loc_6CB98A54:				; CODE XREF: lzo1x_decompress_safe+5AFj
		jmp	short loc_6CB98AA5
; ---------------------------------------------------------------------------

loc_6CB98A56:				; CODE XREF: lzo1x_decompress_safe:loc_6CB987B3j
					; lzo1x_decompress_safe+568j ...
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB98A84:				; CODE XREF: lzo1x_decompress_safe+621j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB98A84

loc_6CB98AA5:				; CODE XREF: lzo1x_decompress_safe+2B7j
					; lzo1x_decompress_safe+52Aj ...
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB98AC3
		nop
		jmp	loc_6CB98541
; ---------------------------------------------------------------------------

loc_6CB98AC3:				; CODE XREF: lzo1x_decompress_safe+67j
					; lzo1x_decompress_safe+639j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB98AD7
		jmp	loc_6CB98B8D
; ---------------------------------------------------------------------------

loc_6CB98AD7:				; CODE XREF: lzo1x_decompress_safe+64Ej
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB98AF0
		jmp	loc_6CB98B75
; ---------------------------------------------------------------------------

loc_6CB98AF0:				; CODE XREF: lzo1x_decompress_safe+667j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 1
		jbe	short loc_6CB98B41
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 2
		jbe	short loc_6CB98B41
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB98B41:				; CODE XREF: lzo1x_decompress_safe+689j
					; lzo1x_decompress_safe+6A6j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		jmp	loc_6CB9873E
; ---------------------------------------------------------------------------

loc_6CB98B58:				; CODE XREF: lzo1x_decompress_safe+496j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CB98B67
		mov	eax, 0FFFFFFF8h
		jmp	short loc_6CB98B73
; ---------------------------------------------------------------------------

loc_6CB98B67:				; CODE XREF: lzo1x_decompress_safe+6DCj
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB98BBB
; ---------------------------------------------------------------------------

loc_6CB98B6E:				; CODE XREF: lzo1x_decompress_safe+490j
		mov	eax, 0

loc_6CB98B73:				; CODE XREF: lzo1x_decompress_safe+6E3j
		jmp	short locret_6CB98BBB
; ---------------------------------------------------------------------------

loc_6CB98B75:				; CODE XREF: lzo1x_decompress_safe+3Dj
					; lzo1x_decompress_safe+94j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB98BBB
; ---------------------------------------------------------------------------

loc_6CB98B8D:				; CODE XREF: lzo1x_decompress_safe+7Bj
					; lzo1x_decompress_safe+158j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFBh
		jmp	short locret_6CB98BBB
; ---------------------------------------------------------------------------

loc_6CB98BA5:				; CODE XREF: lzo1x_decompress_safe+250j
					; lzo1x_decompress_safe+25Ej ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFAh

locret_6CB98BBB:			; CODE XREF: lzo1x_decompress_safe+6EAj
					; lzo1x_decompress_safe:loc_6CB98B73j ...
		leave
		retn
lzo1x_decompress_safe endp

; Exported entry  91. lzo1x_decompress_asm_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1x_decompress_asm_safe
lzo1x_decompress_asm_safe proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		mov	eax, [ebp+arg_10]
		mov	[esp+14h+var_4], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+14h+var_8], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+14h+var_C], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+14h+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+14h+var_14], eax
		call	lzo1x_decompress_safe
		leave
		retn
lzo1x_decompress_asm_safe endp

; Exported entry  90. lzo1x_decompress_asm_fast_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1x_decompress_asm_fast_safe
lzo1x_decompress_asm_fast_safe proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		mov	eax, [ebp+arg_10]
		mov	[esp+14h+var_4], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+14h+var_8], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+14h+var_C], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+14h+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+14h+var_14], eax
		call	lzo1x_decompress_safe
		leave
		retn
lzo1x_decompress_asm_fast_safe endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry  92. lzo1x_decompress_dict_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1x_decompress_dict_safe
lzo1x_decompress_dict_safe proc	near

Dst		= dword	ptr -58h
Src		= dword	ptr -54h
Size		= dword	ptr -50h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_3C], eax
		cmp	[ebp+arg_14], 0
		jz	short loc_6CB98C72
		cmp	[ebp+arg_18], 0BFFFh
		jbe	short loc_6CB98C65
		mov	eax, [ebp+arg_18]
		sub	eax, 0BFFFh
		add	[ebp+arg_14], eax
		mov	[ebp+arg_18], 0BFFFh

loc_6CB98C65:				; CODE XREF: lzo1x_decompress_dict_safe+2Bj
		mov	eax, [ebp+arg_18]
		mov	edx, [ebp+arg_14]
		add	eax, edx
		mov	[ebp+var_1C], eax
		jmp	short loc_6CB98C80
; ---------------------------------------------------------------------------

loc_6CB98C72:				; CODE XREF: lzo1x_decompress_dict_safe+22j
		mov	[ebp+arg_18], 0
		mov	[ebp+var_1C], 0

loc_6CB98C80:				; CODE XREF: lzo1x_decompress_dict_safe+4Aj
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CB98CA4
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB98CA4:				; CODE XREF: lzo1x_decompress_dict_safe+77j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CB98D21
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 3
		ja	short loc_6CB98CCE
		jmp	loc_6CB9941E
; ---------------------------------------------------------------------------

loc_6CB98CCE:				; CODE XREF: lzo1x_decompress_dict_safe+A1j
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CB98CE2
		jmp	loc_6CB994E8
; ---------------------------------------------------------------------------

loc_6CB98CE2:				; CODE XREF: lzo1x_decompress_dict_safe+B5j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB98CFB
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB98CFB:				; CODE XREF: lzo1x_decompress_dict_safe+CEj
					; lzo1x_decompress_dict_safe+F4j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB98CFB
		jmp	loc_6CB98E60
; ---------------------------------------------------------------------------

loc_6CB98D21:				; CODE XREF: lzo1x_decompress_dict_safe+86j
					; lzo1x_decompress_dict_safe+7F3j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CB98D35
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB98D35:				; CODE XREF: lzo1x_decompress_dict_safe+108j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0Fh
		jbe	short loc_6CB98D52
		jmp	loc_6CB98FCF
; ---------------------------------------------------------------------------

loc_6CB98D52:				; CODE XREF: lzo1x_decompress_dict_safe+125j
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB98DA6
		jmp	short loc_6CB98D82
; ---------------------------------------------------------------------------

loc_6CB98D5A:				; CODE XREF: lzo1x_decompress_dict_safe+164j
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1
		cmp	[ebp+var_14], 0FFFFFE01h
		jbe	short loc_6CB98D73
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB98D73:				; CODE XREF: lzo1x_decompress_dict_safe+146j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CB98D82
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB98D82:				; CODE XREF: lzo1x_decompress_dict_safe+132j
					; lzo1x_decompress_dict_safe+155j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB98D5A
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_14]
		add	eax, edx
		add	eax, 0Fh
		mov	[ebp+var_14], eax

loc_6CB98DA6:				; CODE XREF: lzo1x_decompress_dict_safe+130j
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB98DBF
		jmp	loc_6CB994E8
; ---------------------------------------------------------------------------

loc_6CB98DBF:				; CODE XREF: lzo1x_decompress_dict_safe+192j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 6
		cmp	eax, edx
		jnb	short loc_6CB98DD8
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB98DD8:				; CODE XREF: lzo1x_decompress_dict_safe+1ABj
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_C]
		mov	[eax], edx
		add	[ebp+var_C], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jz	short loc_6CB98E60
		cmp	[ebp+var_14], 3
		jbe	short loc_6CB98E3F

loc_6CB98DFA:				; CODE XREF: lzo1x_decompress_dict_safe+1EEj
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_C]
		mov	[eax], edx
		add	[ebp+var_C], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_14], 4
		cmp	[ebp+var_14], 3
		ja	short loc_6CB98DFA
		cmp	[ebp+var_14], 0
		jz	short loc_6CB98E60

loc_6CB98E1C:				; CODE XREF: lzo1x_decompress_dict_safe+215j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB98E1C
		jmp	short loc_6CB98E60
; ---------------------------------------------------------------------------

loc_6CB98E3F:				; CODE XREF: lzo1x_decompress_dict_safe+1D2j
					; lzo1x_decompress_dict_safe+238j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB98E3F

loc_6CB98E60:				; CODE XREF: lzo1x_decompress_dict_safe+F6j
					; lzo1x_decompress_dict_safe+1CCj ...
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0Fh
		jbe	short loc_6CB98E7D
		jmp	loc_6CB98FCF
; ---------------------------------------------------------------------------

loc_6CB98E7D:				; CODE XREF: lzo1x_decompress_dict_safe+250j
		mov	eax, [ebp+var_14]
		shr	eax, 2
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		add	eax, ecx
		add	eax, 801h
		mov	[ebp+var_18], eax
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CB98EB5
		jmp	loc_6CB994E8
; ---------------------------------------------------------------------------

loc_6CB98EB5:				; CODE XREF: lzo1x_decompress_dict_safe+288j
		mov	[ebp+var_14], 3
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_18]
		jb	short loc_6CB98F29
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_14]
		jb	short loc_6CB98F03
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_20]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	short loc_6CB98F24
; ---------------------------------------------------------------------------

loc_6CB98F03:				; CODE XREF: lzo1x_decompress_dict_safe+2BAj
					; lzo1x_decompress_dict_safe+2FCj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_20]
		lea	ecx, [edx+1]
		mov	[ebp+var_20], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB98F03

loc_6CB98F24:				; CODE XREF: lzo1x_decompress_dict_safe+2DBj
		jmp	loc_6CB99400
; ---------------------------------------------------------------------------

loc_6CB98F29:				; CODE XREF: lzo1x_decompress_dict_safe+2A3j
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+arg_18]
		jbe	short loc_6CB98F43
		jmp	loc_6CB99500
; ---------------------------------------------------------------------------

loc_6CB98F43:				; CODE XREF: lzo1x_decompress_dict_safe+316j
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB98FAB
		mov	eax, [ebp+var_18]
		sub	[ebp+var_14], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_24]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_18]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_24], eax

loc_6CB98F85:				; CODE XREF: lzo1x_decompress_dict_safe+37Ej
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_24]
		lea	ecx, [edx+1]
		mov	[ebp+var_24], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB98F85
		jmp	loc_6CB99400
; ---------------------------------------------------------------------------

loc_6CB98FAB:				; CODE XREF: lzo1x_decompress_dict_safe+332j
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_24]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	loc_6CB99400
; ---------------------------------------------------------------------------

loc_6CB98FCF:				; CODE XREF: lzo1x_decompress_dict_safe+127j
					; lzo1x_decompress_dict_safe+252j ...
		cmp	[ebp+var_14], 3Fh
		jbe	short loc_6CB9900B
		mov	eax, [ebp+var_14]
		shr	eax, 2
		and	eax, 7
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 3
		add	eax, ecx
		add	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_14], eax
		jmp	loc_6CB992D8
; ---------------------------------------------------------------------------

loc_6CB9900B:				; CODE XREF: lzo1x_decompress_dict_safe+3ADj
		cmp	[ebp+var_14], 1Fh
		jbe	loc_6CB990AD
		and	[ebp+var_14], 1Fh
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB99081
		jmp	short loc_6CB99049
; ---------------------------------------------------------------------------

loc_6CB99021:				; CODE XREF: lzo1x_decompress_dict_safe+42Bj
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1
		cmp	[ebp+var_14], 0FFFFFE01h
		jbe	short loc_6CB9903A
		jmp	loc_6CB994E8
; ---------------------------------------------------------------------------

loc_6CB9903A:				; CODE XREF: lzo1x_decompress_dict_safe+40Dj
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CB99049
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB99049:				; CODE XREF: lzo1x_decompress_dict_safe+3F9j
					; lzo1x_decompress_dict_safe+41Cj
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB99021
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_14]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_14], eax
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB99081
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB99081:				; CODE XREF: lzo1x_decompress_dict_safe+3F7j
					; lzo1x_decompress_dict_safe+454j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		lea	edx, [eax+1]
		mov	eax, [ebp+var_10]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		add	eax, edx
		mov	[ebp+var_18], eax
		add	[ebp+var_10], 2
		jmp	loc_6CB992D8
; ---------------------------------------------------------------------------

loc_6CB990AD:				; CODE XREF: lzo1x_decompress_dict_safe+3E9j
		cmp	[ebp+var_14], 0Fh
		jbe	loc_6CB99188
		mov	eax, [ebp+var_14]
		and	eax, 8
		shl	eax, 0Bh
		mov	[ebp+var_18], eax
		and	[ebp+var_14], 7
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9912F
		jmp	short loc_6CB990F7
; ---------------------------------------------------------------------------

loc_6CB990CF:				; CODE XREF: lzo1x_decompress_dict_safe+4D9j
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1
		cmp	[ebp+var_14], 0FFFFFE01h
		jbe	short loc_6CB990E8
		jmp	loc_6CB994E8
; ---------------------------------------------------------------------------

loc_6CB990E8:				; CODE XREF: lzo1x_decompress_dict_safe+4BBj
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CB990F7
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB990F7:				; CODE XREF: lzo1x_decompress_dict_safe+4A7j
					; lzo1x_decompress_dict_safe+4CAj
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB990CF
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_14]
		add	eax, edx
		add	eax, 7
		mov	[ebp+var_14], eax
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB9912F
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB9912F:				; CODE XREF: lzo1x_decompress_dict_safe+4A5j
					; lzo1x_decompress_dict_safe+502j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		mov	edx, [ebp+var_10]
		add	edx, 1
		movzx	edx, byte ptr [edx]
		movzx	edx, dl
		shl	edx, 6
		add	eax, edx
		add	[ebp+var_18], eax
		add	[ebp+var_10], 2
		cmp	[ebp+var_18], 0
		jnz	short loc_6CB9917C
		nop
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_38]
		jz	loc_6CB994C9
		jmp	loc_6CB994B3
; ---------------------------------------------------------------------------

loc_6CB9917C:				; CODE XREF: lzo1x_decompress_dict_safe+531j
		add	[ebp+var_18], 4000h
		jmp	loc_6CB992D8
; ---------------------------------------------------------------------------

loc_6CB99188:				; CODE XREF: lzo1x_decompress_dict_safe+48Bj
		mov	eax, [ebp+var_14]
		shr	eax, 2
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		add	eax, ecx
		add	eax, 1
		mov	[ebp+var_18], eax
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB991BE
		jmp	loc_6CB994E8
; ---------------------------------------------------------------------------

loc_6CB991BE:				; CODE XREF: lzo1x_decompress_dict_safe+591j
		mov	[ebp+var_14], 2
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_18]
		jb	short loc_6CB99232
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_14]
		jb	short loc_6CB9920C
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_28]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	short loc_6CB9922D
; ---------------------------------------------------------------------------

loc_6CB9920C:				; CODE XREF: lzo1x_decompress_dict_safe+5C3j
					; lzo1x_decompress_dict_safe+605j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_28]
		lea	ecx, [edx+1]
		mov	[ebp+var_28], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9920C

loc_6CB9922D:				; CODE XREF: lzo1x_decompress_dict_safe+5E4j
		jmp	loc_6CB99400
; ---------------------------------------------------------------------------

loc_6CB99232:				; CODE XREF: lzo1x_decompress_dict_safe+5ACj
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+arg_18]
		jbe	short loc_6CB9924C
		jmp	loc_6CB99500
; ---------------------------------------------------------------------------

loc_6CB9924C:				; CODE XREF: lzo1x_decompress_dict_safe+61Fj
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, edx
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB992B4
		mov	eax, [ebp+var_18]
		sub	[ebp+var_14], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_18]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_2C], eax

loc_6CB9928E:				; CODE XREF: lzo1x_decompress_dict_safe+687j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_2C]
		lea	ecx, [edx+1]
		mov	[ebp+var_2C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9928E
		jmp	loc_6CB99400
; ---------------------------------------------------------------------------

loc_6CB992B4:				; CODE XREF: lzo1x_decompress_dict_safe+63Bj
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	loc_6CB99400
; ---------------------------------------------------------------------------

loc_6CB992D8:				; CODE XREF: lzo1x_decompress_dict_safe+3E0j
					; lzo1x_decompress_dict_safe+482j ...
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CB992F1
		jmp	loc_6CB994E8
; ---------------------------------------------------------------------------

loc_6CB992F1:				; CODE XREF: lzo1x_decompress_dict_safe+6C4j
		add	[ebp+var_14], 2
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_18]
		jb	short loc_6CB99362
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_14]
		jb	short loc_6CB9933C
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_30]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	short loc_6CB9935D
; ---------------------------------------------------------------------------

loc_6CB9933C:				; CODE XREF: lzo1x_decompress_dict_safe+6F3j
					; lzo1x_decompress_dict_safe+735j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_30]
		lea	ecx, [edx+1]
		mov	[ebp+var_30], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9933C

loc_6CB9935D:				; CODE XREF: lzo1x_decompress_dict_safe+714j
		jmp	loc_6CB99400
; ---------------------------------------------------------------------------

loc_6CB99362:				; CODE XREF: lzo1x_decompress_dict_safe+6DCj
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+arg_18]
		jbe	short loc_6CB9937C
		jmp	loc_6CB99500
; ---------------------------------------------------------------------------

loc_6CB9937C:				; CODE XREF: lzo1x_decompress_dict_safe+74Fj
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB993E1
		mov	eax, [ebp+var_18]
		sub	[ebp+var_14], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_34]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_18]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_34], eax

loc_6CB993BE:				; CODE XREF: lzo1x_decompress_dict_safe+7B7j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_34]
		lea	ecx, [edx+1]
		mov	[ebp+var_34], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB993BE
		jmp	short loc_6CB99400
; ---------------------------------------------------------------------------

loc_6CB993E1:				; CODE XREF: lzo1x_decompress_dict_safe+76Bj
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_34]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax

loc_6CB99400:				; CODE XREF: lzo1x_decompress_dict_safe:loc_6CB98F24j
					; lzo1x_decompress_dict_safe+380j ...
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9941E
		nop
		jmp	loc_6CB98D21
; ---------------------------------------------------------------------------

loc_6CB9941E:				; CODE XREF: lzo1x_decompress_dict_safe+A3j
					; lzo1x_decompress_dict_safe+7F0j
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CB99432
		jmp	loc_6CB994E8
; ---------------------------------------------------------------------------

loc_6CB99432:				; CODE XREF: lzo1x_decompress_dict_safe+805j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB9944B
		jmp	loc_6CB994D0
; ---------------------------------------------------------------------------

loc_6CB9944B:				; CODE XREF: lzo1x_decompress_dict_safe+81Ej
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_14], 1
		jbe	short loc_6CB9949C
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_14], 2
		jbe	short loc_6CB9949C
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB9949C:				; CODE XREF: lzo1x_decompress_dict_safe+840j
					; lzo1x_decompress_dict_safe+85Dj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		jmp	loc_6CB98FCF
; ---------------------------------------------------------------------------

loc_6CB994B3:				; CODE XREF: lzo1x_decompress_dict_safe+551j
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_38]
		jnb	short loc_6CB994C2
		mov	eax, 0FFFFFFF8h
		jmp	short loc_6CB994CE
; ---------------------------------------------------------------------------

loc_6CB994C2:				; CODE XREF: lzo1x_decompress_dict_safe+893j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB99516
; ---------------------------------------------------------------------------

loc_6CB994C9:				; CODE XREF: lzo1x_decompress_dict_safe+54Bj
		mov	eax, 0

loc_6CB994CE:				; CODE XREF: lzo1x_decompress_dict_safe+89Aj
		jmp	short locret_6CB99516
; ---------------------------------------------------------------------------

loc_6CB994D0:				; CODE XREF: lzo1x_decompress_dict_safe+79j
					; lzo1x_decompress_dict_safe+D0j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB99516
; ---------------------------------------------------------------------------

loc_6CB994E8:				; CODE XREF: lzo1x_decompress_dict_safe+B7j
					; lzo1x_decompress_dict_safe+194j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFBh
		jmp	short locret_6CB99516
; ---------------------------------------------------------------------------

loc_6CB99500:				; CODE XREF: lzo1x_decompress_dict_safe+318j
					; lzo1x_decompress_dict_safe+621j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFAh

locret_6CB99516:			; CODE XREF: lzo1x_decompress_dict_safe+8A1j
					; lzo1x_decompress_dict_safe:loc_6CB994CEj ...
		leave
		retn
lzo1x_decompress_dict_safe endp

; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB99522	proc near		; CODE XREF: lzo1x_optimize+2AAp
					; lzo1x_optimize+338p

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax], dl
		cmp	[ebp+arg_8], 1
		jnz	short loc_6CB99546
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax]
		mov	[edx], al
		jmp	short loc_6CB99555
; ---------------------------------------------------------------------------

loc_6CB99546:				; CODE XREF: sub_6CB99522+12j
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax+1]
		mov	[edx], al

loc_6CB99555:				; CODE XREF: sub_6CB99522+22j
		pop	ebp
		retn
sub_6CB99522	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB99557	proc near		; CODE XREF: lzo1x_optimize+4CBp
					; lzo1x_optimize+6D7p ...

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax], dl
		cmp	[ebp+arg_8], 1
		jnz	short loc_6CB99586
		mov	eax, [ebp+arg_0]
		lea	ecx, [eax+2]
		mov	eax, [ebp+arg_0]
		add	eax, 1
		mov	edx, [ebp+arg_4]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		movzx	eax, byte ptr [eax]
		mov	[ecx], al
		jmp	short loc_6CB995C9
; ---------------------------------------------------------------------------

loc_6CB99586:				; CODE XREF: sub_6CB99557+12j
		cmp	[ebp+arg_8], 2
		jnz	short loc_6CB995AB
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax+1]
		mov	[edx], al
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax]
		mov	[edx], al
		jmp	short loc_6CB995C9
; ---------------------------------------------------------------------------

loc_6CB995AB:				; CODE XREF: sub_6CB99557+33j
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax+1]
		mov	[edx], al
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax+2]
		mov	[edx], al

loc_6CB995C9:				; CODE XREF: sub_6CB99557+2Dj
					; sub_6CB99557+52j
		pop	ebp
		retn
sub_6CB99557	endp

; Exported entry  94. lzo1x_optimize

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1x_optimize
lzo1x_optimize	proc near

Dst		= dword	ptr -58h
Src		= dword	ptr -54h
Size		= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	[ebp+var_1C], 0
		mov	[ebp+var_20], 0
		mov	[ebp+var_24], 0FFFFFFFFh
		mov	[ebp+var_28], 0
		mov	[ebp+var_2C], 0
		mov	[ebp+var_30], 0
		mov	[ebp+var_34], 0
		mov	[ebp+var_38], 0
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CB99665
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 3
		ja	short loc_6CB99660
		jmp	loc_6CB99E63
; ---------------------------------------------------------------------------

loc_6CB99660:				; CODE XREF: lzo1x_optimize+8Ej
		jmp	loc_6CB99714
; ---------------------------------------------------------------------------

loc_6CB99665:				; CODE XREF: lzo1x_optimize+73j
		jmp	loc_6CB99EAA
; ---------------------------------------------------------------------------

loc_6CB9966A:				; CODE XREF: lzo1x_optimize+8EDj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0Fh
		jbe	short loc_6CB99687
		jmp	loc_6CB999B1
; ---------------------------------------------------------------------------

loc_6CB99687:				; CODE XREF: lzo1x_optimize+B5j
		mov	eax, [ebp+var_10]
		sub	eax, 1
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB996C6
		mov	[ebp+var_14], 0Fh
		jmp	short loc_6CB996AA
; ---------------------------------------------------------------------------

loc_6CB9969F:				; CODE XREF: lzo1x_optimize+E7j
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1

loc_6CB996AA:				; CODE XREF: lzo1x_optimize+D2j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9969F
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_14], eax

loc_6CB996C6:				; CODE XREF: lzo1x_optimize+C9j
		mov	eax, [ebp+var_14]
		add	eax, 3
		mov	[ebp+var_20], eax

loc_6CB996CF:				; CODE XREF: lzo1x_optimize+3AEj
					; lzo1x_optimize+532j ...
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB99714:				; CODE XREF: lzo1x_optimize:loc_6CB99660j
					; lzo1x_optimize+168j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB99714
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0Fh
		jbe	short loc_6CB99752
		jmp	loc_6CB999B1
; ---------------------------------------------------------------------------

loc_6CB99752:				; CODE XREF: lzo1x_optimize+180j
		mov	eax, [ebp+var_C]
		sub	eax, 801h
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		shr	eax, 2
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	[ebp+var_20], 0
		jmp	loc_6CB99E25
; ---------------------------------------------------------------------------

loc_6CB997D0:				; CODE XREF: lzo1x_optimize+8D9j
		cmp	[ebp+var_14], 0Fh
		ja	loc_6CB999B1
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		shr	eax, 2
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_18], eax
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CB99810
		jmp	loc_6CB9997E
; ---------------------------------------------------------------------------

loc_6CB99810:				; CODE XREF: lzo1x_optimize+23Ej
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_44], eax
		cmp	[ebp+var_44], 0
		jnz	short loc_6CB99883
		cmp	[ebp+var_20], 1
		jnz	short loc_6CB99883
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 0Fh
		jbe	short loc_6CB99883
		mov	eax, [ebp+var_44]
		mov	[ebp+var_24], eax
		add	[ebp+var_20], 2
		mov	eax, [ebp+var_1C]
		movzx	eax, byte ptr [eax]
		and	eax, 0FFFFFFFCh
		mov	edx, eax
		mov	eax, [ebp+var_20]
		or	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_10]
		sub	edx, 2
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Src], eax
		mov	[esp+58h+Dst], edx
		call	sub_6CB99522
		add	[ebp+var_28], 1
		jmp	loc_6CB9997E
; ---------------------------------------------------------------------------

loc_6CB99883:				; CODE XREF: lzo1x_optimize+25Bj
					; lzo1x_optimize+261j ...
		cmp	[ebp+var_44], 0
		jnz	loc_6CB9997E
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 0Fh
		ja	loc_6CB9997E
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	loc_6CB9997E
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_20]
		add	eax, edx
		add	eax, 2
		cmp	eax, 0Fh
		ja	loc_6CB9997E
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_1C]
		movzx	eax, byte ptr [eax]
		and	eax, 0FFFFFFFCh
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_10]
		sub	edx, 2
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Src], eax
		mov	[esp+58h+Dst], edx
		call	sub_6CB99522
		add	[ebp+var_1C], 2
		cmp	[ebp+var_20], 0
		jz	short loc_6CB9992E
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_20]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_1C]
		mov	[esp+58h+Src], eax ; Src
		mov	[esp+58h+Dst], edx ; Dst
		call	_memmove

loc_6CB9992E:				; CODE XREF: lzo1x_optimize+345j
		mov	eax, [ebp+var_20]
		mov	edx, [ebp+var_14]
		add	eax, edx
		add	eax, 5
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		lea	edx, [eax-3]
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		add	[ebp+var_2C], 1
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB996CF
; ---------------------------------------------------------------------------

loc_6CB9997E:				; CODE XREF: lzo1x_optimize+240j
					; lzo1x_optimize+2B3j ...
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB99E25
; ---------------------------------------------------------------------------

loc_6CB999B1:				; CODE XREF: lzo1x_optimize+B7j
					; lzo1x_optimize+182j ...
		cmp	[ebp+var_14], 3Fh
		jbe	loc_6CB99B02
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		shr	eax, 2
		and	eax, 7
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 3
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_14], eax
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CB99A00
		jmp	loc_6CB99DD6
; ---------------------------------------------------------------------------

loc_6CB99A00:				; CODE XREF: lzo1x_optimize+42Ej
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_44], eax
		cmp	[ebp+var_14], 1
		jnz	loc_6CB99DD6
		cmp	[ebp+var_20], 3
		jbe	loc_6CB99DD6
		cmp	[ebp+var_44], 0
		jnz	loc_6CB99DD6
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 0Fh
		ja	loc_6CB99DD6
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	loc_6CB99DD6
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_20]
		add	eax, edx
		add	eax, 3
		cmp	eax, 0Fh
		ja	loc_6CB99DD6
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_10]
		sub	edx, 3
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Src], eax
		mov	[esp+58h+Dst], edx
		call	sub_6CB99557
		mov	eax, [ebp+var_20]
		mov	edx, [ebp+var_14]
		add	eax, edx
		add	eax, 6
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		lea	edx, [eax-3]
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		add	[ebp+var_30], 1
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB996CF
; ---------------------------------------------------------------------------

loc_6CB99B02:				; CODE XREF: lzo1x_optimize+3EAj
		cmp	[ebp+var_14], 1Fh
		jbe	short loc_6CB99B7E
		and	[ebp+var_14], 1Fh
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB99B42
		mov	[ebp+var_14], 1Fh
		jmp	short loc_6CB99B26
; ---------------------------------------------------------------------------

loc_6CB99B1B:				; CODE XREF: lzo1x_optimize+563j
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1

loc_6CB99B26:				; CODE XREF: lzo1x_optimize+54Ej
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB99B1B
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_14], eax

loc_6CB99B42:				; CODE XREF: lzo1x_optimize+545j
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		neg	eax
		add	[ebp+var_18], eax
		jmp	loc_6CB99C2C
; ---------------------------------------------------------------------------

loc_6CB99B7E:				; CODE XREF: lzo1x_optimize+53Bj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		and	eax, 8
		shl	eax, 0Bh
		neg	eax
		add	[ebp+var_18], eax
		and	[ebp+var_14], 7
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB99BCC
		mov	[ebp+var_14], 7
		jmp	short loc_6CB99BB0
; ---------------------------------------------------------------------------

loc_6CB99BA5:				; CODE XREF: lzo1x_optimize+5EDj
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1

loc_6CB99BB0:				; CODE XREF: lzo1x_optimize+5D8j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB99BA5
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_14], eax

loc_6CB99BCC:				; CODE XREF: lzo1x_optimize+5CFj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB99C25
		nop
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_3C]
		jz	loc_6CB99EEC
		jmp	loc_6CB99ED6
; ---------------------------------------------------------------------------

loc_6CB99C25:				; CODE XREF: lzo1x_optimize+635j
		sub	[ebp+var_18], 4000h

loc_6CB99C2C:				; CODE XREF: lzo1x_optimize+5AEj
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CB99C37
		jmp	loc_6CB99DD6
; ---------------------------------------------------------------------------

loc_6CB99C37:				; CODE XREF: lzo1x_optimize+665j
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_44], eax
		cmp	[ebp+var_14], 1
		jnz	short loc_6CB99CB0
		cmp	[ebp+var_20], 0
		jnz	short loc_6CB99CB0
		cmp	[ebp+var_44], 0
		jnz	short loc_6CB99CB0
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 0Fh
		jbe	short loc_6CB99CB0
		mov	eax, [ebp+var_44]
		mov	[ebp+var_24], eax
		add	[ebp+var_20], 3
		mov	eax, [ebp+var_1C]
		movzx	eax, byte ptr [eax]
		and	eax, 0FFFFFFFCh
		mov	edx, eax
		mov	eax, [ebp+var_20]
		or	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_10]
		sub	edx, 3
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Src], eax
		mov	[esp+58h+Dst], edx
		call	sub_6CB99557
		add	[ebp+var_34], 1
		jmp	loc_6CB99DD6
; ---------------------------------------------------------------------------

loc_6CB99CB0:				; CODE XREF: lzo1x_optimize+682j
					; lzo1x_optimize+688j ...
		cmp	[ebp+var_14], 1
		jnz	loc_6CB99DD6
		cmp	[ebp+var_20], 3
		ja	loc_6CB99DD6
		cmp	[ebp+var_44], 0
		jnz	loc_6CB99DD6
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 0Fh
		ja	loc_6CB99DD6
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	loc_6CB99DD6
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_20]
		add	eax, edx
		add	eax, 3
		cmp	eax, 0Fh
		ja	loc_6CB99DD6
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_1C]
		movzx	eax, byte ptr [eax]
		and	eax, 0FFFFFFFCh
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_10]
		sub	edx, 3
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Src], eax
		mov	[esp+58h+Dst], edx
		call	sub_6CB99557
		add	[ebp+var_1C], 2
		cmp	[ebp+var_20], 0
		jz	short loc_6CB99D6F
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_20]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_1C]
		mov	[esp+58h+Src], eax ; Src
		mov	[esp+58h+Dst], edx ; Dst
		call	_memmove

loc_6CB99D6F:				; CODE XREF: lzo1x_optimize+786j
		mov	eax, [ebp+var_20]
		mov	edx, [ebp+var_14]
		add	eax, edx
		add	eax, 6
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		lea	edx, [eax-3]
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		add	[ebp+var_38], 1
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB996CF
; ---------------------------------------------------------------------------

loc_6CB99DD6:				; CODE XREF: lzo1x_optimize+430j
					; lzo1x_optimize+44Bj ...
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB99E04:				; CODE XREF: lzo1x_optimize+858j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB99E04

loc_6CB99E25:				; CODE XREF: lzo1x_optimize+200j
					; lzo1x_optimize+3E1j
		cmp	[ebp+var_24], 0FFFFFFFFh
		jnz	short loc_6CB99E4E
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_10]
		sub	eax, 2
		mov	[ebp+var_1C], eax
		jmp	short loc_6CB99E54
; ---------------------------------------------------------------------------

loc_6CB99E4E:				; CODE XREF: lzo1x_optimize+85Ej
		mov	eax, [ebp+var_24]
		mov	[ebp+var_14], eax

loc_6CB99E54:				; CODE XREF: lzo1x_optimize+881j
		mov	[ebp+var_24], 0FFFFFFFFh
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB99E63
		jmp	short loc_6CB99EAA
; ---------------------------------------------------------------------------

loc_6CB99E63:				; CODE XREF: lzo1x_optimize+90j
					; lzo1x_optimize+894j ...
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB99E63
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CB99EAA
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jbe	loc_6CB997D0

loc_6CB99EAA:				; CODE XREF: lzo1x_optimize:loc_6CB99665j
					; lzo1x_optimize+896j ...
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CB99EBE
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jbe	loc_6CB9966A

loc_6CB99EBE:				; CODE XREF: lzo1x_optimize+8E5j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFF9h
		jmp	short locret_6CB99EF1
; ---------------------------------------------------------------------------

loc_6CB99ED6:				; CODE XREF: lzo1x_optimize+655j
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CB99EE5
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CB99EF1
; ---------------------------------------------------------------------------

loc_6CB99EE5:				; CODE XREF: lzo1x_optimize+911j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB99EF1
; ---------------------------------------------------------------------------

loc_6CB99EEC:				; CODE XREF: lzo1x_optimize+64Fj
		mov	eax, 0

locret_6CB99EF1:			; CODE XREF: lzo1x_optimize+909j
					; lzo1x_optimize+918j ...
		leave
		retn
lzo1x_optimize	endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB99EFE	proc near		; CODE XREF: lzo1y_1_compress+C5p

var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 50h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-14h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+arg_14]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		cmp	[ebp+arg_10], 3
		ja	short loc_6CB99F45
		mov	eax, 4
		sub	eax, [ebp+arg_10]
		jmp	short loc_6CB99F4A
; ---------------------------------------------------------------------------

loc_6CB99F45:				; CODE XREF: sub_6CB99EFE+3Bj
		mov	eax, 0

loc_6CB99F4A:				; CODE XREF: sub_6CB99EFE+45j
		add	[ebp+var_4], eax

loc_6CB99F4D:				; CODE XREF: sub_6CB99EFE+D1j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		sar	eax, 5
		add	eax, 1
		add	[ebp+var_4], eax

loc_6CB99F60:				; CODE XREF: sub_6CB99EFE+492j
					; sub_6CB99EFE:loc_6CB9A395j
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_24]
		setnb	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB99F75
		jmp	loc_6CB9A39A
; ---------------------------------------------------------------------------

loc_6CB99F75:				; CODE XREF: sub_6CB99EFE+70j
		mov	eax, [ebp+var_4]
		mov	eax, [eax]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_2C]
		imul	eax, 1824429Dh
		shr	eax, 12h
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_30]
		lea	edx, [eax+eax]
		mov	eax, [ebp+var_28]
		add	eax, edx
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_30]
		lea	edx, [eax+eax]
		mov	eax, [ebp+var_28]
		add	edx, eax
		mov	ecx, [ebp+var_4]
		mov	eax, [ebp+arg_0]
		sub	ecx, eax
		mov	eax, ecx
		mov	[edx], ax
		mov	eax, [ebp+var_34]
		mov	eax, [eax]
		cmp	eax, [ebp+var_2C]
		setnz	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB99FD4
		jmp	loc_6CB99F4D
; ---------------------------------------------------------------------------

loc_6CB99FD4:				; CODE XREF: sub_6CB99EFE+CFj
		mov	eax, [ebp+arg_10]
		neg	eax
		add	[ebp+var_C], eax
		mov	[ebp+arg_10], 0
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jz	loc_6CB9A154
		cmp	[ebp+var_14], 3
		ja	short loc_6CB9A02B
		mov	eax, [ebp+var_8]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_14]
		or	eax, ecx
		mov	[edx], al
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_14]
		add	[ebp+var_8], eax
		jmp	loc_6CB9A154
; ---------------------------------------------------------------------------

loc_6CB9A02B:				; CODE XREF: sub_6CB99EFE+100j
		cmp	[ebp+var_14], 10h
		ja	short loc_6CB9A081
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		sub	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+4]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+8]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[edx], eax
		mov	eax, [ebp+var_14]
		add	[ebp+var_8], eax
		jmp	loc_6CB9A154
; ---------------------------------------------------------------------------

loc_6CB9A081:				; CODE XREF: sub_6CB99EFE+131j
		cmp	[ebp+var_14], 12h
		ja	short loc_6CB9A09A
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_14]
		sub	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB9A0E7
; ---------------------------------------------------------------------------

loc_6CB9A09A:				; CODE XREF: sub_6CB99EFE+187j
		mov	eax, [ebp+var_14]
		sub	eax, 12h
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB9A0C8
; ---------------------------------------------------------------------------

loc_6CB9A0B1:				; CODE XREF: sub_6CB99EFE+1D9j
		sub	[ebp+var_18], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB9A0C8:				; CODE XREF: sub_6CB99EFE+1B1j
		cmp	[ebp+var_18], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB9A0B1
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_18]
		mov	[eax], dl

loc_6CB9A0E7:				; CODE XREF: sub_6CB99EFE+19Aj
					; sub_6CB99EFE+22Dj
		mov	eax, [ebp+var_C]
		mov	edx, [eax]
		mov	eax, [ebp+var_8]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+4]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+8]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+8]
		mov	[edx], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_C]
		mov	eax, [eax+0Ch]
		mov	[edx], eax
		add	[ebp+var_8], 10h
		add	[ebp+var_C], 10h
		sub	[ebp+var_14], 10h
		cmp	[ebp+var_14], 0Fh
		ja	short loc_6CB9A0E7
		cmp	[ebp+var_14], 0
		jz	short loc_6CB9A154

loc_6CB9A133:				; CODE XREF: sub_6CB99EFE+254j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_C]
		lea	ecx, [edx+1]
		mov	[ebp+var_C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9A133

loc_6CB9A154:				; CODE XREF: sub_6CB99EFE+F6j
					; sub_6CB99EFE+128j ...
		mov	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 0
		setz	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB9A1E1

loc_6CB9A182:				; CODE XREF: sub_6CB99EFE+2E1j
		add	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_1C], 0
		jz	short loc_6CB9A1A7
		jmp	short loc_6CB9A1E1
; ---------------------------------------------------------------------------

loc_6CB9A1A7:				; CODE XREF: sub_6CB99EFE+2A5j
		add	[ebp+var_10], 4
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		mov	edx, [eax]
		mov	eax, [ebp+var_10]
		mov	ecx, [ebp+var_34]
		add	eax, ecx
		mov	eax, [eax]
		xor	eax, edx
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_10]
		mov	edx, [ebp+var_4]
		add	eax, edx
		cmp	eax, [ebp+var_24]
		setnb	al
		movzx	eax, al
		test	eax, eax
		jz	short loc_6CB9A1DB
		jmp	short loc_6CB9A1EC
; ---------------------------------------------------------------------------

loc_6CB9A1DB:				; CODE XREF: sub_6CB99EFE+2D9j
		cmp	[ebp+var_1C], 0
		jz	short loc_6CB9A182

loc_6CB9A1E1:				; CODE XREF: sub_6CB99EFE+282j
					; sub_6CB99EFE+2A7j
		tzcnt	eax, [ebp+var_1C]
		shr	eax, 3
		add	[ebp+var_10], eax

loc_6CB9A1EC:				; CODE XREF: sub_6CB99EFE+2DBj
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_34]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+var_10]
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		cmp	[ebp+var_10], 0Eh
		ja	short loc_6CB9A24F
		cmp	[ebp+var_3C], 400h
		ja	short loc_6CB9A24F
		sub	[ebp+var_3C], 1
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		add	edx, 1
		mov	ecx, edx
		shl	ecx, 4
		mov	edx, [ebp+var_3C]
		and	edx, 3
		shl	edx, 2
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 2
		mov	[eax], dl
		jmp	loc_6CB9A395
; ---------------------------------------------------------------------------

loc_6CB9A24F:				; CODE XREF: sub_6CB99EFE+30Bj
					; sub_6CB99EFE+314j
		cmp	[ebp+var_3C], 4000h
		ja	loc_6CB9A2EB
		sub	[ebp+var_3C], 1
		cmp	[ebp+var_10], 21h
		ja	short loc_6CB9A27C
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		sub	edx, 2
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB9A2C4
; ---------------------------------------------------------------------------

loc_6CB9A27C:				; CODE XREF: sub_6CB99EFE+366j
		sub	[ebp+var_10], 21h
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	byte ptr [eax],	20h
		jmp	short loc_6CB9A2A5
; ---------------------------------------------------------------------------

loc_6CB9A28E:				; CODE XREF: sub_6CB99EFE+3B6j
		sub	[ebp+var_10], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_40]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB9A2A5:				; CODE XREF: sub_6CB99EFE+38Ej
		cmp	[ebp+var_10], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB9A28E
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		mov	[eax], dl

loc_6CB9A2C4:				; CODE XREF: sub_6CB99EFE+37Cj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB9A395
; ---------------------------------------------------------------------------

loc_6CB9A2EB:				; CODE XREF: sub_6CB99EFE+358j
		sub	[ebp+var_3C], 4000h
		cmp	[ebp+var_10], 9
		ja	short loc_6CB9A31B
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 0Bh
		mov	ecx, edx
		and	ecx, 8
		mov	edx, [ebp+var_10]
		sub	edx, 2
		or	edx, ecx
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB9A36E
; ---------------------------------------------------------------------------

loc_6CB9A31B:				; CODE XREF: sub_6CB99EFE+3F8j
		sub	[ebp+var_10], 9
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 0Bh
		and	edx, 8
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB9A34F
; ---------------------------------------------------------------------------

loc_6CB9A338:				; CODE XREF: sub_6CB99EFE+460j
		sub	[ebp+var_10], 0FFh
		mov	eax, [ebp+var_8]
		mov	[ebp+var_44], eax
		mov	eax, [ebp+var_44]
		mov	byte ptr [eax],	0
		add	[ebp+var_8], 1

loc_6CB9A34F:				; CODE XREF: sub_6CB99EFE+438j
		cmp	[ebp+var_10], 0FFh
		setnbe	al
		movzx	eax, al
		test	eax, eax
		jnz	short loc_6CB9A338
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_10]
		mov	[eax], dl

loc_6CB9A36E:				; CODE XREF: sub_6CB99EFE+41Bj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 6
		mov	[eax], dl
		jmp	loc_6CB99F60
; ---------------------------------------------------------------------------

loc_6CB9A395:				; CODE XREF: sub_6CB99EFE+34Cj
					; sub_6CB99EFE+3E8j
		jmp	loc_6CB99F60
; ---------------------------------------------------------------------------

loc_6CB9A39A:				; CODE XREF: sub_6CB99EFE+72j
		mov	edx, [ebp+var_8]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+arg_10]
		neg	eax
		mov	ecx, eax
		mov	eax, [ebp+var_C]
		add	eax, ecx
		sub	edx, eax
		mov	eax, edx
		leave
		retn
sub_6CB99EFE	endp

; Exported entry  95. lzo1y_1_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1y_1_compress(int, int, int, int, void	*)
		public lzo1y_1_compress
lzo1y_1_compress proc near

Dst		= dword	ptr -58h
Val		= dword	ptr -54h
Size		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_14], eax
		mov	[ebp+var_18], 0
		jmp	loc_6CB9A4A1
; ---------------------------------------------------------------------------

loc_6CB9A3E4:				; CODE XREF: lzo1y_1_compress+E5j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_2C], eax
		mov	eax, 0C000h
		cmp	[ebp+var_2C], 0C000h
		cmovbe	eax, [ebp+var_2C]
		mov	[ebp+var_2C], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_2C]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_18]
		add	eax, edx
		shr	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_30]
		add	eax, edx
		cmp	eax, [ebp+var_30]
		jbe	loc_6CB9A4AB
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+var_18]
		add	eax, edx
		shr	eax, 5
		mov	edx, eax
		mov	eax, [ebp+var_30]
		add	eax, edx
		mov	edx, [ebp+var_2C]
		mov	ecx, [ebp+var_C]
		add	edx, ecx
		cmp	eax, edx
		jbe	short loc_6CB9A4AB
		mov	[esp+58h+Size],	8000h ;	Size
		mov	[esp+58h+Val], 0 ; Val
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+var_44], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+var_48], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+58h+var_4C], eax
		mov	eax, [ebp+var_10]
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Val], eax
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax
		call	sub_6CB99EFE
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_2C]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_C]
		mov	eax, [eax]
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_2C]
		sub	[ebp+var_14], eax

loc_6CB9A4A1:				; CODE XREF: lzo1y_1_compress+1Fj
		cmp	[ebp+var_14], 14h
		ja	loc_6CB9A3E4

loc_6CB9A4AB:				; CODE XREF: lzo1y_1_compress+5Dj
					; lzo1y_1_compress+7Fj
		mov	eax, [ebp+var_14]
		add	[ebp+var_18], eax
		cmp	[ebp+var_18], 0
		jz	loc_6CB9A5F2
		mov	eax, [ebp+var_18]
		mov	edx, [ebp+arg_4]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+arg_8]
		jnz	short loc_6CB9A4EF
		cmp	[ebp+var_18], 0EEh
		ja	short loc_6CB9A4EF
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		add	edx, 11h
		mov	[eax], dl
		jmp	short loc_6CB9A56B
; ---------------------------------------------------------------------------

loc_6CB9A4EF:				; CODE XREF: lzo1y_1_compress+111j
					; lzo1y_1_compress+11Aj
		cmp	[ebp+var_18], 3
		ja	short loc_6CB9A50D
		mov	eax, [ebp+var_10]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+var_18]
		or	eax, ecx
		mov	[edx], al
		jmp	short loc_6CB9A56B
; ---------------------------------------------------------------------------

loc_6CB9A50D:				; CODE XREF: lzo1y_1_compress+133j
		cmp	[ebp+var_18], 12h
		ja	short loc_6CB9A526
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_18]
		sub	edx, 3
		mov	[eax], dl
		jmp	short loc_6CB9A56B
; ---------------------------------------------------------------------------

loc_6CB9A526:				; CODE XREF: lzo1y_1_compress+151j
		mov	eax, [ebp+var_18]
		sub	eax, 12h
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB9A554
; ---------------------------------------------------------------------------

loc_6CB9A53D:				; CODE XREF: lzo1y_1_compress+19Bj
		sub	[ebp+var_1C], 0FFh
		mov	eax, [ebp+var_10]
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_38]
		mov	byte ptr [eax],	0
		add	[ebp+var_10], 1

loc_6CB9A554:				; CODE XREF: lzo1y_1_compress+17Bj
		cmp	[ebp+var_1C], 0FFh
		ja	short loc_6CB9A53D
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	edx, [ebp+var_1C]
		mov	[eax], dl

loc_6CB9A56B:				; CODE XREF: lzo1y_1_compress+12Dj
					; lzo1y_1_compress+14Bj ...
		mov	eax, [ebp+var_10]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_34]
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_18]
		mov	[ebp+var_28], eax
		jmp	short loc_6CB9A5A3
; ---------------------------------------------------------------------------

loc_6CB9A57F:				; CODE XREF: lzo1y_1_compress+1E7j
		mov	eax, [ebp+var_24]
		mov	edx, [eax]
		mov	eax, [ebp+var_20]
		mov	[eax], edx
		mov	eax, [ebp+var_20]
		lea	edx, [eax+4]
		mov	eax, [ebp+var_24]
		mov	eax, [eax+4]
		mov	[edx], eax
		add	[ebp+var_20], 8
		add	[ebp+var_24], 8
		sub	[ebp+var_28], 8

loc_6CB9A5A3:				; CODE XREF: lzo1y_1_compress+1BDj
		cmp	[ebp+var_28], 7
		ja	short loc_6CB9A57F
		cmp	[ebp+var_28], 3
		jbe	short loc_6CB9A5C5
		mov	eax, [ebp+var_24]
		mov	edx, [eax]
		mov	eax, [ebp+var_20]
		mov	[eax], edx
		add	[ebp+var_20], 4
		add	[ebp+var_24], 4
		sub	[ebp+var_28], 4

loc_6CB9A5C5:				; CODE XREF: lzo1y_1_compress+1EDj
		cmp	[ebp+var_28], 0
		jz	short loc_6CB9A5EC

loc_6CB9A5CB:				; CODE XREF: lzo1y_1_compress+22Aj
		mov	eax, [ebp+var_20]
		lea	edx, [eax+1]
		mov	[ebp+var_20], edx
		mov	edx, [ebp+var_24]
		lea	ecx, [edx+1]
		mov	[ebp+var_24], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_28], 1
		cmp	[ebp+var_28], 0
		jnz	short loc_6CB9A5CB

loc_6CB9A5EC:				; CODE XREF: lzo1y_1_compress+209j
		mov	eax, [ebp+var_18]
		add	[ebp+var_10], eax

loc_6CB9A5F2:				; CODE XREF: lzo1y_1_compress+F5j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	11h
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0
		leave
		retn
lzo1y_1_compress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB9A63A(int,	void *,	size_t)
sub_6CB9A63A	proc near		; CODE XREF: sub_6CB9A853+145p

Dst		= dword	ptr -18h
Src		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+148h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+148h]
		mov	eax, [ebp+arg_0]
		mov	[eax+144h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14Ch], 0
		cmp	[ebp+arg_4], 0
		jz	short loc_6CB9A678
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CB9A67A

loc_6CB9A678:				; CODE XREF: sub_6CB9A63A+36j
		jmp	short locret_6CB9A6EF
; ---------------------------------------------------------------------------

loc_6CB9A67A:				; CODE XREF: sub_6CB9A63A+3Cj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_8]
		jnb	short loc_6CB9A69B
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+arg_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+arg_8], eax

loc_6CB9A69B:				; CODE XREF: sub_6CB9A63A+48j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+144h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+14Ch], edx
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+148h], edx
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+16Ch]
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Src], eax ; Src
		mov	[esp+18h+Dst], edx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+150h], edx

locret_6CB9A6EF:			; CODE XREF: sub_6CB9A63A:loc_6CB9A678j
		leave
		retn
sub_6CB9A63A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9A6F1	proc near		; CODE XREF: sub_6CB9A853+287p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		sub	eax, [ebp+arg_8]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+164h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+168h], edx
		cmp	[ebp+arg_8], 0
		jz	locret_6CB9A851

loc_6CB9A720:				; CODE XREF: sub_6CB9A6F1+15Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 160h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CB9A7A4
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 68B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CB9A7A9
; ---------------------------------------------------------------------------

loc_6CB9A7A4:				; CODE XREF: sub_6CB9A6F1+9Ej
		mov	eax, 0FFFFFFFFh

loc_6CB9A7A9:				; CODE XREF: sub_6CB9A6F1+B1j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		add	ecx, 0A8B0h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_4]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 68B0h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 170B0h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 278B0h
		mov	[eax+ecx*2+8], dx
		add	[ebp+arg_4], 1
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	loc_6CB9A720

locret_6CB9A851:			; CODE XREF: sub_6CB9A6F1+29j
		leave
		retn
sub_6CB9A6F1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB9A853(int,	void *,	size_t)
sub_6CB9A853	proc near		; CODE XREF: sub_6CB9B595+93p

Dst		= dword	ptr -28h
Val		= dword	ptr -24h
Size		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	[ebp+var_C], 0
		jmp	short loc_6CB9A8A6
; ---------------------------------------------------------------------------

loc_6CB9A877:				; CODE XREF: sub_6CB9A853+57j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 2Ch
		mov	dword ptr [eax+edx*4+0Ch], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 2Ch
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 8
		mov	[eax+ecx*4+0Ch], edx
		add	[ebp+var_C], 1

loc_6CB9A8A6:				; CODE XREF: sub_6CB9A853+22j
		cmp	[ebp+var_C], 21h
		jbe	short loc_6CB9A877
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0BFFFh
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 800h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 1
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0Ch], 800h
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+18h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+15Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+160h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax+164h], edx
		mov	eax, [ebp+arg_0]
		add	eax, 47168h
		mov	[esp+28h+Size],	8000h ;	Size
		mov	[esp+28h+Val], 0 ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		add	eax, 4F168h
		mov	[esp+28h+Size],	20000h ; Size
		mov	[esp+28h+Val], 0FFh ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+150h], 0
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+Size],	eax ; size_t
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+Val], eax ; void *
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax ; int
		call	sub_6CB9A63A
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	[eax+154h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	[eax+168h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+24h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+1Ch]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	loc_6CB9AA84
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jbe	short loc_6CB9AA11
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB9AA11:				; CODE XREF: sub_6CB9A853+1B0j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+1Ch]
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+150h]
		lea	ebx, [ecx+160h]
		mov	ecx, [ebp+arg_0]
		add	ecx, ebx
		add	ecx, 0Ch
		mov	[esp+28h+Size],	edx ; Size
		mov	[esp+28h+Val], eax ; Src
		mov	[esp+28h+Dst], ecx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+0B4h]
		mov	ecx, [edx+1Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+24h]
		add	edx, ecx
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+150h], edx

loc_6CB9AA84:				; CODE XREF: sub_6CB9A853+19Cj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short loc_6CB9AAA7
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+150h], 0

loc_6CB9AAA7:				; CODE XREF: sub_6CB9A853+245j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 1
		jbe	short loc_6CB9AADF
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14Ch]
		test	eax, eax
		jz	short loc_6CB9AADF
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14Ch]
		mov	[esp+28h+Size],	eax
		mov	[esp+28h+Val], 0
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax
		call	sub_6CB9A6F1

loc_6CB9AADF:				; CODE XREF: sub_6CB9A853+25Dj
					; sub_6CB9A853+26Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+168h]
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		cmp	edx, eax
		jb	short loc_6CB9AB26
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx
		jmp	short loc_6CB9AB50
; ---------------------------------------------------------------------------

loc_6CB9AB26:				; CODE XREF: sub_6CB9A853+2B2j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+15Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		sub	ecx, eax
		mov	eax, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx

loc_6CB9AB50:				; CODE XREF: sub_6CB9A853+2D1j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		ja	short loc_6CB9AB99
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		add	eax, 1
		mov	edx, [ebp+var_10]
		add	edx, 2
		mov	byte ptr [edx],	0
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_10]
		mov	[eax], dl

loc_6CB9AB99:				; CODE XREF: sub_6CB9A853+306j
		mov	eax, 0
		add	esp, 24h
		pop	ebx
		pop	ebp
		retn
sub_6CB9A853	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9ABA4	proc near		; CODE XREF: sub_6CB9B595+A7p
					; sub_6CB9B661+EBp
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_6CB9ABA4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9ABA9	proc near		; CODE XREF: sub_6CB9AE32+17Ap
					; sub_6CB9B661+C2p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jnb	short loc_6CB9ABE5
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0B4h]
		mov	eax, [edx+1Ch]
		lea	ecx, [eax+1]
		mov	[edx+1Ch], ecx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		jmp	short loc_6CB9ABEA
; ---------------------------------------------------------------------------

loc_6CB9ABE5:				; CODE XREF: sub_6CB9ABA9+20j
		mov	eax, 0FFFFFFFFh

loc_6CB9ABEA:				; CODE XREF: sub_6CB9ABA9+3Aj
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jns	short loc_6CB9AC4C
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CB9AC0C
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB9AC0C:				; CODE XREF: sub_6CB9ABA9+52j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		mov	edx, [ebp+arg_0]
		mov	byte ptr [edx+eax+16Ch], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB9AC90
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		add	eax, edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB9AC90
; ---------------------------------------------------------------------------

loc_6CB9AC4C:				; CODE XREF: sub_6CB9ABA9+48j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		mov	edx, [ebp+var_4]
		mov	ecx, edx
		mov	edx, [ebp+arg_0]
		mov	[edx+eax+16Ch],	cl
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB9AC90
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		add	edx, eax
		mov	eax, [ebp+var_4]
		mov	[edx], al

loc_6CB9AC90:				; CODE XREF: sub_6CB9ABA9+88j
					; sub_6CB9ABA9+A1j ...
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+150h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short loc_6CB9ACC8
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+150h], 0

loc_6CB9ACC8:				; CODE XREF: sub_6CB9ABA9+110j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+154h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short loc_6CB9AD00
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+154h], 0

loc_6CB9AD00:				; CODE XREF: sub_6CB9ABA9+148j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+158h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short locret_6CB9AD38
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+158h], 0

locret_6CB9AD38:			; CODE XREF: sub_6CB9ABA9+180j
		leave
		retn
sub_6CB9ABA9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9AD3A	proc near		; CODE XREF: sub_6CB9AE32+23p
					; sub_6CB9B224+32Ap

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		test	eax, eax
		jnz	loc_6CB9AE1B
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 160h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 278B0h
		movzx	eax, word ptr [eax+edx*2+8]
		movzx	eax, ax
		cmp	eax, [ebp+arg_4]
		jnz	short loc_6CB9AE19
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 278B0h
		mov	word ptr [eax+edx*2+8],	0FFFFh
		jmp	short locret_6CB9AE30
; ---------------------------------------------------------------------------

loc_6CB9AE19:				; CODE XREF: sub_6CB9AD3A+C8j
		jmp	short locret_6CB9AE30
; ---------------------------------------------------------------------------

loc_6CB9AE1B:				; CODE XREF: sub_6CB9AD3A+11j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+164h], edx

locret_6CB9AE30:			; CODE XREF: sub_6CB9AD3A+DDj
					; sub_6CB9AD3A:loc_6CB9AE19j
		leave
		retn
sub_6CB9AD3A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9AE32	proc near		; CODE XREF: sub_6CB9B661+21p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		cmp	[ebp+arg_4], 0
		jz	locret_6CB9AFBF

loc_6CB9AE42:				; CODE XREF: sub_6CB9AE32+187j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+158h]
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB9AD3A
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+16Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CB9AEF6
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 68B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CB9AEFB
; ---------------------------------------------------------------------------

loc_6CB9AEF6:				; CODE XREF: sub_6CB9AE32+AFj
		mov	eax, 0FFFFFFFFh

loc_6CB9AEFB:				; CODE XREF: sub_6CB9AE32+C2j
		mov	edx, [ebp+arg_0]
		add	ecx, 0A8B0h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 68B0h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 170B0h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 278B0h
		mov	[eax+ecx*2+8], dx
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB9ABA9
		sub	[ebp+arg_4], 1
		cmp	[ebp+arg_4], 0
		jnz	loc_6CB9AE42

locret_6CB9AFBF:			; CODE XREF: sub_6CB9AE32+Aj
		leave
		retn
sub_6CB9AE32	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9AFC1	proc near		; CODE XREF: sub_6CB9B224+1D6p

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_D		= byte ptr -0Dh
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 30h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		add	eax, 16Ch
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al
		jmp	loc_6CB9B186
; ---------------------------------------------------------------------------

loc_6CB9B02D:				; CODE XREF: sub_6CB9AFC1+1D0j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_14]
		add	eax, edx
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_8]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		cmp	al, [ebp+var_D]
		jnz	loc_6CB9B16F
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_8]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	ecx, [ebp+var_4]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB9B16F
		mov	eax, [ebp+var_8]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB9B16F
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB9B16F
		add	[ebp+var_4], 2
		add	[ebp+var_8], 2

loc_6CB9B0AF:				; CODE XREF: sub_6CB9AFC1+10Cj
		add	[ebp+var_4], 1
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CB9B0CF
		mov	eax, [ebp+var_4]
		movzx	edx, byte ptr [eax]
		add	[ebp+var_8], 1
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB9B0AF

loc_6CB9B0CF:				; CODE XREF: sub_6CB9AFC1+F8j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 21h
		ja	short loc_6CB9B106
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_24]
		add	edx, 2Ch
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jnz	short loc_6CB9B106
		mov	eax, [ebp+arg_4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_24]
		add	edx, 2Ch
		mov	[eax+edx*4+0Ch], ecx

loc_6CB9B106:				; CODE XREF: sub_6CB9AFC1+11Fj
					; sub_6CB9AFC1+130j
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_C]
		jbe	short loc_6CB9B16F
		mov	eax, [ebp+var_24]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+0B8h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB9B136
		jmp	short locret_6CB9B197
; ---------------------------------------------------------------------------

loc_6CB9B136:				; CODE XREF: sub_6CB9AFC1+171j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+10h]
		cmp	eax, [ebp+var_C]
		ja	short loc_6CB9B143
		jmp	short locret_6CB9B197
; ---------------------------------------------------------------------------

loc_6CB9B143:				; CODE XREF: sub_6CB9AFC1+17Ej
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 170B0h
		movzx	eax, word ptr [eax+edx*2+0Ah]
		movzx	eax, ax
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB9B15E
		jmp	short locret_6CB9B197
; ---------------------------------------------------------------------------

loc_6CB9B15E:				; CODE XREF: sub_6CB9AFC1+199j
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al

loc_6CB9B16F:				; CODE XREF: sub_6CB9AFC1+94j
					; sub_6CB9AFC1+B2j ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 0A8B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+arg_4], eax

loc_6CB9B186:				; CODE XREF: sub_6CB9AFC1+67j
		mov	eax, [ebp+arg_8]
		lea	edx, [eax-1]
		mov	[ebp+arg_8], edx
		test	eax, eax
		jnz	loc_6CB9B02D

locret_6CB9B197:			; CODE XREF: sub_6CB9AFC1+173j
					; sub_6CB9AFC1+180j ...
		leave
		retn
sub_6CB9AFC1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9B199	proc near		; CODE XREF: sub_6CB9B224+1AEp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	eax, [ebp+arg_0]
		add	edx, 278B0h
		movzx	eax, word ptr [eax+edx*2+8]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0FFFFh
		jnz	short loc_6CB9B1E0
		mov	eax, 0
		jmp	short locret_6CB9B222
; ---------------------------------------------------------------------------

loc_6CB9B1E0:				; CODE XREF: sub_6CB9B199+3Ej
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0C4h]
		test	eax, eax
		jnz	short loc_6CB9B1FC
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+0C4h], edx

loc_6CB9B1FC:				; CODE XREF: sub_6CB9B199+52j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, 1
		ja	short loc_6CB9B21D
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 2
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		mov	[eax+0B8h], edx

loc_6CB9B21D:				; CODE XREF: sub_6CB9B199+6Cj
		mov	eax, 1

locret_6CB9B222:			; CODE XREF: sub_6CB9B199+45j
		leave
		retn
sub_6CB9B199	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9B224	proc near		; CODE XREF: sub_6CB9B661+9Fp

var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 2Ch
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+16Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 238B0h
		movzx	eax, word ptr [eax+ecx*2+8]
		test	ax, ax
		jz	short loc_6CB9B2C7
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 68B0h
		movzx	eax, word ptr [eax+ecx*2+0Ch]
		jmp	short loc_6CB9B2CC
; ---------------------------------------------------------------------------

loc_6CB9B2C7:				; CODE XREF: sub_6CB9B224+8Ej
		mov	eax, 0FFFFFFFFh

loc_6CB9B2CC:				; CODE XREF: sub_6CB9B224+A1j
		mov	ecx, [ebp+arg_0]
		lea	ebx, [edx+0A8B0h]
		mov	[ecx+ebx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		add	edx, 0A8B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_10]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_10]
		add	ebx, 238B0h
		mov	[edx+ebx*2+8], cx
		movzx	eax, ax
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		cmp	eax, [ebp+var_8]
		jnb	short loc_6CB9B337
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_6CB9B337
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_8], eax

loc_6CB9B337:				; CODE XREF: sub_6CB9B224+FEj
					; sub_6CB9B224+108j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 68B0h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+16Ch]
		movzx	edx, al
		mov	eax, [ebp+arg_0]
		mov	[eax+28h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jb	short loc_6CB9B3CC
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jnz	short loc_6CB9B39D
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0FFFFFFFFh

loc_6CB9B39D:				; CODE XREF: sub_6CB9B224+16Dj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 170B0h
		mov	[eax+edx*2+0Ah], cx
		jmp	loc_6CB9B53B
; ---------------------------------------------------------------------------

loc_6CB9B3CC:				; CODE XREF: sub_6CB9B224+163j
		mov	eax, [ebp+arg_0]
		mov	[esp+30h+var_30], eax
		call	sub_6CB9B199
		test	eax, eax
		jz	short loc_6CB9B3FF
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		jbe	short loc_6CB9B3FF
		mov	eax, [ebp+var_8]
		mov	[esp+30h+var_28], eax
		mov	eax, [ebp+var_14]
		mov	[esp+30h+var_2C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+30h+var_30], eax
		call	sub_6CB9AFC1

loc_6CB9B3FF:				; CODE XREF: sub_6CB9B224+1B5j
					; sub_6CB9B224+1C0j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB9B45F
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B8h]
		cmp	edx, eax
		jbe	short loc_6CB9B438
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B8h]
		sub	edx, eax
		mov	eax, edx
		jmp	short loc_6CB9B459
; ---------------------------------------------------------------------------

loc_6CB9B438:				; CODE XREF: sub_6CB9B224+1FAj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+15Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B8h]
		sub	ecx, eax
		mov	eax, ecx
		add	eax, edx

loc_6CB9B459:				; CODE XREF: sub_6CB9B224+212j
		mov	edx, [ebp+arg_0]
		mov	[edx+20h], eax

loc_6CB9B45F:				; CODE XREF: sub_6CB9B224+1E4j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		add	ecx, 170B0h
		mov	[eax+ecx*2+0Ah], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	loc_6CB9B53B
		mov	[ebp+var_C], 2
		jmp	loc_6CB9B531
; ---------------------------------------------------------------------------

loc_6CB9B498:				; CODE XREF: sub_6CB9B224+311j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 2Ch
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB9B51C
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 2Ch
		mov	eax, [eax+ecx*4+0Ch]
		sub	eax, 1
		cmp	edx, eax
		jbe	short loc_6CB9B4E5
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 2Ch
		mov	eax, [eax+ecx*4+0Ch]
		sub	edx, eax
		mov	eax, edx
		add	eax, 1
		jmp	short loc_6CB9B50D
; ---------------------------------------------------------------------------

loc_6CB9B4E5:				; CODE XREF: sub_6CB9B224+2A0j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+15Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ebx, [ebp+var_C]
		add	ebx, 2Ch
		mov	eax, [eax+ebx*4+0Ch]
		sub	ecx, eax
		mov	eax, ecx
		add	eax, edx
		add	eax, 1

loc_6CB9B50D:				; CODE XREF: sub_6CB9B224+2BFj
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 8
		mov	[edx+ecx*4+0Ch], eax
		jmp	short loc_6CB9B52D
; ---------------------------------------------------------------------------

loc_6CB9B51C:				; CODE XREF: sub_6CB9B224+283j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 8
		mov	dword ptr [eax+edx*4+0Ch], 0

loc_6CB9B52D:				; CODE XREF: sub_6CB9B224+2F6j
		add	[ebp+var_C], 1

loc_6CB9B531:				; CODE XREF: sub_6CB9B224+26Fj
		cmp	[ebp+var_C], 21h
		jbe	loc_6CB9B498

loc_6CB9B53B:				; CODE XREF: sub_6CB9B224+1A3j
					; sub_6CB9B224+262j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+158h]
		mov	[esp+30h+var_2C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+30h+var_30], eax
		call	sub_6CB9AD3A
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 278B0h
		mov	[eax+ecx*2+8], dx
		add	esp, 2Ch
		pop	ebx
		pop	ebp
		retn
sub_6CB9B224	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB9B595(int,	int, void *, size_t, int)
sub_6CB9B595	proc near		; CODE XREF: lzo1y_999_compress_internal+148p

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 1
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[eax+0B4h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+14h]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+34h]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_20], eax ;	size_t
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_24], eax ;	void *
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax ;	int
		call	sub_6CB9A853
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jz	short loc_6CB9B646
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax
		call	sub_6CB9ABA4
		mov	eax, [ebp+var_C]
		jmp	short locret_6CB9B65F
; ---------------------------------------------------------------------------

loc_6CB9B646:				; CODE XREF: sub_6CB9B595+9Fj
		mov	eax, [ebp+arg_10]
		and	eax, 1
		test	eax, eax
		setnz	al
		movzx	edx, al
		mov	eax, [ebp+arg_4]
		mov	[eax+14h], edx
		mov	eax, 0

locret_6CB9B65F:			; CODE XREF: sub_6CB9B595+AFj
		leave
		retn
sub_6CB9B595	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9B661	proc near		; CODE XREF: lzo1y_999_compress_internal+199p
					; lzo1y_999_compress_internal+284p ...

Dst		= dword	ptr -18h
Val		= dword	ptr -14h
Size		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		cmp	[ebp+arg_C], 0
		jz	short loc_6CB9B6A4
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	[esp+18h+Val], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB9AE32
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	eax, edx
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		jmp	short loc_6CB9B6BC
; ---------------------------------------------------------------------------

loc_6CB9B6A4:				; CODE XREF: sub_6CB9B661+Bj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx

loc_6CB9B6BC:				; CODE XREF: sub_6CB9B661+41j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+1Ch], 1
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_6CB9B6FA
		mov	eax, [ebp+arg_4]
		add	eax, 0BCh
		mov	[esp+18h+Size],	88h ; Size
		mov	[esp+18h+Val], 0 ; Val
		mov	[esp+18h+Dst], eax ; Dst
		call	_memset

loc_6CB9B6FA:				; CODE XREF: sub_6CB9B661+77j
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB9B224
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+20h]
		mov	eax, [ebp+arg_0]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB9ABA9
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+28h]
		test	eax, eax
		jns	short loc_6CB9B753
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB9ABA4
		jmp	short loc_6CB9B762
; ---------------------------------------------------------------------------

loc_6CB9B753:				; CODE XREF: sub_6CB9B661+CFj
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+24h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+4], edx

loc_6CB9B762:				; CODE XREF: sub_6CB9B661+F0j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		neg	eax
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+18h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB9B7E1
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB9B7E1
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+30h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		cmp	edx, eax
		jbe	short loc_6CB9B7E1
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+arg_0]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+arg_0]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+Size],	ebx
		mov	[esp+18h+Val], ecx
		mov	[esp+18h+Dst], edx
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		lea	edx, [eax+400h]
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx

loc_6CB9B7E1:				; CODE XREF: sub_6CB9B661+11Fj
					; sub_6CB9B661+12Cj ...
		mov	eax, 0
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
sub_6CB9B661	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9B7EC	proc near		; CODE XREF: lzo1y_999_compress_internal+4B9p
					; lzo1y_999_compress_internal+536p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_8]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		cmp	[ebp+arg_8], 2
		jnz	short loc_6CB9B852
		sub	[ebp+arg_C], 1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		and	edx, 3
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		jmp	loc_6CB9BA4C
; ---------------------------------------------------------------------------

loc_6CB9B852:				; CODE XREF: sub_6CB9B7EC+27j
		cmp	[ebp+arg_8], 0Eh
		ja	short loc_6CB9B8AB
		cmp	[ebp+arg_C], 400h
		ja	short loc_6CB9B8AB
		sub	[ebp+arg_C], 1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		add	edx, 1
		mov	ecx, edx
		shl	ecx, 4
		mov	edx, [ebp+arg_C]
		and	edx, 3
		shl	edx, 2
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+5Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+5Ch], edx
		jmp	loc_6CB9BA4C
; ---------------------------------------------------------------------------

loc_6CB9B8AB:				; CODE XREF: sub_6CB9B7EC+6Aj
					; sub_6CB9B7EC+73j
		cmp	[ebp+arg_8], 3
		jnz	short loc_6CB9B905
		cmp	[ebp+arg_C], 800h
		ja	short loc_6CB9B905
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	eax, 3
		jbe	short loc_6CB9B905
		sub	[ebp+arg_C], 401h
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		and	edx, 3
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+58h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+58h], edx
		jmp	loc_6CB9BA4C
; ---------------------------------------------------------------------------

loc_6CB9B905:				; CODE XREF: sub_6CB9B7EC+C3j
					; sub_6CB9B7EC+CCj ...
		cmp	[ebp+arg_C], 4000h
		ja	loc_6CB9B9A4
		sub	[ebp+arg_C], 1
		cmp	[ebp+arg_8], 21h
		ja	short loc_6CB9B932
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 2
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB9B96E
; ---------------------------------------------------------------------------

loc_6CB9B932:				; CODE XREF: sub_6CB9B7EC+12Ej
		sub	[ebp+arg_8], 21h
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	20h
		jmp	short loc_6CB9B957
; ---------------------------------------------------------------------------

loc_6CB9B944:				; CODE XREF: sub_6CB9B7EC+172j
		sub	[ebp+arg_8], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB9B957:				; CODE XREF: sub_6CB9B7EC+156j
		cmp	[ebp+arg_8], 0FFh
		ja	short loc_6CB9B944
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl

loc_6CB9B96E:				; CODE XREF: sub_6CB9B7EC+144j
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+60h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+60h], edx
		jmp	loc_6CB9BA4C
; ---------------------------------------------------------------------------

loc_6CB9B9A4:				; CODE XREF: sub_6CB9B7EC+120j
		sub	[ebp+arg_C], 4000h
		mov	eax, [ebp+arg_C]
		and	eax, 4000h
		shr	eax, 0Bh
		mov	[ebp+var_C], eax
		cmp	[ebp+arg_8], 9
		ja	short loc_6CB9B9DA
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+var_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, 2
		or	edx, ecx
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB9BA1B
; ---------------------------------------------------------------------------

loc_6CB9B9DA:				; CODE XREF: sub_6CB9B7EC+1D1j
		sub	[ebp+arg_8], 9
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+var_C]
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB9BA04
; ---------------------------------------------------------------------------

loc_6CB9B9F1:				; CODE XREF: sub_6CB9B7EC+21Fj
		sub	[ebp+arg_8], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB9BA04:				; CODE XREF: sub_6CB9B7EC+203j
		cmp	[ebp+arg_8], 0FFh
		ja	short loc_6CB9B9F1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl

loc_6CB9BA1B:				; CODE XREF: sub_6CB9B7EC+1ECj
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+64h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+64h], edx

loc_6CB9BA4C:				; CODE XREF: sub_6CB9B7EC+61j
					; sub_6CB9B7EC+BAj ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_8]
		mov	[eax+14h], edx
		mov	eax, [ebp+arg_4]
		leave
		retn
sub_6CB9B7EC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9BA63	proc near		; CODE XREF: sub_6CB9BB6F+27p
					; lzo1y_999_compress_internal+59Cp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+3Ch]
		mov	eax, [ebp+arg_C]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+28h]
		cmp	eax, [ebp+arg_4]
		jnz	short loc_6CB9BAA4
		cmp	[ebp+arg_C], 0EEh
		ja	short loc_6CB9BAA4
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		add	edx, 11h
		mov	[eax], dl
		jmp	loc_6CB9BB49
; ---------------------------------------------------------------------------

loc_6CB9BAA4:				; CODE XREF: sub_6CB9BA63+20j
					; sub_6CB9BA63+29j
		cmp	[ebp+arg_C], 3
		ja	short loc_6CB9BAD1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_4]
		sub	eax, 2
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+arg_C]
		or	eax, ecx
		mov	[edx], al
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+68h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+68h], edx
		jmp	short loc_6CB9BB49
; ---------------------------------------------------------------------------

loc_6CB9BAD1:				; CODE XREF: sub_6CB9BA63+45j
		cmp	[ebp+arg_C], 12h
		ja	short loc_6CB9BAF9
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		sub	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+6Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+6Ch], edx
		jmp	short loc_6CB9BB49
; ---------------------------------------------------------------------------

loc_6CB9BAF9:				; CODE XREF: sub_6CB9BA63+72j
		mov	eax, [ebp+arg_C]
		sub	eax, 12h
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB9BB23
; ---------------------------------------------------------------------------

loc_6CB9BB10:				; CODE XREF: sub_6CB9BA63+C7j
		sub	[ebp+var_4], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB9BB23:				; CODE XREF: sub_6CB9BA63+ABj
		cmp	[ebp+var_4], 0FFh
		ja	short loc_6CB9BB10
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+var_4]
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+70h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+70h], edx

loc_6CB9BB49:				; CODE XREF: sub_6CB9BA63+3Cj
					; sub_6CB9BA63+6Cj ...
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		lea	ecx, [edx+1]
		mov	[ebp+arg_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+arg_C], 1
		cmp	[ebp+arg_C], 0
		jnz	short loc_6CB9BB49
		mov	eax, [ebp+arg_4]
		leave
		retn
sub_6CB9BA63	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9BB6F	proc near		; CODE XREF: lzo1y_999_compress_internal+48Fp
					; lzo1y_999_compress_internal+50Cp

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		cmp	[ebp+arg_C], 0
		jz	short loc_6CB9BBB2
		mov	eax, [ebp+arg_C]
		mov	[esp+10h+var_4], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+10h+var_8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+10h+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+10h+var_10], eax
		call	sub_6CB9BA63
		mov	[ebp+arg_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_10]
		mov	[eax+50h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_C]
		mov	[eax+4Ch], edx
		jmp	short loc_6CB9BBC6
; ---------------------------------------------------------------------------

loc_6CB9BBB2:				; CODE XREF: sub_6CB9BB6F+Aj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+50h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4Ch], 0

loc_6CB9BBC6:				; CODE XREF: sub_6CB9BB6F+41j
		mov	eax, [ebp+arg_4]
		leave
		retn
sub_6CB9BB6F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9BBCB	proc near		; CODE XREF: lzo1y_999_compress_internal+2F0p
					; lzo1y_999_compress_internal+3D2p ...

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	[ebp+var_4], 4
		cmp	[ebp+arg_0], 1
		ja	short loc_6CB9BBE8
		mov	eax, 0
		jmp	locret_6CB9BCBB
; ---------------------------------------------------------------------------

loc_6CB9BBE8:				; CODE XREF: sub_6CB9BBCB+11j
		cmp	[ebp+arg_0], 2
		jnz	short loc_6CB9BC17
		cmp	[ebp+arg_4], 400h
		ja	short loc_6CB9BC0D
		cmp	[ebp+arg_8], 0
		jz	short loc_6CB9BC0D
		cmp	[ebp+arg_8], 3
		ja	short loc_6CB9BC0D
		mov	eax, 2
		jmp	locret_6CB9BCBB
; ---------------------------------------------------------------------------

loc_6CB9BC0D:				; CODE XREF: sub_6CB9BBCB+2Aj
					; sub_6CB9BBCB+30j ...
		mov	eax, 0
		jmp	locret_6CB9BCBB
; ---------------------------------------------------------------------------

loc_6CB9BC17:				; CODE XREF: sub_6CB9BBCB+21j
		cmp	[ebp+arg_0], 0Eh
		ja	short loc_6CB9BC30
		cmp	[ebp+arg_4], 400h
		ja	short loc_6CB9BC30
		mov	eax, 2
		jmp	locret_6CB9BCBB
; ---------------------------------------------------------------------------

loc_6CB9BC30:				; CODE XREF: sub_6CB9BBCB+50j
					; sub_6CB9BBCB+59j
		cmp	[ebp+arg_0], 3
		jnz	short loc_6CB9BC4C
		cmp	[ebp+arg_4], 800h
		ja	short loc_6CB9BC4C
		cmp	[ebp+arg_8], 3
		jbe	short loc_6CB9BC4C
		mov	eax, 2
		jmp	short locret_6CB9BCBB
; ---------------------------------------------------------------------------

loc_6CB9BC4C:				; CODE XREF: sub_6CB9BBCB+69j
					; sub_6CB9BBCB+72j ...
		cmp	[ebp+arg_4], 4000h
		ja	short loc_6CB9BC81
		cmp	[ebp+arg_0], 21h
		ja	short loc_6CB9BC62
		mov	eax, 3
		jmp	short locret_6CB9BCBB
; ---------------------------------------------------------------------------

loc_6CB9BC62:				; CODE XREF: sub_6CB9BBCB+8Ej
		sub	[ebp+arg_0], 21h
		jmp	short loc_6CB9BC73
; ---------------------------------------------------------------------------

loc_6CB9BC68:				; CODE XREF: sub_6CB9BBCB+AFj
		sub	[ebp+arg_0], 0FFh
		add	[ebp+var_4], 1

loc_6CB9BC73:				; CODE XREF: sub_6CB9BBCB+9Bj
		cmp	[ebp+arg_0], 0FFh
		ja	short loc_6CB9BC68
		mov	eax, [ebp+var_4]
		jmp	short locret_6CB9BCBB
; ---------------------------------------------------------------------------

loc_6CB9BC81:				; CODE XREF: sub_6CB9BBCB+88j
		cmp	[ebp+arg_4], 0BFFFh
		ja	short loc_6CB9BCB6
		cmp	[ebp+arg_0], 9
		ja	short loc_6CB9BC97
		mov	eax, 3
		jmp	short locret_6CB9BCBB
; ---------------------------------------------------------------------------

loc_6CB9BC97:				; CODE XREF: sub_6CB9BBCB+C3j
		sub	[ebp+arg_0], 9
		jmp	short loc_6CB9BCA8
; ---------------------------------------------------------------------------

loc_6CB9BC9D:				; CODE XREF: sub_6CB9BBCB+E4j
		sub	[ebp+arg_0], 0FFh
		add	[ebp+var_4], 1

loc_6CB9BCA8:				; CODE XREF: sub_6CB9BBCB+D0j
		cmp	[ebp+arg_0], 0FFh
		ja	short loc_6CB9BC9D
		mov	eax, [ebp+var_4]
		jmp	short locret_6CB9BCBB
; ---------------------------------------------------------------------------

loc_6CB9BCB6:				; CODE XREF: sub_6CB9BBCB+BDj
		mov	eax, 0

locret_6CB9BCBB:			; CODE XREF: sub_6CB9BBCB+18j
					; sub_6CB9BBCB+3Dj ...
		leave
		retn
sub_6CB9BBCB	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9BCBD	proc near		; CODE XREF: lzo1y_999_compress_internal+43Ep

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_4], 3
		ja	short loc_6CB9BCE6
		cmp	[ebp+arg_8], 3
		ja	short loc_6CB9BCDC
		mov	eax, 0
		jmp	short loc_6CB9BCE1
; ---------------------------------------------------------------------------

loc_6CB9BCDC:				; CODE XREF: sub_6CB9BCBD+16j
		mov	eax, 2

loc_6CB9BCE1:				; CODE XREF: sub_6CB9BCBD+1Dj
		add	[ebp+var_4], eax
		jmp	short loc_6CB9BCF9
; ---------------------------------------------------------------------------

loc_6CB9BCE6:				; CODE XREF: sub_6CB9BCBD+10j
		cmp	[ebp+arg_4], 12h
		ja	short loc_6CB9BCF9
		cmp	[ebp+arg_8], 12h
		setnbe	al
		movzx	eax, al
		add	[ebp+var_4], eax

loc_6CB9BCF9:				; CODE XREF: sub_6CB9BCBD+27j
					; sub_6CB9BCBD+2Dj
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_10]
		sub	edx, eax
		mov	eax, edx
		add	eax, eax
		add	[ebp+var_4], eax
		cmp	[ebp+arg_14], 0
		jz	short loc_6CB9BD1D
		mov	eax, [ebp+arg_14]
		mov	edx, [ebp+arg_0]
		sub	edx, eax
		mov	eax, edx
		add	eax, eax
		sub	[ebp+var_4], eax

loc_6CB9BD1D:				; CODE XREF: sub_6CB9BCBD+4Fj
		mov	eax, [ebp+var_4]
		test	eax, eax
		jns	short loc_6CB9BD2B
		mov	[ebp+var_4], 0

loc_6CB9BD2B:				; CODE XREF: sub_6CB9BCBD+65j
		mov	eax, [ebp+var_4]
		leave
		retn
sub_6CB9BCBD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9BD30	proc near		; CODE XREF: lzo1y_999_compress_internal+2AFp
					; lzo1y_999_compress_internal+3ADp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 3
		ja	short loc_6CB9BD42
		jmp	loc_6CB9BEAA
; ---------------------------------------------------------------------------

loc_6CB9BD42:				; CODE XREF: sub_6CB9BD30+Bj
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 400h
		ja	short loc_6CB9BD53
		jmp	loc_6CB9BEAA
; ---------------------------------------------------------------------------

loc_6CB9BD53:				; CODE XREF: sub_6CB9BD30+1Cj
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 400h
		jbe	short loc_6CB9BDC8
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 3
		jbe	short loc_6CB9BDC8
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 0Fh
		ja	short loc_6CB9BDC8
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB9BDC8
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		cmp	eax, 400h
		ja	short loc_6CB9BDC8
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_8]
		mov	[eax], edx
		jmp	loc_6CB9BEAA
; ---------------------------------------------------------------------------

loc_6CB9BDC8:				; CODE XREF: sub_6CB9BD30+2Dj
					; sub_6CB9BD30+37j ...
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 4000h
		jbe	short loc_6CB9BE3A
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 9
		jbe	short loc_6CB9BE3A
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 10h
		ja	short loc_6CB9BE3A
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB9BE3A
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		cmp	eax, 400h
		ja	short loc_6CB9BE3A
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_8]
		mov	[eax], edx
		jmp	short loc_6CB9BEAA
; ---------------------------------------------------------------------------

loc_6CB9BE3A:				; CODE XREF: sub_6CB9BD30+A2j
					; sub_6CB9BD30+ACj ...
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 4000h
		jbe	short loc_6CB9BEAA
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 9
		jbe	short loc_6CB9BEAA
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 22h
		ja	short loc_6CB9BEAA
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB9BEAA
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		cmp	eax, 4000h
		ja	short loc_6CB9BEAA
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_8]
		mov	[eax], edx

loc_6CB9BEAA:				; CODE XREF: sub_6CB9BD30+Dj
					; sub_6CB9BD30+1Ej ...
		pop	ebp
		retn
sub_6CB9BD30	endp

; Exported entry  98. lzo1y_999_compress_internal

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1y_999_compress_internal(int, int, int, int, int, void	*, size_t, int,	int, int, int, int, int, int)
		public lzo1y_999_compress_internal
lzo1y_999_compress_internal proc near	; CODE XREF: lzo1y_999_compress_level+D8p

var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_B8		= byte ptr -0B8h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h
arg_1C		= dword	ptr  24h
arg_20		= dword	ptr  28h
arg_24		= dword	ptr  2Ch
arg_28		= dword	ptr  30h
arg_2C		= dword	ptr  34h
arg_30		= dword	ptr  38h
arg_34		= dword	ptr  3Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0D4h
		lea	eax, [ebp+var_B8]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+arg_20]
		mov	[ebp+var_18], eax
		cmp	[ebp+arg_20], 0
		jns	short loc_6CB9BED8
		mov	[ebp+var_18], 1

loc_6CB9BED8:				; CODE XREF: lzo1y_999_compress_internal+23j
		cmp	[ebp+arg_24], 0
		jnz	short loc_6CB9BEE5
		mov	[ebp+arg_24], 20h

loc_6CB9BEE5:				; CODE XREF: lzo1y_999_compress_internal+30j
		cmp	[ebp+arg_28], 0
		jnz	short loc_6CB9BEF2
		mov	[ebp+arg_28], 20h

loc_6CB9BEF2:				; CODE XREF: lzo1y_999_compress_internal+3Dj
		cmp	[ebp+arg_2C], 0
		jnz	short loc_6CB9BEFF
		mov	[ebp+arg_2C], 0

loc_6CB9BEFF:				; CODE XREF: lzo1y_999_compress_internal+4Aj
		cmp	[ebp+arg_30], 0
		jnz	short loc_6CB9BF0C
		mov	[ebp+arg_30], 800h

loc_6CB9BF0C:				; CODE XREF: lzo1y_999_compress_internal+57j
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_0]
		mov	[eax+20h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+20h]
		mov	eax, [ebp+var_28]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	edx, eax
		mov	eax, [ebp+var_28]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_8]
		mov	[eax+28h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_1C]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax+64h], 0
		mov	eax, [ebp+var_28]
		mov	edx, [eax+64h]
		mov	eax, [ebp+var_28]
		mov	[eax+60h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+60h]
		mov	eax, [ebp+var_28]
		mov	[eax+5Ch], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+5Ch]
		mov	eax, [ebp+var_28]
		mov	[eax+58h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+58h]
		mov	eax, [ebp+var_28]
		mov	[eax+54h], edx
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax+70h], 0
		mov	eax, [ebp+var_28]
		mov	edx, [eax+70h]
		mov	eax, [ebp+var_28]
		mov	[eax+6Ch], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+6Ch]
		mov	eax, [ebp+var_28]
		mov	[eax+68h], edx
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_28]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_10], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax+50h], 0
		mov	eax, [ebp+var_28]
		mov	edx, [eax+50h]
		mov	eax, [ebp+var_28]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+arg_34]
		mov	[esp+0D8h+var_C8], eax ; int
		mov	eax, [ebp+arg_18]
		mov	[esp+0D8h+var_CC], eax ; size_t
		mov	eax, [ebp+arg_14]
		mov	[esp+0D8h+var_D0], eax ; void *
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax ; int
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax ; int
		call	sub_6CB9B595
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 0
		jz	short loc_6CB9C00A
		mov	eax, [ebp+var_30]
		jmp	loc_6CB9C4E3
; ---------------------------------------------------------------------------

loc_6CB9C00A:				; CODE XREF: lzo1y_999_compress_internal+154j
		cmp	[ebp+arg_30], 0
		jz	short loc_6CB9C019
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx

loc_6CB9C019:				; CODE XREF: lzo1y_999_compress_internal+162j
		cmp	[ebp+arg_2C], 0
		jz	short loc_6CB9C028
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_2C]
		mov	[eax+10h], edx

loc_6CB9C028:				; CODE XREF: lzo1y_999_compress_internal+171j
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], 0
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9B661
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 0
		jz	short loc_6CB9C05B
		mov	eax, [ebp+var_30]
		jmp	loc_6CB9C4E3
; ---------------------------------------------------------------------------

loc_6CB9C05B:				; CODE XREF: lzo1y_999_compress_internal+1A5j
		jmp	loc_6CB9C419
; ---------------------------------------------------------------------------

loc_6CB9C060:				; CODE XREF: lzo1y_999_compress_internal+575j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_28]
		mov	[eax+34h], edx
		mov	eax, [ebp+var_28]
		mov	eax, [eax+8]
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_28]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_44], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9C093
		mov	eax, [ebp+var_28]
		mov	eax, [eax+18h]
		mov	[ebp+var_10], eax

loc_6CB9C093:				; CODE XREF: lzo1y_999_compress_internal+1DCj
		mov	eax, [ebp+var_40]
		cmp	eax, 1
		jbe	short loc_6CB9C0D7
		mov	eax, [ebp+var_40]
		cmp	eax, 2
		jnz	short loc_6CB9C0B9
		mov	eax, [ebp+var_44]
		cmp	eax, 400h
		ja	short loc_6CB9C0D7
		cmp	[ebp+var_14], 0
		jz	short loc_6CB9C0D7
		cmp	[ebp+var_14], 3
		ja	short loc_6CB9C0D7

loc_6CB9C0B9:				; CODE XREF: lzo1y_999_compress_internal+1F5j
		mov	eax, [ebp+var_40]
		cmp	eax, 2
		jnz	short loc_6CB9C0C9
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+arg_8]
		jz	short loc_6CB9C0D7

loc_6CB9C0C9:				; CODE XREF: lzo1y_999_compress_internal+213j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+arg_8]
		jnz	short loc_6CB9C0E0
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9C0E0

loc_6CB9C0D7:				; CODE XREF: lzo1y_999_compress_internal+1EDj
					; lzo1y_999_compress_internal+1FFj ...
		mov	[ebp+var_40], 0
		jmp	short loc_6CB9C0FF
; ---------------------------------------------------------------------------

loc_6CB9C0E0:				; CODE XREF: lzo1y_999_compress_internal+223j
					; lzo1y_999_compress_internal+229j
		mov	eax, [ebp+var_40]
		cmp	eax, 3
		jnz	short loc_6CB9C0FF
		mov	eax, [ebp+var_44]
		cmp	eax, 800h
		jbe	short loc_6CB9C0FF
		cmp	[ebp+var_14], 3
		jbe	short loc_6CB9C0FF
		mov	[ebp+var_40], 0

loc_6CB9C0FF:				; CODE XREF: lzo1y_999_compress_internal+232j
					; lzo1y_999_compress_internal+23Aj ...
		mov	eax, [ebp+var_40]
		test	eax, eax
		jnz	short loc_6CB9C13D
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], 1
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9B661
		mov	[ebp+var_30], eax
		jmp	loc_6CB9C419
; ---------------------------------------------------------------------------

loc_6CB9C13D:				; CODE XREF: lzo1y_999_compress_internal+258j
		mov	eax, [ebp+var_2C]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_6CB9C160
		lea	eax, [ebp+var_44]
		mov	[esp+0D8h+var_D0], eax
		lea	eax, [ebp+var_40]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9BD30

loc_6CB9C160:				; CODE XREF: lzo1y_999_compress_internal+299j
		mov	[ebp+var_1C], 0
		cmp	[ebp+var_18], 0
		jz	short loc_6CB9C175
		mov	eax, [ebp+var_40]
		cmp	eax, [ebp+arg_28]
		jb	short loc_6CB9C188

loc_6CB9C175:				; CODE XREF: lzo1y_999_compress_internal+2BFj
		mov	[ebp+var_24], 0
		mov	[ebp+var_20], 0
		jmp	loc_6CB9C37D
; ---------------------------------------------------------------------------

loc_6CB9C188:				; CODE XREF: lzo1y_999_compress_internal+2C7j
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_40]
		mov	ecx, [ebp+var_14]
		mov	[esp+0D8h+var_D0], ecx
		mov	[esp+0D8h+var_D4], edx
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9BBCB
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		cmp	edx, eax
		cmovbe	eax, edx
		mov	[ebp+var_20], eax
		jmp	loc_6CB9C37D
; ---------------------------------------------------------------------------

loc_6CB9C1BA:				; CODE XREF: lzo1y_999_compress_internal+4E4j
		mov	eax, [ebp+var_40]
		cmp	eax, [ebp+arg_24]
		jb	short loc_6CB9C1D2
		mov	eax, [ebp+arg_30]
		shr	eax, 2
		mov	edx, eax
		mov	eax, [ebp+var_2C]
		mov	[eax+0Ch], edx
		jmp	short loc_6CB9C1DB
; ---------------------------------------------------------------------------

loc_6CB9C1D2:				; CODE XREF: lzo1y_999_compress_internal+314j
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx

loc_6CB9C1DB:				; CODE XREF: lzo1y_999_compress_internal+324j
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], 1
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9B661
		mov	[ebp+var_30], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_28]
		mov	edx, [eax+8]
		mov	eax, [ebp+var_40]
		cmp	edx, eax
		jnb	short loc_6CB9C216
		jmp	loc_6CB9C37D
; ---------------------------------------------------------------------------

loc_6CB9C216:				; CODE XREF: lzo1y_999_compress_internal+363j
		mov	eax, [ebp+var_28]
		mov	edx, [eax+8]
		mov	eax, [ebp+var_40]
		cmp	edx, eax
		jnz	short loc_6CB9C235
		mov	eax, [ebp+var_28]
		mov	edx, [eax+0Ch]
		mov	eax, [ebp+var_44]
		cmp	edx, eax
		jb	short loc_6CB9C235
		jmp	loc_6CB9C37D
; ---------------------------------------------------------------------------

loc_6CB9C235:				; CODE XREF: lzo1y_999_compress_internal+375j
					; lzo1y_999_compress_internal+382j
		mov	eax, [ebp+var_2C]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_6CB9C25E
		mov	eax, [ebp+var_28]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_28]
		add	eax, 8
		mov	[esp+0D8h+var_D0], edx
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9BD30

loc_6CB9C25E:				; CODE XREF: lzo1y_999_compress_internal+391j
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+eax]
		mov	eax, [ebp+var_28]
		mov	edx, [eax+0Ch]
		mov	eax, [ebp+var_28]
		mov	eax, [eax+8]
		mov	[esp+0D8h+var_D0], ecx
		mov	[esp+0D8h+var_D4], edx
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9BBCB
		mov	[ebp+var_34], eax
		cmp	[ebp+var_34], 0
		jnz	short loc_6CB9C291
		jmp	loc_6CB9C37D
; ---------------------------------------------------------------------------

loc_6CB9C291:				; CODE XREF: lzo1y_999_compress_internal+3DEj
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+arg_8]
		jz	short loc_6CB9C2B4
		mov	eax, [ebp+var_44]
		mov	edx, [ebp+var_14]
		mov	[esp+0D8h+var_D0], edx
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9BBCB
		jmp	short loc_6CB9C2B9
; ---------------------------------------------------------------------------

loc_6CB9C2B4:				; CODE XREF: lzo1y_999_compress_internal+3EBj
		mov	eax, 0

loc_6CB9C2B9:				; CODE XREF: lzo1y_999_compress_internal+406j
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+var_14]
		add	edx, eax
		mov	eax, [ebp+var_38]
		mov	[esp+0D8h+var_C4], eax
		mov	eax, [ebp+var_34]
		mov	[esp+0D8h+var_C8], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0D8h+var_CC], eax
		mov	[esp+0D8h+var_D0], edx
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9BCBD
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+var_28]
		mov	eax, [eax+8]
		mov	ecx, [ebp+var_40]
		mov	edx, [ebp+var_3C]
		add	edx, ecx
		cmp	eax, edx
		jb	short loc_6CB9C37D
		mov	eax, [ebp+var_28]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_28]
		mov	[eax+48h], edx
		cmp	[ebp+var_38], 0
		jz	short loc_6CB9C372
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_C8], eax
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9BB6F
		mov	[ebp+var_C], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_44]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9B7EC
		mov	[ebp+var_C], eax
		jmp	loc_6CB9C419
; ---------------------------------------------------------------------------

loc_6CB9C372:				; CODE XREF: lzo1y_999_compress_internal+46Bj
		mov	eax, [ebp+var_1C]
		add	[ebp+var_14], eax
		jmp	loc_6CB9C419
; ---------------------------------------------------------------------------

loc_6CB9C37D:				; CODE XREF: lzo1y_999_compress_internal+2D7j
					; lzo1y_999_compress_internal+309j ...
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CB9C396
		mov	eax, [ebp+var_28]
		mov	edx, [eax+4]
		mov	eax, [ebp+var_40]
		cmp	edx, eax
		ja	loc_6CB9C1BA

loc_6CB9C396:				; CODE XREF: lzo1y_999_compress_internal+4D7j
		mov	eax, [ebp+var_40]
		mov	[esp+0D8h+var_C8], eax
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9BB6F
		mov	[ebp+var_C], eax
		mov	[ebp+var_14], 0
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_40]
		mov	[esp+0D8h+var_CC], edx
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9B7EC
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_40]
		mov	[esp+0D8h+var_CC], edx
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9B661
		mov	[ebp+var_30], eax

loc_6CB9C419:				; CODE XREF: lzo1y_999_compress_internal:loc_6CB9C05Bj
					; lzo1y_999_compress_internal+28Cj ...
		mov	eax, [ebp+var_28]
		mov	eax, [eax+4]
		test	eax, eax
		jnz	loc_6CB9C060
		cmp	[ebp+var_14], 0
		jz	short loc_6CB9C450
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9BA63
		mov	[ebp+var_C], eax

loc_6CB9C450:				; CODE XREF: lzo1y_999_compress_internal+57Fj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	11h
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_28]
		mov	[eax+34h], edx
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_28]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB9C4DE
		mov	eax, [ebp+var_28]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB9C4DE
		mov	eax, [ebp+var_28]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+var_28]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+var_28]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+var_28]
		mov	edx, [edx+2Ch]
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], ebx
		mov	[esp+0D8h+var_D4], ecx
		mov	[esp+0D8h+var_D8], edx
		call	eax

loc_6CB9C4DE:				; CODE XREF: lzo1y_999_compress_internal+5F3j
					; lzo1y_999_compress_internal+600j
		mov	eax, 0

loc_6CB9C4E3:				; CODE XREF: lzo1y_999_compress_internal+159j
					; lzo1y_999_compress_internal+1AAj
		add	esp, 0D4h
		pop	ebx
		pop	ebp
		retn
lzo1y_999_compress_internal endp

; Exported entry  99. lzo1y_999_compress_level

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1y_999_compress_level(int, int, int, int, int,	void *,	size_t,	int, int)
		public lzo1y_999_compress_level
lzo1y_999_compress_level proc near	; CODE XREF: lzo1y_999_compress_dict+46p
					; lzo1y_999_compress+48p

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h
arg_1C		= dword	ptr  24h
arg_20		= dword	ptr  28h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		cmp	[ebp+arg_20], 0
		jle	short loc_6CB9C501
		cmp	[ebp+arg_20], 9
		jle	short loc_6CB9C50B

loc_6CB9C501:				; CODE XREF: lzo1y_999_compress_level+Dj
		mov	eax, 0FFFFFFFFh
		jmp	loc_6CB9C5C9
; ---------------------------------------------------------------------------

loc_6CB9C50B:				; CODE XREF: lzo1y_999_compress_level+13j
		sub	[ebp+arg_20], 1
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA7210
		mov	edi, [eax+4]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA7210
		mov	esi, [eax]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA7200
		mov	ebx, [eax+8]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA7200
		mov	ecx, [eax+4]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA7200
		mov	eax, [eax]
		mov	[esp+58h+var_24], edi ;	int
		mov	[esp+58h+var_28], esi ;	int
		mov	[esp+58h+var_2C], 0 ; int
		mov	[esp+58h+var_30], ebx ;	int
		mov	[esp+58h+var_34], ecx ;	int
		mov	[esp+58h+var_38], eax ;	int
		mov	eax, [ebp+arg_1C]
		mov	[esp+58h+var_3C], eax ;	int
		mov	eax, [ebp+arg_18]
		mov	[esp+58h+var_40], eax ;	size_t
		mov	eax, [ebp+arg_14]
		mov	[esp+58h+var_44], eax ;	void *
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+var_48], eax ;	int
		mov	eax, [ebp+arg_C]
		mov	[esp+58h+var_4C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+58h+var_50], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+58h+var_54], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+58h+var_58], eax ;	int
		call	lzo1y_999_compress_internal

loc_6CB9C5C9:				; CODE XREF: lzo1y_999_compress_level+1Aj
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
lzo1y_999_compress_level endp

; Exported entry  97. lzo1y_999_compress_dict

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1y_999_compress_dict(int, int,	int, int, int, void *, size_t)
		public lzo1y_999_compress_dict
lzo1y_999_compress_dict	proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	[esp+38h+var_18], 8 ; int
		mov	[esp+38h+var_1C], 0 ; int
		mov	eax, [ebp+arg_18]
		mov	[esp+38h+var_20], eax ;	size_t
		mov	eax, [ebp+arg_14]
		mov	[esp+38h+var_24], eax ;	void *
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax ;	int
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax ;	int
		call	lzo1y_999_compress_level
		leave
		retn
lzo1y_999_compress_dict	endp

; Exported entry  96. lzo1y_999_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1y_999_compress
lzo1y_999_compress proc	near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	[esp+38h+var_18], 8 ; int
		mov	[esp+38h+var_1C], 0 ; int
		mov	[esp+38h+var_20], 0 ; size_t
		mov	[esp+38h+var_24], 0 ; void *
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax ;	int
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax ;	int
		call	lzo1y_999_compress_level
		leave
		retn
lzo1y_999_compress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 100. lzo1y_decompress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1y_decompress
lzo1y_decompress proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CB9C6F0
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 3
		ja	short loc_6CB9C6CA
		jmp	loc_6CB9CAD9
; ---------------------------------------------------------------------------

loc_6CB9C6CA:				; CODE XREF: lzo1y_decompress+49j
					; lzo1y_decompress+6Fj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9C6CA
		jmp	loc_6CB9C7CC
; ---------------------------------------------------------------------------

loc_6CB9C6F0:				; CODE XREF: lzo1y_decompress+2Ej
					; lzo1y_decompress+45Aj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CB9C70D
		jmp	loc_6CB9C857
; ---------------------------------------------------------------------------

loc_6CB9C70D:				; CODE XREF: lzo1y_decompress+8Cj
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9C744
		jmp	short loc_6CB9C720
; ---------------------------------------------------------------------------

loc_6CB9C715:				; CODE XREF: lzo1y_decompress+AEj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CB9C720:				; CODE XREF: lzo1y_decompress+99j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9C715
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 0Fh
		mov	[ebp+var_C], eax

loc_6CB9C744:				; CODE XREF: lzo1y_decompress+97j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jz	short loc_6CB9C7CC
		cmp	[ebp+var_C], 3
		jbe	short loc_6CB9C7AB

loc_6CB9C766:				; CODE XREF: lzo1y_decompress+106j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB9C766
		cmp	[ebp+var_C], 0
		jz	short loc_6CB9C7CC

loc_6CB9C788:				; CODE XREF: lzo1y_decompress+12Dj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9C788
		jmp	short loc_6CB9C7CC
; ---------------------------------------------------------------------------

loc_6CB9C7AB:				; CODE XREF: lzo1y_decompress+EAj
					; lzo1y_decompress+150j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9C7AB

loc_6CB9C7CC:				; CODE XREF: lzo1y_decompress+71j
					; lzo1y_decompress+E4j	...
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CB9C7E6
		jmp	short loc_6CB9C857
; ---------------------------------------------------------------------------

loc_6CB9C7E6:				; CODE XREF: lzo1y_decompress+168j
		mov	eax, [ebp+var_4]
		sub	eax, 401h
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB9CABB
; ---------------------------------------------------------------------------

loc_6CB9C857:				; CODE XREF: lzo1y_decompress+8Ej
					; lzo1y_decompress+16Aj ...
		cmp	[ebp+var_C], 3Fh
		jbe	short loc_6CB9C89C
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		and	eax, 3
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 4
		sub	eax, 3
		mov	[ebp+var_C], eax
		jmp	loc_6CB9CA6C
; ---------------------------------------------------------------------------

loc_6CB9C89C:				; CODE XREF: lzo1y_decompress+1E1j
		cmp	[ebp+var_C], 1Fh
		jbe	short loc_6CB9C901
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9C8DD
		jmp	short loc_6CB9C8B9
; ---------------------------------------------------------------------------

loc_6CB9C8AE:				; CODE XREF: lzo1y_decompress+247j
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CB9C8B9:				; CODE XREF: lzo1y_decompress+232j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9C8AE
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CB9C8DD:				; CODE XREF: lzo1y_decompress+230j
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		movzx	eax, word ptr [eax]
		shr	ax, 2
		movzx	eax, ax
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		jmp	loc_6CB9C9FC
; ---------------------------------------------------------------------------

loc_6CB9C901:				; CODE XREF: lzo1y_decompress+226j
		cmp	[ebp+var_C], 0Fh
		jbe	loc_6CB9C9A4
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		and	eax, 8
		shl	eax, 0Bh
		neg	eax
		add	[ebp+var_10], eax
		and	[ebp+var_C], 7
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9C95A
		jmp	short loc_6CB9C936
; ---------------------------------------------------------------------------

loc_6CB9C92B:				; CODE XREF: lzo1y_decompress+2C4j
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CB9C936:				; CODE XREF: lzo1y_decompress+2AFj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9C92B
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 7
		mov	[ebp+var_C], eax

loc_6CB9C95A:				; CODE XREF: lzo1y_decompress+2ADj
		mov	eax, [ebp+var_8]
		movzx	eax, word ptr [eax]
		shr	ax, 2
		movzx	eax, ax
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CB9C99B
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jz	loc_6CB9CB57
		jmp	loc_6CB9CB41
; ---------------------------------------------------------------------------

loc_6CB9C99B:				; CODE XREF: lzo1y_decompress+2FCj
		sub	[ebp+var_10], 4000h
		jmp	short loc_6CB9C9FC
; ---------------------------------------------------------------------------

loc_6CB9C9A4:				; CODE XREF: lzo1y_decompress+28Bj
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB9CABB
; ---------------------------------------------------------------------------

loc_6CB9C9FC:				; CODE XREF: lzo1y_decompress+282j
					; lzo1y_decompress+328j
		cmp	[ebp+var_C], 5
		jbe	short loc_6CB9CA6C
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CB9CA6C
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 2

loc_6CB9CA27:				; CODE XREF: lzo1y_decompress+3C7j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB9CA27
		cmp	[ebp+var_C], 0
		jz	short loc_6CB9CA6A

loc_6CB9CA49:				; CODE XREF: lzo1y_decompress+3EEj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9CA49

loc_6CB9CA6A:				; CODE XREF: lzo1y_decompress+3CDj
		jmp	short loc_6CB9CABB
; ---------------------------------------------------------------------------

loc_6CB9CA6C:				; CODE XREF: lzo1y_decompress+21Dj
					; lzo1y_decompress+386j ...
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB9CA9A:				; CODE XREF: lzo1y_decompress+43Fj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9CA9A

loc_6CB9CABB:				; CODE XREF: lzo1y_decompress+1D8j
					; lzo1y_decompress+37Dj ...
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9CAD9
		nop
		jmp	loc_6CB9C6F0
; ---------------------------------------------------------------------------

loc_6CB9CAD9:				; CODE XREF: lzo1y_decompress+4Bj
					; lzo1y_decompress+457j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 1
		jbe	short loc_6CB9CB2A
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 2
		jbe	short loc_6CB9CB2A
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB9CB2A:				; CODE XREF: lzo1y_decompress+47Aj
					; lzo1y_decompress+497j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		jmp	loc_6CB9C857
; ---------------------------------------------------------------------------

loc_6CB9CB41:				; CODE XREF: lzo1y_decompress+31Cj
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CB9CB50
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CB9CB5C
; ---------------------------------------------------------------------------

loc_6CB9CB50:				; CODE XREF: lzo1y_decompress+4CDj
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB9CB5C
; ---------------------------------------------------------------------------

loc_6CB9CB57:				; CODE XREF: lzo1y_decompress+316j
		mov	eax, 0

locret_6CB9CB5C:			; CODE XREF: lzo1y_decompress+4D4j
					; lzo1y_decompress+4DBj
		leave
		retn
lzo1y_decompress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 106. lzo1y_decompress_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1y_decompress_safe
lzo1y_decompress_safe proc near		; CODE XREF: lzo1y_decompress_asm_safe+28p
					; lzo1y_decompress_asm_fast_safe+28p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB9CBAC
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9CBAC:				; CODE XREF: lzo1y_decompress_safe+3Bj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CB9CC29
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 3
		ja	short loc_6CB9CBD6
		jmp	loc_6CB9D1AB
; ---------------------------------------------------------------------------

loc_6CB9CBD6:				; CODE XREF: lzo1y_decompress_safe+65j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB9CBEA
		jmp	loc_6CB9D275
; ---------------------------------------------------------------------------

loc_6CB9CBEA:				; CODE XREF: lzo1y_decompress_safe+79j
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB9CC03
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9CC03:				; CODE XREF: lzo1y_decompress_safe+92j
					; lzo1y_decompress_safe+B8j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9CC03
		jmp	loc_6CB9CD68
; ---------------------------------------------------------------------------

loc_6CB9CC29:				; CODE XREF: lzo1y_decompress_safe+4Aj
					; lzo1y_decompress_safe+63Cj
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CB9CC3D
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9CC3D:				; CODE XREF: lzo1y_decompress_safe+CCj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CB9CC5A
		jmp	loc_6CB9CE26
; ---------------------------------------------------------------------------

loc_6CB9CC5A:				; CODE XREF: lzo1y_decompress_safe+E9j
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9CCAE
		jmp	short loc_6CB9CC8A
; ---------------------------------------------------------------------------

loc_6CB9CC62:				; CODE XREF: lzo1y_decompress_safe+128j
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CB9CC7B
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9CC7B:				; CODE XREF: lzo1y_decompress_safe+10Aj
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB9CC8A
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9CC8A:				; CODE XREF: lzo1y_decompress_safe+F6j
					; lzo1y_decompress_safe+119j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9CC62
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 0Fh
		mov	[ebp+var_C], eax

loc_6CB9CCAE:				; CODE XREF: lzo1y_decompress_safe+F4j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB9CCC7
		jmp	loc_6CB9D275
; ---------------------------------------------------------------------------

loc_6CB9CCC7:				; CODE XREF: lzo1y_decompress_safe+156j
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 6
		cmp	eax, edx
		jnb	short loc_6CB9CCE0
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9CCE0:				; CODE XREF: lzo1y_decompress_safe+16Fj
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jz	short loc_6CB9CD68
		cmp	[ebp+var_C], 3
		jbe	short loc_6CB9CD47

loc_6CB9CD02:				; CODE XREF: lzo1y_decompress_safe+1B2j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB9CD02
		cmp	[ebp+var_C], 0
		jz	short loc_6CB9CD68

loc_6CB9CD24:				; CODE XREF: lzo1y_decompress_safe+1D9j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9CD24
		jmp	short loc_6CB9CD68
; ---------------------------------------------------------------------------

loc_6CB9CD47:				; CODE XREF: lzo1y_decompress_safe+196j
					; lzo1y_decompress_safe+1FCj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9CD47

loc_6CB9CD68:				; CODE XREF: lzo1y_decompress_safe+BAj
					; lzo1y_decompress_safe+190j ...
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CB9CD85
		jmp	loc_6CB9CE26
; ---------------------------------------------------------------------------

loc_6CB9CD85:				; CODE XREF: lzo1y_decompress_safe+214j
		mov	eax, [ebp+var_4]
		sub	eax, 401h
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB9D28D
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB9D28D
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CB9CDE2
		jmp	loc_6CB9D275
; ---------------------------------------------------------------------------

loc_6CB9CDE2:				; CODE XREF: lzo1y_decompress_safe+271j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB9D18D
; ---------------------------------------------------------------------------

loc_6CB9CE26:				; CODE XREF: lzo1y_decompress_safe+EBj
					; lzo1y_decompress_safe+216j ...
		cmp	[ebp+var_C], 3Fh
		jbe	short loc_6CB9CEA0
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		and	eax, 3
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 4
		sub	eax, 3
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB9D28D
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB9D28D
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CB9CE9B
		jmp	loc_6CB9D275
; ---------------------------------------------------------------------------

loc_6CB9CE9B:				; CODE XREF: lzo1y_decompress_safe+32Aj
		jmp	loc_6CB9D13E
; ---------------------------------------------------------------------------

loc_6CB9CEA0:				; CODE XREF: lzo1y_decompress_safe+2C0j
		cmp	[ebp+var_C], 1Fh
		jbe	loc_6CB9CF3A
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9CF16
		jmp	short loc_6CB9CEDE
; ---------------------------------------------------------------------------

loc_6CB9CEB6:				; CODE XREF: lzo1y_decompress_safe+37Cj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CB9CECF
		jmp	loc_6CB9D275
; ---------------------------------------------------------------------------

loc_6CB9CECF:				; CODE XREF: lzo1y_decompress_safe+35Ej
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB9CEDE
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9CEDE:				; CODE XREF: lzo1y_decompress_safe+34Aj
					; lzo1y_decompress_safe+36Dj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9CEB6
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB9CF16
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9CF16:				; CODE XREF: lzo1y_decompress_safe+348j
					; lzo1y_decompress_safe+3A5j
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		movzx	eax, word ptr [eax]
		shr	ax, 2
		movzx	eax, ax
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		jmp	loc_6CB9D099
; ---------------------------------------------------------------------------

loc_6CB9CF3A:				; CODE XREF: lzo1y_decompress_safe+33Aj
		cmp	[ebp+var_C], 0Fh
		jbe	loc_6CB9D011
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		and	eax, 8
		shl	eax, 0Bh
		neg	eax
		add	[ebp+var_10], eax
		and	[ebp+var_C], 7
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9CFC4
		jmp	short loc_6CB9CF8C
; ---------------------------------------------------------------------------

loc_6CB9CF64:				; CODE XREF: lzo1y_decompress_safe+42Aj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CB9CF7D
		jmp	loc_6CB9D275
; ---------------------------------------------------------------------------

loc_6CB9CF7D:				; CODE XREF: lzo1y_decompress_safe+40Cj
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CB9CF8C
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9CF8C:				; CODE XREF: lzo1y_decompress_safe+3F8j
					; lzo1y_decompress_safe+41Bj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9CF64
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 7
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB9CFC4
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9CFC4:				; CODE XREF: lzo1y_decompress_safe+3F6j
					; lzo1y_decompress_safe+453j
		mov	eax, [ebp+var_8]
		movzx	eax, word ptr [eax]
		shr	ax, 2
		movzx	eax, ax
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CB9D005
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jz	loc_6CB9D256
		jmp	loc_6CB9D240
; ---------------------------------------------------------------------------

loc_6CB9D005:				; CODE XREF: lzo1y_decompress_safe+476j
		sub	[ebp+var_10], 4000h
		jmp	loc_6CB9D099
; ---------------------------------------------------------------------------

loc_6CB9D011:				; CODE XREF: lzo1y_decompress_safe+3D4j
		mov	eax, [ebp+var_4]
		sub	eax, 1
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		shr	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_10], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB9D28D
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB9D28D
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB9D06C
		jmp	loc_6CB9D275
; ---------------------------------------------------------------------------

loc_6CB9D06C:				; CODE XREF: lzo1y_decompress_safe+4FBj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB9D18D
; ---------------------------------------------------------------------------

loc_6CB9D099:				; CODE XREF: lzo1y_decompress_safe+3CBj
					; lzo1y_decompress_safe+4A2j
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CB9D28D
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CB9D28D
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CB9D0CE
		jmp	loc_6CB9D275
; ---------------------------------------------------------------------------

loc_6CB9D0CE:				; CODE XREF: lzo1y_decompress_safe+55Dj
		cmp	[ebp+var_C], 5
		jbe	short loc_6CB9D13E
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CB9D13E
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 2

loc_6CB9D0F9:				; CODE XREF: lzo1y_decompress_safe+5A9j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CB9D0F9
		cmp	[ebp+var_C], 0
		jz	short loc_6CB9D13C

loc_6CB9D11B:				; CODE XREF: lzo1y_decompress_safe+5D0j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9D11B

loc_6CB9D13C:				; CODE XREF: lzo1y_decompress_safe+5AFj
		jmp	short loc_6CB9D18D
; ---------------------------------------------------------------------------

loc_6CB9D13E:				; CODE XREF: lzo1y_decompress_safe:loc_6CB9CE9Bj
					; lzo1y_decompress_safe+568j ...
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB9D16C:				; CODE XREF: lzo1y_decompress_safe+621j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9D16C

loc_6CB9D18D:				; CODE XREF: lzo1y_decompress_safe+2B7j
					; lzo1y_decompress_safe+52Aj ...
		mov	eax, [ebp+var_8]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jnz	short loc_6CB9D1AB
		nop
		jmp	loc_6CB9CC29
; ---------------------------------------------------------------------------

loc_6CB9D1AB:				; CODE XREF: lzo1y_decompress_safe+67j
					; lzo1y_decompress_safe+639j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB9D1BF
		jmp	loc_6CB9D275
; ---------------------------------------------------------------------------

loc_6CB9D1BF:				; CODE XREF: lzo1y_decompress_safe+64Ej
		mov	edx, [ebp+var_14]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB9D1D8
		jmp	loc_6CB9D25D
; ---------------------------------------------------------------------------

loc_6CB9D1D8:				; CODE XREF: lzo1y_decompress_safe+667j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 1
		jbe	short loc_6CB9D229
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 2
		jbe	short loc_6CB9D229
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB9D229:				; CODE XREF: lzo1y_decompress_safe+689j
					; lzo1y_decompress_safe+6A6j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		jmp	loc_6CB9CE26
; ---------------------------------------------------------------------------

loc_6CB9D240:				; CODE XREF: lzo1y_decompress_safe+496j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CB9D24F
		mov	eax, 0FFFFFFF8h
		jmp	short loc_6CB9D25B
; ---------------------------------------------------------------------------

loc_6CB9D24F:				; CODE XREF: lzo1y_decompress_safe+6DCj
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB9D2A3
; ---------------------------------------------------------------------------

loc_6CB9D256:				; CODE XREF: lzo1y_decompress_safe+490j
		mov	eax, 0

loc_6CB9D25B:				; CODE XREF: lzo1y_decompress_safe+6E3j
		jmp	short locret_6CB9D2A3
; ---------------------------------------------------------------------------

loc_6CB9D25D:				; CODE XREF: lzo1y_decompress_safe+3Dj
					; lzo1y_decompress_safe+94j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB9D2A3
; ---------------------------------------------------------------------------

loc_6CB9D275:				; CODE XREF: lzo1y_decompress_safe+7Bj
					; lzo1y_decompress_safe+158j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFBh
		jmp	short locret_6CB9D2A3
; ---------------------------------------------------------------------------

loc_6CB9D28D:				; CODE XREF: lzo1y_decompress_safe+250j
					; lzo1y_decompress_safe+25Ej ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFAh

locret_6CB9D2A3:			; CODE XREF: lzo1y_decompress_safe+6EAj
					; lzo1y_decompress_safe:loc_6CB9D25Bj ...
		leave
		retn
lzo1y_decompress_safe endp

; Exported entry 104. lzo1y_decompress_asm_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1y_decompress_asm_safe
lzo1y_decompress_asm_safe proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		mov	eax, [ebp+arg_10]
		mov	[esp+14h+var_4], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+14h+var_8], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+14h+var_C], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+14h+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+14h+var_14], eax
		call	lzo1y_decompress_safe
		leave
		retn
lzo1y_decompress_asm_safe endp

; Exported entry 103. lzo1y_decompress_asm_fast_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1y_decompress_asm_fast_safe
lzo1y_decompress_asm_fast_safe proc near

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		mov	eax, [ebp+arg_10]
		mov	[esp+14h+var_4], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+14h+var_8], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+14h+var_C], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+14h+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+14h+var_14], eax
		call	lzo1y_decompress_safe
		leave
		retn
lzo1y_decompress_asm_fast_safe endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 105. lzo1y_decompress_dict_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1y_decompress_dict_safe
lzo1y_decompress_dict_safe proc	near

Dst		= dword	ptr -58h
Src		= dword	ptr -54h
Size		= dword	ptr -50h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_3C], eax
		cmp	[ebp+arg_14], 0
		jz	short loc_6CB9D35A
		cmp	[ebp+arg_18], 0BFFFh
		jbe	short loc_6CB9D34D
		mov	eax, [ebp+arg_18]
		sub	eax, 0BFFFh
		add	[ebp+arg_14], eax
		mov	[ebp+arg_18], 0BFFFh

loc_6CB9D34D:				; CODE XREF: lzo1y_decompress_dict_safe+2Bj
		mov	eax, [ebp+arg_18]
		mov	edx, [ebp+arg_14]
		add	eax, edx
		mov	[ebp+var_1C], eax
		jmp	short loc_6CB9D368
; ---------------------------------------------------------------------------

loc_6CB9D35A:				; CODE XREF: lzo1y_decompress_dict_safe+22j
		mov	[ebp+arg_18], 0
		mov	[ebp+var_1C], 0

loc_6CB9D368:				; CODE XREF: lzo1y_decompress_dict_safe+4Aj
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CB9D38C
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9D38C:				; CODE XREF: lzo1y_decompress_dict_safe+77j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CB9D409
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 3
		ja	short loc_6CB9D3B6
		jmp	loc_6CB9DB06
; ---------------------------------------------------------------------------

loc_6CB9D3B6:				; CODE XREF: lzo1y_decompress_dict_safe+A1j
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CB9D3CA
		jmp	loc_6CB9DBD0
; ---------------------------------------------------------------------------

loc_6CB9D3CA:				; CODE XREF: lzo1y_decompress_dict_safe+B5j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB9D3E3
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9D3E3:				; CODE XREF: lzo1y_decompress_dict_safe+CEj
					; lzo1y_decompress_dict_safe+F4j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9D3E3
		jmp	loc_6CB9D548
; ---------------------------------------------------------------------------

loc_6CB9D409:				; CODE XREF: lzo1y_decompress_dict_safe+86j
					; lzo1y_decompress_dict_safe+7F3j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CB9D41D
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9D41D:				; CODE XREF: lzo1y_decompress_dict_safe+108j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0Fh
		jbe	short loc_6CB9D43A
		jmp	loc_6CB9D6B7
; ---------------------------------------------------------------------------

loc_6CB9D43A:				; CODE XREF: lzo1y_decompress_dict_safe+125j
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9D48E
		jmp	short loc_6CB9D46A
; ---------------------------------------------------------------------------

loc_6CB9D442:				; CODE XREF: lzo1y_decompress_dict_safe+164j
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1
		cmp	[ebp+var_14], 0FFFFFE01h
		jbe	short loc_6CB9D45B
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9D45B:				; CODE XREF: lzo1y_decompress_dict_safe+146j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CB9D46A
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9D46A:				; CODE XREF: lzo1y_decompress_dict_safe+132j
					; lzo1y_decompress_dict_safe+155j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9D442
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_14]
		add	eax, edx
		add	eax, 0Fh
		mov	[ebp+var_14], eax

loc_6CB9D48E:				; CODE XREF: lzo1y_decompress_dict_safe+130j
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB9D4A7
		jmp	loc_6CB9DBD0
; ---------------------------------------------------------------------------

loc_6CB9D4A7:				; CODE XREF: lzo1y_decompress_dict_safe+192j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 6
		cmp	eax, edx
		jnb	short loc_6CB9D4C0
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9D4C0:				; CODE XREF: lzo1y_decompress_dict_safe+1ABj
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_C]
		mov	[eax], edx
		add	[ebp+var_C], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jz	short loc_6CB9D548
		cmp	[ebp+var_14], 3
		jbe	short loc_6CB9D527

loc_6CB9D4E2:				; CODE XREF: lzo1y_decompress_dict_safe+1EEj
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_C]
		mov	[eax], edx
		add	[ebp+var_C], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_14], 4
		cmp	[ebp+var_14], 3
		ja	short loc_6CB9D4E2
		cmp	[ebp+var_14], 0
		jz	short loc_6CB9D548

loc_6CB9D504:				; CODE XREF: lzo1y_decompress_dict_safe+215j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9D504
		jmp	short loc_6CB9D548
; ---------------------------------------------------------------------------

loc_6CB9D527:				; CODE XREF: lzo1y_decompress_dict_safe+1D2j
					; lzo1y_decompress_dict_safe+238j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9D527

loc_6CB9D548:				; CODE XREF: lzo1y_decompress_dict_safe+F6j
					; lzo1y_decompress_dict_safe+1CCj ...
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0Fh
		jbe	short loc_6CB9D565
		jmp	loc_6CB9D6B7
; ---------------------------------------------------------------------------

loc_6CB9D565:				; CODE XREF: lzo1y_decompress_dict_safe+250j
		mov	eax, [ebp+var_14]
		shr	eax, 2
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		add	eax, ecx
		add	eax, 401h
		mov	[ebp+var_18], eax
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CB9D59D
		jmp	loc_6CB9DBD0
; ---------------------------------------------------------------------------

loc_6CB9D59D:				; CODE XREF: lzo1y_decompress_dict_safe+288j
		mov	[ebp+var_14], 3
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_18]
		jb	short loc_6CB9D611
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_14]
		jb	short loc_6CB9D5EB
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_20]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	short loc_6CB9D60C
; ---------------------------------------------------------------------------

loc_6CB9D5EB:				; CODE XREF: lzo1y_decompress_dict_safe+2BAj
					; lzo1y_decompress_dict_safe+2FCj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_20]
		lea	ecx, [edx+1]
		mov	[ebp+var_20], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9D5EB

loc_6CB9D60C:				; CODE XREF: lzo1y_decompress_dict_safe+2DBj
		jmp	loc_6CB9DAE8
; ---------------------------------------------------------------------------

loc_6CB9D611:				; CODE XREF: lzo1y_decompress_dict_safe+2A3j
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+arg_18]
		jbe	short loc_6CB9D62B
		jmp	loc_6CB9DBE8
; ---------------------------------------------------------------------------

loc_6CB9D62B:				; CODE XREF: lzo1y_decompress_dict_safe+316j
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB9D693
		mov	eax, [ebp+var_18]
		sub	[ebp+var_14], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_24]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_18]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_24], eax

loc_6CB9D66D:				; CODE XREF: lzo1y_decompress_dict_safe+37Ej
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_24]
		lea	ecx, [edx+1]
		mov	[ebp+var_24], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9D66D
		jmp	loc_6CB9DAE8
; ---------------------------------------------------------------------------

loc_6CB9D693:				; CODE XREF: lzo1y_decompress_dict_safe+332j
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_24]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	loc_6CB9DAE8
; ---------------------------------------------------------------------------

loc_6CB9D6B7:				; CODE XREF: lzo1y_decompress_dict_safe+127j
					; lzo1y_decompress_dict_safe+252j ...
		cmp	[ebp+var_14], 3Fh
		jbe	short loc_6CB9D6F3
		mov	eax, [ebp+var_14]
		shr	eax, 2
		and	eax, 3
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		add	eax, ecx
		add	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		shr	eax, 4
		sub	eax, 3
		mov	[ebp+var_14], eax
		jmp	loc_6CB9D9C0
; ---------------------------------------------------------------------------

loc_6CB9D6F3:				; CODE XREF: lzo1y_decompress_dict_safe+3ADj
		cmp	[ebp+var_14], 1Fh
		jbe	loc_6CB9D795
		and	[ebp+var_14], 1Fh
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9D769
		jmp	short loc_6CB9D731
; ---------------------------------------------------------------------------

loc_6CB9D709:				; CODE XREF: lzo1y_decompress_dict_safe+42Bj
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1
		cmp	[ebp+var_14], 0FFFFFE01h
		jbe	short loc_6CB9D722
		jmp	loc_6CB9DBD0
; ---------------------------------------------------------------------------

loc_6CB9D722:				; CODE XREF: lzo1y_decompress_dict_safe+40Dj
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CB9D731
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9D731:				; CODE XREF: lzo1y_decompress_dict_safe+3F9j
					; lzo1y_decompress_dict_safe+41Cj
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9D709
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_14]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_14], eax
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB9D769
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9D769:				; CODE XREF: lzo1y_decompress_dict_safe+3F7j
					; lzo1y_decompress_dict_safe+454j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		lea	edx, [eax+1]
		mov	eax, [ebp+var_10]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		add	eax, edx
		mov	[ebp+var_18], eax
		add	[ebp+var_10], 2
		jmp	loc_6CB9D9C0
; ---------------------------------------------------------------------------

loc_6CB9D795:				; CODE XREF: lzo1y_decompress_dict_safe+3E9j
		cmp	[ebp+var_14], 0Fh
		jbe	loc_6CB9D870
		mov	eax, [ebp+var_14]
		and	eax, 8
		shl	eax, 0Bh
		mov	[ebp+var_18], eax
		and	[ebp+var_14], 7
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9D817
		jmp	short loc_6CB9D7DF
; ---------------------------------------------------------------------------

loc_6CB9D7B7:				; CODE XREF: lzo1y_decompress_dict_safe+4D9j
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1
		cmp	[ebp+var_14], 0FFFFFE01h
		jbe	short loc_6CB9D7D0
		jmp	loc_6CB9DBD0
; ---------------------------------------------------------------------------

loc_6CB9D7D0:				; CODE XREF: lzo1y_decompress_dict_safe+4BBj
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CB9D7DF
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9D7DF:				; CODE XREF: lzo1y_decompress_dict_safe+4A7j
					; lzo1y_decompress_dict_safe+4CAj
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9D7B7
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_14]
		add	eax, edx
		add	eax, 7
		mov	[ebp+var_14], eax
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB9D817
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9D817:				; CODE XREF: lzo1y_decompress_dict_safe+4A5j
					; lzo1y_decompress_dict_safe+502j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		mov	edx, [ebp+var_10]
		add	edx, 1
		movzx	edx, byte ptr [edx]
		movzx	edx, dl
		shl	edx, 6
		add	eax, edx
		add	[ebp+var_18], eax
		add	[ebp+var_10], 2
		cmp	[ebp+var_18], 0
		jnz	short loc_6CB9D864
		nop
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_38]
		jz	loc_6CB9DBB1
		jmp	loc_6CB9DB9B
; ---------------------------------------------------------------------------

loc_6CB9D864:				; CODE XREF: lzo1y_decompress_dict_safe+531j
		add	[ebp+var_18], 4000h
		jmp	loc_6CB9D9C0
; ---------------------------------------------------------------------------

loc_6CB9D870:				; CODE XREF: lzo1y_decompress_dict_safe+48Bj
		mov	eax, [ebp+var_14]
		shr	eax, 2
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		add	eax, ecx
		add	eax, 1
		mov	[ebp+var_18], eax
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CB9D8A6
		jmp	loc_6CB9DBD0
; ---------------------------------------------------------------------------

loc_6CB9D8A6:				; CODE XREF: lzo1y_decompress_dict_safe+591j
		mov	[ebp+var_14], 2
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_18]
		jb	short loc_6CB9D91A
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_14]
		jb	short loc_6CB9D8F4
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_28]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	short loc_6CB9D915
; ---------------------------------------------------------------------------

loc_6CB9D8F4:				; CODE XREF: lzo1y_decompress_dict_safe+5C3j
					; lzo1y_decompress_dict_safe+605j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_28]
		lea	ecx, [edx+1]
		mov	[ebp+var_28], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9D8F4

loc_6CB9D915:				; CODE XREF: lzo1y_decompress_dict_safe+5E4j
		jmp	loc_6CB9DAE8
; ---------------------------------------------------------------------------

loc_6CB9D91A:				; CODE XREF: lzo1y_decompress_dict_safe+5ACj
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+arg_18]
		jbe	short loc_6CB9D934
		jmp	loc_6CB9DBE8
; ---------------------------------------------------------------------------

loc_6CB9D934:				; CODE XREF: lzo1y_decompress_dict_safe+61Fj
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, edx
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB9D99C
		mov	eax, [ebp+var_18]
		sub	[ebp+var_14], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_18]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_2C], eax

loc_6CB9D976:				; CODE XREF: lzo1y_decompress_dict_safe+687j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_2C]
		lea	ecx, [edx+1]
		mov	[ebp+var_2C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9D976
		jmp	loc_6CB9DAE8
; ---------------------------------------------------------------------------

loc_6CB9D99C:				; CODE XREF: lzo1y_decompress_dict_safe+63Bj
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	loc_6CB9DAE8
; ---------------------------------------------------------------------------

loc_6CB9D9C0:				; CODE XREF: lzo1y_decompress_dict_safe+3E0j
					; lzo1y_decompress_dict_safe+482j ...
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CB9D9D9
		jmp	loc_6CB9DBD0
; ---------------------------------------------------------------------------

loc_6CB9D9D9:				; CODE XREF: lzo1y_decompress_dict_safe+6C4j
		add	[ebp+var_14], 2
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_18]
		jb	short loc_6CB9DA4A
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_14]
		jb	short loc_6CB9DA24
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_30]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	short loc_6CB9DA45
; ---------------------------------------------------------------------------

loc_6CB9DA24:				; CODE XREF: lzo1y_decompress_dict_safe+6F3j
					; lzo1y_decompress_dict_safe+735j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_30]
		lea	ecx, [edx+1]
		mov	[ebp+var_30], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9DA24

loc_6CB9DA45:				; CODE XREF: lzo1y_decompress_dict_safe+714j
		jmp	loc_6CB9DAE8
; ---------------------------------------------------------------------------

loc_6CB9DA4A:				; CODE XREF: lzo1y_decompress_dict_safe+6DCj
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+arg_18]
		jbe	short loc_6CB9DA64
		jmp	loc_6CB9DBE8
; ---------------------------------------------------------------------------

loc_6CB9DA64:				; CODE XREF: lzo1y_decompress_dict_safe+74Fj
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB9DAC9
		mov	eax, [ebp+var_18]
		sub	[ebp+var_14], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_34]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_18]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_34], eax

loc_6CB9DAA6:				; CODE XREF: lzo1y_decompress_dict_safe+7B7j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_34]
		lea	ecx, [edx+1]
		mov	[ebp+var_34], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9DAA6
		jmp	short loc_6CB9DAE8
; ---------------------------------------------------------------------------

loc_6CB9DAC9:				; CODE XREF: lzo1y_decompress_dict_safe+76Bj
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_34]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax

loc_6CB9DAE8:				; CODE XREF: lzo1y_decompress_dict_safe:loc_6CB9D60Cj
					; lzo1y_decompress_dict_safe+380j ...
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9DB06
		nop
		jmp	loc_6CB9D409
; ---------------------------------------------------------------------------

loc_6CB9DB06:				; CODE XREF: lzo1y_decompress_dict_safe+A3j
					; lzo1y_decompress_dict_safe+7F0j
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CB9DB1A
		jmp	loc_6CB9DBD0
; ---------------------------------------------------------------------------

loc_6CB9DB1A:				; CODE XREF: lzo1y_decompress_dict_safe+805j
		mov	edx, [ebp+var_38]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CB9DB33
		jmp	loc_6CB9DBB8
; ---------------------------------------------------------------------------

loc_6CB9DB33:				; CODE XREF: lzo1y_decompress_dict_safe+81Ej
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_14], 1
		jbe	short loc_6CB9DB84
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_14], 2
		jbe	short loc_6CB9DB84
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB9DB84:				; CODE XREF: lzo1y_decompress_dict_safe+840j
					; lzo1y_decompress_dict_safe+85Dj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		jmp	loc_6CB9D6B7
; ---------------------------------------------------------------------------

loc_6CB9DB9B:				; CODE XREF: lzo1y_decompress_dict_safe+551j
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_38]
		jnb	short loc_6CB9DBAA
		mov	eax, 0FFFFFFF8h
		jmp	short loc_6CB9DBB6
; ---------------------------------------------------------------------------

loc_6CB9DBAA:				; CODE XREF: lzo1y_decompress_dict_safe+893j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB9DBFE
; ---------------------------------------------------------------------------

loc_6CB9DBB1:				; CODE XREF: lzo1y_decompress_dict_safe+54Bj
		mov	eax, 0

loc_6CB9DBB6:				; CODE XREF: lzo1y_decompress_dict_safe+89Aj
		jmp	short locret_6CB9DBFE
; ---------------------------------------------------------------------------

loc_6CB9DBB8:				; CODE XREF: lzo1y_decompress_dict_safe+79j
					; lzo1y_decompress_dict_safe+D0j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB9DBFE
; ---------------------------------------------------------------------------

loc_6CB9DBD0:				; CODE XREF: lzo1y_decompress_dict_safe+B7j
					; lzo1y_decompress_dict_safe+194j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFBh
		jmp	short locret_6CB9DBFE
; ---------------------------------------------------------------------------

loc_6CB9DBE8:				; CODE XREF: lzo1y_decompress_dict_safe+318j
					; lzo1y_decompress_dict_safe+621j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFAh

locret_6CB9DBFE:			; CODE XREF: lzo1y_decompress_dict_safe+8A1j
					; lzo1y_decompress_dict_safe:loc_6CB9DBB6j ...
		leave
		retn
lzo1y_decompress_dict_safe endp

; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9DC0A	proc near		; CODE XREF: lzo1y_optimize+2AAp
					; lzo1y_optimize+338p

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax], dl
		cmp	[ebp+arg_8], 1
		jnz	short loc_6CB9DC2E
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax]
		mov	[edx], al
		jmp	short loc_6CB9DC3D
; ---------------------------------------------------------------------------

loc_6CB9DC2E:				; CODE XREF: sub_6CB9DC0A+12j
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax+1]
		mov	[edx], al

loc_6CB9DC3D:				; CODE XREF: sub_6CB9DC0A+22j
		pop	ebp
		retn
sub_6CB9DC0A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9DC3F	proc near		; CODE XREF: lzo1y_optimize+4CBp
					; lzo1y_optimize+6D7p ...

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax], dl
		cmp	[ebp+arg_8], 1
		jnz	short loc_6CB9DC6E
		mov	eax, [ebp+arg_0]
		lea	ecx, [eax+2]
		mov	eax, [ebp+arg_0]
		add	eax, 1
		mov	edx, [ebp+arg_4]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		movzx	eax, byte ptr [eax]
		mov	[ecx], al
		jmp	short loc_6CB9DCB1
; ---------------------------------------------------------------------------

loc_6CB9DC6E:				; CODE XREF: sub_6CB9DC3F+12j
		cmp	[ebp+arg_8], 2
		jnz	short loc_6CB9DC93
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax+1]
		mov	[edx], al
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax]
		mov	[edx], al
		jmp	short loc_6CB9DCB1
; ---------------------------------------------------------------------------

loc_6CB9DC93:				; CODE XREF: sub_6CB9DC3F+33j
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax+1]
		mov	[edx], al
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax+2]
		mov	[edx], al

loc_6CB9DCB1:				; CODE XREF: sub_6CB9DC3F+2Dj
					; sub_6CB9DC3F+52j
		pop	ebp
		retn
sub_6CB9DC3F	endp

; Exported entry 107. lzo1y_optimize

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1y_optimize
lzo1y_optimize	proc near

Dst		= dword	ptr -58h
Src		= dword	ptr -54h
Size		= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	[ebp+var_1C], 0
		mov	[ebp+var_20], 0
		mov	[ebp+var_24], 0FFFFFFFFh
		mov	[ebp+var_28], 0
		mov	[ebp+var_2C], 0
		mov	[ebp+var_30], 0
		mov	[ebp+var_34], 0
		mov	[ebp+var_38], 0
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CB9DD4D
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 3
		ja	short loc_6CB9DD48
		jmp	loc_6CB9E54B
; ---------------------------------------------------------------------------

loc_6CB9DD48:				; CODE XREF: lzo1y_optimize+8Ej
		jmp	loc_6CB9DDFC
; ---------------------------------------------------------------------------

loc_6CB9DD4D:				; CODE XREF: lzo1y_optimize+73j
		jmp	loc_6CB9E592
; ---------------------------------------------------------------------------

loc_6CB9DD52:				; CODE XREF: lzo1y_optimize+8EDj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0Fh
		jbe	short loc_6CB9DD6F
		jmp	loc_6CB9E099
; ---------------------------------------------------------------------------

loc_6CB9DD6F:				; CODE XREF: lzo1y_optimize+B5j
		mov	eax, [ebp+var_10]
		sub	eax, 1
		mov	[ebp+var_1C], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9DDAE
		mov	[ebp+var_14], 0Fh
		jmp	short loc_6CB9DD92
; ---------------------------------------------------------------------------

loc_6CB9DD87:				; CODE XREF: lzo1y_optimize+E7j
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1

loc_6CB9DD92:				; CODE XREF: lzo1y_optimize+D2j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9DD87
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_14], eax

loc_6CB9DDAE:				; CODE XREF: lzo1y_optimize+C9j
		mov	eax, [ebp+var_14]
		add	eax, 3
		mov	[ebp+var_20], eax

loc_6CB9DDB7:				; CODE XREF: lzo1y_optimize+3AEj
					; lzo1y_optimize+532j ...
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB9DDFC:				; CODE XREF: lzo1y_optimize:loc_6CB9DD48j
					; lzo1y_optimize+168j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9DDFC
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0Fh
		jbe	short loc_6CB9DE3A
		jmp	loc_6CB9E099
; ---------------------------------------------------------------------------

loc_6CB9DE3A:				; CODE XREF: lzo1y_optimize+180j
		mov	eax, [ebp+var_C]
		sub	eax, 401h
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		shr	eax, 2
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	[ebp+var_20], 0
		jmp	loc_6CB9E50D
; ---------------------------------------------------------------------------

loc_6CB9DEB8:				; CODE XREF: lzo1y_optimize+8D9j
		cmp	[ebp+var_14], 0Fh
		ja	loc_6CB9E099
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		shr	eax, 2
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_18], eax
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CB9DEF8
		jmp	loc_6CB9E066
; ---------------------------------------------------------------------------

loc_6CB9DEF8:				; CODE XREF: lzo1y_optimize+23Ej
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_44], eax
		cmp	[ebp+var_44], 0
		jnz	short loc_6CB9DF6B
		cmp	[ebp+var_20], 1
		jnz	short loc_6CB9DF6B
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 0Fh
		jbe	short loc_6CB9DF6B
		mov	eax, [ebp+var_44]
		mov	[ebp+var_24], eax
		add	[ebp+var_20], 2
		mov	eax, [ebp+var_1C]
		movzx	eax, byte ptr [eax]
		and	eax, 0FFFFFFFCh
		mov	edx, eax
		mov	eax, [ebp+var_20]
		or	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_10]
		sub	edx, 2
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Src], eax
		mov	[esp+58h+Dst], edx
		call	sub_6CB9DC0A
		add	[ebp+var_28], 1
		jmp	loc_6CB9E066
; ---------------------------------------------------------------------------

loc_6CB9DF6B:				; CODE XREF: lzo1y_optimize+25Bj
					; lzo1y_optimize+261j ...
		cmp	[ebp+var_44], 0
		jnz	loc_6CB9E066
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 0Fh
		ja	loc_6CB9E066
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	loc_6CB9E066
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_20]
		add	eax, edx
		add	eax, 2
		cmp	eax, 0Fh
		ja	loc_6CB9E066
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_1C]
		movzx	eax, byte ptr [eax]
		and	eax, 0FFFFFFFCh
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_10]
		sub	edx, 2
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Src], eax
		mov	[esp+58h+Dst], edx
		call	sub_6CB9DC0A
		add	[ebp+var_1C], 2
		cmp	[ebp+var_20], 0
		jz	short loc_6CB9E016
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_20]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_1C]
		mov	[esp+58h+Src], eax ; Src
		mov	[esp+58h+Dst], edx ; Dst
		call	_memmove

loc_6CB9E016:				; CODE XREF: lzo1y_optimize+345j
		mov	eax, [ebp+var_20]
		mov	edx, [ebp+var_14]
		add	eax, edx
		add	eax, 5
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		lea	edx, [eax-3]
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		add	[ebp+var_2C], 1
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB9DDB7
; ---------------------------------------------------------------------------

loc_6CB9E066:				; CODE XREF: lzo1y_optimize+240j
					; lzo1y_optimize+2B3j ...
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB9E50D
; ---------------------------------------------------------------------------

loc_6CB9E099:				; CODE XREF: lzo1y_optimize+B7j
					; lzo1y_optimize+182j ...
		cmp	[ebp+var_14], 3Fh
		jbe	loc_6CB9E1EA
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		shr	eax, 2
		and	eax, 3
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 2
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		shr	eax, 4
		sub	eax, 3
		mov	[ebp+var_14], eax
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CB9E0E8
		jmp	loc_6CB9E4BE
; ---------------------------------------------------------------------------

loc_6CB9E0E8:				; CODE XREF: lzo1y_optimize+42Ej
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_44], eax
		cmp	[ebp+var_14], 1
		jnz	loc_6CB9E4BE
		cmp	[ebp+var_20], 3
		jbe	loc_6CB9E4BE
		cmp	[ebp+var_44], 0
		jnz	loc_6CB9E4BE
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 0Fh
		ja	loc_6CB9E4BE
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	loc_6CB9E4BE
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_20]
		add	eax, edx
		add	eax, 3
		cmp	eax, 0Fh
		ja	loc_6CB9E4BE
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_10]
		sub	edx, 3
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Src], eax
		mov	[esp+58h+Dst], edx
		call	sub_6CB9DC3F
		mov	eax, [ebp+var_20]
		mov	edx, [ebp+var_14]
		add	eax, edx
		add	eax, 6
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		lea	edx, [eax-3]
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		add	[ebp+var_30], 1
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB9DDB7
; ---------------------------------------------------------------------------

loc_6CB9E1EA:				; CODE XREF: lzo1y_optimize+3EAj
		cmp	[ebp+var_14], 1Fh
		jbe	short loc_6CB9E266
		and	[ebp+var_14], 1Fh
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9E22A
		mov	[ebp+var_14], 1Fh
		jmp	short loc_6CB9E20E
; ---------------------------------------------------------------------------

loc_6CB9E203:				; CODE XREF: lzo1y_optimize+563j
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1

loc_6CB9E20E:				; CODE XREF: lzo1y_optimize+54Ej
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9E203
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_14], eax

loc_6CB9E22A:				; CODE XREF: lzo1y_optimize+545j
		mov	eax, [ebp+var_C]
		sub	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		neg	eax
		add	[ebp+var_18], eax
		jmp	loc_6CB9E314
; ---------------------------------------------------------------------------

loc_6CB9E266:				; CODE XREF: lzo1y_optimize+53Bj
		mov	eax, [ebp+var_C]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_14]
		and	eax, 8
		shl	eax, 0Bh
		neg	eax
		add	[ebp+var_18], eax
		and	[ebp+var_14], 7
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9E2B4
		mov	[ebp+var_14], 7
		jmp	short loc_6CB9E298
; ---------------------------------------------------------------------------

loc_6CB9E28D:				; CODE XREF: lzo1y_optimize+5EDj
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1

loc_6CB9E298:				; CODE XREF: lzo1y_optimize+5D8j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CB9E28D
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_14], eax

loc_6CB9E2B4:				; CODE XREF: lzo1y_optimize+5CFj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		neg	eax
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB9E30D
		nop
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_3C]
		jz	loc_6CB9E5D4
		jmp	loc_6CB9E5BE
; ---------------------------------------------------------------------------

loc_6CB9E30D:				; CODE XREF: lzo1y_optimize+635j
		sub	[ebp+var_18], 4000h

loc_6CB9E314:				; CODE XREF: lzo1y_optimize+5AEj
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CB9E31F
		jmp	loc_6CB9E4BE
; ---------------------------------------------------------------------------

loc_6CB9E31F:				; CODE XREF: lzo1y_optimize+665j
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_44], eax
		cmp	[ebp+var_14], 1
		jnz	short loc_6CB9E398
		cmp	[ebp+var_20], 0
		jnz	short loc_6CB9E398
		cmp	[ebp+var_44], 0
		jnz	short loc_6CB9E398
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 0Fh
		jbe	short loc_6CB9E398
		mov	eax, [ebp+var_44]
		mov	[ebp+var_24], eax
		add	[ebp+var_20], 3
		mov	eax, [ebp+var_1C]
		movzx	eax, byte ptr [eax]
		and	eax, 0FFFFFFFCh
		mov	edx, eax
		mov	eax, [ebp+var_20]
		or	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_10]
		sub	edx, 3
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Src], eax
		mov	[esp+58h+Dst], edx
		call	sub_6CB9DC3F
		add	[ebp+var_34], 1
		jmp	loc_6CB9E4BE
; ---------------------------------------------------------------------------

loc_6CB9E398:				; CODE XREF: lzo1y_optimize+682j
					; lzo1y_optimize+688j ...
		cmp	[ebp+var_14], 1
		jnz	loc_6CB9E4BE
		cmp	[ebp+var_20], 3
		ja	loc_6CB9E4BE
		cmp	[ebp+var_44], 0
		jnz	loc_6CB9E4BE
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 0Fh
		ja	loc_6CB9E4BE
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	loc_6CB9E4BE
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_20]
		add	eax, edx
		add	eax, 3
		cmp	eax, 0Fh
		ja	loc_6CB9E4BE
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_1C]
		movzx	eax, byte ptr [eax]
		and	eax, 0FFFFFFFCh
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_10]
		sub	edx, 3
		mov	[esp+58h+Size],	eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Src], eax
		mov	[esp+58h+Dst], edx
		call	sub_6CB9DC3F
		add	[ebp+var_1C], 2
		cmp	[ebp+var_20], 0
		jz	short loc_6CB9E457
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_20]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_1C]
		mov	[esp+58h+Src], eax ; Src
		mov	[esp+58h+Dst], edx ; Dst
		call	_memmove

loc_6CB9E457:				; CODE XREF: lzo1y_optimize+786j
		mov	eax, [ebp+var_20]
		mov	edx, [ebp+var_14]
		add	eax, edx
		add	eax, 6
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		lea	edx, [eax-3]
		mov	eax, [ebp+var_1C]
		mov	[eax], dl
		add	[ebp+var_38], 1
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CB9DDB7
; ---------------------------------------------------------------------------

loc_6CB9E4BE:				; CODE XREF: lzo1y_optimize+430j
					; lzo1y_optimize+44Bj ...
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CB9E4EC:				; CODE XREF: lzo1y_optimize+858j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_18]
		lea	ecx, [edx+1]
		mov	[ebp+var_18], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9E4EC

loc_6CB9E50D:				; CODE XREF: lzo1y_optimize+200j
					; lzo1y_optimize+3E1j
		cmp	[ebp+var_24], 0FFFFFFFFh
		jnz	short loc_6CB9E536
		mov	eax, [ebp+var_10]
		sub	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_14]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_10]
		sub	eax, 2
		mov	[ebp+var_1C], eax
		jmp	short loc_6CB9E53C
; ---------------------------------------------------------------------------

loc_6CB9E536:				; CODE XREF: lzo1y_optimize+85Ej
		mov	eax, [ebp+var_24]
		mov	[ebp+var_14], eax

loc_6CB9E53C:				; CODE XREF: lzo1y_optimize+881j
		mov	[ebp+var_24], 0FFFFFFFFh
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9E54B
		jmp	short loc_6CB9E592
; ---------------------------------------------------------------------------

loc_6CB9E54B:				; CODE XREF: lzo1y_optimize+90j
					; lzo1y_optimize+894j ...
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CB9E54B
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CB9E592
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jbe	loc_6CB9DEB8

loc_6CB9E592:				; CODE XREF: lzo1y_optimize:loc_6CB9DD4Dj
					; lzo1y_optimize+896j ...
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CB9E5A6
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_40]
		jbe	loc_6CB9DD52

loc_6CB9E5A6:				; CODE XREF: lzo1y_optimize+8E5j
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFF9h
		jmp	short locret_6CB9E5D9
; ---------------------------------------------------------------------------

loc_6CB9E5BE:				; CODE XREF: lzo1y_optimize+655j
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CB9E5CD
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CB9E5D9
; ---------------------------------------------------------------------------

loc_6CB9E5CD:				; CODE XREF: lzo1y_optimize+911j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CB9E5D9
; ---------------------------------------------------------------------------

loc_6CB9E5D4:				; CODE XREF: lzo1y_optimize+64Fj
		mov	eax, 0

locret_6CB9E5D9:			; CODE XREF: lzo1y_optimize+909j
					; lzo1y_optimize+918j ...
		leave
		retn
lzo1y_optimize	endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB9E5E6(int,	void *,	size_t)
sub_6CB9E5E6	proc near		; CODE XREF: sub_6CB9E7FF+145p

Dst		= dword	ptr -18h
Src		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+148h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+148h]
		mov	eax, [ebp+arg_0]
		mov	[eax+144h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14Ch], 0
		cmp	[ebp+arg_4], 0
		jz	short loc_6CB9E624
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CB9E626

loc_6CB9E624:				; CODE XREF: sub_6CB9E5E6+36j
		jmp	short locret_6CB9E69B
; ---------------------------------------------------------------------------

loc_6CB9E626:				; CODE XREF: sub_6CB9E5E6+3Cj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_8]
		jnb	short loc_6CB9E647
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+arg_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+arg_8], eax

loc_6CB9E647:				; CODE XREF: sub_6CB9E5E6+48j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+144h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+14Ch], edx
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+148h], edx
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+16Ch]
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Src], eax ; Src
		mov	[esp+18h+Dst], edx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+150h], edx

locret_6CB9E69B:			; CODE XREF: sub_6CB9E5E6:loc_6CB9E624j
		leave
		retn
sub_6CB9E5E6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9E69D	proc near		; CODE XREF: sub_6CB9E7FF+287p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		sub	eax, [ebp+arg_8]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+164h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+168h], edx
		cmp	[ebp+arg_8], 0
		jz	locret_6CB9E7FD

loc_6CB9E6CC:				; CODE XREF: sub_6CB9E69D+15Aj
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 160h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CB9E750
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 68B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CB9E755
; ---------------------------------------------------------------------------

loc_6CB9E750:				; CODE XREF: sub_6CB9E69D+9Ej
		mov	eax, 0FFFFFFFFh

loc_6CB9E755:				; CODE XREF: sub_6CB9E69D+B1j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		add	ecx, 0A8B0h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_4]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 68B0h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 170B0h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 278B0h
		mov	[eax+ecx*2+8], dx
		add	[ebp+arg_4], 1
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	loc_6CB9E6CC

locret_6CB9E7FD:			; CODE XREF: sub_6CB9E69D+29j
		leave
		retn
sub_6CB9E69D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB9E7FF(int,	void *,	size_t)
sub_6CB9E7FF	proc near		; CODE XREF: sub_6CB9F541+93p

Dst		= dword	ptr -28h
Val		= dword	ptr -24h
Size		= dword	ptr -20h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	[ebp+var_C], 0
		jmp	short loc_6CB9E852
; ---------------------------------------------------------------------------

loc_6CB9E823:				; CODE XREF: sub_6CB9E7FF+57j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 2Ch
		mov	dword ptr [eax+edx*4+0Ch], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 2Ch
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 8
		mov	[eax+ecx*4+0Ch], edx
		add	[ebp+var_C], 1

loc_6CB9E852:				; CODE XREF: sub_6CB9E7FF+22j
		cmp	[ebp+var_C], 21h
		jbe	short loc_6CB9E823
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 0BFFFh
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 800h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 1
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0Ch], 800h
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+18h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+15Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+160h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax+164h], edx
		mov	eax, [ebp+arg_0]
		add	eax, 47168h
		mov	[esp+28h+Size],	8000h ;	Size
		mov	[esp+28h+Val], 0 ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		add	eax, 4F168h
		mov	[esp+28h+Size],	20000h ; Size
		mov	[esp+28h+Val], 0FFh ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+150h], 0
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+Size],	eax ; size_t
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+Val], eax ; void *
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax ; int
		call	sub_6CB9E5E6
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	[eax+154h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	[eax+168h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+24h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+1Ch]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	loc_6CB9EA30
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jbe	short loc_6CB9E9BD
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB9E9BD:				; CODE XREF: sub_6CB9E7FF+1B0j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+1Ch]
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+150h]
		lea	ebx, [ecx+160h]
		mov	ecx, [ebp+arg_0]
		add	ecx, ebx
		add	ecx, 0Ch
		mov	[esp+28h+Size],	edx ; Size
		mov	[esp+28h+Val], eax ; Src
		mov	[esp+28h+Dst], ecx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+0B4h]
		mov	ecx, [edx+1Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+24h]
		add	edx, ecx
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+150h], edx

loc_6CB9EA30:				; CODE XREF: sub_6CB9E7FF+19Cj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short loc_6CB9EA53
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+150h], 0

loc_6CB9EA53:				; CODE XREF: sub_6CB9E7FF+245j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 1
		jbe	short loc_6CB9EA8B
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14Ch]
		test	eax, eax
		jz	short loc_6CB9EA8B
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14Ch]
		mov	[esp+28h+Size],	eax
		mov	[esp+28h+Val], 0
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax
		call	sub_6CB9E69D

loc_6CB9EA8B:				; CODE XREF: sub_6CB9E7FF+25Dj
					; sub_6CB9E7FF+26Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+168h]
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		cmp	edx, eax
		jb	short loc_6CB9EAD2
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx
		jmp	short loc_6CB9EAFC
; ---------------------------------------------------------------------------

loc_6CB9EAD2:				; CODE XREF: sub_6CB9E7FF+2B2j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+15Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		sub	ecx, eax
		mov	eax, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx

loc_6CB9EAFC:				; CODE XREF: sub_6CB9E7FF+2D1j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		ja	short loc_6CB9EB45
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_10]
		add	eax, 1
		mov	edx, [ebp+var_10]
		add	edx, 2
		mov	byte ptr [edx],	0
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_10]
		mov	[eax], dl

loc_6CB9EB45:				; CODE XREF: sub_6CB9E7FF+306j
		mov	eax, 0
		add	esp, 24h
		pop	ebx
		pop	ebp
		retn
sub_6CB9E7FF	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9EB50	proc near		; CODE XREF: sub_6CB9F541+A7p
					; sub_6CB9F60D+EBp
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_6CB9EB50	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9EB55	proc near		; CODE XREF: sub_6CB9EDDE+17Ap
					; sub_6CB9F60D+C2p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jnb	short loc_6CB9EB91
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+0B4h]
		mov	eax, [edx+1Ch]
		lea	ecx, [eax+1]
		mov	[edx+1Ch], ecx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		jmp	short loc_6CB9EB96
; ---------------------------------------------------------------------------

loc_6CB9EB91:				; CODE XREF: sub_6CB9EB55+20j
		mov	eax, 0FFFFFFFFh

loc_6CB9EB96:				; CODE XREF: sub_6CB9EB55+3Aj
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jns	short loc_6CB9EBF8
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CB9EBB8
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CB9EBB8:				; CODE XREF: sub_6CB9EB55+52j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		mov	edx, [ebp+arg_0]
		mov	byte ptr [edx+eax+16Ch], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB9EC3C
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		add	eax, edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB9EC3C
; ---------------------------------------------------------------------------

loc_6CB9EBF8:				; CODE XREF: sub_6CB9EB55+48j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		mov	edx, [ebp+var_4]
		mov	ecx, edx
		mov	edx, [ebp+arg_0]
		mov	[edx+eax+16Ch],	cl
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CB9EC3C
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		add	edx, eax
		mov	eax, [ebp+var_4]
		mov	[edx], al

loc_6CB9EC3C:				; CODE XREF: sub_6CB9EB55+88j
					; sub_6CB9EB55+A1j ...
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+150h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+150h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+150h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short loc_6CB9EC74
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+150h], 0

loc_6CB9EC74:				; CODE XREF: sub_6CB9EB55+110j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+154h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short loc_6CB9ECAC
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+154h], 0

loc_6CB9ECAC:				; CODE XREF: sub_6CB9EB55+148j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+158h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+158h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+158h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+15Ch]
		cmp	edx, eax
		jnz	short locret_6CB9ECE4
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+158h], 0

locret_6CB9ECE4:			; CODE XREF: sub_6CB9EB55+180j
		leave
		retn
sub_6CB9EB55	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9ECE6	proc near		; CODE XREF: sub_6CB9EDDE+23p
					; sub_6CB9F1D0+32Ap

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		test	eax, eax
		jnz	loc_6CB9EDC7
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 160h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 278B0h
		movzx	eax, word ptr [eax+edx*2+8]
		movzx	eax, ax
		cmp	eax, [ebp+arg_4]
		jnz	short loc_6CB9EDC5
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 278B0h
		mov	word ptr [eax+edx*2+8],	0FFFFh
		jmp	short locret_6CB9EDDC
; ---------------------------------------------------------------------------

loc_6CB9EDC5:				; CODE XREF: sub_6CB9ECE6+C8j
		jmp	short locret_6CB9EDDC
; ---------------------------------------------------------------------------

loc_6CB9EDC7:				; CODE XREF: sub_6CB9ECE6+11j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+164h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+164h], edx

locret_6CB9EDDC:			; CODE XREF: sub_6CB9ECE6+DDj
					; sub_6CB9ECE6:loc_6CB9EDC5j
		leave
		retn
sub_6CB9ECE6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9EDDE	proc near		; CODE XREF: sub_6CB9F60D+21p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		cmp	[ebp+arg_4], 0
		jz	locret_6CB9EF6B

loc_6CB9EDEE:				; CODE XREF: sub_6CB9EDDE+187j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+158h]
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB9ECE6
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+16Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CB9EEA2
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 68B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CB9EEA7
; ---------------------------------------------------------------------------

loc_6CB9EEA2:				; CODE XREF: sub_6CB9EDDE+AFj
		mov	eax, 0FFFFFFFFh

loc_6CB9EEA7:				; CODE XREF: sub_6CB9EDDE+C2j
		mov	edx, [ebp+arg_0]
		add	ecx, 0A8B0h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 68B0h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 170B0h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 238B0h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 278B0h
		mov	[eax+ecx*2+8], dx
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CB9EB55
		sub	[ebp+arg_4], 1
		cmp	[ebp+arg_4], 0
		jnz	loc_6CB9EDEE

locret_6CB9EF6B:			; CODE XREF: sub_6CB9EDDE+Aj
		leave
		retn
sub_6CB9EDDE	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9EF6D	proc near		; CODE XREF: sub_6CB9F1D0+1D6p

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_D		= byte ptr -0Dh
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 30h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		add	eax, 16Ch
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al
		jmp	loc_6CB9F132
; ---------------------------------------------------------------------------

loc_6CB9EFD9:				; CODE XREF: sub_6CB9EF6D+1D0j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_14]
		add	eax, edx
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_8]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		cmp	al, [ebp+var_D]
		jnz	loc_6CB9F11B
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_8]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	ecx, [ebp+var_4]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB9F11B
		mov	eax, [ebp+var_8]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB9F11B
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CB9F11B
		add	[ebp+var_4], 2
		add	[ebp+var_8], 2

loc_6CB9F05B:				; CODE XREF: sub_6CB9EF6D+10Cj
		add	[ebp+var_4], 1
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CB9F07B
		mov	eax, [ebp+var_4]
		movzx	edx, byte ptr [eax]
		add	[ebp+var_8], 1
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CB9F05B

loc_6CB9F07B:				; CODE XREF: sub_6CB9EF6D+F8j
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		cmp	[ebp+var_24], 21h
		ja	short loc_6CB9F0B2
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_24]
		add	edx, 2Ch
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jnz	short loc_6CB9F0B2
		mov	eax, [ebp+arg_4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_24]
		add	edx, 2Ch
		mov	[eax+edx*4+0Ch], ecx

loc_6CB9F0B2:				; CODE XREF: sub_6CB9EF6D+11Fj
					; sub_6CB9EF6D+130j
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_C]
		jbe	short loc_6CB9F11B
		mov	eax, [ebp+var_24]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+0B8h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CB9F0E2
		jmp	short locret_6CB9F143
; ---------------------------------------------------------------------------

loc_6CB9F0E2:				; CODE XREF: sub_6CB9EF6D+171j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+10h]
		cmp	eax, [ebp+var_C]
		ja	short loc_6CB9F0EF
		jmp	short locret_6CB9F143
; ---------------------------------------------------------------------------

loc_6CB9F0EF:				; CODE XREF: sub_6CB9EF6D+17Ej
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 170B0h
		movzx	eax, word ptr [eax+edx*2+0Ah]
		movzx	eax, ax
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CB9F10A
		jmp	short locret_6CB9F143
; ---------------------------------------------------------------------------

loc_6CB9F10A:				; CODE XREF: sub_6CB9EF6D+199j
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al

loc_6CB9F11B:				; CODE XREF: sub_6CB9EF6D+94j
					; sub_6CB9EF6D+B2j ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 0A8B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+arg_4], eax

loc_6CB9F132:				; CODE XREF: sub_6CB9EF6D+67j
		mov	eax, [ebp+arg_8]
		lea	edx, [eax-1]
		mov	[ebp+arg_8], edx
		test	eax, eax
		jnz	loc_6CB9EFD9

locret_6CB9F143:			; CODE XREF: sub_6CB9EF6D+173j
					; sub_6CB9EF6D+180j ...
		leave
		retn
sub_6CB9EF6D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9F145	proc near		; CODE XREF: sub_6CB9F1D0+1AEp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	eax, [ebp+arg_0]
		add	edx, 278B0h
		movzx	eax, word ptr [eax+edx*2+8]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0FFFFh
		jnz	short loc_6CB9F18C
		mov	eax, 0
		jmp	short locret_6CB9F1CE
; ---------------------------------------------------------------------------

loc_6CB9F18C:				; CODE XREF: sub_6CB9F145+3Ej
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0C4h]
		test	eax, eax
		jnz	short loc_6CB9F1A8
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+0C4h], edx

loc_6CB9F1A8:				; CODE XREF: sub_6CB9F145+52j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, 1
		ja	short loc_6CB9F1C9
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 2
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		mov	[eax+0B8h], edx

loc_6CB9F1C9:				; CODE XREF: sub_6CB9F145+6Cj
		mov	eax, 1

locret_6CB9F1CE:			; CODE XREF: sub_6CB9F145+45j
		leave
		retn
sub_6CB9F145	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9F1D0	proc near		; CODE XREF: sub_6CB9F60D+9Fp

var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 2Ch
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+16Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+16Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 238B0h
		movzx	eax, word ptr [eax+ecx*2+8]
		test	ax, ax
		jz	short loc_6CB9F273
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 68B0h
		movzx	eax, word ptr [eax+ecx*2+0Ch]
		jmp	short loc_6CB9F278
; ---------------------------------------------------------------------------

loc_6CB9F273:				; CODE XREF: sub_6CB9F1D0+8Ej
		mov	eax, 0FFFFFFFFh

loc_6CB9F278:				; CODE XREF: sub_6CB9F1D0+A1j
		mov	ecx, [ebp+arg_0]
		lea	ebx, [edx+0A8B0h]
		mov	[ecx+ebx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		add	edx, 0A8B0h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_10]
		add	edx, 238B0h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_10]
		add	ebx, 238B0h
		mov	[edx+ebx*2+8], cx
		movzx	eax, ax
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		cmp	eax, [ebp+var_8]
		jnb	short loc_6CB9F2E3
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_6CB9F2E3
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_8], eax

loc_6CB9F2E3:				; CODE XREF: sub_6CB9F1D0+FEj
					; sub_6CB9F1D0+108j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 68B0h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+16Ch]
		movzx	edx, al
		mov	eax, [ebp+arg_0]
		mov	[eax+28h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jb	short loc_6CB9F378
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jnz	short loc_6CB9F349
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0FFFFFFFFh

loc_6CB9F349:				; CODE XREF: sub_6CB9F1D0+16Dj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 170B0h
		mov	[eax+edx*2+0Ah], cx
		jmp	loc_6CB9F4E7
; ---------------------------------------------------------------------------

loc_6CB9F378:				; CODE XREF: sub_6CB9F1D0+163j
		mov	eax, [ebp+arg_0]
		mov	[esp+30h+var_30], eax
		call	sub_6CB9F145
		test	eax, eax
		jz	short loc_6CB9F3AB
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		jbe	short loc_6CB9F3AB
		mov	eax, [ebp+var_8]
		mov	[esp+30h+var_28], eax
		mov	eax, [ebp+var_14]
		mov	[esp+30h+var_2C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+30h+var_30], eax
		call	sub_6CB9EF6D

loc_6CB9F3AB:				; CODE XREF: sub_6CB9F1D0+1B5j
					; sub_6CB9F1D0+1C0j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CB9F40B
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B8h]
		cmp	edx, eax
		jbe	short loc_6CB9F3E4
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B8h]
		sub	edx, eax
		mov	eax, edx
		jmp	short loc_6CB9F405
; ---------------------------------------------------------------------------

loc_6CB9F3E4:				; CODE XREF: sub_6CB9F1D0+1FAj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+15Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B8h]
		sub	ecx, eax
		mov	eax, ecx
		add	eax, edx

loc_6CB9F405:				; CODE XREF: sub_6CB9F1D0+212j
		mov	edx, [ebp+arg_0]
		mov	[edx+20h], eax

loc_6CB9F40B:				; CODE XREF: sub_6CB9F1D0+1E4j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		add	ecx, 170B0h
		mov	[eax+ecx*2+0Ah], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	loc_6CB9F4E7
		mov	[ebp+var_C], 2
		jmp	loc_6CB9F4DD
; ---------------------------------------------------------------------------

loc_6CB9F444:				; CODE XREF: sub_6CB9F1D0+311j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 2Ch
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB9F4C8
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 2Ch
		mov	eax, [eax+ecx*4+0Ch]
		sub	eax, 1
		cmp	edx, eax
		jbe	short loc_6CB9F491
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 2Ch
		mov	eax, [eax+ecx*4+0Ch]
		sub	edx, eax
		mov	eax, edx
		add	eax, 1
		jmp	short loc_6CB9F4B9
; ---------------------------------------------------------------------------

loc_6CB9F491:				; CODE XREF: sub_6CB9F1D0+2A0j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+15Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+154h]
		mov	eax, [ebp+arg_0]
		mov	ebx, [ebp+var_C]
		add	ebx, 2Ch
		mov	eax, [eax+ebx*4+0Ch]
		sub	ecx, eax
		mov	eax, ecx
		add	eax, edx
		add	eax, 1

loc_6CB9F4B9:				; CODE XREF: sub_6CB9F1D0+2BFj
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 8
		mov	[edx+ecx*4+0Ch], eax
		jmp	short loc_6CB9F4D9
; ---------------------------------------------------------------------------

loc_6CB9F4C8:				; CODE XREF: sub_6CB9F1D0+283j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 8
		mov	dword ptr [eax+edx*4+0Ch], 0

loc_6CB9F4D9:				; CODE XREF: sub_6CB9F1D0+2F6j
		add	[ebp+var_C], 1

loc_6CB9F4DD:				; CODE XREF: sub_6CB9F1D0+26Fj
		cmp	[ebp+var_C], 21h
		jbe	loc_6CB9F444

loc_6CB9F4E7:				; CODE XREF: sub_6CB9F1D0+1A3j
					; sub_6CB9F1D0+262j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+158h]
		mov	[esp+30h+var_2C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+30h+var_30], eax
		call	sub_6CB9ECE6
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		lea	edx, [eax+160h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+154h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_10]
		add	ecx, 278B0h
		mov	[eax+ecx*2+8], dx
		add	esp, 2Ch
		pop	ebx
		pop	ebp
		retn
sub_6CB9F1D0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CB9F541(int,	int, void *, size_t, int)
sub_6CB9F541	proc near		; CODE XREF: lzo1z_999_compress_internal+148p

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 1
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[eax+0B4h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+14h]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+34h]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_20], eax ;	size_t
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_24], eax ;	void *
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax ;	int
		call	sub_6CB9E7FF
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jz	short loc_6CB9F5F2
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax
		call	sub_6CB9EB50
		mov	eax, [ebp+var_C]
		jmp	short locret_6CB9F60B
; ---------------------------------------------------------------------------

loc_6CB9F5F2:				; CODE XREF: sub_6CB9F541+9Fj
		mov	eax, [ebp+arg_10]
		and	eax, 1
		test	eax, eax
		setnz	al
		movzx	edx, al
		mov	eax, [ebp+arg_4]
		mov	[eax+14h], edx
		mov	eax, 0

locret_6CB9F60B:			; CODE XREF: sub_6CB9F541+AFj
		leave
		retn
sub_6CB9F541	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9F60D	proc near		; CODE XREF: lzo1z_999_compress_internal+199p
					; lzo1z_999_compress_internal+284p ...

Dst		= dword	ptr -18h
Val		= dword	ptr -14h
Size		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		cmp	[ebp+arg_C], 0
		jz	short loc_6CB9F650
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	[esp+18h+Val], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB9EDDE
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	eax, edx
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		jmp	short loc_6CB9F668
; ---------------------------------------------------------------------------

loc_6CB9F650:				; CODE XREF: sub_6CB9F60D+Bj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx

loc_6CB9F668:				; CODE XREF: sub_6CB9F60D+41j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+1Ch], 1
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_6CB9F6A6
		mov	eax, [ebp+arg_4]
		add	eax, 0BCh
		mov	[esp+18h+Size],	88h ; Size
		mov	[esp+18h+Val], 0 ; Val
		mov	[esp+18h+Dst], eax ; Dst
		call	_memset

loc_6CB9F6A6:				; CODE XREF: sub_6CB9F60D+77j
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB9F1D0
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+20h]
		mov	eax, [ebp+arg_0]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB9EB55
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+28h]
		test	eax, eax
		jns	short loc_6CB9F6FF
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Dst], eax
		call	sub_6CB9EB50
		jmp	short loc_6CB9F70E
; ---------------------------------------------------------------------------

loc_6CB9F6FF:				; CODE XREF: sub_6CB9F60D+CFj
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+24h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+4], edx

loc_6CB9F70E:				; CODE XREF: sub_6CB9F60D+F0j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		neg	eax
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+18h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CB9F78D
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CB9F78D
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+30h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		cmp	edx, eax
		jbe	short loc_6CB9F78D
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+arg_0]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+arg_0]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+Size],	ebx
		mov	[esp+18h+Val], ecx
		mov	[esp+18h+Dst], edx
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		lea	edx, [eax+400h]
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx

loc_6CB9F78D:				; CODE XREF: sub_6CB9F60D+11Fj
					; sub_6CB9F60D+12Cj ...
		mov	eax, 0
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
sub_6CB9F60D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9F798	proc near		; CODE XREF: lzo1z_999_compress_internal+4F0p
					; lzo1z_999_compress_internal+56Dp

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_C]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_8]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		cmp	[ebp+arg_8], 2
		jnz	short loc_6CB9F7FB
		sub	[ebp+arg_C], 1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		jmp	loc_6CB9FA1E
; ---------------------------------------------------------------------------

loc_6CB9F7FB:				; CODE XREF: sub_6CB9F798+27j
		cmp	[ebp+arg_8], 8
		ja	short loc_6CB9F880
		cmp	[ebp+arg_C], 700h
		jbe	short loc_6CB9F815
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14h]
		cmp	eax, [ebp+arg_C]
		jnz	short loc_6CB9F880

loc_6CB9F815:				; CODE XREF: sub_6CB9F798+70j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+14h]
		cmp	eax, [ebp+arg_C]
		jnz	short loc_6CB9F839
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 1
		shl	edx, 5
		or	edx, 1Ch
		mov	[eax], dl
		jmp	short loc_6CB9F86C
; ---------------------------------------------------------------------------

loc_6CB9F839:				; CODE XREF: sub_6CB9F798+86j
		sub	[ebp+arg_C], 1
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 1
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shl	edx, 2
		mov	[eax], dl

loc_6CB9F86C:				; CODE XREF: sub_6CB9F798+9Fj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+5Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+5Ch], edx
		jmp	loc_6CB9FA1E
; ---------------------------------------------------------------------------

loc_6CB9F880:				; CODE XREF: sub_6CB9F798+67j
					; sub_6CB9F798+7Bj
		cmp	[ebp+arg_8], 3
		jnz	short loc_6CB9F8D7
		cmp	[ebp+arg_C], 0B00h
		ja	short loc_6CB9F8D7
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	eax, 3
		jbe	short loc_6CB9F8D7
		sub	[ebp+arg_C], 701h
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+58h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+58h], edx
		jmp	loc_6CB9FA1E
; ---------------------------------------------------------------------------

loc_6CB9F8D7:				; CODE XREF: sub_6CB9F798+ECj
					; sub_6CB9F798+F5j ...
		cmp	[ebp+arg_C], 4000h
		ja	loc_6CB9F976
		sub	[ebp+arg_C], 1
		cmp	[ebp+arg_8], 21h
		ja	short loc_6CB9F904
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		sub	edx, 2
		or	edx, 20h
		mov	[eax], dl
		jmp	short loc_6CB9F940
; ---------------------------------------------------------------------------

loc_6CB9F904:				; CODE XREF: sub_6CB9F798+154j
		sub	[ebp+arg_8], 21h
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	20h
		jmp	short loc_6CB9F929
; ---------------------------------------------------------------------------

loc_6CB9F916:				; CODE XREF: sub_6CB9F798+198j
		sub	[ebp+arg_8], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB9F929:				; CODE XREF: sub_6CB9F798+17Cj
		cmp	[ebp+arg_8], 0FFh
		ja	short loc_6CB9F916
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl

loc_6CB9F940:				; CODE XREF: sub_6CB9F798+16Aj
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+60h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+60h], edx
		jmp	loc_6CB9FA1E
; ---------------------------------------------------------------------------

loc_6CB9F976:				; CODE XREF: sub_6CB9F798+146j
		sub	[ebp+arg_C], 4000h
		mov	eax, [ebp+arg_C]
		and	eax, 4000h
		shr	eax, 0Bh
		mov	[ebp+var_C], eax
		cmp	[ebp+arg_8], 9
		ja	short loc_6CB9F9AC
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+var_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, 2
		or	edx, ecx
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB9F9ED
; ---------------------------------------------------------------------------

loc_6CB9F9AC:				; CODE XREF: sub_6CB9F798+1F7j
		sub	[ebp+arg_8], 9
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+var_C]
		or	edx, 10h
		mov	[eax], dl
		jmp	short loc_6CB9F9D6
; ---------------------------------------------------------------------------

loc_6CB9F9C3:				; CODE XREF: sub_6CB9F798+245j
		sub	[ebp+arg_8], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB9F9D6:				; CODE XREF: sub_6CB9F798+229j
		cmp	[ebp+arg_8], 0FFh
		ja	short loc_6CB9F9C3
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		mov	[eax], dl

loc_6CB9F9ED:				; CODE XREF: sub_6CB9F798+212j
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shr	edx, 6
		mov	[eax], dl
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		shl	edx, 2
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+64h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+64h], edx

loc_6CB9FA1E:				; CODE XREF: sub_6CB9F798+5Ej
					; sub_6CB9F798+E3j ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_8]
		mov	[eax+14h], edx
		mov	eax, [ebp+arg_4]
		leave
		retn
sub_6CB9F798	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9FA35	proc near		; CODE XREF: sub_6CB9FB41+27p
					; lzo1z_999_compress_internal+5D3p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+3Ch]
		mov	eax, [ebp+arg_C]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+28h]
		cmp	eax, [ebp+arg_4]
		jnz	short loc_6CB9FA76
		cmp	[ebp+arg_C], 0EEh
		ja	short loc_6CB9FA76
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		add	edx, 11h
		mov	[eax], dl
		jmp	loc_6CB9FB1B
; ---------------------------------------------------------------------------

loc_6CB9FA76:				; CODE XREF: sub_6CB9FA35+20j
					; sub_6CB9FA35+29j
		cmp	[ebp+arg_C], 3
		ja	short loc_6CB9FAA3
		mov	eax, [ebp+arg_4]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_4]
		sub	eax, 1
		movzx	ecx, byte ptr [eax]
		mov	eax, [ebp+arg_C]
		or	eax, ecx
		mov	[edx], al
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+68h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+68h], edx
		jmp	short loc_6CB9FB1B
; ---------------------------------------------------------------------------

loc_6CB9FAA3:				; CODE XREF: sub_6CB9FA35+45j
		cmp	[ebp+arg_C], 12h
		ja	short loc_6CB9FACB
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_C]
		sub	edx, 3
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+6Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+6Ch], edx
		jmp	short loc_6CB9FB1B
; ---------------------------------------------------------------------------

loc_6CB9FACB:				; CODE XREF: sub_6CB9FA35+72j
		mov	eax, [ebp+arg_C]
		sub	eax, 12h
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CB9FAF5
; ---------------------------------------------------------------------------

loc_6CB9FAE2:				; CODE XREF: sub_6CB9FA35+C7j
		sub	[ebp+var_4], 0FFh
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	byte ptr [eax],	0

loc_6CB9FAF5:				; CODE XREF: sub_6CB9FA35+ABj
		cmp	[ebp+var_4], 0FFh
		ja	short loc_6CB9FAE2
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+var_4]
		mov	[eax], dl
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+70h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+70h], edx

loc_6CB9FB1B:				; CODE XREF: sub_6CB9FA35+3Cj
					; sub_6CB9FA35+6Cj ...
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		mov	edx, [ebp+arg_8]
		lea	ecx, [edx+1]
		mov	[ebp+arg_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+arg_C], 1
		cmp	[ebp+arg_C], 0
		jnz	short loc_6CB9FB1B
		mov	eax, [ebp+arg_4]
		leave
		retn
sub_6CB9FA35	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9FB41	proc near		; CODE XREF: lzo1z_999_compress_internal+4C6p
					; lzo1z_999_compress_internal+543p

var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		cmp	[ebp+arg_C], 0
		jz	short loc_6CB9FB84
		mov	eax, [ebp+arg_C]
		mov	[esp+10h+var_4], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+10h+var_8], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+10h+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+10h+var_10], eax
		call	sub_6CB9FA35
		mov	[ebp+arg_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_10]
		mov	[eax+50h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_C]
		mov	[eax+4Ch], edx
		jmp	short loc_6CB9FB98
; ---------------------------------------------------------------------------

loc_6CB9FB84:				; CODE XREF: sub_6CB9FB41+Aj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+50h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4Ch], 0

loc_6CB9FB98:				; CODE XREF: sub_6CB9FB41+41j
		mov	eax, [ebp+arg_4]
		leave
		retn
sub_6CB9FB41	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9FB9D	proc near		; CODE XREF: lzo1z_999_compress_internal+2F0p
					; lzo1z_999_compress_internal+409p ...

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	[ebp+var_4], 4
		cmp	[ebp+arg_0], 1
		ja	short loc_6CB9FBBA
		mov	eax, 0
		jmp	locret_6CB9FC8D
; ---------------------------------------------------------------------------

loc_6CB9FBBA:				; CODE XREF: sub_6CB9FB9D+11j
		cmp	[ebp+arg_0], 2
		jnz	short loc_6CB9FBE9
		cmp	[ebp+arg_4], 400h
		ja	short loc_6CB9FBDF
		cmp	[ebp+arg_8], 0
		jz	short loc_6CB9FBDF
		cmp	[ebp+arg_8], 3
		ja	short loc_6CB9FBDF
		mov	eax, 2
		jmp	locret_6CB9FC8D
; ---------------------------------------------------------------------------

loc_6CB9FBDF:				; CODE XREF: sub_6CB9FB9D+2Aj
					; sub_6CB9FB9D+30j ...
		mov	eax, 0
		jmp	locret_6CB9FC8D
; ---------------------------------------------------------------------------

loc_6CB9FBE9:				; CODE XREF: sub_6CB9FB9D+21j
		cmp	[ebp+arg_0], 8
		ja	short loc_6CB9FC02
		cmp	[ebp+arg_4], 700h
		ja	short loc_6CB9FC02
		mov	eax, 2
		jmp	locret_6CB9FC8D
; ---------------------------------------------------------------------------

loc_6CB9FC02:				; CODE XREF: sub_6CB9FB9D+50j
					; sub_6CB9FB9D+59j
		cmp	[ebp+arg_0], 3
		jnz	short loc_6CB9FC1E
		cmp	[ebp+arg_4], 0B00h
		ja	short loc_6CB9FC1E
		cmp	[ebp+arg_8], 3
		jbe	short loc_6CB9FC1E
		mov	eax, 2
		jmp	short locret_6CB9FC8D
; ---------------------------------------------------------------------------

loc_6CB9FC1E:				; CODE XREF: sub_6CB9FB9D+69j
					; sub_6CB9FB9D+72j ...
		cmp	[ebp+arg_4], 4000h
		ja	short loc_6CB9FC53
		cmp	[ebp+arg_0], 21h
		ja	short loc_6CB9FC34
		mov	eax, 3
		jmp	short locret_6CB9FC8D
; ---------------------------------------------------------------------------

loc_6CB9FC34:				; CODE XREF: sub_6CB9FB9D+8Ej
		sub	[ebp+arg_0], 21h
		jmp	short loc_6CB9FC45
; ---------------------------------------------------------------------------

loc_6CB9FC3A:				; CODE XREF: sub_6CB9FB9D+AFj
		sub	[ebp+arg_0], 0FFh
		add	[ebp+var_4], 1

loc_6CB9FC45:				; CODE XREF: sub_6CB9FB9D+9Bj
		cmp	[ebp+arg_0], 0FFh
		ja	short loc_6CB9FC3A
		mov	eax, [ebp+var_4]
		jmp	short locret_6CB9FC8D
; ---------------------------------------------------------------------------

loc_6CB9FC53:				; CODE XREF: sub_6CB9FB9D+88j
		cmp	[ebp+arg_4], 0BFFFh
		ja	short loc_6CB9FC88
		cmp	[ebp+arg_0], 9
		ja	short loc_6CB9FC69
		mov	eax, 3
		jmp	short locret_6CB9FC8D
; ---------------------------------------------------------------------------

loc_6CB9FC69:				; CODE XREF: sub_6CB9FB9D+C3j
		sub	[ebp+arg_0], 9
		jmp	short loc_6CB9FC7A
; ---------------------------------------------------------------------------

loc_6CB9FC6F:				; CODE XREF: sub_6CB9FB9D+E4j
		sub	[ebp+arg_0], 0FFh
		add	[ebp+var_4], 1

loc_6CB9FC7A:				; CODE XREF: sub_6CB9FB9D+D0j
		cmp	[ebp+arg_0], 0FFh
		ja	short loc_6CB9FC6F
		mov	eax, [ebp+var_4]
		jmp	short locret_6CB9FC8D
; ---------------------------------------------------------------------------

loc_6CB9FC88:				; CODE XREF: sub_6CB9FB9D+BDj
		mov	eax, 0

locret_6CB9FC8D:			; CODE XREF: sub_6CB9FB9D+18j
					; sub_6CB9FB9D+3Dj ...
		leave
		retn
sub_6CB9FB9D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9FC8F	proc near		; CODE XREF: lzo1z_999_compress_internal+475p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_4], 3
		ja	short loc_6CB9FCB8
		cmp	[ebp+arg_8], 3
		ja	short loc_6CB9FCAE
		mov	eax, 0
		jmp	short loc_6CB9FCB3
; ---------------------------------------------------------------------------

loc_6CB9FCAE:				; CODE XREF: sub_6CB9FC8F+16j
		mov	eax, 2

loc_6CB9FCB3:				; CODE XREF: sub_6CB9FC8F+1Dj
		add	[ebp+var_4], eax
		jmp	short loc_6CB9FCCB
; ---------------------------------------------------------------------------

loc_6CB9FCB8:				; CODE XREF: sub_6CB9FC8F+10j
		cmp	[ebp+arg_4], 12h
		ja	short loc_6CB9FCCB
		cmp	[ebp+arg_8], 12h
		setnbe	al
		movzx	eax, al
		add	[ebp+var_4], eax

loc_6CB9FCCB:				; CODE XREF: sub_6CB9FC8F+27j
					; sub_6CB9FC8F+2Dj
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_10]
		sub	edx, eax
		mov	eax, edx
		add	eax, eax
		add	[ebp+var_4], eax
		cmp	[ebp+arg_14], 0
		jz	short loc_6CB9FCEF
		mov	eax, [ebp+arg_14]
		mov	edx, [ebp+arg_0]
		sub	edx, eax
		mov	eax, edx
		add	eax, eax
		sub	[ebp+var_4], eax

loc_6CB9FCEF:				; CODE XREF: sub_6CB9FC8F+4Fj
		mov	eax, [ebp+var_4]
		test	eax, eax
		jns	short loc_6CB9FCFD
		mov	[ebp+var_4], 0

loc_6CB9FCFD:				; CODE XREF: sub_6CB9FC8F+65j
		mov	eax, [ebp+var_4]
		leave
		retn
sub_6CB9FC8F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CB9FD02	proc near		; CODE XREF: lzo1z_999_compress_internal+2AFp
					; lzo1z_999_compress_internal+3E4p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0B4h]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 3
		ja	short loc_6CB9FD23
		jmp	locret_6CB9FF09
; ---------------------------------------------------------------------------

loc_6CB9FD23:				; CODE XREF: sub_6CB9FD02+1Aj
		mov	eax, [ebp+arg_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	eax, [eax+14h]
		cmp	edx, eax
		jnz	short loc_6CB9FD41
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 8
		ja	short loc_6CB9FD41
		jmp	locret_6CB9FF09
; ---------------------------------------------------------------------------

loc_6CB9FD41:				; CODE XREF: sub_6CB9FD02+2Ej
					; sub_6CB9FD02+38j
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 3
		jbe	short loc_6CB9FDA1
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 9
		ja	short loc_6CB9FDA1
		mov	eax, [ebp+var_4]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_6CB9FDA1
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+var_4]
		mov	eax, [eax+14h]
		cmp	edx, eax
		jnz	short loc_6CB9FDA1
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_8]
		mov	[eax], edx
		jmp	locret_6CB9FF09
; ---------------------------------------------------------------------------

loc_6CB9FDA1:				; CODE XREF: sub_6CB9FD02+47j
					; sub_6CB9FD02+51j ...
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 700h
		ja	short loc_6CB9FDB2
		jmp	locret_6CB9FF09
; ---------------------------------------------------------------------------

loc_6CB9FDB2:				; CODE XREF: sub_6CB9FD02+A9j
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 700h
		jbe	short loc_6CB9FE27
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 3
		jbe	short loc_6CB9FE27
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 9
		ja	short loc_6CB9FE27
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB9FE27
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		cmp	eax, 700h
		ja	short loc_6CB9FE27
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_8]
		mov	[eax], edx
		jmp	locret_6CB9FF09
; ---------------------------------------------------------------------------

loc_6CB9FE27:				; CODE XREF: sub_6CB9FD02+BAj
					; sub_6CB9FD02+C4j ...
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 4000h
		jbe	short loc_6CB9FE99
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 9
		jbe	short loc_6CB9FE99
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 0Ah
		ja	short loc_6CB9FE99
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short loc_6CB9FE99
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		cmp	eax, 700h
		ja	short loc_6CB9FE99
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-2]
		mov	eax, [ebp+arg_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_8]
		mov	[eax], edx
		jmp	short locret_6CB9FF09
; ---------------------------------------------------------------------------

loc_6CB9FE99:				; CODE XREF: sub_6CB9FD02+12Fj
					; sub_6CB9FD02+139j ...
		mov	eax, [ebp+arg_8]
		mov	eax, [eax]
		cmp	eax, 4000h
		jbe	short locret_6CB9FF09
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 9
		jbe	short locret_6CB9FF09
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		cmp	eax, 22h
		ja	short locret_6CB9FF09
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		test	eax, eax
		jz	short locret_6CB9FF09
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	eax, [eax+edx*4+0Ch]
		cmp	eax, 4000h
		ja	short locret_6CB9FF09
		mov	eax, [ebp+arg_4]
		mov	eax, [eax]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_4]
		mov	[eax], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		add	edx, 8
		mov	edx, [eax+edx*4+0Ch]
		mov	eax, [ebp+arg_8]
		mov	[eax], edx

locret_6CB9FF09:			; CODE XREF: sub_6CB9FD02+1Cj
					; sub_6CB9FD02+3Aj ...
		leave
		retn
sub_6CB9FD02	endp

; Exported entry 110. lzo1z_999_compress_internal

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1z_999_compress_internal(int, int, int, int, int, void	*, size_t, int,	int, int, int, int, int, int)
		public lzo1z_999_compress_internal
lzo1z_999_compress_internal proc near	; CODE XREF: lzo1z_999_compress_level+D8p

var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_B8		= byte ptr -0B8h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h
arg_1C		= dword	ptr  24h
arg_20		= dword	ptr  28h
arg_24		= dword	ptr  2Ch
arg_28		= dword	ptr  30h
arg_2C		= dword	ptr  34h
arg_30		= dword	ptr  38h
arg_34		= dword	ptr  3Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0D4h
		lea	eax, [ebp+var_B8]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+arg_20]
		mov	[ebp+var_18], eax
		cmp	[ebp+arg_20], 0
		jns	short loc_6CB9FF37
		mov	[ebp+var_18], 1

loc_6CB9FF37:				; CODE XREF: lzo1z_999_compress_internal+23j
		cmp	[ebp+arg_24], 0
		jnz	short loc_6CB9FF44
		mov	[ebp+arg_24], 20h

loc_6CB9FF44:				; CODE XREF: lzo1z_999_compress_internal+30j
		cmp	[ebp+arg_28], 0
		jnz	short loc_6CB9FF51
		mov	[ebp+arg_28], 20h

loc_6CB9FF51:				; CODE XREF: lzo1z_999_compress_internal+3Dj
		cmp	[ebp+arg_2C], 0
		jnz	short loc_6CB9FF5E
		mov	[ebp+arg_2C], 0

loc_6CB9FF5E:				; CODE XREF: lzo1z_999_compress_internal+4Aj
		cmp	[ebp+arg_30], 0
		jnz	short loc_6CB9FF6B
		mov	[ebp+arg_30], 800h

loc_6CB9FF6B:				; CODE XREF: lzo1z_999_compress_internal+57j
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_0]
		mov	[eax+20h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+20h]
		mov	eax, [ebp+var_28]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	edx, eax
		mov	eax, [ebp+var_28]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_8]
		mov	[eax+28h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [ebp+arg_1C]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax+64h], 0
		mov	eax, [ebp+var_28]
		mov	edx, [eax+64h]
		mov	eax, [ebp+var_28]
		mov	[eax+60h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+60h]
		mov	eax, [ebp+var_28]
		mov	[eax+5Ch], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+5Ch]
		mov	eax, [ebp+var_28]
		mov	[eax+58h], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+58h]
		mov	eax, [ebp+var_28]
		mov	[eax+54h], edx
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax+70h], 0
		mov	eax, [ebp+var_28]
		mov	edx, [eax+70h]
		mov	eax, [ebp+var_28]
		mov	[eax+6Ch], edx
		mov	eax, [ebp+var_28]
		mov	edx, [eax+6Ch]
		mov	eax, [ebp+var_28]
		mov	[eax+68h], edx
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_28]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_10], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax+50h], 0
		mov	eax, [ebp+var_28]
		mov	edx, [eax+50h]
		mov	eax, [ebp+var_28]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+arg_34]
		mov	[esp+0D8h+var_C8], eax ; int
		mov	eax, [ebp+arg_18]
		mov	[esp+0D8h+var_CC], eax ; size_t
		mov	eax, [ebp+arg_14]
		mov	[esp+0D8h+var_D0], eax ; void *
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax ; int
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax ; int
		call	sub_6CB9F541
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 0
		jz	short loc_6CBA0069
		mov	eax, [ebp+var_30]
		jmp	loc_6CBA0579
; ---------------------------------------------------------------------------

loc_6CBA0069:				; CODE XREF: lzo1z_999_compress_internal+154j
		cmp	[ebp+arg_30], 0
		jz	short loc_6CBA0078
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx

loc_6CBA0078:				; CODE XREF: lzo1z_999_compress_internal+162j
		cmp	[ebp+arg_2C], 0
		jz	short loc_6CBA0087
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_2C]
		mov	[eax+10h], edx

loc_6CBA0087:				; CODE XREF: lzo1z_999_compress_internal+171j
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], 0
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9F60D
		mov	[ebp+var_30], eax
		cmp	[ebp+var_30], 0
		jz	short loc_6CBA00BA
		mov	eax, [ebp+var_30]
		jmp	loc_6CBA0579
; ---------------------------------------------------------------------------

loc_6CBA00BA:				; CODE XREF: lzo1z_999_compress_internal+1A5j
		jmp	loc_6CBA04AF
; ---------------------------------------------------------------------------

loc_6CBA00BF:				; CODE XREF: lzo1z_999_compress_internal+5ACj
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_28]
		mov	[eax+34h], edx
		mov	eax, [ebp+var_28]
		mov	eax, [eax+8]
		mov	[ebp+var_40], eax
		mov	eax, [ebp+var_28]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_44], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA00F2
		mov	eax, [ebp+var_28]
		mov	eax, [eax+18h]
		mov	[ebp+var_10], eax

loc_6CBA00F2:				; CODE XREF: lzo1z_999_compress_internal+1DCj
		mov	eax, [ebp+var_40]
		cmp	eax, 1
		jbe	short loc_6CBA0136
		mov	eax, [ebp+var_40]
		cmp	eax, 2
		jnz	short loc_6CBA0118
		mov	eax, [ebp+var_44]
		cmp	eax, 400h
		ja	short loc_6CBA0136
		cmp	[ebp+var_14], 0
		jz	short loc_6CBA0136
		cmp	[ebp+var_14], 3
		ja	short loc_6CBA0136

loc_6CBA0118:				; CODE XREF: lzo1z_999_compress_internal+1F5j
		mov	eax, [ebp+var_40]
		cmp	eax, 2
		jnz	short loc_6CBA0128
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+arg_8]
		jz	short loc_6CBA0136

loc_6CBA0128:				; CODE XREF: lzo1z_999_compress_internal+213j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+arg_8]
		jnz	short loc_6CBA013F
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA013F

loc_6CBA0136:				; CODE XREF: lzo1z_999_compress_internal+1EDj
					; lzo1z_999_compress_internal+1FFj ...
		mov	[ebp+var_40], 0
		jmp	short loc_6CBA015E
; ---------------------------------------------------------------------------

loc_6CBA013F:				; CODE XREF: lzo1z_999_compress_internal+223j
					; lzo1z_999_compress_internal+229j
		mov	eax, [ebp+var_40]
		cmp	eax, 3
		jnz	short loc_6CBA015E
		mov	eax, [ebp+var_44]
		cmp	eax, 0B00h
		jbe	short loc_6CBA015E
		cmp	[ebp+var_14], 3
		jbe	short loc_6CBA015E
		mov	[ebp+var_40], 0

loc_6CBA015E:				; CODE XREF: lzo1z_999_compress_internal+232j
					; lzo1z_999_compress_internal+23Aj ...
		mov	eax, [ebp+var_40]
		test	eax, eax
		jnz	short loc_6CBA019C
		add	[ebp+var_14], 1
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], 1
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9F60D
		mov	[ebp+var_30], eax
		jmp	loc_6CBA04AF
; ---------------------------------------------------------------------------

loc_6CBA019C:				; CODE XREF: lzo1z_999_compress_internal+258j
		mov	eax, [ebp+var_2C]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_6CBA01BF
		lea	eax, [ebp+var_44]
		mov	[esp+0D8h+var_D0], eax
		lea	eax, [ebp+var_40]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9FD02

loc_6CBA01BF:				; CODE XREF: lzo1z_999_compress_internal+299j
		mov	[ebp+var_1C], 0
		cmp	[ebp+var_18], 0
		jz	short loc_6CBA01D4
		mov	eax, [ebp+var_40]
		cmp	eax, [ebp+arg_28]
		jb	short loc_6CBA01E7

loc_6CBA01D4:				; CODE XREF: lzo1z_999_compress_internal+2BFj
		mov	[ebp+var_24], 0
		mov	[ebp+var_20], 0
		jmp	loc_6CBA0413
; ---------------------------------------------------------------------------

loc_6CBA01E7:				; CODE XREF: lzo1z_999_compress_internal+2C7j
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_40]
		mov	ecx, [ebp+var_14]
		mov	[esp+0D8h+var_D0], ecx
		mov	[esp+0D8h+var_D4], edx
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9FB9D
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		cmp	edx, eax
		cmovbe	eax, edx
		mov	[ebp+var_20], eax
		jmp	loc_6CBA0413
; ---------------------------------------------------------------------------

loc_6CBA0219:				; CODE XREF: lzo1z_999_compress_internal+51Bj
		mov	eax, [ebp+var_40]
		cmp	eax, [ebp+arg_24]
		jb	short loc_6CBA0231
		mov	eax, [ebp+arg_30]
		shr	eax, 2
		mov	edx, eax
		mov	eax, [ebp+var_2C]
		mov	[eax+0Ch], edx
		jmp	short loc_6CBA023A
; ---------------------------------------------------------------------------

loc_6CBA0231:				; CODE XREF: lzo1z_999_compress_internal+314j
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx

loc_6CBA023A:				; CODE XREF: lzo1z_999_compress_internal+324j
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], 1
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9F60D
		mov	[ebp+var_30], eax
		add	[ebp+var_1C], 1
		mov	eax, [ebp+var_28]
		mov	edx, [eax+14h]
		mov	eax, [ebp+var_44]
		cmp	edx, eax
		jnz	short loc_6CBA029A
		mov	eax, [ebp+var_28]
		mov	edx, [eax+0Ch]
		mov	eax, [ebp+var_28]
		mov	eax, [eax+14h]
		cmp	edx, eax
		jz	short loc_6CBA029A
		mov	eax, [ebp+var_40]
		cmp	eax, 2
		jbe	short loc_6CBA029A
		mov	eax, [ebp+var_40]
		cmp	eax, 8
		ja	short loc_6CBA029A
		mov	eax, [ebp+var_28]
		mov	dword ptr [eax+8], 0

loc_6CBA029A:				; CODE XREF: lzo1z_999_compress_internal+363j
					; lzo1z_999_compress_internal+373j ...
		mov	eax, [ebp+var_28]
		mov	edx, [eax+8]
		mov	eax, [ebp+var_40]
		cmp	edx, eax
		jnb	short loc_6CBA02AC
		jmp	loc_6CBA0413
; ---------------------------------------------------------------------------

loc_6CBA02AC:				; CODE XREF: lzo1z_999_compress_internal+39Aj
		mov	eax, [ebp+var_28]
		mov	edx, [eax+8]
		mov	eax, [ebp+var_40]
		cmp	edx, eax
		jnz	short loc_6CBA02CB
		mov	eax, [ebp+var_28]
		mov	edx, [eax+0Ch]
		mov	eax, [ebp+var_44]
		cmp	edx, eax
		jb	short loc_6CBA02CB
		jmp	loc_6CBA0413
; ---------------------------------------------------------------------------

loc_6CBA02CB:				; CODE XREF: lzo1z_999_compress_internal+3ACj
					; lzo1z_999_compress_internal+3B9j
		mov	eax, [ebp+var_2C]
		mov	eax, [eax+14h]
		test	eax, eax
		jz	short loc_6CBA02F4
		mov	eax, [ebp+var_28]
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+var_28]
		add	eax, 8
		mov	[esp+0D8h+var_D0], edx
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9FD02

loc_6CBA02F4:				; CODE XREF: lzo1z_999_compress_internal+3C8j
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+var_14]
		lea	ecx, [edx+eax]
		mov	eax, [ebp+var_28]
		mov	edx, [eax+0Ch]
		mov	eax, [ebp+var_28]
		mov	eax, [eax+8]
		mov	[esp+0D8h+var_D0], ecx
		mov	[esp+0D8h+var_D4], edx
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9FB9D
		mov	[ebp+var_34], eax
		cmp	[ebp+var_34], 0
		jnz	short loc_6CBA0327
		jmp	loc_6CBA0413
; ---------------------------------------------------------------------------

loc_6CBA0327:				; CODE XREF: lzo1z_999_compress_internal+415j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+arg_8]
		jz	short loc_6CBA034A
		mov	eax, [ebp+var_44]
		mov	edx, [ebp+var_14]
		mov	[esp+0D8h+var_D0], edx
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9FB9D
		jmp	short loc_6CBA034F
; ---------------------------------------------------------------------------

loc_6CBA034A:				; CODE XREF: lzo1z_999_compress_internal+422j
		mov	eax, 0

loc_6CBA034F:				; CODE XREF: lzo1z_999_compress_internal+43Dj
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_1C]
		mov	edx, [ebp+var_14]
		add	edx, eax
		mov	eax, [ebp+var_38]
		mov	[esp+0D8h+var_C4], eax
		mov	eax, [ebp+var_34]
		mov	[esp+0D8h+var_C8], eax
		mov	eax, [ebp+var_24]
		mov	[esp+0D8h+var_CC], eax
		mov	[esp+0D8h+var_D0], edx
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9FC8F
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+var_28]
		mov	eax, [eax+8]
		mov	ecx, [ebp+var_40]
		mov	edx, [ebp+var_3C]
		add	edx, ecx
		cmp	eax, edx
		jb	short loc_6CBA0413
		mov	eax, [ebp+var_28]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_28]
		mov	[eax+48h], edx
		cmp	[ebp+var_38], 0
		jz	short loc_6CBA0408
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_C8], eax
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9FB41
		mov	[ebp+var_C], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+var_44]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_1C]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9F798
		mov	[ebp+var_C], eax
		jmp	loc_6CBA04AF
; ---------------------------------------------------------------------------

loc_6CBA0408:				; CODE XREF: lzo1z_999_compress_internal+4A2j
		mov	eax, [ebp+var_1C]
		add	[ebp+var_14], eax
		jmp	loc_6CBA04AF
; ---------------------------------------------------------------------------

loc_6CBA0413:				; CODE XREF: lzo1z_999_compress_internal+2D7j
					; lzo1z_999_compress_internal+309j ...
		mov	eax, [ebp+var_1C]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CBA042C
		mov	eax, [ebp+var_28]
		mov	edx, [eax+4]
		mov	eax, [ebp+var_40]
		cmp	edx, eax
		ja	loc_6CBA0219

loc_6CBA042C:				; CODE XREF: lzo1z_999_compress_internal+50Ej
		mov	eax, [ebp+var_40]
		mov	[esp+0D8h+var_C8], eax
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9FB41
		mov	[ebp+var_C], eax
		mov	[ebp+var_14], 0
		mov	edx, [ebp+var_44]
		mov	eax, [ebp+var_40]
		mov	[esp+0D8h+var_CC], edx
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9F798
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_2C]
		mov	edx, [ebp+arg_30]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+var_1C]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_40]
		mov	[esp+0D8h+var_CC], edx
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9F60D
		mov	[ebp+var_30], eax

loc_6CBA04AF:				; CODE XREF: lzo1z_999_compress_internal:loc_6CBA00BAj
					; lzo1z_999_compress_internal+28Cj ...
		mov	eax, [ebp+var_28]
		mov	eax, [eax+4]
		test	eax, eax
		jnz	loc_6CBA00BF
		cmp	[ebp+var_14], 0
		jz	short loc_6CBA04E6
		mov	eax, [ebp+var_14]
		mov	[esp+0D8h+var_CC], eax
		mov	eax, [ebp+var_10]
		mov	[esp+0D8h+var_D0], eax
		mov	eax, [ebp+var_C]
		mov	[esp+0D8h+var_D4], eax
		mov	eax, [ebp+var_28]
		mov	[esp+0D8h+var_D8], eax
		call	sub_6CB9FA35
		mov	[ebp+var_C], eax

loc_6CBA04E6:				; CODE XREF: lzo1z_999_compress_internal+5B6j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	11h
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_28]
		mov	[eax+34h], edx
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_28]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CBA0574
		mov	eax, [ebp+var_28]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CBA0574
		mov	eax, [ebp+var_28]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+var_28]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+var_28]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+var_28]
		mov	edx, [edx+2Ch]
		mov	[esp+0D8h+var_CC], 0
		mov	[esp+0D8h+var_D0], ebx
		mov	[esp+0D8h+var_D4], ecx
		mov	[esp+0D8h+var_D8], edx
		call	eax

loc_6CBA0574:				; CODE XREF: lzo1z_999_compress_internal+62Aj
					; lzo1z_999_compress_internal+637j
		mov	eax, 0

loc_6CBA0579:				; CODE XREF: lzo1z_999_compress_internal+159j
					; lzo1z_999_compress_internal+1AAj
		add	esp, 0D4h
		pop	ebx
		pop	ebp
		retn
lzo1z_999_compress_internal endp

; Exported entry 111. lzo1z_999_compress_level

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1z_999_compress_level(int, int, int, int, int,	void *,	size_t,	int, int)
		public lzo1z_999_compress_level
lzo1z_999_compress_level proc near	; CODE XREF: lzo1z_999_compress_dict+46p
					; lzo1z_999_compress+48p

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h
arg_1C		= dword	ptr  24h
arg_20		= dword	ptr  28h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		cmp	[ebp+arg_20], 0
		jle	short loc_6CBA0597
		cmp	[ebp+arg_20], 9
		jle	short loc_6CBA05A1

loc_6CBA0597:				; CODE XREF: lzo1z_999_compress_level+Dj
		mov	eax, 0FFFFFFFFh
		jmp	loc_6CBA065F
; ---------------------------------------------------------------------------

loc_6CBA05A1:				; CODE XREF: lzo1z_999_compress_level+13j
		sub	[ebp+arg_20], 1
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA72F0
		mov	edi, [eax+4]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA72F0
		mov	esi, [eax]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA72E0
		mov	ebx, [eax+8]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA72E0
		mov	ecx, [eax+4]
		mov	edx, [ebp+arg_20]
		mov	eax, edx
		add	eax, eax
		add	eax, edx
		shl	eax, 3
		add	eax, offset dword_6CBA72E0
		mov	eax, [eax]
		mov	[esp+58h+var_24], edi ;	int
		mov	[esp+58h+var_28], esi ;	int
		mov	[esp+58h+var_2C], 0 ; int
		mov	[esp+58h+var_30], ebx ;	int
		mov	[esp+58h+var_34], ecx ;	int
		mov	[esp+58h+var_38], eax ;	int
		mov	eax, [ebp+arg_1C]
		mov	[esp+58h+var_3C], eax ;	int
		mov	eax, [ebp+arg_18]
		mov	[esp+58h+var_40], eax ;	size_t
		mov	eax, [ebp+arg_14]
		mov	[esp+58h+var_44], eax ;	void *
		mov	eax, [ebp+arg_10]
		mov	[esp+58h+var_48], eax ;	int
		mov	eax, [ebp+arg_C]
		mov	[esp+58h+var_4C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+58h+var_50], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+58h+var_54], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+58h+var_58], eax ;	int
		call	lzo1z_999_compress_internal

loc_6CBA065F:				; CODE XREF: lzo1z_999_compress_level+1Aj
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
lzo1z_999_compress_level endp

; Exported entry 109. lzo1z_999_compress_dict

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo1z_999_compress_dict(int, int,	int, int, int, void *, size_t)
		public lzo1z_999_compress_dict
lzo1z_999_compress_dict	proc near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	[esp+38h+var_18], 8 ; int
		mov	[esp+38h+var_1C], 0 ; int
		mov	eax, [ebp+arg_18]
		mov	[esp+38h+var_20], eax ;	size_t
		mov	eax, [ebp+arg_14]
		mov	[esp+38h+var_24], eax ;	void *
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax ;	int
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax ;	int
		call	lzo1z_999_compress_level
		leave
		retn
lzo1z_999_compress_dict	endp

; Exported entry 108. lzo1z_999_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1z_999_compress
lzo1z_999_compress proc	near

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		mov	[esp+38h+var_18], 8 ; int
		mov	[esp+38h+var_1C], 0 ; int
		mov	[esp+38h+var_20], 0 ; size_t
		mov	[esp+38h+var_24], 0 ; void *
		mov	eax, [ebp+arg_10]
		mov	[esp+38h+var_28], eax ;	int
		mov	eax, [ebp+arg_C]
		mov	[esp+38h+var_2C], eax ;	int
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_30], eax ;	int
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_34], eax ;	int
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax ;	int
		call	lzo1z_999_compress_level
		leave
		retn
lzo1z_999_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 112. lzo1z_decompress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1z_decompress
lzo1z_decompress proc near

var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_18], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CBA078B
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 3
		ja	short loc_6CBA0765
		jmp	loc_6CBA0BE9
; ---------------------------------------------------------------------------

loc_6CBA0765:				; CODE XREF: lzo1z_decompress+50j
					; lzo1z_decompress+76j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0765
		jmp	loc_6CBA0867
; ---------------------------------------------------------------------------

loc_6CBA078B:				; CODE XREF: lzo1z_decompress+35j
					; lzo1z_decompress+4D6j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CBA07A8
		jmp	loc_6CBA08FE
; ---------------------------------------------------------------------------

loc_6CBA07A8:				; CODE XREF: lzo1z_decompress+93j
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA07DF
		jmp	short loc_6CBA07BB
; ---------------------------------------------------------------------------

loc_6CBA07B0:				; CODE XREF: lzo1z_decompress+B5j
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CBA07BB:				; CODE XREF: lzo1z_decompress+A0j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA07B0
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 0Fh
		mov	[ebp+var_C], eax

loc_6CBA07DF:				; CODE XREF: lzo1z_decompress+9Ej
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jz	short loc_6CBA0867
		cmp	[ebp+var_C], 3
		jbe	short loc_6CBA0846

loc_6CBA0801:				; CODE XREF: lzo1z_decompress+10Dj
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CBA0801
		cmp	[ebp+var_C], 0
		jz	short loc_6CBA0867

loc_6CBA0823:				; CODE XREF: lzo1z_decompress+134j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0823
		jmp	short loc_6CBA0867
; ---------------------------------------------------------------------------

loc_6CBA0846:				; CODE XREF: lzo1z_decompress+F1j
					; lzo1z_decompress+157j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0846

loc_6CBA0867:				; CODE XREF: lzo1z_decompress+78j
					; lzo1z_decompress+EBj	...
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CBA0881
		jmp	short loc_6CBA08FE
; ---------------------------------------------------------------------------

loc_6CBA0881:				; CODE XREF: lzo1z_decompress+16Fj
		mov	eax, [ebp+var_C]
		shl	eax, 6
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, ecx
		add	eax, 701h
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CBA0BCB
; ---------------------------------------------------------------------------

loc_6CBA08FE:				; CODE XREF: lzo1z_decompress+95j
					; lzo1z_decompress+171j ...
		cmp	[ebp+var_C], 3Fh
		jbe	short loc_6CBA0964
		mov	eax, [ebp+var_C]
		and	eax, 1Fh
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		cmp	[ebp+var_1C], 1Bh
		jbe	short loc_6CBA0923
		mov	eax, [ebp+var_14]
		neg	eax
		add	[ebp+var_10], eax
		jmp	short loc_6CBA0953
; ---------------------------------------------------------------------------

loc_6CBA0923:				; CODE XREF: lzo1z_decompress+209j
		mov	eax, [ebp+var_1C]
		shl	eax, 6
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, ecx
		add	eax, 1
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_1C]
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_14], eax

loc_6CBA0953:				; CODE XREF: lzo1z_decompress+213j
		mov	eax, [ebp+var_C]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_C], eax
		jmp	loc_6CBA0B7C
; ---------------------------------------------------------------------------

loc_6CBA0964:				; CODE XREF: lzo1z_decompress+1F4j
		cmp	[ebp+var_C], 1Fh
		jbe	short loc_6CBA09E6
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA09A5
		jmp	short loc_6CBA0981
; ---------------------------------------------------------------------------

loc_6CBA0976:				; CODE XREF: lzo1z_decompress+27Bj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CBA0981:				; CODE XREF: lzo1z_decompress+266j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA0976
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax

loc_6CBA09A5:				; CODE XREF: lzo1z_decompress+264j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		lea	edx, [eax+1]
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_20]
		mov	[ebp+var_14], eax
		add	[ebp+var_8], 2
		jmp	loc_6CBA0B0C
; ---------------------------------------------------------------------------

loc_6CBA09E6:				; CODE XREF: lzo1z_decompress+25Aj
		cmp	[ebp+var_C], 0Fh
		jbe	loc_6CBA0AA8
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		and	eax, 8
		shl	eax, 0Bh
		neg	eax
		add	[ebp+var_10], eax
		and	[ebp+var_C], 7
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0A3F
		jmp	short loc_6CBA0A1B
; ---------------------------------------------------------------------------

loc_6CBA0A10:				; CODE XREF: lzo1z_decompress+315j
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1

loc_6CBA0A1B:				; CODE XREF: lzo1z_decompress+300j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA0A10
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 7
		mov	[ebp+var_C], eax

loc_6CBA0A3F:				; CODE XREF: lzo1z_decompress+2FEj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, edx
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CBA0A92
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jz	loc_6CBA0C67
		jmp	loc_6CBA0C51
; ---------------------------------------------------------------------------

loc_6CBA0A92:				; CODE XREF: lzo1z_decompress+35Fj
		sub	[ebp+var_10], 4000h
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_14], eax
		jmp	short loc_6CBA0B0C
; ---------------------------------------------------------------------------

loc_6CBA0AA8:				; CODE XREF: lzo1z_decompress+2DCj
		mov	eax, [ebp+var_C]
		shl	eax, 6
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, ecx
		add	eax, 1
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CBA0BCB
; ---------------------------------------------------------------------------

loc_6CBA0B0C:				; CODE XREF: lzo1z_decompress+2D3j
					; lzo1z_decompress+398j
		cmp	[ebp+var_C], 5
		jbe	short loc_6CBA0B7C
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CBA0B7C
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 2

loc_6CBA0B37:				; CODE XREF: lzo1z_decompress+443j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CBA0B37
		cmp	[ebp+var_C], 0
		jz	short loc_6CBA0B7A

loc_6CBA0B59:				; CODE XREF: lzo1z_decompress+46Aj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0B59

loc_6CBA0B7A:				; CODE XREF: lzo1z_decompress+449j
		jmp	short loc_6CBA0BCB
; ---------------------------------------------------------------------------

loc_6CBA0B7C:				; CODE XREF: lzo1z_decompress+251j
					; lzo1z_decompress+402j ...
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CBA0BAA:				; CODE XREF: lzo1z_decompress+4BBj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0BAA

loc_6CBA0BCB:				; CODE XREF: lzo1z_decompress+1EBj
					; lzo1z_decompress+3F9j ...
		mov	eax, [ebp+var_8]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0BE9
		nop
		jmp	loc_6CBA078B
; ---------------------------------------------------------------------------

loc_6CBA0BE9:				; CODE XREF: lzo1z_decompress+52j
					; lzo1z_decompress+4D3j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 1
		jbe	short loc_6CBA0C3A
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 2
		jbe	short loc_6CBA0C3A
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CBA0C3A:				; CODE XREF: lzo1z_decompress+4F6j
					; lzo1z_decompress+513j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		jmp	loc_6CBA08FE
; ---------------------------------------------------------------------------

loc_6CBA0C51:				; CODE XREF: lzo1z_decompress+37Fj
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jnb	short loc_6CBA0C60
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CBA0C6C
; ---------------------------------------------------------------------------

loc_6CBA0C60:				; CODE XREF: lzo1z_decompress+549j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CBA0C6C
; ---------------------------------------------------------------------------

loc_6CBA0C67:				; CODE XREF: lzo1z_decompress+379j
		mov	eax, 0

locret_6CBA0C6C:			; CODE XREF: lzo1z_decompress+550j
					; lzo1z_decompress+557j
		leave
		retn
lzo1z_decompress endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 114. lzo1z_decompress_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1z_decompress_safe
lzo1z_decompress_safe proc near

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 30h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	[ebp+var_14], 0
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA0CC3
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA0CC3:				; CODE XREF: lzo1z_decompress_safe+42j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CBA0D40
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 3
		ja	short loc_6CBA0CED
		jmp	loc_6CBA133B
; ---------------------------------------------------------------------------

loc_6CBA0CED:				; CODE XREF: lzo1z_decompress_safe+6Cj
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CBA0D01
		jmp	loc_6CBA1405
; ---------------------------------------------------------------------------

loc_6CBA0D01:				; CODE XREF: lzo1z_decompress_safe+80j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CBA0D1A
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA0D1A:				; CODE XREF: lzo1z_decompress_safe+99j
					; lzo1z_decompress_safe+BFj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0D1A
		jmp	loc_6CBA0E7F
; ---------------------------------------------------------------------------

loc_6CBA0D40:				; CODE XREF: lzo1z_decompress_safe+51j
					; lzo1z_decompress_safe+6BCj
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CBA0D54
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA0D54:				; CODE XREF: lzo1z_decompress_safe+D3j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CBA0D71
		jmp	loc_6CBA0F49
; ---------------------------------------------------------------------------

loc_6CBA0D71:				; CODE XREF: lzo1z_decompress_safe+F0j
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0DC5
		jmp	short loc_6CBA0DA1
; ---------------------------------------------------------------------------

loc_6CBA0D79:				; CODE XREF: lzo1z_decompress_safe+12Fj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CBA0D92
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA0D92:				; CODE XREF: lzo1z_decompress_safe+111j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA0DA1
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA0DA1:				; CODE XREF: lzo1z_decompress_safe+FDj
					; lzo1z_decompress_safe+120j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA0D79
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 0Fh
		mov	[ebp+var_C], eax

loc_6CBA0DC5:				; CODE XREF: lzo1z_decompress_safe+FBj
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CBA0DDE
		jmp	loc_6CBA1405
; ---------------------------------------------------------------------------

loc_6CBA0DDE:				; CODE XREF: lzo1z_decompress_safe+15Dj
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 6
		cmp	eax, edx
		jnb	short loc_6CBA0DF7
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA0DF7:				; CODE XREF: lzo1z_decompress_safe+176j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jz	short loc_6CBA0E7F
		cmp	[ebp+var_C], 3
		jbe	short loc_6CBA0E5E

loc_6CBA0E19:				; CODE XREF: lzo1z_decompress_safe+1B9j
		mov	eax, [ebp+var_8]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_8], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CBA0E19
		cmp	[ebp+var_C], 0
		jz	short loc_6CBA0E7F

loc_6CBA0E3B:				; CODE XREF: lzo1z_decompress_safe+1E0j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0E3B
		jmp	short loc_6CBA0E7F
; ---------------------------------------------------------------------------

loc_6CBA0E5E:				; CODE XREF: lzo1z_decompress_safe+19Dj
					; lzo1z_decompress_safe+203j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA0E5E

loc_6CBA0E7F:				; CODE XREF: lzo1z_decompress_safe+C1j
					; lzo1z_decompress_safe+197j ...
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0Fh
		jbe	short loc_6CBA0E9C
		jmp	loc_6CBA0F49
; ---------------------------------------------------------------------------

loc_6CBA0E9C:				; CODE XREF: lzo1z_decompress_safe+21Bj
		mov	eax, [ebp+var_C]
		shl	eax, 6
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, ecx
		add	eax, 701h
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CBA141D
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CBA141D
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CBA0F05
		jmp	loc_6CBA1405
; ---------------------------------------------------------------------------

loc_6CBA0F05:				; CODE XREF: lzo1z_decompress_safe+284j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CBA131D
; ---------------------------------------------------------------------------

loc_6CBA0F49:				; CODE XREF: lzo1z_decompress_safe+F2j
					; lzo1z_decompress_safe+21Dj ...
		cmp	[ebp+var_C], 3Fh
		jbe	loc_6CBA0FE8
		mov	eax, [ebp+var_C]
		and	eax, 1Fh
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		cmp	[ebp+var_20], 1Bh
		jbe	short loc_6CBA0F72
		mov	eax, [ebp+var_14]
		neg	eax
		add	[ebp+var_10], eax
		jmp	short loc_6CBA0FA2
; ---------------------------------------------------------------------------

loc_6CBA0F72:				; CODE XREF: lzo1z_decompress_safe+2ECj
		mov	eax, [ebp+var_20]
		shl	eax, 6
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, ecx
		add	eax, 1
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		neg	eax
		add	[ebp+var_10], eax
		mov	eax, [ebp+var_20]
		mov	[ebp+var_14], eax

loc_6CBA0FA2:				; CODE XREF: lzo1z_decompress_safe+2F6j
		mov	eax, [ebp+var_C]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CBA141D
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CBA141D
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CBA0FE3
		jmp	loc_6CBA1405
; ---------------------------------------------------------------------------

loc_6CBA0FE3:				; CODE XREF: lzo1z_decompress_safe+362j
		jmp	loc_6CBA12CE
; ---------------------------------------------------------------------------

loc_6CBA0FE8:				; CODE XREF: lzo1z_decompress_safe+2D3j
		cmp	[ebp+var_C], 1Fh
		jbe	loc_6CBA109F
		and	[ebp+var_C], 1Fh
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA105E
		jmp	short loc_6CBA1026
; ---------------------------------------------------------------------------

loc_6CBA0FFE:				; CODE XREF: lzo1z_decompress_safe+3B4j
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CBA1017
		jmp	loc_6CBA1405
; ---------------------------------------------------------------------------

loc_6CBA1017:				; CODE XREF: lzo1z_decompress_safe+396j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA1026
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA1026:				; CODE XREF: lzo1z_decompress_safe+382j
					; lzo1z_decompress_safe+3A5j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA0FFE
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CBA105E
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA105E:				; CODE XREF: lzo1z_decompress_safe+380j
					; lzo1z_decompress_safe+3DDj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		lea	edx, [eax+1]
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_24]
		mov	[ebp+var_14], eax
		add	[ebp+var_8], 2
		jmp	loc_6CBA1229
; ---------------------------------------------------------------------------

loc_6CBA109F:				; CODE XREF: lzo1z_decompress_safe+372j
		cmp	[ebp+var_C], 0Fh
		jbe	loc_6CBA1195
		mov	eax, [ebp+var_4]
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		and	eax, 8
		shl	eax, 0Bh
		neg	eax
		add	[ebp+var_10], eax
		and	[ebp+var_C], 7
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA1129
		jmp	short loc_6CBA10F1
; ---------------------------------------------------------------------------

loc_6CBA10C9:				; CODE XREF: lzo1z_decompress_safe+47Fj
		add	[ebp+var_C], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_C], 0FFFFFE01h
		jbe	short loc_6CBA10E2
		jmp	loc_6CBA1405
; ---------------------------------------------------------------------------

loc_6CBA10E2:				; CODE XREF: lzo1z_decompress_safe+461j
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA10F1
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA10F1:				; CODE XREF: lzo1z_decompress_safe+44Dj
					; lzo1z_decompress_safe+470j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA10C9
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_C]
		add	eax, edx
		add	eax, 7
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CBA1129
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA1129:				; CODE XREF: lzo1z_decompress_safe+44Bj
					; lzo1z_decompress_safe+4A8j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, edx
		neg	eax
		add	[ebp+var_10], eax
		add	[ebp+var_8], 2
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CBA117C
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jz	loc_6CBA13E6
		jmp	loc_6CBA13D0
; ---------------------------------------------------------------------------

loc_6CBA117C:				; CODE XREF: lzo1z_decompress_safe+4DDj
		sub	[ebp+var_10], 4000h
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_14], eax
		jmp	loc_6CBA1229
; ---------------------------------------------------------------------------

loc_6CBA1195:				; CODE XREF: lzo1z_decompress_safe+429j
		mov	eax, [ebp+var_C]
		shl	eax, 6
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, ecx
		add	eax, 1
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, edx
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_14], eax
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CBA141D
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CBA141D
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CBA11FC
		jmp	loc_6CBA1405
; ---------------------------------------------------------------------------

loc_6CBA11FC:				; CODE XREF: lzo1z_decompress_safe+57Bj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CBA131D
; ---------------------------------------------------------------------------

loc_6CBA1229:				; CODE XREF: lzo1z_decompress_safe+420j
					; lzo1z_decompress_safe+516j
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CBA141D
		mov	edx, [ebp+var_10]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CBA141D
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CBA125E
		jmp	loc_6CBA1405
; ---------------------------------------------------------------------------

loc_6CBA125E:				; CODE XREF: lzo1z_decompress_safe+5DDj
		cmp	[ebp+var_C], 5
		jbe	short loc_6CBA12CE
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 3
		jle	short loc_6CBA12CE
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 2

loc_6CBA1289:				; CODE XREF: lzo1z_decompress_safe+629j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_4]
		mov	[eax], edx
		add	[ebp+var_4], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_C], 4
		cmp	[ebp+var_C], 3
		ja	short loc_6CBA1289
		cmp	[ebp+var_C], 0
		jz	short loc_6CBA12CC

loc_6CBA12AB:				; CODE XREF: lzo1z_decompress_safe+650j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA12AB

loc_6CBA12CC:				; CODE XREF: lzo1z_decompress_safe+62Fj
		jmp	short loc_6CBA131D
; ---------------------------------------------------------------------------

loc_6CBA12CE:				; CODE XREF: lzo1z_decompress_safe:loc_6CBA0FE3j
					; lzo1z_decompress_safe+5E8j ...
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CBA12FC:				; CODE XREF: lzo1z_decompress_safe+6A1j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA12FC

loc_6CBA131D:				; CODE XREF: lzo1z_decompress_safe+2CAj
					; lzo1z_decompress_safe+5AAj ...
		mov	eax, [ebp+var_8]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA133B
		nop
		jmp	loc_6CBA0D40
; ---------------------------------------------------------------------------

loc_6CBA133B:				; CODE XREF: lzo1z_decompress_safe+6Ej
					; lzo1z_decompress_safe+6B9j
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CBA134F
		jmp	loc_6CBA1405
; ---------------------------------------------------------------------------

loc_6CBA134F:				; CODE XREF: lzo1z_decompress_safe+6CEj
		mov	edx, [ebp+var_18]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_C]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CBA1368
		jmp	loc_6CBA13ED
; ---------------------------------------------------------------------------

loc_6CBA1368:				; CODE XREF: lzo1z_decompress_safe+6E7j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 1
		jbe	short loc_6CBA13B9
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_C], 2
		jbe	short loc_6CBA13B9
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CBA13B9:				; CODE XREF: lzo1z_decompress_safe+709j
					; lzo1z_decompress_safe+726j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_C], eax
		jmp	loc_6CBA0F49
; ---------------------------------------------------------------------------

loc_6CBA13D0:				; CODE XREF: lzo1z_decompress_safe+4FDj
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_18]
		jnb	short loc_6CBA13DF
		mov	eax, 0FFFFFFF8h
		jmp	short loc_6CBA13EB
; ---------------------------------------------------------------------------

loc_6CBA13DF:				; CODE XREF: lzo1z_decompress_safe+75Cj
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CBA1433
; ---------------------------------------------------------------------------

loc_6CBA13E6:				; CODE XREF: lzo1z_decompress_safe+4F7j
		mov	eax, 0

loc_6CBA13EB:				; CODE XREF: lzo1z_decompress_safe+763j
		jmp	short locret_6CBA1433
; ---------------------------------------------------------------------------

loc_6CBA13ED:				; CODE XREF: lzo1z_decompress_safe+44j
					; lzo1z_decompress_safe+9Bj ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CBA1433
; ---------------------------------------------------------------------------

loc_6CBA1405:				; CODE XREF: lzo1z_decompress_safe+82j
					; lzo1z_decompress_safe+15Fj ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFBh
		jmp	short locret_6CBA1433
; ---------------------------------------------------------------------------

loc_6CBA141D:				; CODE XREF: lzo1z_decompress_safe+263j
					; lzo1z_decompress_safe+271j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFAh

locret_6CBA1433:			; CODE XREF: lzo1z_decompress_safe+76Aj
					; lzo1z_decompress_safe:loc_6CBA13EBj ...
		leave
		retn
lzo1z_decompress_safe endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 113. lzo1z_decompress_dict_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo1z_decompress_dict_safe
lzo1z_decompress_dict_safe proc	near

Dst		= dword	ptr -58h
Src		= dword	ptr -54h
Size		= dword	ptr -50h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		sub	esp, 58h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_3C], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_40], eax
		mov	[ebp+var_20], 0
		cmp	[ebp+arg_14], 0
		jz	short loc_6CBA1495
		cmp	[ebp+arg_18], 0BFFFh
		jbe	short loc_6CBA1488
		mov	eax, [ebp+arg_18]
		sub	eax, 0BFFFh
		add	[ebp+arg_14], eax
		mov	[ebp+arg_18], 0BFFFh

loc_6CBA1488:				; CODE XREF: lzo1z_decompress_dict_safe+32j
		mov	eax, [ebp+arg_18]
		mov	edx, [ebp+arg_14]
		add	eax, edx
		mov	[ebp+var_1C], eax
		jmp	short loc_6CBA14A3
; ---------------------------------------------------------------------------

loc_6CBA1495:				; CODE XREF: lzo1z_decompress_dict_safe+29j
		mov	[ebp+arg_18], 0
		mov	[ebp+var_1C], 0

loc_6CBA14A3:				; CODE XREF: lzo1z_decompress_dict_safe+51j
		mov	eax, [ebp+arg_C]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_10], eax
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CBA14C7
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA14C7:				; CODE XREF: lzo1z_decompress_dict_safe+7Ej
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		cmp	al, 11h
		jbe	short loc_6CBA1544
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		sub	eax, 11h
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 3
		ja	short loc_6CBA14F1
		jmp	loc_6CBA1C75
; ---------------------------------------------------------------------------

loc_6CBA14F1:				; CODE XREF: lzo1z_decompress_dict_safe+A8j
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CBA1505
		jmp	loc_6CBA1D3F
; ---------------------------------------------------------------------------

loc_6CBA1505:				; CODE XREF: lzo1z_decompress_dict_safe+BCj
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CBA151E
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA151E:				; CODE XREF: lzo1z_decompress_dict_safe+D5j
					; lzo1z_decompress_dict_safe+FBj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA151E
		jmp	loc_6CBA1683
; ---------------------------------------------------------------------------

loc_6CBA1544:				; CODE XREF: lzo1z_decompress_dict_safe+8Dj
					; lzo1z_decompress_dict_safe+82Ej
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CBA1558
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA1558:				; CODE XREF: lzo1z_decompress_dict_safe+10Fj
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0Fh
		jbe	short loc_6CBA1575
		jmp	loc_6CBA17F8
; ---------------------------------------------------------------------------

loc_6CBA1575:				; CODE XREF: lzo1z_decompress_dict_safe+12Cj
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA15C9
		jmp	short loc_6CBA15A5
; ---------------------------------------------------------------------------

loc_6CBA157D:				; CODE XREF: lzo1z_decompress_dict_safe+16Bj
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1
		cmp	[ebp+var_14], 0FFFFFE01h
		jbe	short loc_6CBA1596
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA1596:				; CODE XREF: lzo1z_decompress_dict_safe+14Dj
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CBA15A5
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA15A5:				; CODE XREF: lzo1z_decompress_dict_safe+139j
					; lzo1z_decompress_dict_safe+15Cj
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA157D
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_14]
		add	eax, edx
		add	eax, 0Fh
		mov	[ebp+var_14], eax

loc_6CBA15C9:				; CODE XREF: lzo1z_decompress_dict_safe+137j
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CBA15E2
		jmp	loc_6CBA1D3F
; ---------------------------------------------------------------------------

loc_6CBA15E2:				; CODE XREF: lzo1z_decompress_dict_safe+199j
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 6
		cmp	eax, edx
		jnb	short loc_6CBA15FB
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA15FB:				; CODE XREF: lzo1z_decompress_dict_safe+1B2j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_C]
		mov	[eax], edx
		add	[ebp+var_C], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jz	short loc_6CBA1683
		cmp	[ebp+var_14], 3
		jbe	short loc_6CBA1662

loc_6CBA161D:				; CODE XREF: lzo1z_decompress_dict_safe+1F5j
		mov	eax, [ebp+var_10]
		mov	edx, [eax]
		mov	eax, [ebp+var_C]
		mov	[eax], edx
		add	[ebp+var_C], 4
		add	[ebp+var_10], 4
		sub	[ebp+var_14], 4
		cmp	[ebp+var_14], 3
		ja	short loc_6CBA161D
		cmp	[ebp+var_14], 0
		jz	short loc_6CBA1683

loc_6CBA163F:				; CODE XREF: lzo1z_decompress_dict_safe+21Cj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA163F
		jmp	short loc_6CBA1683
; ---------------------------------------------------------------------------

loc_6CBA1662:				; CODE XREF: lzo1z_decompress_dict_safe+1D9j
					; lzo1z_decompress_dict_safe+23Fj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA1662

loc_6CBA1683:				; CODE XREF: lzo1z_decompress_dict_safe+FDj
					; lzo1z_decompress_dict_safe+1D3j ...
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0Fh
		jbe	short loc_6CBA16A0
		jmp	loc_6CBA17F8
; ---------------------------------------------------------------------------

loc_6CBA16A0:				; CODE XREF: lzo1z_decompress_dict_safe+257j
		mov	eax, [ebp+var_14]
		shl	eax, 6
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, ecx
		add	eax, 701h
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 2
		ja	short loc_6CBA16DE
		jmp	loc_6CBA1D3F
; ---------------------------------------------------------------------------

loc_6CBA16DE:				; CODE XREF: lzo1z_decompress_dict_safe+295j
		mov	[ebp+var_14], 3
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_18]
		jb	short loc_6CBA1752
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_14]
		jb	short loc_6CBA172C
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_24]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	short loc_6CBA174D
; ---------------------------------------------------------------------------

loc_6CBA172C:				; CODE XREF: lzo1z_decompress_dict_safe+2C7j
					; lzo1z_decompress_dict_safe+309j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_24]
		lea	ecx, [edx+1]
		mov	[ebp+var_24], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA172C

loc_6CBA174D:				; CODE XREF: lzo1z_decompress_dict_safe+2E8j
		jmp	loc_6CBA1C57
; ---------------------------------------------------------------------------

loc_6CBA1752:				; CODE XREF: lzo1z_decompress_dict_safe+2B0j
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+arg_18]
		jbe	short loc_6CBA176C
		jmp	loc_6CBA1D57
; ---------------------------------------------------------------------------

loc_6CBA176C:				; CODE XREF: lzo1z_decompress_dict_safe+323j
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, edx
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CBA17D4
		mov	eax, [ebp+var_18]
		sub	[ebp+var_14], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_28]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_18]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_28], eax

loc_6CBA17AE:				; CODE XREF: lzo1z_decompress_dict_safe+38Bj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_28]
		lea	ecx, [edx+1]
		mov	[ebp+var_28], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA17AE
		jmp	loc_6CBA1C57
; ---------------------------------------------------------------------------

loc_6CBA17D4:				; CODE XREF: lzo1z_decompress_dict_safe+33Fj
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_28]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	loc_6CBA1C57
; ---------------------------------------------------------------------------

loc_6CBA17F8:				; CODE XREF: lzo1z_decompress_dict_safe+12Ej
					; lzo1z_decompress_dict_safe+259j ...
		cmp	[ebp+var_14], 3Fh
		jbe	short loc_6CBA184E
		mov	eax, [ebp+var_14]
		and	eax, 1Fh
		mov	[ebp+var_18], eax
		cmp	[ebp+var_18], 1Bh
		jbe	short loc_6CBA1815
		mov	eax, [ebp+var_20]
		mov	[ebp+var_18], eax
		jmp	short loc_6CBA183D
; ---------------------------------------------------------------------------

loc_6CBA1815:				; CODE XREF: lzo1z_decompress_dict_safe+3C9j
		mov	eax, [ebp+var_18]
		shl	eax, 6
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, ecx
		add	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		mov	[ebp+var_20], eax

loc_6CBA183D:				; CODE XREF: lzo1z_decompress_dict_safe+3D1j
		mov	eax, [ebp+var_14]
		shr	eax, 5
		sub	eax, 1
		mov	[ebp+var_14], eax
		jmp	loc_6CBA1B2F
; ---------------------------------------------------------------------------

loc_6CBA184E:				; CODE XREF: lzo1z_decompress_dict_safe+3BAj
		cmp	[ebp+var_14], 1Fh
		jbe	loc_6CBA18F6
		and	[ebp+var_14], 1Fh
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA18C4
		jmp	short loc_6CBA188C
; ---------------------------------------------------------------------------

loc_6CBA1864:				; CODE XREF: lzo1z_decompress_dict_safe+452j
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1
		cmp	[ebp+var_14], 0FFFFFE01h
		jbe	short loc_6CBA187D
		jmp	loc_6CBA1D3F
; ---------------------------------------------------------------------------

loc_6CBA187D:				; CODE XREF: lzo1z_decompress_dict_safe+434j
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CBA188C
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA188C:				; CODE XREF: lzo1z_decompress_dict_safe+420j
					; lzo1z_decompress_dict_safe+443j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA1864
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_14]
		add	eax, edx
		add	eax, 1Fh
		mov	[ebp+var_14], eax
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CBA18C4
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA18C4:				; CODE XREF: lzo1z_decompress_dict_safe+41Ej
					; lzo1z_decompress_dict_safe+47Bj
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		lea	edx, [eax+1]
		mov	eax, [ebp+var_10]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, edx
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		mov	[ebp+var_20], eax
		add	[ebp+var_10], 2
		jmp	loc_6CBA1B2F
; ---------------------------------------------------------------------------

loc_6CBA18F6:				; CODE XREF: lzo1z_decompress_dict_safe+410j
		cmp	[ebp+var_14], 0Fh
		jbe	loc_6CBA19D9
		mov	eax, [ebp+var_14]
		and	eax, 8
		shl	eax, 0Bh
		mov	[ebp+var_18], eax
		and	[ebp+var_14], 7
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA1978
		jmp	short loc_6CBA1940
; ---------------------------------------------------------------------------

loc_6CBA1918:				; CODE XREF: lzo1z_decompress_dict_safe+506j
		add	[ebp+var_14], 0FFh
		add	[ebp+var_10], 1
		cmp	[ebp+var_14], 0FFFFFE01h
		jbe	short loc_6CBA1931
		jmp	loc_6CBA1D3F
; ---------------------------------------------------------------------------

loc_6CBA1931:				; CODE XREF: lzo1z_decompress_dict_safe+4E8j
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_10]
		cmp	edx, eax
		jnz	short loc_6CBA1940
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA1940:				; CODE XREF: lzo1z_decompress_dict_safe+4D4j
					; lzo1z_decompress_dict_safe+4F7j
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA1918
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_14]
		add	eax, edx
		add	eax, 7
		mov	[ebp+var_14], eax
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CBA1978
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA1978:				; CODE XREF: lzo1z_decompress_dict_safe+4D2j
					; lzo1z_decompress_dict_safe+52Fj
		mov	eax, [ebp+var_10]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 6
		mov	edx, eax
		mov	eax, [ebp+var_10]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, edx
		add	[ebp+var_18], eax
		add	[ebp+var_10], 2
		cmp	[ebp+var_18], 0
		jnz	short loc_6CBA19C7
		nop
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_3C]
		jz	loc_6CBA1D20
		jmp	loc_6CBA1D0A
; ---------------------------------------------------------------------------

loc_6CBA19C7:				; CODE XREF: lzo1z_decompress_dict_safe+560j
		add	[ebp+var_18], 4000h
		mov	eax, [ebp+var_18]
		mov	[ebp+var_20], eax
		jmp	loc_6CBA1B2F
; ---------------------------------------------------------------------------

loc_6CBA19D9:				; CODE XREF: lzo1z_decompress_dict_safe+4B8j
		mov	eax, [ebp+var_14]
		shl	eax, 6
		mov	ecx, eax
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		shr	al, 2
		movzx	eax, al
		add	eax, ecx
		add	eax, 1
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		mov	[ebp+var_20], eax
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CBA1A15
		jmp	loc_6CBA1D3F
; ---------------------------------------------------------------------------

loc_6CBA1A15:				; CODE XREF: lzo1z_decompress_dict_safe+5CCj
		mov	[ebp+var_14], 2
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_18]
		jb	short loc_6CBA1A89
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_14]
		jb	short loc_6CBA1A63
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	short loc_6CBA1A84
; ---------------------------------------------------------------------------

loc_6CBA1A63:				; CODE XREF: lzo1z_decompress_dict_safe+5FEj
					; lzo1z_decompress_dict_safe+640j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_2C]
		lea	ecx, [edx+1]
		mov	[ebp+var_2C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA1A63

loc_6CBA1A84:				; CODE XREF: lzo1z_decompress_dict_safe+61Fj
		jmp	loc_6CBA1C57
; ---------------------------------------------------------------------------

loc_6CBA1A89:				; CODE XREF: lzo1z_decompress_dict_safe+5E7j
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+arg_18]
		jbe	short loc_6CBA1AA3
		jmp	loc_6CBA1D57
; ---------------------------------------------------------------------------

loc_6CBA1AA3:				; CODE XREF: lzo1z_decompress_dict_safe+65Aj
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, edx
		mov	[ebp+var_30], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CBA1B0B
		mov	eax, [ebp+var_18]
		sub	[ebp+var_14], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_30]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_18]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_30], eax

loc_6CBA1AE5:				; CODE XREF: lzo1z_decompress_dict_safe+6C2j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_30]
		lea	ecx, [edx+1]
		mov	[ebp+var_30], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA1AE5
		jmp	loc_6CBA1C57
; ---------------------------------------------------------------------------

loc_6CBA1B0B:				; CODE XREF: lzo1z_decompress_dict_safe+676j
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_30]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	loc_6CBA1C57
; ---------------------------------------------------------------------------

loc_6CBA1B2F:				; CODE XREF: lzo1z_decompress_dict_safe+407j
					; lzo1z_decompress_dict_safe+4AFj ...
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 2
		cmp	eax, edx
		jnb	short loc_6CBA1B48
		jmp	loc_6CBA1D3F
; ---------------------------------------------------------------------------

loc_6CBA1B48:				; CODE XREF: lzo1z_decompress_dict_safe+6FFj
		add	[ebp+var_14], 2
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_18]
		jb	short loc_6CBA1BB9
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_C]
		add	eax, edx
		mov	[ebp+var_34], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+var_14]
		jb	short loc_6CBA1B93
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_34]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax
		jmp	short loc_6CBA1BB4
; ---------------------------------------------------------------------------

loc_6CBA1B93:				; CODE XREF: lzo1z_decompress_dict_safe+72Ej
					; lzo1z_decompress_dict_safe+770j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_34]
		lea	ecx, [edx+1]
		mov	[ebp+var_34], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA1B93

loc_6CBA1BB4:				; CODE XREF: lzo1z_decompress_dict_safe+74Fj
		jmp	loc_6CBA1C57
; ---------------------------------------------------------------------------

loc_6CBA1BB9:				; CODE XREF: lzo1z_decompress_dict_safe+717j
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		cmp	eax, [ebp+arg_18]
		jbe	short loc_6CBA1BD3
		jmp	loc_6CBA1D57
; ---------------------------------------------------------------------------

loc_6CBA1BD3:				; CODE XREF: lzo1z_decompress_dict_safe+78Aj
		mov	eax, [ebp+var_18]
		neg	eax
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		add	eax, edx
		mov	[ebp+var_38], eax
		mov	eax, [ebp+var_14]
		cmp	eax, [ebp+var_18]
		jbe	short loc_6CBA1C38
		mov	eax, [ebp+var_18]
		sub	[ebp+var_14], eax
		mov	eax, [ebp+var_18]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_38]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_18]
		add	[ebp+var_C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_38], eax

loc_6CBA1C15:				; CODE XREF: lzo1z_decompress_dict_safe+7F2j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_38]
		lea	ecx, [edx+1]
		mov	[ebp+var_38], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_14], 1
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA1C15
		jmp	short loc_6CBA1C57
; ---------------------------------------------------------------------------

loc_6CBA1C38:				; CODE XREF: lzo1z_decompress_dict_safe+7A6j
		mov	eax, [ebp+var_14]
		mov	[esp+58h+Size],	eax ; Size
		mov	eax, [ebp+var_38]
		mov	[esp+58h+Src], eax ; Src
		mov	eax, [ebp+var_C]
		mov	[esp+58h+Dst], eax ; Dst
		call	_memcpy
		mov	eax, [ebp+var_14]
		add	[ebp+var_C], eax

loc_6CBA1C57:				; CODE XREF: lzo1z_decompress_dict_safe:loc_6CBA174Dj
					; lzo1z_decompress_dict_safe+38Dj ...
		mov	eax, [ebp+var_10]
		sub	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		and	eax, 3
		mov	[ebp+var_14], eax
		cmp	[ebp+var_14], 0
		jnz	short loc_6CBA1C75
		nop
		jmp	loc_6CBA1544
; ---------------------------------------------------------------------------

loc_6CBA1C75:				; CODE XREF: lzo1z_decompress_dict_safe+AAj
					; lzo1z_decompress_dict_safe+82Bj
		mov	edx, [ebp+var_40]
		mov	eax, [ebp+var_C]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_14]
		jnb	short loc_6CBA1C89
		jmp	loc_6CBA1D3F
; ---------------------------------------------------------------------------

loc_6CBA1C89:				; CODE XREF: lzo1z_decompress_dict_safe+840j
		mov	edx, [ebp+var_3C]
		mov	eax, [ebp+var_10]
		sub	edx, eax
		mov	eax, edx
		mov	edx, [ebp+var_14]
		add	edx, 3
		cmp	eax, edx
		jnb	short loc_6CBA1CA2
		jmp	loc_6CBA1D27
; ---------------------------------------------------------------------------

loc_6CBA1CA2:				; CODE XREF: lzo1z_decompress_dict_safe+859j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_14], 1
		jbe	short loc_6CBA1CF3
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		cmp	[ebp+var_14], 2
		jbe	short loc_6CBA1CF3
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_10]
		lea	ecx, [edx+1]
		mov	[ebp+var_10], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl

loc_6CBA1CF3:				; CODE XREF: lzo1z_decompress_dict_safe+87Bj
					; lzo1z_decompress_dict_safe+898j
		mov	eax, [ebp+var_10]
		lea	edx, [eax+1]
		mov	[ebp+var_10], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_14], eax
		jmp	loc_6CBA17F8
; ---------------------------------------------------------------------------

loc_6CBA1D0A:				; CODE XREF: lzo1z_decompress_dict_safe+580j
		mov	eax, [ebp+var_10]
		cmp	eax, [ebp+var_3C]
		jnb	short loc_6CBA1D19
		mov	eax, 0FFFFFFF8h
		jmp	short loc_6CBA1D25
; ---------------------------------------------------------------------------

loc_6CBA1D19:				; CODE XREF: lzo1z_decompress_dict_safe+8CEj
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CBA1D6D
; ---------------------------------------------------------------------------

loc_6CBA1D20:				; CODE XREF: lzo1z_decompress_dict_safe+57Aj
		mov	eax, 0

loc_6CBA1D25:				; CODE XREF: lzo1z_decompress_dict_safe+8D5j
		jmp	short locret_6CBA1D6D
; ---------------------------------------------------------------------------

loc_6CBA1D27:				; CODE XREF: lzo1z_decompress_dict_safe+80j
					; lzo1z_decompress_dict_safe+D7j ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CBA1D6D
; ---------------------------------------------------------------------------

loc_6CBA1D3F:				; CODE XREF: lzo1z_decompress_dict_safe+BEj
					; lzo1z_decompress_dict_safe+19Bj ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFBh
		jmp	short locret_6CBA1D6D
; ---------------------------------------------------------------------------

loc_6CBA1D57:				; CODE XREF: lzo1z_decompress_dict_safe+325j
					; lzo1z_decompress_dict_safe+65Cj ...
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFAh

locret_6CBA1D6D:			; CODE XREF: lzo1z_decompress_dict_safe+8DCj
					; lzo1z_decompress_dict_safe:loc_6CBA1D25j ...
		leave
		retn
lzo1z_decompress_dict_safe endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CBA1D7A(int,	void *,	size_t)
sub_6CBA1D7A	proc near		; CODE XREF: sub_6CBA1F67+F5p

Dst		= dword	ptr -18h
Src		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+3Ch], 0
		cmp	[ebp+arg_4], 0
		jz	short loc_6CBA1DAC
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CBA1DAE

loc_6CBA1DAC:				; CODE XREF: sub_6CBA1D7A+2Aj
		jmp	short locret_6CBA1E14
; ---------------------------------------------------------------------------

loc_6CBA1DAE:				; CODE XREF: sub_6CBA1D7A+30j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		cmp	eax, [ebp+arg_8]
		jnb	short loc_6CBA1DCF
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		add	[ebp+arg_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		mov	[ebp+arg_8], eax

loc_6CBA1DCF:				; CODE XREF: sub_6CBA1D7A+3Cj
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_8]
		mov	edx, [ebp+arg_4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx
		mov	eax, [ebp+arg_0]
		lea	edx, [eax+5Ch]
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Src], eax ; Src
		mov	[esp+18h+Dst], edx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_8]
		mov	[eax+40h], edx

locret_6CBA1E14:			; CODE XREF: sub_6CBA1D7A:loc_6CBA1DACj
		leave
		retn
sub_6CBA1D7A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA1E16	proc near		; CODE XREF: sub_6CBA1F67+1FDp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax]
		sub	eax, [ebp+arg_8]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+58h], edx
		cmp	[ebp+arg_8], 0
		jz	locret_6CBA1F65

loc_6CBA1E3F:				; CODE XREF: sub_6CBA1E16+149j
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 50h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0A828h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CBA1EBB
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 1828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CBA1EC0
; ---------------------------------------------------------------------------

loc_6CBA1EBB:				; CODE XREF: sub_6CBA1E16+90j
		mov	eax, 0FFFFFFFFh

loc_6CBA1EC0:				; CODE XREF: sub_6CBA1E16+A3j
		mov	edx, [ebp+arg_0]
		mov	ecx, [ebp+arg_4]
		add	ecx, 5828h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_4]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 1828h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 8028h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0A828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0A828h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 0E828h
		mov	[eax+ecx*2+8], dx
		add	[ebp+arg_4], 1
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	loc_6CBA1E3F

locret_6CBA1F65:			; CODE XREF: sub_6CBA1E16+23j
		leave
		retn
sub_6CBA1E16	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CBA1F67(int,	void *,	size_t)
sub_6CBA1F67	proc near		; CODE XREF: sub_6CBA2A07+90p

Dst		= dword	ptr -28h
Val		= dword	ptr -24h
Size		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 1FFFh
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 800h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 1
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+0Ch], 800h
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+18h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		lea	edx, [eax+0Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+50h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx
		mov	eax, [ebp+arg_0]
		add	eax, 15058h
		mov	[esp+28h+Size],	8000h ;	Size
		mov	[esp+28h+Val], 0 ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		add	eax, 1D058h
		mov	[esp+28h+Size],	20000h ; Size
		mov	[esp+28h+Val], 0FFh ; Val
		mov	[esp+28h+Dst], eax ; Dst
		call	_memset
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+Size],	eax ; size_t
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+Val], eax ; void *
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax ; int
		call	sub_6CBA1D7A
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+44h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+58h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+24h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+1Ch]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CBA211D
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jbe	short loc_6CBA20BF
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CBA20BF:				; CODE XREF: sub_6CBA1F67+14Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+24h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+1Ch]
		mov	ecx, [ebp+arg_0]
		mov	ecx, [ecx+40h]
		lea	ebx, [ecx+50h]
		mov	ecx, [ebp+arg_0]
		add	ecx, ebx
		add	ecx, 0Ch
		mov	[esp+28h+Size],	edx ; Size
		mov	[esp+28h+Val], eax ; Src
		mov	[esp+28h+Dst], ecx ; Dst
		call	_memcpy
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	ecx, [edx+1Ch]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+24h]
		add	edx, ecx
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx

loc_6CBA211D:				; CODE XREF: sub_6CBA1F67+13Aj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CBA2137
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0

loc_6CBA2137:				; CODE XREF: sub_6CBA1F67+1C4j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 1
		jbe	short loc_6CBA2169
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		test	eax, eax
		jz	short loc_6CBA2169
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+3Ch]
		mov	[esp+28h+Size],	eax
		mov	[esp+28h+Val], 0
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+Dst], eax
		call	sub_6CBA1E16

loc_6CBA2169:				; CODE XREF: sub_6CBA1F67+1D9j
					; sub_6CBA1F67+1E3j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+58h]
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		cmp	edx, eax
		jb	short loc_6CBA219B
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		sub	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		jmp	short loc_6CBA21B9
; ---------------------------------------------------------------------------

loc_6CBA219B:				; CODE XREF: sub_6CBA1F67+21Cj
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+4Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		sub	ecx, eax
		mov	eax, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx

loc_6CBA21B9:				; CODE XREF: sub_6CBA1F67+232j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		ja	short loc_6CBA21FC
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		add	eax, 1
		mov	edx, [ebp+var_C]
		add	edx, 2
		mov	byte ptr [edx],	0
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	[eax], dl

loc_6CBA21FC:				; CODE XREF: sub_6CBA1F67+25Bj
		mov	eax, 0
		add	esp, 24h
		pop	ebx
		pop	ebp
		retn
sub_6CBA1F67	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA2207	proc near		; CODE XREF: sub_6CBA2A07+A4p
					; sub_6CBA2AD0+C1p
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
sub_6CBA2207	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA220C	proc near		; CODE XREF: sub_6CBA242D+153p
					; sub_6CBA2AD0+98p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jnb	short loc_6CBA223F
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+2Ch]
		mov	eax, [edx+1Ch]
		lea	ecx, [eax+1]
		mov	[edx+1Ch], ecx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		jmp	short loc_6CBA2244
; ---------------------------------------------------------------------------

loc_6CBA223F:				; CODE XREF: sub_6CBA220C+1Aj
		mov	eax, 0FFFFFFFFh

loc_6CBA2244:				; CODE XREF: sub_6CBA220C+31j
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jns	short loc_6CBA2297
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jz	short loc_6CBA2266
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+24h], edx

loc_6CBA2266:				; CODE XREF: sub_6CBA220C+49j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		mov	edx, [ebp+arg_0]
		mov	byte ptr [edx+eax+5Ch],	0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CBA22CC
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		add	eax, edx
		mov	byte ptr [eax],	0
		jmp	short loc_6CBA22CC
; ---------------------------------------------------------------------------

loc_6CBA2297:				; CODE XREF: sub_6CBA220C+3Fj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		mov	edx, [ebp+var_4]
		mov	ecx, edx
		mov	edx, [ebp+arg_0]
		mov	[edx+eax+5Ch], cl
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		cmp	edx, eax
		jnb	short loc_6CBA22CC
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		add	edx, eax
		mov	eax, [ebp+var_4]
		mov	[edx], al

loc_6CBA22CC:				; CODE XREF: sub_6CBA220C+76j
					; sub_6CBA220C+89j ...
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+40h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CBA22F5
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+40h], 0

loc_6CBA22F5:				; CODE XREF: sub_6CBA220C+DDj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+44h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short loc_6CBA231E
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0

loc_6CBA231E:				; CODE XREF: sub_6CBA220C+106j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+48h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+48h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4Ch]
		cmp	edx, eax
		jnz	short locret_6CBA2347
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0

locret_6CBA2347:			; CODE XREF: sub_6CBA220C+12Fj
		leave
		retn
sub_6CBA220C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA2349	proc near		; CODE XREF: sub_6CBA242D+20p
					; sub_6CBA2798+231p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		test	eax, eax
		jnz	loc_6CBA241C
		mov	edx, [ebp+arg_0]
		mov	eax, [ebp+arg_4]
		add	eax, edx
		add	eax, 50h
		movzx	eax, byte ptr [eax+0Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0A828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0A828h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0E828h
		movzx	eax, word ptr [eax+edx*2+8]
		movzx	eax, ax
		cmp	eax, [ebp+arg_4]
		jnz	short loc_6CBA241A
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0E828h
		mov	word ptr [eax+edx*2+8],	0FFFFh
		jmp	short locret_6CBA242B
; ---------------------------------------------------------------------------

loc_6CBA241A:				; CODE XREF: sub_6CBA2349+BAj
		jmp	short locret_6CBA242B
; ---------------------------------------------------------------------------

loc_6CBA241C:				; CODE XREF: sub_6CBA2349+Ej
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+54h]
		lea	edx, [eax-1]
		mov	eax, [ebp+arg_0]
		mov	[eax+54h], edx

locret_6CBA242B:			; CODE XREF: sub_6CBA2349+CFj
					; sub_6CBA2349:loc_6CBA241Aj
		leave
		retn
sub_6CBA2349	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA242D	proc near		; CODE XREF: sub_6CBA2AD0+21p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		cmp	[ebp+arg_4], 0
		jz	locret_6CBA2593

loc_6CBA243D:				; CODE XREF: sub_6CBA242D+160j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CBA2349
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0A828h
		movzx	eax, word ptr [eax+edx*2+8]
		test	ax, ax
		jz	short loc_6CBA24D9
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 1828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		jmp	short loc_6CBA24DE
; ---------------------------------------------------------------------------

loc_6CBA24D9:				; CODE XREF: sub_6CBA242D+97j
		mov	eax, 0FFFFFFFFh

loc_6CBA24DE:				; CODE XREF: sub_6CBA242D+AAj
		mov	edx, [ebp+arg_0]
		add	ecx, 5828h
		mov	[edx+ecx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 1828h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 8028h
		mov	[eax+edx*2+0Ah], cx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0A828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		add	edx, 0A828h
		mov	[eax+edx*2+8], cx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_4]
		add	ecx, 0E828h
		mov	[eax+ecx*2+8], dx
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	sub_6CBA220C
		sub	[ebp+arg_4], 1
		cmp	[ebp+arg_4], 0
		jnz	loc_6CBA243D

locret_6CBA2593:			; CODE XREF: sub_6CBA242D+Aj
		leave
		retn
sub_6CBA242D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA2595	proc near		; CODE XREF: sub_6CBA2798+1B5p

var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_D		= byte ptr -0Dh
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 30h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		add	eax, 5Ch
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_18], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		add	eax, edx
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al
		jmp	loc_6CBA271F
; ---------------------------------------------------------------------------

loc_6CBA25F3:				; CODE XREF: sub_6CBA2595+195j
		mov	eax, [ebp+var_18]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+var_14]
		add	eax, edx
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_8]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		cmp	al, [ebp+var_D]
		jnz	loc_6CBA2708
		mov	eax, [ebp+var_C]
		mov	edx, [ebp+var_8]
		add	eax, edx
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_C]
		mov	ecx, [ebp+var_4]
		add	eax, ecx
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CBA2708
		mov	eax, [ebp+var_8]
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CBA2708
		mov	eax, [ebp+var_8]
		add	eax, 1
		movzx	edx, byte ptr [eax]
		mov	eax, [ebp+var_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jnz	loc_6CBA2708
		add	[ebp+var_4], 2
		add	[ebp+var_8], 2

loc_6CBA2675:				; CODE XREF: sub_6CBA2595+FEj
		add	[ebp+var_4], 1
		mov	eax, [ebp+var_4]
		cmp	eax, [ebp+var_20]
		jnb	short loc_6CBA2695
		mov	eax, [ebp+var_4]
		movzx	edx, byte ptr [eax]
		add	[ebp+var_8], 1
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		cmp	dl, al
		jz	short loc_6CBA2675

loc_6CBA2695:				; CODE XREF: sub_6CBA2595+EAj
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+var_18]
		sub	edx, eax
		mov	eax, edx
		mov	[ebp+var_24], eax
		mov	eax, [ebp+var_24]
		cmp	eax, [ebp+var_C]
		jbe	short loc_6CBA2708
		mov	eax, [ebp+var_24]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, [ebp+var_C]
		jnz	short loc_6CBA26CF
		jmp	short locret_6CBA2730
; ---------------------------------------------------------------------------

loc_6CBA26CF:				; CODE XREF: sub_6CBA2595+136j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+10h]
		cmp	eax, [ebp+var_C]
		ja	short loc_6CBA26DC
		jmp	short locret_6CBA2730
; ---------------------------------------------------------------------------

loc_6CBA26DC:				; CODE XREF: sub_6CBA2595+143j
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 8028h
		movzx	eax, word ptr [eax+edx*2+0Ah]
		movzx	eax, ax
		cmp	eax, [ebp+var_C]
		jnb	short loc_6CBA26F7
		jmp	short locret_6CBA2730
; ---------------------------------------------------------------------------

loc_6CBA26F7:				; CODE XREF: sub_6CBA2595+15Ej
		mov	eax, [ebp+var_C]
		lea	edx, [eax-1]
		mov	eax, [ebp+var_18]
		add	eax, edx
		movzx	eax, byte ptr [eax]
		mov	[ebp+var_D], al

loc_6CBA2708:				; CODE XREF: sub_6CBA2595+86j
					; sub_6CBA2595+A4j ...
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+arg_4]
		add	edx, 5828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+arg_4], eax

loc_6CBA271F:				; CODE XREF: sub_6CBA2595+59j
		mov	eax, [ebp+arg_8]
		lea	edx, [eax-1]
		mov	[ebp+arg_8], edx
		test	eax, eax
		jnz	loc_6CBA25F3

locret_6CBA2730:			; CODE XREF: sub_6CBA2595+138j
					; sub_6CBA2595+145j ...
		leave
		retn
sub_6CBA2595	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA2732	proc near		; CODE XREF: sub_6CBA2798+18Dp

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	edx, ax
		mov	eax, [ebp+arg_0]
		add	edx, 0E828h
		movzx	eax, word ptr [eax+edx*2+8]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0FFFFh
		jnz	short loc_6CBA2773
		mov	eax, 0
		jmp	short locret_6CBA2796
; ---------------------------------------------------------------------------

loc_6CBA2773:				; CODE XREF: sub_6CBA2732+38j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, 1
		ja	short loc_6CBA2791
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+1Ch], 2
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_4]
		mov	[eax+30h], edx

loc_6CBA2791:				; CODE XREF: sub_6CBA2732+4Aj
		mov	eax, 1

locret_6CBA2796:			; CODE XREF: sub_6CBA2732+3Fj
		leave
		retn
sub_6CBA2732	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA2798	proc near		; CODE XREF: sub_6CBA2AD0+75p

var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 1Ch
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	eax, al
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		shl	eax, 5
		mov	ecx, eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+2]
		mov	eax, [ebp+arg_0]
		movzx	eax, byte ptr [eax+edx+5Ch]
		movzx	eax, al
		xor	eax, ecx
		imul	eax, 9F5Fh
		shr	eax, 5
		and	eax, 3FFFh
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 0A828h
		movzx	eax, word ptr [eax+ecx*2+8]
		test	ax, ax
		jz	short loc_6CBA2826
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 1828h
		movzx	eax, word ptr [eax+ecx*2+0Ch]
		jmp	short loc_6CBA282B
; ---------------------------------------------------------------------------

loc_6CBA2826:				; CODE XREF: sub_6CBA2798+79j
		mov	eax, 0FFFFFFFFh

loc_6CBA282B:				; CODE XREF: sub_6CBA2798+8Cj
		mov	ecx, [ebp+arg_0]
		lea	ebx, [edx+5828h]
		mov	[ecx+ebx*2+0Ch], ax
		mov	eax, [ebp+arg_0]
		add	edx, 5828h
		movzx	eax, word ptr [eax+edx*2+0Ch]
		movzx	eax, ax
		mov	[ebp+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [ebp+var_C]
		add	edx, 0A828h
		movzx	eax, word ptr [eax+edx*2+8]
		lea	ecx, [eax+1]
		mov	edx, [ebp+arg_0]
		mov	ebx, [ebp+var_C]
		add	ebx, 0A828h
		mov	[edx+ebx*2+8], cx
		movzx	eax, ax
		mov	[ebp+var_8], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		cmp	eax, [ebp+var_8]
		jnb	short loc_6CBA2896
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		test	eax, eax
		jz	short loc_6CBA2896
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_8], eax

loc_6CBA2896:				; CODE XREF: sub_6CBA2798+E9j
					; sub_6CBA2798+F3j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 1828h
		mov	[eax+ecx*2+0Ch], dx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, [ebp+arg_0]
		movzx	eax, byte ptr [edx+eax+5Ch]
		movzx	edx, al
		mov	eax, [ebp+arg_0]
		mov	[eax+28h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	edx, eax
		jb	short loc_6CBA291F
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		test	eax, eax
		jnz	short loc_6CBA28F3
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+28h], 0FFFFFFFFh

loc_6CBA28F3:				; CODE XREF: sub_6CBA2798+14Fj
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		lea	ecx, [eax+1]
		mov	eax, [ebp+arg_0]
		add	edx, 8028h
		mov	[eax+edx*2+0Ah], cx
		jmp	loc_6CBA29B9
; ---------------------------------------------------------------------------

loc_6CBA291F:				; CODE XREF: sub_6CBA2798+145j
		mov	eax, [ebp+arg_0]
		mov	[esp+20h+var_20], eax
		call	sub_6CBA2732
		test	eax, eax
		jz	short loc_6CBA2952
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+24h]
		cmp	eax, 2
		jbe	short loc_6CBA2952
		mov	eax, [ebp+var_8]
		mov	[esp+20h+var_18], eax
		mov	eax, [ebp+var_10]
		mov	[esp+20h+var_1C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+20h+var_20], eax
		call	sub_6CBA2595

loc_6CBA2952:				; CODE XREF: sub_6CBA2798+194j
					; sub_6CBA2798+19Fj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		cmp	eax, [ebp+var_14]
		jbe	short loc_6CBA299D
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		cmp	edx, eax
		jbe	short loc_6CBA297F
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		sub	edx, eax
		mov	eax, edx
		jmp	short loc_6CBA2997
; ---------------------------------------------------------------------------

loc_6CBA297F:				; CODE XREF: sub_6CBA2798+1D3j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+4Ch]
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		sub	ecx, eax
		mov	eax, ecx
		add	eax, edx

loc_6CBA2997:				; CODE XREF: sub_6CBA2798+1E5j
		mov	edx, [ebp+arg_0]
		mov	[edx+20h], eax

loc_6CBA299D:				; CODE XREF: sub_6CBA2798+1C3j
		mov	eax, [ebp+arg_0]
		mov	ecx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+1Ch]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		add	ecx, 8028h
		mov	[eax+ecx*2+0Ah], dx

loc_6CBA29B9:				; CODE XREF: sub_6CBA2798+182j
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+48h]
		mov	[esp+20h+var_1C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+20h+var_20], eax
		call	sub_6CBA2349
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		lea	edx, [eax+50h]
		mov	eax, [ebp+arg_0]
		add	eax, edx
		add	eax, 0Ch
		movzx	eax, word ptr [eax]
		movzx	eax, ax
		mov	[ebp+var_C], eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+44h]
		mov	edx, eax
		mov	eax, [ebp+arg_0]
		mov	ecx, [ebp+var_C]
		add	ecx, 0E828h
		mov	[eax+ecx*2+8], dx
		add	esp, 1Ch
		pop	ebx
		pop	ebp
		retn
sub_6CBA2798	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl sub_6CBA2A07(int,	int, void *, size_t, int)
sub_6CBA2A07	proc near		; CODE XREF: lzo2a_999_compress_callback+BCp

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax], 1
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+14h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+14h]
		mov	eax, [ebp+arg_0]
		mov	[eax+10h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+38h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+38h]
		mov	eax, [ebp+arg_0]
		mov	[eax+34h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+34h]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+44h], 0
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+44h]
		mov	eax, [ebp+arg_0]
		mov	[eax+40h], edx
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+40h]
		mov	eax, [ebp+arg_0]
		mov	[eax+3Ch], edx
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+48h], 0
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_20], eax ;	size_t
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_24], eax ;	void *
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax ;	int
		call	sub_6CBA1F67
		mov	[ebp+var_C], eax
		cmp	[ebp+var_C], 0
		jz	short loc_6CBA2AB5
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_28], eax
		call	sub_6CBA2207
		mov	eax, [ebp+var_C]
		jmp	short locret_6CBA2ACE
; ---------------------------------------------------------------------------

loc_6CBA2AB5:				; CODE XREF: sub_6CBA2A07+9Cj
		mov	eax, [ebp+arg_10]
		and	eax, 1
		test	eax, eax
		setnz	al
		movzx	edx, al
		mov	eax, [ebp+arg_4]
		mov	[eax+14h], edx
		mov	eax, 0

locret_6CBA2ACE:			; CODE XREF: sub_6CBA2A07+ACj
		leave
		retn
sub_6CBA2A07	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA2AD0	proc near		; CODE XREF: lzo2a_999_compress_callback+FEp
					; lzo2a_999_compress_callback+1C9p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		cmp	[ebp+arg_C], 0
		jz	short loc_6CBA2B13
		mov	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CBA242D
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	eax, edx
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx
		jmp	short loc_6CBA2B2B
; ---------------------------------------------------------------------------

loc_6CBA2B13:				; CODE XREF: sub_6CBA2AD0+Bj
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+30h]
		mov	edx, [ebp+arg_C]
		mov	ecx, [ebp+arg_8]
		sub	ecx, edx
		mov	edx, ecx
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+30h], edx

loc_6CBA2B2B:				; CODE XREF: sub_6CBA2AD0+41j
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+1Ch], 1
		mov	eax, [ebp+arg_4]
		mov	dword ptr [eax+20h], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CBA2798
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	[eax+8], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [eax+20h]
		mov	eax, [ebp+arg_0]
		mov	[eax+0Ch], edx
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CBA220C
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+28h]
		test	eax, eax
		jns	short loc_6CBA2B98
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+4], 0
		mov	eax, [ebp+arg_0]
		mov	dword ptr [eax+8], 0
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_18], eax
		call	sub_6CBA2207
		jmp	short loc_6CBA2BA7
; ---------------------------------------------------------------------------

loc_6CBA2B98:				; CODE XREF: sub_6CBA2AD0+A5j
		mov	eax, [ebp+arg_4]
		mov	eax, [eax+24h]
		lea	edx, [eax+1]
		mov	eax, [ebp+arg_0]
		mov	[eax+4], edx

loc_6CBA2BA7:				; CODE XREF: sub_6CBA2AD0+C6j
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+1Ch]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+4]
		neg	eax
		add	edx, eax
		mov	eax, [ebp+arg_0]
		mov	[eax+18h], edx
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CBA2C26
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CBA2C26
		mov	eax, [ebp+arg_0]
		mov	edx, [eax+30h]
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		cmp	edx, eax
		jbe	short loc_6CBA2C26
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+arg_0]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+arg_0]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+arg_0]
		mov	edx, [edx+2Ch]
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+var_10], ebx
		mov	[esp+18h+var_14], ecx
		mov	[esp+18h+var_18], edx
		call	eax
		mov	eax, [ebp+arg_0]
		mov	eax, [eax+38h]
		lea	edx, [eax+400h]
		mov	eax, [ebp+arg_0]
		mov	[eax+38h], edx

loc_6CBA2C26:				; CODE XREF: sub_6CBA2AD0+F5j
					; sub_6CBA2AD0+102j ...
		mov	eax, 0
		add	esp, 14h
		pop	ebx
		pop	ebp
		retn
sub_6CBA2AD0	endp

; Exported entry 116. lzo2a_999_compress_callback

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo2a_999_compress_callback
lzo2a_999_compress_callback proc near	; CODE XREF: lzo2a_999_compress+38p

var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_9C		= byte ptr -9Ch
var_3D		= byte ptr -3Dh
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 0C4h
		mov	[ebp+var_10], 0
		lea	eax, [ebp+var_9C]
		mov	[ebp+var_30], eax
		mov	eax, [ebp+arg_10]
		mov	[ebp+var_34], eax
		mov	[ebp+var_18], 0
		mov	[ebp+var_1C], 0
		mov	eax, [ebp+var_30]
		mov	dword ptr [eax], 0
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+arg_0]
		mov	[eax+20h], edx
		mov	eax, [ebp+var_30]
		mov	edx, [eax+20h]
		mov	eax, [ebp+var_30]
		mov	[eax+1Ch], edx
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	edx, eax
		mov	eax, [ebp+var_30]
		mov	[eax+24h], edx
		mov	eax, [ebp+var_30]
		mov	edx, [ebp+arg_14]
		mov	[eax+2Ch], edx
		mov	eax, [ebp+var_30]
		mov	dword ptr [eax+58h], 0
		mov	eax, [ebp+var_30]
		mov	edx, [eax+58h]
		mov	eax, [ebp+var_30]
		mov	[eax+54h], edx
		mov	eax, [ebp+var_30]
		mov	edx, [eax+54h]
		mov	eax, [ebp+var_30]
		mov	[eax+50h], edx
		mov	eax, [ebp+var_30]
		mov	edx, [eax+50h]
		mov	eax, [ebp+var_30]
		mov	[eax+4Ch], edx
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	[esp+0C8h+var_B8], 0 ; int
		mov	[esp+0C8h+var_BC], 0 ; size_t
		mov	[esp+0C8h+var_C0], 0 ; void *
		mov	eax, [ebp+var_34]
		mov	[esp+0C8h+var_C4], eax ; int
		mov	eax, [ebp+var_30]
		mov	[esp+0C8h+var_C8], eax ; int
		call	sub_6CBA2A07
		mov	[ebp+var_38], eax
		cmp	[ebp+var_38], 0
		jz	short loc_6CBA2D03
		mov	eax, [ebp+var_38]
		jmp	loc_6CBA33AD
; ---------------------------------------------------------------------------

loc_6CBA2D03:				; CODE XREF: lzo2a_999_compress_callback+C8j
		cmp	[ebp+arg_18], 0
		jz	short loc_6CBA2D12
		mov	eax, [ebp+var_34]
		mov	edx, [ebp+arg_18]
		mov	[eax+0Ch], edx

loc_6CBA2D12:				; CODE XREF: lzo2a_999_compress_callback+D6j
		mov	[esp+0C8h+var_BC], 0
		mov	[esp+0C8h+var_C0], 0
		mov	eax, [ebp+var_34]
		mov	[esp+0C8h+var_C4], eax
		mov	eax, [ebp+var_30]
		mov	[esp+0C8h+var_C8], eax
		call	sub_6CBA2AD0
		mov	[ebp+var_38], eax
		cmp	[ebp+var_38], 0
		jz	short loc_6CBA2D45
		mov	eax, [ebp+var_38]
		jmp	loc_6CBA33AD
; ---------------------------------------------------------------------------

loc_6CBA2D45:				; CODE XREF: lzo2a_999_compress_callback+10Aj
		jmp	loc_6CBA3244
; ---------------------------------------------------------------------------

loc_6CBA2D4A:				; CODE XREF: lzo2a_999_compress_callback+61Bj
		mov	[ebp+var_20], 0
		mov	[ebp+var_24], 0
		mov	[ebp+var_28], 0
		mov	eax, [ebp+var_30]
		mov	eax, [eax+8]
		mov	[ebp+var_14], eax
		mov	eax, [ebp+var_30]
		mov	eax, [eax+0Ch]
		mov	[ebp+var_3C], eax
		cmp	[ebp+var_14], 1
		jbe	short loc_6CBA2D96
		cmp	[ebp+var_14], 5
		ja	short loc_6CBA2D96
		cmp	[ebp+var_3C], 100h
		ja	short loc_6CBA2D96
		mov	[ebp+var_20], 2
		mov	[ebp+var_24], 2
		jmp	short loc_6CBA2DBB
; ---------------------------------------------------------------------------

loc_6CBA2D96:				; CODE XREF: lzo2a_999_compress_callback+144j
					; lzo2a_999_compress_callback+14Aj ...
		cmp	[ebp+var_14], 9
		jbe	short loc_6CBA2DA5
		mov	[ebp+var_20], 1
		jmp	short loc_6CBA2DBB
; ---------------------------------------------------------------------------

loc_6CBA2DA5:				; CODE XREF: lzo2a_999_compress_callback+169j
		cmp	[ebp+var_14], 2
		jbe	short loc_6CBA2DB4
		mov	[ebp+var_20], 1
		jmp	short loc_6CBA2DBB
; ---------------------------------------------------------------------------

loc_6CBA2DB4:				; CODE XREF: lzo2a_999_compress_callback+178j
		mov	[ebp+var_14], 0

loc_6CBA2DBB:				; CODE XREF: lzo2a_999_compress_callback+163j
					; lzo2a_999_compress_callback+172j ...
		cmp	[ebp+var_20], 0
		jz	loc_6CBA2F00
		mov	eax, [ebp+var_30]
		mov	eax, [eax+4]
		cmp	eax, [ebp+var_14]
		jbe	loc_6CBA2F00
		mov	eax, [ebp+var_34]
		mov	eax, [eax+28h]
		mov	[ebp+var_3D], al
		mov	[esp+0C8h+var_BC], 0
		mov	[esp+0C8h+var_C0], 1
		mov	eax, [ebp+var_34]
		mov	[esp+0C8h+var_C4], eax
		mov	eax, [ebp+var_30]
		mov	[esp+0C8h+var_C8], eax
		call	sub_6CBA2AD0
		mov	[ebp+var_38], eax
		cmp	[ebp+var_14], 1
		jbe	short loc_6CBA2E40
		cmp	[ebp+var_14], 5
		ja	short loc_6CBA2E40
		cmp	[ebp+var_3C], 100h
		ja	short loc_6CBA2E40
		mov	eax, [ebp+var_30]
		mov	eax, [eax+8]
		cmp	eax, 1
		jbe	short loc_6CBA2E3A
		mov	eax, [ebp+var_30]
		mov	eax, [eax+8]
		cmp	eax, 5
		ja	short loc_6CBA2E3A
		mov	eax, [ebp+var_30]
		mov	eax, [eax+0Ch]
		cmp	eax, 100h
		jbe	short loc_6CBA2E40

loc_6CBA2E3A:				; CODE XREF: lzo2a_999_compress_callback+1EFj
					; lzo2a_999_compress_callback+1FAj
		mov	eax, [ebp+var_24]
		add	[ebp+var_20], eax

loc_6CBA2E40:				; CODE XREF: lzo2a_999_compress_callback+1D5j
					; lzo2a_999_compress_callback+1DBj ...
		mov	eax, [ebp+var_30]
		mov	eax, [eax+8]
		cmp	eax, 1
		jbe	short loc_6CBA2E67
		mov	eax, [ebp+var_30]
		mov	eax, [eax+8]
		cmp	eax, 5
		ja	short loc_6CBA2E67
		mov	eax, [ebp+var_30]
		mov	eax, [eax+0Ch]
		cmp	eax, 100h
		ja	short loc_6CBA2E67
		sub	[ebp+var_20], 1

loc_6CBA2E67:				; CODE XREF: lzo2a_999_compress_callback+218j
					; lzo2a_999_compress_callback+223j ...
		mov	eax, [ebp+var_20]
		test	eax, eax
		jg	short loc_6CBA2E75
		mov	[ebp+var_20], 1

loc_6CBA2E75:				; CODE XREF: lzo2a_999_compress_callback+23Bj
		mov	eax, [ebp+var_30]
		mov	eax, [eax+8]
		mov	edx, [ebp+var_20]
		mov	ecx, [ebp+var_14]
		add	edx, ecx
		cmp	eax, edx
		jb	short loc_6CBA2EF9
		mov	eax, [ebp+var_30]
		mov	eax, [eax+48h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_30]
		mov	[eax+48h], edx
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CBA2EA8
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA2EA8:				; CODE XREF: lzo2a_999_compress_callback+269j
		add	[ebp+var_1C], 1
		cmp	[ebp+var_1C], 7
		jbe	short loc_6CBA2ED6
		mov	eax, [ebp+var_18]
		mov	edx, eax
		mov	eax, [ebp+var_10]
		mov	[eax], dl
		shr	[ebp+var_18], 8
		sub	[ebp+var_1C], 8
		cmp	[ebp+var_1C], 0
		jz	short loc_6CBA2ED6
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA2ED6:				; CODE XREF: lzo2a_999_compress_callback+27Fj
					; lzo2a_999_compress_callback+297j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		movzx	edx, [ebp+var_3D]
		mov	[eax], dl
		mov	eax, [ebp+var_30]
		mov	eax, [eax+3Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_30]
		mov	[eax+3Ch], edx
		jmp	loc_6CBA3244
; ---------------------------------------------------------------------------

loc_6CBA2EF9:				; CODE XREF: lzo2a_999_compress_callback+254j
		mov	[ebp+var_28], 1

loc_6CBA2F00:				; CODE XREF: lzo2a_999_compress_callback+18Ej
					; lzo2a_999_compress_callback+19Dj
		cmp	[ebp+var_14], 0
		jnz	loc_6CBA2F94
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CBA2F1C
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA2F1C:				; CODE XREF: lzo2a_999_compress_callback+2DDj
		add	[ebp+var_1C], 1
		cmp	[ebp+var_1C], 7
		jbe	short loc_6CBA2F4A
		mov	eax, [ebp+var_18]
		mov	edx, eax
		mov	eax, [ebp+var_10]
		mov	[eax], dl
		shr	[ebp+var_18], 8
		sub	[ebp+var_1C], 8
		cmp	[ebp+var_1C], 0
		jz	short loc_6CBA2F4A
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA2F4A:				; CODE XREF: lzo2a_999_compress_callback+2F3j
					; lzo2a_999_compress_callback+30Bj
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_34]
		mov	edx, [edx+28h]
		mov	[eax], dl
		mov	eax, [ebp+var_30]
		mov	eax, [eax+3Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_30]
		mov	[eax+3Ch], edx
		mov	[esp+0C8h+var_BC], 0
		mov	[esp+0C8h+var_C0], 1
		mov	eax, [ebp+var_34]
		mov	[esp+0C8h+var_C4], eax
		mov	eax, [ebp+var_30]
		mov	[esp+0C8h+var_C8], eax
		call	sub_6CBA2AD0
		mov	[ebp+var_38], eax
		jmp	loc_6CBA3232
; ---------------------------------------------------------------------------

loc_6CBA2F94:				; CODE XREF: lzo2a_999_compress_callback+2D3j
		cmp	[ebp+var_14], 1
		jbe	loc_6CBA30BD
		cmp	[ebp+var_14], 5
		ja	loc_6CBA30BD
		cmp	[ebp+var_3C], 100h
		ja	loc_6CBA30BD
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CBA2FC7
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA2FC7:				; CODE XREF: lzo2a_999_compress_callback+388j
		mov	eax, [ebp+var_1C]
		mov	edx, 1
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_18], eax
		add	[ebp+var_1C], 1
		cmp	[ebp+var_1C], 7
		jbe	short loc_6CBA3006
		mov	eax, [ebp+var_18]
		mov	edx, eax
		mov	eax, [ebp+var_10]
		mov	[eax], dl
		shr	[ebp+var_18], 8
		sub	[ebp+var_1C], 8
		cmp	[ebp+var_1C], 0
		jz	short loc_6CBA3006
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA3006:				; CODE XREF: lzo2a_999_compress_callback+3AFj
					; lzo2a_999_compress_callback+3C7j
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CBA3018
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA3018:				; CODE XREF: lzo2a_999_compress_callback+3D9j
		add	[ebp+var_1C], 1
		cmp	[ebp+var_1C], 7
		jbe	short loc_6CBA3046
		mov	eax, [ebp+var_18]
		mov	edx, eax
		mov	eax, [ebp+var_10]
		mov	[eax], dl
		shr	[ebp+var_18], 8
		sub	[ebp+var_1C], 8
		cmp	[ebp+var_1C], 0
		jz	short loc_6CBA3046
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA3046:				; CODE XREF: lzo2a_999_compress_callback+3EFj
					; lzo2a_999_compress_callback+407j
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CBA3058
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA3058:				; CODE XREF: lzo2a_999_compress_callback+419j
		mov	eax, [ebp+var_14]
		lea	edx, [eax-2]
		mov	eax, [ebp+var_1C]
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_18], eax
		add	[ebp+var_1C], 2
		cmp	[ebp+var_1C], 7
		jbe	short loc_6CBA3098
		mov	eax, [ebp+var_18]
		mov	edx, eax
		mov	eax, [ebp+var_10]
		mov	[eax], dl
		shr	[ebp+var_18], 8
		sub	[ebp+var_1C], 8
		cmp	[ebp+var_1C], 0
		jz	short loc_6CBA3098
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA3098:				; CODE XREF: lzo2a_999_compress_callback+441j
					; lzo2a_999_compress_callback+459j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_3C]
		sub	edx, 1
		mov	[eax], dl
		mov	eax, [ebp+var_30]
		mov	eax, [eax+4Ch]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_30]
		mov	[eax+4Ch], edx
		jmp	loc_6CBA320C
; ---------------------------------------------------------------------------

loc_6CBA30BD:				; CODE XREF: lzo2a_999_compress_callback+367j
					; lzo2a_999_compress_callback+371j ...
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CBA30CF
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA30CF:				; CODE XREF: lzo2a_999_compress_callback+490j
		mov	eax, [ebp+var_1C]
		mov	edx, 1
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_18], eax
		add	[ebp+var_1C], 1
		cmp	[ebp+var_1C], 7
		jbe	short loc_6CBA310E
		mov	eax, [ebp+var_18]
		mov	edx, eax
		mov	eax, [ebp+var_10]
		mov	[eax], dl
		shr	[ebp+var_18], 8
		sub	[ebp+var_1C], 8
		cmp	[ebp+var_1C], 0
		jz	short loc_6CBA310E
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA310E:				; CODE XREF: lzo2a_999_compress_callback+4B7j
					; lzo2a_999_compress_callback+4CFj
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CBA3120
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA3120:				; CODE XREF: lzo2a_999_compress_callback+4E1j
		mov	eax, [ebp+var_1C]
		mov	edx, 1
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_18], eax
		add	[ebp+var_1C], 1
		cmp	[ebp+var_1C], 7
		jbe	short loc_6CBA315F
		mov	eax, [ebp+var_18]
		mov	edx, eax
		mov	eax, [ebp+var_10]
		mov	[eax], dl
		shr	[ebp+var_18], 8
		sub	[ebp+var_1C], 8
		cmp	[ebp+var_1C], 0
		jz	short loc_6CBA315F
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA315F:				; CODE XREF: lzo2a_999_compress_callback+508j
					; lzo2a_999_compress_callback+520j
		cmp	[ebp+var_14], 9
		ja	short loc_6CBA31A5
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_14]
		sub	edx, 2
		mov	ecx, edx
		shl	ecx, 5
		mov	edx, [ebp+var_3C]
		and	edx, 1Fh
		or	edx, ecx
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 5
		mov	[eax], dl
		mov	eax, [ebp+var_30]
		mov	eax, [eax+50h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_30]
		mov	[eax+50h], edx
		jmp	short loc_6CBA320C
; ---------------------------------------------------------------------------

loc_6CBA31A5:				; CODE XREF: lzo2a_999_compress_callback+532j
		mov	eax, [ebp+var_14]
		mov	[ebp+var_2C], eax
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_3C]
		and	edx, 1Fh
		mov	[eax], dl
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_3C]
		shr	edx, 5
		mov	[eax], dl
		sub	[ebp+var_2C], 9
		jmp	short loc_6CBA31E6
; ---------------------------------------------------------------------------

loc_6CBA31D3:				; CODE XREF: lzo2a_999_compress_callback+5BCj
		sub	[ebp+var_2C], 0FFh
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0

loc_6CBA31E6:				; CODE XREF: lzo2a_999_compress_callback+5A0j
		cmp	[ebp+var_2C], 0FFh
		ja	short loc_6CBA31D3
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	edx, [ebp+var_2C]
		mov	[eax], dl
		mov	eax, [ebp+var_30]
		mov	eax, [eax+54h]
		lea	edx, [eax+1]
		mov	eax, [ebp+var_30]
		mov	[eax+54h], edx

loc_6CBA320C:				; CODE XREF: lzo2a_999_compress_callback+487j
					; lzo2a_999_compress_callback+572j
		mov	eax, [ebp+var_28]
		add	eax, 1
		mov	[esp+0C8h+var_BC], eax
		mov	eax, [ebp+var_14]
		mov	[esp+0C8h+var_C0], eax
		mov	eax, [ebp+var_34]
		mov	[esp+0C8h+var_C4], eax
		mov	eax, [ebp+var_30]
		mov	[esp+0C8h+var_C8], eax
		call	sub_6CBA2AD0
		mov	[ebp+var_38], eax

loc_6CBA3232:				; CODE XREF: lzo2a_999_compress_callback+35Ej
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_30]
		mov	[eax+34h], edx

loc_6CBA3244:				; CODE XREF: lzo2a_999_compress_callback:loc_6CBA2D45j
					; lzo2a_999_compress_callback+2C3j
		mov	eax, [ebp+var_30]
		mov	eax, [eax+4]
		test	eax, eax
		jnz	loc_6CBA2D4A
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CBA3264
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA3264:				; CODE XREF: lzo2a_999_compress_callback+625j
		mov	eax, [ebp+var_1C]
		mov	edx, 1
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_18], eax
		add	[ebp+var_1C], 1
		cmp	[ebp+var_1C], 7
		jbe	short loc_6CBA32A3
		mov	eax, [ebp+var_18]
		mov	edx, eax
		mov	eax, [ebp+var_10]
		mov	[eax], dl
		shr	[ebp+var_18], 8
		sub	[ebp+var_1C], 8
		cmp	[ebp+var_1C], 0
		jz	short loc_6CBA32A3
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA32A3:				; CODE XREF: lzo2a_999_compress_callback+64Cj
					; lzo2a_999_compress_callback+664j
		cmp	[ebp+var_1C], 0
		jnz	short loc_6CBA32B5
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA32B5:				; CODE XREF: lzo2a_999_compress_callback+676j
		mov	eax, [ebp+var_1C]
		mov	edx, 1
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_18], eax
		add	[ebp+var_1C], 1
		cmp	[ebp+var_1C], 7
		jbe	short loc_6CBA32F4
		mov	eax, [ebp+var_18]
		mov	edx, eax
		mov	eax, [ebp+var_10]
		mov	[eax], dl
		shr	[ebp+var_18], 8
		sub	[ebp+var_1C], 8
		cmp	[ebp+var_1C], 0
		jz	short loc_6CBA32F4
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	[ebp+var_10], eax

loc_6CBA32F4:				; CODE XREF: lzo2a_999_compress_callback+69Dj
					; lzo2a_999_compress_callback+6B5j
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	20h
		mov	eax, [ebp+var_C]
		lea	edx, [eax+1]
		mov	[ebp+var_C], edx
		mov	byte ptr [eax],	0
		cmp	[ebp+var_1C], 0
		jz	short loc_6CBA333E
		mov	eax, [ebp+var_18]
		mov	edx, eax
		mov	eax, [ebp+var_1C]
		mov	ebx, 1
		mov	ecx, eax
		shl	ebx, cl
		mov	eax, ebx
		sub	eax, 1
		and	edx, eax
		mov	eax, [ebp+var_10]
		mov	[eax], dl
		mov	eax, [ebp+var_1C]
		mov	ecx, eax
		shr	[ebp+var_18], cl
		mov	[ebp+var_1C], 0

loc_6CBA333E:				; CODE XREF: lzo2a_999_compress_callback+6DFj
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+var_30]
		mov	[eax+34h], edx
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_30]
		mov	eax, [eax+2Ch]
		test	eax, eax
		jz	short loc_6CBA33A8
		mov	eax, [ebp+var_30]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		test	eax, eax
		jz	short loc_6CBA33A8
		mov	eax, [ebp+var_30]
		mov	eax, [eax+2Ch]
		mov	eax, [eax+8]
		mov	edx, [ebp+var_30]
		mov	ebx, [edx+34h]
		mov	edx, [ebp+var_30]
		mov	ecx, [edx+30h]
		mov	edx, [ebp+var_30]
		mov	edx, [edx+2Ch]
		mov	[esp+0C8h+var_BC], 0
		mov	[esp+0C8h+var_C0], ebx
		mov	[esp+0C8h+var_C4], ecx
		mov	[esp+0C8h+var_C8], edx
		call	eax

loc_6CBA33A8:				; CODE XREF: lzo2a_999_compress_callback+738j
					; lzo2a_999_compress_callback+745j
		mov	eax, 0

loc_6CBA33AD:				; CODE XREF: lzo2a_999_compress_callback+CDj
					; lzo2a_999_compress_callback+10Fj
		add	esp, 0C4h
		pop	ebx
		pop	ebp
		retn
lzo2a_999_compress_callback endp

; Exported entry 115. lzo2a_999_compress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo2a_999_compress
lzo2a_999_compress proc	near

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	[esp+28h+var_10], 0
		mov	[esp+28h+var_14], 0
		mov	eax, [ebp+arg_10]
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_C]
		mov	[esp+28h+var_1C], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_20], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+28h+var_28], eax
		call	lzo2a_999_compress_callback
		leave
		retn
lzo2a_999_compress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 117. lzo2a_decompress

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo2a_decompress
lzo2a_decompress proc near

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	[ebp+var_14], 0
		mov	[ebp+var_18], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax

loc_6CBA342D:				; CODE XREF: lzo2a_decompress:loc_6CBA35FFj
		cmp	[ebp+var_18], 0
		jnz	short loc_6CBA3452
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_18]
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_14], eax
		add	[ebp+var_18], 8

loc_6CBA3452:				; CODE XREF: lzo2a_decompress+2Fj
		mov	eax, [ebp+var_14]
		and	eax, 1
		test	eax, eax
		jnz	short loc_6CBA347F
		shr	[ebp+var_14], 1
		sub	[ebp+var_18], 1
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CBA35FF
; ---------------------------------------------------------------------------

loc_6CBA347F:				; CODE XREF: lzo2a_decompress+58j
		shr	[ebp+var_14], 1
		sub	[ebp+var_18], 1
		cmp	[ebp+var_18], 0
		jnz	short loc_6CBA34AB
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_18]
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_14], eax
		add	[ebp+var_18], 8

loc_6CBA34AB:				; CODE XREF: lzo2a_decompress+88j
		mov	eax, [ebp+var_14]
		and	eax, 1
		test	eax, eax
		jnz	loc_6CBA353A
		shr	[ebp+var_14], 1
		sub	[ebp+var_18], 1
		cmp	[ebp+var_18], 1
		ja	short loc_6CBA34E5
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_18]
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_14], eax
		add	[ebp+var_18], 8

loc_6CBA34E5:				; CODE XREF: lzo2a_decompress+C2j
		mov	eax, [ebp+var_14]
		and	eax, 3
		add	eax, 2
		mov	[ebp+var_10], eax
		shr	[ebp+var_14], 2
		sub	[ebp+var_18], 2
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		not	eax
		mov	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, edx
		mov	[ebp+var_C], eax

loc_6CBA3514:				; CODE XREF: lzo2a_decompress+131j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_C]
		lea	ecx, [edx+1]
		mov	[ebp+var_C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_10], 1
		cmp	[ebp+var_10], 0
		jnz	short loc_6CBA3514
		jmp	loc_6CBA35FF
; ---------------------------------------------------------------------------

loc_6CBA353A:				; CODE XREF: lzo2a_decompress+B1j
		shr	[ebp+var_14], 1
		sub	[ebp+var_18], 1
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_10]
		and	eax, 1Fh
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, ecx
		neg	eax
		add	[ebp+var_C], eax
		shr	[ebp+var_10], 5
		cmp	[ebp+var_10], 0
		jnz	short loc_6CBA35B6
		mov	[ebp+var_10], 9
		jmp	short loc_6CBA3598
; ---------------------------------------------------------------------------

loc_6CBA358D:				; CODE XREF: lzo2a_decompress+19Ej
		add	[ebp+var_10], 0FFh
		add	[ebp+var_8], 1

loc_6CBA3598:				; CODE XREF: lzo2a_decompress+189j
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA358D
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_10], eax
		jmp	short loc_6CBA35DE
; ---------------------------------------------------------------------------

loc_6CBA35B6:				; CODE XREF: lzo2a_decompress+180j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CBA35DA
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_1C]
		jz	short loc_6CBA361A
		jmp	short loc_6CBA3604
; ---------------------------------------------------------------------------

loc_6CBA35DA:				; CODE XREF: lzo2a_decompress+1BAj
		add	[ebp+var_10], 2

loc_6CBA35DE:				; CODE XREF: lzo2a_decompress+1B2j
					; lzo2a_decompress+1FBj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_C]
		lea	ecx, [edx+1]
		mov	[ebp+var_C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_10], 1
		cmp	[ebp+var_10], 0
		jnz	short loc_6CBA35DE

loc_6CBA35FF:				; CODE XREF: lzo2a_decompress+78j
					; lzo2a_decompress+133j
		jmp	loc_6CBA342D
; ---------------------------------------------------------------------------

loc_6CBA3604:				; CODE XREF: lzo2a_decompress+1D6j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_1C]
		jnb	short loc_6CBA3613
		mov	eax, 0FFFFFFF8h
		jmp	short locret_6CBA361F
; ---------------------------------------------------------------------------

loc_6CBA3613:				; CODE XREF: lzo2a_decompress+208j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CBA361F
; ---------------------------------------------------------------------------

loc_6CBA361A:				; CODE XREF: lzo2a_decompress+1D4j
		mov	eax, 0

locret_6CBA361F:			; CODE XREF: lzo2a_decompress+20Fj
					; lzo2a_decompress+216j
		leave
		retn
lzo2a_decompress endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 118. lzo2a_decompress_safe

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo2a_decompress_safe
lzo2a_decompress_safe proc near

var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		mov	[ebp+var_1C], eax
		mov	eax, [ebp+arg_C]
		mov	edx, [eax]
		mov	eax, [ebp+arg_8]
		add	eax, edx
		mov	[ebp+var_20], eax
		mov	[ebp+var_14], 0
		mov	[ebp+var_18], 0
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_8], eax
		jmp	loc_6CBA3938
; ---------------------------------------------------------------------------

loc_6CBA366B:				; CODE XREF: lzo2a_decompress_safe+310j
		cmp	[ebp+var_18], 0
		jnz	short loc_6CBA369F
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA3680
		jmp	loc_6CBA3979
; ---------------------------------------------------------------------------

loc_6CBA3680:				; CODE XREF: lzo2a_decompress_safe+4Bj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_18]
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_14], eax
		add	[ebp+var_18], 8

loc_6CBA369F:				; CODE XREF: lzo2a_decompress_safe+41j
		mov	eax, [ebp+var_14]
		and	eax, 1
		test	eax, eax
		jnz	short loc_6CBA36EA
		shr	[ebp+var_14], 1
		sub	[ebp+var_18], 1
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA36BF
		jmp	loc_6CBA3979
; ---------------------------------------------------------------------------

loc_6CBA36BF:				; CODE XREF: lzo2a_decompress_safe+8Aj
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnz	short loc_6CBA36CE
		jmp	loc_6CBA3991
; ---------------------------------------------------------------------------

loc_6CBA36CE:				; CODE XREF: lzo2a_decompress_safe+99j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_8]
		lea	ecx, [edx+1]
		mov	[ebp+var_8], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		jmp	loc_6CBA3938
; ---------------------------------------------------------------------------

loc_6CBA36EA:				; CODE XREF: lzo2a_decompress_safe+79j
		shr	[ebp+var_14], 1
		sub	[ebp+var_18], 1
		cmp	[ebp+var_18], 0
		jnz	short loc_6CBA3725
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA3706
		jmp	loc_6CBA3979
; ---------------------------------------------------------------------------

loc_6CBA3706:				; CODE XREF: lzo2a_decompress_safe+D1j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_18]
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_14], eax
		add	[ebp+var_18], 8

loc_6CBA3725:				; CODE XREF: lzo2a_decompress_safe+C7j
		mov	eax, [ebp+var_14]
		and	eax, 1
		test	eax, eax
		jnz	loc_6CBA3802
		shr	[ebp+var_14], 1
		sub	[ebp+var_18], 1
		cmp	[ebp+var_18], 1
		ja	short loc_6CBA376E
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA374F
		jmp	loc_6CBA3979
; ---------------------------------------------------------------------------

loc_6CBA374F:				; CODE XREF: lzo2a_decompress_safe+11Aj
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	edx, al
		mov	eax, [ebp+var_18]
		mov	ecx, eax
		shl	edx, cl
		mov	eax, edx
		or	[ebp+var_14], eax
		add	[ebp+var_18], 8

loc_6CBA376E:				; CODE XREF: lzo2a_decompress_safe+110j
		mov	eax, [ebp+var_14]
		and	eax, 3
		add	eax, 2
		mov	[ebp+var_10], eax
		shr	[ebp+var_14], 2
		sub	[ebp+var_18], 2
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA3791
		jmp	loc_6CBA3979
; ---------------------------------------------------------------------------

loc_6CBA3791:				; CODE XREF: lzo2a_decompress_safe+15Cj
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_10]
		jnb	short loc_6CBA37A5
		jmp	loc_6CBA3991
; ---------------------------------------------------------------------------

loc_6CBA37A5:				; CODE XREF: lzo2a_decompress_safe+170j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		not	eax
		mov	edx, eax
		mov	eax, [ebp+var_4]
		add	eax, edx
		mov	[ebp+var_C], eax
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CBA39A9
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CBA39A9

loc_6CBA37DC:				; CODE XREF: lzo2a_decompress_safe+1CDj
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_C]
		lea	ecx, [edx+1]
		mov	[ebp+var_C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_10], 1
		cmp	[ebp+var_10], 0
		jnz	short loc_6CBA37DC
		jmp	loc_6CBA3938
; ---------------------------------------------------------------------------

loc_6CBA3802:				; CODE XREF: lzo2a_decompress_safe+FFj
		shr	[ebp+var_14], 1
		sub	[ebp+var_18], 1
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_8]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, 1
		ja	short loc_6CBA381D
		jmp	loc_6CBA3979
; ---------------------------------------------------------------------------

loc_6CBA381D:				; CODE XREF: lzo2a_decompress_safe+1E8j
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		mov	[ebp+var_10], eax
		mov	eax, [ebp+var_4]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_10]
		and	eax, 1Fh
		mov	ecx, eax
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		shl	eax, 5
		or	eax, ecx
		neg	eax
		add	[ebp+var_C], eax
		shr	[ebp+var_10], 5
		cmp	[ebp+var_10], 0
		jnz	short loc_6CBA38BE
		mov	[ebp+var_10], 9
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA3876
		jmp	loc_6CBA3979
; ---------------------------------------------------------------------------

loc_6CBA3876:				; CODE XREF: lzo2a_decompress_safe+241j
		jmp	short loc_6CBA38A0
; ---------------------------------------------------------------------------

loc_6CBA3878:				; CODE XREF: lzo2a_decompress_safe+27Aj
		add	[ebp+var_10], 0FFh
		add	[ebp+var_8], 1
		cmp	[ebp+var_10], 0FFFFFE01h
		jbe	short loc_6CBA3891
		jmp	loc_6CBA3991
; ---------------------------------------------------------------------------

loc_6CBA3891:				; CODE XREF: lzo2a_decompress_safe+25Cj
		mov	edx, [ebp+var_1C]
		mov	eax, [ebp+var_8]
		cmp	edx, eax
		jnz	short loc_6CBA38A0
		jmp	loc_6CBA3979
; ---------------------------------------------------------------------------

loc_6CBA38A0:				; CODE XREF: lzo2a_decompress_safe:loc_6CBA3876j
					; lzo2a_decompress_safe+26Bj
		mov	eax, [ebp+var_8]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_6CBA3878
		mov	eax, [ebp+var_8]
		lea	edx, [eax+1]
		mov	[ebp+var_8], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_10], eax
		jmp	short loc_6CBA38EA
; ---------------------------------------------------------------------------

loc_6CBA38BE:				; CODE XREF: lzo2a_decompress_safe+230j
		mov	eax, [ebp+var_C]
		cmp	eax, [ebp+var_4]
		jnz	short loc_6CBA38E6
		nop
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_1C]
		jz	loc_6CBA3972
		jmp	short loc_6CBA395C
; ---------------------------------------------------------------------------

loc_6CBA38E6:				; CODE XREF: lzo2a_decompress_safe+296j
		add	[ebp+var_10], 2

loc_6CBA38EA:				; CODE XREF: lzo2a_decompress_safe+28Ej
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+arg_8]
		cmp	edx, eax
		jb	loc_6CBA39A9
		mov	edx, [ebp+var_C]
		mov	eax, [ebp+var_4]
		cmp	edx, eax
		jnb	loc_6CBA39A9
		mov	edx, [ebp+var_20]
		mov	eax, [ebp+var_4]
		sub	edx, eax
		mov	eax, edx
		cmp	eax, [ebp+var_10]
		jnb	short loc_6CBA3917
		jmp	short loc_6CBA3991
; ---------------------------------------------------------------------------

loc_6CBA3917:				; CODE XREF: lzo2a_decompress_safe+2E5j
					; lzo2a_decompress_safe+308j
		mov	eax, [ebp+var_4]
		lea	edx, [eax+1]
		mov	[ebp+var_4], edx
		mov	edx, [ebp+var_C]
		lea	ecx, [edx+1]
		mov	[ebp+var_C], ecx
		movzx	edx, byte ptr [edx]
		mov	[eax], dl
		sub	[ebp+var_10], 1
		cmp	[ebp+var_10], 0
		jnz	short loc_6CBA3917

loc_6CBA3938:				; CODE XREF: lzo2a_decompress_safe+38j
					; lzo2a_decompress_safe+B7j ...
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_1C]
		jb	loc_6CBA366B
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFF9h
		jmp	short locret_6CBA39BF
; ---------------------------------------------------------------------------

loc_6CBA395C:				; CODE XREF: lzo2a_decompress_safe+2B6j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_1C]
		jnb	short loc_6CBA396B
		mov	eax, 0FFFFFFF8h
		jmp	short loc_6CBA3977
; ---------------------------------------------------------------------------

loc_6CBA396B:				; CODE XREF: lzo2a_decompress_safe+334j
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CBA39BF
; ---------------------------------------------------------------------------

loc_6CBA3972:				; CODE XREF: lzo2a_decompress_safe+2B0j
		mov	eax, 0

loc_6CBA3977:				; CODE XREF: lzo2a_decompress_safe+33Bj
		jmp	short locret_6CBA39BF
; ---------------------------------------------------------------------------

loc_6CBA3979:				; CODE XREF: lzo2a_decompress_safe+4Dj
					; lzo2a_decompress_safe+8Cj ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFCh
		jmp	short locret_6CBA39BF
; ---------------------------------------------------------------------------

loc_6CBA3991:				; CODE XREF: lzo2a_decompress_safe+9Bj
					; lzo2a_decompress_safe+172j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFBh
		jmp	short locret_6CBA39BF
; ---------------------------------------------------------------------------

loc_6CBA39A9:				; CODE XREF: lzo2a_decompress_safe+19Aj
					; lzo2a_decompress_safe+1A8j ...
		mov	edx, [ebp+var_4]
		mov	eax, [ebp+arg_8]
		sub	edx, eax
		mov	eax, edx
		mov	edx, eax
		mov	eax, [ebp+arg_C]
		mov	[eax], edx
		mov	eax, 0FFFFFFFAh

locret_6CBA39BF:			; CODE XREF: lzo2a_decompress_safe+32Cj
					; lzo2a_decompress_safe+342j ...
		leave
		retn
lzo2a_decompress_safe endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 122. lzo_get_crc32_table

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo_get_crc32_table
lzo_get_crc32_table proc near
		push	ebp
		mov	ebp, esp
		mov	eax, offset dword_6CBA73C0
		pop	ebp
		retn
lzo_get_crc32_table endp

; Exported entry 121. lzo_crc32

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo_crc32
lzo_crc32	proc near

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		cmp	[ebp+arg_4], 0
		jnz	short loc_6CBA39EE
		mov	eax, 0
		jmp	locret_6CBA3C89
; ---------------------------------------------------------------------------

loc_6CBA39EE:				; CODE XREF: lzo_crc32+Aj
		mov	eax, [ebp+arg_0]
		not	eax
		mov	[ebp+var_4], eax
		cmp	[ebp+arg_8], 0Fh
		jbe	loc_6CBA3C4F

loc_6CBA3A00:				; CODE XREF: lzo_crc32+271j
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 4
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 5
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 6
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 7
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 8
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 9
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Ah
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Bh
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Ch
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Dh
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Eh
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Fh
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		add	[ebp+arg_4], 10h
		sub	[ebp+arg_8], 10h
		cmp	[ebp+arg_8], 0Fh
		ja	loc_6CBA3A00

loc_6CBA3C4F:				; CODE XREF: lzo_crc32+22j
		cmp	[ebp+arg_8], 0
		jz	short loc_6CBA3C84

loc_6CBA3C55:				; CODE XREF: lzo_crc32+2AAj
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		xor	eax, [ebp+var_4]
		movzx	eax, al
		mov	eax, ds:dword_6CBA73C0[eax*4]
		mov	edx, [ebp+var_4]
		shr	edx, 8
		xor	eax, edx
		mov	[ebp+var_4], eax
		add	[ebp+arg_4], 1
		sub	[ebp+arg_8], 1
		cmp	[ebp+arg_8], 0
		jnz	short loc_6CBA3C55

loc_6CBA3C84:				; CODE XREF: lzo_crc32+27Bj
		mov	eax, [ebp+var_4]
		not	eax

locret_6CBA3C89:			; CODE XREF: lzo_crc32+11j
		leave
		retn
lzo_crc32	endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA3C96	proc near		; CODE XREF: _lzo_config_check+28p
					; _lzo_config_check+60p ...

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		mov	edx, [ebp+arg_0]
		add	eax, edx
		pop	ebp
		retn
sub_6CBA3C96	endp

; Exported entry  29. _lzo_config_check

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _lzo_config_check
_lzo_config_check proc near		; CODE XREF: __lzo_init_v2:loc_6CBA3FACp

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 48h
		mov	[ebp+var_4], 1
		mov	[ebp+var_34], 0
		mov	eax, [ebp+var_34]
		mov	[ebp+var_38], eax
		mov	[esp+48h+var_44], 0
		lea	eax, [ebp+var_38]
		mov	[esp+48h+var_48], eax
		call	sub_6CBA3C96
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		movzx	eax, byte ptr [eax]
		test	al, al
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	[ebp+var_34], 0
		mov	eax, [ebp+var_34]
		mov	[ebp+var_38], eax
		mov	byte ptr [ebp+var_38], 80h
		mov	[esp+48h+var_44], 0
		lea	eax, [ebp+var_38]
		mov	[esp+48h+var_48], eax
		call	sub_6CBA3C96
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		mov	eax, [eax]
		cmp	eax, 80h
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	[ebp+var_34], 0
		mov	eax, [ebp+var_34]
		mov	[ebp+var_38], eax
		mov	byte ptr [ebp+var_38], 1
		mov	byte ptr [ebp+var_38+3], 2
		mov	[esp+48h+var_44], 1
		lea	eax, [ebp+var_38]
		mov	[esp+48h+var_48], eax
		call	sub_6CBA3C96
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		movzx	eax, word ptr [eax]
		test	ax, ax
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	eax, [ebp+var_18]
		movzx	eax, word ptr [eax]
		test	ax, ax
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	byte ptr [ebp+var_38+1], 80h
		mov	eax, [ebp+var_18]
		movzx	eax, word ptr [eax]
		cmp	ax, 80h
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	byte ptr [ebp+var_38+2], 81h
		mov	eax, [ebp+var_18]
		movzx	eax, word ptr [eax]
		cmp	ax, 8180h
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	eax, [ebp+var_18]
		movzx	eax, word ptr [eax]
		cmp	ax, 8180h
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	[ebp+var_34], 0
		mov	eax, [ebp+var_34]
		mov	[ebp+var_38], eax
		mov	byte ptr [ebp+var_38], 3
		mov	byte ptr [ebp+var_34+1], 4
		mov	[esp+48h+var_44], 1
		lea	eax, [ebp+var_38]
		mov	[esp+48h+var_48], eax
		call	sub_6CBA3C96
		mov	[ebp+var_18], eax
		mov	eax, [ebp+var_18]
		mov	eax, [eax]
		test	eax, eax
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	eax, [ebp+var_18]
		mov	eax, [eax]
		test	eax, eax
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	byte ptr [ebp+var_38+1], 80h
		mov	eax, [ebp+var_18]
		mov	eax, [eax]
		cmp	eax, 80h
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	byte ptr [ebp+var_38+2], 81h
		mov	byte ptr [ebp+var_38+3], 82h
		mov	byte ptr [ebp+var_34], 83h
		mov	eax, [ebp+var_18]
		mov	eax, [eax]
		cmp	eax, 83828180h
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	eax, [ebp+var_18]
		mov	eax, [eax]
		cmp	eax, 83828180h
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	[ebp+var_8], 0
		mov	[ebp+var_C], 1
		jmp	short loc_6CBA3E9D
; ---------------------------------------------------------------------------

loc_6CBA3E52:				; CODE XREF: _lzo_config_check+204j
		bsr	eax, [ebp+var_C]
		xor	eax, 1Fh
		mov	edx, eax
		mov	eax, 1Fh
		sub	eax, [ebp+var_8]
		cmp	edx, eax
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		bsr	eax, [ebp+var_1C]
		xor	eax, 1Fh
		mov	[ebp+var_20], eax
		mov	eax, [ebp+var_20]
		mov	edx, eax
		mov	eax, 1Fh
		sub	eax, [ebp+var_8]
		cmp	edx, eax
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		shl	[ebp+var_C], 1
		add	[ebp+var_8], 1

loc_6CBA3E9D:				; CODE XREF: _lzo_config_check+1ADj
		cmp	[ebp+var_C], 0
		jz	short loc_6CBA3EA9
		cmp	[ebp+var_4], 1
		jz	short loc_6CBA3E52

loc_6CBA3EA9:				; CODE XREF: _lzo_config_check+1FEj
		mov	[ebp+var_10], 0
		mov	[ebp+var_14], 1
		jmp	short loc_6CBA3EEE
; ---------------------------------------------------------------------------

loc_6CBA3EB9:				; CODE XREF: _lzo_config_check+255j
		tzcnt	eax, [ebp+var_14]
		cmp	eax, [ebp+var_10]
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		mov	eax, [ebp+var_14]
		mov	[ebp+var_24], eax
		tzcnt	eax, [ebp+var_24]
		mov	[ebp+var_28], eax
		mov	eax, [ebp+var_28]
		cmp	eax, [ebp+var_10]
		setz	al
		movzx	eax, al
		and	[ebp+var_4], eax
		shl	[ebp+var_14], 1
		add	[ebp+var_10], 1

loc_6CBA3EEE:				; CODE XREF: _lzo_config_check+214j
		cmp	[ebp+var_14], 0
		jz	short loc_6CBA3EFA
		cmp	[ebp+var_4], 1
		jz	short loc_6CBA3EB9

loc_6CBA3EFA:				; CODE XREF: _lzo_config_check+24Fj
		cmp	[ebp+var_4], 1
		jnz	short loc_6CBA3F07
		mov	eax, 0
		jmp	short locret_6CBA3F0C
; ---------------------------------------------------------------------------

loc_6CBA3F07:				; CODE XREF: _lzo_config_check+25Bj
		mov	eax, 0FFFFFFFFh

locret_6CBA3F0C:			; CODE XREF: _lzo_config_check+262j
		leave
		retn
_lzo_config_check endp

; Exported entry   3. __lzo_init_v2

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __lzo_init_v2
__lzo_init_v2	proc near

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h
arg_14		= dword	ptr  1Ch
arg_18		= dword	ptr  20h
arg_1C		= dword	ptr  24h
arg_20		= dword	ptr  28h
arg_24		= dword	ptr  2Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		cmp	[ebp+arg_0], 0
		jnz	short loc_6CBA3F24
		mov	eax, 0FFFFFFFFh
		jmp	locret_6CBA3FC2
; ---------------------------------------------------------------------------

loc_6CBA3F24:				; CODE XREF: __lzo_init_v2+Aj
		cmp	[ebp+arg_4], 0FFFFFFFFh
		jz	short loc_6CBA3F30
		cmp	[ebp+arg_4], 2
		jnz	short loc_6CBA3F97

loc_6CBA3F30:				; CODE XREF: __lzo_init_v2+1Aj
		cmp	[ebp+arg_8], 0FFFFFFFFh
		jz	short loc_6CBA3F3C
		cmp	[ebp+arg_8], 4
		jnz	short loc_6CBA3F97

loc_6CBA3F3C:				; CODE XREF: __lzo_init_v2+26j
		cmp	[ebp+arg_C], 0FFFFFFFFh
		jz	short loc_6CBA3F48
		cmp	[ebp+arg_C], 4
		jnz	short loc_6CBA3F97

loc_6CBA3F48:				; CODE XREF: __lzo_init_v2+32j
		cmp	[ebp+arg_10], 0FFFFFFFFh
		jz	short loc_6CBA3F54
		cmp	[ebp+arg_10], 4
		jnz	short loc_6CBA3F97

loc_6CBA3F54:				; CODE XREF: __lzo_init_v2+3Ej
		cmp	[ebp+arg_14], 0FFFFFFFFh
		jz	short loc_6CBA3F60
		cmp	[ebp+arg_14], 4
		jnz	short loc_6CBA3F97

loc_6CBA3F60:				; CODE XREF: __lzo_init_v2+4Aj
		cmp	[ebp+arg_18], 0FFFFFFFFh
		jz	short loc_6CBA3F6C
		cmp	[ebp+arg_18], 4
		jnz	short loc_6CBA3F97

loc_6CBA3F6C:				; CODE XREF: __lzo_init_v2+56j
		cmp	[ebp+arg_1C], 0FFFFFFFFh
		jz	short loc_6CBA3F78
		cmp	[ebp+arg_1C], 4
		jnz	short loc_6CBA3F97

loc_6CBA3F78:				; CODE XREF: __lzo_init_v2+62j
		cmp	[ebp+arg_20], 0FFFFFFFFh
		jz	short loc_6CBA3F84
		cmp	[ebp+arg_20], 4
		jnz	short loc_6CBA3F97

loc_6CBA3F84:				; CODE XREF: __lzo_init_v2+6Ej
		cmp	[ebp+arg_24], 0FFFFFFFFh
		jz	short loc_6CBA3F90
		cmp	[ebp+arg_24], 18h
		jnz	short loc_6CBA3F97

loc_6CBA3F90:				; CODE XREF: __lzo_init_v2+7Aj
		mov	eax, 1
		jmp	short loc_6CBA3F9C
; ---------------------------------------------------------------------------

loc_6CBA3F97:				; CODE XREF: __lzo_init_v2+20j
					; __lzo_init_v2+2Cj ...
		mov	eax, 0

loc_6CBA3F9C:				; CODE XREF: __lzo_init_v2+87j
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jnz	short loc_6CBA3FAC
		mov	eax, 0FFFFFFFFh
		jmp	short locret_6CBA3FC2
; ---------------------------------------------------------------------------

loc_6CBA3FAC:				; CODE XREF: __lzo_init_v2+95j
		call	_lzo_config_check
		mov	[ebp+var_4], eax
		cmp	[ebp+var_4], 0
		jz	short loc_6CBA3FBF
		mov	eax, [ebp+var_4]
		jmp	short locret_6CBA3FC2
; ---------------------------------------------------------------------------

loc_6CBA3FBF:				; CODE XREF: __lzo_init_v2+AAj
		mov	eax, [ebp+var_4]

locret_6CBA3FC2:			; CODE XREF: __lzo_init_v2+11j
					; __lzo_init_v2+9Cj ...
		leave
		retn
__lzo_init_v2	endp

; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry   4. __lzo_ptr_linear

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __lzo_ptr_linear
__lzo_ptr_linear proc near		; CODE XREF: __lzo_align_gap+19p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		leave
		retn
__lzo_ptr_linear endp

; Exported entry   2. __lzo_align_gap

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public __lzo_align_gap
__lzo_align_gap	proc near

var_14		= dword	ptr -14h
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		cmp	[ebp+arg_4], 1
		ja	short loc_6CBA3FF2
		mov	eax, 0
		jmp	short locret_6CBA4035
; ---------------------------------------------------------------------------

loc_6CBA3FF2:				; CODE XREF: __lzo_align_gap+Aj
		mov	eax, [ebp+arg_0]
		mov	[esp+14h+var_14], eax
		call	__lzo_ptr_linear
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		sub	eax, 1
		and	eax, [ebp+arg_4]
		test	eax, eax
		jz	short loc_6CBA4014
		mov	eax, 0
		jmp	short locret_6CBA4035
; ---------------------------------------------------------------------------

loc_6CBA4014:				; CODE XREF: __lzo_align_gap+2Cj
		mov	eax, [ebp+arg_4]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_8]
		mov	edx, [ebp+var_4]
		add	eax, edx
		lea	edx, [eax-1]
		mov	eax, [ebp+var_8]
		neg	eax
		and	eax, edx
		sub	eax, [ebp+var_4]
		mov	[ebp+var_8], eax
		mov	eax, [ebp+var_8]

locret_6CBA4035:			; CODE XREF: __lzo_align_gap+11j
					; __lzo_align_gap+33j
		leave
		retn
__lzo_align_gap	endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 123. lzo_memcmp

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo_memcmp(void *, void *, size_t)
		public lzo_memcmp
lzo_memcmp	proc near

Buf1		= dword	ptr -18h
Buf2		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Buf2],	eax ; Buf2
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+Buf1],	eax ; Buf1
		call	_memcmp
		leave
		retn
lzo_memcmp	endp

; Exported entry 124. lzo_memcpy

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo_memcpy(void *, void *, size_t)
		public lzo_memcpy
lzo_memcpy	proc near

Dst		= dword	ptr -18h
Src		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Src], eax ; Src
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+Dst], eax ; Dst
		call	_memcpy
		leave
		retn
lzo_memcpy	endp

; Exported entry 125. lzo_memmove

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo_memmove(void *, void *, size_t)
		public lzo_memmove
lzo_memmove	proc near

Dst		= dword	ptr -18h
Src		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Src], eax ; Src
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+Dst], eax ; Dst
		call	_memmove
		leave
		retn
lzo_memmove	endp

; Exported entry 126. lzo_memset

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __cdecl lzo_memset(void *, int, size_t)
		public lzo_memset
lzo_memset	proc near

Dst		= dword	ptr -18h
Val		= dword	ptr -14h
Size		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+Size],	eax ; Size
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+Val], eax ; Val
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+Dst], eax ; Dst
		call	_memset
		leave
		retn
lzo_memset	endp

; ---------------------------------------------------------------------------
		align 4
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		push	ebp
		mov	ebp, esp
		pop	ebp
		retn
; Exported entry 120. lzo_copyright

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo_copyright
lzo_copyright	proc near
		push	ebp
		mov	ebp, esp
		mov	eax, offset a2_09 ; "2.09"
		pop	ebp
		retn
lzo_copyright	endp

; Exported entry 127. lzo_version

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo_version
lzo_version	proc near
		push	ebp
		mov	ebp, esp
		mov	eax, 2090h
		pop	ebp
		retn
lzo_version	endp

; Exported entry 129. lzo_version_string

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo_version_string
lzo_version_string proc	near
		push	ebp
		mov	ebp, esp
		mov	eax, offset a2_09_0 ; "2.09"
		pop	ebp
		retn
lzo_version_string endp

; Exported entry 128. lzo_version_date

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo_version_date
lzo_version_date proc near
		push	ebp
		mov	ebp, esp
		mov	eax, offset aFeb042015 ; "Feb 04 2015"
		pop	ebp
		retn
lzo_version_date endp

; Exported entry  31. _lzo_version_string

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _lzo_version_string
_lzo_version_string proc near
		push	ebp
		mov	ebp, esp
		mov	eax, offset a2_09_0 ; "2.09"
		pop	ebp
		retn
_lzo_version_string endp

; Exported entry  30. _lzo_version_date

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public _lzo_version_date
_lzo_version_date proc near
		push	ebp
		mov	ebp, esp
		mov	eax, offset aFeb042015 ; "Feb 04 2015"
		pop	ebp
		retn
_lzo_version_date endp

; Exported entry 119. lzo_adler32

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public lzo_adler32
lzo_adler32	proc near

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		movzx	eax, ax
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_0]
		shr	eax, 10h
		mov	[ebp+var_8], eax
		cmp	[ebp+arg_4], 0
		jnz	short loc_6CBA4136
		mov	eax, 1
		jmp	locret_6CBA4334
; ---------------------------------------------------------------------------

loc_6CBA4136:				; CODE XREF: lzo_adler32+1Cj
		jmp	loc_6CBA4321
; ---------------------------------------------------------------------------

loc_6CBA413B:				; CODE XREF: lzo_adler32+217j
		mov	eax, 15B0h
		cmp	[ebp+arg_8], 15B0h
		cmovbe	eax, [ebp+arg_8]
		mov	[ebp+var_C], eax
		mov	eax, [ebp+var_C]
		sub	[ebp+arg_8], eax
		cmp	[ebp+var_C], 0Fh
		jbe	loc_6CBA42BD

loc_6CBA415E:				; CODE XREF: lzo_adler32+1A9j
		mov	eax, [ebp+arg_4]
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 1
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 2
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 3
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 4
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 5
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 6
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 7
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 8
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 9
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Ah
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Bh
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Ch
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Dh
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Eh
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		mov	eax, [ebp+arg_4]
		add	eax, 0Fh
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		add	[ebp+arg_4], 10h
		sub	[ebp+var_C], 10h
		cmp	[ebp+var_C], 0Fh
		ja	loc_6CBA415E

loc_6CBA42BD:				; CODE XREF: lzo_adler32+4Aj
		cmp	[ebp+var_C], 0
		jz	short loc_6CBA42E5

loc_6CBA42C3:				; CODE XREF: lzo_adler32+1D5j
		mov	eax, [ebp+arg_4]
		lea	edx, [eax+1]
		mov	[ebp+arg_4], edx
		movzx	eax, byte ptr [eax]
		movzx	eax, al
		add	[ebp+var_4], eax
		mov	eax, [ebp+var_4]
		add	[ebp+var_8], eax
		sub	[ebp+var_C], 1
		cmp	[ebp+var_C], 0
		jnz	short loc_6CBA42C3

loc_6CBA42E5:				; CODE XREF: lzo_adler32+1B3j
		mov	ecx, [ebp+var_4]
		mov	edx, 80078071h
		mov	eax, ecx
		mul	edx
		mov	eax, edx
		shr	eax, 0Fh
		imul	eax, 0FFF1h
		sub	ecx, eax
		mov	eax, ecx
		mov	[ebp+var_4], eax
		mov	ecx, [ebp+var_8]
		mov	edx, 80078071h
		mov	eax, ecx
		mul	edx
		mov	eax, edx
		shr	eax, 0Fh
		imul	eax, 0FFF1h
		sub	ecx, eax
		mov	eax, ecx
		mov	[ebp+var_8], eax

loc_6CBA4321:				; CODE XREF: lzo_adler32:loc_6CBA4136j
		cmp	[ebp+arg_8], 0
		jnz	loc_6CBA413B
		mov	eax, [ebp+var_8]
		shl	eax, 10h
		or	eax, [ebp+var_4]

locret_6CBA4334:			; CODE XREF: lzo_adler32+23j
		leave
		retn
lzo_adler32	endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  69. lzo1c_decompress_asm

; =============== S U B	R O U T	I N E =======================================


		public lzo1c_decompress_asm
lzo1c_decompress_asm proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		push	ecx
		push	edx
		sub	esp, 0Ch
		cld
		mov	esi, [esp+24h+arg_0]
		mov	edi, [esp+24h+arg_8]
		mov	ebp, 3
		nop

loc_6CBA4358:				; CODE XREF: lzo1c_decompress_asm+4Fj
					; lzo1c_decompress_asm+73j ...
		xor	eax, eax
		mov	al, [esi]
		inc	esi
		cmp	al, 20h
		jnb	short loc_6CBA4370
		or	al, al
		jz	short loc_6CBA4398
		mov	ecx, eax

loc_6CBA4367:				; CODE XREF: lzo1c_decompress_asm+60j
					; lzo1c_decompress_asm+D1j
		rep movsb

loc_6CBA4369:				; CODE XREF: lzo1c_decompress_asm+8Fj
		mov	al, [esi]
		inc	esi
		cmp	al, 20h
		jb	short loc_6CBA43B8

loc_6CBA4370:				; CODE XREF: lzo1c_decompress_asm+1Fj
		cmp	al, 40h
		jb	short loc_6CBA43D1
		mov	ecx, eax
		and	al, 1Fh
		lea	edx, [edi-1]
		shr	ecx, 5
		sub	edx, eax
		mov	al, [esi]
		inc	esi
		shl	eax, 5
		sub	edx, eax
		inc	ecx
		xchg	esi, edx
		rep movsb
		mov	esi, edx
		jmp	short loc_6CBA4358
; ---------------------------------------------------------------------------
		align 8

loc_6CBA4398:				; CODE XREF: lzo1c_decompress_asm+23j
		mov	al, [esi]
		inc	esi
		lea	ecx, [eax+20h]
		cmp	al, 0F8h
		jb	short loc_6CBA4367
		mov	ecx, 118h
		sub	al, 0F8h
		jz	short loc_6CBA43B1
		xchg	eax, ecx
		xor	al, al
		shl	eax, cl
		xchg	eax, ecx

loc_6CBA43B1:				; CODE XREF: lzo1c_decompress_asm+69j
		rep movsb
		jmp	short loc_6CBA4358
; ---------------------------------------------------------------------------
		align 4

loc_6CBA43B8:				; CODE XREF: lzo1c_decompress_asm+2Ej
		lea	edx, [edi-1]
		sub	edx, eax
		mov	al, [esi]
		inc	esi
		shl	eax, 5
		sub	edx, eax
		xchg	esi, edx
		movsb
		movsb
		movsb
		mov	esi, edx
		movsb
		xor	eax, eax
		jmp	short loc_6CBA4369
; ---------------------------------------------------------------------------

loc_6CBA43D1:				; CODE XREF: lzo1c_decompress_asm+32j
		and	al, 1Fh
		mov	ecx, eax
		jnz	short loc_6CBA43EA
		mov	cl, 1Fh

loc_6CBA43D9:				; CODE XREF: lzo1c_decompress_asm+A6j
		mov	al, [esi]
		inc	esi
		or	al, al
		jnz	short loc_6CBA43E8
		add	ecx, 0FFh
		jmp	short loc_6CBA43D9
; ---------------------------------------------------------------------------

loc_6CBA43E8:				; CODE XREF: lzo1c_decompress_asm+9Ej
		add	ecx, eax

loc_6CBA43EA:				; CODE XREF: lzo1c_decompress_asm+95j
		mov	al, [esi]
		inc	esi
		mov	ebx, eax
		and	al, 3Fh
		mov	edx, edi
		sub	edx, eax
		mov	al, [esi]
		inc	esi
		shl	eax, 6
		sub	edx, eax
		cmp	edx, edi
		jz	short loc_6CBA441C
		xchg	edx, esi
		lea	ecx, [ecx+3]
		rep movsb
		mov	esi, edx
		xor	eax, eax
		shr	ebx, 6
		mov	ecx, ebx
		jnz	loc_6CBA4367
		jmp	loc_6CBA4358
; ---------------------------------------------------------------------------

loc_6CBA441C:				; CODE XREF: lzo1c_decompress_asm+BFj
		cmp	ecx, 1
		setnz	al
		mov	edx, [esp+24h+arg_0]
		add	edx, [esp+24h+arg_4]
		cmp	esi, edx
		ja	short loc_6CBA4454
		jb	short loc_6CBA444D

loc_6CBA4430:				; CODE XREF: lzo1c_decompress_asm+10Bj
					; lzo1c_decompress_asm+112j ...
		sub	edi, [esp+24h+arg_8]
		mov	edx, [esp+24h+arg_C]
		mov	[edx], edi
		neg	eax
		add	esp, 0Ch
		pop	edx
		pop	ecx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		mov	eax, 1
		jmp	short loc_6CBA4430
; ---------------------------------------------------------------------------

loc_6CBA444D:				; CODE XREF: lzo1c_decompress_asm+EEj
		mov	eax, 8
		jmp	short loc_6CBA4430
; ---------------------------------------------------------------------------

loc_6CBA4454:				; CODE XREF: lzo1c_decompress_asm+ECj
		mov	eax, 4
		jmp	short loc_6CBA4430
lzo1c_decompress_asm endp

; ---------------------------------------------------------------------------
		align 40h
; Exported entry  76. lzo1f_decompress_asm_fast

; =============== S U B	R O U T	I N E =======================================


		public lzo1f_decompress_asm_fast
lzo1f_decompress_asm_fast proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		push	ecx
		push	edx
		sub	esp, 0Ch
		cld
		mov	esi, [esp+24h+arg_0]
		mov	edi, [esp+24h+arg_8]
		mov	ebp, 3
		nop

loc_6CBA4498:				; CODE XREF: lzo1f_decompress_asm_fast+97j
		xor	eax, eax
		mov	al, [esi]
		inc	esi
		cmp	al, 1Fh
		ja	short loc_6CBA44D4
		or	al, al
		mov	ecx, eax
		jnz	short loc_6CBA44BA

loc_6CBA44A7:				; CODE XREF: lzo1f_decompress_asm_fast+34j
		mov	al, [esi]
		inc	esi
		or	al, al
		jnz	short loc_6CBA44B6
		add	ecx, 0FFh
		jmp	short loc_6CBA44A7
; ---------------------------------------------------------------------------

loc_6CBA44B6:				; CODE XREF: lzo1f_decompress_asm_fast+2Cj
		lea	ecx, [eax+ecx+1Fh]

loc_6CBA44BA:				; CODE XREF: lzo1f_decompress_asm_fast+25j
		mov	al, cl
		shr	ecx, 2
		rep movsd
		and	al, 3
		jz	short loc_6CBA44CD
		mov	ebx, [esi]
		add	esi, eax
		mov	[edi], ebx
		add	edi, eax

loc_6CBA44CD:				; CODE XREF: lzo1f_decompress_asm_fast+43j
		mov	al, [esi]
		inc	esi

loc_6CBA44D0:				; CODE XREF: lzo1f_decompress_asm_fast+AAj
		cmp	al, 1Fh
		jbe	short loc_6CBA452C

loc_6CBA44D4:				; CODE XREF: lzo1f_decompress_asm_fast+1Fj
		cmp	al, 0DFh
		ja	loc_6CBA4560
		mov	ecx, eax
		shr	eax, 2
		lea	edx, [edi-1]
		and	al, 7
		shr	ecx, 5
		mov	ebx, eax
		mov	al, [esi]
		lea	eax, [ebx+eax*8]
		inc	esi

loc_6CBA44F1:				; CODE XREF: lzo1f_decompress_asm_fast+F1j
		sub	edx, eax
		add	ecx, 2
		xchg	edx, esi
		cmp	ecx, 6
		jb	short loc_6CBA450D
		cmp	eax, 4
		jb	short loc_6CBA450D
		mov	al, cl
		shr	ecx, 2
		rep movsd
		and	al, 3
		mov	cl, al

loc_6CBA450D:				; CODE XREF: lzo1f_decompress_asm_fast+7Bj
					; lzo1f_decompress_asm_fast+80j
		rep movsb
		mov	esi, edx

loc_6CBA4511:				; CODE XREF: lzo1f_decompress_asm_fast+C6j
		mov	cl, [esi-2]
		and	ecx, 3
		jz	loc_6CBA4498
		mov	eax, [esi]
		add	esi, ecx
		mov	[edi], eax
		add	edi, ecx
		xor	eax, eax
		mov	al, [esi]
		inc	esi
		jmp	short loc_6CBA44D0
; ---------------------------------------------------------------------------

loc_6CBA452C:				; CODE XREF: lzo1f_decompress_asm_fast+52j
		shr	eax, 2
		lea	edx, [edi-801h]
		mov	ecx, eax
		mov	al, [esi]
		inc	esi
		lea	eax, [ecx+eax*8]
		sub	edx, eax
		mov	eax, [edx]
		mov	[edi], eax
		add	edi, 3
		jmp	short loc_6CBA4511
; ---------------------------------------------------------------------------

loc_6CBA4548:				; CODE XREF: lzo1f_decompress_asm_fast+D5j
					; lzo1f_decompress_asm_fast+E4j
		mov	al, [esi]
		inc	esi
		or	al, al
		jnz	short loc_6CBA4557
		add	ecx, 0FFh
		jmp	short loc_6CBA4548
; ---------------------------------------------------------------------------

loc_6CBA4557:				; CODE XREF: lzo1f_decompress_asm_fast+CDj
		lea	ecx, [eax+ecx+1Fh]
		jmp	short loc_6CBA4566
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA4560:				; CODE XREF: lzo1f_decompress_asm_fast+56j
		and	al, 1Fh
		mov	ecx, eax
		jz	short loc_6CBA4548

loc_6CBA4566:				; CODE XREF: lzo1f_decompress_asm_fast+DBj
		mov	edx, edi
		mov	ax, [esi]
		add	esi, 2
		shr	eax, 2
		jnz	loc_6CBA44F1
		cmp	ecx, 1
		setnz	al
		mov	edx, [esp+24h+arg_0]
		add	edx, [esp+24h+arg_4]
		cmp	esi, edx
		ja	short loc_6CBA45AF
		jb	short loc_6CBA45A8

loc_6CBA458B:				; CODE XREF: lzo1f_decompress_asm_fast+126j
					; lzo1f_decompress_asm_fast+12Dj ...
		sub	edi, [esp+24h+arg_8]
		mov	edx, [esp+24h+arg_C]
		mov	[edx], edi
		neg	eax
		add	esp, 0Ch
		pop	edx
		pop	ecx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		mov	eax, 1
		jmp	short loc_6CBA458B
; ---------------------------------------------------------------------------

loc_6CBA45A8:				; CODE XREF: lzo1f_decompress_asm_fast+109j
		mov	eax, 8
		jmp	short loc_6CBA458B
; ---------------------------------------------------------------------------

loc_6CBA45AF:				; CODE XREF: lzo1f_decompress_asm_fast+107j
		mov	eax, 4
		jmp	short loc_6CBA458B
lzo1f_decompress_asm_fast endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  89. lzo1x_decompress_asm_fast

; =============== S U B	R O U T	I N E =======================================


		public lzo1x_decompress_asm_fast
lzo1x_decompress_asm_fast proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		push	ecx
		push	edx
		sub	esp, 0Ch
		cld
		mov	esi, [esp+24h+arg_0]
		mov	edi, [esp+24h+arg_8]
		mov	ebp, 3
		xor	eax, eax
		xor	ebx, ebx
		lodsb
		cmp	al, 11h
		jbe	short loc_6CBA45FB
		sub	al, 0Eh
		jmp	short loc_6CBA4606
; ---------------------------------------------------------------------------

loc_6CBA45E4:				; CODE XREF: lzo1x_decompress_asm_fast+2Ej
		add	eax, 0FFh

loc_6CBA45E9:				; CODE XREF: lzo1x_decompress_asm_fast+41j
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA45E4
		lea	eax, [eax+ebx+15h]
		jmp	short loc_6CBA4606
; ---------------------------------------------------------------------------
		align 4

loc_6CBA45F8:				; CODE XREF: lzo1x_decompress_asm_fast+F3j
		mov	al, [esi]
		inc	esi

loc_6CBA45FB:				; CODE XREF: lzo1x_decompress_asm_fast+1Ej
		cmp	al, 10h
		jnb	short loc_6CBA4640
		or	al, al
		jz	short loc_6CBA45E9
		add	eax, 6

loc_6CBA4606:				; CODE XREF: lzo1x_decompress_asm_fast+22j
					; lzo1x_decompress_asm_fast+34j
		mov	ecx, eax
		xor	eax, ebp
		shr	ecx, 2
		and	eax, ebp

loc_6CBA460F:				; CODE XREF: lzo1x_decompress_asm_fast+5Aj
		mov	edx, [esi]
		add	esi, 4
		mov	[edi], edx
		add	edi, 4
		dec	ecx
		jnz	short loc_6CBA460F
		sub	esi, eax
		sub	edi, eax
		mov	al, [esi]
		inc	esi
		cmp	al, 10h
		jnb	short loc_6CBA4640
		shr	eax, 2
		mov	bl, [esi]
		lea	edx, [edi-801h]
		lea	eax, [eax+ebx*4]
		inc	esi
		sub	edx, eax
		mov	ecx, [edx]
		mov	[edi], ecx
		add	edi, ebp
		jmp	short loc_6CBA46AE
; ---------------------------------------------------------------------------

loc_6CBA4640:				; CODE XREF: lzo1x_decompress_asm_fast+3Dj
					; lzo1x_decompress_asm_fast+65j ...
		cmp	al, 40h
		jb	short loc_6CBA4678
		mov	ecx, eax
		shr	eax, 2
		lea	edx, [edi-1]
		and	eax, 7
		mov	bl, [esi]
		shr	ecx, 5
		lea	eax, [eax+ebx*8]
		inc	esi
		sub	edx, eax
		add	ecx, 4
		cmp	eax, ebp
		jnb	short loc_6CBA4696
		jmp	short loc_6CBA46D0
; ---------------------------------------------------------------------------

loc_6CBA4663:				; CODE XREF: lzo1x_decompress_asm_fast+ADj
		add	eax, 0FFh

loc_6CBA4668:				; CODE XREF: lzo1x_decompress_asm_fast+BFj
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA4663
		lea	ecx, [eax+ebx+24h]
		xor	eax, eax
		jmp	short loc_6CBA4684
; ---------------------------------------------------------------------------
		align 4

loc_6CBA4678:				; CODE XREF: lzo1x_decompress_asm_fast+82j
		cmp	al, 20h
		jb	short loc_6CBA46F0
		and	eax, 1Fh
		jz	short loc_6CBA4668
		lea	ecx, [eax+5]

loc_6CBA4684:				; CODE XREF: lzo1x_decompress_asm_fast+B5j
		mov	ax, [esi]
		lea	edx, [edi-1]
		shr	eax, 2
		add	esi, 2
		sub	edx, eax
		cmp	eax, ebp
		jb	short loc_6CBA46D0

loc_6CBA4696:				; CODE XREF: lzo1x_decompress_asm_fast+9Fj
					; lzo1x_decompress_asm_fast+157j
		lea	eax, [edi+ecx-3]
		shr	ecx, 2

loc_6CBA469D:				; CODE XREF: lzo1x_decompress_asm_fast+E8j
		mov	ebx, [edx]
		add	edx, 4
		mov	[edi], ebx
		add	edi, 4
		dec	ecx
		jnz	short loc_6CBA469D
		mov	edi, eax
		xor	ebx, ebx

loc_6CBA46AE:				; CODE XREF: lzo1x_decompress_asm_fast+7Ej
					; lzo1x_decompress_asm_fast+118j ...
		mov	al, [esi-2]
		and	eax, ebp
		jz	loc_6CBA45F8
		mov	edx, [esi]
		add	esi, eax
		mov	[edi], edx
		add	edi, eax
		mov	al, [esi]
		inc	esi
		jmp	loc_6CBA4640
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA46D0:				; CODE XREF: lzo1x_decompress_asm_fast+A1j
					; lzo1x_decompress_asm_fast+D4j
		xchg	edx, esi
		sub	ecx, ebp
		rep movsb
		mov	esi, edx
		jmp	short loc_6CBA46AE
; ---------------------------------------------------------------------------

loc_6CBA46DA:				; CODE XREF: lzo1x_decompress_asm_fast+125j
		add	ecx, 0FFh

loc_6CBA46E0:				; CODE XREF: lzo1x_decompress_asm_fast+13Fj
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA46DA
		lea	ecx, [ebx+ecx+0Ch]
		jmp	short loc_6CBA4704
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA46F0:				; CODE XREF: lzo1x_decompress_asm_fast+BAj
		cmp	al, 10h
		jb	short loc_6CBA4720
		mov	ecx, eax
		and	eax, 8
		shl	eax, 0Dh
		and	ecx, 7
		jz	short loc_6CBA46E0
		add	ecx, 5

loc_6CBA4704:				; CODE XREF: lzo1x_decompress_asm_fast+12Bj
		mov	ax, [esi]
		add	esi, 2
		lea	edx, [edi-4000h]
		shr	eax, 2
		jz	short loc_6CBA4740
		sub	edx, eax
		jmp	loc_6CBA4696
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA4720:				; CODE XREF: lzo1x_decompress_asm_fast+132j
		shr	eax, 2
		mov	bl, [esi]
		lea	edx, [edi-1]
		lea	eax, [eax+ebx*4]
		inc	esi
		sub	edx, eax
		mov	al, [edx]
		mov	[edi], al
		mov	bl, [edx+1]
		mov	[edi+1], bl
		add	edi, 2
		jmp	loc_6CBA46AE
; ---------------------------------------------------------------------------

loc_6CBA4740:				; CODE XREF: lzo1x_decompress_asm_fast+153j
		cmp	ecx, 6
		setnz	al
		mov	edx, [esp+24h+arg_0]
		add	edx, [esp+24h+arg_4]
		cmp	esi, edx
		ja	short loc_6CBA4778
		jb	short loc_6CBA4771

loc_6CBA4754:				; CODE XREF: lzo1x_decompress_asm_fast+1AFj
					; lzo1x_decompress_asm_fast+1B6j ...
		sub	edi, [esp+24h+arg_8]
		mov	edx, [esp+24h+arg_C]
		mov	[edx], edi
		neg	eax
		add	esp, 0Ch
		pop	edx
		pop	ecx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		mov	eax, 1
		jmp	short loc_6CBA4754
; ---------------------------------------------------------------------------

loc_6CBA4771:				; CODE XREF: lzo1x_decompress_asm_fast+192j
		mov	eax, 8
		jmp	short loc_6CBA4754
; ---------------------------------------------------------------------------

loc_6CBA4778:				; CODE XREF: lzo1x_decompress_asm_fast+190j
		mov	eax, 4
		jmp	short loc_6CBA4754
lzo1x_decompress_asm_fast endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry  88. lzo1x_decompress_asm

; =============== S U B	R O U T	I N E =======================================


		public lzo1x_decompress_asm
lzo1x_decompress_asm proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		push	ecx
		push	edx
		sub	esp, 0Ch
		cld
		mov	esi, [esp+24h+arg_0]
		mov	edi, [esp+24h+arg_8]
		mov	ebp, 3
		xor	eax, eax
		xor	ebx, ebx
		lodsb
		cmp	al, 11h
		jbe	short loc_6CBA47C3
		sub	al, 11h
		cmp	al, 4
		jnb	short loc_6CBA47CE
		mov	ecx, eax
		jmp	short loc_6CBA47E2
; ---------------------------------------------------------------------------

loc_6CBA47AA:				; CODE XREF: lzo1x_decompress_asm+34j
		add	eax, 0FFh

loc_6CBA47AF:				; CODE XREF: lzo1x_decompress_asm+49j
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA47AA
		lea	eax, [eax+ebx+12h]
		jmp	short loc_6CBA47CE
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA47C0:				; CODE XREF: lzo1x_decompress_asm+10Cj
		mov	al, [esi]
		inc	esi

loc_6CBA47C3:				; CODE XREF: lzo1x_decompress_asm+1Ej
		cmp	al, 10h
		jnb	short loc_6CBA4810
		or	al, al
		jz	short loc_6CBA47AF
		add	eax, 3

loc_6CBA47CE:				; CODE XREF: lzo1x_decompress_asm+24j
					; lzo1x_decompress_asm+3Aj
		mov	ecx, eax
		shr	eax, 2
		and	ecx, ebp

loc_6CBA47D5:				; CODE XREF: lzo1x_decompress_asm+60j
		mov	edx, [esi]
		add	esi, 4
		mov	[edi], edx
		add	edi, 4
		dec	eax
		jnz	short loc_6CBA47D5

loc_6CBA47E2:				; CODE XREF: lzo1x_decompress_asm+28j
		rep movsb
		mov	al, [esi]
		inc	esi
		cmp	al, 10h
		jnb	short loc_6CBA4810
		shr	eax, 2
		mov	bl, [esi]
		lea	edx, [edi-801h]
		lea	eax, [eax+ebx*4]
		inc	esi
		sub	edx, eax
		mov	al, [edx]
		mov	[edi], al
		mov	al, [edx+1]
		mov	[edi+1], al
		mov	al, [edx+2]
		mov	[edi+2], al
		add	edi, ebp
		jmp	short loc_6CBA4887
; ---------------------------------------------------------------------------

loc_6CBA4810:				; CODE XREF: lzo1x_decompress_asm+45j
					; lzo1x_decompress_asm+69j ...
		cmp	al, 40h
		jb	short loc_6CBA4848
		mov	ecx, eax
		shr	eax, 2
		lea	edx, [edi-1]
		and	eax, 7
		mov	bl, [esi]
		shr	ecx, 5
		lea	eax, [eax+ebx*8]
		inc	esi
		sub	edx, eax
		inc	ecx
		cmp	eax, ebp
		jnb	short loc_6CBA4866
		jmp	short loc_6CBA48A8
; ---------------------------------------------------------------------------

loc_6CBA4831:				; CODE XREF: lzo1x_decompress_asm+BBj
		add	eax, 0FFh

loc_6CBA4836:				; CODE XREF: lzo1x_decompress_asm+CFj
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA4831
		lea	ecx, [eax+ebx+21h]
		xor	eax, eax
		jmp	short loc_6CBA4854
; ---------------------------------------------------------------------------
		align 4

loc_6CBA4848:				; CODE XREF: lzo1x_decompress_asm+92j
		cmp	al, 20h
		jb	short loc_6CBA48C8
		and	eax, 1Fh
		jz	short loc_6CBA4836
		lea	ecx, [eax+2]

loc_6CBA4854:				; CODE XREF: lzo1x_decompress_asm+C3j
		mov	ax, [esi]
		lea	edx, [edi-1]
		shr	eax, 2
		add	esi, 2
		sub	edx, eax
		cmp	eax, ebp
		jb	short loc_6CBA48A8

loc_6CBA4866:				; CODE XREF: lzo1x_decompress_asm+ADj
					; lzo1x_decompress_asm+16Fj
		mov	ebx, ecx
		shr	ebx, 2
		jz	short loc_6CBA487E

loc_6CBA486D:				; CODE XREF: lzo1x_decompress_asm+F8j
		mov	eax, [edx]
		add	edx, 4
		mov	[edi], eax
		add	edi, 4
		dec	ebx
		jnz	short loc_6CBA486D
		and	ecx, ebp
		jz	short loc_6CBA4887

loc_6CBA487E:				; CODE XREF: lzo1x_decompress_asm+EBj
					; lzo1x_decompress_asm+105j
		mov	al, [edx]
		inc	edx
		mov	[edi], al
		inc	edi
		dec	ecx
		jnz	short loc_6CBA487E

loc_6CBA4887:				; CODE XREF: lzo1x_decompress_asm+8Ej
					; lzo1x_decompress_asm+FCj ...
		mov	al, [esi-2]
		and	eax, ebp
		jz	loc_6CBA47C0

loc_6CBA4892:				; CODE XREF: lzo1x_decompress_asm+119j
		mov	cl, [esi]
		inc	esi
		mov	[edi], cl
		inc	edi
		dec	eax
		jnz	short loc_6CBA4892
		mov	al, [esi]
		inc	esi
		jmp	loc_6CBA4810
; ---------------------------------------------------------------------------
		align 8

loc_6CBA48A8:				; CODE XREF: lzo1x_decompress_asm+AFj
					; lzo1x_decompress_asm+E4j
		xchg	edx, esi
		rep movsb
		mov	esi, edx
		jmp	short loc_6CBA4887
; ---------------------------------------------------------------------------

loc_6CBA48B0:				; CODE XREF: lzo1x_decompress_asm+13Bj
		add	ecx, 0FFh

loc_6CBA48B6:				; CODE XREF: lzo1x_decompress_asm+157j
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA48B0
		lea	ecx, [ebx+ecx+9]
		jmp	short loc_6CBA48DC
; ---------------------------------------------------------------------------
		align 8

loc_6CBA48C8:				; CODE XREF: lzo1x_decompress_asm+CAj
		cmp	al, 10h
		jb	short loc_6CBA48F8
		mov	ecx, eax
		and	eax, 8
		shl	eax, 0Dh
		and	ecx, 7
		jz	short loc_6CBA48B6
		add	ecx, 2

loc_6CBA48DC:				; CODE XREF: lzo1x_decompress_asm+141j
		mov	ax, [esi]
		add	esi, 2
		lea	edx, [edi-4000h]
		shr	eax, 2
		jz	short loc_6CBA4918
		sub	edx, eax
		jmp	loc_6CBA4866
; ---------------------------------------------------------------------------
		align 8

loc_6CBA48F8:				; CODE XREF: lzo1x_decompress_asm+14Aj
		shr	eax, 2
		mov	bl, [esi]
		lea	edx, [edi-1]
		lea	eax, [eax+ebx*4]
		inc	esi
		sub	edx, eax
		mov	al, [edx]
		mov	[edi], al
		mov	bl, [edx+1]
		mov	[edi+1], bl
		add	edi, 2
		jmp	loc_6CBA4887
; ---------------------------------------------------------------------------

loc_6CBA4918:				; CODE XREF: lzo1x_decompress_asm+16Bj
		cmp	ecx, 3
		setnz	al
		mov	edx, [esp+24h+arg_0]
		add	edx, [esp+24h+arg_4]
		cmp	esi, edx
		ja	short loc_6CBA4950
		jb	short loc_6CBA4949

loc_6CBA492C:				; CODE XREF: lzo1x_decompress_asm+1C7j
					; lzo1x_decompress_asm+1CEj ...
		sub	edi, [esp+24h+arg_8]
		mov	edx, [esp+24h+arg_C]
		mov	[edx], edi
		neg	eax
		add	esp, 0Ch
		pop	edx
		pop	ecx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		mov	eax, 1
		jmp	short loc_6CBA492C
; ---------------------------------------------------------------------------

loc_6CBA4949:				; CODE XREF: lzo1x_decompress_asm+1AAj
		mov	eax, 8
		jmp	short loc_6CBA492C
; ---------------------------------------------------------------------------

loc_6CBA4950:				; CODE XREF: lzo1x_decompress_asm+1A8j
		mov	eax, 4
		jmp	short loc_6CBA492C
lzo1x_decompress_asm endp

; ---------------------------------------------------------------------------
		align 40h
; Exported entry 102. lzo1y_decompress_asm_fast

; =============== S U B	R O U T	I N E =======================================


		public lzo1y_decompress_asm_fast
lzo1y_decompress_asm_fast proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		push	ecx
		push	edx
		sub	esp, 0Ch
		cld
		mov	esi, [esp+24h+arg_0]
		mov	edi, [esp+24h+arg_8]
		mov	ebp, 3
		xor	eax, eax
		xor	ebx, ebx
		lodsb
		cmp	al, 11h
		jbe	short loc_6CBA49BB
		sub	al, 0Eh
		jmp	short loc_6CBA49C6
; ---------------------------------------------------------------------------

loc_6CBA49A4:				; CODE XREF: lzo1y_decompress_asm_fast+2Ej
		add	eax, 0FFh

loc_6CBA49A9:				; CODE XREF: lzo1y_decompress_asm_fast+41j
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA49A4
		lea	eax, [eax+ebx+15h]
		jmp	short loc_6CBA49C6
; ---------------------------------------------------------------------------
		align 4

loc_6CBA49B8:				; CODE XREF: lzo1y_decompress_asm_fast+F3j
		mov	al, [esi]
		inc	esi

loc_6CBA49BB:				; CODE XREF: lzo1y_decompress_asm_fast+1Ej
		cmp	al, 10h
		jnb	short loc_6CBA4A00
		or	al, al
		jz	short loc_6CBA49A9
		add	eax, 6

loc_6CBA49C6:				; CODE XREF: lzo1y_decompress_asm_fast+22j
					; lzo1y_decompress_asm_fast+34j
		mov	ecx, eax
		xor	eax, ebp
		shr	ecx, 2
		and	eax, ebp

loc_6CBA49CF:				; CODE XREF: lzo1y_decompress_asm_fast+5Aj
		mov	edx, [esi]
		add	esi, 4
		mov	[edi], edx
		add	edi, 4
		dec	ecx
		jnz	short loc_6CBA49CF
		sub	esi, eax
		sub	edi, eax
		mov	al, [esi]
		inc	esi
		cmp	al, 10h
		jnb	short loc_6CBA4A00
		shr	eax, 2
		mov	bl, [esi]
		lea	edx, [edi-401h]
		lea	eax, [eax+ebx*4]
		inc	esi
		sub	edx, eax
		mov	ecx, [edx]
		mov	[edi], ecx
		add	edi, ebp
		jmp	short loc_6CBA4A6E
; ---------------------------------------------------------------------------

loc_6CBA4A00:				; CODE XREF: lzo1y_decompress_asm_fast+3Dj
					; lzo1y_decompress_asm_fast+65j ...
		cmp	al, 40h
		jb	short loc_6CBA4A38
		mov	ecx, eax
		shr	eax, 2
		lea	edx, [edi-1]
		and	eax, ebp
		mov	bl, [esi]
		shr	ecx, 4
		lea	eax, [eax+ebx*4]
		inc	esi
		sub	edx, eax
		add	ecx, 2
		cmp	eax, ebp
		jnb	short loc_6CBA4A56
		jmp	short loc_6CBA4A90
; ---------------------------------------------------------------------------

loc_6CBA4A22:				; CODE XREF: lzo1y_decompress_asm_fast+ACj
		add	eax, 0FFh

loc_6CBA4A27:				; CODE XREF: lzo1y_decompress_asm_fast+BFj
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA4A22
		lea	ecx, [eax+ebx+24h]
		xor	eax, eax
		jmp	short loc_6CBA4A44
; ---------------------------------------------------------------------------
		align 4

loc_6CBA4A38:				; CODE XREF: lzo1y_decompress_asm_fast+82j
		cmp	al, 20h
		jb	short loc_6CBA4AB0
		and	eax, 1Fh
		jz	short loc_6CBA4A27
		lea	ecx, [eax+5]

loc_6CBA4A44:				; CODE XREF: lzo1y_decompress_asm_fast+B4j
		mov	ax, [esi]
		lea	edx, [edi-1]
		shr	eax, 2
		add	esi, 2
		sub	edx, eax
		cmp	eax, ebp
		jb	short loc_6CBA4A90

loc_6CBA4A56:				; CODE XREF: lzo1y_decompress_asm_fast+9Ej
					; lzo1y_decompress_asm_fast+157j
		lea	eax, [edi+ecx-3]
		shr	ecx, 2

loc_6CBA4A5D:				; CODE XREF: lzo1y_decompress_asm_fast+E8j
		mov	ebx, [edx]
		add	edx, 4
		mov	[edi], ebx
		add	edi, 4
		dec	ecx
		jnz	short loc_6CBA4A5D
		mov	edi, eax
		xor	ebx, ebx

loc_6CBA4A6E:				; CODE XREF: lzo1y_decompress_asm_fast+7Ej
					; lzo1y_decompress_asm_fast+118j ...
		mov	al, [esi-2]
		and	eax, ebp
		jz	loc_6CBA49B8
		mov	edx, [esi]
		add	esi, eax
		mov	[edi], edx
		add	edi, eax
		mov	al, [esi]
		inc	esi
		jmp	loc_6CBA4A00
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA4A90:				; CODE XREF: lzo1y_decompress_asm_fast+A0j
					; lzo1y_decompress_asm_fast+D4j
		xchg	edx, esi
		sub	ecx, ebp
		rep movsb
		mov	esi, edx
		jmp	short loc_6CBA4A6E
; ---------------------------------------------------------------------------

loc_6CBA4A9A:				; CODE XREF: lzo1y_decompress_asm_fast+125j
		add	ecx, 0FFh

loc_6CBA4AA0:				; CODE XREF: lzo1y_decompress_asm_fast+13Fj
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA4A9A
		lea	ecx, [ebx+ecx+0Ch]
		jmp	short loc_6CBA4AC4
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA4AB0:				; CODE XREF: lzo1y_decompress_asm_fast+BAj
		cmp	al, 10h
		jb	short loc_6CBA4AE0
		mov	ecx, eax
		and	eax, 8
		shl	eax, 0Dh
		and	ecx, 7
		jz	short loc_6CBA4AA0
		add	ecx, 5

loc_6CBA4AC4:				; CODE XREF: lzo1y_decompress_asm_fast+12Bj
		mov	ax, [esi]
		add	esi, 2
		lea	edx, [edi-4000h]
		shr	eax, 2
		jz	short loc_6CBA4B00
		sub	edx, eax
		jmp	loc_6CBA4A56
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA4AE0:				; CODE XREF: lzo1y_decompress_asm_fast+132j
		shr	eax, 2
		mov	bl, [esi]
		lea	edx, [edi-1]
		lea	eax, [eax+ebx*4]
		inc	esi
		sub	edx, eax
		mov	al, [edx]
		mov	[edi], al
		mov	bl, [edx+1]
		mov	[edi+1], bl
		add	edi, 2
		jmp	loc_6CBA4A6E
; ---------------------------------------------------------------------------

loc_6CBA4B00:				; CODE XREF: lzo1y_decompress_asm_fast+153j
		cmp	ecx, 6
		setnz	al
		mov	edx, [esp+24h+arg_0]
		add	edx, [esp+24h+arg_4]
		cmp	esi, edx
		ja	short loc_6CBA4B38
		jb	short loc_6CBA4B31

loc_6CBA4B14:				; CODE XREF: lzo1y_decompress_asm_fast+1AFj
					; lzo1y_decompress_asm_fast+1B6j ...
		sub	edi, [esp+24h+arg_8]
		mov	edx, [esp+24h+arg_C]
		mov	[edx], edi
		neg	eax
		add	esp, 0Ch
		pop	edx
		pop	ecx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		mov	eax, 1
		jmp	short loc_6CBA4B14
; ---------------------------------------------------------------------------

loc_6CBA4B31:				; CODE XREF: lzo1y_decompress_asm_fast+192j
		mov	eax, 8
		jmp	short loc_6CBA4B14
; ---------------------------------------------------------------------------

loc_6CBA4B38:				; CODE XREF: lzo1y_decompress_asm_fast+190j
		mov	eax, 4
		jmp	short loc_6CBA4B14
lzo1y_decompress_asm_fast endp

; ---------------------------------------------------------------------------
		align 10h
; Exported entry 101. lzo1y_decompress_asm

; =============== S U B	R O U T	I N E =======================================


		public lzo1y_decompress_asm
lzo1y_decompress_asm proc near

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		push	ecx
		push	edx
		sub	esp, 0Ch
		cld
		mov	esi, [esp+24h+arg_0]
		mov	edi, [esp+24h+arg_8]
		mov	ebp, 3
		xor	eax, eax
		xor	ebx, ebx
		lodsb
		cmp	al, 11h
		jbe	short loc_6CBA4B83
		sub	al, 11h
		cmp	al, 4
		jnb	short loc_6CBA4B8E
		mov	ecx, eax
		jmp	short loc_6CBA4BA2
; ---------------------------------------------------------------------------

loc_6CBA4B6A:				; CODE XREF: lzo1y_decompress_asm+34j
		add	eax, 0FFh

loc_6CBA4B6F:				; CODE XREF: lzo1y_decompress_asm+49j
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA4B6A
		lea	eax, [eax+ebx+12h]
		jmp	short loc_6CBA4B8E
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA4B80:				; CODE XREF: lzo1y_decompress_asm+10Cj
		mov	al, [esi]
		inc	esi

loc_6CBA4B83:				; CODE XREF: lzo1y_decompress_asm+1Ej
		cmp	al, 10h
		jnb	short loc_6CBA4BD0
		or	al, al
		jz	short loc_6CBA4B6F
		add	eax, 3

loc_6CBA4B8E:				; CODE XREF: lzo1y_decompress_asm+24j
					; lzo1y_decompress_asm+3Aj
		mov	ecx, eax
		shr	eax, 2
		and	ecx, ebp

loc_6CBA4B95:				; CODE XREF: lzo1y_decompress_asm+60j
		mov	edx, [esi]
		add	esi, 4
		mov	[edi], edx
		add	edi, 4
		dec	eax
		jnz	short loc_6CBA4B95

loc_6CBA4BA2:				; CODE XREF: lzo1y_decompress_asm+28j
		rep movsb
		mov	al, [esi]
		inc	esi
		cmp	al, 10h
		jnb	short loc_6CBA4BD0
		shr	eax, 2
		mov	bl, [esi]
		lea	edx, [edi-401h]
		lea	eax, [eax+ebx*4]
		inc	esi
		sub	edx, eax
		mov	al, [edx]
		mov	[edi], al
		mov	al, [edx+1]
		mov	[edi+1], al
		mov	al, [edx+2]
		mov	[edi+2], al
		add	edi, ebp
		jmp	short loc_6CBA4C47
; ---------------------------------------------------------------------------

loc_6CBA4BD0:				; CODE XREF: lzo1y_decompress_asm+45j
					; lzo1y_decompress_asm+69j ...
		cmp	al, 40h
		jb	short loc_6CBA4C08
		mov	ecx, eax
		shr	eax, 2
		lea	edx, [edi-1]
		and	eax, ebp
		mov	bl, [esi]
		shr	ecx, 4
		lea	eax, [eax+ebx*4]
		inc	esi
		sub	edx, eax
		dec	ecx
		cmp	eax, ebp
		jnb	short loc_6CBA4C26
		jmp	short loc_6CBA4C68
; ---------------------------------------------------------------------------

loc_6CBA4BF0:				; CODE XREF: lzo1y_decompress_asm+BAj
		add	eax, 0FFh

loc_6CBA4BF5:				; CODE XREF: lzo1y_decompress_asm+CFj
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA4BF0
		lea	ecx, [eax+ebx+21h]
		xor	eax, eax
		jmp	short loc_6CBA4C14
; ---------------------------------------------------------------------------
		align 8

loc_6CBA4C08:				; CODE XREF: lzo1y_decompress_asm+92j
		cmp	al, 20h
		jb	short loc_6CBA4C88
		and	eax, 1Fh
		jz	short loc_6CBA4BF5
		lea	ecx, [eax+2]

loc_6CBA4C14:				; CODE XREF: lzo1y_decompress_asm+C2j
		mov	ax, [esi]
		lea	edx, [edi-1]
		shr	eax, 2
		add	esi, 2
		sub	edx, eax
		cmp	eax, ebp
		jb	short loc_6CBA4C68

loc_6CBA4C26:				; CODE XREF: lzo1y_decompress_asm+ACj
					; lzo1y_decompress_asm+16Fj
		mov	ebx, ecx
		shr	ebx, 2
		jz	short loc_6CBA4C3E

loc_6CBA4C2D:				; CODE XREF: lzo1y_decompress_asm+F8j
		mov	eax, [edx]
		add	edx, 4
		mov	[edi], eax
		add	edi, 4
		dec	ebx
		jnz	short loc_6CBA4C2D
		and	ecx, ebp
		jz	short loc_6CBA4C47

loc_6CBA4C3E:				; CODE XREF: lzo1y_decompress_asm+EBj
					; lzo1y_decompress_asm+105j
		mov	al, [edx]
		inc	edx
		mov	[edi], al
		inc	edi
		dec	ecx
		jnz	short loc_6CBA4C3E

loc_6CBA4C47:				; CODE XREF: lzo1y_decompress_asm+8Ej
					; lzo1y_decompress_asm+FCj ...
		mov	al, [esi-2]
		and	eax, ebp
		jz	loc_6CBA4B80

loc_6CBA4C52:				; CODE XREF: lzo1y_decompress_asm+119j
		mov	cl, [esi]
		inc	esi
		mov	[edi], cl
		inc	edi
		dec	eax
		jnz	short loc_6CBA4C52
		mov	al, [esi]
		inc	esi
		jmp	loc_6CBA4BD0
; ---------------------------------------------------------------------------
		align 8

loc_6CBA4C68:				; CODE XREF: lzo1y_decompress_asm+AEj
					; lzo1y_decompress_asm+E4j
		xchg	edx, esi
		rep movsb
		mov	esi, edx
		jmp	short loc_6CBA4C47
; ---------------------------------------------------------------------------

loc_6CBA4C70:				; CODE XREF: lzo1y_decompress_asm+13Bj
		add	ecx, 0FFh

loc_6CBA4C76:				; CODE XREF: lzo1y_decompress_asm+157j
		mov	bl, [esi]
		inc	esi
		or	bl, bl
		jz	short loc_6CBA4C70
		lea	ecx, [ebx+ecx+9]
		jmp	short loc_6CBA4C9C
; ---------------------------------------------------------------------------
		align 8

loc_6CBA4C88:				; CODE XREF: lzo1y_decompress_asm+CAj
		cmp	al, 10h
		jb	short loc_6CBA4CB8
		mov	ecx, eax
		and	eax, 8
		shl	eax, 0Dh
		and	ecx, 7
		jz	short loc_6CBA4C76
		add	ecx, 2

loc_6CBA4C9C:				; CODE XREF: lzo1y_decompress_asm+141j
		mov	ax, [esi]
		add	esi, 2
		lea	edx, [edi-4000h]
		shr	eax, 2
		jz	short loc_6CBA4CD8
		sub	edx, eax
		jmp	loc_6CBA4C26
; ---------------------------------------------------------------------------
		align 8

loc_6CBA4CB8:				; CODE XREF: lzo1y_decompress_asm+14Aj
		shr	eax, 2
		mov	bl, [esi]
		lea	edx, [edi-1]
		lea	eax, [eax+ebx*4]
		inc	esi
		sub	edx, eax
		mov	al, [edx]
		mov	[edi], al
		mov	bl, [edx+1]
		mov	[edi+1], bl
		add	edi, 2
		jmp	loc_6CBA4C47
; ---------------------------------------------------------------------------

loc_6CBA4CD8:				; CODE XREF: lzo1y_decompress_asm+16Bj
		cmp	ecx, 3
		setnz	al
		mov	edx, [esp+24h+arg_0]
		add	edx, [esp+24h+arg_4]
		cmp	esi, edx
		ja	short loc_6CBA4D10
		jb	short loc_6CBA4D09

loc_6CBA4CEC:				; CODE XREF: lzo1y_decompress_asm+1C7j
					; lzo1y_decompress_asm+1CEj ...
		sub	edi, [esp+24h+arg_8]
		mov	edx, [esp+24h+arg_C]
		mov	[edx], edi
		neg	eax
		add	esp, 0Ch
		pop	edx
		pop	ecx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		mov	eax, 1
		jmp	short loc_6CBA4CEC
; ---------------------------------------------------------------------------

loc_6CBA4D09:				; CODE XREF: lzo1y_decompress_asm+1AAj
		mov	eax, 8
		jmp	short loc_6CBA4CEC
; ---------------------------------------------------------------------------

loc_6CBA4D10:				; CODE XREF: lzo1y_decompress_asm+1A8j
		mov	eax, 4
		jmp	short loc_6CBA4CEC
lzo1y_decompress_asm endp

; ---------------------------------------------------------------------------
		align 40h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6CBA4D40(_onexit_t)
sub_6CBA4D40	proc near		; CODE XREF: sub_6CBA4E00+Ap

Func		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	eax, ds:dword_6CBA83A8
		mov	[esp+2Ch+Func],	eax
		call	sub_6CBA4F00
		cmp	eax, 0FFFFFFFFh
		mov	[esp+2Ch+var_14], eax
		jz	loc_6CBA4DE0
		mov	[esp+2Ch+Func],	8
		call	__lock
		mov	eax, ds:dword_6CBA83A8
		mov	[esp+2Ch+Func],	eax
		call	sub_6CBA4F00
		mov	[esp+2Ch+var_14], eax
		mov	eax, ds:dword_6CBA83A4
		mov	[esp+2Ch+Func],	eax
		call	sub_6CBA4F00
		mov	[esp+2Ch+var_10], eax
		lea	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+var_24], eax
		lea	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+Func],	eax
		call	___dllonexit
		mov	ebx, eax
		mov	eax, [esp+2Ch+var_14]
		mov	[esp+2Ch+Func],	eax
		call	sub_6CBA4F10
		mov	ds:dword_6CBA83A8, eax
		mov	eax, [esp+2Ch+var_10]
		mov	[esp+2Ch+Func],	eax
		call	sub_6CBA4F10
		mov	[esp+2Ch+Func],	8
		mov	ds:dword_6CBA83A4, eax
		call	__unlock
		add	esp, 28h
		mov	eax, ebx
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA4DE0:				; CODE XREF: sub_6CBA4D40+18j
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+Func],	eax ; Func
		call	ds:__imp___onexit
		add	esp, 28h
		pop	ebx
		retn
sub_6CBA4D40	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_6CBA4E00(_onexit_t)
sub_6CBA4E00	proc near		; CODE XREF: sub_6CBA5510-27p
					; sub_6CBA5CE0+12p

var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  4

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax ;	_onexit_t
		call	sub_6CBA4D40
		test	eax, eax
		setz	al
		add	esp, 1Ch
		movzx	eax, al
		neg	eax
		retn
sub_6CBA4E00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


		public TlsCallback_1
TlsCallback_1	proc near		; DATA XREF: .CRT:6CBAB01Co

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		test	eax, eax
		jz	short loc_6CBA4E40
		cmp	eax, 3
		jz	short loc_6CBA4E40
		mov	eax, 1
		add	esp, 1Ch
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA4E40:				; CODE XREF: TlsCallback_1+9j
					; TlsCallback_1+Ej
		mov	edx, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_14], edx
		mov	[esp+1Ch+var_1C], eax
		call	sub_6CBA5820
		mov	eax, 1
		add	esp, 1Ch
		retn	0Ch
TlsCallback_1	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


		public TlsCallback_0
TlsCallback_0	proc near		; CODE XREF: sub_6CB81040+108p
					; DATA XREF: .rdata:off_6CBA77D8o ...

var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx
		sub	esp, 18h
		cmp	dword_6CBA600C,	2
		mov	eax, [esp+1Ch+arg_4]
		jz	short loc_6CBA4E8B
		mov	dword_6CBA600C,	2

loc_6CBA4E8B:				; CODE XREF: TlsCallback_0+Fj
		cmp	eax, 2
		jz	short loc_6CBA4EA1
		cmp	eax, 1
		jz	short loc_6CBA4ED0

loc_6CBA4E95:				; CODE XREF: TlsCallback_0+3Cj
					; TlsCallback_0+7Cj
		add	esp, 18h
		mov	eax, 1
		pop	ebx
		retn	0Ch
; ---------------------------------------------------------------------------

loc_6CBA4EA1:				; CODE XREF: TlsCallback_0+1Ej
		mov	ebx, offset dword_6CBAB028
		cmp	ebx, offset dword_6CBAB028
		jz	short loc_6CBA4E95
		xchg	ax, ax

loc_6CBA4EB0:				; CODE XREF: TlsCallback_0+51j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_6CBA4EB8
		call	eax

loc_6CBA4EB8:				; CODE XREF: TlsCallback_0+44j
		add	ebx, 4
		cmp	ebx, offset dword_6CBAB028
		jnz	short loc_6CBA4EB0
		add	esp, 18h
		mov	eax, 1
		pop	ebx
		retn	0Ch
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA4ED0:				; CODE XREF: TlsCallback_0+23j
		mov	eax, [esp+1Ch+arg_8]
		mov	[esp+1Ch+var_18], 1
		mov	[esp+1Ch+var_14], eax
		mov	eax, [esp+1Ch+arg_0]
		mov	[esp+1Ch+var_1C], eax
		call	sub_6CBA5820
		jmp	short loc_6CBA4E95
TlsCallback_0	endp

; ---------------------------------------------------------------------------
		align 10h
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA4F00	proc near		; CODE XREF: sub_6CB81040+138p
					; sub_6CB81040+14Bp ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		retn
sub_6CBA4F00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA4F10	proc near		; CODE XREF: sub_6CB81000+15p
					; sub_6CBA4D40+71p ...

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		retn
sub_6CBA4F10	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

; int __cdecl sub_6CBA4F20(char	*Format, char ArgList)
sub_6CBA4F20	proc near		; CODE XREF: sub_6CBA4F80+1E4p
					; sub_6CBA4F80+212p ...

Str		= dword	ptr -1Ch
Size		= dword	ptr -18h
Count		= dword	ptr -14h
File		= dword	ptr -10h
Format		= dword	ptr  4
ArgList		= byte ptr  8

		push	ebx
		sub	esp, 18h
		mov	eax, ds:__imp___iob
		mov	[esp+1Ch+Count], 1Bh ; Count
		lea	ebx, [esp+1Ch+ArgList]
		mov	[esp+1Ch+Size],	1 ; Size
		mov	[esp+1Ch+Str], offset aMingwW64Runtim ;	"Mingw-w64 runtime failure:\n"
		add	eax, 40h
		mov	[esp+1Ch+File],	eax ; File
		call	_fwrite
		mov	eax, [esp+1Ch+Format]
		mov	[esp+1Ch+Count], ebx ; ArgList
		mov	[esp+1Ch+Size],	eax ; Format
		mov	eax, ds:__imp___iob
		add	eax, 40h
		mov	[esp+1Ch+Str], eax ; File
		call	_vfprintf
		call	_abort
sub_6CBA4F20	endp

; ---------------------------------------------------------------------------
		jmp	short sub_6CBA4F80
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA4F80	proc near		; CODE XREF: .text:6CBA4F71j
					; sub_6CBA51C0+140p ...

lpAddress	= dword	ptr -58h
lpBuffer	= dword	ptr -54h
dwLength	= dword	ptr -50h
lpflOldProtect	= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
Size		= dword	ptr -40h
Src		= dword	ptr -3Ch
flOldProtect	= dword	ptr -38h
Buffer		= _MEMORY_BASIC_INFORMATION ptr	-34h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		mov	esi, eax
		push	ebx
		sub	esp, 4Ch
		mov	[ebp+Size], ecx
		mov	ecx, ds:dword_6CBA801C
		mov	[ebp+Src], edx
		test	ecx, ecx
		jle	loc_6CBA5170
		mov	edx, ds:dword_6CBA8020
		xor	ebx, ebx

loc_6CBA4FA7:				; CODE XREF: sub_6CBA4F80+44j
		mov	eax, [edx+4]
		cmp	esi, eax
		jb	short loc_6CBA4FBC
		mov	edi, [edx+8]
		add	eax, [edi+8]
		cmp	esi, eax
		jb	loc_6CBA5090

loc_6CBA4FBC:				; CODE XREF: sub_6CBA4F80+2Cj
		add	ebx, 1
		add	edx, 0Ch
		cmp	ebx, ecx
		jnz	short loc_6CBA4FA7

loc_6CBA4FC6:				; CODE XREF: sub_6CBA4F80+1F2j
		mov	[esp+58h+lpAddress], esi
		call	sub_6CBA59E0
		test	eax, eax
		mov	edi, eax
		jz	loc_6CBA5197
		lea	ecx, [ebx+ebx*2]
		shl	ecx, 2
		mov	ebx, ecx
		add	ebx, ds:dword_6CBA8020
		mov	[ebp+var_44], ecx
		mov	[ebx+8], eax
		mov	dword ptr [ebx], 0
		call	sub_6CBA5AD0
		mov	ecx, [ebp+var_44]
		lea	edx, [ebp+Buffer]
		mov	[ebp+var_44], edx
		add	eax, [edi+0Ch]
		mov	[ebp+var_48], ecx
		mov	[ebx+4], eax
		mov	eax, ds:dword_6CBA8020
		mov	ebx, ds:__imp__VirtualQuery@12 ; VirtualQuery(x,x,x)
		mov	eax, [eax+ecx+4]
		mov	[esp+58h+lpBuffer], edx	; lpBuffer
		mov	[esp+58h+dwLength], 1Ch	; dwLength
		mov	[esp+58h+lpAddress], eax ; lpAddress
		call	ebx ; VirtualQuery(x,x,x) ; VirtualQuery(x,x,x)
		mov	edx, [ebp+var_44]
		mov	ecx, [ebp+var_48]
		sub	esp, 0Ch
		test	eax, eax
		jz	loc_6CBA5177
		mov	eax, [ebp+Buffer.Protect]
		cmp	eax, 4
		jnz	loc_6CBA5114

loc_6CBA5046:				; CODE XREF: sub_6CBA4F80+197j
					; sub_6CBA4F80+1CDj
		add	ds:dword_6CBA801C, 1

loc_6CBA504D:				; CODE XREF: sub_6CBA4F80+119j
		mov	[esp+58h+dwLength], 1Ch	; dwLength
		mov	[esp+58h+lpBuffer], edx	; lpBuffer
		mov	[esp+58h+lpAddress], esi ; lpAddress
		call	ebx ; VirtualQuery(x,x,x) ; VirtualQuery(x,x,x)
		sub	esp, 0Ch
		test	eax, eax
		jz	loc_6CBA51A7
		mov	eax, [ebp+Buffer.Protect]
		cmp	eax, 4
		jnz	short loc_6CBA50A0

loc_6CBA5071:				; CODE XREF: sub_6CBA4F80+123j
		mov	eax, [ebp+Size]
		mov	[esp+58h+lpAddress], esi ; Dst
		mov	[esp+58h+dwLength], eax	; Size
		mov	eax, [ebp+Src]
		mov	[esp+58h+lpBuffer], eax	; Src
		call	_memcpy

loc_6CBA5087:				; CODE XREF: sub_6CBA4F80+168j
					; sub_6CBA4F80+16Dj
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5090:				; CODE XREF: sub_6CBA4F80+36j
		lea	edx, [ebp+Buffer]
		mov	ebx, ds:__imp__VirtualQuery@12 ; VirtualQuery(x,x,x)
		jmp	short loc_6CBA504D
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA50A0:				; CODE XREF: sub_6CBA4F80+EFj
		cmp	eax, 40h
		jz	short loc_6CBA5071
		mov	eax, [ebp+Buffer.RegionSize]
		lea	edi, [ebp+flOldProtect]
		mov	ebx, ds:__imp__VirtualProtect@16 ; VirtualProtect(x,x,x,x)
		mov	[esp+58h+lpflOldProtect], edi ;	lpflOldProtect
		mov	[esp+58h+dwLength], 40h	; flNewProtect
		mov	[esp+58h+lpBuffer], eax	; dwSize
		mov	eax, [ebp+Buffer.BaseAddress]
		mov	[esp+58h+lpAddress], eax ; lpAddress
		call	ebx ; VirtualProtect(x,x,x,x) ;	VirtualProtect(x,x,x,x)
		mov	eax, [ebp+Size]
		sub	esp, 10h
		mov	[esp+58h+dwLength], eax	; Size
		mov	eax, [ebp+Src]
		mov	[esp+58h+lpAddress], esi ; Dst
		mov	[esp+58h+lpBuffer], eax	; Src
		call	_memcpy
		mov	eax, [ebp+Buffer.Protect]
		cmp	eax, 40h
		jz	short loc_6CBA5087
		cmp	eax, 4
		jz	short loc_6CBA5087
		mov	eax, [ebp+flOldProtect]
		mov	[esp+58h+lpflOldProtect], edi ;	lpflOldProtect
		mov	[esp+58h+dwLength], eax	; flNewProtect
		mov	eax, [ebp+Buffer.RegionSize]
		mov	[esp+58h+lpBuffer], eax	; dwSize
		mov	eax, [ebp+Buffer.BaseAddress]
		mov	[esp+58h+lpAddress], eax ; lpAddress
		call	ebx ; VirtualProtect(x,x,x,x) ;	VirtualProtect(x,x,x,x)
		sub	esp, 10h
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6CBA5114:				; CODE XREF: sub_6CBA4F80+C0j
		cmp	eax, 40h
		jz	loc_6CBA5046
		mov	eax, [ebp+Buffer.RegionSize]
		add	ecx, ds:dword_6CBA8020
		mov	[ebp+var_44], edx
		mov	[esp+58h+dwLength], 40h	; flNewProtect
		mov	[esp+58h+lpBuffer], eax	; dwSize
		mov	eax, [ebp+Buffer.BaseAddress]
		mov	[esp+58h+lpflOldProtect], ecx ;	lpflOldProtect
		mov	[esp+58h+lpAddress], eax ; lpAddress
		call	ds:__imp__VirtualProtect@16 ; VirtualProtect(x,x,x,x)
		mov	edx, [ebp+var_44]
		sub	esp, 10h
		test	eax, eax
		jnz	loc_6CBA5046
		call	ds:__imp__GetLastError@0 ; GetLastError()
		mov	[esp+58h+lpAddress], offset Format ; "	VirtualProtect failed with code	0x%x"
		mov	[esp+58h+lpBuffer], eax	; ArgList
		call	sub_6CBA4F20
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5170:				; CODE XREF: sub_6CBA4F80+19j
		xor	ebx, ebx
		jmp	loc_6CBA4FC6
; ---------------------------------------------------------------------------

loc_6CBA5177:				; CODE XREF: sub_6CBA4F80+B4j
		mov	eax, ds:dword_6CBA8020
		mov	eax, [eax+ecx+4]
		mov	[esp+58h+dwLength], eax
		mov	eax, [edi+8]
		mov	[esp+58h+lpAddress], offset aVirtualqueryFa ; "	 VirtualQuery failed for %d bytes at a"...
		mov	[esp+58h+lpBuffer], eax	; ArgList
		call	sub_6CBA4F20
; ---------------------------------------------------------------------------

loc_6CBA5197:				; CODE XREF: sub_6CBA4F80+52j
		mov	[esp+58h+lpBuffer], esi	; ArgList
		mov	[esp+58h+lpAddress], offset aAddressPHasNoI ; "Address %p has no image-section"
		call	sub_6CBA4F20
; ---------------------------------------------------------------------------

loc_6CBA51A7:				; CODE XREF: sub_6CBA4F80+E3j
		mov	[esp+58h+dwLength], esi
		mov	[esp+58h+lpBuffer], 1Ch	; ArgList
		mov	[esp+58h+lpAddress], offset aVirtualqueryFa ; "	 VirtualQuery failed for %d bytes at a"...
		call	sub_6CBA4F20
sub_6CBA4F80	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA51C0	proc near		; CODE XREF: sub_6CB81260+22p
					; sub_6CB81260:loc_6CB812C5p

lpAddress	= dword	ptr -5Ch
lpBuffer	= dword	ptr -58h
dwLength	= dword	ptr -54h
lpflOldProtect	= dword	ptr -50h
var_3D		= byte ptr -3Dh

		mov	eax, ds:dword_6CBA8018
		test	eax, eax
		jz	short loc_6CBA51D0
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA51D0:				; CODE XREF: sub_6CBA51C0+7j
		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ds:dword_6CBA8018, 1
		call	sub_6CBA5A30
		lea	eax, [eax+eax*2]
		lea	eax, ds:1Eh[eax*4]
		and	eax, 0FFFFFFF0h
		call	sub_6CBA5C00
		mov	ds:dword_6CBA801C, 0
		sub	esp, eax
		lea	eax, [esp+5Ch+var_3D]
		and	eax, 0FFFFFFF0h
		mov	ds:dword_6CBA8020, eax
		mov	eax, offset dword_6CBA7F80
		sub	eax, offset dword_6CBA7F80
		cmp	eax, 7
		jle	loc_6CBA52C1
		cmp	eax, 0Bh
		jle	loc_6CBA5393
		mov	eax, ds:dword_6CBA7F80
		test	eax, eax
		jnz	loc_6CBA52C9
		mov	eax, ds:dword_6CBA7F84
		test	eax, eax
		jnz	loc_6CBA52C9
		mov	edi, ds:dword_6CBA7F88
		mov	ebx, offset dword_6CBA7F8C
		test	edi, edi
		jz	loc_6CBA5398
		mov	ebx, offset dword_6CBA7F80

loc_6CBA5260:				; CODE XREF: sub_6CBA51C0+1E7j
		mov	eax, [ebx+8]
		cmp	eax, 1
		jnz	loc_6CBA5480
		add	ebx, 0Ch
		cmp	ebx, offset dword_6CBA7F80
		jnb	short loc_6CBA52C1

loc_6CBA5277:				; CODE XREF: sub_6CBA51C0+236j
		mov	edx, [ebx]
		mov	edi, [ebx+4]
		mov	ecx, [edx+6CB80000h]
		lea	eax, [edi+6CB80000h]
		mov	[ebp-3Ch], ecx
		movzx	ecx, byte ptr [ebx+8]
		cmp	ecx, 10h
		jz	loc_6CBA53B2
		cmp	ecx, 20h
		jz	loc_6CBA5436
		cmp	ecx, 8
		jz	loc_6CBA5401
		mov	[esp+5Ch+lpBuffer], ecx	; ArgList
		mov	[esp+5Ch+lpAddress], offset aUnknownPseudoR ; "	 Unknown pseudo	relocation bit size %d"...
		mov	dword ptr [ebp-34h], 0
		call	sub_6CBA4F20
; ---------------------------------------------------------------------------

loc_6CBA52C1:				; CODE XREF: sub_6CBA51C0+5Fj
					; sub_6CBA51C0+B5j ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6CBA52C9:				; CODE XREF: sub_6CBA51C0+75j
					; sub_6CBA51C0+82j
		mov	ebx, offset dword_6CBA7F80

loc_6CBA52CE:				; CODE XREF: sub_6CBA51C0+1DCj
					; sub_6CBA51C0+1EDj
		cmp	ebx, offset dword_6CBA7F80
		jnb	short loc_6CBA52C1
		lea	eax, [ebp-34h]
		mov	[ebp-3Ch], eax
		lea	esi, [esi+0]

loc_6CBA52E0:				; CODE XREF: sub_6CBA51C0+14Bj
		mov	edx, [ebx+4]
		mov	ecx, 4
		add	ebx, 8
		lea	eax, [edx+6CB80000h]
		mov	edx, [edx+6CB80000h]
		add	edx, [ebx-8]
		mov	[ebp-34h], edx
		mov	edx, [ebp-3Ch]
		call	sub_6CBA4F80
		cmp	ebx, offset dword_6CBA7F80
		jb	short loc_6CBA52E0

loc_6CBA530D:				; CODE XREF: sub_6CBA51C0+23Cj
		mov	eax, ds:dword_6CBA801C
		xor	ebx, ebx
		test	eax, eax
		jg	short loc_6CBA532B
		jmp	short loc_6CBA52C1
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5320:				; CODE XREF: sub_6CBA51C0+180j
					; sub_6CBA51C0+1D1j
		add	ebx, 1
		cmp	ebx, ds:dword_6CBA801C
		jge	short loc_6CBA52C1

loc_6CBA532B:				; CODE XREF: sub_6CBA51C0+156j
		mov	eax, ds:dword_6CBA8020
		lea	esi, [ebx+ebx*2]
		lea	edi, ds:0[esi*4]
		add	eax, edi
		mov	edx, [eax]
		test	edx, edx
		jz	short loc_6CBA5320
		mov	eax, [eax+4]
		mov	ecx, [ebp-3Ch]
		mov	[esp+5Ch+dwLength], 1Ch	; dwLength
		mov	[esp+5Ch+lpAddress], eax ; lpAddress
		mov	[esp+5Ch+lpBuffer], ecx	; lpBuffer
		call	ds:__imp__VirtualQuery@12 ; VirtualQuery(x,x,x)
		sub	esp, 0Ch
		test	eax, eax
		jz	loc_6CBA545B
		mov	eax, ds:dword_6CBA8020
		lea	ecx, [ebp-38h]
		mov	eax, [eax+esi*4]
		mov	[esp+5Ch+lpflOldProtect], ecx ;	lpflOldProtect
		mov	[esp+5Ch+dwLength], eax	; flNewProtect
		mov	eax, [ebp-28h]
		mov	[esp+5Ch+lpBuffer], eax	; dwSize
		mov	eax, [ebp-34h]
		mov	[esp+5Ch+lpAddress], eax ; lpAddress
		call	ds:__imp__VirtualProtect@16 ; VirtualProtect(x,x,x,x)
		sub	esp, 10h
		jmp	short loc_6CBA5320
; ---------------------------------------------------------------------------

loc_6CBA5393:				; CODE XREF: sub_6CBA51C0+68j
		mov	ebx, offset dword_6CBA7F80

loc_6CBA5398:				; CODE XREF: sub_6CBA51C0+95j
		mov	esi, [ebx]
		test	esi, esi
		jnz	loc_6CBA52CE
		mov	ecx, [ebx+4]
		test	ecx, ecx
		jz	loc_6CBA5260
		jmp	loc_6CBA52CE
; ---------------------------------------------------------------------------

loc_6CBA53B2:				; CODE XREF: sub_6CBA51C0+D2j
		movzx	ecx, word ptr [edi+6CB80000h]
		movzx	edi, cx
		mov	esi, edi
		or	esi, 0FFFF0000h
		test	cx, cx
		cmovs	edi, esi
		mov	esi, [ebp-3Ch]
		sub	edi, edx
		lea	ecx, [ebp-34h]
		sub	edi, 6CB80000h
		mov	[ebp-3Ch], ecx
		lea	edx, [ebp-34h]
		mov	ecx, 2
		add	esi, edi
		mov	[ebp-34h], esi
		call	sub_6CBA4F80

loc_6CBA53ED:				; CODE XREF: sub_6CBA51C0+274j
					; sub_6CBA51C0+299j
		add	ebx, 0Ch
		cmp	ebx, offset dword_6CBA7F80
		jb	loc_6CBA5277
		jmp	loc_6CBA530D
; ---------------------------------------------------------------------------

loc_6CBA5401:				; CODE XREF: sub_6CBA51C0+E4j
		movzx	ecx, byte ptr [eax]
		movzx	edi, cl
		mov	esi, edi
		or	esi, 0FFFFFF00h
		test	cl, cl
		cmovs	edi, esi
		mov	esi, [ebp-3Ch]
		mov	ecx, 1
		sub	edi, 6CB80000h
		sub	edi, edx
		lea	edx, [ebp-34h]
		add	esi, edi
		mov	[ebp-34h], esi
		mov	[ebp-3Ch], edx
		call	sub_6CBA4F80
		jmp	short loc_6CBA53ED
; ---------------------------------------------------------------------------

loc_6CBA5436:				; CODE XREF: sub_6CBA51C0+DBj
		mov	esi, [ebp-3Ch]
		add	edx, 6CB80000h
		lea	ecx, [ebp-34h]
		mov	[ebp-3Ch], ecx
		mov	ecx, 4
		sub	esi, edx
		add	esi, [eax]
		lea	edx, [ebp-34h]
		mov	[ebp-34h], esi
		call	sub_6CBA4F80
		jmp	short loc_6CBA53ED
; ---------------------------------------------------------------------------

loc_6CBA545B:				; CODE XREF: sub_6CBA51C0+1A2j
		mov	ecx, ds:dword_6CBA8020
		add	ecx, edi
		mov	eax, [ecx+4]
		mov	[esp+5Ch+dwLength], eax
		mov	eax, [ecx+8]
		mov	eax, [eax+8]
		mov	[esp+5Ch+lpAddress], offset aVirtualqueryFa ; "	 VirtualQuery failed for %d bytes at a"...
		mov	[esp+5Ch+lpBuffer], eax	; ArgList
		call	sub_6CBA4F20
; ---------------------------------------------------------------------------

loc_6CBA5480:				; CODE XREF: sub_6CBA51C0+A6j
		mov	[esp+5Ch+lpBuffer], eax	; ArgList
		mov	[esp+5Ch+lpAddress], offset aUnknownPseud_0 ; "	 Unknown pseudo	relocation protocol ve"...
		call	sub_6CBA4F20
; ---------------------------------------------------------------------------

; int __cdecl loc_6CBA5490()
loc_6CBA5490:				; DATA XREF: sub_6CBA5510:loc_6CBA54E2o
		mov	eax, off_6CBA6008
		mov	eax, [eax]
		test	eax, eax
		jz	short locret_6CBA54BA
		sub	esp, 0Ch
		xchg	ax, ax

loc_6CBA54A0:				; CODE XREF: sub_6CBA51C0+2F5j
		call	eax
		mov	eax, off_6CBA6008
		lea	edx, [eax+4]
		mov	eax, [eax+4]
		mov	off_6CBA6008, edx
		test	eax, eax
		jnz	short loc_6CBA54A0
		add	esp, 0Ch

locret_6CBA54BA:			; CODE XREF: sub_6CBA51C0+2D9j
		rep retn
sub_6CBA51C0	endp

; ---------------------------------------------------------------------------
		align 10h
; START	OF FUNCTION CHUNK FOR sub_6CBA5510

loc_6CBA54C0:				; CODE XREF: sub_6CBA5510+1Aj
		push	ebx
		sub	esp, 18h
		mov	ebx, ds:dword_6CBA5D00
		cmp	ebx, 0FFFFFFFFh
		jz	short loc_6CBA54F3

loc_6CBA54CF:				; CODE XREF: sub_6CBA5510-9j
		test	ebx, ebx
		jz	short loc_6CBA54E2

loc_6CBA54D3:				; CODE XREF: sub_6CBA5510-30j
		call	ds:dword_6CBA5D00[ebx*4]
		sub	ebx, 1
		lea	esi, [esi+0]
		jnz	short loc_6CBA54D3

loc_6CBA54E2:				; CODE XREF: sub_6CBA5510-3Fj
		mov	[esp+1Ch+var_1C], offset loc_6CBA5490 ;	_onexit_t
		call	sub_6CBA4E00
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6CBA54F3:				; CODE XREF: sub_6CBA5510-43j
		xor	ebx, ebx
		jmp	short loc_6CBA54F9
; ---------------------------------------------------------------------------

loc_6CBA54F7:				; CODE XREF: sub_6CBA5510-Bj
		mov	ebx, eax

loc_6CBA54F9:				; CODE XREF: sub_6CBA5510-1Bj
		lea	eax, [ebx+1]
		mov	edx, ds:dword_6CBA5D00[eax*4]
		test	edx, edx
		jnz	short loc_6CBA54F7
		jmp	short loc_6CBA54CF
; END OF FUNCTION CHUNK	FOR sub_6CBA5510
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA5510	proc near		; CODE XREF: sub_6CB81260+A0p

var_1C		= dword	ptr -1Ch

; FUNCTION CHUNK AT 6CBA54C0 SIZE 00000049 BYTES

		mov	eax, ds:dword_6CBA8024
		test	eax, eax
		jz	short loc_6CBA5520
		rep retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5520:				; CODE XREF: sub_6CBA5510+7j
		mov	ds:dword_6CBA8024, 1
		jmp	short loc_6CBA54C0
sub_6CBA5510	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA5530	proc near		; CODE XREF: DllEntryPoint+34p

lpSystemTimeAsFileTime=	dword ptr -38h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
SystemTimeAsFileTime= _FILETIME	ptr -28h
PerformanceCount= LARGE_INTEGER	ptr -20h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, dword_6CBA6010
		mov	[ebp+SystemTimeAsFileTime.dwLowDateTime], 0
		mov	[ebp+SystemTimeAsFileTime.dwHighDateTime], 0
		cmp	eax, 0BB40E64Eh
		jz	short loc_6CBA5562
		not	eax
		mov	dword_6CBA6014,	eax
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6CBA5562:				; CODE XREF: sub_6CBA5530+21j
		lea	eax, [ebp+SystemTimeAsFileTime]
		mov	[esp+38h+lpSystemTimeAsFileTime], eax ;	lpSystemTimeAsFileTime
		call	ds:__imp__GetSystemTimeAsFileTime@4 ; GetSystemTimeAsFileTime(x)
		mov	esi, [ebp+SystemTimeAsFileTime.dwLowDateTime]
		mov	edi, [ebp+SystemTimeAsFileTime.dwHighDateTime]
		xor	esi, edi
		sub	esp, 4
		call	ds:__imp__GetCurrentProcessId@0	; GetCurrentProcessId()
		mov	ebx, eax
		call	ds:__imp__GetCurrentThreadId@0 ; GetCurrentThreadId()
		mov	[ebp+var_2C], eax
		call	ds:__imp__GetTickCount@0 ; GetTickCount()
		mov	[ebp+var_30], eax
		lea	eax, [ebp+PerformanceCount]
		mov	[esp+38h+lpSystemTimeAsFileTime], eax ;	lpPerformanceCount
		call	ds:__imp__QueryPerformanceCounter@4 ; QueryPerformanceCounter(x)
		xor	esi, dword ptr [ebp+PerformanceCount]
		xor	esi, dword ptr [ebp+PerformanceCount+4]
		xor	esi, ebx
		xor	esi, [ebp+var_2C]
		sub	esp, 4
		xor	esi, [ebp+var_30]
		cmp	esi, 0BB40E64Eh
		jz	short loc_6CBA55D0
		mov	eax, esi
		not	eax

loc_6CBA55BC:				; CODE XREF: sub_6CBA5530+AAj
		mov	dword_6CBA6010,	esi
		mov	dword_6CBA6014,	eax
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA55D0:				; CODE XREF: sub_6CBA5530+86j
		mov	eax, 44BF19B0h
		mov	esi, 0BB40E64Fh
		jmp	short loc_6CBA55BC
sub_6CBA5530	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+4]
		lea	edx, [ebp+4]
		mov	ds:dword_6CBA8104, edx
		mov	ds:dword_6CBA8320, 0C0000409h
		mov	ds:dword_6CBA8324, 1
		mov	ds:dword_6CBA80F8, eax
		mov	ds:dword_6CBA832C, eax
		mov	eax, [ebp+8]
		mov	dword ptr [esp], 0
		mov	ds:dword_6CBA80EC, eax
		mov	eax, dword_6CBA6010
		mov	[ebp-10h], eax
		mov	eax, dword_6CBA6014
		mov	[ebp-0Ch], eax
		call	ds:__imp__SetUnhandledExceptionFilter@4	; SetUnhandledExceptionFilter(x)
		sub	esp, 4
		mov	dword ptr [esp], offset	off_6CBA78D4
		call	ds:__imp__UnhandledExceptionFilter@4 ; UnhandledExceptionFilter(x)
		sub	esp, 4
		call	ds:__imp__GetCurrentProcess@0 ;	GetCurrentProcess()
		mov	dword ptr [esp+4], 0C0000409h
		mov	[esp], eax
		call	ds:__imp__TerminateProcess@8 ; TerminateProcess(x,x)
		sub	esp, 8
		call	_abort
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA5670	proc near		; CODE XREF: sub_6CBA5820:loc_6CBA58A2p
					; sub_6CBA5820:loc_6CBA58B0p

lpCriticalSection= dword ptr -28h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	[esp+28h+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:__imp__EnterCriticalSection@4 ; EnterCriticalSection(x)
		mov	edi, ds:dword_6CBA8380
		mov	esi, ds:__imp__GetLastError@0 ;	GetLastError()
		sub	esp, 4
		test	edi, edi
		jz	short loc_6CBA56C9
		lea	esi, [esi+0]

loc_6CBA56A0:				; CODE XREF: sub_6CBA5670+57j
		mov	eax, [edi]
		mov	[esp+28h+lpCriticalSection], eax ; dwTlsIndex
		call	ds:__imp__TlsGetValue@4	; TlsGetValue(x)
		sub	esp, 4
		mov	ebx, eax
		call	esi
		test	eax, eax
		jnz	short loc_6CBA56C2
		test	ebx, ebx
		jz	short loc_6CBA56C2
		mov	eax, [edi+4]
		mov	[esp+28h+lpCriticalSection], ebx
		call	eax

loc_6CBA56C2:				; CODE XREF: sub_6CBA5670+44j
					; sub_6CBA5670+48j
		mov	edi, [edi+8]
		test	edi, edi
		jnz	short loc_6CBA56A0

loc_6CBA56C9:				; CODE XREF: sub_6CBA5670+27j
		mov	[esp+28h+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:__imp__LeaveCriticalSection@4 ; LeaveCriticalSection(x)
		sub	esp, 4
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_6CBA5670	endp

; ---------------------------------------------------------------------------
		jmp	short loc_6CBA56F0
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA56F0:				; CODE XREF: .text:6CBA56E1j
		push	ebp
		mov	ebp, esp
		push	esi
		xor	esi, esi
		push	ebx
		sub	esp, 10h
		mov	eax, ds:dword_6CBA8384
		test	eax, eax
		jnz	short loc_6CBA5710

loc_6CBA5703:				; CODE XREF: .text:6CBA5771j
		lea	esp, [ebp-8]
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5710:				; CODE XREF: .text:6CBA5701j
		mov	dword ptr [esp+4], 0Ch
		mov	dword ptr [esp], 1
		call	_calloc
		test	eax, eax
		mov	ebx, eax
		jz	short loc_6CBA576C
		mov	eax, [ebp+8]
		mov	dword ptr [esp], offset	CriticalSection
		mov	[ebx], eax
		mov	eax, [ebp+0Ch]
		mov	[ebx+4], eax
		call	ds:__imp__EnterCriticalSection@4 ; EnterCriticalSection(x)
		mov	eax, ds:dword_6CBA8380
		mov	ds:dword_6CBA8380, ebx
		mov	[ebx+8], eax
		sub	esp, 4
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:__imp__LeaveCriticalSection@4 ; LeaveCriticalSection(x)
		mov	eax, esi
		sub	esp, 4
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6CBA576C:				; CODE XREF: .text:6CBA5728j
		mov	esi, 0FFFFFFFFh
		jmp	short loc_6CBA5703
; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	eax, ds:dword_6CBA8384
		mov	ebx, [ebp+8]
		test	eax, eax
		jnz	short loc_6CBA57A0
		xor	eax, eax
		mov	ebx, [ebp-4]
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA57A0:				; CODE XREF: .text:6CBA5791j
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:__imp__EnterCriticalSection@4 ; EnterCriticalSection(x)
		mov	edx, ds:dword_6CBA8380
		sub	esp, 4
		test	edx, edx
		jz	short loc_6CBA57D1
		mov	eax, [edx]
		cmp	eax, ebx
		jnz	short loc_6CBA57CA
		jmp	short loc_6CBA5808
; ---------------------------------------------------------------------------

loc_6CBA57C2:				; CODE XREF: .text:6CBA57CFj
		mov	ecx, [eax]
		cmp	ecx, ebx
		jz	short loc_6CBA57E8
		mov	edx, eax

loc_6CBA57CA:				; CODE XREF: .text:6CBA57BEj
		mov	eax, [edx+8]
		test	eax, eax
		jnz	short loc_6CBA57C2

loc_6CBA57D1:				; CODE XREF: .text:6CBA57B8j
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:__imp__LeaveCriticalSection@4 ; LeaveCriticalSection(x)
		sub	esp, 4

loc_6CBA57E1:				; CODE XREF: .text:6CBA5806j
		xor	eax, eax
		mov	ebx, [ebp-4]
		leave
		retn
; ---------------------------------------------------------------------------

loc_6CBA57E8:				; CODE XREF: .text:6CBA57C6j
		mov	ecx, [eax+8]
		mov	[edx+8], ecx

loc_6CBA57EE:				; CODE XREF: .text:6CBA5812j
		mov	[esp], eax
		call	_free
		mov	dword ptr [esp], offset	CriticalSection
		call	ds:__imp__LeaveCriticalSection@4 ; LeaveCriticalSection(x)
		sub	esp, 4
		jmp	short loc_6CBA57E1
; ---------------------------------------------------------------------------

loc_6CBA5808:				; CODE XREF: .text:6CBA57C0j
		mov	eax, [edx+8]
		mov	ds:dword_6CBA8380, eax
		mov	eax, edx
		jmp	short loc_6CBA57EE
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA5820	proc near		; CODE XREF: TlsCallback_1+33p
					; TlsCallback_0+77p

lpCriticalSection= dword ptr -18h
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_4]
		cmp	eax, 1
		jz	short loc_6CBA5874
		jb	short loc_6CBA5845
		cmp	eax, 3
		jnz	short loc_6CBA583E
		mov	eax, ds:dword_6CBA8384
		test	eax, eax
		jnz	short loc_6CBA58A2

loc_6CBA583E:				; CODE XREF: sub_6CBA5820+13j
					; sub_6CBA5820+36j ...
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------

loc_6CBA5845:				; CODE XREF: sub_6CBA5820+Ej
		mov	eax, ds:dword_6CBA8384
		test	eax, eax
		jnz	short loc_6CBA58B0

loc_6CBA584E:				; CODE XREF: sub_6CBA5820+95j
		mov	eax, ds:dword_6CBA8384
		cmp	eax, 1
		jnz	short loc_6CBA583E
		mov	ds:dword_6CBA8384, 0
		mov	[esp+18h+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:__imp__DeleteCriticalSection@4 ; DeleteCriticalSection(x)
		sub	esp, 4
		jmp	short loc_6CBA583E
; ---------------------------------------------------------------------------

loc_6CBA5874:				; CODE XREF: sub_6CBA5820+Cj
		mov	eax, ds:dword_6CBA8384
		test	eax, eax
		jz	short loc_6CBA5890

loc_6CBA587D:				; CODE XREF: sub_6CBA5820+80j
		mov	ds:dword_6CBA8384, 1
		mov	eax, 1
		leave
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5890:				; CODE XREF: sub_6CBA5820+5Bj
		mov	[esp+18h+lpCriticalSection], offset CriticalSection ; lpCriticalSection
		call	ds:__imp__InitializeCriticalSection@4 ;	InitializeCriticalSection(x)
		sub	esp, 4
		jmp	short loc_6CBA587D
; ---------------------------------------------------------------------------

loc_6CBA58A2:				; CODE XREF: sub_6CBA5820+1Cj
		call	sub_6CBA5670
		jmp	short loc_6CBA583E
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA58B0:				; CODE XREF: sub_6CBA5820+2Cj
		call	sub_6CBA5670
		jmp	short loc_6CBA584E
sub_6CBA5820	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA58C0	proc near		; CODE XREF: .text:loc_6CBA58F0j
					; .text:6CBA5975p ...
		add	eax, [eax+3Ch]
		cmp	dword ptr [eax], 4550h
		jz	short loc_6CBA58D0
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA58D0:				; CODE XREF: sub_6CBA58C0+9j
		cmp	word ptr [eax+18h], 10Bh
		setz	al
		movzx	eax, al
		retn
sub_6CBA58C0	endp

; ---------------------------------------------------------------------------
		align 10h
		mov	eax, [esp+4]
		cmp	word ptr [eax],	5A4Dh
		jz	short loc_6CBA58F0
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA58F0:				; CODE XREF: .text:6CBA58E9j
		jmp	short sub_6CBA58C0
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA5900	proc near		; CODE XREF: sub_6CBA59E0+3Ap
					; .text:6CBA5B35p ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi
		push	ebx
		mov	edx, [esp+8+arg_0]
		mov	ebx, [esp+8+arg_4]
		add	edx, [edx+3Ch]
		movzx	esi, word ptr [edx+6]
		movzx	eax, word ptr [edx+14h]
		test	esi, esi
		lea	eax, [edx+eax+18h]
		jz	short loc_6CBA5938
		xor	edx, edx
		nop

loc_6CBA5920:				; CODE XREF: sub_6CBA5900+36j
		mov	ecx, [eax+0Ch]
		cmp	ecx, ebx
		ja	short loc_6CBA592E
		add	ecx, [eax+8]
		cmp	ebx, ecx
		jb	short loc_6CBA593A

loc_6CBA592E:				; CODE XREF: sub_6CBA5900+25j
		add	edx, 1
		add	eax, 28h
		cmp	edx, esi
		jb	short loc_6CBA5920

loc_6CBA5938:				; CODE XREF: sub_6CBA5900+1Bj
		xor	eax, eax

loc_6CBA593A:				; CODE XREF: sub_6CBA5900+2Cj
		pop	ebx
		pop	esi
		retn
sub_6CBA5900	endp

; ---------------------------------------------------------------------------
		align 10h
		push	ebp
		push	edi
		push	esi
		xor	esi, esi
		push	ebx
		sub	esp, 1Ch
		mov	edi, [esp+30h]
		mov	[esp], edi
		call	_strlen
		cmp	eax, 8
		ja	short loc_6CBA5965
		cmp	word ptr ds:6CB80000h, 5A4Dh
		jz	short loc_6CBA5970

loc_6CBA5965:				; CODE XREF: .text:6CBA5958j
					; .text:6CBA597Cj ...
		add	esp, 1Ch
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5970:				; CODE XREF: .text:6CBA5963j
		mov	eax, 6CB80000h
		call	sub_6CBA58C0
		test	eax, eax
		jz	short loc_6CBA5965
		mov	eax, ds:6CB8003Ch
		lea	edx, [eax+6CB80000h]
		movzx	eax, word ptr [eax+6CB80014h]
		movzx	ebp, word ptr [edx+6]
		lea	ebx, [edx+eax+18h]
		test	ebp, ebp
		jnz	short loc_6CBA59AA
		jmp	short loc_6CBA5965
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA59A0:				; CODE XREF: .text:6CBA59C0j
		add	esi, 1
		add	ebx, 28h
		cmp	esi, ebp
		jnb	short loc_6CBA59D0

loc_6CBA59AA:				; CODE XREF: .text:6CBA599Aj
		mov	dword ptr [esp+8], 8
		mov	[esp+4], edi
		mov	[esp], ebx
		call	_strncmp
		test	eax, eax
		jnz	short loc_6CBA59A0
		add	esp, 1Ch
		mov	esi, ebx
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA59D0:				; CODE XREF: .text:6CBA59A8j
		add	esp, 1Ch
		xor	esi, esi
		pop	ebx
		mov	eax, esi
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA59E0	proc near		; CODE XREF: sub_6CBA4F80+49p

var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
arg_0		= dword	ptr  4

		push	ebx
		xor	ebx, ebx
		sub	esp, 8
		cmp	word ptr ds:6CB80000h, 5A4Dh
		jz	short loc_6CBA59F8

loc_6CBA59F1:				; CODE XREF: sub_6CBA59E0+24j
		add	esp, 8
		mov	eax, ebx
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6CBA59F8:				; CODE XREF: sub_6CBA59E0+Fj
		mov	eax, 6CB80000h
		call	sub_6CBA58C0
		test	eax, eax
		jz	short loc_6CBA59F1
		mov	eax, [esp+0Ch+arg_0]
		mov	[esp+0Ch+var_C], 6CB80000h
		sub	eax, 6CB80000h
		mov	[esp+0Ch+var_8], eax
		call	sub_6CBA5900
		add	esp, 8
		mov	ebx, eax
		mov	eax, ebx
		pop	ebx
		retn
sub_6CBA59E0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA5A30	proc near		; CODE XREF: sub_6CBA51C0+23p
		push	ebx
		xor	ebx, ebx
		cmp	word ptr ds:6CB80000h, 5A4Dh
		jz	short loc_6CBA5A42

loc_6CBA5A3E:				; CODE XREF: sub_6CBA5A30+1Ej
		mov	eax, ebx
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_6CBA5A42:				; CODE XREF: sub_6CBA5A30+Cj
		mov	eax, 6CB80000h
		call	sub_6CBA58C0
		test	eax, eax
		jz	short loc_6CBA5A3E
		mov	eax, ds:6CB8003Ch
		movzx	ebx, word ptr [eax+6CB80006h]
		mov	eax, ebx
		pop	ebx
		retn
sub_6CBA5A30	endp

; ---------------------------------------------------------------------------
		push	esi
		xor	esi, esi
		cmp	word ptr ds:6CB80000h, 5A4Dh
		push	ebx
		mov	ebx, [esp+0Ch]
		jz	short loc_6CBA5A78

loc_6CBA5A73:				; CODE XREF: .text:6CBA5A84j
					; .text:6CBA5AA2j
		mov	eax, esi
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6CBA5A78:				; CODE XREF: .text:6CBA5A71j
		mov	eax, 6CB80000h
		call	sub_6CBA58C0
		test	eax, eax
		jz	short loc_6CBA5A73
		mov	eax, ds:6CB8003Ch
		lea	ecx, [eax+6CB80000h]
		movzx	eax, word ptr [eax+6CB80014h]
		lea	edx, [ecx+eax+18h]
		movzx	ecx, word ptr [ecx+6]
		test	ecx, ecx
		jz	short loc_6CBA5A73
		xor	eax, eax

loc_6CBA5AA6:				; CODE XREF: .text:6CBA5ABBj
		test	byte ptr [edx+27h], 20h
		jz	short loc_6CBA5AB3
		test	ebx, ebx
		jz	short loc_6CBA5AC4
		sub	ebx, 1

loc_6CBA5AB3:				; CODE XREF: .text:6CBA5AAAj
		add	eax, 1
		add	edx, 28h
		cmp	eax, ecx
		jb	short loc_6CBA5AA6
		xor	esi, esi
		mov	eax, esi
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_6CBA5AC4:				; CODE XREF: .text:6CBA5AAEj
		mov	esi, edx
		mov	eax, esi
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA5AD0	proc near		; CODE XREF: sub_6CBA4F80+72p
		cmp	word ptr ds:6CB80000h, 5A4Dh
		jz	short loc_6CBA5AE0

loc_6CBA5ADB:				; CODE XREF: sub_6CBA5AD0+1Cj
		xor	eax, eax
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5AE0:				; CODE XREF: sub_6CBA5AD0+9j
		mov	eax, 6CB80000h
		call	sub_6CBA58C0
		test	eax, eax
		jz	short loc_6CBA5ADB
		mov	eax, 6CB80000h
		retn
sub_6CBA5AD0	endp

; ---------------------------------------------------------------------------
		align 10h
		xor	eax, eax
		cmp	word ptr ds:6CB80000h, 5A4Dh
		jz	short loc_6CBA5B10
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5B10:				; CODE XREF: .text:6CBA5B0Bj
		sub	esp, 8
		mov	eax, 6CB80000h
		call	sub_6CBA58C0
		test	eax, eax
		jz	short loc_6CBA5B46
		mov	eax, [esp+0Ch]
		mov	dword ptr [esp], 6CB80000h
		sub	eax, 6CB80000h
		mov	[esp+4], eax
		call	sub_6CBA5900
		test	eax, eax
		jz	short loc_6CBA5B50
		mov	eax, [eax+24h]
		not	eax
		shr	eax, 1Fh

loc_6CBA5B46:				; CODE XREF: .text:6CBA5B1Fj
					; .text:6CBA5B52j
		add	esp, 8
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5B50:				; CODE XREF: .text:6CBA5B3Cj
		xor	eax, eax
		jmp	short loc_6CBA5B46
; ---------------------------------------------------------------------------
		align 10h
		push	edi
		xor	edi, edi
		push	esi
		push	ebx
		sub	esp, 8
		cmp	word ptr ds:6CB80000h, 5A4Dh
		mov	ebx, [esp+18h]
		jz	short loc_6CBA5B80

loc_6CBA5B77:				; CODE XREF: .text:6CBA5B8Cj
					; .text:6CBA5B9Bj ...
		add	esp, 8
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_6CBA5B80:				; CODE XREF: .text:6CBA5B75j
		mov	eax, 6CB80000h
		call	sub_6CBA58C0
		test	eax, eax
		jz	short loc_6CBA5B77
		mov	eax, ds:6CB8003Ch
		mov	esi, [eax+6CB80080h]
		test	esi, esi
		jz	short loc_6CBA5B77
		mov	[esp+4], esi
		mov	dword ptr [esp], 6CB80000h
		call	sub_6CBA5900
		test	eax, eax
		jz	short loc_6CBA5B77
		add	esi, 6CB80000h
		mov	edx, esi
		jnz	short loc_6CBA5BC6
		jmp	short loc_6CBA5B77
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5BC0:				; CODE XREF: .text:6CBA5BD6j
		sub	ebx, 1
		add	edx, 14h

loc_6CBA5BC6:				; CODE XREF: .text:6CBA5BB9j
		mov	ecx, [edx+4]
		test	ecx, ecx
		jnz	short loc_6CBA5BD4
		mov	eax, [edx+0Ch]
		test	eax, eax
		jz	short loc_6CBA5BF0

loc_6CBA5BD4:				; CODE XREF: .text:6CBA5BCBj
		test	ebx, ebx
		jg	short loc_6CBA5BC0
		mov	edi, [edx+0Ch]
		add	esp, 8
		pop	ebx
		pop	esi
		add	edi, 6CB80000h
		mov	eax, edi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_6CBA5BF0:				; CODE XREF: .text:6CBA5BD2j
		add	esp, 8
		xor	edi, edi
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA5C00	proc near		; CODE XREF: sub_6CBA51C0+35p

arg_0		= byte ptr  4

		push	ecx
		push	eax
		cmp	eax, 1000h
		lea	ecx, [esp+8+arg_0]
		jb	short loc_6CBA5C22

loc_6CBA5C0D:				; CODE XREF: sub_6CBA5C00+20j
		sub	ecx, 1000h
		or	dword ptr [ecx], 0
		sub	eax, 1000h
		cmp	eax, 1000h
		ja	short loc_6CBA5C0D

loc_6CBA5C22:				; CODE XREF: sub_6CBA5C00+Bj
		sub	ecx, eax
		or	dword ptr [ecx], 0
		pop	eax
		pop	ecx
		retn
sub_6CBA5C00	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA5C30	proc near		; CODE XREF: sub_6CB81260+36p
					; sub_6CB81260+B0p ...
		mov	eax, 1
		retn	0Ch
sub_6CBA5C30	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_6CBA5C40	proc near		; CODE XREF: sub_6CB81260+EDp
					; sub_6CB81260+122p ...
		mov	eax, 1
		retn	0Ch
sub_6CBA5C40	endp

; ---------------------------------------------------------------------------
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _malloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION __amsg_exit]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _free]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION __initterm]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _memcpy]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _memset]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _memmove]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _memcmp]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __lock]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION ___dllonexit]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION __unlock]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _fwrite]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _vfprintf]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _abort]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _calloc]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION _strlen]
		align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _strncmp]
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_6CBA5CE0	proc near		; DATA XREF: .text:6CBA5D04o

var_18		= dword	ptr -18h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		call	sub_6CB81460
		mov	[esp+18h+var_18], offset sub_6CB814B0 ;	_onexit_t
		call	sub_6CBA4E00
		leave
		retn
sub_6CBA5CE0	endp

; ---------------------------------------------------------------------------
		align 10h
dword_6CBA5D00	dd 0FFFFFFFFh		; DATA XREF: sub_6CBA5510-4Cr
					; sub_6CBA5510:loc_6CBA54D3r ...
		dd offset sub_6CBA5CE0
		dd 0
		dd 0FFFFFFFFh
dword_6CBA5D10	dd 3Ch dup(0)		; DATA XREF: .data:off_6CBA6008o
		dd 80h dup(?)
_text		ends

; Section 2. (virtual address 00026000)
; Virtual size			: 0000001C (	 28.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00025200
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 6CBA6000h
		dd 0FFFFFFFFh
dword_6CBA6004	dd 0FFFFFFFFh		; DATA XREF: sub_6CB81260+11w
					; sub_6CB81260:loc_6CB812B1w
off_6CBA6008	dd offset dword_6CBA5D10 ; DATA	XREF: sub_6CBA51C0:loc_6CBA5490r
					; sub_6CBA51C0+2E2r ...
dword_6CBA600C	dd 2			; DATA XREF: TlsCallback_0+4r
					; TlsCallback_0+11w
dword_6CBA6010	dd 0BB40E64Eh		; DATA XREF: sub_6CBA5530+9r
					; sub_6CBA5530:loc_6CBA55BCw ...
dword_6CBA6014	dd 44BF19B1h		; DATA XREF: sub_6CBA5530+25w
					; sub_6CBA5530+92w ...
dword_6CBA6018	dd 0			; DATA XREF: sub_6CB81460r
					; sub_6CB81460+42o
		align 1000h
_data		ends

; Section 3. (virtual address 00027000)
; Virtual size			: 00000F80 (   3968.)
; Section size in file		: 00001000 (   4096.)
; Offset to raw	data for section: 00025400
; Flags	40600040: Data Readable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 6CBA7000h
; CHAR ModuleName[]
ModuleName	db 'libgcj-13.dll',0    ; DATA XREF: sub_6CB81460+Fo
; CHAR ProcName[]
ProcName	db '_Jv_RegisterClasses',0 ; DATA XREF: sub_6CB81460+28o
		align 4
; Exported entry   5. _lzo1b_1_compress_func
		public _lzo1b_1_compress_func
_lzo1b_1_compress_func dd offset sub_6CB83866 ;	DATA XREF: .rdata:off_6CBA7060o
; Exported entry   6. _lzo1b_2_compress_func
		public _lzo1b_2_compress_func
_lzo1b_2_compress_func dd offset sub_6CB83E72 ;	DATA XREF: .rdata:6CBA7064o
; Exported entry   7. _lzo1b_3_compress_func
		public _lzo1b_3_compress_func
_lzo1b_3_compress_func dd offset sub_6CB84556 ;	DATA XREF: .rdata:6CBA7068o
; Exported entry   8. _lzo1b_4_compress_func
		public _lzo1b_4_compress_func
_lzo1b_4_compress_func dd offset sub_6CB84D16 ;	DATA XREF: .rdata:6CBA706Co
; Exported entry   9. _lzo1b_5_compress_func
		public _lzo1b_5_compress_func
_lzo1b_5_compress_func dd offset sub_6CB854FE ;	DATA XREF: .rdata:6CBA7070o
; Exported entry  10. _lzo1b_6_compress_func
		public _lzo1b_6_compress_func
_lzo1b_6_compress_func dd offset sub_6CB85DAA ;	DATA XREF: .rdata:6CBA7074o
; Exported entry  11. _lzo1b_7_compress_func
		public _lzo1b_7_compress_func
_lzo1b_7_compress_func dd offset sub_6CB866A6 ;	DATA XREF: .rdata:6CBA7078o
; Exported entry  12. _lzo1b_8_compress_func
		public _lzo1b_8_compress_func
_lzo1b_8_compress_func dd offset sub_6CB86F66 ;	DATA XREF: .rdata:6CBA707Co
; Exported entry  14. _lzo1b_9_compress_func
		public _lzo1b_9_compress_func
_lzo1b_9_compress_func dd offset sub_6CB87A0E ;	DATA XREF: .rdata:6CBA7080o
; Exported entry  13. _lzo1b_99_compress_func
		public _lzo1b_99_compress_func
_lzo1b_99_compress_func	dd offset sub_6CB881B6
		align 20h
off_6CBA7060	dd offset _lzo1b_1_compress_func ; DATA	XREF: sub_6CB8A896+2Er
		dd offset _lzo1b_2_compress_func
		dd offset _lzo1b_3_compress_func
		dd offset _lzo1b_4_compress_func
		dd offset _lzo1b_5_compress_func
		dd offset _lzo1b_6_compress_func
		dd offset _lzo1b_7_compress_func
		dd offset _lzo1b_8_compress_func
		dd offset _lzo1b_9_compress_func
		align 20h
; Exported entry  17. _lzo1c_1_compress_func
		public _lzo1c_1_compress_func
_lzo1c_1_compress_func dd offset sub_6CB8A932 ;	DATA XREF: .rdata:off_6CBA70E0o
; Exported entry  18. _lzo1c_2_compress_func
		public _lzo1c_2_compress_func
_lzo1c_2_compress_func dd offset sub_6CB8AF66 ;	DATA XREF: .rdata:6CBA70E4o
; Exported entry  19. _lzo1c_3_compress_func
		public _lzo1c_3_compress_func
_lzo1c_3_compress_func dd offset sub_6CB8B672 ;	DATA XREF: .rdata:6CBA70E8o
; Exported entry  20. _lzo1c_4_compress_func
		public _lzo1c_4_compress_func
_lzo1c_4_compress_func dd offset sub_6CB8BE5A ;	DATA XREF: .rdata:6CBA70ECo
; Exported entry  21. _lzo1c_5_compress_func
		public _lzo1c_5_compress_func
_lzo1c_5_compress_func dd offset sub_6CB8C68E ;	DATA XREF: .rdata:6CBA70F0o
; Exported entry  22. _lzo1c_6_compress_func
		public _lzo1c_6_compress_func
_lzo1c_6_compress_func dd offset sub_6CB8CF8A ;	DATA XREF: .rdata:6CBA70F4o
; Exported entry  23. _lzo1c_7_compress_func
		public _lzo1c_7_compress_func
_lzo1c_7_compress_func dd offset sub_6CB8D8D6 ;	DATA XREF: .rdata:6CBA70F8o
; Exported entry  24. _lzo1c_8_compress_func
		public _lzo1c_8_compress_func
_lzo1c_8_compress_func dd offset sub_6CB8E1E2 ;	DATA XREF: .rdata:6CBA70FCo
; Exported entry  26. _lzo1c_9_compress_func
		public _lzo1c_9_compress_func
_lzo1c_9_compress_func dd offset sub_6CB8ECDA ;	DATA XREF: .rdata:6CBA7100o
; Exported entry  25. _lzo1c_99_compress_func
		public _lzo1c_99_compress_func
_lzo1c_99_compress_func	dd offset sub_6CB8F4D6
		align 20h
off_6CBA70E0	dd offset _lzo1c_1_compress_func ; DATA	XREF: sub_6CB91D8E+2Er
		dd offset _lzo1c_2_compress_func
		dd offset _lzo1c_3_compress_func
		dd offset _lzo1c_4_compress_func
		dd offset _lzo1c_5_compress_func
		dd offset _lzo1c_6_compress_func
		dd offset _lzo1c_7_compress_func
		dd offset _lzo1c_8_compress_func
		dd offset _lzo1c_9_compress_func
		align 20h
dword_6CBA7120	dd 3 dup(0)		; DATA XREF: lzo1x_999_compress_level+56o
					; lzo1x_999_compress_level+6Ao	...
		dd 8
dword_6CBA7130	dd 4, 4	dup(0)		; DATA XREF: lzo1x_999_compress_level+2Fo
					; lzo1x_999_compress_level+43o
		dd 10h,	8, 4 dup(0)
		dd 20h,	10h, 0
		dd 1, 2	dup(4),	2 dup(10h), 0
		dd 1, 8, 10h, 2	dup(20h), 0
		dd 1, 8, 10h, 2	dup(80h), 0
		dd 2, 8, 20h, 80h, 100h, 0
		dd 2, 20h, 80h,	2 dup(800h), 1,	2, 3 dup(800h),	1000h
		dd 1, 2	dup(0)
dword_6CBA7200	dd 3 dup(0)		; DATA XREF: lzo1y_999_compress_level+56o
					; lzo1y_999_compress_level+6Ao	...
		dd 8
dword_6CBA7210	dd 4, 4	dup(0)		; DATA XREF: lzo1y_999_compress_level+2Fo
					; lzo1y_999_compress_level+43o
		dd 10h,	8, 4 dup(0)
		dd 20h,	10h, 0
		dd 1, 2	dup(4),	2 dup(10h), 0
		dd 1, 8, 10h, 2	dup(20h), 0
		dd 1, 8, 10h, 2	dup(80h), 0
		dd 2, 8, 20h, 80h, 100h, 0
		dd 2, 20h, 80h,	2 dup(800h), 1,	2, 3 dup(800h),	1000h
		dd 1, 2	dup(0)
dword_6CBA72E0	dd 3 dup(0)		; DATA XREF: lzo1z_999_compress_level+56o
					; lzo1z_999_compress_level+6Ao	...
		dd 8
dword_6CBA72F0	dd 4, 4	dup(0)		; DATA XREF: lzo1z_999_compress_level+2Fo
					; lzo1z_999_compress_level+43o
		dd 10h,	8, 4 dup(0)
		dd 20h,	10h, 0
		dd 1, 2	dup(4),	2 dup(10h), 0
		dd 1, 8, 10h, 2	dup(20h), 0
		dd 1, 8, 10h, 2	dup(80h), 0
		dd 2, 8, 20h, 80h, 100h, 0
		dd 2, 20h, 80h,	2 dup(800h), 1,	2, 3 dup(800h),	1000h
		dd 1, 2	dup(0)
dword_6CBA73C0	dd 0			; DATA XREF: lzo_get_crc32_table+3o
					; lzo_crc32+37r ...
		dd 77073096h, 0EE0E612Ch, 990951BAh, 76DC419h, 706AF48Fh
		dd 0E963A535h, 9E6495A3h, 0EDB8832h, 79DCB8A4h,	0E0D5E91Eh
		dd 97D2D988h, 9B64C2Bh,	7EB17CBDh, 0E7B82D07h, 90BF1D91h
		dd 1DB71064h, 6AB020F2h, 0F3B97148h, 84BE41DEh,	1ADAD47Dh
		dd 6DDDE4EBh, 0F4D4B551h, 83D385C7h, 136C9856h,	646BA8C0h
		dd 0FD62F97Ah, 8A65C9ECh, 14015C4Fh, 63066CD9h,	0FA0F3D63h
		dd 8D080DF5h, 3B6E20C8h, 4C69105Eh, 0D56041E4h,	0A2677172h
		dd 3C03E4D1h, 4B04D447h, 0D20D85FDh, 0A50AB56Bh, 35B5A8FAh
		dd 42B2986Ch, 0DBBBC9D6h, 0ACBCF940h, 32D86CE3h, 45DF5C75h
		dd 0DCD60DCFh, 0ABD13D59h, 26D930ACh, 51DE003Ah, 0C8D75180h
		dd 0BFD06116h, 21B4F4B5h, 56B3C423h, 0CFBA9599h, 0B8BDA50Fh
		dd 2802B89Eh, 5F058808h, 0C60CD9B2h, 0B10BE924h, 2F6F7C87h
		dd 58684C11h, 0C1611DABh, 0B6662D3Dh, 76DC4190h, 1DB7106h
		dd 98D220BCh, 0EFD5102Ah, 71B18589h, 6B6B51Fh, 9FBFE4A5h
		dd 0E8B8D433h, 7807C9A2h, 0F00F934h, 9609A88Eh,	0E10E9818h
		dd 7F6A0DBBh, 86D3D2Dh,	91646C97h, 0E6635C01h, 6B6B51F4h
		dd 1C6C6162h, 856530D8h, 0F262004Eh, 6C0695EDh,	1B01A57Bh
		dd 8208F4C1h, 0F50FC457h, 65B0D9C6h, 12B7E950h,	8BBEB8EAh
		dd 0FCB9887Ch, 62DD1DDFh, 15DA2D49h, 8CD37CF3h,	0FBD44C65h
		dd 4DB26158h, 3AB551CEh, 0A3BC0074h, 0D4BB30E2h, 4ADFA541h
		dd 3DD895D7h, 0A4D1C46Dh, 0D3D6F4FBh, 4369E96Ah, 346ED9FCh
		dd 0AD678846h, 0DA60B8D0h, 44042D73h, 33031DE5h, 0AA0A4C5Fh
		dd 0DD0D7CC9h, 5005713Ch, 270241AAh, 0BE0B1010h, 0C90C2086h
		dd 5768B525h, 206F85B3h, 0B966D409h, 0CE61E49Fh, 5EDEF90Eh
		dd 29D9C998h, 0B0D09822h, 0C7D7A8B4h, 59B33D17h, 2EB40D81h
		dd 0B7BD5C3Bh, 0C0BA6CADh, 0EDB88320h, 9ABFB3B6h, 3B6E20Ch
		dd 74B1D29Ah, 0EAD54739h, 9DD277AFh, 4DB2615h, 73DC1683h
		dd 0E3630B12h, 94643B84h, 0D6D6A3Eh, 7A6A5AA8h,	0E40ECF0Bh
		dd 9309FF9Dh, 0A00AE27h, 7D079EB1h, 0F00F9344h,	8708A3D2h
		dd 1E01F268h, 6906C2FEh, 0F762575Dh, 806567CBh,	196C3671h
		dd 6E6B06E7h, 0FED41B76h, 89D32BE0h, 10DA7A5Ah,	67DD4ACCh
		dd 0F9B9DF6Fh, 8EBEEFF9h, 17B7BE43h, 60B08ED5h,	0D6D6A3E8h
		dd 0A1D1937Eh, 38D8C2C4h, 4FDFF252h, 0D1BB67F1h, 0A6BC5767h
		dd 3FB506DDh, 48B2364Bh, 0D80D2BDAh, 0AF0A1B4Ch, 36034AF6h
		dd 41047A60h, 0DF60EFC3h, 0A867DF55h, 316E8EEFh, 4669BE79h
		dd 0CB61B38Ch, 0BC66831Ah, 256FD2A0h, 5268E236h, 0CC0C7795h
		dd 0BB0B4703h, 220216B9h, 5505262Fh, 0C5BA3BBEh, 0B2BD0B28h
		dd 2BB45A92h, 5CB36A04h, 0C2D7FFA7h, 0B5D0CF31h, 2CD99E8Bh
		dd 5BDEAE1Dh, 9B64C2B0h, 0EC63F226h, 756AA39Ch,	26D930Ah
		dd 9C0906A9h, 0EB0E363Fh, 72076785h, 5005713h, 95BF4A82h
		dd 0E2B87A14h, 7BB12BAEh, 0CB61B38h, 92D28E9Bh,	0E5D5BE0Dh
		dd 7CDCEFB7h, 0BDBDF21h, 86D3D2D4h, 0F1D4E242h,	68DDB3F8h
		dd 1FDA836Eh, 81BE16CDh, 0F6B9265Bh, 6FB077E1h,	18B74777h
		dd 88085AE6h, 0FF0F6A70h, 66063BCAh, 11010B5Ch,	8F659EFFh
		dd 0F862AE69h, 616BFFD3h, 166CCF45h, 0A00AE278h, 0D70DD2EEh
		dd 4E048354h, 3903B3C2h, 0A7672661h, 0D06016F7h, 4969474Dh
		dd 3E6E77DBh, 0AED16A4Ah, 0D9D65ADCh, 40DF0B66h, 37D83BF0h
		dd 0A9BCAE53h, 0DEBB9EC5h, 47B2CF7Fh, 30B5FFE9h, 0BDBDF21Ch
		dd 0CABAC28Ah, 53B39330h, 24B4A3A6h, 0BAD03605h, 0CDD70693h
		dd 54DE5729h, 23D967BFh, 0B3667A2Eh, 0C4614AB8h, 5D681B02h
		dd 2A6F2B94h, 0B40BBE37h, 0C30C8EA1h, 5A05DF1Bh, 2D02EF8Dh
a2_09		db '2.09',0             ; DATA XREF: lzo_copyright+3o
a2_09_0		db '2.09',0             ; DATA XREF: lzo_version_string+3o
					; _lzo_version_string+3o
aFeb042015	db 'Feb 04 2015',0      ; DATA XREF: lzo_version_date+3o
					; _lzo_version_date+3o
		align 4
off_6CBA77D8	dd offset TlsCallback_0	; DATA XREF: sub_6CB81040:loc_6CB8112Ar
aMingwW64Runtim	db 'Mingw-w64 runtime failure:',0Ah,0 ; DATA XREF: sub_6CBA4F20+1Do
; char aAddressPHasNoI[]
aAddressPHasNoI	db 'Address %p has no image-section',0 ; DATA XREF: sub_6CBA4F80+21Bo
; char aVirtualqueryFa[]
aVirtualqueryFa	db '  VirtualQuery failed for %d bytes at address %p',0
					; DATA XREF: sub_6CBA4F80+207o
					; sub_6CBA4F80+233o ...
		align 4
; char Format[]
Format		db '  VirtualProtect failed with code 0x%x',0 ; DATA XREF: sub_6CBA4F80+1D9o
		align 4
; char aUnknownPseud_0[]
aUnknownPseud_0	db '  Unknown pseudo relocation protocol version %d.',0Ah,0
					; DATA XREF: sub_6CBA51C0+2C4o
		align 4
; char aUnknownPseudoR[]
aUnknownPseudoR	db '  Unknown pseudo relocation bit size %d.',0Ah,0
					; DATA XREF: sub_6CBA51C0+EEo
		align 4
off_6CBA78D4	dd offset dword_6CBA8320 ; DATA	XREF: .text:6CBA5638o
		dd offset dword_6CBA8040
aGccGnu4_8_2	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_0	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_1	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_2	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_3	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_4	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_5	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_6	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_7	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_8	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_9	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_10	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_11	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_12	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_13	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_14	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_15	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_16	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_17	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_18	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_19	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_20	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_21	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_22	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_23	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_24	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_25	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_26	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_27	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_28	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_29	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_30	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_31	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_32	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_33	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_34	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_35	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_36	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_37	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_38	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_39	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_40	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_41	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_42	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_43	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_44	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_45	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_46	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_47	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_48	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_49	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_50	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_51	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_52	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_53	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_54	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_55	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_56	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_57	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_58	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_59	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_60	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_61	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_62	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_63	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_64	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_65	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_66	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_67	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_68	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_69	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_70	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_71	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_72	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_73	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_74	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_75	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_76	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_77	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_78	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_79	db 'GCC: (GNU) 4.8.2',0
		align 10h
aGccGnu4_8_2_80	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_81	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_82	db 'GCC: (GNU) 4.8.2',0
		align 4
aGccGnu4_8_2_83	db 'GCC: (GNU) 4.8.2',0
		align 10h
dword_6CBA7F80	dd 0			; DATA XREF: sub_6CBA51C0+52o
					; sub_6CBA51C0+57o ...
dword_6CBA7F84	dd 0			; DATA XREF: sub_6CBA51C0+7Br
dword_6CBA7F88	dd 0			; DATA XREF: sub_6CBA51C0+88r
dword_6CBA7F8C	dd 1Dh dup(0)		; DATA XREF: sub_6CBA51C0+8Eo
_rdata		ends

; Section 4. (virtual address 00028000)
; Virtual size			: 000003C4 (	964.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0600080: Bss Readable Writable
; Alignment	: 32 bytes
; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 6CBA8000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_6CBA8000	dd ?			; DATA XREF: sub_6CB81040+10r
					; sub_6CB81040+28w ...
		align 10h
TlsIndex	dd ?			; DATA XREF: .tls:TlsIndex_ptro
dword_6CBA8014	dd ?			; DATA XREF: DllEntryPoint+7w
dword_6CBA8018	dd ?			; DATA XREF: sub_6CBA51C0r
					; sub_6CBA51C0+19w
dword_6CBA801C	dd ?			; DATA XREF: sub_6CBA4F80+Er
					; sub_6CBA4F80:loc_6CBA5046w ...
dword_6CBA8020	dd ?			; DATA XREF: sub_6CBA4F80+1Fr
					; sub_6CBA4F80+60r ...
dword_6CBA8024	dd ?			; DATA XREF: sub_6CBA5510r
					; sub_6CBA5510:loc_6CBA5520w
		align 20h
dword_6CBA8040	dd 2Bh dup(?)		; DATA XREF: .rdata:6CBA78D8o
dword_6CBA80EC	dd ?			; DATA XREF: .text:6CBA561Aw
		dd 2 dup(?)
dword_6CBA80F8	dd ?			; DATA XREF: .text:6CBA5606w
		dd 2 dup(?)
dword_6CBA8104	dd ?			; DATA XREF: .text:6CBA55ECw
		dd 86h dup(?)
dword_6CBA8320	dd ?			; DATA XREF: .text:6CBA55F2w
					; .rdata:off_6CBA78D4o
dword_6CBA8324	dd ?			; DATA XREF: .text:6CBA55FCw
		dd ?
dword_6CBA832C	dd ?			; DATA XREF: .text:6CBA560Bw
		align 80h
dword_6CBA8380	dd ?			; DATA XREF: sub_6CBA5670+16r
					; .text:6CBA5742r ...
dword_6CBA8384	dd ?			; DATA XREF: .text:6CBA56FAr
					; .text:6CBA5787r ...
; struct _RTL_CRITICAL_SECTION CriticalSection
CriticalSection	_RTL_CRITICAL_SECTION <?> ; DATA XREF: sub_6CBA5670+9o
					; sub_6CBA5670:loc_6CBA56C9o ...
		dd ?
dword_6CBA83A4	dd ?			; DATA XREF: sub_6CB81000+21w
					; sub_6CB81040+143r ...
dword_6CBA83A8	dd ?			; DATA XREF: sub_6CB81000+1Cw
					; sub_6CB81040:loc_6CB81170r ...
dword_6CBA83AC	dd ?			; DATA XREF: sub_6CB81040+43w
					; sub_6CB81040+ABw ...
dword_6CBA83B0	dd ?			; DATA XREF: sub_6CB81040+4Fr
					; sub_6CB81040:loc_6CB810F9r ...
		align 1000h
_bss		ends

;
; Imports from KERNEL32.dll
;
; Section 6. (virtual address 0002A000)
; Virtual size			: 000004A4 (   1188.)
; Section size in file		: 00000600 (   1536.)
; Offset to raw	data for section: 00027400
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Externs
; _idata
; void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp__DeleteCriticalSection@4:dword ; CODE XREF:	sub_6CBA5820+49p
					; DATA XREF: sub_6CBA5820+49r
; void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp__EnterCriticalSection@4:dword ; CODE XREF: sub_6CBA5670+10p
					; .text:6CBA573Cp ...
; HANDLE __stdcall GetCurrentProcess()
		extrn __imp__GetCurrentProcess@0:dword ; CODE XREF: .text:6CBA5648p
					; DATA XREF: .text:6CBA5648r
; DWORD	__stdcall GetCurrentProcessId()
		extrn __imp__GetCurrentProcessId@0:dword ; CODE	XREF: sub_6CBA5530+49p
					; DATA XREF: sub_6CBA5530+49r
; DWORD	__stdcall GetCurrentThreadId()
		extrn __imp__GetCurrentThreadId@0:dword	; CODE XREF: sub_6CBA5530+51p
					; DATA XREF: sub_6CBA5530+51r
; DWORD	__stdcall GetLastError()
		extrn __imp__GetLastError@0:dword ; CODE XREF: sub_6CBA4F80+1D3p
					; DATA XREF: sub_6CBA4F80+1D3r	...
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
		extrn __imp__GetModuleHandleA@4:dword ;	CODE XREF: sub_6CB81460+16p
					; DATA XREF: sub_6CB81460+16r
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
		extrn __imp__GetProcAddress@8:dword ; CODE XREF: sub_6CB81460+33p
					; DATA XREF: sub_6CB81460+33r
; void __stdcall GetSystemTimeAsFileTime(LPFILETIME lpSystemTimeAsFileTime)
		extrn __imp__GetSystemTimeAsFileTime@4:dword ; CODE XREF: sub_6CBA5530+38p
					; DATA XREF: sub_6CBA5530+38r
; DWORD	__stdcall GetTickCount()
		extrn __imp__GetTickCount@0:dword ; CODE XREF: sub_6CBA5530+5Ap
					; DATA XREF: sub_6CBA5530+5Ar
; void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp__InitializeCriticalSection@4:dword ; CODE XREF: sub_6CBA5820+77p
					; DATA XREF: sub_6CBA5820+77r
; void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
		extrn __imp__LeaveCriticalSection@4:dword ; CODE XREF: sub_6CBA5670+60p
					; .text:6CBA575Ap ...
; BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount)
		extrn __imp__QueryPerformanceCounter@4:dword ; CODE XREF: sub_6CBA5530+69p
					; DATA XREF: sub_6CBA5530+69r
; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
		extrn __imp__SetUnhandledExceptionFilter@4:dword
					; CODE XREF: .text:6CBA562Fp
					; DATA XREF: .text:6CBA562Fr
; void __stdcall Sleep(DWORD dwMilliseconds)
		extrn __imp__Sleep@4:dword ; CODE XREF:	sub_6CB81040+37p
					; sub_6CB81040+A4p
					; DATA XREF: ...
; BOOL __stdcall TerminateProcess(HANDLE hProcess, UINT	uExitCode)
		extrn __imp__TerminateProcess@8:dword ;	CODE XREF: .text:6CBA5659p
					; DATA XREF: .text:6CBA5659r
; LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)
		extrn __imp__TlsGetValue@4:dword ; CODE	XREF: sub_6CBA5670+35p
					; DATA XREF: sub_6CBA5670+35r
; LONG __stdcall UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
		extrn __imp__UnhandledExceptionFilter@4:dword ;	CODE XREF: .text:6CBA563Fp
					; DATA XREF: .text:6CBA563Fr
; BOOL __stdcall VirtualProtect(LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect)
		extrn __imp__VirtualProtect@16:dword ; CODE XREF: sub_6CBA4F80+147p
					; sub_6CBA4F80+187p ...
; SIZE_T __stdcall VirtualQuery(LPCVOID	lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, SIZE_T dwLength)
		extrn __imp__VirtualQuery@12:dword ; CODE XREF:	sub_6CBA4F80+A7p
					; sub_6CBA4F80+DCp ...

;
; Imports from msvcrt.dll
;
		extrn __imp____dllonexit:dword ; DATA XREF: ___dllonexitr
		extrn __imp___amsg_exit:dword ;	DATA XREF: __amsg_exitr
		extrn __imp___initterm:dword ; DATA XREF: __inittermr
		extrn __imp___iob:dword	; DATA XREF: sub_6CBA4F20+4r
					; sub_6CBA4F20+3Cr
		extrn __imp___lock:dword ; DATA	XREF: __lockr
; _onexit_t __cdecl __onexit(_onexit_t Func)
		extrn __imp___onexit:dword ; CODE XREF:	sub_6CBA4D40+A7p
					; DATA XREF: sub_6CBA4D40+A7r
		extrn __imp___unlock:dword ; DATA XREF:	__unlockr
; void *__cdecl	_calloc(size_t NumOfElements, size_t SizeOfElements)
		extrn __imp__calloc:dword ; DATA XREF: _callocr
; void __cdecl _free(void *Memory)
		extrn __imp__free:dword	; DATA XREF: _freer
; size_t __cdecl _fwrite(const void *Str, size_t Size, size_t Count, FILE *File)
		extrn __imp__fwrite:dword ; DATA XREF: _fwriter
; void *__cdecl	_malloc(size_t Size)
		extrn __imp__malloc:dword ; DATA XREF: _mallocr
; int __cdecl _memcmp(const void *Buf1,	const void *Buf2, size_t Size)
		extrn __imp__memcmp:dword ; DATA XREF: _memcmpr
; void *__cdecl	_memcpy(void *Dst, const void *Src, size_t Size)
		extrn __imp__memcpy:dword ; DATA XREF: _memcpyr
; void *__cdecl	_memmove(void *Dst, const void *Src, size_t Size)
		extrn __imp__memmove:dword ; DATA XREF:	_memmover
; void *__cdecl	_memset(void *Dst, int Val, size_t Size)
		extrn __imp__memset:dword ; DATA XREF: _memsetr
; size_t __cdecl _strlen(const char *Str)
		extrn __imp__strlen:dword ; DATA XREF: _strlenr
; int __cdecl _strncmp(const char *Str1, const char *Str2, size_t MaxCount)
		extrn __imp__strncmp:dword ; DATA XREF:	_strncmpr
; void __cdecl _abort()
		extrn __imp__abort:dword ; DATA	XREF: _abortr
; int __cdecl _vfprintf(FILE *File, const char *Format,	va_list	ArgList)
		extrn __imp__vfprintf:dword ; DATA XREF: _vfprintfr


; Section 7. (virtual address 0002B000)
; Virtual size			: 0000002C (	 44.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00027A00
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_CRT		segment	dword public 'DATA' use32
		assume cs:_CRT
		;org 6CBAB000h
dword_6CBAB000	dd 0			; DATA XREF: sub_6CB81040+1FCo
dword_6CBAB004	dd 0			; DATA XREF: sub_6CB81040:loc_6CB81234o
dword_6CBAB008	dd 0			; DATA XREF: sub_6CB81040+1C8o
		dd offset sub_6CB81000
dword_6CBAB010	dd 2 dup(0)		; DATA XREF: sub_6CB81040:loc_6CB81200o
TlsCallbacks	dd offset TlsCallback_0	; DATA XREF: .tls:TlsCallbacks_ptro
		dd offset TlsCallback_1
		dd 0
		align 8
dword_6CBAB028	dd 76h dup(0)		; DATA XREF: TlsCallback_0:loc_6CBA4EA1o
					; TlsCallback_0+36o ...
		align 1000h
_CRT		ends

; Section 8. (virtual address 0002C000)
; Virtual size			: 00000020 (	 32.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00027C00
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_tls		segment	dword public 'DATA' use32
		assume cs:_tls
		;org 6CBAC000h
TlsStart	dd 0			; DATA XREF: .tls:TlsDirectoryo
TlsDirectory	dd offset TlsStart
TlsEnd_ptr	dd offset TlsEnd
TlsIndex_ptr	dd offset TlsIndex
TlsCallbacks_ptr dd offset TlsCallbacks
TlsSizeOfZeroFill dd 0
TlsCharacteristics dd 0
TlsEnd		dd 79h dup(0)		; DATA XREF: .tls:TlsEnd_ptro
		align 1000h
_tls		ends


		end DllEntryPoint
